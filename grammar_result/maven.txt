

7 Mot inconnu : EE [[141:143]] => **Apache Maven** est un outil logiciel libre pour la gestion et l'automatisation de production des projets logiciels Java en général et Java EE en particulier. L'objectif recherché est comparable au système Make sous Unix : produire un logiciel à partir de ses sources, en optimisant les tâches réalisées à cette fin et en garantissant le bon ordre de fabrication. <|> ee
7 Mot inconnu : EE [[141:143]] => **Apache Maven** est un outil logiciel libre pour la gestion et l'automatisation de production des projets logiciels Java en général et Java EE en particulier. L'objectif recherché est comparable au système Make sous Unix : produire un logiciel à partir de ses sources, en optimisant les tâches réalisées à cette fin et en garantissant le bon ordre de fabrication. <|> ee
7 Mot inconnu : Make [[207:211]] => **Apache Maven** est un outil logiciel libre pour la gestion et l'automatisation de production des projets logiciels Java en général et Java EE en particulier. L'objectif recherché est comparable au système Make sous Unix : produire un logiciel à partir de ses sources, en optimisant les tâches réalisées à cette fin et en garantissant le bon ordre de fabrication. <|> make
7 Mot inconnu : Make [[207:211]] => **Apache Maven** est un outil logiciel libre pour la gestion et l'automatisation de production des projets logiciels Java en général et Java EE en particulier. L'objectif recherché est comparable au système Make sous Unix : produire un logiciel à partir de ses sources, en optimisant les tâches réalisées à cette fin et en garantissant le bon ordre de fabrication. <|> make


9 Mot inconnu : Ant [[29:32]] => Il est semblable à l'outil [[Ant]], mais fournit des moyens de configuration plus simples, eux aussi basés sur le format XML. Maven est géré par l'organisation //Apache Software Foundation//. Précédemment, Maven était une branche de l'organisation //Jakarta Project//. <|> ant
9 Mot inconnu : Ant [[29:32]] => Il est semblable à l'outil [[Ant]], mais fournit des moyens de configuration plus simples, eux aussi basés sur le format XML. Maven est géré par l'organisation //Apache Software Foundation//. Précédemment, Maven était une branche de l'organisation //Jakarta Project//. <|> ant
9 Mot inconnu : Foundation [[178:188]] => Il est semblable à l'outil [[Ant]], mais fournit des moyens de configuration plus simples, eux aussi basés sur le format XML. Maven est géré par l'organisation //Apache Software Foundation//. Précédemment, Maven était une branche de l'organisation //Jakarta Project//. <|> foundation
9 Mot inconnu : Foundation [[178:188]] => Il est semblable à l'outil [[Ant]], mais fournit des moyens de configuration plus simples, eux aussi basés sur le format XML. Maven est géré par l'organisation //Apache Software Foundation//. Précédemment, Maven était une branche de l'organisation //Jakarta Project//. <|> foundation
9 Mot inconnu : Project [[258:265]] => Il est semblable à l'outil [[Ant]], mais fournit des moyens de configuration plus simples, eux aussi basés sur le format XML. Maven est géré par l'organisation //Apache Software Foundation//. Précédemment, Maven était une branche de l'organisation //Jakarta Project//. <|> project
9 Mot inconnu : Project [[258:265]] => Il est semblable à l'outil [[Ant]], mais fournit des moyens de configuration plus simples, eux aussi basés sur le format XML. Maven est géré par l'organisation //Apache Software Foundation//. Précédemment, Maven était une branche de l'organisation //Jakarta Project//. <|> project


11 Mot inconnu : Project [[50:57]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> project
11 Mot inconnu : Project [[50:57]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> project
11 Mot inconnu : Object [[58:64]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> object
11 Mot inconnu : Object [[58:64]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> object
11 Mot inconnu : Model [[65:70]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> model
11 Mot inconnu : Model [[65:70]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> model
11 Mot inconnu : POM [[74:77]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> pom
11 Mot inconnu : POM [[74:77]] => Maven utilise un paradigme connu sous le nom de //Project Object Model// (POM) afin de décrire un projet logiciel, ses dépendances avec des modules externes et l'ordre à suivre pour sa production. Il est livré avec un grand nombre de tâches pré-définies, comme la compilation de code Java ou encore sa modularisation. <|> pom


18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


33 Participe passé de devoir : “dû”. [[40:42]] => Normalement, l'installation du paquet a du effectuer toutes les étapes de configuration. Cette section ne devrait donc concerner que les gens qui opèrent une installation en mode manuel.  <|> du => suggestions : ['dû']
33 Participe passé de devoir : “dû”. [[40:42]] => Normalement, l'installation du paquet a du effectuer toutes les étapes de configuration. Cette section ne devrait donc concerner que les gens qui opèrent une installation en mode manuel.  <|> du => suggestions : ['dû']
33 Incohérence avec “du” : “effectuer” est un verbe. [[43:52]] => Normalement, l'installation du paquet a du effectuer toutes les étapes de configuration. Cette section ne devrait donc concerner que les gens qui opèrent une installation en mode manuel.  <|> effectuer => suggestions : ['effectué', 'effectués', 'effectuées', 'effectuée']
33 Incohérence avec “du” : “effectuer” est un verbe. [[43:52]] => Normalement, l'installation du paquet a du effectuer toutes les étapes de configuration. Cette section ne devrait donc concerner que les gens qui opèrent une installation en mode manuel.  <|> effectuer => suggestions : ['effectué', 'effectués', 'effectuées', 'effectuée']
33 Espace(s) en fin de ligne à supprimer. [[186:187]] => Normalement, l'installation du paquet a du effectuer toutes les étapes de configuration. Cette section ne devrait donc concerner que les gens qui opèrent une installation en mode manuel.  <|>   => suggestions : ['']
33 Espace(s) en fin de ligne à supprimer. [[186:187]] => Normalement, l'installation du paquet a du effectuer toutes les étapes de configuration. Cette section ne devrait donc concerner que les gens qui opèrent une installation en mode manuel.  <|>   => suggestions : ['']


36 Mot inconnu : M2_HOME [[0:7]] => M2_HOME="/usr/local/apache-maven/apache-maven-3.0.3" <|> m2_home
36 Mot inconnu : M2_HOME [[0:7]] => M2_HOME="/usr/local/apache-maven/apache-maven-3.0.3" <|> m2_home
36 Guillemets typographiques fermants. [[51:52]] => M2_HOME="/usr/local/apache-maven/apache-maven-3.0.3" <|> " => suggestions : ['\xa0»', '”']


37 Mot inconnu : M2_HOME [[4:11]] => M2=$M2_HOME/bin <|> m2_home
37 Mot inconnu : M2_HOME [[4:11]] => M2=$M2_HOME/bin <|> m2_home


38 Mot inconnu : JAVA_HOME [[0:9]] => JAVA_HOME="/usr/lib/jvm/java-6-openjdk" <|> java_home
38 Mot inconnu : JAVA_HOME [[0:9]] => JAVA_HOME="/usr/lib/jvm/java-6-openjdk" <|> java_home
38 Guillemets typographiques fermants. [[38:39]] => JAVA_HOME="/usr/lib/jvm/java-6-openjdk" <|> " => suggestions : ['\xa0»', '”']


39 Mot inconnu : PATH [[0:4]] => PATH="$JAVA_HOME/bin:$M2:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games" <|> path
39 Mot inconnu : PATH [[0:4]] => PATH="$JAVA_HOME/bin:$M2:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games" <|> path
39 Mot inconnu : JAVA_HOME [[7:16]] => PATH="$JAVA_HOME/bin:$M2:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games" <|> java_home
39 Mot inconnu : JAVA_HOME [[7:16]] => PATH="$JAVA_HOME/bin:$M2:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games" <|> java_home


44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

