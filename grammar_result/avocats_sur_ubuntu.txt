10 Mot inconnu : NAVISTA => Le système nécessitait deux dispositifs de sécurité : un boitier NAVISTA faisant office de VPN et une clef de certification fournies par l'ordre des avocats utilisé par le navigateur internet pour le chiffrage et la sécurisation de la connexion au serveur. | navista

12 Mot inconnu : CUIFF => [[https://cuifavocats.com/read-offline/604/le-rpva-et-linux-la-suite.print|Me CUIFF a fait un descriptif assez complet de l'architecture du dispositif]] | cuiff

14 Mot inconnu : NAVISTA => Le boitier NAVISTA n'est plus nécessaire depuis le mois d'avril 2016. Désormais la connexion au RPVA ne nécessite que l'installation d'une clef de sécurité permettant l'identification de l'utilisateur. | navista
14 Mot inconnu : RPVA => Le boitier NAVISTA n'est plus nécessaire depuis le mois d'avril 2016. Désormais la connexion au RPVA ne nécessite que l'installation d'une clef de sécurité permettant l'identification de l'utilisateur. | rpva

16 Mot inconnu : CNB => Cette clef est commandée auprès du CNB - organisme national fédérant les différentes organisations locales des avocats (les barreaux). | cnb
16 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Cette clef est commandée auprès du CNB - organisme national fédérant les différentes organisations locales des avocats (les barreaux). |  -  => suggestions : [' – ', ' — ', ' − ']

18 Mot inconnu : MacOs => L'avocat va récupérer auprès de son ordre local, une clef USB et des instructions d'installation et d'activation pour Windows et MacOs. | macos
22 Mot inconnu : GEMALTO => Ce tutoriel décrit une méthode permettant de le faire selon que vous disposiez d'un ancien modèle de clef (avant 2016 / Modèle ???) ou d'un nouveau modèle (après 2016 / GEMALTO ID PRIME MD 840). | gemalto
22 Mot inconnu : MD => Ce tutoriel décrit une méthode permettant de le faire selon que vous disposiez d'un ancien modèle de clef (avant 2016 / Modèle ???) ou d'un nouveau modèle (après 2016 / GEMALTO ID PRIME MD 840). | md

24 Confusion : “a” est une conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. => MISE A JOUR : Le tutoriel pour les nouvelles clefs grâce au travail magnifique de [https://aw-avocats.fr/| Me Romain WINCZEWSKI] | a => suggestions : ['À']
24 Mot inconnu : WINCZEWSKI => MISE A JOUR : Le tutoriel pour les nouvelles clefs grâce au travail magnifique de [https://aw-avocats.fr/| Me Romain WINCZEWSKI] | winczewski

32 Mot inconnu : IDGO => La clé est une //IDGO 800// qui nécessite de nouveaux drivers. | idgo

37 Espace(s) en fin de ligne à supprimer. => Installer les dépendances :  |   => suggestions : ['']

41 Mot inconnu : pcsc => Vérifier que le service pcsc est actif :  | pcsc
41 Espace(s) en fin de ligne à supprimer. => Vérifier que le service pcsc est actif :  |   => suggestions : ['']
45 Espace(s) en fin de ligne à supprimer. => Résultat (vérifier la présence de la mention active / running) :  |   => suggestions : ['']

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            └─25347 /usr/sbin/pcscd –foreground</code> |             => suggestions : ['']
54 Formatage des grands nombres. =>            └─25347 /usr/sbin/pcscd –foreground</code> | 25347 => suggestions : ['25\xa0347']
54 Il manque un espace à côté du tiret. =>            └─25347 /usr/sbin/pcscd –foreground</code> |  – => suggestions : [' – ', ' — ']
54 Mot inconnu : foreground =>            └─25347 /usr/sbin/pcscd –foreground</code> | foreground

57 Mot inconnu : RPVA => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | rpva
57 Mot inconnu : lsusb => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | lsusb
57 Mot inconnu : Gemalto => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | gemalto
57 Mot inconnu : GemPC => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | gempc
57 Mot inconnu : Key => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | key
57 Mot inconnu : SmartCard => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | smartcard
57 Mot inconnu : Reader => Insérer la clé RPVA et vérifier que le résultat de la commande lsusb comprend bien la ligne Gemalto GemPC Key SmartCard Reader (seconde ligne dans l'exemple de résultat ci-dessous) : | reader
61 Espace(s) en fin de ligne à supprimer. => Résultat :  |   => suggestions : ['']

68 Mot inconnu : Device => Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</code> | device
68 Mot inconnu : d6b => Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</code> | d6b
68 Il manque un espace. => Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</code> | 0001 => suggestions : [' 0001']
68 Mot inconnu : Foundation => Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</code> | foundation
68 Mot inconnu : root => Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub</code> | root

70 Mot inconnu : pcsc => Vérifier la reconnaissance de la clé par pcsc (on doit trouver la mention Gemalto USB Shell Token V2 dans le résultat) :  | pcsc
70 Mot inconnu : Gemalto => Vérifier la reconnaissance de la clé par pcsc (on doit trouver la mention Gemalto USB Shell Token V2 dans le résultat) :  | gemalto
70 Mot inconnu : V2 => Vérifier la reconnaissance de la clé par pcsc (on doit trouver la mention Gemalto USB Shell Token V2 dans le résultat) :  | v2
70 Espace(s) en fin de ligne à supprimer. => Vérifier la reconnaissance de la clé par pcsc (on doit trouver la mention Gemalto USB Shell Token V2 dans le résultat) :  |   => suggestions : ['']
74 Espace(s) en fin de ligne à supprimer. => Résultat :  |   => suggestions : ['']

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ATR: 3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00</code> |    => suggestions : ['']
83 Mot inconnu : ATR =>   ATR: 3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00</code> | atr
83 Mot inconnu : B0 =>   ATR: 3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00</code> | b0
83 Si “EF” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. =>   ATR: 3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00</code> | 00 ef => suggestions : ['00\xa0EF']
83 Mot inconnu : FE =>   ATR: 3B 7F 96 00 00 80 31 80 65 B0 85 03 00 EF 12 0F FE 82 90 00</code> | fe

88 Mot inconnu : Gemalto => La version la plus récente que j’ai pu trouver est un driver Gemalto dénommé SafeNetAutenticationClient, en version 10.7.77. | gemalto
88 Mot inconnu : SafeNetAutenticationClient => La version la plus récente que j’ai pu trouver est un driver Gemalto dénommé SafeNetAutenticationClient, en version 10.7.77. | safenetautenticationclient

90 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => On le trouve désormais facilement en .deb, comme en .rpm, à l’adresse suivante :  |  . => suggestions : ['. ', '.']
90 Mot inconnu : deb => On le trouve désormais facilement en .deb, comme en .rpm, à l’adresse suivante :  | deb
90 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => On le trouve désormais facilement en .deb, comme en .rpm, à l’adresse suivante :  |  . => suggestions : ['. ', '.']
90 Mot inconnu : rpm => On le trouve désormais facilement en .deb, comme en .rpm, à l’adresse suivante :  | rpm
90 Espace(s) en fin de ligne à supprimer. => On le trouve désormais facilement en .deb, comme en .rpm, à l’adresse suivante :  |   => suggestions : ['']

94 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Installer le paquet .deb :  |  . => suggestions : ['. ', '.']
94 Mot inconnu : deb => Installer le paquet .deb :  | deb
94 Espace(s) en fin de ligne à supprimer. => Installer le paquet .deb :  |   => suggestions : ['']

105 Mot inconnu : Ok => Importer tour à tour les quatre certificats en validant à chaque fois (touche Ok). | ok

107 Espace(s) en fin de ligne à supprimer. => Liens de téléchargement des certificats :  |   => suggestions : ['']

118 Espace(s) en fin de ligne à supprimer. => La clé toujours insérée, allez dans le menu **Outils/Options** du menu Firefox puis dans **Vie privée/Sécurité** (côté droit, en bas de page), puis cliquez sur **Périphériques de sécurité**.//  |   => suggestions : ['']

121 Espace(s) en fin de ligne à supprimer. => Dans l’onglet **Certificats**, cliquez sur **Périphériques de Sécurité**.//  |   => suggestions : ['']

124 Espace(s) en fin de ligne à supprimer. => Cliquez sur **Charger** pour définir le nouveau dispositif.//  |   => suggestions : ['']
127 Mot inconnu : TKM => Entrez le nom du module: TKM (ou autre, je ne crois pas que cela change quoi que ce soit).//  | tkm
127 Espace(s) en fin de ligne à supprimer. => Entrez le nom du module: TKM (ou autre, je ne crois pas que cela change quoi que ce soit).//  |   => suggestions : ['']

130 Mot inconnu : libeTPkcs11 => Cliquez sur **Parcourir** et rechercher libeTPkcs11.so dans usr/lib64.//  | libetpkcs11
130 Mot inconnu : so => Cliquez sur **Parcourir** et rechercher libeTPkcs11.so dans usr/lib64.//  | so
130 Mot inconnu : usr => Cliquez sur **Parcourir** et rechercher libeTPkcs11.so dans usr/lib64.//  | usr
130 Espace(s) en fin de ligne à supprimer. => Cliquez sur **Parcourir** et rechercher libeTPkcs11.so dans usr/lib64.//  |   => suggestions : ['']

133 Espace(s) en fin de ligne à supprimer. => Valider.//  |   => suggestions : ['']

135 Mot inconnu : RPVA => N.B. : lors de votre connexion au RPVA, le mot de passe de votre utilisateur Ubuntu/Debian peut vous être demandé. | rpva

149 Mot inconnu : RPVA => Dans l'attente du RPVA V2, la contenance totale de la boite de messagerie est TRES limitée. Il convient donc d'exporter régulièrement vos mails dans une archive si vous ne voulez pas les voir disparaitre. | rpva
149 Mot inconnu : V2 => Dans l'attente du RPVA V2, la contenance totale de la boite de messagerie est TRES limitée. Il convient donc d'exporter régulièrement vos mails dans une archive si vous ne voulez pas les voir disparaitre. | v2
149 Mot inconnu : TRES => Dans l'attente du RPVA V2, la contenance totale de la boite de messagerie est TRES limitée. Il convient donc d'exporter régulièrement vos mails dans une archive si vous ne voulez pas les voir disparaitre. | tres

153 Mot inconnu : F12 => Une astuce pour télécharger l'ensemble de vos mails en une fois est d'ouvrir la console de Firefox **(F12)**, sélectionner **console**, et entrer la ligne de commande : | f12

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Testé et fonctionnel en janvier 2020 sur UBUNTU 16.04, UBUNTU 19.04 et UBUNTU 19.10 |    => suggestions : ['']

163 Espace(s) en fin de ligne à supprimer. => Bonjour tout le monde.  |   => suggestions : ['']

164 Mot inconnu : ecofax => Il semblerait que le logiciel ecofax (fourni avec ovh) empêche le processus d'installation.  | ecofax
164 Mot inconnu : ovh => Il semblerait que le logiciel ecofax (fourni avec ovh) empêche le processus d'installation.  | ovh
164 Espace(s) en fin de ligne à supprimer. => Il semblerait que le logiciel ecofax (fourni avec ovh) empêche le processus d'installation.  |   => suggestions : ['']

179 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr,)** [[https://descartes-avocats.com/tag/rpva/|Les articles sur le sujet de Me CUIF, avocat]] |    => suggestions : ['']
179 Mot inconnu : CUIF =>   * **(fr,)** [[https://descartes-avocats.com/tag/rpva/|Les articles sur le sujet de Me CUIF, avocat]] | cuif

180 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr,)** [[https://adnotech.adwin.fr/post/RPVA-LINUX|article ADNOTECH sur le sujet]] |    => suggestions : ['']
180 Mot inconnu : ADNOTECH =>   * **(fr,)** [[https://adnotech.adwin.fr/post/RPVA-LINUX|article ADNOTECH sur le sujet]] | adnotech

181 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr,)** [[https://github.com/OpenSC/OpenSC/wiki/Installing-OpenSC-PKCS%2311-Module-in-Firefox,-Step-by-Step|guide installation PKCS multiplateforme]] |    => suggestions : ['']
181 Mot inconnu : Step-by-Step =>   * **(fr,)** [[https://github.com/OpenSC/OpenSC/wiki/Installing-OpenSC-PKCS%2311-Module-in-Firefox,-Step-by-Step|guide installation PKCS multiplateforme]] | step-by-step
181 Mot inconnu : PKCS =>   * **(fr,)** [[https://github.com/OpenSC/OpenSC/wiki/Installing-OpenSC-PKCS%2311-Module-in-Firefox,-Step-by-Step|guide installation PKCS multiplateforme]] | pkcs

182 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr,)** [[https://support.lex-persona.com/hc/fr/articles/114094525813-Liste-des-Librairies-PKCS-11|liste des libraires middleware PKCS#11]] |    => suggestions : ['']
182 Mot inconnu : PKCS =>   * **(fr,)** [[https://support.lex-persona.com/hc/fr/articles/114094525813-Liste-des-Librairies-PKCS-11|liste des libraires middleware PKCS#11]] | pkcs
185 Mot inconnu : kiceki => //Contributeurs principaux : kiceki | kiceki
