
4 Mot inconnu : Bird => ====== Routage Dynamique sous Linux avec Bird ====== <|> bird

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

20 Mot inconnu : Bird => Normalement compatible avec toutes les versions d'Ubuntu ayant le paquet Bird disponible. <|> bird

30 Mot inconnu : Bird => Il faut installer Bird sur la machine routeur et sur tous les postes qui veulent bénéficier de la mise à jour <|> bird


36 Mot inconnu : Bird => <note important>Il faut configurer le service Bird sur la machine routeur (serveur bird), puis mettre une configuration différente sur toutes les autres machines (client bird).</note> <|> bird
36 Mot inconnu : bird => <note important>Il faut configurer le service Bird sur la machine routeur (serveur bird), puis mettre une configuration différente sur toutes les autres machines (client bird).</note> <|> bird
36 Mot inconnu : bird => <note important>Il faut configurer le service Bird sur la machine routeur (serveur bird), puis mettre une configuration différente sur toutes les autres machines (client bird).</note> <|> bird

42 Mot inconnu : protocol => protocol kernel { <|> protocol
42 Mot inconnu : kernel => protocol kernel { <|> kernel

43 Mot inconnu : persist => persist;                # Don’t remove routes on BIRD shutdown <|> persist
43 Espace(s) surnuméraire(s) à supprimer. => persist;                # Don’t remove routes on BIRD shutdown <|>                  => suggestions : [' ']
43 Mot inconnu : Don’t => persist;                # Don’t remove routes on BIRD shutdown <|> don’t
43 Mot inconnu : remove => persist;                # Don’t remove routes on BIRD shutdown <|> remove
43 Mot inconnu : BIRD => persist;                # Don’t remove routes on BIRD shutdown <|> bird
43 Mot inconnu : shutdown => persist;                # Don’t remove routes on BIRD shutdown <|> shutdown

44 Mot inconnu : time => scan time 20;           # Scan kernel routing table every 20 seconds <|> time
44 Espace(s) surnuméraire(s) à supprimer. => scan time 20;           # Scan kernel routing table every 20 seconds <|>             => suggestions : [' ']
44 Mot inconnu : kernel => scan time 20;           # Scan kernel routing table every 20 seconds <|> kernel
44 Mot inconnu : routing => scan time 20;           # Scan kernel routing table every 20 seconds <|> routing
44 Mot inconnu : every => scan time 20;           # Scan kernel routing table every 20 seconds <|> every

45 Mot inconnu : all => export all;             # Default is export none <|> all
45 Espace(s) surnuméraire(s) à supprimer. => export all;             # Default is export none <|>               => suggestions : [' ']
45 Mot inconnu : Default => export all;             # Default is export none <|> default
45 Mot inconnu : is => export all;             # Default is export none <|> is

49 Mot inconnu : protocol => protocol device { <|> protocol
49 Mot inconnu : device => protocol device { <|> device

50 Mot inconnu : time => scan time 10;           # Scan interfaces every 10 seconds <|> time
50 Espace(s) surnuméraire(s) à supprimer. => scan time 10;           # Scan interfaces every 10 seconds <|>             => suggestions : [' ']
50 Mot inconnu : every => scan time 10;           # Scan interfaces every 10 seconds <|> every

53 Mot inconnu : protocol => protocol direct { <|> protocol

54 Mot inconnu : all => export all; <|> all

57 Mot inconnu : protocol => protocol rip { <|> protocol
57 Mot inconnu : rip => protocol rip { <|> rip

58 Mot inconnu : all => export all; <|> all

59 Mot inconnu : all => import all; <|> all

61 Mot inconnu : authentication => authentication plaintext; <|> authentication
61 Mot inconnu : plaintext => authentication plaintext; <|> plaintext

62 Mot inconnu : password => password “text”; <|> password
62 Mot inconnu : text => password “text”; <|> text

63 Mot inconnu : honor => honor always; <|> honor
63 Mot inconnu : always => honor always; <|> always

64 Mot inconnu : broadcast => interface “eth*”{ mode broadcast; }; <|> broadcast

81 Mot inconnu : protocol => protocol kernel{ <|> protocol
81 Mot inconnu : kernel => protocol kernel{ <|> kernel

82 Mot inconnu : learn => learn; <|> learn

83 Mot inconnu : all => import all; <|> all

84 Mot inconnu : all => export all; <|> all

87 Mot inconnu : protocol => protocol device{ <|> protocol
87 Mot inconnu : device => protocol device{ <|> device

90 Mot inconnu : protocol => protocol rip { <|> protocol
90 Mot inconnu : rip => protocol rip { <|> rip

91 Mot inconnu : filter => import filter { <|> filter

92 Pas d’espace après ce signe. => if net ~ [ 192.168.160.0/24 ] then {   # Only remote networks <|> [  => suggestions : ['[']
92 Pas d’espace avant ce signe. => if net ~ [ 192.168.160.0/24 ] then {   # Only remote networks <|>  ] => suggestions : [']']
92 Mot inconnu : then => if net ~ [ 192.168.160.0/24 ] then {   # Only remote networks <|> then
92 Mot inconnu : Only => if net ~ [ 192.168.160.0/24 ] then {   # Only remote networks <|> only
92 Mot inconnu : remote => if net ~ [ 192.168.160.0/24 ] then {   # Only remote networks <|> remote
92 Mot inconnu : networks => if net ~ [ 192.168.160.0/24 ] then {   # Only remote networks <|> networks

93 Mot inconnu : reject => reject; <|> reject

95 Mot inconnu : else => else accept; <|> else
95 Mot inconnu : accept => else accept; <|> accept

97 Mot inconnu : all => #    export all; <|> all

99 Mot inconnu : authentication => authentication plaintext; <|> authentication
99 Mot inconnu : plaintext => authentication plaintext; <|> plaintext

100 Mot inconnu : password => password “text”; <|> password
100 Mot inconnu : text => password “text”; <|> text

101 Mot inconnu : honor => honor neighbor; <|> honor
101 Mot inconnu : neighbor => honor neighbor; <|> neighbor

102 Mot inconnu : broadcast => interface “eth*”{mode broadcast;}; <|> broadcast
130 Mot inconnu : FIXME =>   * FIXME <|> fixme
