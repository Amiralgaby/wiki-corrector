
18 Espace(s) surnuméraire(s) à supprimer. => ^ Logiciel         ^ Remarques           ^ Affiche le nombre de caractères par ligne  (a) ^ Affiche une visualisation des ondes audio (b) ^  |           => suggestions : [' ']
18 Espace(s) surnuméraire(s) à supprimer. => ^ Logiciel         ^ Remarques           ^ Affiche le nombre de caractères par ligne  (a) ^ Affiche une visualisation des ondes audio (b) ^  |             => suggestions : [' ']
18 Espace(s) surnuméraire(s) à supprimer. => ^ Logiciel         ^ Remarques           ^ Affiche le nombre de caractères par ligne  (a) ^ Affiche une visualisation des ondes audio (b) ^  |    => suggestions : [' ']
18 Espace(s) en fin de ligne à supprimer. => ^ Logiciel         ^ Remarques           ^ Affiche le nombre de caractères par ligne  (a) ^ Affiche une visualisation des ondes audio (b) ^  |   => suggestions : ['']

20 Mot inconnu : Gaupol => | **Gaupol subtitle editor**   | Installable via la logithèque Ubuntu  | Oui | Non | | gaupol
20 Mot inconnu : subtitle => | **Gaupol subtitle editor**   | Installable via la logithèque Ubuntu  | Oui | Non | | subtitle
20 Mot inconnu : editor => | **Gaupol subtitle editor**   | Installable via la logithèque Ubuntu  | Oui | Non | | editor
20 Espace(s) surnuméraire(s) à supprimer. => | **Gaupol subtitle editor**   | Installable via la logithèque Ubuntu  | Oui | Non | |    => suggestions : [' ']
22 Mot inconnu : Subtitle => | **[[apt>subtitleeditor|Subtitle editor]]**    | Installable via la logithèque Ubuntu     | Oui                       | Oui | | subtitle
22 Mot inconnu : editor => | **[[apt>subtitleeditor|Subtitle editor]]**    | Installable via la logithèque Ubuntu     | Oui                       | Oui | | editor
22 Espace(s) surnuméraire(s) à supprimer. => | **[[apt>subtitleeditor|Subtitle editor]]**    | Installable via la logithèque Ubuntu     | Oui                       | Oui | |       => suggestions : [' ']
22 Espace(s) surnuméraire(s) à supprimer. => | **[[apt>subtitleeditor|Subtitle editor]]**    | Installable via la logithèque Ubuntu     | Oui                       | Oui | |                         => suggestions : [' ']

40 Mot inconnu : Avidemux => * Nécessite d'être en super-utilisateur pour Avidemux | avidemux
56 Mot inconnu : merge2ass => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) | merge2ass
56 Mot inconnu : sh => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) | sh
56 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) |  . => suggestions : ['. ', '.']
56 Mot inconnu : ass => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) | ass
56 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) |  . => suggestions : ['. ', '.']
56 Mot inconnu : ssa => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) | ssa
56 Mot inconnu : VLC => Ceci est un script (corrigé) trouvé sur internet ayant comme nom : merge2ass.sh. Le script convertit 2 fichiers sous titre en 1 .ass (équivalent au .ssa). Votre lecteur vidéo doit être en mesure de lire ce fichier sous titre (VLC l'accepte) | vlc

61 Mot inconnu : subtitle1 => <note>subtitle1 est le sous titre positionné en haut de la vidéo | subtitle1
61 Il manque probablement un trait d’union. => <note>subtitle1 est le sous titre positionné en haut de la vidéo | sous titre => suggestions : ['sous-titre']

63 Mot inconnu : subtitle2 => subtitle2 est le sous titre positionné en bas de la vidéo</note> | subtitle2
63 Il manque probablement un trait d’union. => subtitle2 est le sous titre positionné en bas de la vidéo</note> | sous titre => suggestions : ['sous-titre']

67 Mot inconnu : merge2ass => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | merge2ass
67 Mot inconnu : sh => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | sh
67 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file |  -  => suggestions : [' – ', ' — ', ' − ']
67 Mot inconnu : merging => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | merging
67 Mot inconnu : two => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | two
67 Mot inconnu : text-subtitles => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | text-subtitles
67 Mot inconnu : into => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | into
67 Mot inconnu : ass => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | ass
67 Mot inconnu : subtitle => # merge2ass.sh - script for merging two text-subtitles into an ass subtitle file | subtitle

68 Mot inconnu : august-2007 => # version 0.9, 8-august-2007 | august-2007

69 Mot inconnu : comments => # comments/criticism/praise to jose1711-gmail-com | comments
69 Mot inconnu : criticism => # comments/criticism/praise to jose1711-gmail-com | criticism
69 Mot inconnu : praise => # comments/criticism/praise to jose1711-gmail-com | praise
69 Mot inconnu : to => # comments/criticism/praise to jose1711-gmail-com | to
69 Mot inconnu : jose1711-gmail-com => # comments/criticism/praise to jose1711-gmail-com | jose1711-gmail-com

71 Mot inconnu : dependencies => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | dependencies
71 Mot inconnu : mplayer => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | mplayer
71 Mot inconnu : your => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | your
71 Mot inconnu : subtitle => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | subtitle
71 Mot inconnu : need => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | need
71 Mot inconnu : to => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | to
71 Mot inconnu : converted => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | converted
71 Mot inconnu : to => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | to
71 Mot inconnu : srt => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | srt
71 Mot inconnu : gnu => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | gnu
71 Mot inconnu : utils => # dependencies: mplayer (if your subtitle files need to be converted to srt), gnu utils | utils

73 Mot inconnu : thanks => # thanks to: | thanks
73 Mot inconnu : to => # thanks to: | to

74 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - d.watzke for comments |  -  => suggestions : [' – ', ' — ', ' − ']
74 Mot inconnu : watzke => #  - d.watzke for comments | watzke
74 Mot inconnu : comments => #  - d.watzke for comments | comments

75 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - belisarivs for testing |  -  => suggestions : [' – ', ' — ', ' − ']
75 Mot inconnu : belisarivs => #  - belisarivs for testing | belisarivs
75 Mot inconnu : testing => #  - belisarivs for testing | testing

76 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - boris dušek <boris (dot) dusek - gmail - com> for testing/ideas |  -  => suggestions : [' – ', ' — ', ' − ']
76 Mot inconnu : boris => #  - boris dušek <boris (dot) dusek - gmail - com> for testing/ideas | boris
76 Mot inconnu : dušek => #  - boris dušek <boris (dot) dusek - gmail - com> for testing/ideas | dušek
76 Mot inconnu : testing => #  - boris dušek <boris (dot) dusek - gmail - com> for testing/ideas | testing
76 Mot inconnu : ideas => #  - boris dušek <boris (dot) dusek - gmail - com> for testing/ideas | ideas

78 Mot inconnu : is => # $1 is a movie file | is
78 Mot inconnu : movie => # $1 is a movie file | movie

79 Mot inconnu : is => # $2 is a subtitle1 | is
79 Mot inconnu : subtitle1 => # $2 is a subtitle1 | subtitle1

80 Mot inconnu : is => # $3 is a subtitle2 | is
80 Mot inconnu : subtitle2 => # $3 is a subtitle2 | subtitle2

81 Mot inconnu : is => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | is
81 Mot inconnu : optional => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | optional
81 Mot inconnu : and => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | and
81 Mot inconnu : could => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | could
81 Guillemets typographiques fermants. => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | " => suggestions : ['\xa0»', '”']
81 Mot inconnu : play-movie => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | play-movie
81 Guillemets typographiques fermants. => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | " => suggestions : ['\xa0»', '”']
81 Mot inconnu : watching => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | watching
81 Mot inconnu : of => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | of
81 Mot inconnu : the => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | the
81 Mot inconnu : movie => # $4 is optional and could be "-pm" or "--play-movie" for instant watching of the movie | movie

83 Mot inconnu : example => # example: | example

84 Mot inconnu : merge2ass => # merge2ass.sh movie.avi english.srt slovak.sub | merge2ass
84 Mot inconnu : sh => # merge2ass.sh movie.avi english.srt slovak.sub | sh
84 Mot inconnu : movie => # merge2ass.sh movie.avi english.srt slovak.sub | movie
84 Mot inconnu : avi => # merge2ass.sh movie.avi english.srt slovak.sub | avi
84 Mot inconnu : english => # merge2ass.sh movie.avi english.srt slovak.sub | english
84 Mot inconnu : srt => # merge2ass.sh movie.avi english.srt slovak.sub | srt
84 Mot inconnu : slovak => # merge2ass.sh movie.avi english.srt slovak.sub | slovak
84 Mot inconnu : sub => # merge2ass.sh movie.avi english.srt slovak.sub | sub

85 Mot inconnu : mplayer => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | mplayer
85 Il manque un espace à côté du tiret. => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 |  - => suggestions : [' – ', ' — ']
85 Mot inconnu : noautosub => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | noautosub
85 Mot inconnu : ass => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | ass
85 Mot inconnu : movie => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | movie
85 Mot inconnu : avi => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | avi
85 Mot inconnu : sub => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | sub
85 Mot inconnu : movie-bilingual => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | movie-bilingual
85 Mot inconnu : ass => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | ass
85 Mot inconnu : subcp => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | subcp
85 Mot inconnu : utf8 => # mplayer -noautosub -ass movie.avi -sub movie-bilingual.ass -subcp utf8 | utf8

87 Mot inconnu : just => # or just | just

88 Mot inconnu : merge2ass => # merge2ass.sh movie.avi english.srt slovak.sub -pm | merge2ass
88 Mot inconnu : sh => # merge2ass.sh movie.avi english.srt slovak.sub -pm | sh
88 Mot inconnu : movie => # merge2ass.sh movie.avi english.srt slovak.sub -pm | movie
88 Mot inconnu : avi => # merge2ass.sh movie.avi english.srt slovak.sub -pm | avi
88 Mot inconnu : english => # merge2ass.sh movie.avi english.srt slovak.sub -pm | english
88 Mot inconnu : srt => # merge2ass.sh movie.avi english.srt slovak.sub -pm | srt
88 Mot inconnu : slovak => # merge2ass.sh movie.avi english.srt slovak.sub -pm | slovak
88 Mot inconnu : sub => # merge2ass.sh movie.avi english.srt slovak.sub -pm | sub

90 Mot inconnu : even => # or even only | even
90 Mot inconnu : only => # or even only | only

91 Mot inconnu : merge2ass => # merge2ass.sh --detect movie.avi -pm | merge2ass
91 Mot inconnu : sh => # merge2ass.sh --detect movie.avi -pm | sh
91 Mot inconnu : detect => # merge2ass.sh --detect movie.avi -pm | detect
91 Mot inconnu : movie => # merge2ass.sh --detect movie.avi -pm | movie
91 Mot inconnu : avi => # merge2ass.sh --detect movie.avi -pm | avi

95 Mot inconnu : release => # release history: | release
95 Mot inconnu : history => # release history: | history

97 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - initial public release |  -  => suggestions : [' – ', ' — ', ' − ']
97 Mot inconnu : release => #  - initial public release | release

99 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - check_syntax fixed (d.watzke) |  -  => suggestions : [' – ', ' — ', ' − ']
99 Mot inconnu : check_syntax => #  - check_syntax fixed (d.watzke) | check_syntax
99 Mot inconnu : fixed => #  - check_syntax fixed (d.watzke) | fixed
99 Mot inconnu : watzke => #  - check_syntax fixed (d.watzke) | watzke

100 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - multiline echo -> cat (d.watzke) |  -  => suggestions : [' – ', ' — ', ' − ']
100 Mot inconnu : multiline => #  - multiline echo -> cat (d.watzke) | multiline
100 Mot inconnu : echo => #  - multiline echo -> cat (d.watzke) | echo
100 Mot inconnu : cat => #  - multiline echo -> cat (d.watzke) | cat
100 Mot inconnu : watzke => #  - multiline echo -> cat (d.watzke) | watzke

101 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - removes temp files after conversion |  -  => suggestions : [' – ', ' — ', ' − ']
101 Mot inconnu : removes => #  - removes temp files after conversion | removes
101 Mot inconnu : temp => #  - removes temp files after conversion | temp

103 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - check whether the input files exist prior to running MPlayer |  -  => suggestions : [' – ', ' — ', ' − ']
103 Mot inconnu : check => #  - check whether the input files exist prior to running MPlayer | check
103 Mot inconnu : whether => #  - check whether the input files exist prior to running MPlayer | whether
103 Mot inconnu : the => #  - check whether the input files exist prior to running MPlayer | the
103 Mot inconnu : exist => #  - check whether the input files exist prior to running MPlayer | exist
103 Mot inconnu : prior => #  - check whether the input files exist prior to running MPlayer | prior
103 Mot inconnu : to => #  - check whether the input files exist prior to running MPlayer | to
103 Mot inconnu : MPlayer => #  - check whether the input files exist prior to running MPlayer | mplayer

104 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - check for MPlayer binary |  -  => suggestions : [' – ', ' — ', ' − ']
104 Mot inconnu : check => #  - check for MPlayer binary | check
104 Mot inconnu : MPlayer => #  - check for MPlayer binary | mplayer
104 Mot inconnu : binary => #  - check for MPlayer binary | binary

105 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - help page added |  -  => suggestions : [' – ', ' — ', ' − ']
105 Mot inconnu : help => #  - help page added | help
105 Mot inconnu : added => #  - help page added | added

106 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - new optional CLI parameters: -pm (plays movie after conversion), --help |  -  => suggestions : [' – ', ' — ', ' − ']
106 Mot inconnu : optional => #  - new optional CLI parameters: -pm (plays movie after conversion), --help | optional
106 Mot inconnu : CLI => #  - new optional CLI parameters: -pm (plays movie after conversion), --help | cli
106 Mot inconnu : parameters => #  - new optional CLI parameters: -pm (plays movie after conversion), --help | parameters
106 Mot inconnu : plays => #  - new optional CLI parameters: -pm (plays movie after conversion), --help | plays
106 Mot inconnu : movie => #  - new optional CLI parameters: -pm (plays movie after conversion), --help | movie
106 Mot inconnu : help => #  - new optional CLI parameters: -pm (plays movie after conversion), --help | help

108 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - timestamp in output more compatible (reported by belisarivs) |  -  => suggestions : [' – ', ' — ', ' − ']
108 Mot inconnu : timestamp => #  - timestamp in output more compatible (reported by belisarivs) | timestamp
108 Confusion possible : pour le déterminant désignant quelque chose, écrivez “un”. => #  - timestamp in output more compatible (reported by belisarivs) | in => suggestions : ['un']
108 Mot inconnu : reported => #  - timestamp in output more compatible (reported by belisarivs) | reported
108 Mot inconnu : by => #  - timestamp in output more compatible (reported by belisarivs) | by
108 Mot inconnu : belisarivs => #  - timestamp in output more compatible (reported by belisarivs) | belisarivs

110 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - performs a check for writable output |  -  => suggestions : [' – ', ' — ', ' − ']
110 Mot inconnu : performs => #  - performs a check for writable output | performs
110 Mot inconnu : check => #  - performs a check for writable output | check
110 Mot inconnu : writable => #  - performs a check for writable output | writable

111 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - check for MPlayer's support of ass/ssa if -pm is used |  -  => suggestions : [' – ', ' — ', ' − ']
111 Mot inconnu : check => #  - check for MPlayer's support of ass/ssa if -pm is used | check
111 Mot inconnu : MPlayer's => #  - check for MPlayer's support of ass/ssa if -pm is used | mplayer's
111 Mot inconnu : of => #  - check for MPlayer's support of ass/ssa if -pm is used | of
111 Mot inconnu : ass => #  - check for MPlayer's support of ass/ssa if -pm is used | ass
111 Mot inconnu : ssa => #  - check for MPlayer's support of ass/ssa if -pm is used | ssa
111 Il manque un espace à côté du tiret. => #  - check for MPlayer's support of ass/ssa if -pm is used |  - => suggestions : [' – ', ' — ']
111 Mot inconnu : is => #  - check for MPlayer's support of ass/ssa if -pm is used | is
111 Mot inconnu : used => #  - check for MPlayer's support of ass/ssa if -pm is used | used

112 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - pointers to subtitle files stored as arrays |  -  => suggestions : [' – ', ' — ', ' − ']
112 Mot inconnu : to => #  - pointers to subtitle files stored as arrays | to
112 Mot inconnu : subtitle => #  - pointers to subtitle files stored as arrays | subtitle
112 Mot inconnu : stored => #  - pointers to subtitle files stored as arrays | stored
112 Mot inconnu : arrays => #  - pointers to subtitle files stored as arrays | arrays

113 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) |  -  => suggestions : [' – ', ' — ', ' − ']
113 Mot inconnu : autorecognition => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | autorecognition
113 Mot inconnu : of => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | of
113 Mot inconnu : subtitles => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | subtitles
113 Mot inconnu : based => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | based
113 Mot inconnu : MPlayer's => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | mplayer's
113 Il manque un espace à côté du tiret. => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) |  - => suggestions : [' – ', ' — ']
113 Mot inconnu : sub-fuzziness => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | sub-fuzziness
113 Mot inconnu : feature => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | feature
113 Mot inconnu : detect => #  - autorecognition of subtitles based on MPlayer's -sub-fuzziness feature (--detect) | detect

114 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - output filename based on movie filename (+bilingual.ass) |  -  => suggestions : [' – ', ' — ', ' − ']
114 Mot inconnu : filename => #  - output filename based on movie filename (+bilingual.ass) | filename
114 Mot inconnu : based => #  - output filename based on movie filename (+bilingual.ass) | based
114 Mot inconnu : movie => #  - output filename based on movie filename (+bilingual.ass) | movie
114 Mot inconnu : filename => #  - output filename based on movie filename (+bilingual.ass) | filename
114 Mot inconnu : bilingual => #  - output filename based on movie filename (+bilingual.ass) | bilingual
114 Mot inconnu : ass => #  - output filename based on movie filename (+bilingual.ass) | ass

115 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - bash now mandatory (non-POSIX syntax used) |  -  => suggestions : [' – ', ' — ', ' − ']
115 Mot inconnu : now => #  - bash now mandatory (non-POSIX syntax used) | now
115 Mot inconnu : mandatory => #  - bash now mandatory (non-POSIX syntax used) | mandatory
115 Mot inconnu : non-POSIX => #  - bash now mandatory (non-POSIX syntax used) | non-posix
115 Mot inconnu : syntax => #  - bash now mandatory (non-POSIX syntax used) | syntax
115 Mot inconnu : used => #  - bash now mandatory (non-POSIX syntax used) | used

116 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #  - flag -pm has a long alias (--play-movie) |  -  => suggestions : [' – ', ' — ', ' − ']
116 Mot inconnu : flag => #  - flag -pm has a long alias (--play-movie) | flag
116 Il manque un espace à côté du tiret. => #  - flag -pm has a long alias (--play-movie) |  - => suggestions : [' – ', ' — ']
116 Mot inconnu : has => #  - flag -pm has a long alias (--play-movie) | has
116 Mot inconnu : play-movie => #  - flag -pm has a long alias (--play-movie) | play-movie

119 Mot inconnu : some => # some future thoughts: | some
119 Mot inconnu : thoughts => # some future thoughts: | thoughts

120 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do |  -  => suggestions : [' – ', ' — ', ' − ']
120 Mot inconnu : optional => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do | optional
120 Mot inconnu : flags => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do | flags
120 Mot inconnu : do_not_remove_temp_files => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do | do_not_remove_temp_files
120 Mot inconnu : play_but_dont_delete_output_afterwards => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do | play_but_dont_delete_output_afterwards
120 Il manque un espace. => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do | dont_do => suggestions : [' dont_do']
120 Mot inconnu : dont_do => #   - more optional flags (do_not_remove_temp_files, play_but_dont_delete_output_afterwards,dont_do | dont_do

121 Mot inconnu : the_conversion_just_merging => #     the_conversion_just_merging,output_file..) | the_conversion_just_merging
121 Il manque un espace. => #     the_conversion_just_merging,output_file..) | output_file => suggestions : [' output_file']
121 Mot inconnu : output_file => #     the_conversion_just_merging,output_file..) | output_file
121 Typographie : un ou trois points ? => #     the_conversion_just_merging,output_file..) | .. => suggestions : ['…', '.']

122 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - cleaner sed/awk code |  -  => suggestions : [' – ', ' — ', ' − ']
122 Mot inconnu : cleaner => #   - cleaner sed/awk code | cleaner
122 Mot inconnu : sed => #   - cleaner sed/awk code | sed
122 Mot inconnu : awk => #   - cleaner sed/awk code | awk

123 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - support for other players (xine, totem, kmplayer, vlc..) |  -  => suggestions : [' – ', ' — ', ' − ']
123 Mot inconnu : other => #   - support for other players (xine, totem, kmplayer, vlc..) | other
123 Mot inconnu : players => #   - support for other players (xine, totem, kmplayer, vlc..) | players
123 Mot inconnu : xine => #   - support for other players (xine, totem, kmplayer, vlc..) | xine
123 Mot inconnu : kmplayer => #   - support for other players (xine, totem, kmplayer, vlc..) | kmplayer
123 Mot inconnu : vlc => #   - support for other players (xine, totem, kmplayer, vlc..) | vlc
123 Typographie : un ou trois points ? => #   - support for other players (xine, totem, kmplayer, vlc..) | .. => suggestions : ['…', '.']

124 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - subtitle encoding detection based on enca (if present) - boris? |  -  => suggestions : [' – ', ' — ', ' − ']
124 Mot inconnu : subtitle => #   - subtitle encoding detection based on enca (if present) - boris? | subtitle
124 Mot inconnu : encoding => #   - subtitle encoding detection based on enca (if present) - boris? | encoding
124 Mot inconnu : detection => #   - subtitle encoding detection based on enca (if present) - boris? | detection
124 Mot inconnu : based => #   - subtitle encoding detection based on enca (if present) - boris? | based
124 Mot inconnu : enca => #   - subtitle encoding detection based on enca (if present) - boris? | enca
124 Mot inconnu : present => #   - subtitle encoding detection based on enca (if present) - boris? | present
124 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - subtitle encoding detection based on enca (if present) - boris? |  -  => suggestions : [' – ', ' — ', ' − ']
124 Mot inconnu : boris => #   - subtitle encoding detection based on enca (if present) - boris? | boris

127 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - https://en.wikipedia.org/wiki/SubStation_Alpha |  -  => suggestions : [' – ', ' — ', ' − ']

128 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => #   - http://www.perlfu.co.uk/projects/asa/ass-specs.doc |  -  => suggestions : [' – ', ' — ', ' − ']

130 Mot inconnu : THE => # THE STORY ENDS HERE | the
130 Mot inconnu : STORY => # THE STORY ENDS HERE | story
130 Mot inconnu : ENDS => # THE STORY ENDS HERE | ends
130 Mot inconnu : HERE => # THE STORY ENDS HERE | here

131 Il manque un espace à côté du tiret. => # set -x |  - => suggestions : [' – ', ' — ']

133 Mot inconnu : normally => # normally you do not want to see mplayer's error output | normally
133 Mot inconnu : you => # normally you do not want to see mplayer's error output | you
133 Mot inconnu : not => # normally you do not want to see mplayer's error output | not
133 Mot inconnu : want => # normally you do not want to see mplayer's error output | want
133 Mot inconnu : to => # normally you do not want to see mplayer's error output | to
133 Mot inconnu : see => # normally you do not want to see mplayer's error output | see
133 Mot inconnu : mplayer's => # normally you do not want to see mplayer's error output | mplayer's
133 Mot inconnu : error => # normally you do not want to see mplayer's error output | error

135 Mot inconnu : mplayer_err => mplayer_err=/dev/null | mplayer_err

137 Mot inconnu : arg_count => arg_count="$#" | arg_count

138 Mot inconnu : movie => movie="$1" | movie
138 Guillemets typographiques fermants. => movie="$1" | " => suggestions : ['\xa0»', '”']

139 Mot inconnu : sub => sub[1]="$2" | sub
139 Guillemets typographiques fermants. => sub[1]="$2" | " => suggestions : ['\xa0»', '”']

140 Mot inconnu : sub => sub[2]="$3" | sub
140 Guillemets typographiques fermants. => sub[2]="$3" | " => suggestions : ['\xa0»', '”']

143 Mot inconnu : show_help => show_help(){ | show_help

144 Mot inconnu : cat => cat << EOF | cat
144 Mot inconnu : EOF => cat << EOF | eof

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  ---------------------------------------------------------------------------------- |   => suggestions : ['']

147 Mot inconnu : Merge2ass => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | merge2ass
147 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | |  -  => suggestions : [' – ', ' — ', ' − ']
147 Mot inconnu : merging => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | merging
147 Mot inconnu : two => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | two
147 Mot inconnu : text => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | text
147 Mot inconnu : subtitles => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | subtitles
147 Mot inconnu : into => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | into
147 Mot inconnu : ass => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | ass
147 Mot inconnu : ssa => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | ssa
147 Mot inconnu : subtitle => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | | subtitle
147 Espace(s) surnuméraire(s) à supprimer. => |  Merge2ass - a script for merging two text subtitles into ass/ssa subtitle file  | |    => suggestions : [' ']

148 Mot inconnu : author => |                                         author: jose1711 - gmail - com, 2007/08  | | author
148 Mot inconnu : jose1711 => |                                         author: jose1711 - gmail - com, 2007/08  | | jose1711
148 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => |                                         author: jose1711 - gmail - com, 2007/08  | |  -  => suggestions : [' – ', ' — ', ' − ']
148 Mot inconnu : gmail => |                                         author: jose1711 - gmail - com, 2007/08  | | gmail
148 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => |                                         author: jose1711 - gmail - com, 2007/08  | |  -  => suggestions : [' – ', ' — ', ' − ']
148 Espace(s) surnuméraire(s) à supprimer. => |                                         author: jose1711 - gmail - com, 2007/08  | |    => suggestions : [' ']

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  ---------------------------------------------------------------------------------- |   => suggestions : ['']

157 Mot inconnu : help => --help        show this help page and exit | help
157 Espace(s) surnuméraire(s) à supprimer. => --help        show this help page and exit |          => suggestions : [' ']
157 Mot inconnu : this => --help        show this help page and exit | this
157 Mot inconnu : help => --help        show this help page and exit | help
157 Mot inconnu : and => --help        show this help page and exit | and

159 Mot inconnu : detect => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | detect
159 Espace(s) surnuméraire(s) à supprimer. => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag |        => suggestions : [' ']
159 Mot inconnu : try => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | try
159 Mot inconnu : to => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | to
159 Mot inconnu : detect => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | detect
159 Mot inconnu : subtitles => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | subtitles
159 Mot inconnu : using => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | using
159 Mot inconnu : MPlayer's => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | mplayer's
159 Mot inconnu : sub-fuzziness => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | sub-fuzziness
159 Mot inconnu : flag => --detect      try to detect subtitles using MPlayer's sub-fuzziness=1 flag | flag

161 Mot inconnu : movie => movie         movie file (anything that MPlayer recognizes) | movie
161 Espace(s) surnuméraire(s) à supprimer. => movie         movie file (anything that MPlayer recognizes) |           => suggestions : [' ']
161 Mot inconnu : movie => movie         movie file (anything that MPlayer recognizes) | movie
161 Mot inconnu : anything => movie         movie file (anything that MPlayer recognizes) | anything
161 Mot inconnu : that => movie         movie file (anything that MPlayer recognizes) | that
161 Mot inconnu : MPlayer => movie         movie file (anything that MPlayer recognizes) | mplayer
161 Mot inconnu : recognizes => movie         movie file (anything that MPlayer recognizes) | recognizes

162 Mot inconnu : subtitle => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | subtitle
162 Écriture invariable. Utilisez un point médian. => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | file(s) => suggestions : ['file·s']
162 Mot inconnu : containing => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | containing
162 Mot inconnu : text => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | text
162 Mot inconnu : subtitles => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | subtitles
162 Mot inconnu : that => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | that
162 Mot inconnu : MPlayer => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | mplayer
162 Mot inconnu : recognizes => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  | recognizes
162 Espace(s) en fin de ligne à supprimer. => subtitle[12]  file(s) containing text subtitles that MPlayer recognizes  |   => suggestions : ['']

164 Dialogues et énumérations : il faut tiret cadratin [1] ou demi-cadratin [2] suivi d’un espace insécable. => -pm           play movie immediately and remove the output after finishing | - => suggestions : ['—\xa0', '–\xa0']
164 Espace(s) surnuméraire(s) à supprimer. => -pm           play movie immediately and remove the output after finishing |             => suggestions : [' ']
164 Mot inconnu : play => -pm           play movie immediately and remove the output after finishing | play
164 Mot inconnu : movie => -pm           play movie immediately and remove the output after finishing | movie
164 Mot inconnu : immediately => -pm           play movie immediately and remove the output after finishing | immediately
164 Mot inconnu : and => -pm           play movie immediately and remove the output after finishing | and
164 Mot inconnu : remove => -pm           play movie immediately and remove the output after finishing | remove
164 Mot inconnu : the => -pm           play movie immediately and remove the output after finishing | the
164 Mot inconnu : finishing => -pm           play movie immediately and remove the output after finishing | finishing

165 Mot inconnu : play-movie => --play-movie | play-movie

167 Mot inconnu : EOF => EOF | eof

170 Mot inconnu : detect_subtitles => detect_subtitles(){ | detect_subtitles

180 Mot inconnu : convert_subs => convert_subs(){ | convert_subs

181 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | type => suggestions : ['Type']
181 Mot inconnu : mplayer => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | mplayer
181 Mot inconnu : echo => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | echo
181 Guillemets typographiques ouvrants. => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | " => suggestions : ['«\xa0', '“']
181 Mot inconnu : MPlayer => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | mplayer
181 Mot inconnu : not => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | not
181 Mot inconnu : installed => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | installed
181 Mot inconnu : binary => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | binary
181 Mot inconnu : not => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | not
181 Mot inconnu : path => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | path
181 Mot inconnu : please => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | please
181 Mot inconnu : investigate => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | investigate
181 Mot inconnu : Exiting => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | exiting
181 Typographie : un ou trois points ? => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | .. => suggestions : ['…', '.']
181 Guillemets typographiques fermants. => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  | " => suggestions : ['\xa0»', '”']
181 Espace(s) en fin de ligne à supprimer. => type mplayer || { echo "MPlayer not installed or binary not in path, please investigate. Exiting.."; exit 1; }  |   => suggestions : ['']

183 Mot inconnu : echo => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | echo
183 Guillemets typographiques ouvrants. => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | " => suggestions : ['«\xa0', '“']
183 Mot inconnu : Converting => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | converting
183 Mot inconnu : the => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | the
183 Mot inconnu : subtitle => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | subtitle
183 Mot inconnu : sub => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | sub
183 Mot inconnu : to => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | to
183 Mot inconnu : time-based => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | time-based
183 Typographie : points de suspension. Utilisez le caractère dédié. => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | ... => suggestions : ['…']
183 Guillemets typographiques fermants. => echo "Converting the 1st subtitle file (${sub[1]}) to a time-based format..." | " => suggestions : ['\xa0»', '”']

184 Mot inconnu : slower => # slower but does not require the video file for conversion | slower
184 Mot inconnu : does => # slower but does not require the video file for conversion | does
184 Mot inconnu : not => # slower but does not require the video file for conversion | not
184 Mot inconnu : require => # slower but does not require the video file for conversion | require
184 Mot inconnu : the => # slower but does not require the video file for conversion | the
184 Mot inconnu : video => # slower but does not require the video file for conversion | video

185 Mot inconnu : mplayer => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | mplayer
185 Il manque un espace à côté du tiret. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub |  - => suggestions : [' – ', ' — ']
185 Mot inconnu : rawvideo => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | rawvideo
185 Il manque un espace. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | fps => suggestions : [' fps']
185 Mot inconnu : fps => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | fps
185 Il manque un espace à côté du tiret. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub |  - => suggestions : [' – ', ' — ']
185 Mot inconnu : demuxer => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | demuxer
185 Mot inconnu : rawvideo => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | rawvideo
185 Il manque un espace à côté du tiret. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub |  - => suggestions : [' – ', ' — ']
185 Mot inconnu : vc => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | vc
185 Mot inconnu : null => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | null
185 Il manque un espace à côté du tiret. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub |  - => suggestions : [' – ', ' — ']
185 Mot inconnu : vo => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | vo
185 Mot inconnu : null => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | null
185 Il manque un espace à côté du tiret. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub |  - => suggestions : [' – ', ' — ']
185 Mot inconnu : noframedrop => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | noframedrop
185 Mot inconnu : sub => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | sub
185 Mot inconnu : movie => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | movie
185 Guillemets typographiques fermants. => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | " => suggestions : ['\xa0»', '”']
185 Mot inconnu : dumpsrtsub => # mplayer /dev/zero -rawvideo pal:fps=25 -demuxer rawvideo -vc null -vo null -noframedrop -benchmark -sub "$movie" -dumpsrtsub | dumpsrtsub

186 Mot inconnu : mplayer => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | mplayer
186 Il manque un espace à côté du tiret. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" |  - => suggestions : [' – ', ' — ']
186 Mot inconnu : dumpsrtsub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | dumpsrtsub
186 Mot inconnu : noautosub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | noautosub
186 Mot inconnu : really-quiet => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | really-quiet
186 Mot inconnu : frames => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | frames
186 Il manque un espace à côté du tiret. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" |  - => suggestions : [' – ', ' — ']
186 Mot inconnu : sub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | sub
186 Mot inconnu : sub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | sub
186 Mot inconnu : movie => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | movie
186 Guillemets typographiques fermants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['\xa0»', '”']
186 Mot inconnu : mplayer_err => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | mplayer_err
186 Guillemets typographiques fermants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['\xa0»', '”']
186 Mot inconnu : echo => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | echo
186 Guillemets typographiques ouvrants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['«\xa0', '“']
186 Mot inconnu : Done => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | done
186 Guillemets typographiques fermants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[1]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['\xa0»', '”']

187 Mot inconnu : mv => mv dumpsub.srt "${sub[1]}-temp" | mv
187 Mot inconnu : dumpsub => mv dumpsub.srt "${sub[1]}-temp" | dumpsub
187 Mot inconnu : srt => mv dumpsub.srt "${sub[1]}-temp" | srt
187 Mot inconnu : sub => mv dumpsub.srt "${sub[1]}-temp" | sub
187 Mot inconnu : temp => mv dumpsub.srt "${sub[1]}-temp" | temp
187 Guillemets typographiques fermants. => mv dumpsub.srt "${sub[1]}-temp" | " => suggestions : ['\xa0»', '”']

188 Mot inconnu : echo => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | echo
188 Guillemets typographiques ouvrants. => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | " => suggestions : ['«\xa0', '“']
188 Mot inconnu : Converting => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | converting
188 Mot inconnu : the => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | the
188 Nombre ordinal. Second : 2ᵈ. Seconde : 2ᵈᵉ. Seconds : 2ᵈˢ. Secondes : 2ᵈᵉˢ. => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | 2nd => suggestions : ['2ᵈ']
188 Mot inconnu : subtitle => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | subtitle
188 Mot inconnu : sub => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | sub
188 Mot inconnu : to => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | to
188 Mot inconnu : time-based => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | time-based
188 Typographie : points de suspension. Utilisez le caractère dédié. => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | ... => suggestions : ['…']
188 Guillemets typographiques fermants. => echo "Converting the 2nd subtitle file (${sub[2]}) to a time-based format..." | " => suggestions : ['\xa0»', '”']

189 Mot inconnu : mplayer => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | mplayer
189 Il manque un espace à côté du tiret. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" |  - => suggestions : [' – ', ' — ']
189 Mot inconnu : dumpsrtsub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | dumpsrtsub
189 Mot inconnu : noautosub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | noautosub
189 Mot inconnu : really-quiet => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | really-quiet
189 Mot inconnu : frames => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | frames
189 Il manque un espace à côté du tiret. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" |  - => suggestions : [' – ', ' — ']
189 Mot inconnu : sub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | sub
189 Mot inconnu : sub => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | sub
189 Mot inconnu : movie => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | movie
189 Guillemets typographiques fermants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['\xa0»', '”']
189 Mot inconnu : mplayer_err => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | mplayer_err
189 Guillemets typographiques fermants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['\xa0»', '”']
189 Mot inconnu : echo => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | echo
189 Guillemets typographiques ouvrants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['«\xa0', '“']
189 Mot inconnu : Done => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | done
189 Guillemets typographiques fermants. => mplayer -dumpsrtsub -noautosub -really-quiet -frames 0 -sub "${sub[2]}" "$movie" 2>>"$mplayer_err" && echo "Done" | " => suggestions : ['\xa0»', '”']

190 Mot inconnu : mv => mv dumpsub.srt "${sub[2]}-temp" | mv
190 Mot inconnu : dumpsub => mv dumpsub.srt "${sub[2]}-temp" | dumpsub
190 Mot inconnu : srt => mv dumpsub.srt "${sub[2]}-temp" | srt
190 Mot inconnu : sub => mv dumpsub.srt "${sub[2]}-temp" | sub
190 Mot inconnu : temp => mv dumpsub.srt "${sub[2]}-temp" | temp
190 Guillemets typographiques fermants. => mv dumpsub.srt "${sub[2]}-temp" | " => suggestions : ['\xa0»', '”']

193 Mot inconnu : generate_ssa_header => generate_ssa_header(){ | generate_ssa_header

194 Mot inconnu : cat => cat > "$output" << EOF | cat
194 Guillemets typographiques fermants. => cat > "$output" << EOF | " => suggestions : ['\xa0»', '”']
194 Mot inconnu : EOF => cat > "$output" << EOF | eof

196 Mot inconnu : Title => Title: | title
197 Espace(s) en fin de ligne à supprimer. => Original Script:  |   => suggestions : ['']

198 Accord de genre erroné avec « Translation ». => Original Translation: | original => suggestions : ['Originale']
198 Accord de genre erroné avec « Original ». => Original Translation: | translation => suggestions : []

199 Mot inconnu : Editing => Original Editing:  | editing
199 Espace(s) en fin de ligne à supprimer. => Original Editing:  |   => suggestions : ['']
200 Espace(s) en fin de ligne à supprimer. => Original Timing:  |   => suggestions : ['']

201 Mot inconnu : Checking => Original Script Checking: | checking

202 Mot inconnu : ScriptType => ScriptType: v4.00 | scripttype
202 Mot inconnu : v4 => ScriptType: v4.00 | v4

204 Mot inconnu : PlayResY => PlayResY: 1024 | playresy

205 Mot inconnu : PlayDepth => PlayDepth: 0 | playdepth

206 Mot inconnu : Timer => Timer: 100,0000 | timer

208 Mot inconnu : V4 => [V4 Styles] | v4
209 Mot inconnu : Name => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | name
209 Mot inconnu : Fontname => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | fontname
209 Mot inconnu : Fontsize => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | fontsize
209 Mot inconnu : PrimaryColour => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | primarycolour
209 Mot inconnu : SecondaryColour => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | secondarycolour
209 Mot inconnu : TertiaryColour => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | tertiarycolour
209 Mot inconnu : BackColour => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | backcolour
209 Mot inconnu : Bold => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | bold
209 Mot inconnu : Italic => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | italic
209 Mot inconnu : BorderStyle => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | borderstyle
209 Mot inconnu : Outline => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | outline
209 Mot inconnu : Shadow => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | shadow
209 Mot inconnu : Alignment => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | alignment
209 Mot inconnu : MarginL => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | marginl
209 Mot inconnu : MarginR => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | marginr
209 Mot inconnu : MarginV => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | marginv
209 Mot inconnu : AlphaLevel => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | alphalevel
209 Mot inconnu : Encoding => Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding | encoding
210 Mot inconnu : lang1style => Style: lang1style,Arial,64,65535,65535,65535,-2147483640,-1,0,1,3,0,6,30,30,30,0,0 | lang1style
210 Il manque un espace. => Style: lang1style,Arial,64,65535,65535,65535,-2147483640,-1,0,1,3,0,6,30,30,30,0,0 | arial => suggestions : [' Arial']
210 Mot inconnu : Arial => Style: lang1style,Arial,64,65535,65535,65535,-2147483640,-1,0,1,3,0,6,30,30,30,0,0 | arial
210 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => Style: lang1style,Arial,64,65535,65535,65535,-2147483640,-1,0,1,3,0,6,30,30,30,0,0 | -2147483640 => suggestions : ['−2147483640', '– 2147483640', '— 2147483640']
210 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => Style: lang1style,Arial,64,65535,65535,65535,-2147483640,-1,0,1,3,0,6,30,30,30,0,0 | -1 => suggestions : ['−1', '– 1', '— 1']
211 Mot inconnu : lang2style => Style: lang2style,Arial,64,15724527,15724527,15724527,4144959,0,0,1,1,2,2,5,5,30,0,0 | lang2style
211 Il manque un espace. => Style: lang2style,Arial,64,15724527,15724527,15724527,4144959,0,0,1,1,2,2,5,5,30,0,0 | arial => suggestions : [' Arial']
211 Mot inconnu : Arial => Style: lang2style,Arial,64,15724527,15724527,15724527,4144959,0,0,1,1,2,2,5,5,30,0,0 | arial

213 Mot inconnu : Events => [Events] | events
214 Mot inconnu : Marked => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | marked
214 Mot inconnu : Start => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | start
214 Mot inconnu : End => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | end
214 Mot inconnu : Name => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | name
214 Mot inconnu : MarginL => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | marginl
214 Mot inconnu : MarginR => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | marginr
214 Mot inconnu : MarginV => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | marginv
214 Mot inconnu : Effect => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | effect
214 Mot inconnu : Text => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  | text
214 Espace(s) en fin de ligne à supprimer. => Format: Marked, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text  |   => suggestions : ['']

215 Mot inconnu : EOF => EOF | eof

218 Mot inconnu : generate_ssa_dialogs => generate_ssa_dialogs(){ | generate_ssa_dialogs

219 Mot inconnu : sed => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | sed
219 Il manque un espace à côté du tiret. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  - => suggestions : [' – ', ' — ']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Mot inconnu : sub => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | sub
219 Mot inconnu : temp => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | temp
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Il manque un espace à côté du tiret. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  - => suggestions : [' – ', ' — ']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Mot inconnu : awk => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | awk
219 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ' => suggestions : ['“', '‘', '‹']
219 Mot inconnu : BEGIN => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | begin
219 Il manque un espace. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print => suggestions : [' print']
219 Mot inconnu : print => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print
219 Guillemets isolés. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']
219 Guillemets fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  " => suggestions : ['\xa0»', '”']
219 Il manque un espace. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print => suggestions : [' print']
219 Mot inconnu : print => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print
219 Mot inconnu : print => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Mot inconnu : sed => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | sed
219 Il manque un espace à côté du tiret. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  - => suggestions : [' – ', ' — ']
219 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
219 Pas d’espace avant ce signe. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  ] => suggestions : [']']
219 Mot inconnu : Marked => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | marked
219 Mot inconnu : lang1style => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | lang1style
219 Il manque un espace. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | 0000 => suggestions : [' 0000']
219 Une de ces ponctuations est superflue. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ,, => suggestions : [',', ',']
219 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
219 Une de ces ponctuations est superflue. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | :, => suggestions : [':', ',']
219 Il manque un espace après la parenthèse. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ) => suggestions : [') ']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
219 Il manque un espace après la parenthèse. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ) => suggestions : [') ']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
219 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[1]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang1style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']

220 Mot inconnu : sed => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | sed
220 Il manque un espace à côté du tiret. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  - => suggestions : [' – ', ' — ']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Mot inconnu : sub => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | sub
220 Mot inconnu : temp => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | temp
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Il manque un espace à côté du tiret. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  - => suggestions : [' – ', ' — ']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Mot inconnu : awk => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | awk
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ' => suggestions : ['“', '‘', '‹']
220 Mot inconnu : BEGIN => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | begin
220 Il manque un espace. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print => suggestions : [' print']
220 Mot inconnu : print => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print
220 Guillemets isolés. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']
220 Guillemets fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  " => suggestions : ['\xa0»', '”']
220 Il manque un espace. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print => suggestions : [' print']
220 Mot inconnu : print => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print
220 Mot inconnu : print => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | print
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Mot inconnu : sed => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | sed
220 Il manque un espace à côté du tiret. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  - => suggestions : [' – ', ' — ']
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
220 Pas d’espace avant ce signe. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" |  ] => suggestions : [']']
220 Mot inconnu : Marked => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | marked
220 Mot inconnu : lang2style => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | lang2style
220 Il manque un espace. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | 0000 => suggestions : [' 0000']
220 Une de ces ponctuations est superflue. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ,, => suggestions : [',', ',']
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
220 Une de ces ponctuations est superflue. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | :, => suggestions : [':', ',']
220 Il manque un espace après la parenthèse. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ) => suggestions : [') ']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Guillemets typographiques ouvrants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['«\xa0', '“']
220 Il manque un espace après la parenthèse. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | ) => suggestions : [') ']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']
220 Guillemets typographiques fermants. => sed -e "/ --> /s/,/./g" "${sub[2]}-temp" | tr -d "\r" | awk 'BEGIN{ORS="";print " "} / --> /,/^$/ {ORS=" ";print} /^$/{print "\n"}' | sed -e "s/ --> /,/g" -e "s/^ \([^ ]*\) \(.*\)/Dialogue: Marked=0,\1,lang2style,Cher,0000,0000,0000,,\2/" -e "s/,00:/,0:/g" -e "s/^ *//g" -e "s/\([:,]\)0\([0-9]\)/\1\2/g" -e "s/\([0-9]\)\(.\)\([0-9]\)\([0-9]\)0\(,\)/\1\2\3\4\5/g" >>"$output" | " => suggestions : ['\xa0»', '”']

223 Mot inconnu : remove_temp_files => remove_temp_files(){ | remove_temp_files

224 Mot inconnu : rm => rm "${sub[1]}-temp" "${sub[2]}-temp" | rm
224 Mot inconnu : sub => rm "${sub[1]}-temp" "${sub[2]}-temp" | sub
224 Mot inconnu : temp => rm "${sub[1]}-temp" "${sub[2]}-temp" | temp
224 Guillemets typographiques fermants. => rm "${sub[1]}-temp" "${sub[2]}-temp" | " => suggestions : ['\xa0»', '”']
224 Mot inconnu : sub => rm "${sub[1]}-temp" "${sub[2]}-temp" | sub
224 Mot inconnu : temp => rm "${sub[1]}-temp" "${sub[2]}-temp" | temp
224 Guillemets typographiques fermants. => rm "${sub[1]}-temp" "${sub[2]}-temp" | " => suggestions : ['\xa0»', '”']

227 Mot inconnu : play_movie => play_movie(){ | play_movie

232 Mot inconnu : delete_output => delete_output(){ | delete_output

236 Mot inconnu : eval => eval last_arg='$'${arg_count} | eval
236 Mot inconnu : last_arg => eval last_arg='$'${arg_count} | last_arg
236 Mot inconnu : arg_count => eval last_arg='$'${arg_count} | arg_count

238 Pas d’espace après ce signe. => if [ $arg_count -eq 0 ]; then | [  => suggestions : ['[']
238 Mot inconnu : arg_count => if [ $arg_count -eq 0 ]; then | arg_count
238 Il manque un espace à côté du tiret. => if [ $arg_count -eq 0 ]; then |  - => suggestions : [' – ', ' — ']
238 Mot inconnu : eq => if [ $arg_count -eq 0 ]; then | eq
238 Pas d’espace avant ce signe. => if [ $arg_count -eq 0 ]; then |  ] => suggestions : [']']
238 Mot inconnu : then => if [ $arg_count -eq 0 ]; then | then

243 Mot inconnu : param => for param in $* | param

246 Mot inconnu : done => done | done

248 Pas d’espace après ce signe. => if [ "$movie" = "--detect" ]; then | [  => suggestions : ['[']
248 Mot inconnu : movie => if [ "$movie" = "--detect" ]; then | movie
248 Guillemets typographiques fermants. => if [ "$movie" = "--detect" ]; then | " => suggestions : ['\xa0»', '”']
248 Mot inconnu : detect => if [ "$movie" = "--detect" ]; then | detect
248 Guillemets typographiques fermants. => if [ "$movie" = "--detect" ]; then | " => suggestions : ['\xa0»', '”']
248 Pas d’espace avant ce signe. => if [ "$movie" = "--detect" ]; then |  ] => suggestions : [']']
248 Mot inconnu : then => if [ "$movie" = "--detect" ]; then | then

255 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | if => suggestions : ['If']
255 Pas d’espace après ce signe. => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | [  => suggestions : ['[']
255 Mot inconnu : movie => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | movie
255 Guillemets typographiques fermants. => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['\xa0»', '”']
255 Pas d’espace avant ce signe. => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi |  ] => suggestions : [']']
255 Mot inconnu : then => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | then
255 Mot inconnu : echo => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | echo
255 Guillemets typographiques ouvrants. => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['«\xa0', '“']
255 Mot inconnu : Movie => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | movie
255 Mot inconnu : movie => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | movie
255 Mot inconnu : does => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | does
255 Mot inconnu : not => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | not
255 Mot inconnu : exist => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | exist
255 Mot inconnu : Going => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | going
255 Mot inconnu : back => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | back
255 Mot inconnu : to => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | to
255 Typographie : un ou trois points ? => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | .. => suggestions : ['…', '.']
255 Guillemets typographiques fermants. => if [ ! -f "$movie" ]; then echo "Movie file ($movie) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['\xa0»', '”']

256 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | if => suggestions : ['If']
256 Pas d’espace après ce signe. => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | [  => suggestions : ['[']
256 Mot inconnu : sub => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | sub
256 Pas d’espace avant ce signe. => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi |  ] => suggestions : [']']
256 Mot inconnu : then => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | then
256 Mot inconnu : echo => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | echo
256 Guillemets typographiques ouvrants. => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['«\xa0', '“']
256 Mot inconnu : Subtitle1 => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | subtitle1
256 Mot inconnu : sub => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | sub
256 Mot inconnu : does => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | does
256 Mot inconnu : not => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | not
256 Mot inconnu : exist => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | exist
256 Mot inconnu : Going => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | going
256 Mot inconnu : back => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | back
256 Mot inconnu : to => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | to
256 Typographie : un ou trois points ? => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | .. => suggestions : ['…', '.']
256 Guillemets typographiques fermants. => if [ ! -f "${sub[1]}" ]; then echo "Subtitle1 file (${sub[1]}) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['\xa0»', '”']

257 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | if => suggestions : ['If']
257 Pas d’espace après ce signe. => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | [  => suggestions : ['[']
257 Mot inconnu : sub => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | sub
257 Pas d’espace avant ce signe. => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi |  ] => suggestions : [']']
257 Mot inconnu : then => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | then
257 Mot inconnu : echo => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | echo
257 Guillemets typographiques ouvrants. => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['«\xa0', '“']
257 Mot inconnu : Subtitle2 => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | subtitle2
257 Mot inconnu : sub => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | sub
257 Mot inconnu : does => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | does
257 Mot inconnu : not => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | not
257 Mot inconnu : exist => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | exist
257 Mot inconnu : Going => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | going
257 Mot inconnu : back => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | back
257 Mot inconnu : to => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | to
257 Typographie : un ou trois points ? => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | .. => suggestions : ['…', '.']
257 Guillemets typographiques fermants. => if [ ! -f "${sub[2]}" ]; then echo "Subtitle2 file (${sub[2]}) does not exist. Going back to shell.."; exit 1; fi | " => suggestions : ['\xa0»', '”']

259 Mot inconnu : echo => echo "Processing.." | echo
259 Guillemets typographiques ouvrants. => echo "Processing.." | " => suggestions : ['«\xa0', '“']
259 Typographie : un ou trois points ? => echo "Processing.." | .. => suggestions : ['…', '.']
259 Guillemets typographiques fermants. => echo "Processing.." | " => suggestions : ['\xa0»', '”']

260 Mot inconnu : reset => # reset output | reset

261 Mot inconnu : movie => output="${movie%.*}-bilingual.ass" | movie
261 Mot inconnu : bilingual => output="${movie%.*}-bilingual.ass" | bilingual
261 Mot inconnu : ass => output="${movie%.*}-bilingual.ass" | ass
261 Guillemets typographiques fermants. => output="${movie%.*}-bilingual.ass" | " => suggestions : ['\xa0»', '”']

262 Guillemets typographiques fermants. => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | " => suggestions : ['\xa0»', '”']
262 Mot inconnu : echo => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | echo
262 Guillemets typographiques ouvrants. => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | " => suggestions : ['«\xa0', '“']
262 Mot inconnu : Can't => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | can't
262 Mot inconnu : write => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | write
262 Mot inconnu : here => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | here
262 Mot inconnu : Exiting => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | exiting
262 Typographie : un ou trois points ? => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | .. => suggestions : ['…', '.']
262 Guillemets typographiques fermants. => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | " => suggestions : ['\xa0»', '”']
262 Mot inconnu : echo => > "$output" #|| { echo "Can't write here! Exiting.." && echo 1; } | echo

264 Mot inconnu : convert_subs => convert_subs | convert_subs

265 Mot inconnu : generate_ssa_header => generate_ssa_header | generate_ssa_header

266 Mot inconnu : generate_ssa_dialogs => generate_ssa_dialogs | generate_ssa_dialogs

267 Mot inconnu : remove_temp_files => remove_temp_files | remove_temp_files

269 Pas d’espace après ce signe. => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | [  => suggestions : ['[']
269 Mot inconnu : last_arg => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | last_arg
269 Guillemets typographiques fermants. => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | " => suggestions : ['\xa0»', '”']
269 Guillemets typographiques fermants. => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | " => suggestions : ['\xa0»', '”']
269 Mot inconnu : last_arg => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | last_arg
269 Guillemets typographiques fermants. => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | " => suggestions : ['\xa0»', '”']
269 Mot inconnu : play-movie => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | play-movie
269 Guillemets typographiques fermants. => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | " => suggestions : ['\xa0»', '”']
269 Pas d’espace avant ce signe. => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then |  ] => suggestions : [']']
269 Mot inconnu : then => if [ "$last_arg" = "-pm" -o "$last_arg" = "--play-movie" ]; then | then
