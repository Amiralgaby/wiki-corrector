
5 Mot inconnu : Awesome => ====== Awesome ====== | awesome

8 Mot inconnu : Awesome => **Awesome** est un « Window Manager » minimaliste, très léger et donc extrêmement rapide, conçu pour être utilisé sans souris et spécialement optimisé pour le "multiscreen". | awesome
8 Mot inconnu : Window => **Awesome** est un « Window Manager » minimaliste, très léger et donc extrêmement rapide, conçu pour être utilisé sans souris et spécialement optimisé pour le "multiscreen". | window
8 Guillemets typographiques ouvrants. => **Awesome** est un « Window Manager » minimaliste, très léger et donc extrêmement rapide, conçu pour être utilisé sans souris et spécialement optimisé pour le "multiscreen". | " => suggestions : ['«\xa0', '“']
8 Mot inconnu : multiscreen => **Awesome** est un « Window Manager » minimaliste, très léger et donc extrêmement rapide, conçu pour être utilisé sans souris et spécialement optimisé pour le "multiscreen". | multiscreen
8 Guillemets typographiques fermants. => **Awesome** est un « Window Manager » minimaliste, très léger et donc extrêmement rapide, conçu pour être utilisé sans souris et spécialement optimisé pour le "multiscreen". | " => suggestions : ['\xa0»', '”']

9 Guillemets typographiques ouvrants. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | " => suggestions : ['«\xa0', '“']
9 Mot inconnu : tiling => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | tiling
9 Guillemets typographiques fermants. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | " => suggestions : ['\xa0»', '”']
9 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | a => suggestions : ['À']
9 Mot inconnu : tiling => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | tiling
9 Guillemets typographiques ouvrants. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | " => suggestions : ['«\xa0', '“']
9 Mot inconnu : floating => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | floating
9 Guillemets typographiques fermants. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | " => suggestions : ['\xa0»', '”']
9 Guillemets typographiques ouvrants. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | " => suggestions : ['«\xa0', '“']
9 Guillemets typographiques fermants. => C'est un gestionnaire de fenêtre qui utilise la technique dite du "tiling"; comprendre par là que le maximum de l'écran sera toujours utilisé pour les fenêtres et celles-ci ne se chevaucheront jamais. A noter qu'il y a plusieurs modes de tiling disponibles. Néanmoins, le mode "floating" (fenêtres "volantes") peut être utilisé également. | " => suggestions : ['\xa0»', '”']

12 Mot inconnu : awesome => Dans sa conception, awesome ressemble assez à [[https://fr.wikipedia.org/wiki/Ion_(logiciel)|ion]] ou encore [[wmii|Wmii]] . | awesome
12 Il manque un espace avant la parenthèse. => Dans sa conception, awesome ressemble assez à [[https://fr.wikipedia.org/wiki/Ion_(logiciel)|ion]] ou encore [[wmii|Wmii]] . | ( => suggestions : [' (']
12 Mot inconnu : wmii => Dans sa conception, awesome ressemble assez à [[https://fr.wikipedia.org/wiki/Ion_(logiciel)|ion]] ou encore [[wmii|Wmii]] . | wmii
28 Mot inconnu : awesome => <note important>Il existe un dépôt PPA contenant la dernière version. Pour Installer awesome depuis ce dépôt : | awesome

31 Mot inconnu : Awesome => Awesome se trouve déjà dans les dépôts officiels.  | awesome
31 Espace(s) en fin de ligne à supprimer. => Awesome se trouve déjà dans les dépôts officiels.  |   => suggestions : ['']

34 Mot inconnu : awesome-extra => Le paquet **awesome-extra** fournit de nombreux //widgets// supplémentaires | awesome-extra

35 Pas d’espace avant ce signe. => (l'usage de la mémoire, la vitesse bande passante, etc ). |  ) => suggestions : [')']

38 Mot inconnu : Awesome => Vous pouvez aussi compiler les sources, en vous rendant sur le git de Awesome vous possèderez les dernières modifications : http://git.naquadah.org/ | awesome

40 Forme interrogative ? Mettez un trait d’union. => Décompressez l'archive, mettez vous dans le dossier obtenu puis tapez : | mettez vous => suggestions : ['mettez-vous']

44 Il faut élider “si” et l’accoler au pronom. => Si il y a une erreur lors du ./configure, installez la librairie requise. | si  => suggestions : ['S’']

46 Mot inconnu : Awesome => <note important>Pour Awesome 3 veuillez vous référer à cette publication de leur mailing-list : http://article.gmane.org/gmane.comp.freedesktop.xcb/3350/ afin de réussir l'installation pour xcb-util.</note> | awesome
46 Mot inconnu : xcb-util => <note important>Pour Awesome 3 veuillez vous référer à cette publication de leur mailing-list : http://article.gmane.org/gmane.comp.freedesktop.xcb/3350/ afin de réussir l'installation pour xcb-util.</note> | xcb-util
48 Espace(s) en fin de ligne à supprimer. => Ou bien, notamment si vous êtes sous Hardy :  |   => suggestions : ['']

52 Mot inconnu : Karmic => =====Configuration Version 3 (Karmic et ultérieur) ===== | karmic

54 Mot inconnu : Awesome => La syntaxe du fichier de configuration a complètement changé avec la version 3 d'Awesome. Celui-ci utilise désormais le langage [[https://fr.wikipedia.org/wiki/Lua|lua]], ce qui facilite grandement la personnalisation. | awesome

56 Mot inconnu : Awesome => En effet, un des intérêts principaux d'Awesome est de se forger un environnement entièrement personnalisé et dans lequel on se sent à l'aise et productif. | awesome

58 Mot inconnu : awesome => Vous pouvez consulter [[http://awesome.naquadah.org/wiki/Awesome_3_configuration/fr|la documentation officielle sur la configuration d'awesome 3]]. | awesome

74 Mot inconnu : awesome => <note important>Il est fréquent qu'après une mise à jour d'awesome, le fichier de thème ne corresponde plus et vous empêche même, dans le pire des cas, de lancer votre session.</note> | awesome

85 Mot inconnu : QWERTZ => Les raccourcis par défaut sont pensés pour un clavier QWERTY. Si vous utilisez un clavier QWERTZ, les raccourcis seront également bien adaptés mais si vous utilisez un clavier azerty, je vous recommande de modifier le fichier de configuration pour avoir quelque chose comme: | qwertz

123 Pas d’espace après ce signe. => ( Mod4+guillemet pour aller au bureau n°3, par exemple) | (  => suggestions : ['(']
123 Mot inconnu : Mod4 => ( Mod4+guillemet pour aller au bureau n°3, par exemple) | mod4

130 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => Cette ligne (a placer dans la section KeysBindings) vous permet de lancer Firefox via SUPER+ALT+f, quelques explications: | a => suggestions : ['à']
130 Incohérence probable avec “a” : “placer” n’est pas un participe passé. => Cette ligne (a placer dans la section KeysBindings) vous permet de lancer Firefox via SUPER+ALT+f, quelques explications: | placer => suggestions : ['placé']
130 Mot inconnu : KeysBindings => Cette ligne (a placer dans la section KeysBindings) vous permet de lancer Firefox via SUPER+ALT+f, quelques explications: | keysbindings

136 Mot inconnu : xmodmap => Pour connaitre la correspondance des touches ainsi que leur syntaxe exacte il suffit de lancer xmodmap dans une console. | xmodmap

147 Espace(s) en fin de ligne à supprimer. => par  |   => suggestions : ['']

156 Guillemets typographiques ouvrants. => ==== Configurer les "layouts" par défaut et renommer les "tags" ==== | " => suggestions : ['«\xa0', '“']
156 Mot inconnu : layouts => ==== Configurer les "layouts" par défaut et renommer les "tags" ==== | layouts
156 Guillemets typographiques fermants. => ==== Configurer les "layouts" par défaut et renommer les "tags" ==== | " => suggestions : ['\xa0»', '”']
156 Guillemets typographiques ouvrants. => ==== Configurer les "layouts" par défaut et renommer les "tags" ==== | " => suggestions : ['«\xa0', '“']
156 Guillemets typographiques fermants. => ==== Configurer les "layouts" par défaut et renommer les "tags" ==== | " => suggestions : ['\xa0»', '”']

157 Guillemets typographiques ouvrants. => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | " => suggestions : ['«\xa0', '“']
157 Mot inconnu : layouts => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | layouts
157 Guillemets typographiques fermants. => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | " => suggestions : ['\xa0»', '”']
157 Guillemets typographiques ouvrants. => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | " => suggestions : ['«\xa0', '“']
157 Mot inconnu : float => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | float
157 Guillemets typographiques fermants. => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | " => suggestions : ['\xa0»', '”']
157 Mot inconnu : nb => Par défaut, les "layouts" sont en mode "float" pour tous les tags (nb: un tag correspond plus ou moins à un bureau virtuel). | nb

158 Mot inconnu : layout => Cependant, il est possible de configurer chaque tag avec un layout particulier. Par exemple, j'aime bien avoir mon navigateur web en mode "float" pour ne pas avoir une fenêtre de notification qui occupe la moité de mon écran quand elle apparaît. | layout
158 Guillemets typographiques ouvrants. => Cependant, il est possible de configurer chaque tag avec un layout particulier. Par exemple, j'aime bien avoir mon navigateur web en mode "float" pour ne pas avoir une fenêtre de notification qui occupe la moité de mon écran quand elle apparaît. | " => suggestions : ['«\xa0', '“']
158 Mot inconnu : float => Cependant, il est possible de configurer chaque tag avec un layout particulier. Par exemple, j'aime bien avoir mon navigateur web en mode "float" pour ne pas avoir une fenêtre de notification qui occupe la moité de mon écran quand elle apparaît. | float
158 Guillemets typographiques fermants. => Cependant, il est possible de configurer chaque tag avec un layout particulier. Par exemple, j'aime bien avoir mon navigateur web en mode "float" pour ne pas avoir une fenêtre de notification qui occupe la moité de mon écran quand elle apparaît. | " => suggestions : ['\xa0»', '”']

159 Mot inconnu : rc => Pour ceci, il faut repérer la partie Tags de votre rc.lua (plutôt au début) et la remplacer par celle-ci: | rc
159 Mot inconnu : lua => Pour ceci, il faut repérer la partie Tags de votre rc.lua (plutôt au début) et la remplacer par celle-ci: | lua

177 Mot inconnu : rc => Pour lancer des applications au démarrage rien de plus simple, il suffit de rajouter cette ligne (en fin de fichier rc.lua) pour lancer nm-applet (applet de Network-Manager) | rc
177 Mot inconnu : lua => Pour lancer des applications au démarrage rien de plus simple, il suffit de rajouter cette ligne (en fin de fichier rc.lua) pour lancer nm-applet (applet de Network-Manager) | lua
177 Mot inconnu : Network-Manager => Pour lancer des applications au démarrage rien de plus simple, il suffit de rajouter cette ligne (en fin de fichier rc.lua) pour lancer nm-applet (applet de Network-Manager) | network-manager

181 Erreur d’accord probable avec « les exécutables ». => Bien évidemment ceci est valable pour tout les exécutables que vous voudriez lancer au démarrage :D | tout => suggestions : ['tous']

185 Mot inconnu : lua => La zone de notification se situe par défaut en haut à droite, à côté de l'horloge. Il est très facile d'écrire des widgets en lua afin de, par exemple, afficher des notifications à propos de l'état de la batterie ou encore créer un applet de son. Cependant, si cela vous rebute, il y existe également des librairies de widgets toute prêtes dont l'utilisation est détaillée ci-dessous. | lua

187 Mot inconnu : Precious => === Precious (Widgets de Rolinh) === | precious
187 Mot inconnu : Rolinh => === Precious (Widgets de Rolinh) === | rolinh

188 Accord erroné : “widgets” et “écrit” ne sont pas accordés. Mettez au pluriel. => <note important>Ces widgets ont été écrit pas mes soins et adapté à mes machines. Par conséquent, il est possible qu'il y ait quelques modifications mineures à apporter à certains de ces widgets afin qu'ils marchent correctement pour vous. Rien d'insurmontable cependant. Libre à vous également de les adapter/modifier comme bon vous semble! On peut les trouver dans ce [[http://projects.gw-computing.net/projects/precious/repository|dépôt git]]. Il est prévu que je les améliore dans le futur afin de les rendre plus générique.</note> | écrit => suggestions : ['écrits']

189 Mot inconnu : Awesome => <note warning>Depuis la version 3.5 (sortie en décembre 2012), les API Awesome pour les widgets ont complétement changés. Étant donné que Precious souffre également du manque d'une couche d'abstraction pour récupérer les informations nécessaires aux widgets, je ne vais pas fournir l'effort d'adapter les widgets à Awesome 3.5 (pour le moment en tout cas). La librairie Vicious fonctionne avec Awesome 3.5 et constiture à mon avis une bonne alternative.</note> | awesome
189 Mot inconnu : Precious => <note warning>Depuis la version 3.5 (sortie en décembre 2012), les API Awesome pour les widgets ont complétement changés. Étant donné que Precious souffre également du manque d'une couche d'abstraction pour récupérer les informations nécessaires aux widgets, je ne vais pas fournir l'effort d'adapter les widgets à Awesome 3.5 (pour le moment en tout cas). La librairie Vicious fonctionne avec Awesome 3.5 et constiture à mon avis une bonne alternative.</note> | precious
189 Mot inconnu : Awesome => <note warning>Depuis la version 3.5 (sortie en décembre 2012), les API Awesome pour les widgets ont complétement changés. Étant donné que Precious souffre également du manque d'une couche d'abstraction pour récupérer les informations nécessaires aux widgets, je ne vais pas fournir l'effort d'adapter les widgets à Awesome 3.5 (pour le moment en tout cas). La librairie Vicious fonctionne avec Awesome 3.5 et constiture à mon avis une bonne alternative.</note> | awesome
189 Mot inconnu : Vicious => <note warning>Depuis la version 3.5 (sortie en décembre 2012), les API Awesome pour les widgets ont complétement changés. Étant donné que Precious souffre également du manque d'une couche d'abstraction pour récupérer les informations nécessaires aux widgets, je ne vais pas fournir l'effort d'adapter les widgets à Awesome 3.5 (pour le moment en tout cas). La librairie Vicious fonctionne avec Awesome 3.5 et constiture à mon avis une bonne alternative.</note> | vicious
189 Mot inconnu : Awesome => <note warning>Depuis la version 3.5 (sortie en décembre 2012), les API Awesome pour les widgets ont complétement changés. Étant donné que Precious souffre également du manque d'une couche d'abstraction pour récupérer les informations nécessaires aux widgets, je ne vais pas fournir l'effort d'adapter les widgets à Awesome 3.5 (pour le moment en tout cas). La librairie Vicious fonctionne avec Awesome 3.5 et constiture à mon avis une bonne alternative.</note> | awesome
189 Mot inconnu : constiture => <note warning>Depuis la version 3.5 (sortie en décembre 2012), les API Awesome pour les widgets ont complétement changés. Étant donné que Precious souffre également du manque d'une couche d'abstraction pour récupérer les informations nécessaires aux widgets, je ne vais pas fournir l'effort d'adapter les widgets à Awesome 3.5 (pour le moment en tout cas). La librairie Vicious fonctionne avec Awesome 3.5 et constiture à mon avis une bonne alternative.</note> | constiture

197 Mot inconnu : rc => Ajouter des widgets peut se faire de plusieurs manières, la plus simple étant de copier le code d'un widget directement dans votre rc.lua. En revanche, cette méthode n'est pas recommandée car si des mises-à-jours sont apportées aux widgets, vous devrez recommencer le processus sans compter que vous ne serez pas forcément au courant des mises-à-jour. | rc
197 Mot inconnu : lua => Ajouter des widgets peut se faire de plusieurs manières, la plus simple étant de copier le code d'un widget directement dans votre rc.lua. En revanche, cette méthode n'est pas recommandée car si des mises-à-jours sont apportées aux widgets, vous devrez recommencer le processus sans compter que vous ne serez pas forcément au courant des mises-à-jour. | lua

198 Mot inconnu : awesome => La méthode recommandée consiste donc à cloner le dépôt [[git|git]] dans votre dossier awesome. Pour cela, il vous faut bien sûr que git soit installé sur votre machine. | awesome

201 Mot inconnu : Awesome => Afin de cloner le dépôt, rendez-vous d'abord dans votre dossier de configuration d'Awesome: | awesome

205 Mot inconnu : precious => Puis clonez le dépôt precious: | precious

209 Mot inconnu : precious => Cette commande créera un dossier nommé //precious// contenant tous les widgets. Par la suite, afin de mettre à jour vos widgets, il suffira de ce rendre dans ce dossier et de lancer cette commande: | precious
209 Confusion : « rendre » est un verbe. Exemples : ce bâtiment, se perdre. => Cette commande créera un dossier nommé //precious// contenant tous les widgets. Par la suite, afin de mettre à jour vos widgets, il suffira de ce rendre dans ce dossier et de lancer cette commande: | ce => suggestions : ['se']

214 Espace(s) surnuméraire(s) à supprimer. => Si  vous avez donc cloné le dépôt, comme il est recommandé, les widgets ne seront pas ajoutés à votre configuration pour autant. Et heureusement car il est fort probable que vous ne vouliez utiliser qu'un ou quelques widgets sans forcément utiliser la collection complète. |    => suggestions : [' ']
214 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Si  vous avez donc cloné le dépôt, comme il est recommandé, les widgets ne seront pas ajoutés à votre configuration pour autant. Et heureusement car il est fort probable que vous ne vouliez utiliser qu'un ou quelques widgets sans forcément utiliser la collection complète. |  car => suggestions : [', car']
220 Mot inconnu : rc => Cependant, ce n'est pas tout: il faut également les mentionner dans la liste des widgets de votre //rc.lua// (mywibox) qui ressemble à quelque chose comme ça: | rc
220 Mot inconnu : lua => Cependant, ce n'est pas tout: il faut également les mentionner dans la liste des widgets de votre //rc.lua// (mywibox) qui ressemble à quelque chose comme ça: | lua
220 Mot inconnu : mywibox => Cependant, ce n'est pas tout: il faut également les mentionner dans la liste des widgets de votre //rc.lua// (mywibox) qui ressemble à quelque chose comme ça: | mywibox

246 Mot inconnu : tb_volume => Si on poursuit avec l'exemple du widget pour le son, il vous faut donc encore ajouter //tb_volume// dans la liste. | tb_volume

248 Mot inconnu : rc => Si ce n'est pas bien clair, il suffit de regarder comment cela est fait dans mon rc.lua disponible dans [[http://git.rolinh.ch/index.php?p=dotfiles.git&a=summary|mon dépôt de configurations]]. ;-) (notez que mon rc.lua est séparé en plusieurs fichiers mais la partie concernant l'inclusion des widgets se trouve bien là). | rc
248 Mot inconnu : lua => Si ce n'est pas bien clair, il suffit de regarder comment cela est fait dans mon rc.lua disponible dans [[http://git.rolinh.ch/index.php?p=dotfiles.git&a=summary|mon dépôt de configurations]]. ;-) (notez que mon rc.lua est séparé en plusieurs fichiers mais la partie concernant l'inclusion des widgets se trouve bien là). | lua
248 Mot inconnu : rc => Si ce n'est pas bien clair, il suffit de regarder comment cela est fait dans mon rc.lua disponible dans [[http://git.rolinh.ch/index.php?p=dotfiles.git&a=summary|mon dépôt de configurations]]. ;-) (notez que mon rc.lua est séparé en plusieurs fichiers mais la partie concernant l'inclusion des widgets se trouve bien là). | rc
248 Mot inconnu : lua => Si ce n'est pas bien clair, il suffit de regarder comment cela est fait dans mon rc.lua disponible dans [[http://git.rolinh.ch/index.php?p=dotfiles.git&a=summary|mon dépôt de configurations]]. ;-) (notez que mon rc.lua est séparé en plusieurs fichiers mais la partie concernant l'inclusion des widgets se trouve bien là). | lua

254 Guillemets typographiques ouvrants. => Pour cela, il faut rajouter ces lignes dans la partie "keybindings" de votre rc.lua: | " => suggestions : ['«\xa0', '“']
254 Mot inconnu : keybindings => Pour cela, il faut rajouter ces lignes dans la partie "keybindings" de votre rc.lua: | keybindings
254 Guillemets typographiques fermants. => Pour cela, il faut rajouter ces lignes dans la partie "keybindings" de votre rc.lua: | " => suggestions : ['\xa0»', '”']
254 Mot inconnu : rc => Pour cela, il faut rajouter ces lignes dans la partie "keybindings" de votre rc.lua: | rc
254 Mot inconnu : lua => Pour cela, il faut rajouter ces lignes dans la partie "keybindings" de votre rc.lua: | lua

260 Mot inconnu : rc => Pour le reste, il vous suffit d'inclure le code correspondant au widget pour le son à votre rc.lua: | rc
260 Mot inconnu : lua => Pour le reste, il vous suffit d'inclure le code correspondant au widget pour le son à votre rc.lua: | lua

266 Mot inconnu : mocplayer => === Applet pour mocplayer (mocp) === | mocplayer
266 Mot inconnu : mocp => === Applet pour mocplayer (mocp) === | mocp

267 Mot inconnu : mocplayer => <note>Cet applet fonctionne uniquement avec mocplayer qui est un lecteur de musique en console</note> | mocplayer

269 Mot inconnu : mocplayer => Pour une utilisation optimale de ce widget, il est recommandé d'ajouter des raccourcis qui vous permettent de contrôler le mocplayer. Pour ceci, ajouter le bout de code suivant à votre rc.lua dans la section "keybindings": | mocplayer
269 Mot inconnu : rc => Pour une utilisation optimale de ce widget, il est recommandé d'ajouter des raccourcis qui vous permettent de contrôler le mocplayer. Pour ceci, ajouter le bout de code suivant à votre rc.lua dans la section "keybindings": | rc
269 Mot inconnu : lua => Pour une utilisation optimale de ce widget, il est recommandé d'ajouter des raccourcis qui vous permettent de contrôler le mocplayer. Pour ceci, ajouter le bout de code suivant à votre rc.lua dans la section "keybindings": | lua
269 Guillemets typographiques ouvrants. => Pour une utilisation optimale de ce widget, il est recommandé d'ajouter des raccourcis qui vous permettent de contrôler le mocplayer. Pour ceci, ajouter le bout de code suivant à votre rc.lua dans la section "keybindings": | " => suggestions : ['«\xa0', '“']
269 Mot inconnu : keybindings => Pour une utilisation optimale de ce widget, il est recommandé d'ajouter des raccourcis qui vous permettent de contrôler le mocplayer. Pour ceci, ajouter le bout de code suivant à votre rc.lua dans la section "keybindings": | keybindings
269 Guillemets typographiques fermants. => Pour une utilisation optimale de ce widget, il est recommandé d'ajouter des raccourcis qui vous permettent de contrôler le mocplayer. Pour ceci, ajouter le bout de code suivant à votre rc.lua dans la section "keybindings": | " => suggestions : ['\xa0»', '”']

274 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => <note tip>Vous pouvez très bien remplacer la touche contrôle par une autre que vous souhaitez. A noter que le raccourcis play/pause permet de lancer automatiquement mocplayer sans même le lancer dans un terminal (il commencera la lecture de votre denière playlist), ce qui est très pratique à l'usage.</note> | a => suggestions : ['À']
274 Accord de nombre erroné : « raccourcis » est au pluriel. => <note tip>Vous pouvez très bien remplacer la touche contrôle par une autre que vous souhaitez. A noter que le raccourcis play/pause permet de lancer automatiquement mocplayer sans même le lancer dans un terminal (il commencera la lecture de votre denière playlist), ce qui est très pratique à l'usage.</note> | le => suggestions : ['les']
274 Accord de nombre erroné : « raccourcis » devrait être au singulier. => <note tip>Vous pouvez très bien remplacer la touche contrôle par une autre que vous souhaitez. A noter que le raccourcis play/pause permet de lancer automatiquement mocplayer sans même le lancer dans un terminal (il commencera la lecture de votre denière playlist), ce qui est très pratique à l'usage.</note> | raccourcis => suggestions : ['raccourci']
274 Mot inconnu : play => <note tip>Vous pouvez très bien remplacer la touche contrôle par une autre que vous souhaitez. A noter que le raccourcis play/pause permet de lancer automatiquement mocplayer sans même le lancer dans un terminal (il commencera la lecture de votre denière playlist), ce qui est très pratique à l'usage.</note> | play
274 Mot inconnu : mocplayer => <note tip>Vous pouvez très bien remplacer la touche contrôle par une autre que vous souhaitez. A noter que le raccourcis play/pause permet de lancer automatiquement mocplayer sans même le lancer dans un terminal (il commencera la lecture de votre denière playlist), ce qui est très pratique à l'usage.</note> | mocplayer
274 Mot inconnu : denière => <note tip>Vous pouvez très bien remplacer la touche contrôle par une autre que vous souhaitez. A noter que le raccourcis play/pause permet de lancer automatiquement mocplayer sans même le lancer dans un terminal (il commencera la lecture de votre denière playlist), ce qui est très pratique à l'usage.</note> | denière

289 Mot inconnu : include => Il suffit d'include le widget: | include

309 Mot inconnu : emails => === Applet de notification des emails pour Gmail === | emails
309 Mot inconnu : Gmail => === Applet de notification des emails pour Gmail === | gmail

310 Mot inconnu : emails => Cet applet va vérifier s'il y a des emails non-lus sur votre compte Gmail et notifie le nombre via un numéro. | emails
310 Mot inconnu : Gmail => Cet applet va vérifier s'il y a des emails non-lus sur votre compte Gmail et notifie le nombre via un numéro. | gmail

336 Mot inconnu : rc => Maintenant, il faut ajouter ce bout de code dans votre rc.lua pour le widget en prenant soin de remplacer le chemin du fichier tmp pour gmail par le votre: | rc
336 Mot inconnu : lua => Maintenant, il faut ajouter ce bout de code dans votre rc.lua pour le widget en prenant soin de remplacer le chemin du fichier tmp pour gmail par le votre: | lua
336 Mot inconnu : tmp => Maintenant, il faut ajouter ce bout de code dans votre rc.lua pour le widget en prenant soin de remplacer le chemin du fichier tmp pour gmail par le votre: | tmp
336 Mot inconnu : gmail => Maintenant, il faut ajouter ce bout de code dans votre rc.lua pour le widget en prenant soin de remplacer le chemin du fichier tmp pour gmail par le votre: | gmail
336 Confusion : « votre possession », « la vôtre ». => Maintenant, il faut ajouter ce bout de code dans votre rc.lua pour le widget en prenant soin de remplacer le chemin du fichier tmp pour gmail par le votre: | votre => suggestions : ['vôtre']

362 Mot inconnu : Vicious => === Vicious === | vicious

363 Mot inconnu : anrxc => Tout d'abord, une bonne idée est d'aller faire un tour sur [[https://sysphere.org/~anrxc/j/archives/2009/07/09/vicious_widgets_for_awesome_wm/index.html|le site officiel de Vicious]], ou sur [[http://awesome.naquadah.org/wiki/Vicious|la section Vicious du wiki officiel d'Awesome]], avant de télécharger le code des widgets sur [[http://git.sysphere.org/vicious/|le dépôt Git officiel]]. | anrxc
363 Mot inconnu : vicious_widgets_for_awesome_wm => Tout d'abord, une bonne idée est d'aller faire un tour sur [[https://sysphere.org/~anrxc/j/archives/2009/07/09/vicious_widgets_for_awesome_wm/index.html|le site officiel de Vicious]], ou sur [[http://awesome.naquadah.org/wiki/Vicious|la section Vicious du wiki officiel d'Awesome]], avant de télécharger le code des widgets sur [[http://git.sysphere.org/vicious/|le dépôt Git officiel]]. | vicious_widgets_for_awesome_wm
363 Mot inconnu : html => Tout d'abord, une bonne idée est d'aller faire un tour sur [[https://sysphere.org/~anrxc/j/archives/2009/07/09/vicious_widgets_for_awesome_wm/index.html|le site officiel de Vicious]], ou sur [[http://awesome.naquadah.org/wiki/Vicious|la section Vicious du wiki officiel d'Awesome]], avant de télécharger le code des widgets sur [[http://git.sysphere.org/vicious/|le dépôt Git officiel]]. | html
363 Mot inconnu : Vicious => Tout d'abord, une bonne idée est d'aller faire un tour sur [[https://sysphere.org/~anrxc/j/archives/2009/07/09/vicious_widgets_for_awesome_wm/index.html|le site officiel de Vicious]], ou sur [[http://awesome.naquadah.org/wiki/Vicious|la section Vicious du wiki officiel d'Awesome]], avant de télécharger le code des widgets sur [[http://git.sysphere.org/vicious/|le dépôt Git officiel]]. | vicious
363 Mot inconnu : Vicious => Tout d'abord, une bonne idée est d'aller faire un tour sur [[https://sysphere.org/~anrxc/j/archives/2009/07/09/vicious_widgets_for_awesome_wm/index.html|le site officiel de Vicious]], ou sur [[http://awesome.naquadah.org/wiki/Vicious|la section Vicious du wiki officiel d'Awesome]], avant de télécharger le code des widgets sur [[http://git.sysphere.org/vicious/|le dépôt Git officiel]]. | vicious
363 Mot inconnu : Awesome => Tout d'abord, une bonne idée est d'aller faire un tour sur [[https://sysphere.org/~anrxc/j/archives/2009/07/09/vicious_widgets_for_awesome_wm/index.html|le site officiel de Vicious]], ou sur [[http://awesome.naquadah.org/wiki/Vicious|la section Vicious du wiki officiel d'Awesome]], avant de télécharger le code des widgets sur [[http://git.sysphere.org/vicious/|le dépôt Git officiel]]. | awesome

365 Mot inconnu : rc => ==== Astuce permettant de tester sans risques son rc.lua ==== | rc
365 Mot inconnu : lua => ==== Astuce permettant de tester sans risques son rc.lua ==== | lua
366 Mot inconnu : rc => Cela vous est peut-être déjà arrivé: une erreur dans le rc.lua et hop, on se retrouve avec quelque chose d'inutilisable. | rc
366 Mot inconnu : lua => Cela vous est peut-être déjà arrivé: une erreur dans le rc.lua et hop, on se retrouve avec quelque chose d'inutilisable. | lua

367 Mot inconnu : rc => Voici deux astuces à combiner qui permettent de tester son rc.lua avant de l'utiliser. | rc
367 Mot inconnu : lua => Voici deux astuces à combiner qui permettent de tester son rc.lua avant de l'utiliser. | lua

369 Mot inconnu : rc => Il suffit d'oublier de fermer une parenthèse ou d'oublier une virgule pour que la configuration ne marche pas. Afin d'éviter cela, il est possible de faire une vérification syntaxique du rc.lua: | rc
369 Mot inconnu : lua => Il suffit d'oublier de fermer une parenthèse ou d'oublier une virgule pour que la configuration ne marche pas. Afin d'éviter cela, il est possible de faire une vérification syntaxique du rc.lua: | lua

371 Mot inconnu : Xephyr => === Utiliser Xephyr pour tester la configuration === | xephyr

372 Si « mais » est la conjonction de coordination, une virgule est souhaitable si elle introduit une nouvelle proposition. => La commande ci-dessus permet uniquement de vérifier la syntaxe mais elle ne vous permet pas de tester les changements apportés à la configuration. |  mais => suggestions : [', mais']

373 Mot inconnu : archlinux => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | archlinux
373 Mot inconnu : Xephyr => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | xephyr
373 Mot inconnu : rc => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | rc
373 Mot inconnu : lua => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | lua
373 Il manque un espace. => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | test => suggestions : [' test']
373 Mot inconnu : awesome => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | awesome
373 Mot inconnu : Xephyr => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. | xephyr
373 Il manque un espace à côté du tiret. => Une astuce, tirée du wiki d'archlinux, propose d'utiliser Xephyr. L'idée est d'enregistrer ses modifications dans un nouveau //rc.lua//, par exemple //rc.test.lua// et de lancer awesome avec cette configuration dans Xephyr au moyen de l'option -c. |  - => suggestions : [' – ', ' — ']
374 Pas d’espace avant ce signe. => Pour ce faire, passez la commande suivante (vous pouvez changer la résolution à loisir ;-) ) afin de lancer Xephyr (note: s'il n'est pas déjà installé, cliquez ici sur ce lien apt **[[apt>xserver-xephyr]]**): |  ) => suggestions : [')']
374 Mot inconnu : Xephyr => Pour ce faire, passez la commande suivante (vous pouvez changer la résolution à loisir ;-) ) afin de lancer Xephyr (note: s'il n'est pas déjà installé, cliquez ici sur ce lien apt **[[apt>xserver-xephyr]]**): | xephyr
374 Mot inconnu : xserver-xephyr => Pour ce faire, passez la commande suivante (vous pouvez changer la résolution à loisir ;-) ) afin de lancer Xephyr (note: s'il n'est pas déjà installé, cliquez ici sur ce lien apt **[[apt>xserver-xephyr]]**): | xserver-xephyr

376 Mot inconnu : awesome => Une fois ceci fait, lancez awesome: | awesome

378 Mot inconnu : rc => Et voilà, plus qu'à vérifier que les changements apportés conviennent et le cas échéant, remplacer son //rc.lua// par le //rc.test.lua// ;-) | rc
378 Mot inconnu : lua => Et voilà, plus qu'à vérifier que les changements apportés conviennent et le cas échéant, remplacer son //rc.lua// par le //rc.test.lua// ;-) | lua
378 Il manque un espace. => Et voilà, plus qu'à vérifier que les changements apportés conviennent et le cas échéant, remplacer son //rc.lua// par le //rc.test.lua// ;-) | test => suggestions : [' test']

379 Guillemets typographiques ouvrants. => ===="Astuces" en rapport avec des logiciels annexes==== | " => suggestions : ['«\xa0', '“']
379 Guillemets typographiques fermants. => ===="Astuces" en rapport avec des logiciels annexes==== | " => suggestions : ['\xa0»', '”']

381 Mot inconnu : Conky => ===Conky=== | conky

382 Mot inconnu : desirez => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | desirez
382 Mot inconnu : conky => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | conky
382 Mot inconnu : conky => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | conky
382 Mot inconnu : puissient => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | puissient
382 Mot inconnu : etre => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | etre
382 Mot inconnu : fenetres => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | fenetres
382 Mot inconnu : conkyrc => Si vous desirez que votre conky (ou vos conky) ne puissient pas etre recouverts par les fenetres il suffit pour cela de rajouter (ou modifier) ces lignes dans votre **conkyrc**: | conkyrc

389 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A venir, merci de ne pas envahir cette section ;) Elle aura simplement pour but de donner un apercu des possibilités ;) | a => suggestions : ['À']
389 Mot inconnu : apercu => A venir, merci de ne pas envahir cette section ;) Elle aura simplement pour but de donner un apercu des possibilités ;) | apercu

391 Mot inconnu : ImageMagick => === Avec ImageMagick === | imagemagick
393 Mot inconnu : ImageMagick => Une astuce simple pour prendre un screenshot est d'utiliser ImageMagick en tapant dans votre console: | imagemagick
