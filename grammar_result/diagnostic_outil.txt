9 Espace(s) en fin de ligne à supprimer. [[78:79]] => Quelle horreur pour le novice qui se retrouve devant un curseur qui clignote !  <|>   => suggestions : ['']

16 Pas d’espace après ce signe. [[55:57]] => Toutes ces informations sont présentes avec un //man// ( syntaxe : //man <nom de la commande>// ) dans un terminal. Le //man// vous donnera aussi toutes les options disponibles. Avec un peu de chance, elles seront en français. <|> (  => suggestions : ['(']
16 Pas d’espace avant ce signe. [[95:97]] => Toutes ces informations sont présentes avec un //man// ( syntaxe : //man <nom de la commande>// ) dans un terminal. Le //man// vous donnera aussi toutes les options disponibles. Avec un peu de chance, elles seront en français. <|>  ) => suggestions : [')']

22 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[141:145]] => La ligne de commande est souvent utilisée dans le wiki de la documentation, non pas parce qu'il est impossible de faire sans, mais simplement car il est plus simple de copier-coller des lignes dans un terminal que de décrire un à un tous les boutons sur lesquels on doit cliquer sur une interface graphique... <|>  car => suggestions : [', car']
22 Typographie : points de suspension. Utilisez le caractère dédié. [[306:309]] => La ligne de commande est souvent utilisée dans le wiki de la documentation, non pas parce qu'il est impossible de faire sans, mais simplement car il est plus simple de copier-coller des lignes dans un terminal que de décrire un à un tous les boutons sur lesquels on doit cliquer sur une interface graphique... <|> ... => suggestions : ['…']

35 Mot inconnu : debug [[30:35]] => L'option s'appelle en général debug :  <|> debug
35 Espace(s) en fin de ligne à supprimer. [[37:38]] => L'option s'appelle en général debug :  <|>   => suggestions : ['']

36 Il manque un espace. [[25:30]] => <nom_du_programme> %%--%%debug ou -d <|> debug => suggestions : [' debug']
36 Mot inconnu : debug [[25:30]] => <nom_du_programme> %%--%%debug ou -d <|> debug
36 Il manque un espace à côté du tiret. [[33:35]] => <nom_du_programme> %%--%%debug ou -d <|>  - => suggestions : [' – ', ' — ']

40 Mot inconnu : rhythmbox [[7:16]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> rhythmbox
40 Mot inconnu : rhythmbox [[51:60]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> rhythmbox
40 Mot inconnu : debug [[83:88]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> debug
40 Pas d’espace après ce signe. [[89:91]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> (  => suggestions : ['(']
40 Pas d’espace avant ce signe. [[122:124]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|>  ) => suggestions : [')']
40 Il manque un espace à côté du tiret. [[146:148]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|>  - => suggestions : [' – ', ' — ']
40 Guillemets typographiques ouvrants. [[179:180]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> " => suggestions : ['«\xa0', '“']
40 Mot inconnu : debug [[180:185]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> debug
40 Guillemets typographiques fermants. [[185:186]] => Lancer rhythmbox avec un terminal va vous exécuter rhythmbox mais sans la fonction debug ( afficher les messages d'erreurs ), il faut donc ajouter -d pour avoir la fonctionnalité "debug". <|> " => suggestions : ['\xa0»', '”']

52 Mot inconnu : raccourcis_clavier [[14:32]] => Voir sur la [[raccourcis_clavier|page dédiée]]. <|> raccourcis_clavier
56 Espace(s) en fin de ligne à supprimer. [[21:22]] => Alors voyons un peu :  <|>   => suggestions : ['']

60 Guillemets typographiques ouvrants. [[50:51]] => Comment s'appelle la barre verticale au milieu de "ls" et de "echo" ? \\ <|> " => suggestions : ['«\xa0', '“']
60 Mot inconnu : ls [[51:53]] => Comment s'appelle la barre verticale au milieu de "ls" et de "echo" ? \\ <|> ls
60 Guillemets typographiques fermants. [[53:54]] => Comment s'appelle la barre verticale au milieu de "ls" et de "echo" ? \\ <|> " => suggestions : ['\xa0»', '”']
60 Guillemets typographiques ouvrants. [[61:62]] => Comment s'appelle la barre verticale au milieu de "ls" et de "echo" ? \\ <|> " => suggestions : ['«\xa0', '“']
60 Mot inconnu : echo [[62:66]] => Comment s'appelle la barre verticale au milieu de "ls" et de "echo" ? \\ <|> echo
60 Guillemets typographiques fermants. [[66:67]] => Comment s'appelle la barre verticale au milieu de "ls" et de "echo" ? \\ <|> " => suggestions : ['\xa0»', '”']
61 Mot inconnu : ls [[139:141]] => Comment vous dites, un L minuscule ? Perdu !! c'est un "[[pipe]]" c'est-à-dire une commande qui permet de diriger la sortie de la commande ls dans l'entrée de la commande echo. <|> ls
61 Mot inconnu : echo [[171:175]] => Comment vous dites, un L minuscule ? Perdu !! c'est un "[[pipe]]" c'est-à-dire une commande qui permet de diriger la sortie de la commande ls dans l'entrée de la commande echo. <|> echo

63 Si “AltGr” marque le début d’une proposition, une virgule est probablement souhaitable. [[8:18]] => Pour le reproduire AltGr + <la touche 6 du pavé alphanumérique> (pour les claviers français) ou  AltGr + <la touche 1 du pavé alphanumérique> (pour les claviers belges).<note warning>Sur les claviers français ce serait plutôt **AltGr + -**.</note> <|> reproduire => suggestions : ['reproduire,']
63 Espace(s) surnuméraire(s) à supprimer. [[95:97]] => Pour le reproduire AltGr + <la touche 6 du pavé alphanumérique> (pour les claviers français) ou  AltGr + <la touche 1 du pavé alphanumérique> (pour les claviers belges).<note warning>Sur les claviers français ce serait plutôt **AltGr + -**.</note> <|>    => suggestions : [' ']

69 Mot inconnu : ca [[6:8]] => Comme ca ?  ' ' <|> ca
69 Espace(s) surnuméraire(s) à supprimer. [[10:12]] => Comme ca ?  ' ' <|>    => suggestions : [' ']

77 Mot inconnu : è [[67:68]] => <note warning>Sur les claviers français ce serait plutôt **AltGr + è**.</note> <|> è
85 Espace(s) surnuméraire(s) à supprimer. [[38:40]] =>   * **Voir la documentation complète :  [[commandes_dangereuses]]** <|>    => suggestions : [' ']
85 Mot inconnu : commandes_dangereuses [[42:63]] =>   * **Voir la documentation complète :  [[commandes_dangereuses]]** <|> commandes_dangereuses

132 Mot inconnu : sudo [[6:10]] => <code>sudo lshw -html >MyGNULinuxBox.html</code></note> <|> sudo
132 Mot inconnu : lshw [[11:15]] => <code>sudo lshw -html >MyGNULinuxBox.html</code></note> <|> lshw
132 Il manque un espace à côté du tiret. [[15:17]] => <code>sudo lshw -html >MyGNULinuxBox.html</code></note> <|>  - => suggestions : [' – ', ' — ']
132 Mot inconnu : html [[17:21]] => <code>sudo lshw -html >MyGNULinuxBox.html</code></note> <|> html
132 Mot inconnu : MyGNULinuxBox [[23:36]] => <code>sudo lshw -html >MyGNULinuxBox.html</code></note> <|> mygnulinuxbox
132 Mot inconnu : html [[37:41]] => <code>sudo lshw -html >MyGNULinuxBox.html</code></note> <|> html
138 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[6:11]] =>   * **lsmod** - Afficher la liste des modules du noyau chargés en mémoire. Le format est : nom, taille, compteur d'usage, liste des modules l'utilisant. Les informations affichées sont tirées (et donc identiques à celles) de /proc/modules. <|> lsmod => suggestions : ['Lsmod']
138 Mot inconnu : lsmod [[6:11]] =>   * **lsmod** - Afficher la liste des modules du noyau chargés en mémoire. Le format est : nom, taille, compteur d'usage, liste des modules l'utilisant. Les informations affichées sont tirées (et donc identiques à celles) de /proc/modules. <|> lsmod
138 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[13:16]] =>   * **lsmod** - Afficher la liste des modules du noyau chargés en mémoire. Le format est : nom, taille, compteur d'usage, liste des modules l'utilisant. Les informations affichées sont tirées (et donc identiques à celles) de /proc/modules. <|>  -  => suggestions : [' – ', ' — ', ' − ']
138 Mot inconnu : proc [[226:230]] =>   * **lsmod** - Afficher la liste des modules du noyau chargés en mémoire. Le format est : nom, taille, compteur d'usage, liste des modules l'utilisant. Les informations affichées sont tirées (et donc identiques à celles) de /proc/modules. <|> proc
139 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[6:13]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> modinfo => suggestions : ['Modinfo']
139 Mot inconnu : modinfo [[6:13]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> modinfo
139 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[15:18]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|>  -  => suggestions : [' – ', ' — ', ' − ']
139 Mot inconnu : lsmod [[93:98]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> lsmod
139 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[143:147]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|>  car => suggestions : [', car']
139 Mot inconnu : modinfo [[436:443]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> modinfo
139 Guillemets typographiques ouvrants. [[455:456]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> " => suggestions : ['«\xa0', '“']
139 Mot inconnu : ath9k [[464:469]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> ath9k
139 Mot inconnu : nohwcrypt [[470:479]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> nohwcrypt
139 Guillemets typographiques fermants. [[481:482]] =>   * **modinfo** - Affiche les informations détaillées sur un module donné (tel que listé par lsmod, par exemple). Cette commande est très utile car elle peut fournir des informations concernant les paramètres qu'un module peut supporter pour affiner sa configuration dans certaines situations (permet par exemple de créer des fichiers de configuration par module /etc/modprobe.d/nom_du_module.conf contenant les paramètres indiqués par modinfo. Exemple : "options ath9k nohwcrypt=1"). <|> " => suggestions : ['\xa0»', '”']
141 Mot inconnu : insmod [[6:12]] =>   * **insmod, rmmod** sont des commandes qui permettent de faire une seule action (en comparaison de modprobe qui a d'autres options), celle de charger ou décharger (insmod, rmmod respectivement) un module sans ses dépendances. <|> insmod
141 Mot inconnu : rmmod [[14:19]] =>   * **insmod, rmmod** sont des commandes qui permettent de faire une seule action (en comparaison de modprobe qui a d'autres options), celle de charger ou décharger (insmod, rmmod respectivement) un module sans ses dépendances. <|> rmmod
141 Mot inconnu : modprobe [[101:109]] =>   * **insmod, rmmod** sont des commandes qui permettent de faire une seule action (en comparaison de modprobe qui a d'autres options), celle de charger ou décharger (insmod, rmmod respectivement) un module sans ses dépendances. <|> modprobe
141 Mot inconnu : insmod [[166:172]] =>   * **insmod, rmmod** sont des commandes qui permettent de faire une seule action (en comparaison de modprobe qui a d'autres options), celle de charger ou décharger (insmod, rmmod respectivement) un module sans ses dépendances. <|> insmod
141 Mot inconnu : rmmod [[174:179]] =>   * **insmod, rmmod** sont des commandes qui permettent de faire une seule action (en comparaison de modprobe qui a d'autres options), celle de charger ou décharger (insmod, rmmod respectivement) un module sans ses dépendances. <|> rmmod
146 Mot inconnu : ndiswrapper [[127:138]] =>   * **/etc/modules**  : ce fichier permet d'ajouter des modules à charger manuellement dans le noyau au démarrage. Par exemple ndiswrapper (qui permet de prendre en charge le matériel Wifi). Il suffit d'ajouter le nom du module à charger à la fin du fichier (un module par ligne). <|> ndiswrapper
152 Mot inconnu : inxi [[6:10]] =>   * **inxi -Fz** résultats humainement lisible de toutes les caractéristiques de la machine. <|> inxi
152 Il manque un espace à côté du tiret. [[10:12]] =>   * **inxi -Fz** résultats humainement lisible de toutes les caractéristiques de la machine. <|>  - => suggestions : [' – ', ' — ']
152 Mot inconnu : Fz [[12:14]] =>   * **inxi -Fz** résultats humainement lisible de toutes les caractéristiques de la machine. <|> fz
153 Mot inconnu : lsusb [[6:11]] =>   * **lsusb** liste tous les périphériques USB branchés sur votre ordinateur. <|> lsusb
154 Mot inconnu : lspci [[6:11]] =>   * **lspci** est un utilitaire qui permet d'afficher des informations sur tous les bus PCI et le système et tous les périphériques qui y sont connectés. <|> lspci
154 Mot inconnu : PCI [[88:91]] =>   * **lspci** est un utilitaire qui permet d'afficher des informations sur tous les bus PCI et le système et tous les périphériques qui y sont connectés. <|> pci
155 Mot inconnu : lshw [[6:10]] =>   * **lshw** permet d'avoir la configuration matériel détaillée de votre ordinateur <|> lshw
155 Accord de genre erroné : « la configuration » est féminin, « matériel » est masculin. [[45:53]] =>   * **lshw** permet d'avoir la configuration matériel détaillée de votre ordinateur <|> matériel => suggestions : ['matérielle']

159 Mot inconnu : sysinfo [[3:10]] => == sysinfo == <|> sysinfo

164 Mot inconnu : device [[3:9]] => == device manager == <|> device

166 Mot inconnu : gnome-device-manager [[17:37]] => Il y a également gnome-device-manager qui est beaucoup plus complet que sysinfo. <|> gnome-device-manager
166 Mot inconnu : sysinfo [[72:79]] => Il y a également gnome-device-manager qui est beaucoup plus complet que sysinfo. <|> sysinfo

174 Mot inconnu : hardinfo [[3:11]] => == hardinfo == <|> hardinfo
186 Mot inconnu : ifconfig [[6:14]] =>   * **ifconfig** permet de configurer une interface réseau (Ethernet, Wifi) , les actions les plus courantes étant de configurer l'IP, activer ou désactiver l'interface. <|> ifconfig
186 Pas d’espace avant une virgule. [[75:77]] =>   * **ifconfig** permet de configurer une interface réseau (Ethernet, Wifi) , les actions les plus courantes étant de configurer l'IP, activer ou désactiver l'interface. <|>  , => suggestions : [',']
187 Pas d’espace après ce signe. [[14:16]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|> (  => suggestions : ['(']
187 Mot inconnu : add [[16:19]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|> add
187 Il manque un espace à côté du tiret. [[19:21]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|>  - => suggestions : [' – ', ' — ']
187 Mot inconnu : default [[25:32]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|> default
187 Mot inconnu : gw [[33:35]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|> gw
187 Pas d’espace avant ce signe. [[50:52]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|>  ) => suggestions : [')']
187 Espace(s) en fin de ligne à supprimer. [[102:103]] =>   * **route** ( add -net default gw <IPpasserelle> ) permet d'ajouter une route/passerelle par défaut.  <|>   => suggestions : ['']
188 Mot inconnu : dhclient [[6:14]] =>   * **dhclient** permet de lancer une requête dhcp afin de récupérer des paramètres IP auprès du serveur dhcp. <|> dhclient
188 Mot inconnu : dhcp [[46:50]] =>   * **dhclient** permet de lancer une requête dhcp afin de récupérer des paramètres IP auprès du serveur dhcp. <|> dhcp
188 Mot inconnu : dhcp [[105:109]] =>   * **dhclient** permet de lancer une requête dhcp afin de récupérer des paramètres IP auprès du serveur dhcp. <|> dhcp
189 Mot inconnu : iwconfig [[6:14]] =>   * **iwconfig** permet de configurer (en dehors des paramètres IP) les caractéristiques d'une connexion Wifi (nom de la borne associée, puissance du signal émis, clé WEP / WPA...). Cette commande permet aussi de voir si son matériel est reconnu par le système d'exploitation. <|> iwconfig
189 Mot inconnu : WEP [[167:170]] =>   * **iwconfig** permet de configurer (en dehors des paramètres IP) les caractéristiques d'une connexion Wifi (nom de la borne associée, puissance du signal émis, clé WEP / WPA...). Cette commande permet aussi de voir si son matériel est reconnu par le système d'exploitation. <|> wep
189 Mot inconnu : WPA [[173:176]] =>   * **iwconfig** permet de configurer (en dehors des paramètres IP) les caractéristiques d'une connexion Wifi (nom de la borne associée, puissance du signal émis, clé WEP / WPA...). Cette commande permet aussi de voir si son matériel est reconnu par le système d'exploitation. <|> wpa
189 Typographie : points de suspension. Utilisez le caractère dédié. [[176:179]] =>   * **iwconfig** permet de configurer (en dehors des paramètres IP) les caractéristiques d'une connexion Wifi (nom de la borne associée, puissance du signal émis, clé WEP / WPA...). Cette commande permet aussi de voir si son matériel est reconnu par le système d'exploitation. <|> ... => suggestions : ['…']
207 Accord de nombre erroné avec « Neuf » : « Wifi » devrait être au pluriel. [[25:29]] => |**Nom du réseau**: Neuf Wifi | est-ce que je capte bien mon réseau ? est-ce que la diffusion du nom du réseau est activée ? | <|> wifi => suggestions : ['Wifis']

209 Mot inconnu : dbm [[31:34]] => |**Qualité du signal reçu** -93dbm|est-ce que je suis trop loin de la source ? (au delà de 85 dbm il ne faut pas réver ! | <|> dbm
209 Il manque un trait d’union. [[80:87]] => |**Qualité du signal reçu** -93dbm|est-ce que je suis trop loin de la source ? (au delà de 85 dbm il ne faut pas réver ! | <|> au delà => suggestions : ['au-delà']
209 Mot inconnu : dbm [[94:97]] => |**Qualité du signal reçu** -93dbm|est-ce que je suis trop loin de la source ? (au delà de 85 dbm il ne faut pas réver ! | <|> dbm
209 Mot inconnu : réver [[113:118]] => |**Qualité du signal reçu** -93dbm|est-ce que je suis trop loin de la source ? (au delà de 85 dbm il ne faut pas réver ! | <|> réver

211 Mot inconnu : Encryption [[3:13]] => |**Encryption key =  Cryptage** configuré (aucun, wep, wpa ...)|est-ce que ma carte est configurée correctement ? cryptage ? Clé identique entre le routeur et la carte ?| <|> encryption
211 Mot inconnu : key [[14:17]] => |**Encryption key =  Cryptage** configuré (aucun, wep, wpa ...)|est-ce que ma carte est configurée correctement ? cryptage ? Clé identique entre le routeur et la carte ?| <|> key
211 Mot inconnu : wep [[50:53]] => |**Encryption key =  Cryptage** configuré (aucun, wep, wpa ...)|est-ce que ma carte est configurée correctement ? cryptage ? Clé identique entre le routeur et la carte ?| <|> wep
211 Mot inconnu : wpa [[55:58]] => |**Encryption key =  Cryptage** configuré (aucun, wep, wpa ...)|est-ce que ma carte est configurée correctement ? cryptage ? Clé identique entre le routeur et la carte ?| <|> wpa
211 Typographie : points de suspension. Utilisez le caractère dédié. [[59:62]] => |**Encryption key =  Cryptage** configuré (aucun, wep, wpa ...)|est-ce que ma carte est configurée correctement ? cryptage ? Clé identique entre le routeur et la carte ?| <|> ... => suggestions : ['…']
215 Mot inconnu : loopback [[256:264]] =>   * **/etc/network/interfaces** : Ce fichier permet de configurer automatiquement une connexion (réseau internet, local, intranet). C'est LE fichier à consulter en cas de problèmes de connexion. En général il ne contient que les deux lignes de l'interface loopback (lo). <|> loopback
215 Mot inconnu : lo [[266:268]] =>   * **/etc/network/interfaces** : Ce fichier permet de configurer automatiquement une connexion (réseau internet, local, intranet). C'est LE fichier à consulter en cas de problèmes de connexion. En général il ne contient que les deux lignes de l'interface loopback (lo). <|> lo
216 Espace(s) en fin de ligne à supprimer. [[92:93]] =>   * **/etc/resolv.conf** : Ce fichier contient l'IP et le domaine du DNS du réseau connecté.  <|>   => suggestions : ['']
228 Mot inconnu : sudo [[6:10]] =>   * **sudo dmesg** affiche les logs du système sur le matériel et périphérique, leur état de fonctionnement... <|> sudo
228 Mot inconnu : dmesg [[11:16]] =>   * **sudo dmesg** affiche les logs du système sur le matériel et périphérique, leur état de fonctionnement... <|> dmesg
228 Typographie : points de suspension. Utilisez le caractère dédié. [[107:110]] =>   * **sudo dmesg** affiche les logs du système sur le matériel et périphérique, leur état de fonctionnement... <|> ... => suggestions : ['…']
231 Mot inconnu : unity [[28:33]] =>   * //cliquer l'icône du [[/unity#tableau_de_bord_dash|dash]] puis saisir journaux système// <|> unity
239 Mot inconnu : sudo [[6:10]] =>   * **sudo dmesg** affiche les logs et la dernière ligne affichées donne le temps depuis le démarrage du système. <|> sudo
239 Mot inconnu : dmesg [[11:16]] =>   * **sudo dmesg** affiche les logs et la dernière ligne affichées donne le temps depuis le démarrage du système. <|> dmesg
240 Mot inconnu : sudo [[6:10]] =>   * **sudo systemd-analyze** affiche la durée de démarrage du système, sans détail. <|> sudo
240 Mot inconnu : systemd-analyze [[11:26]] =>   * **sudo systemd-analyze** affiche la durée de démarrage du système, sans détail. <|> systemd-analyze
241 Mot inconnu : sudo [[6:10]] =>   * **sudo systemd-analyze blame** affiche la durée des processus lors du démarrage. <|> sudo
241 Mot inconnu : systemd-analyze [[11:26]] =>   * **sudo systemd-analyze blame** affiche la durée des processus lors du démarrage. <|> systemd-analyze
241 Mot inconnu : blame [[27:32]] =>   * **sudo systemd-analyze blame** affiche la durée des processus lors du démarrage. <|> blame
242 Mot inconnu : sudo [[6:10]] =>   * **sudo systemd-analyze critical-chain** affiche la durée des processus en arborescence lors du démarrage. <|> sudo
242 Mot inconnu : systemd-analyze [[11:26]] =>   * **sudo systemd-analyze critical-chain** affiche la durée des processus en arborescence lors du démarrage. <|> systemd-analyze
242 Mot inconnu : critical-chain [[27:41]] =>   * **sudo systemd-analyze critical-chain** affiche la durée des processus en arborescence lors du démarrage. <|> critical-chain
248 Espace(s) en fin de ligne à supprimer. [[75:76]] =>   * **ps** permet de lister tous les processus qui tournent sur le système,  <|>   => suggestions : ['']
249 Mot inconnu : kill [[6:10]] =>   * **kill** permet de tuer un processus dans "les règles de l'art" (avec l'option -9 suivis du PID du processus), cette commande est très utile si vous n'avez pas d'interface graphique. <|> kill
249 Guillemets typographiques ouvrants. [[46:47]] =>   * **kill** permet de tuer un processus dans "les règles de l'art" (avec l'option -9 suivis du PID du processus), cette commande est très utile si vous n'avez pas d'interface graphique. <|> " => suggestions : ['«\xa0', '“']
249 Guillemets typographiques fermants. [[66:67]] =>   * **kill** permet de tuer un processus dans "les règles de l'art" (avec l'option -9 suivis du PID du processus), cette commande est très utile si vous n'avez pas d'interface graphique. <|> " => suggestions : ['\xa0»', '”']
249 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. [[83:85]] =>   * **kill** permet de tuer un processus dans "les règles de l'art" (avec l'option -9 suivis du PID du processus), cette commande est très utile si vous n'avez pas d'interface graphique. <|> -9 => suggestions : ['−9', '– 9', '— 9']
249 Mot inconnu : PID [[96:99]] =>   * **kill** permet de tuer un processus dans "les règles de l'art" (avec l'option -9 suivis du PID du processus), cette commande est très utile si vous n'avez pas d'interface graphique. <|> pid
250 Mot inconnu : pidof [[6:11]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> pidof
250 Mot inconnu : pid [[49:52]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> pid
250 Mot inconnu : kill [[97:101]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> kill
250 Mot inconnu : kill [[104:108]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> kill
250 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. [[109:111]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> -9 => suggestions : ['−9', '– 9', '— 9']
250 Mot inconnu : pidof [[113:118]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> pidof
250 Mot inconnu : nautilus [[119:127]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> nautilus
250 Mot inconnu : nautilus [[147:155]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> nautilus
250 Mot inconnu : pid [[168:171]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|> pid
250 Espace(s) surnuméraire(s) à supprimer. [[183:185]] =>   * **pidof** permet de récupérer directement le pid d'un processus, il est souvent combiné avec kill : kill -9 `pidof nautilus` (tue le processus nautilus grâce à son pid), cependant  killall peut remplacer cette commande barbare. <|>    => suggestions : [' ']
251 Guillemets typographiques ouvrants. [[50:51]] =>   * **top** permet de voir les processus tournant "en live", il indique divers renseignements comme l'utilisation de la mémoire... Une version plus puissance existe: **htop**, plus interactive. <|> " => suggestions : ['«\xa0', '“']
251 Guillemets typographiques fermants. [[58:59]] =>   * **top** permet de voir les processus tournant "en live", il indique divers renseignements comme l'utilisation de la mémoire... Une version plus puissance existe: **htop**, plus interactive. <|> " => suggestions : ['\xa0»', '”']
251 Typographie : points de suspension. Utilisez le caractère dédié. [[127:130]] =>   * **top** permet de voir les processus tournant "en live", il indique divers renseignements comme l'utilisation de la mémoire... Une version plus puissance existe: **htop**, plus interactive. <|> ... => suggestions : ['…']
252 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[6:12]] =>   * **pstree** permet d'afficher les processus sous forme d'arbre montrant la hiérarchie entre les processus parents et enfants. **htop** permet également cet affichage en temps réel et en interactif. <|> pstree => suggestions : ['Pstree']
252 Mot inconnu : pstree [[6:12]] =>   * **pstree** permet d'afficher les processus sous forme d'arbre montrant la hiérarchie entre les processus parents et enfants. **htop** permet également cet affichage en temps réel et en interactif. <|> pstree

253 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
256 Mot inconnu : Administation [[16:29]] =>   * //Système → Administation → Moniteur système// <|> administation

263 Mot inconnu : systeme [[26:33]] => ==== Que faire lorsque le systeme gèle ==== <|> systeme
267 Pas d’espace avant ce signe. [[85:87]] => ==== Récupérer des données effacées ou endommagées (partition, CDROM, Clé USB : Flash ) ==== <|>  ) => suggestions : [')']

269 Mot inconnu : comment_recuperer_ses_partitions [[19:51]] => Voir la [[tutoriel/comment_recuperer_ses_partitions|documentation dédiée]]. <|> comment_recuperer_ses_partitions

272 Mot inconnu : boot [[50:54]] => ==== Vérifier l'espace occupé par la partition de boot ==== <|> boot

280 Guillemets typographiques ouvrants. [[61:62]] => </code> Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['«\xa0', '“']
280 Guillemets typographiques fermants. [[68:69]] => </code> Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['\xa0»', '”']

294 Guillemets typographiques ouvrants. [[53:54]] => Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['«\xa0', '“']
294 Guillemets typographiques fermants. [[60:61]] => Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['\xa0»', '”']

305 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|>   => suggestions : ['']
305 Guillemets typographiques ouvrants. [[54:55]] =>  Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['«\xa0', '“']
305 Guillemets typographiques fermants. [[61:62]] =>  Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['\xa0»', '”']

317 Guillemets typographiques ouvrants. [[53:54]] => Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['«\xa0', '“']
317 Guillemets typographiques fermants. [[60:61]] => Collez-les dans le terminal, exécutez-les, faites un "copier" de résultat et collez-le dans la discussion en cours. <|> " => suggestions : ['\xa0»', '”']
333 Mot inconnu : yurek [[18:23]] => //Contributeurs : yurek.// <|> yurek
