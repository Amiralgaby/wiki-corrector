
5 Mot inconnu : Scanmem => ====== Scanmem : modifier la mémoire à chaud ====== <|> scanmem

7 Mot inconnu : Scanmem => **Scanmem** permet de modifier la mémoire à chaud, c'est à dire que l'on peut modifier une variable du système. Cela peut être utiliser pour « tricher » ou changer le comportement d’un jeu. <|> scanmem
7 Il manque les traits d’union. => **Scanmem** permet de modifier la mémoire à chaud, c'est à dire que l'on peut modifier une variable du système. Cela peut être utiliser pour « tricher » ou changer le comportement d’un jeu. <|> c'est à dire => suggestions : ['c’est-à-dire']
7 Après “être”, le verbe ne devrait pas être à l’infinitif. => **Scanmem** permet de modifier la mémoire à chaud, c'est à dire que l'on peut modifier une variable du système. Cela peut être utiliser pour « tricher » ou changer le comportement d’un jeu. <|> utiliser => suggestions : ['utilisée', 'utilisés', 'utilisé', 'utilisées']

9 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => <note warning>Modifier les variables du système n'est pas sans risque, cela peut entrainer une instabilité ou un plantage de votre système. A utiliser avec précaution et à vos risques et périls.</note> <|> a => suggestions : ['À']

17 Mot inconnu : Gnometris => Pour l'exemple, nous allons le tester sur Gnometris (le Tetris-like intégré à Gnome) pour exploser le record. <|> gnometris
17 Mot inconnu : Tetris-like => Pour l'exemple, nous allons le tester sur Gnometris (le Tetris-like intégré à Gnome) pour exploser le record. <|> tetris-like

19 Mot inconnu : pid => Lançons le jeu, et récupérons son pid : <|> pid

24 Mot inconnu : scanmem => Démarrons scanmem avec comme paramètre le pid de Gnometris : <|> scanmem
24 Mot inconnu : pid => Démarrons scanmem avec comme paramètre le pid de Gnometris : <|> pid
24 Mot inconnu : Gnometris => Démarrons scanmem avec comme paramètre le pid de Gnometris : <|> gnometris

28 Mot inconnu : NB => NB : Il faut être root pour lire et écrire la mémoire des autres programmes lancés <|> nb
28 Mot inconnu : root => NB : Il faut être root pour lire et écrire la mémoire des autres programmes lancés <|> root

34 Mot inconnu : scanmem => Il va falloir tout d’abord trouver où se trouve en mémoire la variable à modifier (celle qui contient le score courant). Pour cela, c’est très simple, vu que le score est affiché à l’écran, il suffit d’indiquer à scanmem sa valeur. Pour l’instant, mon score est de 0, je rentre donc 0 : <|> scanmem

45 Formatage des grands nombres. => Il y a donc 12352024 variables dans la mémoire utilisée par Gnometris qui sont à 0 (pas étonnant). <|> 12352024 => suggestions : ['12\xa0352\xa0024']
45 Mot inconnu : Gnometris => Il y a donc 12352024 variables dans la mémoire utilisée par Gnometris qui sont à 0 (pas étonnant). <|> gnometris

47 Doublon. => Je joue un peu, histoire de faire évoluer le score… tac tac tac tac… Voilà, j’ai 100 points (j’ai fait 2 lignes), je tape donc 100 : <|> tac tac => suggestions : ['tac']
47 Doublon. => Je joue un peu, histoire de faire évoluer le score… tac tac tac tac… Voilà, j’ai 100 points (j’ai fait 2 lignes), je tape donc 100 : <|> tac tac => suggestions : ['tac']
65 Mot inconnu : Gnometris => Rien ne se passe dans le jeu, c’est normal : pour Gnometris, le score n’a pas pu changer, le label de l’interface graphique contenant le score n’a donc pas été rafraîchi. Il suffit de gagner quelques points pour s’apercevoir que la modification a bien été prise en compte : <|> gnometris

67 Espace(s) en fin de ligne à supprimer. => Ça fonctionne bien évidemment sur tous les programmes, mais c’est plus intéressant pour les jeux :-)  <|>   => suggestions : ['']
