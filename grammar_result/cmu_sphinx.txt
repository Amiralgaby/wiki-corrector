
6 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

19 Guillemets typographiques ouvrants. => Une partie de sphinx (la "jsapi") n'est pas sous licence libre, contrairement au reste. Pour installer cette partie, qui nous sera utile par la suite, il faut lancer un script qui va nous demander d'accepter cette licence puis décompresser la **jsapi**. Pour cela depuis le dossier **sphinx4-1.0beta6** obtenu en décompressant les sources de sphinx dans un [[terminal]]: <|> " => suggestions : ['«\xa0', '“']
19 Mot inconnu : jsapi => Une partie de sphinx (la "jsapi") n'est pas sous licence libre, contrairement au reste. Pour installer cette partie, qui nous sera utile par la suite, il faut lancer un script qui va nous demander d'accepter cette licence puis décompresser la **jsapi**. Pour cela depuis le dossier **sphinx4-1.0beta6** obtenu en décompressant les sources de sphinx dans un [[terminal]]: <|> jsapi
19 Guillemets typographiques fermants. => Une partie de sphinx (la "jsapi") n'est pas sous licence libre, contrairement au reste. Pour installer cette partie, qui nous sera utile par la suite, il faut lancer un script qui va nous demander d'accepter cette licence puis décompresser la **jsapi**. Pour cela depuis le dossier **sphinx4-1.0beta6** obtenu en décompressant les sources de sphinx dans un [[terminal]]: <|> " => suggestions : ['\xa0»', '”']
19 Mot inconnu : jsapi => Une partie de sphinx (la "jsapi") n'est pas sous licence libre, contrairement au reste. Pour installer cette partie, qui nous sera utile par la suite, il faut lancer un script qui va nous demander d'accepter cette licence puis décompresser la **jsapi**. Pour cela depuis le dossier **sphinx4-1.0beta6** obtenu en décompressant les sources de sphinx dans un [[terminal]]: <|> jsapi
19 Mot inconnu : sphinx4-1 => Une partie de sphinx (la "jsapi") n'est pas sous licence libre, contrairement au reste. Pour installer cette partie, qui nous sera utile par la suite, il faut lancer un script qui va nous demander d'accepter cette licence puis décompresser la **jsapi**. Pour cela depuis le dossier **sphinx4-1.0beta6** obtenu en décompressant les sources de sphinx dans un [[terminal]]: <|> sphinx4-1
19 Mot inconnu : beta6 => Une partie de sphinx (la "jsapi") n'est pas sous licence libre, contrairement au reste. Pour installer cette partie, qui nous sera utile par la suite, il faut lancer un script qui va nous demander d'accepter cette licence puis décompresser la **jsapi**. Pour cela depuis le dossier **sphinx4-1.0beta6** obtenu en décompressant les sources de sphinx dans un [[terminal]]: <|> beta6

28 Mot inconnu : FIXME => FIXME <|> fixme
32 Guillemets typographiques ouvrants. => Première étape: tester un code d'exemple présent dans le paquet. La reconnaissance vocale sera en anglais. Nous allons compiler un des programmes d'exemple ("hello world") depuis eclipse. <|> " => suggestions : ['«\xa0', '“']
32 Mot inconnu : world => Première étape: tester un code d'exemple présent dans le paquet. La reconnaissance vocale sera en anglais. Nous allons compiler un des programmes d'exemple ("hello world") depuis eclipse. <|> world
32 Guillemets typographiques fermants. => Première étape: tester un code d'exemple présent dans le paquet. La reconnaissance vocale sera en anglais. Nous allons compiler un des programmes d'exemple ("hello world") depuis eclipse. <|> " => suggestions : ['\xa0»', '”']
32 Mot inconnu : eclipse => Première étape: tester un code d'exemple présent dans le paquet. La reconnaissance vocale sera en anglais. Nous allons compiler un des programmes d'exemple ("hello world") depuis eclipse. <|> eclipse
34 Mot inconnu : eclipse =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> eclipse
34 Guillemets typographiques ouvrants. =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> ' => suggestions : ['“', '‘', '‹']
34 Mot inconnu : eclipse =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> eclipse
34 Guillemets typographiques fermants. =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> ' => suggestions : ['”', '’', '›']
34 Mot inconnu : eclipse =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> eclipse
34 Guillemets typographiques ouvrants. =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> " => suggestions : ['«\xa0', '“']
34 Mot inconnu : workspace =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> workspace
34 Guillemets typographiques fermants. =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> " => suggestions : ['\xa0»', '”']
34 Guillemets typographiques ouvrants. =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> " => suggestions : ['«\xa0', '“']
34 Mot inconnu : this =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> this
34 Mot inconnu : default =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> default
34 Guillemets typographiques fermants. =>   * Démarrez eclipse, soit depuis le bureau, soit en tapant la commande 'eclipse' dans un terminal. Si c'est le premier démarrage d'eclipse, celui-ci demande de choisir un répertoire "workspace" où il stockera les projets. Accepter la réponse par défaut (/home/VOTRELOGIN/workspace), et cocher la case "Use this as default". <|> " => suggestions : ['\xa0»', '”']
35 Mot inconnu : eclipse =>   * Dans l'écran d'accueil d'eclipse, cliquez sur //workbench// (flèche en haut à droite). <|> eclipse
35 Mot inconnu : workbench =>   * Dans l'écran d'accueil d'eclipse, cliquez sur //workbench// (flèche en haut à droite). <|> workbench
37 Mot inconnu : helloworld =>   * Comme nom de projet, choisir //helloworld// et cliquer sur suivant, <|> helloworld
38 Mot inconnu : eclipse =>   * Passez la dernière boîte de dialogue en cliquant sur //Terminer//, et si eclipse le demande, accepter d'activer la "perspective java". <|> eclipse
38 Guillemets typographiques ouvrants. =>   * Passez la dernière boîte de dialogue en cliquant sur //Terminer//, et si eclipse le demande, accepter d'activer la "perspective java". <|> " => suggestions : ['«\xa0', '“']
38 Guillemets typographiques fermants. =>   * Passez la dernière boîte de dialogue en cliquant sur //Terminer//, et si eclipse le demande, accepter d'activer la "perspective java". <|> " => suggestions : ['\xa0»', '”']
39 Guillemets typographiques ouvrants. =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
39 Mot inconnu : helloworld =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> helloworld
39 Guillemets typographiques fermants. =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
39 Mot inconnu : System =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> system
39 Mot inconnu : src =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> src
39 Mot inconnu : apps =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> apps
39 Mot inconnu : edu =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> edu
39 Mot inconnu : cmu =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> cmu
39 Mot inconnu : demo =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> demo
39 Mot inconnu : helloworld =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> helloworld
39 Guillemets typographiques ouvrants. =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
39 Guillemets typographiques fermants. =>   * Importez le répertoire contenant l'exemple "helloworld": dans le menu //Fichier -> Importer//, //Général -> File System//. Cliquer sur //Parcourir//, et sélectionner le répertoire **sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld**. Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
40 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|>  . => suggestions : ['. ', '.']
40 Guillemets typographiques ouvrants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['«\xa0', '“']
40 Mot inconnu : helloworld =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> helloworld
40 Guillemets typographiques fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['\xa0»', '”']
40 Mot inconnu : buildpath =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> buildpath
40 Guillemets typographiques ouvrants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['«\xa0', '“']
40 Mot inconnu : path =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> path
40 Guillemets typographiques fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['\xa0»', '”']
40 Guillemets typographiques ouvrants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['«\xa0', '“']
40 Mot inconnu : libraries =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> libraries
40 Guillemets typographiques fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['\xa0»', '”']
40 Guillemets typographiques ouvrants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['«\xa0', '“']
40 Mot inconnu : external =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> external
40 Guillemets typographiques fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['\xa0»', '”']
40 Accord de nombre erroné : « jar » devrait être au pluriel. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> jar => suggestions : ['jars']
40 Guillemets typographiques ouvrants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['«\xa0', '“']
40 Mot inconnu : external =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> external
40 Guillemets typographiques fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['\xa0»', '”']
40 Mot inconnu : sphinx4-1 =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> sphinx4-1
40 Mot inconnu : beta6 =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> beta6
40 Mot inconnu : src =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> src
40 Mot inconnu : jsapi2 =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> jsapi2
40 Il manque un espace. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> jar => suggestions : [' jar']
40 Guillemets fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|>  " => suggestions : ['\xa0»', '”']
40 Mot inconnu : sphinx4-1 =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> sphinx4-1
40 Mot inconnu : beta6 =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> beta6
40 Mot inconnu : src =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> src
40 Mot inconnu : jsapi2 =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> jsapi2
40 Il manque un espace. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> jar => suggestions : [' jar']
40 Guillemets typographiques fermants. =>   * Charger les .jar: clic droit sur le projet "helloworld" dans l'arborescence qui apparaît à gauche. Dans le menu contextuel, choisissez //Configurer le buildpath//, puis dans la boîte de dialogue qui s'ouvre "Java build path", onglet "libraries" puis "external jar". Sélectionner le répertoire sphinx-4.1.0/lib Une liste des jar apparaît, il faut tous les sélectionner et valider. Ensuite, re-cliquez sur "external jar" et aller chercher **sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/sphinx4.jar**, ainsi que "./sphinx4-1.0beta6/src/jsapi2/org.jvoicexml.jsapi2.jse.sphinx4/3rdparty/sphinx4/lib/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" <|> " => suggestions : ['\xa0»', '”']
42 Guillemets typographiques ouvrants. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> " => suggestions : ['«\xa0', '“']
42 Mot inconnu : helloworld =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> helloworld
42 Guillemets typographiques fermants. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> " => suggestions : ['\xa0»', '”']
42 Mot inconnu : eclipse =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> eclipse
42 Guillemets typographiques ouvrants. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> " => suggestions : ['«\xa0', '“']
42 Mot inconnu : quickfixes =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> quickfixes
42 Guillemets typographiques fermants. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> " => suggestions : ['\xa0»', '”']
42 Guillemets typographiques ouvrants. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> " => suggestions : ['«\xa0', '“']
42 Mot inconnu : helloworld =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> helloworld
42 Il manque un espace. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> java => suggestions : [' java']
42 Guillemets typographiques fermants. =>   * Changer la déclaration du package "helloworld" (.java ?): eclipse indique une erreur à la ligne 3 du fichier (une ampoule avec une croix sur fond rouge). Pour voir ce dont il s'agit, laisser la souris au-dessus de la ligne 3 du fichier, une ligne de diagnostic, à propos de la position du package. Parmi les solutions ("quickfixes") proposées en dessous, choisir "déplacer helloworld.java dans edu.cmu.sphinx.demo.helloworld". <|> " => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> " => suggestions : ['«\xa0', '“']
43 Mot inconnu : helloworld =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> helloworld
43 Il manque un espace. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> java => suggestions : [' java']
43 Guillemets typographiques fermants. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> " => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> " => suggestions : ['«\xa0', '“']
43 Mot inconnu : run =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> run
43 Guillemets typographiques fermants. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> " => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> " => suggestions : ['«\xa0', '“']
43 Conjugaison erronée. Accord avec “Choisir”. Le verbe devrait être à la 3ᵉ personne du singulier. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> as => suggestions : ['a']
43 Guillemets typographiques fermants. =>   * Charger les ressources. À ce stade-là, il ne doit plus y avoir d'erreurs dans la marge de "helloworld.java". On peut donc lancer l'application avec le bouton "run" (dans la barre d'outils). Choisir "as java application". On obtient l'erreur suivante: <|> " => suggestions : ['\xa0»', '”']

45 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> at => suggestions : ['At']
45 Mot inconnu : at => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> at
45 Il manque un espace avant la parenthèse. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> ( => suggestions : [' (']
45 Mot inconnu : SaxLoader => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> saxloader
45 Il manque un espace. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> java => suggestions : [' java']
45 Il manque un espace. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> 74 => suggestions : [' 74']
45 Mot inconnu : at => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> at
45 Mot inconnu : ConfigurationManager => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> configurationmanager
45 Il manque un espace. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> java => suggestions : [' java']
45 Il manque un espace. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> 58 => suggestions : [' 58']
45 Mot inconnu : at => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> at
45 Il manque un espace avant la parenthèse. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> ( => suggestions : [' (']
45 Mot inconnu : HelloWorld => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> helloworld
45 Il manque un espace. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> java => suggestions : [' java']
45 Il manque un espace. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> 33 => suggestions : [' 33']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Mot inconnu : project => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> project
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Mot inconnu : HelloWorld => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> helloworld
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Mot inconnu : HelloWorld => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> helloworld
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> ' => suggestions : ['“', '‘', '‹']
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> ' => suggestions : ['”', '’', '›']
45 Incohérence avec « c’ » : « blanc » devrait être un verbe. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> blanc => suggestions : []
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Mot inconnu : General => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> general
45 Mot inconnu : FileSystem => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> filesystem
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Mot inconnu : browser => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> browser
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Mot inconnu : src => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> src
45 Mot inconnu : apps => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> apps
45 Mot inconnu : edu => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> edu
45 Mot inconnu : cmu => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> cmu
45 Mot inconnu : demo => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> demo
45 Mot inconnu : helloworld => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> helloworld
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['«\xa0', '“']
45 Guillemets typographiques fermants. => at edu.cmu.sphinx.util.props.SaxLoader.load(SaxLoader.java:74) at edu.cmu.sphinx.util.props.ConfigurationManager.<init>(ConfigurationManager.java:58) at edu.cmu.sphinx.demo.helloworld.HelloWorld.main(HelloWorld.java:33) C'est parce qu'il faut importer les "ressources" dans le projet. Dans le "project explorer", dérouler l'arborescence jusqu'à voir la classe HelloWorld ("HelloWorld" avec un 'c' blanc sur fond vert à gauche). Cliquer avec le bouton droit sur la classe, et choisir "Import…". Choisir "General -> FileSystem", ce qui ouvre une boîte de dialogue dans laquelle on clique sur "browser". On navigue dans l'arborescence, on sélectionne le répertoire "sphinx-4.1.0/src/apps/edu/cmu/sphinx/demo/helloworld". Une fois le répertoire sélectionné cocher tous les fichiers qui s'affichent, puis cliquer sur "Terminer". <|> " => suggestions : ['\xa0»', '”']
47 Guillemets typographiques ouvrants. =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> " => suggestions : ['«\xa0', '“']
47 Mot inconnu : project =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> project
47 Guillemets typographiques fermants. =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> " => suggestions : ['\xa0»', '”']
47 Guillemets typographiques ouvrants. =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> " => suggestions : ['«\xa0', '“']
47 Il manque un espace. =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> config => suggestions : [' config']
47 Guillemets typographiques fermants. =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> " => suggestions : ['\xa0»', '”']
47 Mot inconnu : helloWorld =>   * Adapter le fichier de configuration à la position des ressources. Dans le "project explorer", ouvrir le fichier "helloworld.config.xml" qui est dans la classe helloWorld. Le contenu de ce fichier apparaît dans le panneau de droite. Trouver la ligne suivante: <|> helloworld

48 Guillemets typographiques ouvrants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/noisedict"/></file> <|> " => suggestions : ['«\xa0', '“']
48 Guillemets typographiques fermants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/noisedict"/></file> <|> " => suggestions : ['\xa0»', '”']
48 Guillemets typographiques ouvrants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/noisedict"/></file> <|> " => suggestions : ['«\xa0', '“']
48 Guillemets typographiques fermants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/noisedict"/></file> <|> " => suggestions : ['\xa0»', '”']

49 Guillemets typographiques ouvrants. => et remplacer "noisedict" par "fillerdict". On obtient: <|> " => suggestions : ['«\xa0', '“']
49 Mot inconnu : noisedict => et remplacer "noisedict" par "fillerdict". On obtient: <|> noisedict
49 Guillemets typographiques fermants. => et remplacer "noisedict" par "fillerdict". On obtient: <|> " => suggestions : ['\xa0»', '”']
49 Guillemets typographiques ouvrants. => et remplacer "noisedict" par "fillerdict". On obtient: <|> " => suggestions : ['«\xa0', '“']
49 Mot inconnu : fillerdict => et remplacer "noisedict" par "fillerdict". On obtient: <|> fillerdict
49 Guillemets typographiques fermants. => et remplacer "noisedict" par "fillerdict". On obtient: <|> " => suggestions : ['\xa0»', '”']

51 Guillemets typographiques ouvrants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/dict/fillerdict"/></file> <|> " => suggestions : ['«\xa0', '“']
51 Guillemets typographiques fermants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/dict/fillerdict"/></file> <|> " => suggestions : ['\xa0»', '”']
51 Guillemets typographiques ouvrants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/dict/fillerdict"/></file> <|> " => suggestions : ['«\xa0', '“']
51 Guillemets typographiques fermants. => <file><property name="fillerPath" value="resource:/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz/dict/fillerdict"/></file> <|> " => suggestions : ['\xa0»', '”']

54 Guillemets typographiques ouvrants. => <file><property name="modelDefinition" value="etc/WSJ_clean_13dCep_16k_40mel_130Hz_6800Hz.4000.mdef"/> <|> " => suggestions : ['«\xa0', '“']
54 Guillemets typographiques fermants. => <file><property name="modelDefinition" value="etc/WSJ_clean_13dCep_16k_40mel_130Hz_6800Hz.4000.mdef"/> <|> " => suggestions : ['\xa0»', '”']
54 Guillemets typographiques ouvrants. => <file><property name="modelDefinition" value="etc/WSJ_clean_13dCep_16k_40mel_130Hz_6800Hz.4000.mdef"/> <|> " => suggestions : ['«\xa0', '“']
54 Guillemets typographiques fermants. => <file><property name="modelDefinition" value="etc/WSJ_clean_13dCep_16k_40mel_130Hz_6800Hz.4000.mdef"/> <|> " => suggestions : ['\xa0»', '”']

59 Mot inconnu : resource => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> resource
59 Typographie : points de suspension. Utilisez le caractère dédié. => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> ... => suggestions : ['…']
59 Mot inconnu : edu => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> edu
59 Typographie : points de suspension. Utilisez le caractère dédié. => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> ... => suggestions : ['…']
59 Mot inconnu : helloworld => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> helloworld
59 Mot inconnu : dict => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> dict
59 Mot inconnu : filler => Dans le fichier de configuration, trouver la section concernant le dictionnaire. L'un des items de cette section indique le chemin du dictionnaire (commence par /resource...) Il faut remplacer ce chemin par la position où nous avons importé le dictionnaire de notre projet, par exemple ressource:/edu/sphinx/.../helloworld/dict Faire de même avec la grammaire et le dictionnaire de filler. <|> filler

61 Mot inconnu : helloworld => On peut maintenant tester le helloworld en cliquant sur Debug (flèche verte). Si la qualité de la reconnaissance est mauvaise, c'est normal. <|> helloworld
61 Mot inconnu : Debug => On peut maintenant tester le helloworld en cliquant sur Debug (flèche verte). Si la qualité de la reconnaissance est mauvaise, c'est normal. <|> debug

65 Guillemets typographiques ouvrants. => Modifier le "helloworld" anglais pour l'adapter au français. Pour cela, il faut récupérer les ressources (grammaire, dictionnaire et modèle acoustique), et modifier le fichier de configuration pour que ces nouvelles ressources soient prises en compte. <|> " => suggestions : ['«\xa0', '“']
65 Mot inconnu : helloworld => Modifier le "helloworld" anglais pour l'adapter au français. Pour cela, il faut récupérer les ressources (grammaire, dictionnaire et modèle acoustique), et modifier le fichier de configuration pour que ces nouvelles ressources soient prises en compte. <|> helloworld
65 Guillemets typographiques fermants. => Modifier le "helloworld" anglais pour l'adapter au français. Pour cela, il faut récupérer les ressources (grammaire, dictionnaire et modèle acoustique), et modifier le fichier de configuration pour que ces nouvelles ressources soient prises en compte. <|> " => suggestions : ['\xa0»', '”']
67 Mot inconnu : french62K => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> french62k
67 Mot inconnu : dic => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> dic
67 Mot inconnu : eclipse => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> eclipse
67 Guillemets typographiques ouvrants. => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> " => suggestions : ['«\xa0', '“']
67 Mot inconnu : dictionnary => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> dictionnary
67 Guillemets typographiques fermants. => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> " => suggestions : ['\xa0»', '”']
67 Mot inconnu : xml => Dictionnaire: récupérer le fichier french62K.dic [[https://code.google.com/p/voicecmdr/source/browse/branches/workflow/src/sphinx4/french/etc/frenchWords62K.dic|ici]], l'importer dans le projet eclipse, puis modifier le chemin du dictionnaire dans la section "dictionnary" du fichier configuration.xml, <|> xml
68 Mot inconnu : eclipse => Grammaire: il faut créer une grammaire, sur le modèle de celle qui existe en anglais, l'importer dans le projet eclipse, puis modifier le chemin pour qu'elle soit prise en compte, <|> eclipse
69 Mot inconnu : eclipse => Modèle acoustique: il faut l'importer dans le projet eclipse, puis le pointer depuis le fichier de configuration. On le récupère à cette [[https://voicecmdr.googlecode.com/svn/branches/workflow/src/sphinx4/french/model_architecture/french_f0.5725.mdef|adresse]] <|> eclipse

70 Mot inconnu : dmp => le fichier dmp [[https://voicecmdr.googlecode.com/svn/branches/workflow/src/sphinx4/french/etc/french3g62K.DMP|ici]]. <|> dmp
79 Mot inconnu : FIXME => //Contributeurs : FIXME.// <|> fixme
