
5 Mot inconnu : OpenPGP => ====== Utiliser OpenPGP et PGP/MIME avec KMail ====== | openpgp
5 Mot inconnu : PGP => ====== Utiliser OpenPGP et PGP/MIME avec KMail ====== | pgp
5 Mot inconnu : KMail => ====== Utiliser OpenPGP et PGP/MIME avec KMail ====== | kmail

7 Mot inconnu : Kmail => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | kmail
7 Mot inconnu : OpenPGP => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | openpgp
7 Mot inconnu : PGP => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | pgp
7 Mot inconnu : GnuPG => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | gnupg
7 Mot inconnu : GnuPG => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | gnupg
7 Mot inconnu : KMail => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | kmail
7 Guillemets typographiques ouvrants. => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | '' => suggestions : ['«\xa0', '“']
7 Mot inconnu : Passphrase => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | passphrase
7 Guillemets typographiques fermants. => Cette manipulation va permettre d'étendre le support de Kmail pour OpenPGP, PGP/MIME (via GnuPG) à l'aide de l'//agent de GnuPG//. Ceci permet d'envoyer des messages signés (déjà avec KMail de base) mais aussi de déchiffrer les messages chiffrés (ce qui provoquait des messages types ''Bad Passphrase''). | '' => suggestions : ['\xa0»', '”']

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Savoir se servir d'un éditeur de texte standard |    => suggestions : ['']
12 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Savoir se servir d'un éditeur de texte standard |  -  => suggestions : [' – ', ' — ', ' − ']

15 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Savoir lancer une console |    => suggestions : ['']
15 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Savoir lancer une console |  -  => suggestions : [' – ', ' — ', ' − ']

21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''gnupg-agent'' |    => suggestions : ['']
21 Guillemets typographiques ouvrants. =>   * ''gnupg-agent'' | '' => suggestions : ['«\xa0', '“']
21 Mot inconnu : gnupg-agent =>   * ''gnupg-agent'' | gnupg-agent
21 Guillemets typographiques fermants. =>   * ''gnupg-agent'' | '' => suggestions : ['\xa0»', '”']

23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''pinentry-qt'' (plutôt pour KDE) **(Testé, marche parfaitement)** |    => suggestions : ['']
23 Guillemets typographiques ouvrants. =>   * ''pinentry-qt'' (plutôt pour KDE) **(Testé, marche parfaitement)** | '' => suggestions : ['«\xa0', '“']
23 Mot inconnu : pinentry-qt =>   * ''pinentry-qt'' (plutôt pour KDE) **(Testé, marche parfaitement)** | pinentry-qt
23 Guillemets typographiques fermants. =>   * ''pinentry-qt'' (plutôt pour KDE) **(Testé, marche parfaitement)** | '' => suggestions : ['\xa0»', '”']
23 Mot inconnu : KDE =>   * ''pinentry-qt'' (plutôt pour KDE) **(Testé, marche parfaitement)** | kde

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''pinentry-gtk2'' (plutôt pour GNOME) **(Testé, marche parfaitement)** |    => suggestions : ['']
24 Guillemets typographiques ouvrants. =>   * ''pinentry-gtk2'' (plutôt pour GNOME) **(Testé, marche parfaitement)** | '' => suggestions : ['«\xa0', '“']
24 Mot inconnu : pinentry-gtk2 =>   * ''pinentry-gtk2'' (plutôt pour GNOME) **(Testé, marche parfaitement)** | pinentry-gtk2
24 Guillemets typographiques fermants. =>   * ''pinentry-gtk2'' (plutôt pour GNOME) **(Testé, marche parfaitement)** | '' => suggestions : ['\xa0»', '”']

25 Mot inconnu : KDE => A priori, les deux devraient fonctionner autant avec KDE qu'avec GNOME. Question de goût. | kde

29 Mot inconnu : GnuPG => La configuration se fait par utilisateur. Il faut donc la répéter pour chaque utilisateur qui désire utiliser GnuPG et KMail. | gnupg
29 Mot inconnu : KMail => La configuration se fait par utilisateur. Il faut donc la répéter pour chaque utilisateur qui désire utiliser GnuPG et KMail. | kmail

32 Mot inconnu : GnuPG => ==== Modification de la configuration de GnuPG ==== | gnupg

33 Mot inconnu : GnuPG => Tout d'abord, il faut modifier la configuration de GnuPG pour lui dire d'utiliser l'//agent// au lieu de son propre système de vérification de mot de passe. À cet effet, il faut éditer le fichier ''~/.gnupg/gpg.conf''((s'il n'existe pas, cf. [[#prerequis|Prérequis]], et si malgré cela il n'existe toujours pas, n'hésitez pas à le créer vous même.)). | gnupg
33 Mot inconnu : gnupg => Tout d'abord, il faut modifier la configuration de GnuPG pour lui dire d'utiliser l'//agent// au lieu de son propre système de vérification de mot de passe. À cet effet, il faut éditer le fichier ''~/.gnupg/gpg.conf''((s'il n'existe pas, cf. [[#prerequis|Prérequis]], et si malgré cela il n'existe toujours pas, n'hésitez pas à le créer vous même.)). | gnupg
33 Mot inconnu : gpg => Tout d'abord, il faut modifier la configuration de GnuPG pour lui dire d'utiliser l'//agent// au lieu de son propre système de vérification de mot de passe. À cet effet, il faut éditer le fichier ''~/.gnupg/gpg.conf''((s'il n'existe pas, cf. [[#prerequis|Prérequis]], et si malgré cela il n'existe toujours pas, n'hésitez pas à le créer vous même.)). | gpg
33 Il manque un espace. => Tout d'abord, il faut modifier la configuration de GnuPG pour lui dire d'utiliser l'//agent// au lieu de son propre système de vérification de mot de passe. À cet effet, il faut éditer le fichier ''~/.gnupg/gpg.conf''((s'il n'existe pas, cf. [[#prerequis|Prérequis]], et si malgré cela il n'existe toujours pas, n'hésitez pas à le créer vous même.)). | conf => suggestions : [' conf']
33 Guillemets typographiques fermants. => Tout d'abord, il faut modifier la configuration de GnuPG pour lui dire d'utiliser l'//agent// au lieu de son propre système de vérification de mot de passe. À cet effet, il faut éditer le fichier ''~/.gnupg/gpg.conf''((s'il n'existe pas, cf. [[#prerequis|Prérequis]], et si malgré cela il n'existe toujours pas, n'hésitez pas à le créer vous même.)). | '' => suggestions : ['\xa0»', '”']
33 Il manque un trait d’union si “même” se rapporte à “vous”. => Tout d'abord, il faut modifier la configuration de GnuPG pour lui dire d'utiliser l'//agent// au lieu de son propre système de vérification de mot de passe. À cet effet, il faut éditer le fichier ''~/.gnupg/gpg.conf''((s'il n'existe pas, cf. [[#prerequis|Prérequis]], et si malgré cela il n'existe toujours pas, n'hésitez pas à le créer vous même.)). | vous même => suggestions : ['vous-même']

35 Mot inconnu : décommenter => Il faut ensuite décommenter((enlever le dièse (#) et l'espace de début de ligne)) la ligne suivante : | décommenter
35 Il manque un espace avant la parenthèse. => Il faut ensuite décommenter((enlever le dièse (#) et l'espace de début de ligne)) la ligne suivante : | ( => suggestions : [' (']

38 Mot inconnu : GnuPG-agent => ==== Configuration de GnuPG-agent ==== | gnupg-agent

39 Mot inconnu : GnuPG => Ensuite, il faut configurer l'agent GnuPG. Il faut créer le fichier ''~/.gnupg/gpg-agent.conf'' et lui donner le contenu suivant : | gnupg
39 Mot inconnu : gnupg => Ensuite, il faut configurer l'agent GnuPG. Il faut créer le fichier ''~/.gnupg/gpg-agent.conf'' et lui donner le contenu suivant : | gnupg
39 Mot inconnu : gpg-agent => Ensuite, il faut configurer l'agent GnuPG. Il faut créer le fichier ''~/.gnupg/gpg-agent.conf'' et lui donner le contenu suivant : | gpg-agent
39 Il manque un espace. => Ensuite, il faut configurer l'agent GnuPG. Il faut créer le fichier ''~/.gnupg/gpg-agent.conf'' et lui donner le contenu suivant : | conf => suggestions : [' conf']
39 Guillemets typographiques fermants. => Ensuite, il faut configurer l'agent GnuPG. Il faut créer le fichier ''~/.gnupg/gpg-agent.conf'' et lui donner le contenu suivant : | '' => suggestions : ['\xa0»', '”']

40 Mot inconnu : pinentry-program => <file>pinentry-program "/usr/bin/pinentry-qt" | pinentry-program
40 Guillemets typographiques fermants. => <file>pinentry-program "/usr/bin/pinentry-qt" | " => suggestions : ['\xa0»', '”']

41 Mot inconnu : no-grab => no-grab | no-grab

42 Mot inconnu : default-cache-ttl => default-cache-ttl 1800</file> | default-cache-ttl
43 Guillemets typographiques ouvrants. => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | '' => suggestions : ['«\xa0', '“']
43 Mot inconnu : pinentry-gtk2 => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | pinentry-gtk2
43 Guillemets typographiques fermants. => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | '' => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | '' => suggestions : ['«\xa0', '“']
43 Mot inconnu : pinentry-qt => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | pinentry-qt
43 Guillemets typographiques fermants. => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | '' => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | '' => suggestions : ['«\xa0', '“']
43 Mot inconnu : pinentry-gtk-2 => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | pinentry-gtk-2
43 Guillemets typographiques fermants. => N.B: Si c'est ''pinentry-gtk2'' qui a été installé, il faut évidemment remplacer ''pinentry-qt'' par ''pinentry-gtk-2'' | '' => suggestions : ['\xa0»', '”']
45 Mot inconnu : synthaxe => N.B 2 : correction de synthaxe : ajout des apostrophes | synthaxe

47 Accord de nombre erroné avec « les nouvelles » : « distribution » devrait être au pluriel. => Dans les nouvelles distribution => Natty, nous pouvons utiliser kwallet avec pinentry.\\ | distribution => suggestions : ['distributions']
47 Mot inconnu : Natty => Dans les nouvelles distribution => Natty, nous pouvons utiliser kwallet avec pinentry.\\ | natty
47 Mot inconnu : kwallet => Dans les nouvelles distribution => Natty, nous pouvons utiliser kwallet avec pinentry.\\ | kwallet
47 Mot inconnu : pinentry => Dans les nouvelles distribution => Natty, nous pouvons utiliser kwallet avec pinentry.\\ | pinentry

50 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => puis remplacer dans .gnupg/gpg-agent.conf |  . => suggestions : ['. ', '.']
50 Mot inconnu : gnupg => puis remplacer dans .gnupg/gpg-agent.conf | gnupg
50 Mot inconnu : gpg-agent => puis remplacer dans .gnupg/gpg-agent.conf | gpg-agent
50 Il manque un espace. => puis remplacer dans .gnupg/gpg-agent.conf | conf => suggestions : [' conf']

52 Guillemets typographiques fermants. => #pinentry-program "/usr/bin/pinentry-qt" | " => suggestions : ['\xa0»', '”']

53 Mot inconnu : pinentry-program => pinentry-program "/usr/bin/pinentry-kwallet"</file> | pinentry-program
53 Guillemets typographiques fermants. => pinentry-program "/usr/bin/pinentry-kwallet"</file> | " => suggestions : ['\xa0»', '”']

61 Guillemets typographiques ouvrants. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | '' => suggestions : ['«\xa0', '“']
61 Mot inconnu : DEADBEEF => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | deadbeef
61 Guillemets typographiques fermants. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | '' => suggestions : ['\xa0»', '”']
61 Mot inconnu : DEADBEEF => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | deadbeef
61 Guillemets typographiques fermants. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | '' => suggestions : ['\xa0»', '”']
61 Guillemets typographiques ouvrants. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | '' => suggestions : ['«\xa0', '“']
61 Mot inconnu : BŒUFMORT => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | bœufmort
61 Guillemets typographiques fermants. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | '' => suggestions : ['\xa0»', '”']
61 Pas d’espace avant ce signe. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** |  ) => suggestions : [')']
61 Il manque un espace après la parenthèse. => **N.B. Évidemment, il faut remplacer ''DEADBEEF''((''DEADBEEF'' pourrait se traduire par ''BŒUFMORT'', mais les identifiants de clés sont des suites de caractères hexadécimaux (de 0 à 9 et de A à F). Si quelqu'un a une suite rigolote de 8 lettres en français, merci de modifier. :-P ))par l'identifiant de votre clé !** | ) => suggestions : [') ']

63 Guillemets typographiques ouvrants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['«\xa0', '“']
63 Guillemets typographiques fermants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['\xa0»', '”']
63 Mot inconnu : gpg => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | gpg
63 Il manque un espace à côté du tiret. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). |  - => suggestions : [' – ', ' — ']
63 Mot inconnu : ase => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | ase
63 Guillemets typographiques fermants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['\xa0»', '”']
63 Mot inconnu : xDEADBEEF => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | xdeadbeef
63 Guillemets typographiques fermants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['\xa0»', '”']
63 Mot inconnu : gpg => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | gpg
63 Guillemets typographiques fermants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['\xa0»', '”']
63 Espace(s) surnuméraire(s) à supprimer. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). |    => suggestions : [' ']
63 Guillemets typographiques ouvrants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['«\xa0', '“']
63 Guillemets typographiques fermants. => Cette commande envoie la chaîne ''Test'' pour être codée (''| gpg -ase'') avec votre clé privée (''-r 0xDEADBEEF''), puis envoie le tout pour être décodé (''| gpg''). Par conséquent, le mot de passe devrait être demandé deux fois via  l'interface graphique. Finalement, le mot ''Test'' devrait apparaître dans la console (si le bon mot de passe a été entré correctement). | '' => suggestions : ['\xa0»', '”']

70 Mot inconnu : KDE => === Sous KDE === | kde

71 Mot inconnu : kde => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | kde
71 Mot inconnu : Autostart => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | autostart
71 Mot inconnu : GnuPG => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | gnupg
71 Guillemets typographiques fermants. => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | '' => suggestions : ['\xa0»', '”']
71 Guillemets typographiques ouvrants. => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | '' => suggestions : ['«\xa0', '“']
71 Mot inconnu : Autostart => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | autostart
71 Guillemets typographiques fermants. => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | '' => suggestions : ['\xa0»', '”']
71 Guillemets fermants. => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : |  '' => suggestions : ['\xa0»', '”']
71 Mot inconnu : kde => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | kde
71 Guillemets typographiques fermants. => Il faut créer un fichier ''~/.kde/Autostart/GnuPG''((si le dossier ''Autostart'' n'existe pas, le créer. Si le dossier ''.kde'' n'existe pas, voir [[#sous_gnome|sous Gnome]])) qui doit contenir les lignes suivantes : | '' => suggestions : ['\xa0»', '”']

73 Mot inconnu : grep => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then | grep
73 Il manque un espace à côté du tiret. => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then |  - => suggestions : [' – ', ' — ']
73 Guillemets typographiques fermants. => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then | ' => suggestions : ['”', '’', '›']
73 Mot inconnu : gnupg => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then | gnupg
73 Mot inconnu : gpg => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then | gpg
73 Il manque un espace. => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then | conf => suggestions : [' conf']
73 Mot inconnu : then => if grep -q '^use-agent' ~/.gnupg/gpg.conf; then | then

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  eval "`gpg-agent --daemon`" |   => suggestions : ['']
74 Mot inconnu : eval =>  eval "`gpg-agent --daemon`" | eval
74 Mot inconnu : gpg-agent =>  eval "`gpg-agent --daemon`" | gpg-agent
74 Mot inconnu : daemon =>  eval "`gpg-agent --daemon`" | daemon

76 Mot inconnu : gnupg => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | gnupg
76 Mot inconnu : gpg => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | gpg
76 Il manque un espace. => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | conf => suggestions : [' conf']
76 Guillemets typographiques fermants. => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | '' => suggestions : ['\xa0»', '”']
76 Guillemets typographiques ouvrants. => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | '' => suggestions : ['«\xa0', '“']
76 Guillemets typographiques fermants. => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | '' => suggestions : ['\xa0»', '”']
76 Guillemets typographiques ouvrants. => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | '' => suggestions : ['«\xa0', '“']
76 Mot inconnu : gpg-agent => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | gpg-agent
76 Guillemets typographiques fermants. => Ce petit programme teste si une le fichier ''~/.gnupg/gpg.conf'' contient une ligne qui commence par ''use-agent''. Si c'est le cas, il démarre le démon ''gpg-agent''. | '' => suggestions : ['\xa0»', '”']

83 Mot inconnu : KMail => Afin de pouvoir tester sous KMail, le mieux est de redémarrer sa session graphique. | kmail

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Quitter sa session |    => suggestions : ['']
84 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Quitter sa session |  -  => suggestions : [' – ', ' — ', ' − ']

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - ''[Ctrl]-[Alt]-[<-]'' (Backspace) |    => suggestions : ['']
85 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - ''[Ctrl]-[Alt]-[<-]'' (Backspace) |  -  => suggestions : [' – ', ' — ', ' − ']
85 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - ''[Ctrl]-[Alt]-[<-]'' (Backspace) | ]-[ => suggestions : [' – ', ' — ', ' − ']
85 Mot inconnu : Backspace =>   - ''[Ctrl]-[Alt]-[<-]'' (Backspace) | backspace

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Se connecter |    => suggestions : ['']
86 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Se connecter |  -  => suggestions : [' – ', ' — ', ' − ']

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Aller dans **Système/Préférences/Session** |    => suggestions : ['']
90 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Aller dans **Système/Préférences/Session** |  -  => suggestions : [' – ', ' — ', ' − ']

91 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Cliquer sur le bouton **Nouveau** |    => suggestions : ['']
91 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Cliquer sur le bouton **Nouveau** |  -  => suggestions : [' – ', ' — ', ' − ']

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Dans Nom, indiquer **gpg-agent** |    => suggestions : ['']
92 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Dans Nom, indiquer **gpg-agent** |  -  => suggestions : [' – ', ' — ', ' − ']
92 Mot inconnu : gpg-agent =>   - Dans Nom, indiquer **gpg-agent** | gpg-agent

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Dans Commande, indiquer **eval "$(gpg-agent --daemon)"** |    => suggestions : ['']
93 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Dans Commande, indiquer **eval "$(gpg-agent --daemon)"** |  -  => suggestions : [' – ', ' — ', ' − ']
93 Mot inconnu : eval =>   - Dans Commande, indiquer **eval "$(gpg-agent --daemon)"** | eval
93 Mot inconnu : gpg-agent =>   - Dans Commande, indiquer **eval "$(gpg-agent --daemon)"** | gpg-agent
93 Mot inconnu : daemon =>   - Dans Commande, indiquer **eval "$(gpg-agent --daemon)"** | daemon

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Valider |    => suggestions : ['']
94 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Valider |  -  => suggestions : [' – ', ' — ', ' − ']

95 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Vérifier que la case de gpg-agent est cochée |    => suggestions : ['']
95 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Vérifier que la case de gpg-agent est cochée |  -  => suggestions : [' – ', ' — ', ' − ']
95 Mot inconnu : gpg-agent =>   - Vérifier que la case de gpg-agent est cochée | gpg-agent

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Fermer la fenêtre |    => suggestions : ['']
96 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Fermer la fenêtre |  -  => suggestions : [' – ', ' — ', ' − ']

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Redémarrez la session pour que cela soit pris en compte |    => suggestions : ['']
97 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Redémarrez la session pour que cela soit pris en compte |  -  => suggestions : [' – ', ' — ', ' − ']

102 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Envoyer des messages signés |    => suggestions : ['']

103 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Recevoir des messages chiffrés |    => suggestions : ['']
107 Il manque un espace. => //Contributeur : [[http://kmail.kde.org/kmail-pgpmime-howto.html|Traduit]] et adapté par [[utilisateurs:didier|Didier]]// | didier => suggestions : [' didier']
