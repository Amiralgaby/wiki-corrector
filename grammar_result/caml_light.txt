
4 Mot inconnu : Caml => ====== Caml Light ====== | caml
11 Guillemets typographiques ouvrants. => La version disponible sur le site de l'INRIA ne fonctionne pas correctement sur Linux : elle ne charge pas la librairie "graphics". Grâce au travail de [[http://boisson.homeip.net/clef/ClefAgreg.html|François Boisson]] ([[http://forum.ubuntu-fr.org/profile.php?id=8413 | fran.b]]) on peut enfin l'utiliser ! | " => suggestions : ['«\xa0', '“']
11 Mot inconnu : graphics => La version disponible sur le site de l'INRIA ne fonctionne pas correctement sur Linux : elle ne charge pas la librairie "graphics". Grâce au travail de [[http://boisson.homeip.net/clef/ClefAgreg.html|François Boisson]] ([[http://forum.ubuntu-fr.org/profile.php?id=8413 | fran.b]]) on peut enfin l'utiliser ! | graphics
11 Guillemets typographiques fermants. => La version disponible sur le site de l'INRIA ne fonctionne pas correctement sur Linux : elle ne charge pas la librairie "graphics". Grâce au travail de [[http://boisson.homeip.net/clef/ClefAgreg.html|François Boisson]] ([[http://forum.ubuntu-fr.org/profile.php?id=8413 | fran.b]]) on peut enfin l'utiliser ! | " => suggestions : ['\xa0»', '”']
11 Mot inconnu : fran => La version disponible sur le site de l'INRIA ne fonctionne pas correctement sur Linux : elle ne charge pas la librairie "graphics". Grâce au travail de [[http://boisson.homeip.net/clef/ClefAgreg.html|François Boisson]] ([[http://forum.ubuntu-fr.org/profile.php?id=8413 | fran.b]]) on peut enfin l'utiliser ! | fran
15 Mot inconnu : tuareg => la version est la 0.82-5 avec l'utilisation du paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (dérivé du mode tuareg de ocaml): | tuareg
15 Élision de l’article devant un mot commençant par une voyelle. => la version est la 0.82-5 avec l'utilisation du paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (dérivé du mode tuareg de ocaml): | de  => suggestions : ['d’']
15 Mot inconnu : ocaml => la version est la 0.82-5 avec l'utilisation du paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (dérivé du mode tuareg de ocaml): | ocaml

19 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => ^ 32 bits|[[http://boisson.homeip.net/depot/pool/xenial/i386/camllight_0.82-6_i386.deb | .deb ]]|[[http://boisson.homeip.net/depot/pool/bionic/i386/camllight_0.82-6.1_i386.deb | .deb ]]| |  . => suggestions : ['. ', '.']
19 Mot inconnu : deb => ^ 32 bits|[[http://boisson.homeip.net/depot/pool/xenial/i386/camllight_0.82-6_i386.deb | .deb ]]|[[http://boisson.homeip.net/depot/pool/bionic/i386/camllight_0.82-6.1_i386.deb | .deb ]]| | deb
19 Pas d’espace avant ce signe. => ^ 32 bits|[[http://boisson.homeip.net/depot/pool/xenial/i386/camllight_0.82-6_i386.deb | .deb ]]|[[http://boisson.homeip.net/depot/pool/bionic/i386/camllight_0.82-6.1_i386.deb | .deb ]]| |  ] => suggestions : [']']
19 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => ^ 32 bits|[[http://boisson.homeip.net/depot/pool/xenial/i386/camllight_0.82-6_i386.deb | .deb ]]|[[http://boisson.homeip.net/depot/pool/bionic/i386/camllight_0.82-6.1_i386.deb | .deb ]]| |  . => suggestions : ['. ', '.']
19 Mot inconnu : deb => ^ 32 bits|[[http://boisson.homeip.net/depot/pool/xenial/i386/camllight_0.82-6_i386.deb | .deb ]]|[[http://boisson.homeip.net/depot/pool/bionic/i386/camllight_0.82-6.1_i386.deb | .deb ]]| | deb
19 Pas d’espace avant ce signe. => ^ 32 bits|[[http://boisson.homeip.net/depot/pool/xenial/i386/camllight_0.82-6_i386.deb | .deb ]]|[[http://boisson.homeip.net/depot/pool/bionic/i386/camllight_0.82-6.1_i386.deb | .deb ]]| |  ] => suggestions : [']']

20 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => ^ 64 bits|[[http://boisson.homeip.net/depot/pool/xenial/amd64/camllight_0.82-6_amd64.deb | .deb]]|[[http://boisson.homeip.net/depot/pool/bionic/amd64/camllight_0.82-6.1_amd64.deb | .deb ]]| |  . => suggestions : ['. ', '.']
20 Mot inconnu : deb => ^ 64 bits|[[http://boisson.homeip.net/depot/pool/xenial/amd64/camllight_0.82-6_amd64.deb | .deb]]|[[http://boisson.homeip.net/depot/pool/bionic/amd64/camllight_0.82-6.1_amd64.deb | .deb ]]| | deb
20 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => ^ 64 bits|[[http://boisson.homeip.net/depot/pool/xenial/amd64/camllight_0.82-6_amd64.deb | .deb]]|[[http://boisson.homeip.net/depot/pool/bionic/amd64/camllight_0.82-6.1_amd64.deb | .deb ]]| |  . => suggestions : ['. ', '.']
20 Mot inconnu : deb => ^ 64 bits|[[http://boisson.homeip.net/depot/pool/xenial/amd64/camllight_0.82-6_amd64.deb | .deb]]|[[http://boisson.homeip.net/depot/pool/bionic/amd64/camllight_0.82-6.1_amd64.deb | .deb ]]| | deb
20 Pas d’espace avant ce signe. => ^ 64 bits|[[http://boisson.homeip.net/depot/pool/xenial/amd64/camllight_0.82-6_amd64.deb | .deb]]|[[http://boisson.homeip.net/depot/pool/bionic/amd64/camllight_0.82-6.1_amd64.deb | .deb ]]| |  ] => suggestions : [']']
22 Mot inconnu : emacs24 => À partir de la version 0.82-4 (nécessaire pour trusty), le passage à emacs24 a rendu nécessaire le mode tuareg d'ocaml et donc l'installation de ce mode dans une version dédiée fournie par le paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (pour donc camllight version 0.82-4 et plus) | emacs24
22 Mot inconnu : tuareg => À partir de la version 0.82-4 (nécessaire pour trusty), le passage à emacs24 a rendu nécessaire le mode tuareg d'ocaml et donc l'installation de ce mode dans une version dédiée fournie par le paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (pour donc camllight version 0.82-4 et plus) | tuareg
22 Mot inconnu : ocaml => À partir de la version 0.82-4 (nécessaire pour trusty), le passage à emacs24 a rendu nécessaire le mode tuareg d'ocaml et donc l'installation de ce mode dans une version dédiée fournie par le paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (pour donc camllight version 0.82-4 et plus) | ocaml
22 Mot inconnu : camllight => À partir de la version 0.82-4 (nécessaire pour trusty), le passage à emacs24 a rendu nécessaire le mode tuareg d'ocaml et donc l'installation de ce mode dans une version dédiée fournie par le paquet [[http://boisson.homeip.net/depot/pool/trusty/amd64/camltuareg-mode_2.0.6-3_all.deb|camltuareg-mode]] (pour donc camllight version 0.82-4 et plus) | camllight

24 Accord avec “peuvent”. => Il peuvent aussi s'installer par apt-get via le dépôt suivant: | il => suggestions : ['Ils']
24 Conjugaison erronée. Accord avec “Il”. Le verbe devrait être à la 3ᵉ personne du singulier. => Il peuvent aussi s'installer par apt-get via le dépôt suivant: | peuvent => suggestions : ['peut']
24 Mot inconnu : apt-get => Il peuvent aussi s'installer par apt-get via le dépôt suivant: | apt-get

26 Mot inconnu : deb => <file>deb http://boisson.homeip.net/depot/ trusty divers</file> | deb

27 Mot inconnu : NB => **NB :** Remplacez "trusty", par la version que vous utilisez. | nb
27 Guillemets typographiques ouvrants. => **NB :** Remplacez "trusty", par la version que vous utilisez. | " => suggestions : ['«\xa0', '“']
27 Guillemets typographiques fermants. => **NB :** Remplacez "trusty", par la version que vous utilisez. | " => suggestions : ['\xa0»', '”']

29 Mot inconnu : __La => __La signature du dépot s'obtient par__  | __la
29 Mot inconnu : dépot => __La signature du dépot s'obtient par__  | dépot
29 Mot inconnu : par__ => __La signature du dépot s'obtient par__  | par__
29 Espace(s) en fin de ligne à supprimer. => __La signature du dépot s'obtient par__  |   => suggestions : ['']

33 Mot inconnu : root => puis sous root : | root

35 Mot inconnu : NB => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. | nb
35 Mot inconnu : D78A5C23CEA8D8FF => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. | d78a5c23cea8d8ff
35 Espace(s) surnuméraire(s) à supprimer. => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. |    => suggestions : [' ']
35 Mot inconnu : D3F7C => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. | d3f7c
35 Mot inconnu : artful => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. | artful

36 Guillemets typographiques ouvrants. => ===== Utilisation avec la librairie "graphics"===== | " => suggestions : ['«\xa0', '“']
36 Mot inconnu : graphics => ===== Utilisation avec la librairie "graphics"===== | graphics
36 Guillemets typographiques fermants. => ===== Utilisation avec la librairie "graphics"===== | " => suggestions : ['\xa0»', '”']

38 Mot inconnu : Caml => Pour lancer Caml avec la librairie "graphics", il faut lancer : | caml
38 Guillemets typographiques ouvrants. => Pour lancer Caml avec la librairie "graphics", il faut lancer : | " => suggestions : ['«\xa0', '“']
38 Mot inconnu : graphics => Pour lancer Caml avec la librairie "graphics", il faut lancer : | graphics
38 Guillemets typographiques fermants. => Pour lancer Caml avec la librairie "graphics", il faut lancer : | " => suggestions : ['\xa0»', '”']

41 Mot inconnu : CaML => <note>Si vous avez fait des installations foireuses de CaML Light précédemment, il se peut que vous devez soit remplacer camllight par /usr/bin/camllight, soit simplement supprimer /usr/local/bin/camllight.</note> | caml
41 Après “il se peut que”, le verbe devrait être au subjonctif. => <note>Si vous avez fait des installations foireuses de CaML Light précédemment, il se peut que vous devez soit remplacer camllight par /usr/bin/camllight, soit simplement supprimer /usr/local/bin/camllight.</note> | devez => suggestions : ['dussiez', 'deviez']
41 Mot inconnu : camllight => <note>Si vous avez fait des installations foireuses de CaML Light précédemment, il se peut que vous devez soit remplacer camllight par /usr/bin/camllight, soit simplement supprimer /usr/local/bin/camllight.</note> | camllight
43 Espace(s) en fin de ligne à supprimer. => Une fois lancé, il faut commencer par :  |   => suggestions : ['']
49 Espace(s) en fin de ligne à supprimer. => autre particularité pour lancer une fenêtre il faut désormais taper :  |   => suggestions : ['']

52 Accord de genre erroné : « une version » est féminin, « inférieur » est masculin. => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] | inférieur => suggestions : ['inférieure']
52 Accord de nombre erroné avec « 4 » : « comprise » devrait être au pluriel. => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] | comprise => suggestions : ['comprises']
52 Pas d’espace après ce signe. => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] | [  => suggestions : ['[']
52 S’il s’agit d’un impératif, mettez un trait d’union. => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] | indiquez moi => suggestions : ['Indiquez-moi']
52 Il manque un espace. => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] | boisson => suggestions : [' Boisson']
52 Pas d’espace avant ce signe. => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] |  ] => suggestions : [']']

54 Mot inconnu : CaML => Voilà vous êtes équipé pour programmer en CaML!! | caml

64 Mot inconnu : draw_string => draw_string "!!BONJOUR!!";;</code> | draw_string
64 Guillemets fermants. => draw_string "!!BONJOUR!!";;</code> |  " => suggestions : ['\xa0»', '”']
64 Il manque un espace. => draw_string "!!BONJOUR!!";;</code> | bonjour => suggestions : [' BONJOUR']
64 Guillemets typographiques fermants. => draw_string "!!BONJOUR!!";;</code> | " => suggestions : ['\xa0»', '”']
64 Une de ces ponctuations est superflue. => draw_string "!!BONJOUR!!";;</code> | ;; => suggestions : [';', ';']

66 Il manque un espace. => Une commande pour compiler le fichier toto.ml | ml => suggestions : [' ml']
70 Mot inconnu : nécéssaire => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | nécéssaire
70 Mot inconnu : unix => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | unix
70 Mot inconnu : zo => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | zo
70 Il manque un espace à côté du tiret. => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. |  - => suggestions : [' – ', ' — ']
70 Mot inconnu : lunix => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | lunix
70 Guillemets typographiques ouvrants. => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | " => suggestions : ['«\xa0', '“']
70 Mot inconnu : unix => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | unix
70 Guillemets typographiques fermants. => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | " => suggestions : ['\xa0»', '”']
70 Guillemets typographiques ouvrants. => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | " => suggestions : ['«\xa0', '“']
70 Mot inconnu : graphics => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | graphics
70 Guillemets typographiques fermants. => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. | " => suggestions : ['\xa0»', '”']

73 Mot inconnu : Editeur => ===== Editeur de texte avec caml light ===== | editeur
73 Mot inconnu : caml => ===== Editeur de texte avec caml light ===== | caml
74 Mot inconnu : Gedit => On peut utiliser principalement deux éditeurs : [[Gedit]] et [[Emacs]] | gedit
74 Mot inconnu : Emacs => On peut utiliser principalement deux éditeurs : [[Gedit]] et [[Emacs]] | emacs

78 Mot inconnu : Gedit => ==== Gedit ==== | gedit

80 Mot inconnu : Gedit => [[Gedit]] est un très bon éditeur de texte pour faire des programmes en CaML Light. | gedit
80 Mot inconnu : CaML => [[Gedit]] est un très bon éditeur de texte pour faire des programmes en CaML Light. | caml

84 Mot inconnu : Caml => Pour colorier le texte vous pouvez aller dans **Affichage > Mode de coloration > Source > Objective Caml** | caml

86 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => <note tip> Si vous enregistrez votre fichier avec l'extension .ml et que vous l'ouvrez ensuite avec [[Gedit]], la couleur sera automatiquement activée</note> |  . => suggestions : ['. ', '.']
86 Mot inconnu : Gedit => <note tip> Si vous enregistrez votre fichier avec l'extension .ml et que vous l'ouvrez ensuite avec [[Gedit]], la couleur sera automatiquement activée</note> | gedit

88 Mot inconnu : Caml => === Lancer vos programmes Caml dans un panneau inférieur === | caml

90 Mot inconnu : Gedit => <note important>Le mode interactif ne marche pas avec [[Gedit]], si vous voulez faire de l'interactif, utilisez [[emacs]] (voir [[caml_light#emacs|plus bas]]).</note> | gedit
90 Mot inconnu : emacs => <note important>Le mode interactif ne marche pas avec [[Gedit]], si vous voulez faire de l'interactif, utilisez [[emacs]] (voir [[caml_light#emacs|plus bas]]).</note> | emacs
90 Mot inconnu : caml_light => <note important>Le mode interactif ne marche pas avec [[Gedit]], si vous voulez faire de l'interactif, utilisez [[emacs]] (voir [[caml_light#emacs|plus bas]]).</note> | caml_light

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Commencez par activer le greffon via **Édition** > **Préférences** > onglet **Greffons** > Cocher **Outils externes**. |    => suggestions : ['']
92 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Commencez par activer le greffon via **Édition** > **Préférences** > onglet **Greffons** > Cocher **Outils externes**. |  -  => suggestions : [' – ', ' — ', ' − ']

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Allez ensuite, dans **Outils** > **Gérer les outils externes**. Faites "**Nouveau**", et rentrez ce que vous voulez en nom, description et raccourci clavier. En "**Entrée**" (ou "**Input**"), choisissez "**Document actuel**". En "**Sortie**" (ou "**Output**"), choisissez "**Afficher dans le panneau inférieur**". En "**Applicability**", choisissez "**Tous les documents**". |    => suggestions : ['']
93 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Allez ensuite, dans **Outils** > **Gérer les outils externes**. Faites "**Nouveau**", et rentrez ce que vous voulez en nom, description et raccourci clavier. En "**Entrée**" (ou "**Input**"), choisissez "**Document actuel**". En "**Sortie**" (ou "**Output**"), choisissez "**Afficher dans le panneau inférieur**". En "**Applicability**", choisissez "**Tous les documents**". |  -  => suggestions : [' – ', ' — ', ' − ']
93 Mot inconnu : Applicability =>   - Allez ensuite, dans **Outils** > **Gérer les outils externes**. Faites "**Nouveau**", et rentrez ce que vous voulez en nom, description et raccourci clavier. En "**Entrée**" (ou "**Input**"), choisissez "**Document actuel**". En "**Sortie**" (ou "**Output**"), choisissez "**Afficher dans le panneau inférieur**". En "**Applicability**", choisissez "**Tous les documents**". | applicability

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - En commande, trois possibilités :  |    => suggestions : ['']
94 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - En commande, trois possibilités :  |  -  => suggestions : [' – ', ' — ', ' − ']
94 Espace(s) en fin de ligne à supprimer. =>   - En commande, trois possibilités :  |   => suggestions : ['']

97 Mot inconnu : cat => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). | cat
97 Mot inconnu : GEDIT_CURRENT_DOCUMENT_PATH => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). | gedit_current_document_path
97 Guillemets typographiques fermants. => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). | " => suggestions : ['\xa0»', '”']
97 Mot inconnu : camllight => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). | camllight

99 Guillemets typographiques ouvrants. => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> | " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : camllight => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> | camllight
99 Espace(s) surnuméraire(s) à supprimer. => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> |    => suggestions : [' ']
99 Mot inconnu : camllight => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> | camllight
100 Guillemets typographiques ouvrants. => <note tip>Au moins depuis la version 10.10 (peut-être avant ?), il suffit de rentrer en commande "camllight". Cela à l'avantage d'exécuter la version actuelle du programme affichée dans l'éditeur et non la dernière version enregistrée. Pour enregistrer automatiquement le programme à chaque exécution, il suffit alors de choisir l'option Enregistrer : Document actuel</note> | " => suggestions : ['«\xa0', '“']
100 Mot inconnu : camllight => <note tip>Au moins depuis la version 10.10 (peut-être avant ?), il suffit de rentrer en commande "camllight". Cela à l'avantage d'exécuter la version actuelle du programme affichée dans l'éditeur et non la dernière version enregistrée. Pour enregistrer automatiquement le programme à chaque exécution, il suffit alors de choisir l'option Enregistrer : Document actuel</note> | camllight
100 Guillemets typographiques fermants. => <note tip>Au moins depuis la version 10.10 (peut-être avant ?), il suffit de rentrer en commande "camllight". Cela à l'avantage d'exécuter la version actuelle du programme affichée dans l'éditeur et non la dernière version enregistrée. Pour enregistrer automatiquement le programme à chaque exécution, il suffit alors de choisir l'option Enregistrer : Document actuel</note> | " => suggestions : ['\xa0»', '”']

113 Mot inconnu : echo => tee $(echo $GEDIT_CURRENT_DOCUMENT_NAME)-$(date +%s).ml | camllight;</code> | echo
113 Mot inconnu : GEDIT_CURRENT_DOCUMENT_NAME => tee $(echo $GEDIT_CURRENT_DOCUMENT_NAME)-$(date +%s).ml | camllight;</code> | gedit_current_document_name
113 Il manque un espace. => tee $(echo $GEDIT_CURRENT_DOCUMENT_NAME)-$(date +%s).ml | camllight;</code> | s => suggestions : [' s']
113 Mot inconnu : camllight => tee $(echo $GEDIT_CURRENT_DOCUMENT_NAME)-$(date +%s).ml | camllight;</code> | camllight

118 Mot inconnu : Emacs => ==== Emacs ==== | emacs

120 Mot inconnu : caml => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | caml
120 Mot inconnu : emacs => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | emacs
120 Mot inconnu : tuareg => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | tuareg
120 Mot inconnu : emacs => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | emacs
120 Mot inconnu : camllight => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | camllight
120 Mot inconnu : emacs => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | emacs
120 Mot inconnu : camllight => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | camllight
120 Mot inconnu : camlgraph => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | camlgraph
120 Mot inconnu : camllight => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | camllight
120 Mot inconnu : caml_all => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | caml_all
120 Mot inconnu : caml => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | caml
120 Écriture épicène. Utilisez un point médian. => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | ctrl-e => suggestions : ['Ctrl·e']
120 Mot inconnu : caml_all => Pour faire des programmes avec caml light, on peut aussi utiliser [[emacs]]. Le mode tuareg est installé en même temps que le paquet emacs dans une version adaptée à camllight. emacs appelle par défaut «camllight camlgraph» ou «camllight caml_all» lors de l'évaluation de la première phrase caml par Ctrl-c Ctrl-b ou Ctrl-x Ctrl-e. Le premier permet d'avoir la librairie graphique, caml_all permet d'avoir toutes les librairies usuelles accessibles. | caml_all

122 Mot inconnu : Tuareg => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  | tuareg
122 Mot inconnu : camllight => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  | camllight
122 Mot inconnu : camltuareg-mode => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  | camltuareg-mode
122 Espace(s) en fin de ligne à supprimer. => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  |   => suggestions : ['']

124 Mot inconnu : tuareg => Pour installer tuareg, il y a trois méthodes : | tuareg

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Première méthode recommandée |    => suggestions : ['']

130 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get install camltuareg-mode |    => suggestions : ['']
130 Mot inconnu : sudo =>   sudo apt-get install camltuareg-mode | sudo
130 Mot inconnu : apt-get =>   sudo apt-get install camltuareg-mode | apt-get
130 Mot inconnu : install =>   sudo apt-get install camltuareg-mode | install
130 Mot inconnu : camltuareg-mode =>   sudo apt-get install camltuareg-mode | camltuareg-mode

132 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Pour l'utiliser il suffit d'éditer un fichier avec l'extension .ml ou bien de faire Alt+x puis |  . => suggestions : ['. ', '.']

133 Guillemets ouvrants. => '' camltuareg-mode '' | ''  => suggestions : ['«\xa0', '“']
133 Mot inconnu : camltuareg-mode => '' camltuareg-mode '' | camltuareg-mode
133 Guillemets fermants. => '' camltuareg-mode '' |  '' => suggestions : ['\xa0»', '”']

134 Mot inconnu : Emacs => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  | emacs
134 Mot inconnu : caml => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  | caml
134 Incohérence avec “Il” : “évaluation” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  | évaluation => suggestions : []
134 Mot inconnu : buffer => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  | buffer
134 Écriture épicène. Utilisez un point médian. => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  | ctrl-e => suggestions : ['Ctrl·e']
134 Espace(s) en fin de ligne à supprimer. => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  |   => suggestions : ['']

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Deuxième méthode: utilisation du mode tuareg original. |    => suggestions : ['']
136 Mot inconnu : tuareg =>   * Deuxième méthode: utilisation du mode tuareg original. | tuareg
138 Mot inconnu : ocaml => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | ocaml
138 Mot inconnu : camllight => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | camllight
138 Mot inconnu : camltuareg-mode => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | camltuareg-mode
138 Guillemets typographiques ouvrants. => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | '' => suggestions : ['«\xa0', '“']
138 Mot inconnu : ocaml => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | ocaml
138 Guillemets typographiques fermants. => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | '' => suggestions : ['\xa0»', '”']
138 Guillemets typographiques ouvrants. => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | '' => suggestions : ['«\xa0', '“']
138 Mot inconnu : camllight => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | camllight
138 Guillemets typographiques fermants. => Le paquet tuareg-mode est adapté à ocaml, mais peut s'utiliser avec camllight. Il suffit d'installer le paquet [[apt://camltuareg-mode|tuareg-mode]]. Lors de la première compilation il vous sera demandé en bas de la fenêtre de renseigner la librairie, entrez ''ocaml'' ou ''camllight'' selon le langage choisi. Votre instruction sera alors compilée. | '' => suggestions : ['\xa0»', '”']

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Troisième méthode (obsolète) |    => suggestions : ['']

142 Mot inconnu : dochtml => On peut aussi installer [[http://users.info.unicaen.fr/~bourdon/dochtml/mode-caml/| caml-mode pour emacs]]. | dochtml
142 Mot inconnu : mode-caml => On peut aussi installer [[http://users.info.unicaen.fr/~bourdon/dochtml/mode-caml/| caml-mode pour emacs]]. | mode-caml
142 Mot inconnu : caml-mode => On peut aussi installer [[http://users.info.unicaen.fr/~bourdon/dochtml/mode-caml/| caml-mode pour emacs]]. | caml-mode
142 Mot inconnu : emacs => On peut aussi installer [[http://users.info.unicaen.fr/~bourdon/dochtml/mode-caml/| caml-mode pour emacs]]. | emacs

144 Mot inconnu : emacs => Lancer [[emacs]] et faire Alt-x puis taper | emacs

145 Guillemets ouvrants. => '' caml-mode '' | ''  => suggestions : ['«\xa0', '“']
145 Mot inconnu : caml-mode => '' caml-mode '' | caml-mode
145 Guillemets fermants. => '' caml-mode '' |  '' => suggestions : ['\xa0»', '”']

146 Mot inconnu : caml => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | caml
146 Mot inconnu : emacs => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | emacs
146 Il manque un espace. => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | ctrl-e => suggestions : [' Ctrl-e']
146 Guillemets typographiques ouvrants. => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | '' => suggestions : ['«\xa0', '“']
146 Mot inconnu : camllight => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | camllight
146 Guillemets typographiques fermants. => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | '' => suggestions : ['\xa0»', '”']
146 Mot inconnu : emacs => Ensuite, faire la procédure caml dans l'éditeur de texte [[emacs]] et pour l'évaluer, faire Ctrl-c,Ctrl-e. Puis rentrer ''camllight'' dans la barre du bas d'[[emacs]]. | emacs

148 Guillemets typographiques ouvrants. => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> | " => suggestions : ['«\xa0', '“']
148 Mot inconnu : caml-mode => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> | caml-mode
148 Guillemets typographiques fermants. => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> | " => suggestions : ['\xa0»', '”']
148 Mot inconnu : ocaml => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> | ocaml
148 Mot inconnu : camllight => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> | camllight

152 Mot inconnu : bash => Le script bash vimcaml donne une interface du type wincaml avec vim. | bash
152 Mot inconnu : vimcaml => Le script bash vimcaml donne une interface du type wincaml avec vim. | vimcaml
152 Mot inconnu : wincaml => Le script bash vimcaml donne une interface du type wincaml avec vim. | wincaml
152 Mot inconnu : vim => Le script bash vimcaml donne une interface du type wincaml avec vim. | vim

153 Mot inconnu : vim => Il doit être exécuté dans un terminal et ouvre alors un deuxième terminal dans lequel se lance vim. Dans le premier se lance camllight. | vim
153 Mot inconnu : camllight => Il doit être exécuté dans un terminal et ouvre alors un deuxième terminal dans lequel se lance vim. Dans le premier se lance camllight. | camllight

154 Guillemets typographiques ouvrants. => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | ' => suggestions : ['“', '‘', '‹']
154 Mot inconnu : ù => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | ù
154 Guillemets typographiques fermants. => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | ' => suggestions : ['”', '’', '›']
154 Mot inconnu : vim => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | vim
154 Mot inconnu : camllight => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | camllight
154 Guillemets typographiques ouvrants. => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | ' => suggestions : ['“', '‘', '‹']
154 Mot inconnu : è => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | è
154 Guillemets typographiques fermants. => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. | ' => suggestions : ['”', '’', '›']

155 Mot inconnu : camllight => Ce script nécessite que camllight - pour lequel les instructions sont données plus haut, gnome-terminal et vim soient installés. | camllight
155 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Ce script nécessite que camllight - pour lequel les instructions sont données plus haut, gnome-terminal et vim soient installés. |  -  => suggestions : [' – ', ' — ', ' − ']
155 Mot inconnu : vim => Ce script nécessite que camllight - pour lequel les instructions sont données plus haut, gnome-terminal et vim soient installés. | vim

159 Guillemets typographiques ouvrants. => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | " => suggestions : ['«\xa0', '“']
159 Mot inconnu : chmod => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | chmod
159 Mot inconnu : vimcaml => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | vimcaml
159 Guillemets typographiques fermants. => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | " => suggestions : ['\xa0»', '”']
159 Guillemets typographiques ouvrants. => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | " => suggestions : ['«\xa0', '“']
159 Guillemets typographiques fermants. => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | " => suggestions : ['\xa0»', '”']
159 Guillemets typographiques ouvrants. => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | " => suggestions : ['«\xa0', '“']
159 Guillemets typographiques fermants. => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. | " => suggestions : ['\xa0»', '”']

160 Mot inconnu : camllight => Si vous exécutez une boucle infinie, allez dans la fenêtre de camllight et entrez Ctrl + c ; vous pouvez alors continuer normalement. | camllight

168 Mot inconnu : Quantal => Il est possible, sous Quantal (12.10) au moins, que l'installation révèle un bug du gestionnaire de sources de logiciels, software-properties-gtk, dû probablement à un plantage du module utf-8. | quantal
168 Mot inconnu : software-properties-gtk => Il est possible, sous Quantal (12.10) au moins, que l'installation révèle un bug du gestionnaire de sources de logiciels, software-properties-gtk, dû probablement à un plantage du module utf-8. | software-properties-gtk
168 Mot inconnu : utf-8 => Il est possible, sous Quantal (12.10) au moins, que l'installation révèle un bug du gestionnaire de sources de logiciels, software-properties-gtk, dû probablement à un plantage du module utf-8. | utf-8
