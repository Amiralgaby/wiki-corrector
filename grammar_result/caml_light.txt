
4 Mot inconnu : Caml [[7:11]] => ====== Caml Light ====== <|> caml

24 Accord avec “peuvent”. [[0:2]] => Il peuvent aussi s'installer par apt-get via le dépôt suivant: <|> il => suggestions : ['Ils']
24 Conjugaison erronée. Accord avec “Il”. Le verbe devrait être à la 3ᵉ personne du singulier. [[3:10]] => Il peuvent aussi s'installer par apt-get via le dépôt suivant: <|> peuvent => suggestions : ['peut']
24 Mot inconnu : apt-get [[33:40]] => Il peuvent aussi s'installer par apt-get via le dépôt suivant: <|> apt-get

27 Mot inconnu : NB [[2:4]] => **NB :** Remplacez "trusty", par la version que vous utilisez. <|> nb
27 Guillemets typographiques ouvrants. [[19:20]] => **NB :** Remplacez "trusty", par la version que vous utilisez. <|> " => suggestions : ['«\xa0', '“']
27 Guillemets typographiques fermants. [[26:27]] => **NB :** Remplacez "trusty", par la version que vous utilisez. <|> " => suggestions : ['\xa0»', '”']

29 Mot inconnu : __La [[0:4]] => __La signature du dépot s'obtient par__  <|> __la
29 Mot inconnu : dépot [[18:23]] => __La signature du dépot s'obtient par__  <|> dépot
29 Mot inconnu : par__ [[34:39]] => __La signature du dépot s'obtient par__  <|> par__
29 Espace(s) en fin de ligne à supprimer. [[39:40]] => __La signature du dépot s'obtient par__  <|>   => suggestions : ['']

35 Mot inconnu : NB [[2:4]] => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. <|> nb
35 Mot inconnu : D78A5C23CEA8D8FF [[25:41]] => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. <|> d78a5c23cea8d8ff
35 Espace(s) surnuméraire(s) à supprimer. [[46:48]] => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. <|>    => suggestions : [' ']
35 Mot inconnu : D3F7C [[53:58]] => **NB :** **Remplacez** **D78A5C23CEA8D8FF**par  **416D3F7C** pour les versions artful et plus. <|> d3f7c

36 Guillemets typographiques ouvrants. [[36:37]] => ===== Utilisation avec la librairie "graphics"===== <|> " => suggestions : ['«\xa0', '“']
36 Mot inconnu : graphics [[37:45]] => ===== Utilisation avec la librairie "graphics"===== <|> graphics
36 Guillemets typographiques fermants. [[45:46]] => ===== Utilisation avec la librairie "graphics"===== <|> " => suggestions : ['\xa0»', '”']

38 Mot inconnu : Caml [[12:16]] => Pour lancer Caml avec la librairie "graphics", il faut lancer : <|> caml
38 Guillemets typographiques ouvrants. [[35:36]] => Pour lancer Caml avec la librairie "graphics", il faut lancer : <|> " => suggestions : ['«\xa0', '“']
38 Mot inconnu : graphics [[36:44]] => Pour lancer Caml avec la librairie "graphics", il faut lancer : <|> graphics
38 Guillemets typographiques fermants. [[44:45]] => Pour lancer Caml avec la librairie "graphics", il faut lancer : <|> " => suggestions : ['\xa0»', '”']
40 Mot inconnu : camlnum [[66:73]] => <code>camllight caml_all</code> qui charge toutes les extensions (camlnum, camlunix, camlgraph, etc) <|> camlnum
40 Mot inconnu : camlunix [[75:83]] => <code>camllight caml_all</code> qui charge toutes les extensions (camlnum, camlunix, camlgraph, etc) <|> camlunix
40 Mot inconnu : camlgraph [[85:94]] => <code>camllight caml_all</code> qui charge toutes les extensions (camlnum, camlunix, camlgraph, etc) <|> camlgraph

41 Mot inconnu : CaML [[55:59]] => <note>Si vous avez fait des installations foireuses de CaML Light précédemment, il se peut que vous devez soit remplacer camllight par /usr/bin/camllight, soit simplement supprimer /usr/local/bin/camllight.</note> <|> caml
41 Après “il se peut que”, le verbe devrait être au subjonctif. [[100:105]] => <note>Si vous avez fait des installations foireuses de CaML Light précédemment, il se peut que vous devez soit remplacer camllight par /usr/bin/camllight, soit simplement supprimer /usr/local/bin/camllight.</note> <|> devez => suggestions : ['deviez', 'dussiez']
41 Mot inconnu : camllight [[121:130]] => <note>Si vous avez fait des installations foireuses de CaML Light précédemment, il se peut que vous devez soit remplacer camllight par /usr/bin/camllight, soit simplement supprimer /usr/local/bin/camllight.</note> <|> camllight
43 Espace(s) en fin de ligne à supprimer. [[39:40]] => Une fois lancé, il faut commencer par :  <|>   => suggestions : ['']
49 Espace(s) en fin de ligne à supprimer. [[69:70]] => autre particularité pour lancer une fenêtre il faut désormais taper :  <|>   => suggestions : ['']

52 Accord de genre erroné : « une version » est féminin, « inférieur » est masculin. [[91:100]] => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] <|> inférieur => suggestions : ['inférieure']
52 Accord de nombre erroné avec « 4 » : « comprise » devrait être au pluriel. [[113:121]] => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] <|> comprise => suggestions : ['comprises']
52 Pas d’espace après ce signe. [[166:168]] => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] <|> [  => suggestions : ['[']
52 S’il s’agit d’un impératif, mettez un trait d’union. [[182:194]] => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] <|> indiquez moi => suggestions : ['Indiquez-moi']
52 Il manque un espace. [[252:259]] => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] <|> boisson => suggestions : [' Boisson']
52 Pas d’espace avant ce signe. [[260:262]] => Surtout ne pas oublier l'espace après les premiers guillemets si vous utilisez une version inférieur à la 0.82-4 comprise, ce bug est corrigé pour la version 0.82-5. [ **Remarque:** Indiquez moi ce genre d'erreur, parfois elle se corrige simplement (F.Boisson) ] <|>  ] => suggestions : [']']

54 Mot inconnu : CaML [[42:46]] => Voilà vous êtes équipé pour programmer en CaML!! <|> caml

66 Il manque un espace. [[43:45]] => Une commande pour compiler le fichier toto.ml <|> ml => suggestions : [' ml']
70 Mot inconnu : nécéssaire [[18:28]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> nécéssaire
70 Mot inconnu : unix [[51:55]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> unix
70 Mot inconnu : zo [[56:58]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> zo
70 Il manque un espace à côté du tiret. [[81:83]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|>  - => suggestions : [' – ', ' — ']
70 Mot inconnu : lunix [[83:88]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> lunix
70 Guillemets typographiques ouvrants. [[130:131]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> " => suggestions : ['«\xa0', '“']
70 Mot inconnu : unix [[131:135]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> unix
70 Guillemets typographiques fermants. [[135:136]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> " => suggestions : ['\xa0»', '”']
70 Guillemets typographiques ouvrants. [[156:157]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> " => suggestions : ['«\xa0', '“']
70 Mot inconnu : graphics [[157:165]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> graphics
70 Guillemets typographiques fermants. [[165:166]] => Remarque : il est nécéssaire de charger le fichier unix.zo et d'utiliser l'option -lunix même si vous n'utilisez pas la librairie "unix" explicitement, car "graphics" l'utilise en interne. <|> " => suggestions : ['\xa0»', '”']

73 Mot inconnu : Editeur [[6:13]] => ===== Editeur de texte avec caml light ===== <|> editeur
73 Mot inconnu : caml [[28:32]] => ===== Editeur de texte avec caml light ===== <|> caml

84 Mot inconnu : Caml [[100:104]] => Pour colorier le texte vous pouvez aller dans **Affichage > Mode de coloration > Source > Objective Caml** <|> caml

88 Mot inconnu : Caml [[26:30]] => === Lancer vos programmes Caml dans un panneau inférieur === <|> caml

97 Mot inconnu : cat [[0:3]] => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). <|> cat
97 Mot inconnu : GEDIT_CURRENT_DOCUMENT_PATH [[6:33]] => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). <|> gedit_current_document_path
97 Guillemets typographiques fermants. [[33:34]] => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). <|> " => suggestions : ['\xa0»', '”']
97 Mot inconnu : camllight [[37:46]] => cat "$GEDIT_CURRENT_DOCUMENT_PATH" | camllight</code> (les guillemets permettent d'empêcher que d'éventuels espaces contenus dans le chemin de votre fichier actuel soient interprétés comme des séparateurs de commandes). <|> camllight

99 Guillemets typographiques ouvrants. [[22:23]] => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> <|> " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. [[26:27]] => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> <|> " => suggestions : ['\xa0»', '”']
99 Mot inconnu : camllight [[127:136]] => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> <|> camllight
99 Espace(s) surnuméraire(s) à supprimer. [[167:169]] => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> <|>    => suggestions : [' ']
99 Mot inconnu : camllight [[276:285]] => <note tip>La commande "tee" permet de faire une sauvegarde automatique à chaque exécution dans l'emplacement de sauvegarde, et camllight permet d'exécuter le programme  \\ Si vous ne souhaitez pas enregistrer automatiquement à chaque exécution, rentrez en commande uniquement camllight</note> <|> camllight
100 Guillemets typographiques ouvrants. [[97:98]] => <note tip>Au moins depuis la version 10.10 (peut-être avant ?), il suffit de rentrer en commande "camllight". Cela à l'avantage d'exécuter la version actuelle du programme affichée dans l'éditeur et non la dernière version enregistrée. Pour enregistrer automatiquement le programme à chaque exécution, il suffit alors de choisir l'option Enregistrer : Document actuel</note> <|> " => suggestions : ['«\xa0', '“']
100 Mot inconnu : camllight [[98:107]] => <note tip>Au moins depuis la version 10.10 (peut-être avant ?), il suffit de rentrer en commande "camllight". Cela à l'avantage d'exécuter la version actuelle du programme affichée dans l'éditeur et non la dernière version enregistrée. Pour enregistrer automatiquement le programme à chaque exécution, il suffit alors de choisir l'option Enregistrer : Document actuel</note> <|> camllight
100 Guillemets typographiques fermants. [[107:108]] => <note tip>Au moins depuis la version 10.10 (peut-être avant ?), il suffit de rentrer en commande "camllight". Cela à l'avantage d'exécuter la version actuelle du programme affichée dans l'éditeur et non la dernière version enregistrée. Pour enregistrer automatiquement le programme à chaque exécution, il suffit alors de choisir l'option Enregistrer : Document actuel</note> <|> " => suggestions : ['\xa0»', '”']

122 Mot inconnu : Tuareg [[0:6]] => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  <|> tuareg
122 Mot inconnu : camllight [[114:123]] => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  <|> camllight
122 Mot inconnu : camltuareg-mode [[156:171]] => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  <|> camltuareg-mode
122 Espace(s) en fin de ligne à supprimer. [[190:191]] => Tuareg peut s'installer à part dans sa forme originale mais théoriquement c'est inutile si on utilise les paquets camllight sauf depuis trusty où le paquet camltuareg-mode est indispensable.  <|>   => suggestions : ['']

124 Mot inconnu : tuareg [[15:21]] => Pour installer tuareg, il y a trois méthodes : <|> tuareg

132 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[62:64]] => Pour l'utiliser il suffit d'éditer un fichier avec l'extension .ml ou bien de faire Alt+x puis <|>  . => suggestions : ['. ', '.']
134 Mot inconnu : caml [[24:28]] => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  <|> caml
134 Incohérence avec “Il” : “évaluation” devrait être un verbe, un pronom objet, un adverbe de négation, etc. [[35:45]] => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  <|> évaluation => suggestions : []
134 Mot inconnu : buffer [[49:55]] => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  <|> buffer
134 Écriture épicène. Utilisez un point médian. [[171:177]] => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  <|> ctrl-e => suggestions : ['Ctrl·e']
134 Espace(s) en fin de ligne à supprimer. [[178:179]] => Emacs se mettra en mode caml. Il L'évaluation du buffer se fait par Ctrl-c, Ctrl-b. L'évaluation de la fonction/expression sur laquelle est le curseur se fait par Ctrl-x, Ctrl-e.  <|>   => suggestions : ['']
136 Mot inconnu : tuareg [[42:48]] =>   * Deuxième méthode: utilisation du mode tuareg original. <|> tuareg

148 Guillemets typographiques ouvrants. [[14:15]] => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> <|> " => suggestions : ['«\xa0', '“']
148 Mot inconnu : caml-mode [[15:24]] => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> <|> caml-mode
148 Guillemets typographiques fermants. [[24:25]] => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> <|> " => suggestions : ['\xa0»', '”']
148 Mot inconnu : ocaml [[55:60]] => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> <|> ocaml
148 Mot inconnu : camllight [[86:95]] => <note warning>"caml-mode" est prévu pour programmer en ocaml, si vous l'utilisez pour camllight des bugs peuvent apparaître (en particulier, n'affiche pas les exceptions et se met à mouliner)</note> <|> camllight
152 Mot inconnu : vimcaml [[15:22]] => Le script bash vimcaml donne une interface du type wincaml avec vim. <|> vimcaml
152 Mot inconnu : wincaml [[51:58]] => Le script bash vimcaml donne une interface du type wincaml avec vim. <|> wincaml
152 Mot inconnu : vim [[64:67]] => Le script bash vimcaml donne une interface du type wincaml avec vim. <|> vim

153 Mot inconnu : vim [[95:98]] => Il doit être exécuté dans un terminal et ouvre alors un deuxième terminal dans lequel se lance vim. Dans le premier se lance camllight. <|> vim
153 Mot inconnu : camllight [[125:134]] => Il doit être exécuté dans un terminal et ouvre alors un deuxième terminal dans lequel se lance vim. Dans le premier se lance camllight. <|> camllight

154 Guillemets typographiques ouvrants. [[23:24]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> ' => suggestions : ['“', '‘', '‹']
154 Mot inconnu : ù [[24:25]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> ù
154 Guillemets typographiques fermants. [[25:26]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> ' => suggestions : ['”', '’', '›']
154 Mot inconnu : vim [[47:50]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> vim
154 Mot inconnu : camllight [[169:178]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> camllight
154 Guillemets typographiques ouvrants. [[201:202]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> ' => suggestions : ['“', '‘', '‹']
154 Mot inconnu : è [[202:203]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> è
154 Guillemets typographiques fermants. [[203:204]] => En utilisant la touche 'ù' (configurable) dans vim, le paragraphe (morceau de code démarquée par un saut de ligne de part et d'autre) sous le curseur est alors envoyé à camllight et exécuté. La touche 'è' (configurable aussi) exécute le fichier entier. <|> ' => suggestions : ['”', '’', '›']

155 Mot inconnu : camllight [[24:33]] => Ce script nécessite que camllight - pour lequel les instructions sont données plus haut, gnome-terminal et vim soient installés. <|> camllight
155 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[33:36]] => Ce script nécessite que camllight - pour lequel les instructions sont données plus haut, gnome-terminal et vim soient installés. <|>  -  => suggestions : [' – ', ' — ', ' − ']
155 Mot inconnu : vim [[107:110]] => Ce script nécessite que camllight - pour lequel les instructions sont données plus haut, gnome-terminal et vim soient installés. <|> vim

159 Guillemets typographiques ouvrants. [[66:67]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> " => suggestions : ['«\xa0', '“']
159 Mot inconnu : chmod [[67:72]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> chmod
159 Mot inconnu : vimcaml [[77:84]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> vimcaml
159 Guillemets typographiques fermants. [[84:85]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> " => suggestions : ['\xa0»', '”']
159 Guillemets typographiques ouvrants. [[127:128]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> " => suggestions : ['«\xa0', '“']
159 Guillemets typographiques fermants. [[139:140]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> " => suggestions : ['\xa0»', '”']
159 Guillemets typographiques ouvrants. [[155:156]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> " => suggestions : ['«\xa0', '“']
159 Guillemets typographiques fermants. [[166:167]] => Pour le lancer, il faut d'abord le rendre exécutable en exécutant "chmod a+x vimcaml" dans un terminal ou en allant à l'onglet "permissions" de la fenêtre "propriétés" du fichier. Le script doit impérativement être exécuté dans un terminal. <|> " => suggestions : ['\xa0»', '”']

160 Mot inconnu : camllight [[62:71]] => Si vous exécutez une boucle infinie, allez dans la fenêtre de camllight et entrez Ctrl + c ; vous pouvez alors continuer normalement. <|> camllight

168 Mot inconnu : Quantal [[22:29]] => Il est possible, sous Quantal (12.10) au moins, que l'installation révèle un bug du gestionnaire de sources de logiciels, software-properties-gtk, dû probablement à un plantage du module utf-8. <|> quantal
168 Mot inconnu : software-properties-gtk [[122:145]] => Il est possible, sous Quantal (12.10) au moins, que l'installation révèle un bug du gestionnaire de sources de logiciels, software-properties-gtk, dû probablement à un plantage du module utf-8. <|> software-properties-gtk
168 Mot inconnu : utf-8 [[187:192]] => Il est possible, sous Quantal (12.10) au moins, que l'installation révèle un bug du gestionnaire de sources de logiciels, software-properties-gtk, dû probablement à un plantage du module utf-8. <|> utf-8
