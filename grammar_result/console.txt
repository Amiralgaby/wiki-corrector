
13 Guillemets typographiques ouvrants. => La console est une interface textuelle qui permet une "communication" entre l'homme et la machine avec uniquement un écran et un clavier. Le système peut utiliser différents interpréteurs de commande pour communiquer avec l'utilisateur (par défaut le shell). | " => suggestions : ['«\xa0', '“']
13 Guillemets typographiques fermants. => La console est une interface textuelle qui permet une "communication" entre l'homme et la machine avec uniquement un écran et un clavier. Le système peut utiliser différents interpréteurs de commande pour communiquer avec l'utilisateur (par défaut le shell). | " => suggestions : ['\xa0»', '”']

18 Mot inconnu : ls => //root@machine#// **ls -a** | ls
18 Il manque un espace à côté du tiret. => //root@machine#// **ls -a** |  - => suggestions : [' – ', ' — ']

20 Typographie : un ou trois points ? => . .. .bashrc text.txt dosser/  | .. => suggestions : ['…', '.']
20 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => . .. .bashrc text.txt dosser/  |  . => suggestions : ['. ', '.']
20 Mot inconnu : bashrc => . .. .bashrc text.txt dosser/  | bashrc
20 Mot inconnu : text => . .. .bashrc text.txt dosser/  | text
20 Mot inconnu : txt => . .. .bashrc text.txt dosser/  | txt
20 Mot inconnu : dosser => . .. .bashrc text.txt dosser/  | dosser
20 Espace(s) en fin de ligne à supprimer. => . .. .bashrc text.txt dosser/  |   => suggestions : ['']

22 Guillemets typographiques ouvrants. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. | " => suggestions : ['«\xa0', '“']
22 Mot inconnu : ls => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. | ls
22 Guillemets typographiques fermants. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. | " => suggestions : ['\xa0»', '”']
22 Il manque un espace à côté du tiret. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. |  - => suggestions : [' – ', ' — ']

32 Mot inconnu : desktop => Pour un desktop Ubuntu, dite linux avec interface graphique, elle est accessible via le menu démarrer, sur Terminal ou via un raccourci clavier (voir note). | desktop
32 Mot inconnu : linux => Pour un desktop Ubuntu, dite linux avec interface graphique, elle est accessible via le menu démarrer, sur Terminal ou via un raccourci clavier (voir note). | linux

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

34 Mot inconnu : tty1 => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. | tty1
34 Mot inconnu : tty2 => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. | tty2
34 Typographie : points de suspension. Utilisez le caractère dédié. => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. | ... => suggestions : ['…']
34 Mot inconnu : Fx => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. | fx

38 Guillemets typographiques ouvrants. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | " => suggestions : ['«\xa0', '“']
38 Mot inconnu : F7 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | f7
38 Guillemets typographiques fermants. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | " => suggestions : ['\xa0»', '”']
38 Mot inconnu : Xorg => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | xorg
38 Il manque les traits d’union. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | c'est à dire => suggestions : ['c’est-à-dire']
38 Mot inconnu : Xorg => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | xorg
38 Mot inconnu : F9 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | f9
38 Mot inconnu : F8 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). | f8

44 Mot inconnu : GDM => === Versions avec GDM postérieures à 17.04 === | gdm

48 Mot inconnu : F6 => Plusieurs sessions graphiques peuvent être lancées en parallèle, notamment si vous connectez 2 utilisateurs simultanément, donc n'hésitez pas à tester toutes les combinaisons jusqu'à Ctrl+Alt+F6 si besoin. | f6

53 Accord erroné : “Ubuntu” et “orienté” ne sont pas accordés. Mettez au féminin pluriel. => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc. | orienté => suggestions : ['orientée']
53 Pas d’espace avant une virgule. => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc. |  , => suggestions : [',']
53 Mot inconnu : apt-get => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc. | apt-get
53 Guillemets typographiques fermants. => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc. | '' => suggestions : ['\xa0»', '”']

55 Mot inconnu : MacOS => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  | macos
55 Guillemets typographiques ouvrants. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  | " => suggestions : ['«\xa0', '“']
55 Mot inconnu : mon_fichier => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  | mon_fichier
55 Guillemets typographiques fermants. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  | " => suggestions : ['\xa0»', '”']
55 Espace(s) en fin de ligne à supprimer. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  |   => suggestions : ['']

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Naviguer jusqu'au dossier où se trouve le fichier |    => suggestions : ['']

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Clic droit sur le fichier en question → //Copier// |    => suggestions : ['']

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Vous rendre dans le dossier où vous souhaitez copier le fichier |    => suggestions : ['']

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Clic droit → //Coller// |    => suggestions : ['']

63 Mot inconnu : ctrl => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci. | ctrl
63 Mot inconnu : maj => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci. | maj
63 Mot inconnu : alt => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci. | alt

65 Confusion probable. => Et bien en console, vous pouvez (simplement!) taper ceci : | et bien => suggestions : ['Eh bien', 'Hé bien']

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cp <mon_fichier_à_copier> <destination> |    => suggestions : ['']
67 Mot inconnu : cp =>   cp <mon_fichier_à_copier> <destination> | cp

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cp ~/Bureau/dossier1/ubuntu.pdf  ~/Bureau/dossier2 |    => suggestions : ['']
70 Mot inconnu : cp =>   cp ~/Bureau/dossier1/ubuntu.pdf  ~/Bureau/dossier2 | cp
70 Espace(s) surnuméraire(s) à supprimer. =>   cp ~/Bureau/dossier1/ubuntu.pdf  ~/Bureau/dossier2 |    => suggestions : [' ']

72 Mot inconnu : __ligne => Il a ainsi exécuté une __ligne de commande__ qui sera interprétée en vue d'effectuer une ou plusieurs opérations. | __ligne
72 Mot inconnu : commande__ => Il a ainsi exécuté une __ligne de commande__ qui sera interprétée en vue d'effectuer une ou plusieurs opérations. | commande__

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf. |    => suggestions : ['']
75 Mot inconnu : cp =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf. | cp
75 Mot inconnu : dossier_1 =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf. | dossier_1
75 Mot inconnu : dossier_2 =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf. | dossier_2
77 Mot inconnu : cmd => À noter que les consoles/terminaux ne sont pas limités à GNU/Linux : en effet, Windows possède un terminal qui émule MS-DOS. Pour y accéder, appuyez sur <toucheWindows>+R, puis tapez **cmd** puis entrée. | cmd

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   copy windows.pdf windows2.pdf |    => suggestions : ['']
80 Mot inconnu : copy =>   copy windows.pdf windows2.pdf | copy
80 Mot inconnu : windows2 =>   copy windows.pdf windows2.pdf | windows2

82 Mot inconnu : ergonomiquement => Cependant, aussi bien au niveau fonctionnalités que souplesse, la console sous Windows est bien pauvre (impossibilité de redimensionner la fenêtre, peu d'outils en ligne de commande, ergonomiquement inutilisable…). C'est pour cela qu'elle n'est que très peu utilisée. | ergonomiquement
83 Mot inconnu : Vista => Microsoft a alors décidé de développer une **vraie** console ([[https://fr.wikipedia.org/wiki/Windows_PowerShell|PowerShell]]) pour l'intégrer dans Windows Vista, mais à la suite de différents problèmes, elle n'a finalement pas été intégrée avant Windows 7. | vista

87 Pas d’espace avant une virgule. => Malheureusement si un bug survient dans un programme, le mode graphique, par souci de simplicité, n'affiche aucune information pour trouver le problème. Dans ce cas, lancer un programme en mode console permet de récupérer ces informations. Sans oublier que si vous constatez des problèmes dans votre système , les commandes s'avèrent indispensables.  |  , => suggestions : [',']
87 Espace(s) en fin de ligne à supprimer. => Malheureusement si un bug survient dans un programme, le mode graphique, par souci de simplicité, n'affiche aucune information pour trouver le problème. Dans ce cas, lancer un programme en mode console permet de récupérer ces informations. Sans oublier que si vous constatez des problèmes dans votre système , les commandes s'avèrent indispensables.  |   => suggestions : ['']

93 Espace(s) en fin de ligne à supprimer. => La communauté Ubuntu semble beaucoup plus présente que sur différents systèmes. Si vous avez une difficulté, vous pouvez poser votre problème sur un forum connu. En fonction de la difficulté, d'autres utilisateurs vous aideront pour résoudre votre souci.  |   => suggestions : ['']

101 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ls -ad ~/.* |    => suggestions : ['']
101 Mot inconnu : ls =>   ls -ad ~/.* | ls
101 Il manque un espace à côté du tiret. =>   ls -ad ~/.* |  - => suggestions : [' – ', ' — ']
105 Mot inconnu : Nautilus => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | nautilus
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['«\xa0', '“']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['\xa0»', '”']
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['«\xa0', '“']
105 Typographie : points de suspension. Utilisez le caractère dédié. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | ... => suggestions : ['…']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['\xa0»', '”']
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['«\xa0', '“']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['\xa0»', '”']
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['«\xa0', '“']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | " => suggestions : ['\xa0»', '”']
105 Typographie : points de suspension. Utilisez le caractère dédié. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  | ... => suggestions : ['…']
105 Espace(s) en fin de ligne à supprimer. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  |   => suggestions : ['']

112 Forme interrogative ? Mettez un trait d’union. => Intéressons nous d'abord à la nomenclature de la commande : | intéressons nous => suggestions : ['Intéressons-nous']

117 Guillemets typographiques ouvrants. => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier). | '' => suggestions : ['«\xa0', '“']
117 Mot inconnu : cp => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier). | cp
117 Guillemets typographiques fermants. => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier). | '' => suggestions : ['\xa0»', '”']
117 Mot inconnu : __commande__ => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier). | __commande__
117 Mot inconnu : copy => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier). | copy

119 Guillemets typographiques ouvrants. => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante : | '' => suggestions : ['«\xa0', '“']
119 Mot inconnu : cp => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante : | cp
119 Guillemets typographiques fermants. => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante : | '' => suggestions : ['\xa0»', '”']

131 Guillemets typographiques ouvrants. => Cependant une commande ne nécessite pas forcément de paramètres (la commande ''ls'' par exemple, qui affiche le contenu d'un dossier). | '' => suggestions : ['«\xa0', '“']
131 Mot inconnu : ls => Cependant une commande ne nécessite pas forcément de paramètres (la commande ''ls'' par exemple, qui affiche le contenu d'un dossier). | ls
131 Guillemets typographiques fermants. => Cependant une commande ne nécessite pas forcément de paramètres (la commande ''ls'' par exemple, qui affiche le contenu d'un dossier). | '' => suggestions : ['\xa0»', '”']

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Entrer le nom de la commande, suivie du paramètre ''%%--%%help'' ou ''-h'', comme ceci : |    => suggestions : ['']
137 Il manque un espace. =>   * Entrer le nom de la commande, suivie du paramètre ''%%--%%help'' ou ''-h'', comme ceci : | help => suggestions : [' help']
137 Mot inconnu : help =>   * Entrer le nom de la commande, suivie du paramètre ''%%--%%help'' ou ''-h'', comme ceci : | help
137 Guillemets typographiques fermants. =>   * Entrer le nom de la commande, suivie du paramètre ''%%--%%help'' ou ''-h'', comme ceci : | '' => suggestions : ['\xa0»', '”']
137 Guillemets typographiques fermants. =>   * Entrer le nom de la commande, suivie du paramètre ''%%--%%help'' ou ''-h'', comme ceci : | '' => suggestions : ['\xa0»', '”']

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La commande man ( ça marche à tous les coups ) |    => suggestions : ['']
140 Pas d’espace après ce signe. =>   * La commande man ( ça marche à tous les coups ) | (  => suggestions : ['(']
140 Pas d’espace avant ce signe. =>   * La commande man ( ça marche à tous les coups ) |  ) => suggestions : [')']

142 Guillemets typographiques ouvrants. => Notez que ''man'' est elle-même une commande, et permet d'afficher la documentation de la commande indiquée en paramètre. L'avantage de cette méthode est que le texte affiché est souvent plus complet, et la plupart du temps dans la langue du système (c'est-à-dire en français si votre système supporte cette langue). | '' => suggestions : ['«\xa0', '“']
142 Guillemets typographiques fermants. => Notez que ''man'' est elle-même une commande, et permet d'afficher la documentation de la commande indiquée en paramètre. L'avantage de cette méthode est que le texte affiché est souvent plus complet, et la plupart du temps dans la langue du système (c'est-à-dire en français si votre système supporte cette langue). | '' => suggestions : ['\xa0»', '”']

153 Guillemets typographiques ouvrants. => ''cd'' est LA commande basique que tout utilisateur doit connaître. Comme indiqué dans le premier chapitre de cette page, cette commande sert à naviguer d'un dossier à un autre. | '' => suggestions : ['«\xa0', '“']
153 Guillemets typographiques fermants. => ''cd'' est LA commande basique que tout utilisateur doit connaître. Comme indiqué dans le premier chapitre de cette page, cette commande sert à naviguer d'un dossier à un autre. | '' => suggestions : ['\xa0»', '”']

166 Mot inconnu : ls => ==== ls ==== | ls

169 Guillemets typographiques ouvrants. => ''ls'' permet d'afficher la liste des fichiers et dossiers présents dans le dossier indiqué en paramètre. | '' => suggestions : ['«\xa0', '“']
169 Mot inconnu : ls => ''ls'' permet d'afficher la liste des fichiers et dossiers présents dans le dossier indiqué en paramètre. | ls
169 Guillemets typographiques fermants. => ''ls'' permet d'afficher la liste des fichiers et dossiers présents dans le dossier indiqué en paramètre. | '' => suggestions : ['\xa0»', '”']
200 Espace(s) en fin de ligne à supprimer. => Il existe des raccourcis clavier spécifiques à la console, et permettant de nombreuses actions intéressantes (source : [[http://www.tux-planet.fr/raccourcis-clavier-sous-bash/|Tux-planet]]) :  |   => suggestions : ['']

204 Mot inconnu : enable => # enable programmable completion features (you don't need to enable | enable
204 Mot inconnu : completion => # enable programmable completion features (you don't need to enable | completion
204 Mot inconnu : features => # enable programmable completion features (you don't need to enable | features
204 Mot inconnu : you => # enable programmable completion features (you don't need to enable | you
204 Mot inconnu : don't => # enable programmable completion features (you don't need to enable | don't
204 Mot inconnu : need => # enable programmable completion features (you don't need to enable | need
204 Mot inconnu : to => # enable programmable completion features (you don't need to enable | to
204 Mot inconnu : enable => # enable programmable completion features (you don't need to enable | enable

205 Mot inconnu : this => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile | this
205 Mot inconnu : it's => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile | it's
205 Mot inconnu : already => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile | already
205 Mot inconnu : enabled => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile | enabled
205 Mot inconnu : and => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile | and

207 Pas d’espace après ce signe. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | [  => suggestions : ['[']
207 Pas d’espace avant ce signe. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then |  ] => suggestions : [']']
207 Mot inconnu : shopt => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | shopt
207 Il manque un espace à côté du tiret. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then |  - => suggestions : [' – ', ' — ']
207 Mot inconnu : oq => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | oq
207 Mot inconnu : posix => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | posix
207 Mot inconnu : then => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | then

208 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   . /etc/bash_completion |    => suggestions : ['']
208 Pas d’espace avant un point. =>   . /etc/bash_completion |  . => suggestions : ['.']

215 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + a : aller au début de la ligne |    => suggestions : ['']

216 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + e : aller à la fin de la ligne |    => suggestions : ['']

217 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + b : se déplacer mot par mot dans la ligne de commande en arrière (b pour backward) |    => suggestions : ['']
217 Mot inconnu : backward =>   * Alt + b : se déplacer mot par mot dans la ligne de commande en arrière (b pour backward) | backward

218 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + f : se déplacer mot par mot dans la ligne de commande en avant (f pour forward) |    => suggestions : ['']
218 Mot inconnu : forward =>   * Alt + f : se déplacer mot par mot dans la ligne de commande en avant (f pour forward) | forward

219 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + xx : positionner le curseur au début du mot ou à la fin |    => suggestions : ['']
219 Mot inconnu : xx =>   * Ctrl + xx : positionner le curseur au début du mot ou à la fin | xx

223 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + k : couper la chaîne du curseur jusqu'à la fin de la ligne |    => suggestions : ['']

224 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + u : couper la chaîne du curseur jusqu'au début de la ligne |    => suggestions : ['']

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + w : couper le mot avant le curseur |    => suggestions : ['']

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + y : coller une chaîne |    => suggestions : ['']

230 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls) |    => suggestions : ['']
230 Mot inconnu : sl =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls) | sl
230 Mot inconnu : ls =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls) | ls

231 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + t : inverser la position des deux mots avant le curseur |    => suggestions : ['']
231 Mot inconnu : shift =>   * Alt + shift + t : inverser la position des deux mots avant le curseur | shift

232 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize) |    => suggestions : ['']
232 Mot inconnu : shift =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize) | shift
232 Mot inconnu : capitalize =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize) | capitalize

233 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase) |    => suggestions : ['']
233 Mot inconnu : shift =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase) | shift
233 Mot inconnu : lowercase =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase) | lowercase

234 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase) |    => suggestions : ['']
234 Mot inconnu : shift =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase) | shift
234 Mot inconnu : uppercase =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase) | uppercase

235 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + . : réécrire le paramètre de la dernière commande |    => suggestions : ['']
235 Mot inconnu : shift =>   * Alt + shift + . : réécrire le paramètre de la dernière commande | shift
235 Pas d’espace avant un point. =>   * Alt + shift + . : réécrire le paramètre de la dernière commande |  . => suggestions : ['.']

238 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + l : effacer le contenu de l'écran |    => suggestions : ['']

239 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + _ : annuler la dernière modification |    => suggestions : ['']

240 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + c : arrêter la commande en cours |    => suggestions : ['']

241 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan) |    => suggestions : ['']
241 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan) | interrompt => suggestions : ['interromps']
241 Mot inconnu : bg =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan) | bg

242 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + d : quitter le shell en cours |    => suggestions : ['']

243 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + r : permet de rechercher une commande dans l'historique de la console |    => suggestions : ['']

247 Guillemets typographiques ouvrants. => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\ | '' => suggestions : ['«\xa0', '“']
247 Mot inconnu : Tab => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\ | tab
247 Guillemets typographiques fermants. => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\ | '' => suggestions : ['\xa0»', '”']
247 Mot inconnu : apt-get => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\ | apt-get

249 Pas d’espace après ce signe. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | [  => suggestions : ['[']
249 Pas d’espace avant ce signe. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then |  ] => suggestions : [']']
249 Mot inconnu : shopt => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | shopt
249 Il manque un espace à côté du tiret. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then |  - => suggestions : [' – ', ' — ']
249 Mot inconnu : oq => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | oq
249 Mot inconnu : posix => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | posix
249 Mot inconnu : then => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then | then

250 Pas d’espace avant un point. => #    . /etc/bash_completion |  . => suggestions : ['.']

256 Mot inconnu : bashrc => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | bashrc
256 Guillemets typographiques fermants. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | '' => suggestions : ['\xa0»', '”']
256 Guillemets typographiques ouvrants. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | '' => suggestions : ['«\xa0', '“']
256 Mot inconnu : some => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | some
256 Mot inconnu : ls => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | ls
256 Mot inconnu : aliases => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | aliases
256 Guillemets typographiques fermants. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type : | '' => suggestions : ['\xa0»', '”']

260 Guillemets typographiques ouvrants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''. | '' => suggestions : ['«\xa0', '“']
260 Mot inconnu : monalias => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''. | monalias
260 Guillemets typographiques fermants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''. | '' => suggestions : ['\xa0»', '”']
260 Guillemets typographiques ouvrants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''. | '' => suggestions : ['«\xa0', '“']
260 Mot inconnu : macommandetreslongue => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''. | macommandetreslongue
260 Guillemets typographiques fermants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''. | '' => suggestions : ['\xa0»', '”']

269 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias acs='apt-cache search' |      => suggestions : ['']
269 Mot inconnu : acs =>     alias acs='apt-cache search' | acs
269 Mot inconnu : apt-cache =>     alias acs='apt-cache search' | apt-cache
269 Mot inconnu : search =>     alias acs='apt-cache search' | search
269 Guillemets typographiques fermants. =>     alias acs='apt-cache search' | ' => suggestions : ['”', '’', '›']

270 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agu='sudo apt-get update' |      => suggestions : ['']
270 Mot inconnu : agu =>     alias agu='sudo apt-get update' | agu
270 Mot inconnu : sudo =>     alias agu='sudo apt-get update' | sudo
270 Mot inconnu : apt-get =>     alias agu='sudo apt-get update' | apt-get
270 Mot inconnu : update =>     alias agu='sudo apt-get update' | update
270 Guillemets typographiques fermants. =>     alias agu='sudo apt-get update' | ' => suggestions : ['”', '’', '›']

271 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agg='sudo apt-get upgrade' |      => suggestions : ['']
271 Mot inconnu : agg =>     alias agg='sudo apt-get upgrade' | agg
271 Mot inconnu : sudo =>     alias agg='sudo apt-get upgrade' | sudo
271 Mot inconnu : apt-get =>     alias agg='sudo apt-get upgrade' | apt-get
271 Guillemets typographiques fermants. =>     alias agg='sudo apt-get upgrade' | ' => suggestions : ['”', '’', '›']

272 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agd='sudo apt-get dist-upgrade' |      => suggestions : ['']
272 Mot inconnu : agd =>     alias agd='sudo apt-get dist-upgrade' | agd
272 Mot inconnu : sudo =>     alias agd='sudo apt-get dist-upgrade' | sudo
272 Mot inconnu : apt-get =>     alias agd='sudo apt-get dist-upgrade' | apt-get
272 Mot inconnu : dist-upgrade =>     alias agd='sudo apt-get dist-upgrade' | dist-upgrade
272 Guillemets typographiques fermants. =>     alias agd='sudo apt-get dist-upgrade' | ' => suggestions : ['”', '’', '›']

273 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agi='sudo apt-get install' |      => suggestions : ['']
273 Mot inconnu : sudo =>     alias agi='sudo apt-get install' | sudo
273 Mot inconnu : apt-get =>     alias agi='sudo apt-get install' | apt-get
273 Mot inconnu : install =>     alias agi='sudo apt-get install' | install
273 Guillemets typographiques fermants. =>     alias agi='sudo apt-get install' | ' => suggestions : ['”', '’', '›']

274 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agr='sudo apt-get remove' |      => suggestions : ['']
274 Mot inconnu : agr =>     alias agr='sudo apt-get remove' | agr
274 Mot inconnu : sudo =>     alias agr='sudo apt-get remove' | sudo
274 Mot inconnu : apt-get =>     alias agr='sudo apt-get remove' | apt-get
274 Mot inconnu : remove =>     alias agr='sudo apt-get remove' | remove
274 Guillemets typographiques fermants. =>     alias agr='sudo apt-get remove' | ' => suggestions : ['”', '’', '›']

278 Mot inconnu : search => alias search='apt-cache search' | search
278 Mot inconnu : apt-cache => alias search='apt-cache search' | apt-cache
278 Mot inconnu : search => alias search='apt-cache search' | search
278 Guillemets typographiques fermants. => alias search='apt-cache search' | ' => suggestions : ['”', '’', '›']

279 Mot inconnu : apt-cache => alias show='apt-cache show' | apt-cache
279 Guillemets typographiques fermants. => alias show='apt-cache show' | ' => suggestions : ['”', '’', '›']

280 Mot inconnu : install => alias install='sudo apt-get install' | install
280 Mot inconnu : sudo => alias install='sudo apt-get install' | sudo
280 Mot inconnu : apt-get => alias install='sudo apt-get install' | apt-get
280 Mot inconnu : install => alias install='sudo apt-get install' | install
280 Guillemets typographiques fermants. => alias install='sudo apt-get install' | ' => suggestions : ['”', '’', '›']

281 Mot inconnu : remove => alias remove='sudo apt-get remove' | remove
281 Mot inconnu : sudo => alias remove='sudo apt-get remove' | sudo
281 Mot inconnu : apt-get => alias remove='sudo apt-get remove' | apt-get
281 Mot inconnu : remove => alias remove='sudo apt-get remove' | remove
281 Guillemets typographiques fermants. => alias remove='sudo apt-get remove' | ' => suggestions : ['”', '’', '›']

282 Mot inconnu : update => alias update='sudo apt-get update' | update
282 Mot inconnu : sudo => alias update='sudo apt-get update' | sudo
282 Mot inconnu : apt-get => alias update='sudo apt-get update' | apt-get
282 Mot inconnu : update => alias update='sudo apt-get update' | update
282 Guillemets typographiques fermants. => alias update='sudo apt-get update' | ' => suggestions : ['”', '’', '›']

283 Mot inconnu : sudo => alias upgrade='sudo apt-get upgrade -uy' | sudo
283 Mot inconnu : apt-get => alias upgrade='sudo apt-get upgrade -uy' | apt-get
283 Il manque un espace à côté du tiret. => alias upgrade='sudo apt-get upgrade -uy' |  - => suggestions : [' – ', ' — ']
283 Mot inconnu : uy => alias upgrade='sudo apt-get upgrade -uy' | uy
283 Guillemets typographiques fermants. => alias upgrade='sudo apt-get upgrade -uy' | ' => suggestions : ['”', '’', '›']

291 Typographie : points de suspension. Utilisez le caractère dédié. => Maintenant, lançons-nous dans la fabuleuse histoire de la ligne de commande... | ... => suggestions : ['…']

297 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple : |    => suggestions : ['']
297 Guillemets typographiques ouvrants. =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple : | '' => suggestions : ['«\xa0', '“']
297 Mot inconnu : ls =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple : | ls
297 Guillemets typographiques fermants. =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple : | '' => suggestions : ['\xa0»', '”']
299 Guillemets typographiques ouvrants. => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant. | '' => suggestions : ['«\xa0', '“']
299 Mot inconnu : ls => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant. | ls
299 Guillemets typographiques fermants. => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant. | '' => suggestions : ['\xa0»', '”']

313 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement. |    => suggestions : ['']
313 Guillemets typographiques ouvrants. =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement. | '' => suggestions : ['«\xa0', '“']
313 Mot inconnu : ls =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement. | ls
313 Guillemets typographiques fermants. =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement. | '' => suggestions : ['\xa0»', '”']
315 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). | copier/coller => suggestions : ['copier-coller', 'copié-collé', 'copiée-collée', 'copiés-collés', 'copiées-collées']
315 Mot inconnu : linux => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). | linux
315 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). | a => suggestions : ['À']
315 Guillemets typographiques ouvrants. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). | " => suggestions : ['«\xa0', '“']
315 Guillemets typographiques fermants. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). | " => suggestions : ['\xa0»', '”']
315 Mot inconnu : DADVSI => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). | dadvsi

321 Il manque un espace avant la parenthèse. => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])). | ( => suggestions : [' (']
321 Mot inconnu : Commentcamarche => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])). | commentcamarche

323 Mot inconnu : bash => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. | bash
323 Mot inconnu : zsh => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. | zsh
323 Mot inconnu : csh => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. | csh
323 Une de ces ponctuations est superflue. => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. | , . => suggestions : [',', '.']
323 Typographie : points de suspension. Utilisez le caractère dédié. => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. | ... => suggestions : ['…']
327 Mot inconnu : nano => Si vous désirez pouvoir utiliser la souris dans les consoles, vous pouvez utiliser le programme **[[apt>gpm|gpm]]**. La souris est alors utilisable pour le traditionnel copier-coller par sélection ou dans certains programmes comme [[nano]] ou [[lynx]]. | nano

349 Mot inconnu : BARRALIS => [[http://jp.barralis.com/linux-man/|Les pages de manuel en français sur le site de Jean-Philippe BARRALIS]] | barralis
