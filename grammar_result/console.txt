
13 Guillemets typographiques ouvrants. => La console est une interface textuelle qui permet une "communication" entre l'homme et la machine avec uniquement un écran et un clavier. Le système peut utiliser différents interpréteurs de commande pour communiquer avec l'utilisateur (par défaut le shell). <|> " => suggestions : ['«\xa0', '“']
13 Guillemets typographiques fermants. => La console est une interface textuelle qui permet une "communication" entre l'homme et la machine avec uniquement un écran et un clavier. Le système peut utiliser différents interpréteurs de commande pour communiquer avec l'utilisateur (par défaut le shell). <|> " => suggestions : ['\xa0»', '”']

18 Mot inconnu : ls => //root@machine#// **ls -a** <|> ls
18 Il manque un espace à côté du tiret. => //root@machine#// **ls -a** <|>  - => suggestions : [' – ', ' — ']

20 Typographie : un ou trois points ? => . .. .bashrc text.txt dosser/  <|> .. => suggestions : ['…', '.']
20 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => . .. .bashrc text.txt dosser/  <|>  . => suggestions : ['. ', '.']
20 Mot inconnu : bashrc => . .. .bashrc text.txt dosser/  <|> bashrc
20 Mot inconnu : text => . .. .bashrc text.txt dosser/  <|> text
20 Mot inconnu : txt => . .. .bashrc text.txt dosser/  <|> txt
20 Mot inconnu : dosser => . .. .bashrc text.txt dosser/  <|> dosser

22 Guillemets typographiques ouvrants. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. <|> " => suggestions : ['«\xa0', '“']
22 Mot inconnu : ls => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. <|> ls
22 Guillemets typographiques fermants. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. <|> " => suggestions : ['\xa0»', '”']
22 Il manque un espace à côté du tiret. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés. <|>  - => suggestions : [' – ', ' — ']

32 Mot inconnu : desktop => Pour un desktop Ubuntu, dite linux avec interface graphique, elle est accessible via le menu démarrer, sur Terminal ou via un raccourci clavier (voir note). <|> desktop
32 Mot inconnu : linux => Pour un desktop Ubuntu, dite linux avec interface graphique, elle est accessible via le menu démarrer, sur Terminal ou via un raccourci clavier (voir note). <|> linux

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

34 Mot inconnu : tty1 => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. <|> tty1
34 Mot inconnu : tty2 => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. <|> tty2
34 Typographie : points de suspension. Utilisez le caractère dédié. => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. <|> ... => suggestions : ['…']
34 Mot inconnu : Fx => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher. <|> fx

38 Guillemets typographiques ouvrants. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> " => suggestions : ['«\xa0', '“']
38 Mot inconnu : F7 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> f7
38 Guillemets typographiques fermants. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> " => suggestions : ['\xa0»', '”']
38 Mot inconnu : Xorg => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> xorg
38 Il manque les traits d’union. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> c'est à dire => suggestions : ['c’est-à-dire']
38 Mot inconnu : Xorg => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> xorg
38 Mot inconnu : F9 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> f9
38 Mot inconnu : F8 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur). <|> f8

44 Mot inconnu : GDM => === Versions avec GDM postérieures à 17.04 === <|> gdm

48 Mot inconnu : F6 => Plusieurs sessions graphiques peuvent être lancées en parallèle, notamment si vous connectez 2 utilisateurs simultanément, donc n'hésitez pas à tester toutes les combinaisons jusqu'à Ctrl+Alt+F6 si besoin. <|> f6

55 Mot inconnu : MacOS => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  <|> macos
55 Guillemets typographiques ouvrants. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  <|> " => suggestions : ['«\xa0', '“']
55 Mot inconnu : mon_fichier => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  <|> mon_fichier
55 Guillemets typographiques fermants. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre.  <|> " => suggestions : ['\xa0»', '”']

63 Mot inconnu : ctrl => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci. <|> ctrl
63 Mot inconnu : maj => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci. <|> maj
63 Mot inconnu : alt => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci. <|> alt

65 Confusion probable. => Et bien en console, vous pouvez (simplement!) taper ceci : <|> et bien => suggestions : ['Eh bien', 'Hé bien']

72 Mot inconnu : __ligne => Il a ainsi exécuté une __ligne de commande__ qui sera interprétée en vue d'effectuer une ou plusieurs opérations. <|> __ligne
72 Mot inconnu : commande__ => Il a ainsi exécuté une __ligne de commande__ qui sera interprétée en vue d'effectuer une ou plusieurs opérations. <|> commande__
77 Mot inconnu : cmd => À noter que les consoles/terminaux ne sont pas limités à GNU/Linux : en effet, Windows possède un terminal qui émule MS-DOS. Pour y accéder, appuyez sur <toucheWindows>+R, puis tapez **cmd** puis entrée. <|> cmd

82 Mot inconnu : ergonomiquement => Cependant, aussi bien au niveau fonctionnalités que souplesse, la console sous Windows est bien pauvre (impossibilité de redimensionner la fenêtre, peu d'outils en ligne de commande, ergonomiquement inutilisable…). C'est pour cela qu'elle n'est que très peu utilisée. <|> ergonomiquement
83 Mot inconnu : Vista => Microsoft a alors décidé de développer une **vraie** console ([[https://fr.wikipedia.org/wiki/Windows_PowerShell|PowerShell]]) pour l'intégrer dans Windows Vista, mais à la suite de différents problèmes, elle n'a finalement pas été intégrée avant Windows 7. <|> vista

87 Pas d’espace avant une virgule. => Malheureusement si un bug survient dans un programme, le mode graphique, par souci de simplicité, n'affiche aucune information pour trouver le problème. Dans ce cas, lancer un programme en mode console permet de récupérer ces informations. Sans oublier que si vous constatez des problèmes dans votre système , les commandes s'avèrent indispensables.  <|>  , => suggestions : [',']

105 Mot inconnu : Nautilus => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> nautilus
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['«\xa0', '“']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['\xa0»', '”']
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['«\xa0', '“']
105 Typographie : points de suspension. Utilisez le caractère dédié. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> ... => suggestions : ['…']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['\xa0»', '”']
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['«\xa0', '“']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['\xa0»', '”']
105 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['«\xa0', '“']
105 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> " => suggestions : ['\xa0»', '”']
105 Typographie : points de suspension. Utilisez le caractère dédié. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »//  <|> ... => suggestions : ['…']

112 Forme interrogative ? Mettez un trait d’union. => Intéressons nous d'abord à la nomenclature de la commande : <|> intéressons nous => suggestions : ['Intéressons-nous']
140 Pas d’espace après ce signe. =>   * La commande man ( ça marche à tous les coups ) <|> (  => suggestions : ['(']
140 Pas d’espace avant ce signe. =>   * La commande man ( ça marche à tous les coups ) <|>  ) => suggestions : [')']

166 Mot inconnu : ls => ==== ls ==== <|> ls

204 Mot inconnu : enable => # enable programmable completion features (you don't need to enable <|> enable
204 Mot inconnu : completion => # enable programmable completion features (you don't need to enable <|> completion
204 Mot inconnu : features => # enable programmable completion features (you don't need to enable <|> features
204 Mot inconnu : you => # enable programmable completion features (you don't need to enable <|> you
204 Mot inconnu : don't => # enable programmable completion features (you don't need to enable <|> don't
204 Mot inconnu : need => # enable programmable completion features (you don't need to enable <|> need
204 Mot inconnu : to => # enable programmable completion features (you don't need to enable <|> to
204 Mot inconnu : enable => # enable programmable completion features (you don't need to enable <|> enable

205 Mot inconnu : this => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile <|> this
205 Mot inconnu : it's => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile <|> it's
205 Mot inconnu : already => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile <|> already
205 Mot inconnu : enabled => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile <|> enabled
205 Mot inconnu : and => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile <|> and

207 Pas d’espace après ce signe. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> [  => suggestions : ['[']
207 Pas d’espace avant ce signe. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|>  ] => suggestions : [']']
207 Mot inconnu : shopt => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> shopt
207 Il manque un espace à côté du tiret. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|>  - => suggestions : [' – ', ' — ']
207 Mot inconnu : oq => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> oq
207 Mot inconnu : posix => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> posix
207 Mot inconnu : then => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> then
217 Mot inconnu : backward =>   * Alt + b : se déplacer mot par mot dans la ligne de commande en arrière (b pour backward) <|> backward
218 Mot inconnu : forward =>   * Alt + f : se déplacer mot par mot dans la ligne de commande en avant (f pour forward) <|> forward
219 Mot inconnu : xx =>   * Ctrl + xx : positionner le curseur au début du mot ou à la fin <|> xx
230 Mot inconnu : sl =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls) <|> sl
230 Mot inconnu : ls =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls) <|> ls
231 Mot inconnu : shift =>   * Alt + shift + t : inverser la position des deux mots avant le curseur <|> shift
232 Mot inconnu : shift =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize) <|> shift
232 Mot inconnu : capitalize =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize) <|> capitalize
233 Mot inconnu : shift =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase) <|> shift
233 Mot inconnu : lowercase =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase) <|> lowercase
234 Mot inconnu : shift =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase) <|> shift
234 Mot inconnu : uppercase =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase) <|> uppercase
235 Mot inconnu : shift =>   * Alt + shift + . : réécrire le paramètre de la dernière commande <|> shift
235 Pas d’espace avant un point. =>   * Alt + shift + . : réécrire le paramètre de la dernière commande <|>  . => suggestions : ['.']
241 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan) <|> interrompt => suggestions : ['interromps']
241 Mot inconnu : bg =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan) <|> bg

249 Pas d’espace après ce signe. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> [  => suggestions : ['[']
249 Pas d’espace avant ce signe. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|>  ] => suggestions : [']']
249 Mot inconnu : shopt => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> shopt
249 Il manque un espace à côté du tiret. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|>  - => suggestions : [' – ', ' — ']
249 Mot inconnu : oq => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> oq
249 Mot inconnu : posix => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> posix
249 Mot inconnu : then => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then <|> then

250 Pas d’espace avant un point. => #    . /etc/bash_completion <|>  . => suggestions : ['.']

278 Mot inconnu : search => alias search='apt-cache search' <|> search
278 Mot inconnu : apt-cache => alias search='apt-cache search' <|> apt-cache
278 Mot inconnu : search => alias search='apt-cache search' <|> search
278 Guillemets typographiques fermants. => alias search='apt-cache search' <|> ' => suggestions : ['”', '’', '›']

279 Mot inconnu : apt-cache => alias show='apt-cache show' <|> apt-cache
279 Guillemets typographiques fermants. => alias show='apt-cache show' <|> ' => suggestions : ['”', '’', '›']

280 Mot inconnu : install => alias install='sudo apt-get install' <|> install
280 Mot inconnu : sudo => alias install='sudo apt-get install' <|> sudo
280 Mot inconnu : apt-get => alias install='sudo apt-get install' <|> apt-get
280 Mot inconnu : install => alias install='sudo apt-get install' <|> install
280 Guillemets typographiques fermants. => alias install='sudo apt-get install' <|> ' => suggestions : ['”', '’', '›']

281 Mot inconnu : remove => alias remove='sudo apt-get remove' <|> remove
281 Mot inconnu : sudo => alias remove='sudo apt-get remove' <|> sudo
281 Mot inconnu : apt-get => alias remove='sudo apt-get remove' <|> apt-get
281 Mot inconnu : remove => alias remove='sudo apt-get remove' <|> remove
281 Guillemets typographiques fermants. => alias remove='sudo apt-get remove' <|> ' => suggestions : ['”', '’', '›']

282 Mot inconnu : update => alias update='sudo apt-get update' <|> update
282 Mot inconnu : sudo => alias update='sudo apt-get update' <|> sudo
282 Mot inconnu : apt-get => alias update='sudo apt-get update' <|> apt-get
282 Mot inconnu : update => alias update='sudo apt-get update' <|> update
282 Guillemets typographiques fermants. => alias update='sudo apt-get update' <|> ' => suggestions : ['”', '’', '›']

283 Mot inconnu : sudo => alias upgrade='sudo apt-get upgrade -uy' <|> sudo
283 Mot inconnu : apt-get => alias upgrade='sudo apt-get upgrade -uy' <|> apt-get
283 Il manque un espace à côté du tiret. => alias upgrade='sudo apt-get upgrade -uy' <|>  - => suggestions : [' – ', ' — ']
283 Mot inconnu : uy => alias upgrade='sudo apt-get upgrade -uy' <|> uy
283 Guillemets typographiques fermants. => alias upgrade='sudo apt-get upgrade -uy' <|> ' => suggestions : ['”', '’', '›']

291 Typographie : points de suspension. Utilisez le caractère dédié. => Maintenant, lançons-nous dans la fabuleuse histoire de la ligne de commande... <|> ... => suggestions : ['…']
315 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). <|> copier/coller => suggestions : ['copier-coller', 'copié-collé', 'copiée-collée', 'copiés-collés', 'copiées-collées']
315 Mot inconnu : linux => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). <|> linux
315 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). <|> a => suggestions : ['À']
315 Guillemets typographiques ouvrants. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). <|> " => suggestions : ['«\xa0', '“']
315 Guillemets typographiques fermants. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). <|> " => suggestions : ['\xa0»', '”']
315 Mot inconnu : DADVSI => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !). <|> dadvsi

321 Il manque un espace avant la parenthèse. => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])). <|> ( => suggestions : [' (']
321 Mot inconnu : Commentcamarche => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])). <|> commentcamarche
323 Mot inconnu : csh => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. <|> csh
323 Une de ces ponctuations est superflue. => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. <|> , . => suggestions : [',', '.']
323 Typographie : points de suspension. Utilisez le caractère dédié. => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent. <|> ... => suggestions : ['…']
327 Mot inconnu : nano => Si vous désirez pouvoir utiliser la souris dans les consoles, vous pouvez utiliser le programme **[[apt>gpm|gpm]]**. La souris est alors utilisable pour le traditionnel copier-coller par sélection ou dans certains programmes comme [[nano]] ou [[lynx]]. <|> nano

349 Mot inconnu : BARRALIS => [[http://jp.barralis.com/linux-man/|Les pages de manuel en français sur le site de Jean-Philippe BARRALIS]] <|> barralis
