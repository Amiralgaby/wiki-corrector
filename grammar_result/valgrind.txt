
7 Mot inconnu : débuggage => **Valgrind** est une suite d'outils de profilage et de débuggage mémoire sous licence GPL, qui permet de détecter des problèmes de gestion mémoire dans des programmes écrits en C / C++. Plus généralement, **Valgrind** repose sur une architecture générique permettant la supervisation de programmes à l'aide de 3 principaux outils : | débuggage
7 Mot inconnu : supervisation => **Valgrind** est une suite d'outils de profilage et de débuggage mémoire sous licence GPL, qui permet de détecter des problèmes de gestion mémoire dans des programmes écrits en C / C++. Plus généralement, **Valgrind** repose sur une architecture générique permettant la supervisation de programmes à l'aide de 3 principaux outils : | supervisation

9 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Memcheck** : un détecteur de fuites mémoires (option par défaut) |    => suggestions : ['']
9 Mot inconnu : Memcheck =>   * **Memcheck** : un détecteur de fuites mémoires (option par défaut) | memcheck

10 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Cachegrind** : un simulateur de caches |    => suggestions : ['']
10 Mot inconnu : Cachegrind =>   * **Cachegrind** : un simulateur de caches | cachegrind

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Callgrind** : un profileur |    => suggestions : ['']
11 Mot inconnu : Callgrind =>   * **Callgrind** : un profileur | callgrind
13 Mot inconnu : malloc => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). | malloc
13 Mot inconnu : free => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). | free
13 Mot inconnu : delete => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). | delete

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

22 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée. |    => suggestions : ['']

30 Il manque un espace à côté du tiret. => Dans ce qui suit, on considère un programme C compilé avec l'option -g, que l'on appelle **test**. Ouvrez un terminal et suivez les instructions ci-dessous selon l'outil désiré. |  - => suggestions : [' – ', ' — ']

33 Mot inconnu : memcheck => **memcheck** est un outil de détection de fuites mémoires appelé par défaut. Il recherche les zones mémoires qui ne sont plus pointées et qui n'ont pas été désallouées (comportement par défaut). | memcheck

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test |    => suggestions : ['']
37 Mot inconnu : valgrind =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | valgrind
37 Mot inconnu : tool =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | tool
37 Mot inconnu : memcheck =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | memcheck
37 Mot inconnu : leak-check =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | leak-check
37 Mot inconnu : yes =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | yes
37 Mot inconnu : summary =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | summary
37 Mot inconnu : leak-resolution =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | leak-resolution
37 Mot inconnu : med =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | med
37 Mot inconnu : show-reachable =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | show-reachable
37 Mot inconnu : yes =>   valgrind --tool=memcheck --leak-check=yes|no|full|summary --leak-resolution=low|med|high --show-reachable=yes ./test | yes

39 Mot inconnu : leak-check => où le paramètre `leak-check' peut prendre les valeurs suivantes : | leak-check
39 Guillemets typographiques fermants. => où le paramètre `leak-check' peut prendre les valeurs suivantes : | ' => suggestions : ['”', '’', '›']

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **no         :** ne fait rien. |    => suggestions : ['']
40 Espace(s) surnuméraire(s) à supprimer. =>   * **no         :** ne fait rien. |           => suggestions : [' ']

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **full / yes :** donne des détails sur chaque fuite mémoire. |    => suggestions : ['']
41 Mot inconnu : yes =>   * **full / yes :** donne des détails sur chaque fuite mémoire. | yes

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **summary    :** indique le nombre de fuites mémoires. |    => suggestions : ['']
42 Mot inconnu : summary =>   * **summary    :** indique le nombre de fuites mémoires. | summary
42 Espace(s) surnuméraire(s) à supprimer. =>   * **summary    :** indique le nombre de fuites mémoires. |      => suggestions : [' ']

44 Mot inconnu : show-reachable => où le paramètre **show-reachable** étend la recherche aux zones encore pointées mais non désallouées. | show-reachable

46 Mot inconnu : leak-resolution => où le paramètre **leak-resolution** indique le niveau de recherche des fuites mémoires. | leak-resolution

51 Mot inconnu : cachegrind => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. | cachegrind
51 Mot inconnu : I1 => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. | i1
51 Mot inconnu : D1 => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. | d1
51 Mot inconnu : L2 => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. | l2

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test |    => suggestions : ['']
55 Mot inconnu : valgrind =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | valgrind
55 Mot inconnu : tool =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | tool
55 Mot inconnu : cachegrind =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | cachegrind
55 Mot inconnu : I1 =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | i1
55 Formatage des grands nombres. =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | 65535 => suggestions : ['65\xa0535']
55 Mot inconnu : D1 =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | d1
55 Formatage des grands nombres. =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | 65535 => suggestions : ['65\xa0535']
55 Mot inconnu : L2 =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | l2
55 Formatage des grands nombres. =>   valgrind --tool=cachegrind --I1=65535,2,64 --D1=65535,2,64 --L2=65535,2,64 ./test | 65535 => suggestions : ['65\xa0535']

58 Mot inconnu : callgrind => L'outil **callgrind** permet d'effectuer un profilage poussé du programme en comptabilisant le nombre d'appels et les coûts associés. | callgrind

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   valgrind --tool=callgrind ./test |    => suggestions : ['']
62 Mot inconnu : valgrind =>   valgrind --tool=callgrind ./test | valgrind
62 Mot inconnu : tool =>   valgrind --tool=callgrind ./test | tool
62 Mot inconnu : callgrind =>   valgrind --tool=callgrind ./test | callgrind

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind |    => suggestions : ['']
67 Mot inconnu : Kcachegrind =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind | kcachegrind
67 Mot inconnu : valgrind =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind | valgrind

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. |    => suggestions : ['']
69 Mot inconnu : valgrind =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. | valgrind
69 Mot inconnu : memcheck =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. | memcheck
69 Mot inconnu : cachegrind =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. | cachegrind
69 Mot inconnu : callgrind =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. | callgrind
69 Mot inconnu : eclipse =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. | eclipse

73 Mot inconnu : help => Rentrer l'adresse [[http://download.eclipse.org/technology/linuxtools/update]] dans help/software updates . | help
73 Mot inconnu : updates => Rentrer l'adresse [[http://download.eclipse.org/technology/linuxtools/update]] dans help/software updates . | updates

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. |    => suggestions : ['']
75 Mot inconnu : Alleyoop =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. | alleyoop
75 Mot inconnu : valgrind =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. | valgrind

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

82 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. => A titre informatif, voici quelques liens : | a => suggestions : ['À']

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Manuel **Valgrind** complet : [[https://valgrind.org/docs/manual/index.html]] |    => suggestions : ['']

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Guide **Valgrind** de démarrage rapide : [[https://valgrind.org/docs/manual/QuickStart.html]] |    => suggestions : ['']

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * http://www.siteduzero.com/tutoriel-3-473022-debuguer-facilement-avec-valgrind.html |    => suggestions : ['']
