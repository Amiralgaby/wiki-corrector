

7 Mot inconnu : débuggage [[55:64]] => **Valgrind** est une suite d'outils de profilage et de débuggage mémoire sous licence GPL, qui permet de détecter des problèmes de gestion mémoire dans des programmes écrits en C / C++. Plus généralement, **Valgrind** repose sur une architecture générique permettant la supervisation de programmes à l'aide de 3 principaux outils : <|> débuggage
7 Mot inconnu : débuggage [[55:64]] => **Valgrind** est une suite d'outils de profilage et de débuggage mémoire sous licence GPL, qui permet de détecter des problèmes de gestion mémoire dans des programmes écrits en C / C++. Plus généralement, **Valgrind** repose sur une architecture générique permettant la supervisation de programmes à l'aide de 3 principaux outils : <|> débuggage
7 Mot inconnu : supervisation [[270:283]] => **Valgrind** est une suite d'outils de profilage et de débuggage mémoire sous licence GPL, qui permet de détecter des problèmes de gestion mémoire dans des programmes écrits en C / C++. Plus généralement, **Valgrind** repose sur une architecture générique permettant la supervisation de programmes à l'aide de 3 principaux outils : <|> supervisation
7 Mot inconnu : supervisation [[270:283]] => **Valgrind** est une suite d'outils de profilage et de débuggage mémoire sous licence GPL, qui permet de détecter des problèmes de gestion mémoire dans des programmes écrits en C / C++. Plus généralement, **Valgrind** repose sur une architecture générique permettant la supervisation de programmes à l'aide de 3 principaux outils : <|> supervisation
9 Mot inconnu : Memcheck [[6:14]] =>   * **Memcheck** : un détecteur de fuites mémoires (option par défaut) <|> memcheck
9 Mot inconnu : Memcheck [[6:14]] =>   * **Memcheck** : un détecteur de fuites mémoires (option par défaut) <|> memcheck
10 Mot inconnu : Cachegrind [[6:16]] =>   * **Cachegrind** : un simulateur de caches <|> cachegrind
10 Mot inconnu : Cachegrind [[6:16]] =>   * **Cachegrind** : un simulateur de caches <|> cachegrind
11 Mot inconnu : Callgrind [[6:15]] =>   * **Callgrind** : un profileur <|> callgrind
11 Mot inconnu : Callgrind [[6:15]] =>   * **Callgrind** : un profileur <|> callgrind
13 Mot inconnu : malloc [[238:244]] => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). <|> malloc
13 Mot inconnu : malloc [[238:244]] => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). <|> malloc
13 Mot inconnu : free [[254:258]] => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). <|> free
13 Mot inconnu : free [[254:258]] => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). <|> free
13 Mot inconnu : delete [[259:265]] => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). <|> delete
13 Mot inconnu : delete [[259:265]] => La détection d'erreurs fonctionne de cette manière : le programme doit être lancé dans l'environnement de Valgrind. Toutes les entrées / sorties mémoires sont alors analysées et vérifiées minutieusement en interceptant tous les appels à (malloc|new) et (free|delete). <|> delete


18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


30 Il manque un espace à côté du tiret. [[67:69]] => Dans ce qui suit, on considère un programme C compilé avec l'option -g, que l'on appelle **test**. Ouvrez un terminal et suivez les instructions ci-dessous selon l'outil désiré. <|>  - => suggestions : [' – ', ' — ']
30 Il manque un espace à côté du tiret. [[67:69]] => Dans ce qui suit, on considère un programme C compilé avec l'option -g, que l'on appelle **test**. Ouvrez un terminal et suivez les instructions ci-dessous selon l'outil désiré. <|>  - => suggestions : [' – ', ' — ']


33 Mot inconnu : memcheck [[2:10]] => **memcheck** est un outil de détection de fuites mémoires appelé par défaut. Il recherche les zones mémoires qui ne sont plus pointées et qui n'ont pas été désallouées (comportement par défaut). <|> memcheck
33 Mot inconnu : memcheck [[2:10]] => **memcheck** est un outil de détection de fuites mémoires appelé par défaut. Il recherche les zones mémoires qui ne sont plus pointées et qui n'ont pas été désallouées (comportement par défaut). <|> memcheck


39 Mot inconnu : leak-check [[17:27]] => où le paramètre `leak-check' peut prendre les valeurs suivantes : <|> leak-check
39 Mot inconnu : leak-check [[17:27]] => où le paramètre `leak-check' peut prendre les valeurs suivantes : <|> leak-check
39 Guillemets typographiques fermants. [[27:28]] => où le paramètre `leak-check' peut prendre les valeurs suivantes : <|> ' => suggestions : ['”', '’', '›']
40 Espace(s) surnuméraire(s) à supprimer. [[8:17]] =>   * **no         :** ne fait rien. <|>           => suggestions : [' ']
40 Espace(s) surnuméraire(s) à supprimer. [[8:17]] =>   * **no         :** ne fait rien. <|>           => suggestions : [' ']
41 Mot inconnu : yes [[13:16]] =>   * **full / yes :** donne des détails sur chaque fuite mémoire. <|> yes
41 Mot inconnu : yes [[13:16]] =>   * **full / yes :** donne des détails sur chaque fuite mémoire. <|> yes
42 Mot inconnu : summary [[6:13]] =>   * **summary    :** indique le nombre de fuites mémoires. <|> summary
42 Mot inconnu : summary [[6:13]] =>   * **summary    :** indique le nombre de fuites mémoires. <|> summary
42 Espace(s) surnuméraire(s) à supprimer. [[13:17]] =>   * **summary    :** indique le nombre de fuites mémoires. <|>      => suggestions : [' ']
42 Espace(s) surnuméraire(s) à supprimer. [[13:17]] =>   * **summary    :** indique le nombre de fuites mémoires. <|>      => suggestions : [' ']


44 Mot inconnu : show-reachable [[18:32]] => où le paramètre **show-reachable** étend la recherche aux zones encore pointées mais non désallouées. <|> show-reachable
44 Mot inconnu : show-reachable [[18:32]] => où le paramètre **show-reachable** étend la recherche aux zones encore pointées mais non désallouées. <|> show-reachable


46 Mot inconnu : leak-resolution [[18:33]] => où le paramètre **leak-resolution** indique le niveau de recherche des fuites mémoires. <|> leak-resolution
46 Mot inconnu : leak-resolution [[18:33]] => où le paramètre **leak-resolution** indique le niveau de recherche des fuites mémoires. <|> leak-resolution


51 Mot inconnu : cachegrind [[10:20]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> cachegrind
51 Mot inconnu : cachegrind [[10:20]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> cachegrind
51 Mot inconnu : I1 [[50:52]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> i1
51 Mot inconnu : I1 [[50:52]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> i1
51 Mot inconnu : D1 [[53:55]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> d1
51 Mot inconnu : D1 [[53:55]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> d1
51 Mot inconnu : L2 [[56:58]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> l2
51 Mot inconnu : L2 [[56:58]] => L'outil **cachegrind** est un simulateur de cache I1/D1/L2. Il est possible de spécifier manuellement la configuration du cache à simuler. Pour chaque cache, on indique sa taille, l'associativité et la taille de la ligne. Les tailles doivent être données en octets. <|> l2


58 Mot inconnu : callgrind [[10:19]] => L'outil **callgrind** permet d'effectuer un profilage poussé du programme en comptabilisant le nombre d'appels et les coûts associés. <|> callgrind
58 Mot inconnu : callgrind [[10:19]] => L'outil **callgrind** permet d'effectuer un profilage poussé du programme en comptabilisant le nombre d'appels et les coûts associés. <|> callgrind
67 Mot inconnu : Kcachegrind [[10:21]] =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind <|> kcachegrind
67 Mot inconnu : Kcachegrind [[10:21]] =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind <|> kcachegrind
67 Mot inconnu : valgrind [[93:101]] =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind <|> valgrind
67 Mot inconnu : valgrind [[93:101]] =>   * [[apt>Kcachegrind]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind <|> valgrind
69 Mot inconnu : valgrind [[72:80]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> valgrind
69 Mot inconnu : valgrind [[72:80]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> valgrind
69 Mot inconnu : memcheck [[82:90]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> memcheck
69 Mot inconnu : memcheck [[82:90]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> memcheck
69 Mot inconnu : cachegrind [[100:110]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> cachegrind
69 Mot inconnu : cachegrind [[100:110]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> cachegrind
69 Mot inconnu : callgrind [[121:130]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> callgrind
69 Mot inconnu : callgrind [[121:130]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> callgrind
69 Mot inconnu : eclipse [[137:144]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> eclipse
69 Mot inconnu : eclipse [[137:144]] =>   * Il existe une extension qui permet d'intégrer la plupart des outils valgrind (memcheck, massif, cachegrind, mais pas callgrind) dans eclipse. <|> eclipse


73 Mot inconnu : help [[84:88]] => Rentrer l'adresse [[http://download.eclipse.org/technology/linuxtools/update]] dans help/software updates . <|> help
73 Mot inconnu : help [[84:88]] => Rentrer l'adresse [[http://download.eclipse.org/technology/linuxtools/update]] dans help/software updates . <|> help
73 Mot inconnu : updates [[98:105]] => Rentrer l'adresse [[http://download.eclipse.org/technology/linuxtools/update]] dans help/software updates . <|> updates
73 Mot inconnu : updates [[98:105]] => Rentrer l'adresse [[http://download.eclipse.org/technology/linuxtools/update]] dans help/software updates . <|> updates
75 Mot inconnu : Alleyoop [[10:18]] =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. <|> alleyoop
75 Mot inconnu : Alleyoop [[10:18]] =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. <|> alleyoop
75 Mot inconnu : valgrind [[90:98]] =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. <|> valgrind
75 Mot inconnu : valgrind [[90:98]] =>   * [[apt>Alleyoop]] (dans les dépôts) permet de visualiser graphiquement les rapports de valgrind, et aide à la correction. <|> valgrind


78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


82 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. [[0:1]] => A titre informatif, voici quelques liens : <|> a => suggestions : ['À']
82 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. [[0:1]] => A titre informatif, voici quelques liens : <|> a => suggestions : ['À']

