7 Espace(s) surnuméraire(s) à supprimer. [[24:26]] => ===== Qu'est-ce que Cron  ===== <|>    => suggestions :  

9 Mot inconnu : crontab [[34:41]] => Chaque utilisateur a un fichier **crontab**, lui permettant d'indiquer les actions à exécuter.\\ <|> crontab

12 Mot inconnu : Anacron [[23:30]] => ====Distinction d'avec Anacron==== <|> anacron
20 Espace(s) surnuméraire(s) à supprimer. [[29:31]] => ===== Comment fonctionne Cron  ===== <|>    => suggestions :  
23 Mot inconnu : crontab [[46:53]] => Pour modifier vos tâches planifiées tapez : **crontab -e** (lance un éditeur du fichier crontab)\\ <|> crontab
23 Il manque un espace à côté du tiret. [[53:55]] => Pour modifier vos tâches planifiées tapez : **crontab -e** (lance un éditeur du fichier crontab)\\ <|>  - => suggestions :  –  — 
23 Mot inconnu : crontab [[88:95]] => Pour modifier vos tâches planifiées tapez : **crontab -e** (lance un éditeur du fichier crontab)\\ <|> crontab

26 Mot inconnu : crontab [[74:81]] => Voici une courte description de la structure d'une entrée dans un fichier crontab. Les champs à renseigner sont __dans l'ordre__ (un champ qu'on ne souhaite pas renseigner doit être rempli avec une *) : <|> crontab

36 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. [[4:7]] => | | 1er | 2nd | 3è | 4è | 5è | <|> 1er => suggestions : 1ᵉʳ
36 Nombre ordinal. Second : 2ᵈ. Seconde : 2ᵈᵉ. Seconds : 2ᵈˢ. Secondes : 2ᵈᵉˢ. [[10:13]] => | | 1er | 2nd | 3è | 4è | 5è | <|> 2nd => suggestions : 2ᵈ
36 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[16:18]] => | | 1er | 2nd | 3è | 4è | 5è | <|> 3è => suggestions : 3ᵉ
36 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[21:23]] => | | 1er | 2nd | 3è | 4è | 5è | <|> 4è => suggestions : 4ᵉ
36 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[26:28]] => | | 1er | 2nd | 3è | 4è | 5è | <|> 5è => suggestions : 5ᵉ

39 Mot inconnu : feb [[45:48]] => | valeur | 0-59 | 0-23 | 1-31 | 1-12 ou jan, feb, mar… | 1-7 ou mon, tue, wed… | <|> feb
39 Mot inconnu : mar [[50:53]] => | valeur | 0-59 | 0-23 | 1-31 | 1-12 ou jan, feb, mar… | 1-7 ou mon, tue, wed… | <|> mar
39 Mot inconnu : wed [[74:77]] => | valeur | 0-59 | 0-23 | 1-31 | 1-12 ou jan, feb, mar… | 1-7 ou mon, tue, wed… | <|> wed

42 Espace(s) surnuméraire(s) à supprimer. [[219:221]] => Si __//jour du mois//__ et __//mois//__ sont définis, __//jour de la semaine//__ n'est pas nécessaire. Cependant, si le champ est indiqué en plus, la commande sera exécutée à la date //jour du mois// et //mois// mais AUSSI tous les  //jour de la semaine// définis. <|> ss => suggestions :  

44 Guillemets typographiques ouvrants. [[3:4]] => La "tâche" (non définie ici) sera exécutée 0mn et 0H après le démarrage, le 13e jour du 1er mois (janvier) __ET__ tous les vendredis (5e J. de la semaine). <|> " => suggestions : « “
44 Guillemets typographiques fermants. [[9:10]] => La "tâche" (non définie ici) sera exécutée 0mn et 0H après le démarrage, le 13e jour du 1er mois (janvier) __ET__ tous les vendredis (5e J. de la semaine). <|> " => suggestions :  »”
44 Mot inconnu : mn [[44:46]] => La "tâche" (non définie ici) sera exécutée 0mn et 0H après le démarrage, le 13e jour du 1er mois (janvier) __ET__ tous les vendredis (5e J. de la semaine). <|> mn
44 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[76:79]] => La "tâche" (non définie ici) sera exécutée 0mn et 0H après le démarrage, le 13e jour du 1er mois (janvier) __ET__ tous les vendredis (5e J. de la semaine). <|> 13e => suggestions : 13ᵉ
44 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. [[88:91]] => La "tâche" (non définie ici) sera exécutée 0mn et 0H après le démarrage, le 13e jour du 1er mois (janvier) __ET__ tous les vendredis (5e J. de la semaine). <|> 1er => suggestions : 1ᵉʳ
44 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[130:132]] => La "tâche" (non définie ici) sera exécutée 0mn et 0H après le démarrage, le 13e jour du 1er mois (janvier) __ET__ tous les vendredis (5e J. de la semaine). <|> is => suggestions : 5ᵉ

46 Mot inconnu : update [[55:61]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> update
46 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[72:74]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> 5e => suggestions : 5ᵉ
46 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[88:90]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> 3e => suggestions : 3ᵉ
46 Guillemets typographiques ouvrants. [[138:139]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> " => suggestions : « “
46 Guillemets typographiques fermants. [[143:144]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> " => suggestions :  »”
46 Guillemets typographiques ouvrants. [[146:147]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> " => suggestions : « “
46 Guillemets typographiques fermants. [[151:152]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> " => suggestions :  »”
46 Guillemets typographiques ouvrants. [[156:157]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> " => suggestions : « “
46 Guillemets typographiques fermants. [[176:177]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> " => suggestions :  »”
46 Mot inconnu : nomdutilisateur [[215:230]] => ---- L'exemple ci-dessous exécutera ///usr/bin/apt-get update// à 3:05 (5e minute de la 3e heure), chaque jour de chaque mois (les * dans "jour", "mois" et "jours de la semaine"), avec les droits de l'utilisateur **nomdutilisateur**. <|> nomdutilisateur
50 Guillemets typographiques ouvrants. [[130:131]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> " => suggestions : « “
50 Forme interrogative ? Mettez un trait d’union. [[137:142]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> es tu => suggestions : es-tu
50 Guillemets typographiques fermants. [[144:145]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> " => suggestions :  »”
50 Guillemets typographiques ouvrants. [[174:175]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> " => suggestions : « “
50 Guillemets typographiques fermants. [[192:193]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> " => suggestions :  »”
50 Guillemets typographiques ouvrants. [[197:198]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> " => suggestions : « “
50 Guillemets typographiques fermants. [[202:203]] => ---- Vous pouvez faire tourner **cron** toutes les 5 minutes, entre 9H à 17H, et uniquement du lundi au vendredi, avec un message "Où en es tu ?" (on met * pour les colonnes "jour dans le mois" et "mois", puisqu'on utilise pas ces données) : <|> " => suggestions :  »”

84 Mot inconnu : crontab [[84:91]] => Pour examiner les tâches planifiées de l'utilisateur courant (le contenu de votre **crontab**, tapez : <|> crontab

96 Mot inconnu : crontab [[53:60]] => Quand vous sortez de l'éditeur, le nouveau fichier **crontab** sera installé. Le fichier est stocké dans ///var/spool/cron/crontabs/<user>// mais doit seulement être modifié par l'intermédiaire de la commande **crontab**. <|> crontab
96 Mot inconnu : crontab [[211:218]] => Quand vous sortez de l'éditeur, le nouveau fichier **crontab** sera installé. Le fichier est stocké dans ///var/spool/cron/crontabs/<user>// mais doit seulement être modifié par l'intermédiaire de la commande **crontab**. <|> crontab
98 Mot inconnu : crontab [[88:95]] => Note : sur xubuntu, il faut auparavant indiquer que l'utilisateur a le droit d'utiliser crontab. Pour cela il faut créer un fichier ///etc/cron.allow// et y saisir le nom des utilisateurs autorisés à utiliser crontab. <|> crontab
98 Mot inconnu : crontab [[209:216]] => Note : sur xubuntu, il faut auparavant indiquer que l'utilisateur a le droit d'utiliser crontab. Pour cela il faut créer un fichier ///etc/cron.allow// et y saisir le nom des utilisateurs autorisés à utiliser crontab. <|> crontab

100 Mot inconnu : crontab [[35:42]] => L'éditeur utilisé pour modifier la crontab peut être modifié par la commande : <|> crontab
107 Mot inconnu : crontab [[38:45]] => <note tip>  Lors du premier accès à « crontab -e » un menu apparaît et donne le choix de l'éditeur à utiliser.</note> <|> crontab
107 Il manque un espace à côté du tiret. [[45:47]] => <note tip>  Lors du premier accès à « crontab -e » un menu apparaît et donne le choix de l'éditeur à utiliser.</note> <|>  - => suggestions :  –  — 

119 Guillemets typographiques ouvrants. [[51:52]] => <note important>Il est parfois nécessaire de faire "xhost +" dans un terminal pour autoriser l'accès à X</note> <|> " => suggestions : « “
119 Mot inconnu : xhost [[52:57]] => <note important>Il est parfois nécessaire de faire "xhost +" dans un terminal pour autoriser l'accès à X</note> <|> xhost

121 Mot inconnu : UTF8 [[17:21]] => ===== Caractères UTF8 ===== <|> utf8

122 Mot inconnu : LANG [[112:116]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> lang
122 Guillemets typographiques ouvrants. [[117:118]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> " => suggestions : « “
122 Mot inconnu : fr_FR [[118:123]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> fr_fr
122 Guillemets typographiques fermants. [[129:130]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> " => suggestions :  »”
122 Mot inconnu : LANG [[138:142]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> lang
122 Guillemets typographiques ouvrants. [[143:144]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> " => suggestions : « “
122 Mot inconnu : fr_BE [[144:149]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> fr_be
122 Guillemets typographiques fermants. [[155:156]] => Si vous utilisez un script nécessitant des caractères tels que des accents, n'oubliez pas d'ajouter un export **LANG="fr_FR.UTF-8"** ou **LANG="fr_BE.UTF-8"** au début de ce script. <|> " => suggestions :  »”
125 Mot inconnu : PATH [[16:20]] => Cron n'a pas de PATH par défaut. Il est donc __grandement conseillé__ de mettre le chemin absolu vers les exécutables et fichiers. Exemple : <|> path

134 Mot inconnu : daily [[52:57]] => ===== Utilisation des répertoires /etc/cron.hourly, daily, weekly, monthly  ===== <|> daily
134 Mot inconnu : weekly [[59:65]] => ===== Utilisation des répertoires /etc/cron.hourly, daily, weekly, monthly  ===== <|> weekly
134 Mot inconnu : monthly [[67:74]] => ===== Utilisation des répertoires /etc/cron.hourly, daily, weekly, monthly  ===== <|> monthly
134 Espace(s) surnuméraire(s) à supprimer. [[74:76]] => ===== Utilisation des répertoires /etc/cron.hourly, daily, weekly, monthly  ===== <|>    => suggestions :  

136 Mot inconnu : daily [[221:226]] => Si vous avez examiné le fichier /etc/crontab de votre système, vous avez remarqué qu'il contient des tâches pour exécuter toutes les heures, jours, semaines, mois les fichiers contenus dans les dossiers /etc/cron.hourly, daily, weekly, monthly. <|> daily
136 Mot inconnu : weekly [[228:234]] => Si vous avez examiné le fichier /etc/crontab de votre système, vous avez remarqué qu'il contient des tâches pour exécuter toutes les heures, jours, semaines, mois les fichiers contenus dans les dossiers /etc/cron.hourly, daily, weekly, monthly. <|> weekly
136 Mot inconnu : monthly [[236:243]] => Si vous avez examiné le fichier /etc/crontab de votre système, vous avez remarqué qu'il contient des tâches pour exécuter toutes les heures, jours, semaines, mois les fichiers contenus dans les dossiers /etc/cron.hourly, daily, weekly, monthly. <|> monthly
138 Mot inconnu : daily [[231:236]] => Si vous avez besoin qu'un script soit exécuté toutes les heures au niveau du système (par root), il suffit donc de le placer dans le dossier /etc/cron.hourly et de le rendre exécutable. De même s'il s'agit d'une tâche quotidienne (daily), hebdomadaire (weekly) ou mensuelle (monthly). <|> daily
138 Mot inconnu : weekly [[253:259]] => Si vous avez besoin qu'un script soit exécuté toutes les heures au niveau du système (par root), il suffit donc de le placer dans le dossier /etc/cron.hourly et de le rendre exécutable. De même s'il s'agit d'une tâche quotidienne (daily), hebdomadaire (weekly) ou mensuelle (monthly). <|> weekly
138 Mot inconnu : monthly [[275:282]] => Si vous avez besoin qu'un script soit exécuté toutes les heures au niveau du système (par root), il suffit donc de le placer dans le dossier /etc/cron.hourly et de le rendre exécutable. De même s'il s'agit d'une tâche quotidienne (daily), hebdomadaire (weekly) ou mensuelle (monthly). <|> monthly

141 Espace(s) surnuméraire(s) à supprimer. [[43:45]] => ===== Utilisation du répertoire /etc/cron.d  ===== <|>    => suggestions :  

144 Mot inconnu : crontab [[48:55]] => Attention contrairement aux lignes d'un fichier crontab, elles doivent préciser quel utilisateur (nom_utilisateur dans l'exemple ci-dessous)  exécute le script : <|> crontab
144 Mot inconnu : nom_utilisateur [[98:113]] => Attention contrairement aux lignes d'un fichier crontab, elles doivent préciser quel utilisateur (nom_utilisateur dans l'exemple ci-dessous)  exécute le script : <|> nom_utilisateur

149 Mot inconnu : crontab [[56:63]] => Les commandes ci-dessus sont stockées dans un fichier **crontab** appartenant à votre compte d'utilisateur et exécutées avec votre niveau des permissions. Si vous voulez exécuter, régulièrement, une commande exigeant un plus haut niveau de permission (root), vous devez utiliser le fichier **crontab** root (ou racine) : <|> crontab
149 Mot inconnu : crontab [[292:299]] => Les commandes ci-dessus sont stockées dans un fichier **crontab** appartenant à votre compte d'utilisateur et exécutées avec votre niveau des permissions. Si vous voulez exécuter, régulièrement, une commande exigeant un plus haut niveau de permission (root), vous devez utiliser le fichier **crontab** root (ou racine) : <|> crontab
158 Mot inconnu : PATH [[148:152]] => Une tâche cron est exécutée dans un shell non connecté (non-login) et non interactif. Les variables d'environnement habituelles et en particulier **PATH** ne sont pas connues. <|> path
160 Mot inconnu : PATH [[132:136]] => Il faut donc soit mettre les emplacements complets des exécutables dans les commandes et les scripts appelés par cron, soit définir PATH dans le fichier crontab : <|> path
160 Mot inconnu : crontab [[153:160]] => Il faut donc soit mettre les emplacements complets des exécutables dans les commandes et les scripts appelés par cron, soit définir PATH dans le fichier crontab : <|> crontab
178 Mot inconnu : crontab [[153:160]] => Il est important de vérifier que vos travaux dans **cron** fonctionnent comme prévu. Une méthode pour faire un test est de paramétrer la tâche dans le **crontab** pour qu'elle s'exécute quelques minutes plus tard et contrôler le résultat, avant de mettre la synchronisation de cette tâche à la bonne heure. Vous pouvez également trouver utile d'envoyer les retours des commandes dans un fichier texte pour voir les succès ou les échecs, par exemple : <|> crontab

185 Mot inconnu : MAILTO [[46:52]] => Pour cela il suffit de renseigner la variable MAILTO dans votre fichier crontab, exemple : <|> mailto
185 Mot inconnu : crontab [[72:79]] => Pour cela il suffit de renseigner la variable MAILTO dans votre fichier crontab, exemple : <|> crontab

196 Mot inconnu : décommenter [[97:108]] => Éditer le fichier ///etc/rsyslog.d/50-default.conf// qui est appelé par ///etc/rsyslog.conf// et décommenter la ligne <|> décommenter

201 Mot inconnu : rsyslog [[11:18]] => Relancer //rsyslog// et //cron// <|> rsyslog
