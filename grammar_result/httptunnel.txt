
6 Mot inconnu : SSH => HTTP-Tunnel sert à encapsuler des paquets d'un autre protocole (FTP, SSH, etc) dans des paquets HTTP. Ceci permet de passer à travers de certains pare-feux ou proxys qui bloquent les paquets, notamment sur des réseaux sécurisés d'entreprise. | ssh

8 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

10 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée. |    => suggestions : ['']

12 Mot inconnu : SSH => //Voir aussi SSH et Crokscrew [[https://forum.ubuntu-fr.org/viewtopic.php?id=213500]] , une solution plus simple uniquement coté client pour passer le proxy. Pour avoir des tunnels, l'emploi des tunnels SSH est alors plus sure puisque automatiquement crypté. | ssh
12 Mot inconnu : Crokscrew => //Voir aussi SSH et Crokscrew [[https://forum.ubuntu-fr.org/viewtopic.php?id=213500]] , une solution plus simple uniquement coté client pour passer le proxy. Pour avoir des tunnels, l'emploi des tunnels SSH est alors plus sure puisque automatiquement crypté. | crokscrew
12 Pas d’espace avant une virgule. => //Voir aussi SSH et Crokscrew [[https://forum.ubuntu-fr.org/viewtopic.php?id=213500]] , une solution plus simple uniquement coté client pour passer le proxy. Pour avoir des tunnels, l'emploi des tunnels SSH est alors plus sure puisque automatiquement crypté. |  , => suggestions : [',']
12 Mot inconnu : SSH => //Voir aussi SSH et Crokscrew [[https://forum.ubuntu-fr.org/viewtopic.php?id=213500]] , une solution plus simple uniquement coté client pour passer le proxy. Pour avoir des tunnels, l'emploi des tunnels SSH est alors plus sure puisque automatiquement crypté. | ssh

16 Il manque un espace. => [[tutoriel:comment_installer_un_paquet|Installer le paquet]] **[[apt>httptunnel]]** | comment_installer_un_paquet => suggestions : [' comment_installer_un_paquet']
16 Mot inconnu : comment_installer_un_paquet => [[tutoriel:comment_installer_un_paquet|Installer le paquet]] **[[apt>httptunnel]]** | comment_installer_un_paquet
16 Mot inconnu : httptunnel => [[tutoriel:comment_installer_un_paquet|Installer le paquet]] **[[apt>httptunnel]]** | httptunnel

20 Mot inconnu : hts => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | hts
20 Mot inconnu : htc => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | htc
20 Mot inconnu : TCP => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | tcp
20 Il manque un trait d’union. => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | au dessus => suggestions : ['au-dessus']
20 Mot inconnu : SSH => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | ssh
20 Mot inconnu : htc => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | htc
20 Mot inconnu : hts => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | hts
20 Mot inconnu : SSH => Le paquet **http-tunnel** doit être installé sur le client et sur le serveur. Ce paquet est composé du serveur http-tunnel qu'on appelle par la commande **hts** et du client http-tunnel qu'on appelle par la commande **htc**. Le principe est que le serveur http-tunnel écoute sur un port TCP donné (toujours au dessus de 1024) et que le client se connecte sur ce port afin de créer un tunnel. Ensuite le client FTP ou SSH désiré se connecte sur le client **htc** (en local la plupart du temps, nous allons y revenir), et le serveur **hts** redirige le flux vers le serveur SSH (en local aussi). | ssh

39 Mot inconnu : hts => Dans cet exemple le serveur **hts** écoute sur le port TCP 10000 de l'adresse **monsite.com**, et redirige | hts
39 Mot inconnu : TCP => Dans cet exemple le serveur **hts** écoute sur le port TCP 10000 de l'adresse **monsite.com**, et redirige | tcp
39 Formatage des grands nombres. => Dans cet exemple le serveur **hts** écoute sur le port TCP 10000 de l'adresse **monsite.com**, et redirige | 10000 => suggestions : ['10\xa0000', '1\xa00000']
39 Mot inconnu : monsite => Dans cet exemple le serveur **hts** écoute sur le port TCP 10000 de l'adresse **monsite.com**, et redirige | monsite

40 Mot inconnu : localhost => tout ce qui arrive vers le port 22 de la même machine (localhost) pour le lancer on utilise la ligne de commande suivante : | localhost

50 Mot inconnu : SSH => Sur le client on transfère le port de connexion SSH (23000) vers le serveur HTTP-Tunnel (monsite.com:10000) et il faut paramétrer le proxy si vous en utilisez un (voir options de connexion). | ssh
50 Formatage des grands nombres. => Sur le client on transfère le port de connexion SSH (23000) vers le serveur HTTP-Tunnel (monsite.com:10000) et il faut paramétrer le proxy si vous en utilisez un (voir options de connexion). | 23000 => suggestions : ['23\xa0000']
50 Mot inconnu : monsite => Sur le client on transfère le port de connexion SSH (23000) vers le serveur HTTP-Tunnel (monsite.com:10000) et il faut paramétrer le proxy si vous en utilisez un (voir options de connexion). | monsite
50 Formatage des grands nombres. => Sur le client on transfère le port de connexion SSH (23000) vers le serveur HTTP-Tunnel (monsite.com:10000) et il faut paramétrer le proxy si vous en utilisez un (voir options de connexion). | 10000 => suggestions : ['10\xa0000', '1\xa00000']

66 Mot inconnu : touner => Il est possible de faire touner simultanément plusieurs serveurs HTTP-Tunnel pour rediriger différents flux (SSH, FTP). Il faut qu'ils écoutent sur des ports différents mais toujours au dessus de 1024. | touner
66 Mot inconnu : SSH => Il est possible de faire touner simultanément plusieurs serveurs HTTP-Tunnel pour rediriger différents flux (SSH, FTP). Il faut qu'ils écoutent sur des ports différents mais toujours au dessus de 1024. | ssh
66 Il manque un trait d’union. => Il est possible de faire touner simultanément plusieurs serveurs HTTP-Tunnel pour rediriger différents flux (SSH, FTP). Il faut qu'ils écoutent sur des ports différents mais toujours au dessus de 1024. | au dessus => suggestions : ['au-dessus']

72 Mot inconnu : dfsg-3 => Il est possible que vous rencontriez l'erreur suivante (avec la version 3.3+dfsg-3) lorsque **hts** est lancé en tant que **root** : | dfsg-3
72 Mot inconnu : hts => Il est possible que vous rencontriez l'erreur suivante (avec la version 3.3+dfsg-3) lorsque **hts** est lancé en tant que **root** : | hts
72 Mot inconnu : root => Il est possible que vous rencontriez l'erreur suivante (avec la version 3.3+dfsg-3) lorsque **hts** est lancé en tant que **root** : | root

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tunnel_accept: couldn't write GET header: Invalid argument |    => suggestions : ['']
73 Mot inconnu : tunnel_accept =>   tunnel_accept: couldn't write GET header: Invalid argument | tunnel_accept
73 Mot inconnu : couldn't =>   tunnel_accept: couldn't write GET header: Invalid argument | couldn't
73 Mot inconnu : write =>   tunnel_accept: couldn't write GET header: Invalid argument | write
73 Mot inconnu : GET =>   tunnel_accept: couldn't write GET header: Invalid argument | get
73 Mot inconnu : header =>   tunnel_accept: couldn't write GET header: Invalid argument | header
73 Mot inconnu : Invalid =>   tunnel_accept: couldn't write GET header: Invalid argument | invalid

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://github.com/larsbrinkhoff/httptunnel/issues/3|GitHub]] |    => suggestions : ['']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://askubuntu.com/questions/694510/invalid-argument-error-in-httptunnel-client/694568|AskUbuntu]] |    => suggestions : ['']

81 Mot inconnu : httptunnel => Installer le [[http://packages.ubuntu.com/wily/httptunnel|package httptunnel 3.3+dfsg-4]] de [[Wily]] corrige le problème.  | httptunnel
81 Mot inconnu : dfsg-4 => Installer le [[http://packages.ubuntu.com/wily/httptunnel|package httptunnel 3.3+dfsg-4]] de [[Wily]] corrige le problème.  | dfsg-4
81 Mot inconnu : Wily => Installer le [[http://packages.ubuntu.com/wily/httptunnel|package httptunnel 3.3+dfsg-4]] de [[Wily]] corrige le problème.  | wily
81 Incohérence avec “de” : “corrige” est une forme verbale conjuguée. => Installer le [[http://packages.ubuntu.com/wily/httptunnel|package httptunnel 3.3+dfsg-4]] de [[Wily]] corrige le problème.  | corrige => suggestions : ['corrigés', 'corrigé']
81 Espace(s) en fin de ligne à supprimer. => Installer le [[http://packages.ubuntu.com/wily/httptunnel|package httptunnel 3.3+dfsg-4]] de [[Wily]] corrige le problème.  |   => suggestions : ['']
84 Mot inconnu : Systemd => Reportez-vous au tutoriel suivant : [[Créer un service avec Systemd]] | systemd

86 Il manque un trait d’union. => Ci dessous un script de démarrage pour **/etc/init.d/** pour ajouter au démarrage du système le serveur HTTP-Tunnel. | ci dessous => suggestions : ['Ci-dessous']

96 Mot inconnu : httptunnel => Ajouter httptunnel aux applications à démarrer au lancement du système.\\ | httptunnel

111 Il manque un espace. => [[tutoriel:comment_editer_un_fichier|Éditez le fichier]] **/etc/init.d/httptunnel** en tant que root (sinon vous n'aurez pas les droits en écriture), et copier/coller le script ci-dessous dedans. | comment_editer_un_fichier => suggestions : [' comment_editer_un_fichier']
111 Mot inconnu : comment_editer_un_fichier => [[tutoriel:comment_editer_un_fichier|Éditez le fichier]] **/etc/init.d/httptunnel** en tant que root (sinon vous n'aurez pas les droits en écriture), et copier/coller le script ci-dessous dedans. | comment_editer_un_fichier
111 Mot inconnu : root => [[tutoriel:comment_editer_un_fichier|Éditez le fichier]] **/etc/init.d/httptunnel** en tant que root (sinon vous n'aurez pas les droits en écriture), et copier/coller le script ci-dessous dedans. | root
111 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. => [[tutoriel:comment_editer_un_fichier|Éditez le fichier]] **/etc/init.d/httptunnel** en tant que root (sinon vous n'aurez pas les droits en écriture), et copier/coller le script ci-dessous dedans. | copier/coller => suggestions : ['copier-coller', 'copié-collé', 'copiée-collée', 'copiés-collés', 'copiées-collées']

115 Mot inconnu : BEGIN => ### BEGIN INIT INFO | begin
115 Mot inconnu : INIT => ### BEGIN INIT INFO | init

116 Mot inconnu : Provides => # Provides:          httptunnel | provides
116 Espace(s) surnuméraire(s) à supprimer. => # Provides:          httptunnel |            => suggestions : [' ']
116 Mot inconnu : httptunnel => # Provides:          httptunnel | httptunnel

117 Mot inconnu : Required-Start => # Required-Start:    $syslog $remote_fs $network | required-start
117 Espace(s) surnuméraire(s) à supprimer. => # Required-Start:    $syslog $remote_fs $network |      => suggestions : [' ']
117 Mot inconnu : syslog => # Required-Start:    $syslog $remote_fs $network | syslog
117 Mot inconnu : remote_fs => # Required-Start:    $syslog $remote_fs $network | remote_fs
117 Mot inconnu : network => # Required-Start:    $syslog $remote_fs $network | network

118 Mot inconnu : Required-Stop => # Required-Stop:     $syslog $remote_fs $network | required-stop
118 Espace(s) surnuméraire(s) à supprimer. => # Required-Stop:     $syslog $remote_fs $network |       => suggestions : [' ']
118 Mot inconnu : syslog => # Required-Stop:     $syslog $remote_fs $network | syslog
118 Mot inconnu : remote_fs => # Required-Stop:     $syslog $remote_fs $network | remote_fs
118 Mot inconnu : network => # Required-Stop:     $syslog $remote_fs $network | network

119 Mot inconnu : Default-Start => # Default-Start:     2 3 4 5 | default-start
119 Espace(s) surnuméraire(s) à supprimer. => # Default-Start:     2 3 4 5 |       => suggestions : [' ']

120 Mot inconnu : Default-Stop => # Default-Stop:      0 1 6 | default-stop
120 Espace(s) surnuméraire(s) à supprimer. => # Default-Stop:      0 1 6 |        => suggestions : [' ']
121 Mot inconnu : Start => # Short-Description: Start httptunnel as daemon at boot time | start
121 Mot inconnu : httptunnel => # Short-Description: Start httptunnel as daemon at boot time | httptunnel
121 Mot inconnu : daemon => # Short-Description: Start httptunnel as daemon at boot time | daemon
121 Mot inconnu : at => # Short-Description: Start httptunnel as daemon at boot time | at
121 Mot inconnu : boot => # Short-Description: Start httptunnel as daemon at boot time | boot
121 Mot inconnu : time => # Short-Description: Start httptunnel as daemon at boot time | time

122 Mot inconnu : END => ### END INIT INFO | end
122 Mot inconnu : INIT => ### END INIT INFO | init

124 Mot inconnu : Declaration => # Declaration des variables | declaration

126 Mot inconnu : NO_PROCESS => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | no_process
126 Il manque un espace à côté du tiret. => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` |  - => suggestions : [' – ', ' — ']
126 Mot inconnu : ef => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | ef
126 Mot inconnu : grep => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | grep
126 Guillemets typographiques ouvrants. => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | " => suggestions : ['«\xa0', '“']
126 Mot inconnu : hts => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | hts
126 Il manque un espace à côté du tiret. => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` |  - => suggestions : [' – ', ' — ']
126 Guillemets typographiques fermants. => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | " => suggestions : ['\xa0»', '”']
126 Mot inconnu : grep => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | grep
126 Il manque un espace à côté du tiret. => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` |  - => suggestions : [' – ', ' — ']
126 Mot inconnu : grep => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | grep
126 Mot inconnu : awk => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | awk
126 Mot inconnu : print => NO_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | awk {'print $2'}` | print

127 Mot inconnu : NB_PROCESS => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | nb_process
127 Il manque un espace à côté du tiret. => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` |  - => suggestions : [' – ', ' — ']
127 Mot inconnu : ef => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | ef
127 Mot inconnu : grep => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | grep
127 Guillemets typographiques ouvrants. => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | " => suggestions : ['«\xa0', '“']
127 Mot inconnu : hts => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | hts
127 Il manque un espace à côté du tiret. => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` |  - => suggestions : [' – ', ' — ']
127 Guillemets typographiques fermants. => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | " => suggestions : ['\xa0»', '”']
127 Mot inconnu : grep => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | grep
127 Il manque un espace à côté du tiret. => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` |  - => suggestions : [' – ', ' — ']
127 Mot inconnu : grep => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | grep
127 Mot inconnu : wc => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` | wc
127 Il manque un espace à côté du tiret. => NB_PROCESS=`ps -ef | grep "hts -F" | grep -v grep | wc -l` |  - => suggestions : [' – ', ' — ']

128 Mot inconnu : LOGFILE => LOGFILE="/var/log/hts_server.log" | logfile

129 Il manque un espace. => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | d => suggestions : [' d']
129 Il manque un espace. => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | m => suggestions : [' m']
129 Il manque un espace. => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | y- => suggestions : [' Y-']
129 Il manque un espace. => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | hh => suggestions : [' Hh']
129 Mot inconnu : Hh => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | hh
129 Il manque un espace. => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | mm => suggestions : [' Mm']
129 Il manque un espace. => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | ss => suggestions : [' Ss']
129 Mot inconnu : Ss => DATE=`date +%d/%m/%Y-%Hh%Mm%Ss` | ss

131 Mot inconnu : Debut => # Debut du script | debut

133 Guillemets typographiques fermants. => case "$1" in | " => suggestions : ['\xa0»', '”']

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     start) |      => suggestions : ['']
134 Mot inconnu : start =>     start) | start

135 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if [ $NB_PROCESS = "0" ] |      => suggestions : ['']
135 Pas d’espace après ce signe. =>     if [ $NB_PROCESS = "0" ] | [  => suggestions : ['[']
135 Mot inconnu : NB_PROCESS =>     if [ $NB_PROCESS = "0" ] | nb_process
135 Guillemets typographiques ouvrants. =>     if [ $NB_PROCESS = "0" ] | " => suggestions : ['«\xa0', '“']
135 Guillemets typographiques fermants. =>     if [ $NB_PROCESS = "0" ] | " => suggestions : ['\xa0»', '”']
135 Pas d’espace avant ce signe. =>     if [ $NB_PROCESS = "0" ] |  ] => suggestions : [']']

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         then |          => suggestions : ['']
136 Mot inconnu : then =>         then | then

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$DATE : Demarrage du Serveur HTTP-Tunnel" |          => suggestions : ['']
137 Mot inconnu : echo =>         echo "$DATE : Demarrage du Serveur HTTP-Tunnel" | echo
137 Mot inconnu : Demarrage =>         echo "$DATE : Demarrage du Serveur HTTP-Tunnel" | demarrage
137 Guillemets typographiques fermants. =>         echo "$DATE : Demarrage du Serveur HTTP-Tunnel" | " => suggestions : ['\xa0»', '”']

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Demarrage du Serveur HTTP-Tunnel" >> $LOGFILE |          => suggestions : ['']
138 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Demarrage du Serveur HTTP-Tunnel" >> $LOGFILE | echo
138 Mot inconnu : Demarrage =>         echo "$0 $1 : $DATE : Demarrage du Serveur HTTP-Tunnel" >> $LOGFILE | demarrage
138 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Demarrage du Serveur HTTP-Tunnel" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
138 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Demarrage du Serveur HTTP-Tunnel" >> $LOGFILE | logfile

139 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         hts -F localhost:22 10000 |          => suggestions : ['']
139 Mot inconnu : hts =>         hts -F localhost:22 10000 | hts
139 Il manque un espace à côté du tiret. =>         hts -F localhost:22 10000 |  - => suggestions : [' – ', ' — ']
139 Mot inconnu : localhost =>         hts -F localhost:22 10000 | localhost
139 Il manque un espace. =>         hts -F localhost:22 10000 | 22 => suggestions : [' 22']
139 Formatage des grands nombres. =>         hts -F localhost:22 10000 | 10000 => suggestions : ['10\xa0000', '1\xa00000']

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         exit 0 |          => suggestions : ['']

141 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         else |          => suggestions : ['']
141 Mot inconnu : else =>         else | else

142 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" |          => suggestions : ['']
142 Mot inconnu : echo =>         echo "$DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" | echo
142 Mot inconnu : deja =>         echo "$DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" | deja
142 Mot inconnu : demarre =>         echo "$DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" | demarre
142 Mot inconnu : NO_PROCESS =>         echo "$DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" | no_process
142 Guillemets typographiques fermants. =>         echo "$DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" | " => suggestions : ['\xa0»', '”']

143 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE |          => suggestions : ['']
143 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE | echo
143 Mot inconnu : deja =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE | deja
143 Mot inconnu : demarre =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE | demarre
143 Mot inconnu : NO_PROCESS =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE | no_process
143 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
143 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel deja demarre, process N° : $NO_PROCESS" >> $LOGFILE | logfile

144 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         exit 0 |          => suggestions : ['']

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     fi |      => suggestions : ['']

146 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ;; |      => suggestions : ['']
146 Une de ces ponctuations est superflue. =>     ;; | ;; => suggestions : [';', ';']

147 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     stop) |      => suggestions : ['']

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if [ $NB_PROCESS = "1" ] |      => suggestions : ['']
149 Pas d’espace après ce signe. =>     if [ $NB_PROCESS = "1" ] | [  => suggestions : ['[']
149 Mot inconnu : NB_PROCESS =>     if [ $NB_PROCESS = "1" ] | nb_process
149 Guillemets typographiques ouvrants. =>     if [ $NB_PROCESS = "1" ] | " => suggestions : ['«\xa0', '“']
149 Guillemets typographiques fermants. =>     if [ $NB_PROCESS = "1" ] | " => suggestions : ['\xa0»', '”']
149 Pas d’espace avant ce signe. =>     if [ $NB_PROCESS = "1" ] |  ] => suggestions : [']']

150 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         then |          => suggestions : ['']
150 Mot inconnu : then =>         then | then

151 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$DATE : Arret du Serveur HTTP-Tunnel" |          => suggestions : ['']
151 Mot inconnu : echo =>         echo "$DATE : Arret du Serveur HTTP-Tunnel" | echo
151 Mot inconnu : Arret =>         echo "$DATE : Arret du Serveur HTTP-Tunnel" | arret
151 Guillemets typographiques fermants. =>         echo "$DATE : Arret du Serveur HTTP-Tunnel" | " => suggestions : ['\xa0»', '”']

152 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Arret du Serveur HTTP-Tunnel" >> $LOGFILE |          => suggestions : ['']
152 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Arret du Serveur HTTP-Tunnel" >> $LOGFILE | echo
152 Mot inconnu : Arret =>         echo "$0 $1 : $DATE : Arret du Serveur HTTP-Tunnel" >> $LOGFILE | arret
152 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Arret du Serveur HTTP-Tunnel" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
152 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Arret du Serveur HTTP-Tunnel" >> $LOGFILE | logfile

153 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Kill du N° de process : $NO_PROCESS" >> $LOGFILE |          => suggestions : ['']
153 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Kill du N° de process : $NO_PROCESS" >> $LOGFILE | echo
153 Mot inconnu : Kill =>         echo "$0 $1 : $DATE : Kill du N° de process : $NO_PROCESS" >> $LOGFILE | kill
153 Mot inconnu : NO_PROCESS =>         echo "$0 $1 : $DATE : Kill du N° de process : $NO_PROCESS" >> $LOGFILE | no_process
153 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Kill du N° de process : $NO_PROCESS" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
153 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Kill du N° de process : $NO_PROCESS" >> $LOGFILE | logfile

154 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         kill -9 $NO_PROCESS |          => suggestions : ['']
154 Mot inconnu : kill =>         kill -9 $NO_PROCESS | kill
154 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>         kill -9 $NO_PROCESS | -9 => suggestions : ['−9', '– 9', '— 9']
154 Mot inconnu : NO_PROCESS =>         kill -9 $NO_PROCESS | no_process

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         else |          => suggestions : ['']
155 Mot inconnu : else =>         else | else

156 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$DATE : Serveur HTTP non demarre, pas besoin de l'arreter" |          => suggestions : ['']
156 Mot inconnu : echo =>         echo "$DATE : Serveur HTTP non demarre, pas besoin de l'arreter" | echo
156 Mot inconnu : demarre =>         echo "$DATE : Serveur HTTP non demarre, pas besoin de l'arreter" | demarre
156 Mot inconnu : arreter =>         echo "$DATE : Serveur HTTP non demarre, pas besoin de l'arreter" | arreter
156 Guillemets typographiques fermants. =>         echo "$DATE : Serveur HTTP non demarre, pas besoin de l'arreter" | " => suggestions : ['\xa0»', '”']

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Serveur HTTP non demarre, pas besoin de l'arreter" >> $LOGFILE |          => suggestions : ['']
157 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Serveur HTTP non demarre, pas besoin de l'arreter" >> $LOGFILE | echo
157 Mot inconnu : demarre =>         echo "$0 $1 : $DATE : Serveur HTTP non demarre, pas besoin de l'arreter" >> $LOGFILE | demarre
157 Mot inconnu : arreter =>         echo "$0 $1 : $DATE : Serveur HTTP non demarre, pas besoin de l'arreter" >> $LOGFILE | arreter
157 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Serveur HTTP non demarre, pas besoin de l'arreter" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
157 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Serveur HTTP non demarre, pas besoin de l'arreter" >> $LOGFILE | logfile

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     fi |      => suggestions : ['']

159 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ;; |      => suggestions : ['']
159 Une de ces ponctuations est superflue. =>     ;; | ;; => suggestions : [';', ';']

160 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     restart) |      => suggestions : ['']
160 Mot inconnu : restart =>     restart) | restart

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     $0 stop |      => suggestions : ['']

162 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     $0 start |      => suggestions : ['']
162 Mot inconnu : start =>     $0 start | start

163 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ;; |      => suggestions : ['']
163 Une de ces ponctuations est superflue. =>     ;; | ;; => suggestions : [';', ';']

164 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     status) |      => suggestions : ['']

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if [ $NB_PROCESS = "0" ] |      => suggestions : ['']
165 Pas d’espace après ce signe. =>     if [ $NB_PROCESS = "0" ] | [  => suggestions : ['[']
165 Mot inconnu : NB_PROCESS =>     if [ $NB_PROCESS = "0" ] | nb_process
165 Guillemets typographiques ouvrants. =>     if [ $NB_PROCESS = "0" ] | " => suggestions : ['«\xa0', '“']
165 Guillemets typographiques fermants. =>     if [ $NB_PROCESS = "0" ] | " => suggestions : ['\xa0»', '”']
165 Pas d’espace avant ce signe. =>     if [ $NB_PROCESS = "0" ] |  ] => suggestions : [']']

166 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         then |          => suggestions : ['']
166 Mot inconnu : then =>         then | then

167 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$DATE : Aucun serveur HTTP-Tunnel en cours" |          => suggestions : ['']
167 Mot inconnu : echo =>         echo "$DATE : Aucun serveur HTTP-Tunnel en cours" | echo
167 Guillemets typographiques fermants. =>         echo "$DATE : Aucun serveur HTTP-Tunnel en cours" | " => suggestions : ['\xa0»', '”']

168 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Aucun serveur HTTP-Tunnel en cours" >> $LOGFILE |          => suggestions : ['']
168 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Aucun serveur HTTP-Tunnel en cours" >> $LOGFILE | echo
168 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Aucun serveur HTTP-Tunnel en cours" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
168 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Aucun serveur HTTP-Tunnel en cours" >> $LOGFILE | logfile

169 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         else |          => suggestions : ['']
169 Mot inconnu : else =>         else | else

170 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" |          => suggestions : ['']
170 Mot inconnu : echo =>         echo "$DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" | echo
170 Mot inconnu : NO_PROCESS =>         echo "$DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" | no_process
170 Guillemets typographiques fermants. =>         echo "$DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" | " => suggestions : ['\xa0»', '”']

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" >> $LOGFILE |          => suggestions : ['']
171 Mot inconnu : echo =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" >> $LOGFILE | echo
171 Mot inconnu : NO_PROCESS =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" >> $LOGFILE | no_process
171 Guillemets typographiques fermants. =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" >> $LOGFILE | " => suggestions : ['\xa0»', '”']
171 Mot inconnu : LOGFILE =>         echo "$0 $1 : $DATE : Serveur HTTP-Tunnel en cours : $NO_PROCESS" >> $LOGFILE | logfile

172 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     fi |      => suggestions : ['']

173 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ;; |      => suggestions : ['']
173 Une de ces ponctuations est superflue. =>     ;; | ;; => suggestions : [';', ';']

174 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     view_log) |      => suggestions : ['']
174 Mot inconnu : view_log =>     view_log) | view_log

175 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cat $LOGFILE |      => suggestions : ['']
175 Mot inconnu : cat =>     cat $LOGFILE | cat
175 Mot inconnu : LOGFILE =>     cat $LOGFILE | logfile

176 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ;; |      => suggestions : ['']
176 Une de ces ponctuations est superflue. =>     ;; | ;; => suggestions : [';', ';']

177 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     *) |      => suggestions : ['']

178 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo |      => suggestions : ['']
178 Mot inconnu : echo =>     echo | echo

179 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo "Utilisation : $0 { start | stop | restart | status | view_log }" |      => suggestions : ['']
179 Mot inconnu : echo =>     echo "Utilisation : $0 { start | stop | restart | status | view_log }" | echo
179 Guillemets typographiques ouvrants. =>     echo "Utilisation : $0 { start | stop | restart | status | view_log }" | " => suggestions : ['«\xa0', '“']
179 Mot inconnu : start =>     echo "Utilisation : $0 { start | stop | restart | status | view_log }" | start
179 Mot inconnu : restart =>     echo "Utilisation : $0 { start | stop | restart | status | view_log }" | restart
179 Mot inconnu : view_log =>     echo "Utilisation : $0 { start | stop | restart | status | view_log }" | view_log

180 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo |      => suggestions : ['']
180 Mot inconnu : echo =>     echo | echo

181 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ;; |      => suggestions : ['']
181 Une de ces ponctuations est superflue. =>     ;; | ;; => suggestions : [';', ';']

182 Mot inconnu : esac => esac | esac
186 Espace(s) en fin de ligne à supprimer. => Ce script peut donc être appelé par la commande **/etc/init.d/httptunnel** et accepte 4 arguments différents :  |   => suggestions : ['']

187 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **start** pour lancer le service ; |    => suggestions : ['']
187 Mot inconnu : start =>   * **start** pour lancer le service ; | start

188 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **stop** pour l'arrêter ; |    => suggestions : ['']

189 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **status** pour afficher un état des lieux ; |    => suggestions : ['']

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **view_log** pour afficher le journal. |    => suggestions : ['']
190 Mot inconnu : view_log =>   * **view_log** pour afficher le journal. | view_log

192 Mot inconnu : hts => Si votre tunnel ne se crée pas coté serveur ou coté client, pensez à vérifier si le port demandé en écoute pour **hts** ou **htc** est bien libre. | hts
192 Mot inconnu : htc => Si votre tunnel ne se crée pas coté serveur ou coté client, pensez à vérifier si le port demandé en écoute pour **hts** ou **htc** est bien libre. | htc

198 Mot inconnu : déja => Si le port est déja occupé cette commande affichera quelque chose dans le résultat, autrement elle n'affichera rien. Bon courage | déja

204 Mot inconnu : commentcamarche => [[https://www.commentcamarche.net/forum/affich-59147-tunnelling-ip-over-http|Documentation commentcamarche]]\\ | commentcamarche

205 Il manque un espace avant la parenthèse. => [[https://en.wikipedia.org/wiki/HTTP_tunnel_(software)|Documentation Wikipedia]] en anglais\\ | ( => suggestions : [' (']
205 Mot inconnu : Wikipedia => [[https://en.wikipedia.org/wiki/HTTP_tunnel_(software)|Documentation Wikipedia]] en anglais\\ | wikipedia
