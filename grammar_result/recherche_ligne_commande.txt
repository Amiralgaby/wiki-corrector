
11 Espace(s) en fin de ligne à supprimer. => Que vous n'aimiez pas les applications graphiques ou que vous administriez une machine sans environnement de bureau, vous aurez rapidement besoin de chercher, et surtout de trouver des fichiers, qu'ils soient fichiers système ou fichiers personnels.  |   => suggestions : ['']

15 S’il s’agit d’un impératif, mettez un trait d’union. => **Ne cherchez plus vos fichiers, trouvez les...** | trouvez les => suggestions : ['trouvez-les']
15 Typographie : points de suspension. Utilisez le caractère dédié. => **Ne cherchez plus vos fichiers, trouvez les...** | ... => suggestions : ['…']

17 Mot inconnu : find => ===== find ===== | find

19 Mot inconnu : find => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  | find
19 Si « mais » est la conjonction de coordination, une virgule est souhaitable si elle introduit une nouvelle proposition. => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  |  mais => suggestions : [', mais']
19 Espace(s) surnuméraire(s) à supprimer. => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  |    => suggestions : [' ']
19 Mot inconnu : Nautilus => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  | nautilus
19 Guillemets typographiques ouvrants. => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  | " => suggestions : ['«\xa0', '“']
19 Guillemets typographiques fermants. => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  | " => suggestions : ['\xa0»', '”']
19 Espace(s) en fin de ligne à supprimer. => **find** est un besogneux qui arpente vos dossiers infatigablement. Il a accès à la totalité de l'arborescence mais il vous est vivement conseillé de la circonscrire si l'on veut obtenir un résultat dans un délai correct. L'interface le permet  de façon simple pour un débutant avec notamment l'inclusion des signets de **Nautilus** et une fonction "autre" destinée à sélectionner le répertoire que vous lui désignez.  |   => suggestions : ['']

22 Mot inconnu : fd => ===== fd ===== | fd

24 Mot inconnu : find => Une alternative à find : [[https://github.com/sharkdp/fd|fd sur github]]. | find
24 Mot inconnu : fd => Une alternative à find : [[https://github.com/sharkdp/fd|fd sur github]]. | fd
24 Mot inconnu : github => Une alternative à find : [[https://github.com/sharkdp/fd|fd sur github]]. | github

26 Mot inconnu : jerem-ferry => Installable via un [[https://launchpad.net/~jerem-ferry/+archive/ubuntu/rust|PPA]] | jerem-ferry
26 Mot inconnu : rust => Installable via un [[https://launchpad.net/~jerem-ferry/+archive/ubuntu/rust|PPA]] | rust

27 Mot inconnu : grep => ===== grep ===== | grep

29 Mot inconnu : grep => L'interface peut grâce à cette commande réaliser dans certaines conditions une recherche plein texte. **grep** est optimisé pour le travail en console portant sur la recherche à l'intérieur de fichiers créés par un éditeur de texte et surtout pour le monde raréfié des expressions rationnelles. Il donne avec cette interface de bons résultats pour les fichiers aux formats proches du format texte (txt, rtf, abw) mais aucun notamment avec les formats odt et pdf.  | grep
29 Mot inconnu : txt => L'interface peut grâce à cette commande réaliser dans certaines conditions une recherche plein texte. **grep** est optimisé pour le travail en console portant sur la recherche à l'intérieur de fichiers créés par un éditeur de texte et surtout pour le monde raréfié des expressions rationnelles. Il donne avec cette interface de bons résultats pour les fichiers aux formats proches du format texte (txt, rtf, abw) mais aucun notamment avec les formats odt et pdf.  | txt
29 Mot inconnu : rtf => L'interface peut grâce à cette commande réaliser dans certaines conditions une recherche plein texte. **grep** est optimisé pour le travail en console portant sur la recherche à l'intérieur de fichiers créés par un éditeur de texte et surtout pour le monde raréfié des expressions rationnelles. Il donne avec cette interface de bons résultats pour les fichiers aux formats proches du format texte (txt, rtf, abw) mais aucun notamment avec les formats odt et pdf.  | rtf
29 Mot inconnu : abw => L'interface peut grâce à cette commande réaliser dans certaines conditions une recherche plein texte. **grep** est optimisé pour le travail en console portant sur la recherche à l'intérieur de fichiers créés par un éditeur de texte et surtout pour le monde raréfié des expressions rationnelles. Il donne avec cette interface de bons résultats pour les fichiers aux formats proches du format texte (txt, rtf, abw) mais aucun notamment avec les formats odt et pdf.  | abw
29 Mot inconnu : odt => L'interface peut grâce à cette commande réaliser dans certaines conditions une recherche plein texte. **grep** est optimisé pour le travail en console portant sur la recherche à l'intérieur de fichiers créés par un éditeur de texte et surtout pour le monde raréfié des expressions rationnelles. Il donne avec cette interface de bons résultats pour les fichiers aux formats proches du format texte (txt, rtf, abw) mais aucun notamment avec les formats odt et pdf.  | odt
29 Espace(s) en fin de ligne à supprimer. => L'interface peut grâce à cette commande réaliser dans certaines conditions une recherche plein texte. **grep** est optimisé pour le travail en console portant sur la recherche à l'intérieur de fichiers créés par un éditeur de texte et surtout pour le monde raréfié des expressions rationnelles. Il donne avec cette interface de bons résultats pour les fichiers aux formats proches du format texte (txt, rtf, abw) mais aucun notamment avec les formats odt et pdf.  |   => suggestions : ['']

30 Mot inconnu : grep => Enfin, on peut considérer que l'adaptation graphique de **grep** aux besoins courants (14 choix possibles...) constitue un effort remarquable au profit de l'utilisateur moyen sinon du pur débutant.  | grep
30 Typographie : points de suspension. Utilisez le caractère dédié. => Enfin, on peut considérer que l'adaptation graphique de **grep** aux besoins courants (14 choix possibles...) constitue un effort remarquable au profit de l'utilisateur moyen sinon du pur débutant.  | ... => suggestions : ['…']
30 Espace(s) en fin de ligne à supprimer. => Enfin, on peut considérer que l'adaptation graphique de **grep** aux besoins courants (14 choix possibles...) constitue un effort remarquable au profit de l'utilisateur moyen sinon du pur débutant.  |   => suggestions : ['']

32 Mot inconnu : odt => <note tip>Par contre cet outil ne permet pas de chercher dans les fichiers type **.odt** dont le contenu est compressé. pour ce faire on utilisera la ligne de commande en combinant find grep et unzip, pour cela adaptez cette commande à votre cas :  | odt
32 Après un point, une majuscule est généralement requise. => <note tip>Par contre cet outil ne permet pas de chercher dans les fichiers type **.odt** dont le contenu est compressé. pour ce faire on utilisera la ligne de commande en combinant find grep et unzip, pour cela adaptez cette commande à votre cas :  | pour => suggestions : ['Pour']
32 Mot inconnu : find => <note tip>Par contre cet outil ne permet pas de chercher dans les fichiers type **.odt** dont le contenu est compressé. pour ce faire on utilisera la ligne de commande en combinant find grep et unzip, pour cela adaptez cette commande à votre cas :  | find
32 Mot inconnu : grep => <note tip>Par contre cet outil ne permet pas de chercher dans les fichiers type **.odt** dont le contenu est compressé. pour ce faire on utilisera la ligne de commande en combinant find grep et unzip, pour cela adaptez cette commande à votre cas :  | grep
32 Mot inconnu : unzip => <note tip>Par contre cet outil ne permet pas de chercher dans les fichiers type **.odt** dont le contenu est compressé. pour ce faire on utilisera la ligne de commande en combinant find grep et unzip, pour cela adaptez cette commande à votre cas :  | unzip
32 Espace(s) en fin de ligne à supprimer. => <note tip>Par contre cet outil ne permet pas de chercher dans les fichiers type **.odt** dont le contenu est compressé. pour ce faire on utilisera la ligne de commande en combinant find grep et unzip, pour cela adaptez cette commande à votre cas :  |   => suggestions : ['']

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print |    => suggestions : ['']
33 Mot inconnu : find =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | find
33 Il manque un espace à côté du tiret. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print |  - => suggestions : [' – ', ' — ']
33 Mot inconnu : name =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | name
33 Mot inconnu : odt =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | odt
33 Guillemets typographiques fermants. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | ' => suggestions : ['”', '’', '›']
33 Mot inconnu : exec =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | exec
33 Mot inconnu : sh =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | sh
33 Il manque un espace à côté du tiret. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print |  - => suggestions : [' – ', ' — ']
33 Guillemets typographiques ouvrants. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | ' => suggestions : ['“', '‘', '‹']
33 Mot inconnu : unzip =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | unzip
33 Il manque un espace à côté du tiret. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print |  - => suggestions : [' – ', ' — ']
33 Mot inconnu : xml =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | xml
33 Mot inconnu : grep =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | grep
33 Il manque un espace à côté du tiret. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print |  - => suggestions : [' – ', ' — ']
33 Guillemets typographiques ouvrants. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | " => suggestions : ['«\xa0', '“']
33 Mot inconnu : motàchercher =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | motàchercher
33 Guillemets typographiques fermants. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | " => suggestions : ['\xa0»', '”']
33 Guillemets fermants. =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print |  " => suggestions : ['\xa0»', '”']
33 Mot inconnu : print =>   find chemin/du/répertoire -name '*.odt' -exec sh -c 'unzip -c "{}" content.xml | grep -qi "motàchercher"' ";" -print | print

34 Mot inconnu : Linuxpedia => (Référence trouvée dans cet [[http://www.linuxpedia.fr/doku.php/commande/grep_egrep|article de Linuxpedia]]). | linuxpedia
36 Mot inconnu : grep => Pour ce qui est des fichiers **.pdf**, la recherche se fera aussi en ligne de commande de la même façon qu'avec **grep** mais en installant auparavant **[[apt>pdfgrep]]**.</note> | grep
36 Mot inconnu : pdfgrep => Pour ce qui est des fichiers **.pdf**, la recherche se fera aussi en ligne de commande de la même façon qu'avec **grep** mais en installant auparavant **[[apt>pdfgrep]]**.</note> | pdfgrep

39 Mot inconnu : Ripgrep => ===== Ripgrep ===== | ripgrep
41 Mot inconnu : Grep => [[https://github.com/BurntSushi/ripgrep|Ripgrep]] est une alternative à Grep mais avec ces avantages :  | grep
41 Espace(s) en fin de ligne à supprimer. => [[https://github.com/BurntSushi/ripgrep|Ripgrep]] est une alternative à Grep mais avec ces avantages :  |   => suggestions : ['']

42 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - gestion complète de l'Unicode | -  => suggestions : ['—\xa0', '–\xa0']

43 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - beaucoup plus rapide | -  => suggestions : ['—\xa0', '–\xa0']

45 Mot inconnu : jerem-ferry => Installable via un [[https://launchpad.net/~jerem-ferry/+archive/ubuntu/rust|PPA]] | jerem-ferry
45 Mot inconnu : rust => Installable via un [[https://launchpad.net/~jerem-ferry/+archive/ubuntu/rust|PPA]] | rust

46 Mot inconnu : locate => ===== locate et mlocate ===== | locate
46 Mot inconnu : mlocate => ===== locate et mlocate ===== | mlocate

47 Mot inconnu : locate => Les fonctions de **locate** peuvent être fournies par les paquets **locate** et **mlocate**. Ils se différencient par les points suivants:  | locate
47 Mot inconnu : locate => Les fonctions de **locate** peuvent être fournies par les paquets **locate** et **mlocate**. Ils se différencient par les points suivants:  | locate
47 Mot inconnu : mlocate => Les fonctions de **locate** peuvent être fournies par les paquets **locate** et **mlocate**. Ils se différencient par les points suivants:  | mlocate
47 Espace(s) en fin de ligne à supprimer. => Les fonctions de **locate** peuvent être fournies par les paquets **locate** et **mlocate**. Ils se différencient par les points suivants:  |   => suggestions : ['']

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * mlocate ajoute un horodatage qui accélère significativement la ré-indexation. |    => suggestions : ['']
48 Mot inconnu : mlocate =>   * mlocate ajoute un horodatage qui accélère significativement la ré-indexation. | mlocate

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * mlocate respecte les droits utilisateurs pour des raisons de sécurité (pas d'info sur /root par exemple pour user). |    => suggestions : ['']
49 Mot inconnu : mlocate =>   * mlocate respecte les droits utilisateurs pour des raisons de sécurité (pas d'info sur /root par exemple pour user). | mlocate

51 Il manque un espace. => Que vous ayez l'un ou l'autre de ces paquets, ou les deux paquets installés,les commandes en console et les fichiers de configuration restent //rigoureusement les mêmes//.  Si vous installez les deux paquets, vous bénéficierez de la vitesse de **mlocate** sans être contraint par ses limitations. Regardez aussi à ce sujet le paragraphe sécurité plus bas.  | les => suggestions : [' les']
51 Espace(s) surnuméraire(s) à supprimer. => Que vous ayez l'un ou l'autre de ces paquets, ou les deux paquets installés,les commandes en console et les fichiers de configuration restent //rigoureusement les mêmes//.  Si vous installez les deux paquets, vous bénéficierez de la vitesse de **mlocate** sans être contraint par ses limitations. Regardez aussi à ce sujet le paragraphe sécurité plus bas.  |    => suggestions : [' ']
51 Mot inconnu : mlocate => Que vous ayez l'un ou l'autre de ces paquets, ou les deux paquets installés,les commandes en console et les fichiers de configuration restent //rigoureusement les mêmes//.  Si vous installez les deux paquets, vous bénéficierez de la vitesse de **mlocate** sans être contraint par ses limitations. Regardez aussi à ce sujet le paragraphe sécurité plus bas.  | mlocate
51 Espace(s) en fin de ligne à supprimer. => Que vous ayez l'un ou l'autre de ces paquets, ou les deux paquets installés,les commandes en console et les fichiers de configuration restent //rigoureusement les mêmes//.  Si vous installez les deux paquets, vous bénéficierez de la vitesse de **mlocate** sans être contraint par ses limitations. Regardez aussi à ce sujet le paragraphe sécurité plus bas.  |   => suggestions : ['']

56 Guillemets typographiques ouvrants. => L'espace de la recherche par défaut est pour l'essentiel celui de la partition principale, dite "racine", à l'exception de certains fichiers temporaires et des dossiers éventuels placés sous l'arborescence /media. Ceci n'est pas une lacune mais un choix délibéré destiné à éviter des  indexations inutiles. L'espace de recherche peut inclure d'autres systèmes de fichiers (Fat32, reiserfs, etc.) pourvu qu'ils soient montés - par exemple sur /mnt -. | " => suggestions : ['«\xa0', '“']
56 Guillemets typographiques fermants. => L'espace de la recherche par défaut est pour l'essentiel celui de la partition principale, dite "racine", à l'exception de certains fichiers temporaires et des dossiers éventuels placés sous l'arborescence /media. Ceci n'est pas une lacune mais un choix délibéré destiné à éviter des  indexations inutiles. L'espace de recherche peut inclure d'autres systèmes de fichiers (Fat32, reiserfs, etc.) pourvu qu'ils soient montés - par exemple sur /mnt -. | " => suggestions : ['\xa0»', '”']
56 Espace(s) surnuméraire(s) à supprimer. => L'espace de la recherche par défaut est pour l'essentiel celui de la partition principale, dite "racine", à l'exception de certains fichiers temporaires et des dossiers éventuels placés sous l'arborescence /media. Ceci n'est pas une lacune mais un choix délibéré destiné à éviter des  indexations inutiles. L'espace de recherche peut inclure d'autres systèmes de fichiers (Fat32, reiserfs, etc.) pourvu qu'ils soient montés - par exemple sur /mnt -. |    => suggestions : [' ']
56 Mot inconnu : Fat32 => L'espace de la recherche par défaut est pour l'essentiel celui de la partition principale, dite "racine", à l'exception de certains fichiers temporaires et des dossiers éventuels placés sous l'arborescence /media. Ceci n'est pas une lacune mais un choix délibéré destiné à éviter des  indexations inutiles. L'espace de recherche peut inclure d'autres systèmes de fichiers (Fat32, reiserfs, etc.) pourvu qu'ils soient montés - par exemple sur /mnt -. | fat32
56 Mot inconnu : reiserfs => L'espace de la recherche par défaut est pour l'essentiel celui de la partition principale, dite "racine", à l'exception de certains fichiers temporaires et des dossiers éventuels placés sous l'arborescence /media. Ceci n'est pas une lacune mais un choix délibéré destiné à éviter des  indexations inutiles. L'espace de recherche peut inclure d'autres systèmes de fichiers (Fat32, reiserfs, etc.) pourvu qu'ils soient montés - par exemple sur /mnt -. | reiserfs
56 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => L'espace de la recherche par défaut est pour l'essentiel celui de la partition principale, dite "racine", à l'exception de certains fichiers temporaires et des dossiers éventuels placés sous l'arborescence /media. Ceci n'est pas une lacune mais un choix délibéré destiné à éviter des  indexations inutiles. L'espace de recherche peut inclure d'autres systèmes de fichiers (Fat32, reiserfs, etc.) pourvu qu'ils soient montés - par exemple sur /mnt -. |  -  => suggestions : [' – ', ' — ', ' − ']

59 Guillemets typographiques ouvrants. => Dans ce fichier, c'est le champ "PRUNEPATH" qui interdit par défaut l'indexation des chemins suivants: "/tmp, /var, /spool, /media".   | " => suggestions : ['«\xa0', '“']
59 Mot inconnu : PRUNEPATH => Dans ce fichier, c'est le champ "PRUNEPATH" qui interdit par défaut l'indexation des chemins suivants: "/tmp, /var, /spool, /media".   | prunepath
59 Guillemets typographiques fermants. => Dans ce fichier, c'est le champ "PRUNEPATH" qui interdit par défaut l'indexation des chemins suivants: "/tmp, /var, /spool, /media".   | " => suggestions : ['\xa0»', '”']
59 Mot inconnu : spool => Dans ce fichier, c'est le champ "PRUNEPATH" qui interdit par défaut l'indexation des chemins suivants: "/tmp, /var, /spool, /media".   | spool
59 Guillemets typographiques fermants. => Dans ce fichier, c'est le champ "PRUNEPATH" qui interdit par défaut l'indexation des chemins suivants: "/tmp, /var, /spool, /media".   | " => suggestions : ['\xa0»', '”']
59 Espace(s) en fin de ligne à supprimer. => Dans ce fichier, c'est le champ "PRUNEPATH" qui interdit par défaut l'indexation des chemins suivants: "/tmp, /var, /spool, /media".   |    => suggestions : ['']

62 Mot inconnu : locate => **locate** trouvera instantanément le chemin de l'élément recherché à deux conditions : | locate

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *temps : le répertoire ou le fichier a été ajouté ou déplacé avant la dernière indexation. |    => suggestions : ['']

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *espace : le répertoire ou le fichier est situé dans l'espace décrit ci-dessus.  |    => suggestions : ['']
64 Espace(s) en fin de ligne à supprimer. =>   *espace : le répertoire ou le fichier est situé dans l'espace décrit ci-dessus.  |   => suggestions : ['']

76 Typographie : points de suspension. Utilisez le caractère dédié. => ==== Et si... ==== | ... => suggestions : ['…']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *je monte une nouvelle partition ?   |    => suggestions : ['']
77 Espace(s) en fin de ligne à supprimer. =>   *je monte une nouvelle partition ?   |    => suggestions : ['']

78 Espace(s) surnuméraire(s) à supprimer. => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. |    => suggestions : [' ']
78 Mot inconnu : locate => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | locate
78 Mot inconnu : gigas => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | gigas
78 Mot inconnu : Suse => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | suse
78 Mot inconnu : Gigas => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | gigas
78 Confusion probable : “sur” est une préposition ou un adjectif signifiant acide ou aigre ; utilisez “sûr” pour certain, vrai ou sans danger. => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | sur => suggestions : ['sûr']
78 Avec une unité de mesure, mettez un espace insécable. => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | 2 min => suggestions : ['2\xa0min']
78 Mot inconnu : locate => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | locate
78 Mot inconnu : Suse => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | suse
78 Espace(s) surnuméraire(s) à supprimer. => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. |    => suggestions : [' ']
78 Mot inconnu : locate => La  base de données de locate représente environ un demi-millième de vos données, soit 2 mégas pour 4 gigas de données. Si vous montez par exemple une partition Suse de 4 Gigas sur /mnt/suse et vous ré-indexez (1 à 2 min.) la nouvelle base va doubler de taille (4 mégas) et permettra à **locate** d'y chercher sans problème. Si vous démontez cette partition Suse,  **locate** ne vous donnera plus de résultat sur la partition démontée. | locate

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']
80 Espace(s) en fin de ligne à supprimer. => Par contre, toute partition montée de façon permanente sur l'arborescence /mnt (et non /media rappelez-vous !) sera indexée automatiquement chaque jour.  |   => suggestions : ['']

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *j'obtiens trop de réponses ? |    => suggestions : ['']

83 Mot inconnu : locate => Vous cherchez par exemple avec locate le suffixe .mp3 ou .rtf.  | locate
83 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Vous cherchez par exemple avec locate le suffixe .mp3 ou .rtf.  |  . => suggestions : ['. ', '.']
83 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Vous cherchez par exemple avec locate le suffixe .mp3 ou .rtf.  |  . => suggestions : ['. ', '.']
83 Mot inconnu : rtf => Vous cherchez par exemple avec locate le suffixe .mp3 ou .rtf.  | rtf
83 Espace(s) en fin de ligne à supprimer. => Vous cherchez par exemple avec locate le suffixe .mp3 ou .rtf.  |   => suggestions : ['']

89 Mot inconnu : grep => Si la liste est encore trop importante, vous pouvez rajouter un deuxième critère de recherche avec la commande grep de la façon suivante : | grep
93 Mot inconnu : txt => Vous pouvez aussi sauvegarder le résultat de votre recherche dans un fichier créé à cet effet (nom choisi : liste.txt) : | txt

103 Mot inconnu : locate => Comme la base de données est consultable par tous, un utilisateur peut avoir accès à l'arborescence d'un dossier normalement interdit en utilisant la commande **locate**. | locate

105 Mot inconnu : mlocate => Si cela constitue un souci pour vous, il ne vous faudra installer que le paquet **mlocate**. | mlocate
107 Mot inconnu : locate => > Conclusion : **locate** est un outil aussi simple que pratique ne présentant que de faibles contraintes.  | locate
107 Espace(s) en fin de ligne à supprimer. => > Conclusion : **locate** est un outil aussi simple que pratique ne présentant que de faibles contraintes.  |   => suggestions : ['']

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *Utiliser la console pour lancer **dpkg** |    => suggestions : ['']
113 Mot inconnu : dpkg =>   *Utiliser la console pour lancer **dpkg** | dpkg

116 Espace(s) en fin de ligne à supprimer. => </code>   |    => suggestions : ['']

117 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Utiliser le [[synaptic|Gestionnaire de paquets synaptic]] |    => suggestions : ['']
117 Mot inconnu : synaptic =>   * Utiliser le [[synaptic|Gestionnaire de paquets synaptic]] | synaptic
117 Mot inconnu : synaptic =>   * Utiliser le [[synaptic|Gestionnaire de paquets synaptic]] | synaptic
118 Mot inconnu : Synaptic => La procédure est plus longue : Synaptic est lancé après le mot de passe. Recherchez votre fichier. Une fois que le paquet recherché apparait dans le listing de droite, sélectionnez-le, faites un clic droit et sélectionnez propriétés > fichiers installés. Vous verrez enfin dans une petite fenêtre l'endroit où est installé votre fichier. | synaptic

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *Les autres |    => suggestions : ['']
130 Il manque un espace. => //Contributeurs : [[utilisateurs:roger64]], [[utilisateurs:poupoul2]]//  | roger64 => suggestions : [' roger64']
130 Il manque un espace. => //Contributeurs : [[utilisateurs:roger64]], [[utilisateurs:poupoul2]]//  | poupoul2 => suggestions : [' poupoul2']
130 Espace(s) en fin de ligne à supprimer. => //Contributeurs : [[utilisateurs:roger64]], [[utilisateurs:poupoul2]]//  |   => suggestions : ['']
