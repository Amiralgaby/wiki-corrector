
5 Mot inconnu : Bazaar [[7:13]] => ====== Bazaar ====== <|> bazaar

21 Mot inconnu : github [[85:91]] => Attention aussi si vous avez activé l'importation automatique d'un autre dépôt comme github vers votre branche launchpad, vous ne pourrez pas pousser votre dépôt local vers cette même branche. Vous rencontrerez une erreur du type : <|> github
27 Mot inconnu : utliser [[70:77]] => Cette commande cachera votre email si vous avez peur des spams, sinon utliser celle-ci : <|> utliser

34 Mot inconnu : Bazaar [[30:36]] => Avant de commencer à utiliser Bazaar, il faut lui demander de créer un nouveau dépôt. <|> bazaar

38 Mot inconnu : nom_depot [[19:28]] => Dans le répertoire nom_depot, vous aurez alors un dossier caché .bzr, c'est dans ce dossier que Bazaar stockera les différentes révisions et informations du projet. <|> nom_depot
38 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[63:65]] => Dans le répertoire nom_depot, vous aurez alors un dossier caché .bzr, c'est dans ce dossier que Bazaar stockera les différentes révisions et informations du projet. <|>  . => suggestions : ['. ', '.']
38 Mot inconnu : bzr [[65:68]] => Dans le répertoire nom_depot, vous aurez alors un dossier caché .bzr, c'est dans ce dossier que Bazaar stockera les différentes révisions et informations du projet. <|> bzr
38 Mot inconnu : Bazaar [[96:102]] => Dans le répertoire nom_depot, vous aurez alors un dossier caché .bzr, c'est dans ce dossier que Bazaar stockera les différentes révisions et informations du projet. <|> bazaar

41 Mot inconnu : bzr [[109:112]] => Vous pourrez ensuite (si vous avez les droits suffisants sur le dépôt distant), envoyer vos changements avec bzr push. <|> bzr
41 Mot inconnu : push [[113:117]] => Vous pourrez ensuite (si vous avez les droits suffisants sur le dépôt distant), envoyer vos changements avec bzr push. <|> push

47 Mot inconnu : bzr [[144:147]] => Permet de comparer 2 versions. Vous pourrez ainsi voir les changements effectués. Si vous avez des changements pas encore commités, la commande bzr diff affichera les modifications effectuées depuis le dernier commit. <|> bzr
47 Mot inconnu : diff [[148:152]] => Permet de comparer 2 versions. Vous pourrez ainsi voir les changements effectués. Si vous avez des changements pas encore commités, la commande bzr diff affichera les modifications effectuées depuis le dernier commit. <|> diff
54 Mot inconnu : Bazaar [[57:63]] => <code>bzr add nom_fichier</code>Cette commande indique à Bazaar que le fichier nommé nom_fichier devra être versionné. <|> bazaar
56 Mot inconnu : keep [[78:82]] => <code>bzr rm nom_ficher</code>Supprime le fichier (à utiliser avec l'option --keep) si vous voulez supprimer le fichier du dépôt sans le supprimer du disque dur <|> keep
59 Mot inconnu : dûs [[135:138]] => <code>bzr commit fichier1 fichier2 -m "Description du commit"</code>Crée un commit contenant fichier1 et fichier2. Ces fichiers auront dûs être au préalable ajoutés au dépôt avec la commande bzr add. L'argument -m permet de spécifier une description au commit. Si il n'est pas utilisé, un éditeur de texte s'affichera vous demandant d'entrer une description. <|> dûs
59 Mot inconnu : add [[195:198]] => <code>bzr commit fichier1 fichier2 -m "Description du commit"</code>Crée un commit contenant fichier1 et fichier2. Ces fichiers auront dûs être au préalable ajoutés au dépôt avec la commande bzr add. L'argument -m permet de spécifier une description au commit. Si il n'est pas utilisé, un éditeur de texte s'affichera vous demandant d'entrer une description. <|> add
59 Il faut élider “si” et l’accoler au pronom. [[261:264]] => <code>bzr commit fichier1 fichier2 -m "Description du commit"</code>Crée un commit contenant fichier1 et fichier2. Ces fichiers auront dûs être au préalable ajoutés au dépôt avec la commande bzr add. L'argument -m permet de spécifier une description au commit. Si il n'est pas utilisé, un éditeur de texte s'affichera vous demandant d'entrer une description. <|> si  => suggestions : ['S’']
60 Mot inconnu : add [[134:137]] => <code>bzr commit</code>Créé un nouveau commit contenant tous les changements effectués sur les fichiers suivis (ceux ajoutés avec bzr add). <|> add

64 Mot inconnu : Bazaar [[0:6]] => Bazaar dispose de commandes permettant d'annuler des changements effectués. Attention, ces annulations ne sont pas réversibles ! <|> bazaar

67 Mot inconnu : Bazaar [[14:20]] => Par sécurité, Bazaar créé un fichier de sauvegarde nommé nom_fichier.~#~ (avec # un nombre). Si vous ne voulez pas de sauvegarde, utilisez l'argument --no-backup. <|> bazaar
67 Mot inconnu : nom_fichier [[57:68]] => Par sécurité, Bazaar créé un fichier de sauvegarde nommé nom_fichier.~#~ (avec # un nombre). Si vous ne voulez pas de sauvegarde, utilisez l'argument --no-backup. <|> nom_fichier
67 Mot inconnu : no-backup [[152:161]] => Par sécurité, Bazaar créé un fichier de sauvegarde nommé nom_fichier.~#~ (avec # un nombre). Si vous ne voulez pas de sauvegarde, utilisez l'argument --no-backup. <|> no-backup

76 Mot inconnu : Bazaar [[31:37]] => Généralement, quand on utilise Bazaar, on ne travaille pas seul mais en équipe. Voici les principales commandes qui vous aideront à utiliser Bazaar dans de telles situations. <|> bazaar
76 Mot inconnu : Bazaar [[141:147]] => Généralement, quand on utilise Bazaar, on ne travaille pas seul mais en équipe. Voici les principales commandes qui vous aideront à utiliser Bazaar dans de telles situations. <|> bazaar

77 Mot inconnu : Bazaar [[55:61]] => Ici, nous supposerons qu'on travaille avec deux dépôts Bazaar distincts nommés respectivement moi et bob. Le dépôt moi est votre dépôt, bob est celui d'une autre personne, admettons qu'il est situé à l'adresse %%bzr://bob.com/bob%%. <|> bazaar
77 Il manque un espace. [[212:215]] => Ici, nous supposerons qu'on travaille avec deux dépôts Bazaar distincts nommés respectivement moi et bob. Le dépôt moi est votre dépôt, bob est celui d'une autre personne, admettons qu'il est situé à l'adresse %%bzr://bob.com/bob%%. <|> bzr => suggestions : [' bzr']
77 Mot inconnu : bzr [[212:215]] => Ici, nous supposerons qu'on travaille avec deux dépôts Bazaar distincts nommés respectivement moi et bob. Le dépôt moi est votre dépôt, bob est celui d'une autre personne, admettons qu'il est situé à l'adresse %%bzr://bob.com/bob%%. <|> bzr

80 Mot inconnu : Bazaar [[0:6]] => Bazaar permet une gestion des branches, et des merge (fusion de branches). Les branches permettent d'avoir simultanément plusieurs versions de votre programme dans votre dépôt Bazaar. C'est très utile, par exemple pour développer une nouvelle fonctionnalité, tout en gardant la branche principale intacte. Ainsi, vous pouvez toujours faire des changements dans la branche principale (corrections de bugs par exemple), tout en développant en parallèle une nouvelle fonctionnalité. <|> bazaar
80 Mot inconnu : merge [[47:52]] => Bazaar permet une gestion des branches, et des merge (fusion de branches). Les branches permettent d'avoir simultanément plusieurs versions de votre programme dans votre dépôt Bazaar. C'est très utile, par exemple pour développer une nouvelle fonctionnalité, tout en gardant la branche principale intacte. Ainsi, vous pouvez toujours faire des changements dans la branche principale (corrections de bugs par exemple), tout en développant en parallèle une nouvelle fonctionnalité. <|> merge
80 Mot inconnu : Bazaar [[176:182]] => Bazaar permet une gestion des branches, et des merge (fusion de branches). Les branches permettent d'avoir simultanément plusieurs versions de votre programme dans votre dépôt Bazaar. C'est très utile, par exemple pour développer une nouvelle fonctionnalité, tout en gardant la branche principale intacte. Ainsi, vous pouvez toujours faire des changements dans la branche principale (corrections de bugs par exemple), tout en développant en parallèle une nouvelle fonctionnalité. <|> bazaar

82 Guillemets typographiques ouvrants. [[33:34]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> " => suggestions : ['«\xa0', '“']
82 Guillemets typographiques fermants. [[38:39]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> " => suggestions : ['\xa0»', '”']
82 Guillemets typographiques ouvrants. [[113:114]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> " => suggestions : ['«\xa0', '“']
82 Guillemets typographiques fermants. [[118:119]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> " => suggestions : ['\xa0»', '”']
82 Accord de genre erroné avec « versionnés ». [[146:153]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> sources => suggestions : ['sourcés']
82 Accord de genre erroné entre « sources » et « versionnés ». [[154:164]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> versionnés => suggestions : ['versionnées']
82 Guillemets typographiques ouvrants. [[267:268]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> " => suggestions : ['«\xa0', '“']
82 Guillemets typographiques fermants. [[272:273]] => Créé une nouvelle branche nommée "test" à partir du dépôt courant. Vous aurez alors un nouveau répertoire, nommé "test" qui contiendra toutes les sources versionnés du projet. Pour utiliser cette nouvelle branche, il suffit de faire des modifications dans le dossier "test", et de commiter les changements. <|> " => suggestions : ['\xa0»', '”']

84 Guillemets typographiques ouvrants. [[52:53]] => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Bazaar ne soit pas capable de les résoudre tout seul. Les conflits apparaissent généralement lors de changements divergents au même endroit dans un fichier. <|> " => suggestions : ['«\xa0', '“']
84 Mot inconnu : nom_branche [[53:64]] => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Bazaar ne soit pas capable de les résoudre tout seul. Les conflits apparaissent généralement lors de changements divergents au même endroit dans un fichier. <|> nom_branche
84 Guillemets typographiques fermants. [[64:65]] => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Bazaar ne soit pas capable de les résoudre tout seul. Les conflits apparaissent généralement lors de changements divergents au même endroit dans un fichier. <|> " => suggestions : ['\xa0»', '”']
84 Mot inconnu : Bazaar [[110:116]] => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Bazaar ne soit pas capable de les résoudre tout seul. Les conflits apparaissent généralement lors de changements divergents au même endroit dans un fichier. <|> bazaar

85 Mot inconnu : Bazaar [[13:19]] => Dans ce cas, Bazaar laisse un marqueur dans le fichier contenant le conflit, et crée trois nouveaux fichiers contenant les différentes versions du fichier. <|> bazaar

88 Mot inconnu : celà [[94:98]] => Vous devez alors modifier le fichier pour résoudre le conflit et enlever le marquer. Une fois celà fait, il faut faire <|> celà

90 Mot inconnu : Bazaar [[39:45]] => Si tous les conflits ont étés résolus, Bazaar vous l'indiquera par le message "All conflicts resolved." <|> bazaar
90 Guillemets typographiques ouvrants. [[78:79]] => Si tous les conflits ont étés résolus, Bazaar vous l'indiquera par le message "All conflicts resolved." <|> " => suggestions : ['«\xa0', '“']
90 Mot inconnu : All [[79:82]] => Si tous les conflits ont étés résolus, Bazaar vous l'indiquera par le message "All conflicts resolved." <|> all
90 Mot inconnu : conflicts [[83:92]] => Si tous les conflits ont étés résolus, Bazaar vous l'indiquera par le message "All conflicts resolved." <|> conflicts
90 Mot inconnu : resolved [[93:101]] => Si tous les conflits ont étés résolus, Bazaar vous l'indiquera par le message "All conflicts resolved." <|> resolved
90 Guillemets typographiques fermants. [[102:103]] => Si tous les conflits ont étés résolus, Bazaar vous l'indiquera par le message "All conflicts resolved." <|> " => suggestions : ['\xa0»', '”']

95 Mot inconnu : merger [[70:76]] => Cette commande va récupérer les changements effectués par bob, et les merger avec votre dépôt. <|> merger

97 Mot inconnu : Bazaar [[21:27]] => ===== Intégration de Bazaar dans votre éditeur ===== <|> bazaar
