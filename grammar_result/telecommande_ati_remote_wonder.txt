
5 Mot inconnu : ATI => ====== Télécommande ATI SAPPHIRE REMOTE WONDER Version 1 ====== | ati
5 Mot inconnu : SAPPHIRE => ====== Télécommande ATI SAPPHIRE REMOTE WONDER Version 1 ====== | sapphire
5 Mot inconnu : REMOTE => ====== Télécommande ATI SAPPHIRE REMOTE WONDER Version 1 ====== | remote
5 Mot inconnu : WONDER => ====== Télécommande ATI SAPPHIRE REMOTE WONDER Version 1 ====== | wonder

8 Mot inconnu : ATI => Cette méthode fonctionne aussi pour la ATI remote wonder (ID: B4SUR84A) | ati
8 Mot inconnu : remote => Cette méthode fonctionne aussi pour la ATI remote wonder (ID: B4SUR84A) | remote
8 Mot inconnu : wonder => Cette méthode fonctionne aussi pour la ATI remote wonder (ID: B4SUR84A) | wonder
8 Mot inconnu : B4SUR84A => Cette méthode fonctionne aussi pour la ATI remote wonder (ID: B4SUR84A) | b4sur84a

15 Mot inconnu : ati_remote => voici la partie intéressante du code dans le ficher ati_remote.c | ati_remote

16 Mot inconnu : keycodes => les keycodes sont placés dans l'avant dernière colonne | keycodes
16 Il manque probablement un trait d’union. => les keycodes sont placés dans l'avant dernière colonne | avant dernière => suggestions : ['avant-dernière']

18 Mot inconnu : Directional => <file>/* Directional control pad axes */ | directional
18 Mot inconnu : control => <file>/* Directional control pad axes */ | control
18 Mot inconnu : pad => <file>/* Directional control pad axes */ | pad

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ |   => suggestions : ['']
19 Mot inconnu : KIND_ACCEL =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | kind_accel
19 Espace(s) surnuméraire(s) à supprimer. =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ |     => suggestions : [' ']
19 Mot inconnu : x35 =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | x35
19 Mot inconnu : x70 =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | x70
19 Mot inconnu : EV_REL =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | ev_rel
19 Mot inconnu : REL_X =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | rel_x
19 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | -1 => suggestions : ['−1', '– 1', '— 1']
19 Espace(s) surnuméraire(s) à supprimer. =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ |       => suggestions : [' ']
19 Mot inconnu : left =>  {KIND_ACCEL,   0x35, 0x70, EV_REL, REL_X, -1},     /* left */ | left

20 Mot inconnu : KIND_ACCEL => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ | kind_accel
20 Espace(s) surnuméraire(s) à supprimer. => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ |     => suggestions : [' ']
20 Mot inconnu : x36 => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ | x36
20 Mot inconnu : x71 => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ | x71
20 Mot inconnu : EV_REL => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ | ev_rel
20 Mot inconnu : REL_X => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ | rel_x
20 Espace(s) surnuméraire(s) à supprimer. => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ |      => suggestions : [' ']
20 Mot inconnu : right => {KIND_ACCEL,   0x36, 0x71, EV_REL, REL_X, 1},    /* right */ | right

21 Mot inconnu : KIND_ACCEL => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | kind_accel
21 Espace(s) surnuméraire(s) à supprimer. => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ |     => suggestions : [' ']
21 Mot inconnu : x37 => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | x37
21 Mot inconnu : x72 => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | x72
21 Mot inconnu : EV_REL => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | ev_rel
21 Mot inconnu : REL_Y => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | rel_y
21 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | -1 => suggestions : ['−1', '– 1', '— 1']
21 Espace(s) surnuméraire(s) à supprimer. => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ |       => suggestions : [' ']
21 Mot inconnu : up => {KIND_ACCEL,   0x37, 0x72, EV_REL, REL_Y, -1},     /* up */ | up

22 Mot inconnu : KIND_ACCEL => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ | kind_accel
22 Espace(s) surnuméraire(s) à supprimer. => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ |     => suggestions : [' ']
22 Mot inconnu : x38 => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ | x38
22 Mot inconnu : x73 => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ | x73
22 Mot inconnu : EV_REL => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ | ev_rel
22 Mot inconnu : REL_Y => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ | rel_y
22 Espace(s) surnuméraire(s) à supprimer. => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ |      => suggestions : [' ']
22 Mot inconnu : down => {KIND_ACCEL,   0x38, 0x73, EV_REL, REL_Y, 1},    /* down */ | down

23 Mot inconnu : Directional => /* Directional control pad diagonals */ | directional
23 Mot inconnu : control => /* Directional control pad diagonals */ | control
23 Mot inconnu : pad => /* Directional control pad diagonals */ | pad
23 Mot inconnu : diagonals => /* Directional control pad diagonals */ | diagonals

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ |   => suggestions : ['']
24 Mot inconnu : KIND_LU =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ | kind_lu
24 Espace(s) surnuméraire(s) à supprimer. =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ |        => suggestions : [' ']
24 Mot inconnu : x39 =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ | x39
24 Mot inconnu : x74 =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ | x74
24 Mot inconnu : EV_REL =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ | ev_rel
24 Espace(s) surnuméraire(s) à supprimer. =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ |          => suggestions : [' ']
24 Mot inconnu : left =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ | left
24 Mot inconnu : up =>  {KIND_LU,      0x39, 0x74, EV_REL, 0, 0},        /* left up */ | up

25 Mot inconnu : KIND_RU => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ | kind_ru
25 Espace(s) surnuméraire(s) à supprimer. => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ |        => suggestions : [' ']
25 Mot inconnu : x3a => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ | x3a
25 Mot inconnu : x75 => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ | x75
25 Mot inconnu : EV_REL => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ | ev_rel
25 Espace(s) surnuméraire(s) à supprimer. => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ |          => suggestions : [' ']
25 Mot inconnu : right => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ | right
25 Mot inconnu : up => {KIND_RU,      0x3a, 0x75, EV_REL, 0, 0},        /* right up */ | up

26 Mot inconnu : KIND_LD => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ | kind_ld
26 Espace(s) surnuméraire(s) à supprimer. => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ |        => suggestions : [' ']
26 Mot inconnu : x3c => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ | x3c
26 Mot inconnu : x77 => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ | x77
26 Mot inconnu : EV_REL => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ | ev_rel
26 Espace(s) surnuméraire(s) à supprimer. => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ |          => suggestions : [' ']
26 Mot inconnu : left => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ | left
26 Mot inconnu : down => {KIND_LD,      0x3c, 0x77, EV_REL, 0, 0},        /* left down */ | down

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ |   => suggestions : ['']
27 Mot inconnu : KIND_RD =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ | kind_rd
27 Espace(s) surnuméraire(s) à supprimer. =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ |        => suggestions : [' ']
27 Mot inconnu : x3b =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ | x3b
27 Mot inconnu : x76 =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ | x76
27 Mot inconnu : EV_REL =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ | ev_rel
27 Espace(s) surnuméraire(s) à supprimer. =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ |          => suggestions : [' ']
27 Mot inconnu : right =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ | right
27 Mot inconnu : down =>  {KIND_RD,      0x3b, 0x76, EV_REL, 0, 0},        /* right down */ | down

29 Guillemets typographiques ouvrants. => /* "Mouse button" buttons */ | " => suggestions : ['«\xa0', '“']
29 Mot inconnu : Mouse => /* "Mouse button" buttons */ | mouse
29 Mot inconnu : button => /* "Mouse button" buttons */ | button
29 Guillemets typographiques fermants. => /* "Mouse button" buttons */ | " => suggestions : ['\xa0»', '”']

30 Mot inconnu : KIND_LITERAL => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | kind_literal
30 Mot inconnu : x3d => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | x3d
30 Mot inconnu : x78 => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | x78
30 Mot inconnu : EV_KEY => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | ev_key
30 Mot inconnu : BTN_LEFT => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | btn_left
30 Mot inconnu : left => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | left
30 Mot inconnu : btn => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | btn
30 Mot inconnu : down => {KIND_LITERAL, 0x3d, 0x78, EV_KEY, BTN_LEFT, 1}, /* left btn down */ | down

31 Mot inconnu : KIND_LITERAL => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | kind_literal
31 Mot inconnu : x3e => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | x3e
31 Mot inconnu : x79 => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | x79
31 Mot inconnu : EV_KEY => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | ev_key
31 Mot inconnu : BTN_LEFT => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | btn_left
31 Mot inconnu : left => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | left
31 Mot inconnu : btn => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | btn
31 Mot inconnu : up => {KIND_LITERAL, 0x3e, 0x79, EV_KEY, BTN_LEFT, 0}, /* left btn up */ | up

32 Mot inconnu : KIND_LITERAL => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | kind_literal
32 Mot inconnu : x41 => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | x41
32 Mot inconnu : x7c => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | x7c
32 Mot inconnu : EV_KEY => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | ev_key
32 Mot inconnu : BTN_RIGHT => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | btn_right
32 Mot inconnu : right => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | right
32 Mot inconnu : btn => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | btn
32 Mot inconnu : down => {KIND_LITERAL, 0x41, 0x7c, EV_KEY, BTN_RIGHT, 1},/* right btn down */ | down

33 Mot inconnu : KIND_LITERAL => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | kind_literal
33 Mot inconnu : x42 => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | x42
33 Mot inconnu : x7d => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | x7d
33 Mot inconnu : EV_KEY => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | ev_key
33 Mot inconnu : BTN_RIGHT => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | btn_right
33 Mot inconnu : right => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | right
33 Mot inconnu : btn => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | btn
33 Mot inconnu : up => {KIND_LITERAL, 0x42, 0x7d, EV_KEY, BTN_RIGHT, 0},/* right btn up */ | up

35 Mot inconnu : Artificial => /* Artificial "doubleclick" events are generated by the hardware. | artificial
35 Guillemets typographiques ouvrants. => /* Artificial "doubleclick" events are generated by the hardware. | " => suggestions : ['«\xa0', '“']
35 Mot inconnu : doubleclick => /* Artificial "doubleclick" events are generated by the hardware. | doubleclick
35 Guillemets typographiques fermants. => /* Artificial "doubleclick" events are generated by the hardware. | " => suggestions : ['\xa0»', '”']
35 Mot inconnu : events => /* Artificial "doubleclick" events are generated by the hardware. | events
35 Mot inconnu : generated => /* Artificial "doubleclick" events are generated by the hardware. | generated
35 Mot inconnu : by => /* Artificial "doubleclick" events are generated by the hardware. | by
35 Mot inconnu : the => /* Artificial "doubleclick" events are generated by the hardware. | the

36 Mot inconnu : They => * They are mapped to the "side" and "extra" mouse buttons here. */ | they
36 Mot inconnu : mapped => * They are mapped to the "side" and "extra" mouse buttons here. */ | mapped
36 Mot inconnu : to => * They are mapped to the "side" and "extra" mouse buttons here. */ | to
36 Mot inconnu : the => * They are mapped to the "side" and "extra" mouse buttons here. */ | the
36 Guillemets typographiques ouvrants. => * They are mapped to the "side" and "extra" mouse buttons here. */ | " => suggestions : ['«\xa0', '“']
36 Mot inconnu : side => * They are mapped to the "side" and "extra" mouse buttons here. */ | side
36 Guillemets typographiques fermants. => * They are mapped to the "side" and "extra" mouse buttons here. */ | " => suggestions : ['\xa0»', '”']
36 Mot inconnu : and => * They are mapped to the "side" and "extra" mouse buttons here. */ | and
36 Guillemets typographiques ouvrants. => * They are mapped to the "side" and "extra" mouse buttons here. */ | " => suggestions : ['«\xa0', '“']
36 Guillemets typographiques fermants. => * They are mapped to the "side" and "extra" mouse buttons here. */ | " => suggestions : ['\xa0»', '”']
36 Mot inconnu : mouse => * They are mapped to the "side" and "extra" mouse buttons here. */ | mouse
36 Mot inconnu : here => * They are mapped to the "side" and "extra" mouse buttons here. */ | here

37 Mot inconnu : KIND_FILTERED => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | kind_filtered
37 Mot inconnu : x3f => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | x3f
37 Mot inconnu : x7a => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | x7a
37 Mot inconnu : EV_KEY => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | ev_key
37 Mot inconnu : BTN_SIDE => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | btn_side
37 Mot inconnu : left => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | left
37 Mot inconnu : dblclick => {KIND_FILTERED, 0x3f, 0x7a, EV_KEY, BTN_SIDE, 1}, /* left dblclick */ | dblclick

38 Mot inconnu : KIND_FILTERED => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | kind_filtered
38 Mot inconnu : x43 => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | x43
38 Mot inconnu : x7e => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | x7e
38 Mot inconnu : EV_KEY => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | ev_key
38 Mot inconnu : BTN_EXTRA => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | btn_extra
38 Mot inconnu : right => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | right
38 Mot inconnu : dblclick => {KIND_FILTERED, 0x43, 0x7e, EV_KEY, BTN_EXTRA, 1},/* right dblclick */ | dblclick

40 Mot inconnu : keyboard => /* keyboard. */ | keyboard

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd2, 0x0d, EV_KEY, KEY_KP1, 1}, |      => suggestions : ['']
41 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd2, 0x0d, EV_KEY, KEY_KP1, 1}, | kind_filtered
41 Mot inconnu : xd2 =>     {KIND_FILTERED, 0xd2, 0x0d, EV_KEY, KEY_KP1, 1}, | xd2
41 Mot inconnu : x0d =>     {KIND_FILTERED, 0xd2, 0x0d, EV_KEY, KEY_KP1, 1}, | x0d
41 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd2, 0x0d, EV_KEY, KEY_KP1, 1}, | ev_key
41 Mot inconnu : KEY_KP1 =>     {KIND_FILTERED, 0xd2, 0x0d, EV_KEY, KEY_KP1, 1}, | key_kp1

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd3, 0x0e, EV_KEY, KEY_KP2, 1}, |      => suggestions : ['']
42 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd3, 0x0e, EV_KEY, KEY_KP2, 1}, | kind_filtered
42 Mot inconnu : xd3 =>     {KIND_FILTERED, 0xd3, 0x0e, EV_KEY, KEY_KP2, 1}, | xd3
42 Mot inconnu : x0e =>     {KIND_FILTERED, 0xd3, 0x0e, EV_KEY, KEY_KP2, 1}, | x0e
42 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd3, 0x0e, EV_KEY, KEY_KP2, 1}, | ev_key
42 Mot inconnu : KEY_KP2 =>     {KIND_FILTERED, 0xd3, 0x0e, EV_KEY, KEY_KP2, 1}, | key_kp2

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd4, 0x0f, EV_KEY, KEY_KP3, 1}, |      => suggestions : ['']
43 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd4, 0x0f, EV_KEY, KEY_KP3, 1}, | kind_filtered
43 Mot inconnu : xd4 =>     {KIND_FILTERED, 0xd4, 0x0f, EV_KEY, KEY_KP3, 1}, | xd4
43 Mot inconnu : x0f =>     {KIND_FILTERED, 0xd4, 0x0f, EV_KEY, KEY_KP3, 1}, | x0f
43 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd4, 0x0f, EV_KEY, KEY_KP3, 1}, | ev_key
43 Mot inconnu : KEY_KP3 =>     {KIND_FILTERED, 0xd4, 0x0f, EV_KEY, KEY_KP3, 1}, | key_kp3

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd5, 0x10, EV_KEY, KEY_KP4, 1}, |      => suggestions : ['']
44 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd5, 0x10, EV_KEY, KEY_KP4, 1}, | kind_filtered
44 Mot inconnu : xd5 =>     {KIND_FILTERED, 0xd5, 0x10, EV_KEY, KEY_KP4, 1}, | xd5
44 Mot inconnu : x10 =>     {KIND_FILTERED, 0xd5, 0x10, EV_KEY, KEY_KP4, 1}, | x10
44 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd5, 0x10, EV_KEY, KEY_KP4, 1}, | ev_key
44 Mot inconnu : KEY_KP4 =>     {KIND_FILTERED, 0xd5, 0x10, EV_KEY, KEY_KP4, 1}, | key_kp4

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd6, 0x11, EV_KEY, KEY_KP5, 1}, |      => suggestions : ['']
45 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd6, 0x11, EV_KEY, KEY_KP5, 1}, | kind_filtered
45 Mot inconnu : xd6 =>     {KIND_FILTERED, 0xd6, 0x11, EV_KEY, KEY_KP5, 1}, | xd6
45 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd6, 0x11, EV_KEY, KEY_KP5, 1}, | ev_key
45 Mot inconnu : KEY_KP5 =>     {KIND_FILTERED, 0xd6, 0x11, EV_KEY, KEY_KP5, 1}, | key_kp5

46 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd7, 0x12, EV_KEY, KEY_KP6, 1}, |      => suggestions : ['']
46 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd7, 0x12, EV_KEY, KEY_KP6, 1}, | kind_filtered
46 Mot inconnu : xd7 =>     {KIND_FILTERED, 0xd7, 0x12, EV_KEY, KEY_KP6, 1}, | xd7
46 Mot inconnu : x12 =>     {KIND_FILTERED, 0xd7, 0x12, EV_KEY, KEY_KP6, 1}, | x12
46 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd7, 0x12, EV_KEY, KEY_KP6, 1}, | ev_key
46 Mot inconnu : KEY_KP6 =>     {KIND_FILTERED, 0xd7, 0x12, EV_KEY, KEY_KP6, 1}, | key_kp6

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd8, 0x13, EV_KEY, KEY_KP7, 1}, |      => suggestions : ['']
47 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd8, 0x13, EV_KEY, KEY_KP7, 1}, | kind_filtered
47 Mot inconnu : xd8 =>     {KIND_FILTERED, 0xd8, 0x13, EV_KEY, KEY_KP7, 1}, | xd8
47 Mot inconnu : x13 =>     {KIND_FILTERED, 0xd8, 0x13, EV_KEY, KEY_KP7, 1}, | x13
47 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd8, 0x13, EV_KEY, KEY_KP7, 1}, | ev_key
47 Mot inconnu : KEY_KP7 =>     {KIND_FILTERED, 0xd8, 0x13, EV_KEY, KEY_KP7, 1}, | key_kp7

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd9, 0x14, EV_KEY, KEY_KP8, 1}, |      => suggestions : ['']
48 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd9, 0x14, EV_KEY, KEY_KP8, 1}, | kind_filtered
48 Mot inconnu : xd9 =>     {KIND_FILTERED, 0xd9, 0x14, EV_KEY, KEY_KP8, 1}, | xd9
48 Mot inconnu : x14 =>     {KIND_FILTERED, 0xd9, 0x14, EV_KEY, KEY_KP8, 1}, | x14
48 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd9, 0x14, EV_KEY, KEY_KP8, 1}, | ev_key
48 Mot inconnu : KEY_KP8 =>     {KIND_FILTERED, 0xd9, 0x14, EV_KEY, KEY_KP8, 1}, | key_kp8

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xda, 0x15, EV_KEY, KEY_KP9, 1}, |      => suggestions : ['']
49 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xda, 0x15, EV_KEY, KEY_KP9, 1}, | kind_filtered
49 Mot inconnu : xda =>     {KIND_FILTERED, 0xda, 0x15, EV_KEY, KEY_KP9, 1}, | xda
49 Mot inconnu : x15 =>     {KIND_FILTERED, 0xda, 0x15, EV_KEY, KEY_KP9, 1}, | x15
49 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xda, 0x15, EV_KEY, KEY_KP9, 1}, | ev_key
49 Mot inconnu : KEY_KP9 =>     {KIND_FILTERED, 0xda, 0x15, EV_KEY, KEY_KP9, 1}, | key_kp9

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xdc, 0x17, EV_KEY, KEY_KP0, 1}, |      => suggestions : ['']
50 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xdc, 0x17, EV_KEY, KEY_KP0, 1}, | kind_filtered
50 Mot inconnu : xdc =>     {KIND_FILTERED, 0xdc, 0x17, EV_KEY, KEY_KP0, 1}, | xdc
50 Mot inconnu : x17 =>     {KIND_FILTERED, 0xdc, 0x17, EV_KEY, KEY_KP0, 1}, | x17
50 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xdc, 0x17, EV_KEY, KEY_KP0, 1}, | ev_key
50 Mot inconnu : KEY_KP0 =>     {KIND_FILTERED, 0xdc, 0x17, EV_KEY, KEY_KP0, 1}, | key_kp0

51 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xc5, 0x00, EV_KEY, KEY_Q, 1}, |      => suggestions : ['']
51 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xc5, 0x00, EV_KEY, KEY_Q, 1}, | kind_filtered
51 Mot inconnu : xc5 =>     {KIND_FILTERED, 0xc5, 0x00, EV_KEY, KEY_Q, 1}, | xc5
51 Mot inconnu : x00 =>     {KIND_FILTERED, 0xc5, 0x00, EV_KEY, KEY_Q, 1}, | x00
51 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xc5, 0x00, EV_KEY, KEY_Q, 1}, | ev_key
51 Mot inconnu : KEY_Q =>     {KIND_FILTERED, 0xc5, 0x00, EV_KEY, KEY_Q, 1}, | key_q

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xc6, 0x01, EV_KEY, KEY_B, 1}, |      => suggestions : ['']
52 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xc6, 0x01, EV_KEY, KEY_B, 1}, | kind_filtered
52 Mot inconnu : xc6 =>     {KIND_FILTERED, 0xc6, 0x01, EV_KEY, KEY_B, 1}, | xc6
52 Mot inconnu : x01 =>     {KIND_FILTERED, 0xc6, 0x01, EV_KEY, KEY_B, 1}, | x01
52 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xc6, 0x01, EV_KEY, KEY_B, 1}, | ev_key
52 Mot inconnu : KEY_B =>     {KIND_FILTERED, 0xc6, 0x01, EV_KEY, KEY_B, 1}, | key_b

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xde, 0x19, EV_KEY, KEY_C, 1}, |      => suggestions : ['']
53 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xde, 0x19, EV_KEY, KEY_C, 1}, | kind_filtered
53 Mot inconnu : xde =>     {KIND_FILTERED, 0xde, 0x19, EV_KEY, KEY_C, 1}, | xde
53 Mot inconnu : x19 =>     {KIND_FILTERED, 0xde, 0x19, EV_KEY, KEY_C, 1}, | x19
53 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xde, 0x19, EV_KEY, KEY_C, 1}, | ev_key
53 Mot inconnu : KEY_C =>     {KIND_FILTERED, 0xde, 0x19, EV_KEY, KEY_C, 1}, | key_c

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe0, 0x1b, EV_KEY, KEY_D, 1}, |      => suggestions : ['']
54 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe0, 0x1b, EV_KEY, KEY_D, 1}, | kind_filtered
54 Mot inconnu : xe0 =>     {KIND_FILTERED, 0xe0, 0x1b, EV_KEY, KEY_D, 1}, | xe0
54 Mot inconnu : x1b =>     {KIND_FILTERED, 0xe0, 0x1b, EV_KEY, KEY_D, 1}, | x1b
54 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe0, 0x1b, EV_KEY, KEY_D, 1}, | ev_key
54 Mot inconnu : KEY_D =>     {KIND_FILTERED, 0xe0, 0x1b, EV_KEY, KEY_D, 1}, | key_d

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe6, 0x21, EV_KEY, KEY_E, 1}, |      => suggestions : ['']
55 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe6, 0x21, EV_KEY, KEY_E, 1}, | kind_filtered
55 Mot inconnu : xe6 =>     {KIND_FILTERED, 0xe6, 0x21, EV_KEY, KEY_E, 1}, | xe6
55 Mot inconnu : x21 =>     {KIND_FILTERED, 0xe6, 0x21, EV_KEY, KEY_E, 1}, | x21
55 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe6, 0x21, EV_KEY, KEY_E, 1}, | ev_key
55 Mot inconnu : KEY_E =>     {KIND_FILTERED, 0xe6, 0x21, EV_KEY, KEY_E, 1}, | key_e

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe8, 0x23, EV_KEY, KEY_F, 1}, |      => suggestions : ['']
56 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe8, 0x23, EV_KEY, KEY_F, 1}, | kind_filtered
56 Mot inconnu : xe8 =>     {KIND_FILTERED, 0xe8, 0x23, EV_KEY, KEY_F, 1}, | xe8
56 Mot inconnu : x23 =>     {KIND_FILTERED, 0xe8, 0x23, EV_KEY, KEY_F, 1}, | x23
56 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe8, 0x23, EV_KEY, KEY_F, 1}, | ev_key
56 Mot inconnu : KEY_F =>     {KIND_FILTERED, 0xe8, 0x23, EV_KEY, KEY_F, 1}, | key_f

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     /* "special" keys */ |      => suggestions : ['']
58 Guillemets typographiques ouvrants. =>     /* "special" keys */ | " => suggestions : ['«\xa0', '“']
58 Mot inconnu : special =>     /* "special" keys */ | special
58 Guillemets typographiques fermants. =>     /* "special" keys */ | " => suggestions : ['\xa0»', '”']
58 Mot inconnu : keys =>     /* "special" keys */ | keys

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ |      => suggestions : ['']
59 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | kind_filtered
59 Mot inconnu : xdd =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | xdd
59 Mot inconnu : x18 =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | x18
59 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | ev_key
59 Mot inconnu : KEY_KPENTER =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | key_kpenter
59 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ |      => suggestions : [' ']
59 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | " => suggestions : ['«\xa0', '“']
59 Mot inconnu : check =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | check
59 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xdd, 0x18, EV_KEY, KEY_KPENTER, 1},    /* "check" */ | " => suggestions : ['\xa0»', '”']

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ |      => suggestions : ['']
60 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | kind_filtered
60 Mot inconnu : xdb =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | xdb
60 Mot inconnu : x16 =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | x16
60 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | ev_key
60 Mot inconnu : KEY_MENU =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | key_menu
60 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ |         => suggestions : [' ']
60 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | " => suggestions : ['«\xa0', '“']
60 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xdb, 0x16, EV_KEY, KEY_MENU, 1},       /* "menu" */ | " => suggestions : ['\xa0»', '”']

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ |      => suggestions : ['']
61 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ | kind_filtered
61 Mot inconnu : xc7 =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ | xc7
61 Mot inconnu : x02 =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ | x02
61 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ | ev_key
61 Mot inconnu : KEY_POWER =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ | key_power
61 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ |        => suggestions : [' ']
61 Mot inconnu : Power =>     {KIND_FILTERED, 0xc7, 0x02, EV_KEY, KEY_POWER, 1},      /* Power */ | power

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ |      => suggestions : ['']
62 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ | kind_filtered
62 Mot inconnu : xc8 =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ | xc8
62 Mot inconnu : x03 =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ | x03
62 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ | ev_key
62 Mot inconnu : KEY_TV =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ | key_tv
62 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xc8, 0x03, EV_KEY, KEY_TV, 1},         /* TV */ |           => suggestions : [' ']

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ |      => suggestions : ['']
63 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ | kind_filtered
63 Mot inconnu : xc9 =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ | xc9
63 Mot inconnu : x04 =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ | x04
63 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ | ev_key
63 Mot inconnu : KEY_DVD =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ | key_dvd
63 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xc9, 0x04, EV_KEY, KEY_DVD, 1},        /* DVD */ |          => suggestions : [' ']

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ |      => suggestions : ['']
64 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ | kind_filtered
64 Mot inconnu : xca =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ | xca
64 Mot inconnu : x05 =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ | x05
64 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ | ev_key
64 Mot inconnu : KEY_WWW =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ | key_www
64 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xca, 0x05, EV_KEY, KEY_WWW, 1},        /* WEB */ |          => suggestions : [' ']

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ |      => suggestions : ['']
65 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | kind_filtered
65 Mot inconnu : xcb =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | xcb
65 Mot inconnu : x06 =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | x06
65 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | ev_key
65 Mot inconnu : KEY_BOOKMARKS =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | key_bookmarks
65 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ |    => suggestions : [' ']
65 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | " => suggestions : ['«\xa0', '“']
65 Mot inconnu : book =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | book
65 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xcb, 0x06, EV_KEY, KEY_BOOKMARKS, 1},  /* "book" */ | " => suggestions : ['\xa0»', '”']

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ |      => suggestions : ['']
66 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | kind_filtered
66 Mot inconnu : xcc =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | xcc
66 Mot inconnu : x07 =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | x07
66 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | ev_key
66 Mot inconnu : KEY_EDIT =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | key_edit
66 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ |         => suggestions : [' ']
66 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | " => suggestions : ['«\xa0', '“']
66 Mot inconnu : hand =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | hand
66 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xcc, 0x07, EV_KEY, KEY_EDIT, 1},       /* "hand" */ | " => suggestions : ['\xa0»', '”']

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ |      => suggestions : ['']
67 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | kind_filtered
67 Mot inconnu : xe1 =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | xe1
67 Mot inconnu : x1c =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | x1c
67 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | ev_key
67 Mot inconnu : KEY_COFFEE =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | key_coffee
67 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ |       => suggestions : [' ']
67 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | " => suggestions : ['«\xa0', '“']
67 Mot inconnu : timer =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | timer
67 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xe1, 0x1c, EV_KEY, KEY_COFFEE, 1},     /* "timer" */ | " => suggestions : ['\xa0»', '”']

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ |      => suggestions : ['']
68 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | kind_filtered
68 Mot inconnu : xe5 =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | xe5
68 Mot inconnu : x20 =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | x20
68 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | ev_key
68 Mot inconnu : KEY_FRONT =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | key_front
68 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ |        => suggestions : [' ']
68 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | " => suggestions : ['«\xa0', '“']
68 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xe5, 0x20, EV_KEY, KEY_FRONT, 1},      /* "max" */ | " => suggestions : ['\xa0»', '”']

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ |      => suggestions : ['']
69 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ | kind_filtered
69 Mot inconnu : xe2 =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ | xe2
69 Mot inconnu : x1d =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ | x1d
69 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ | ev_key
69 Mot inconnu : KEY_LEFT =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ | key_left
69 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ |         => suggestions : [' ']
69 Mot inconnu : left =>     {KIND_FILTERED, 0xe2, 0x1d, EV_KEY, KEY_LEFT, 1},       /* left */ | left

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ |      => suggestions : ['']
70 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ | kind_filtered
70 Mot inconnu : xe4 =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ | xe4
70 Mot inconnu : x1f =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ | x1f
70 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ | ev_key
70 Mot inconnu : KEY_RIGHT =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ | key_right
70 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ |        => suggestions : [' ']
70 Mot inconnu : right =>     {KIND_FILTERED, 0xe4, 0x1f, EV_KEY, KEY_RIGHT, 1},      /* right */ | right

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ |      => suggestions : ['']
71 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ | kind_filtered
71 Mot inconnu : xe7 =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ | xe7
71 Mot inconnu : x22 =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ | x22
71 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ | ev_key
71 Mot inconnu : KEY_DOWN =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ | key_down
71 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ |         => suggestions : [' ']
71 Mot inconnu : down =>     {KIND_FILTERED, 0xe7, 0x22, EV_KEY, KEY_DOWN, 1},       /* down */ | down

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ |      => suggestions : ['']
72 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ | kind_filtered
72 Mot inconnu : xdf =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ | xdf
72 Mot inconnu : x1a =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ | x1a
72 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ | ev_key
72 Mot inconnu : KEY_UP =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ | key_up
72 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ |           => suggestions : [' ']
72 Mot inconnu : up =>     {KIND_FILTERED, 0xdf, 0x1a, EV_KEY, KEY_UP, 1},         /* up */ | up

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ |      => suggestions : ['']
73 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | kind_filtered
73 Mot inconnu : xe3 =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | xe3
73 Mot inconnu : x1e =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | x1e
73 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | ev_key
73 Mot inconnu : KEY_OK =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | key_ok
73 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ |           => suggestions : [' ']
73 Guillemets typographiques ouvrants. =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | " => suggestions : ['«\xa0', '“']
73 Guillemets typographiques fermants. =>     {KIND_FILTERED, 0xe3, 0x1e, EV_KEY, KEY_OK, 1},         /* "OK" */ | " => suggestions : ['\xa0»', '”']

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xce, 0x09, EV_KEY, KEY_VOLUMEDOWN, 1}, /* VOL + */ |      => suggestions : ['']
74 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xce, 0x09, EV_KEY, KEY_VOLUMEDOWN, 1}, /* VOL + */ | kind_filtered
74 Mot inconnu : xce =>     {KIND_FILTERED, 0xce, 0x09, EV_KEY, KEY_VOLUMEDOWN, 1}, /* VOL + */ | xce
74 Mot inconnu : x09 =>     {KIND_FILTERED, 0xce, 0x09, EV_KEY, KEY_VOLUMEDOWN, 1}, /* VOL + */ | x09
74 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xce, 0x09, EV_KEY, KEY_VOLUMEDOWN, 1}, /* VOL + */ | ev_key
74 Mot inconnu : KEY_VOLUMEDOWN =>     {KIND_FILTERED, 0xce, 0x09, EV_KEY, KEY_VOLUMEDOWN, 1}, /* VOL + */ | key_volumedown

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ |      => suggestions : ['']
75 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ | kind_filtered
75 Mot inconnu : xcd =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ | xcd
75 Mot inconnu : x08 =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ | x08
75 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ | ev_key
75 Mot inconnu : KEY_VOLUMEUP =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ | key_volumeup
75 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ |     => suggestions : [' ']
75 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     {KIND_FILTERED, 0xcd, 0x08, EV_KEY, KEY_VOLUMEUP, 1},   /* VOL - */ |  -  => suggestions : [' – ', ' — ', ' − ']

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ |      => suggestions : ['']
76 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ | kind_filtered
76 Mot inconnu : xcf =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ | xcf
76 Mot inconnu : x0a =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ | x0a
76 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ | ev_key
76 Mot inconnu : KEY_MUTE =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ | key_mute
76 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ |         => suggestions : [' ']
76 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xcf, 0x0a, EV_KEY, KEY_MUTE, 1},       /* MUTE  */ |    => suggestions : [' ']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ |      => suggestions : ['']
77 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ | kind_filtered
77 Mot inconnu : xd0 =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ | xd0
77 Mot inconnu : x0b =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ | x0b
77 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ | ev_key
77 Mot inconnu : KEY_CHANNELUP =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ | key_channelup
77 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xd0, 0x0b, EV_KEY, KEY_CHANNELUP, 1},  /* CH + */ |    => suggestions : [' ']

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ |      => suggestions : ['']
78 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ | kind_filtered
78 Mot inconnu : xd1 =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ | xd1
78 Mot inconnu : x0c =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ | x0c
78 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ | ev_key
78 Mot inconnu : KEY_CHANNELDOWN =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ | key_channeldown
78 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     {KIND_FILTERED, 0xd1, 0x0c, EV_KEY, KEY_CHANNELDOWN, 1},/* CH - */ |  -  => suggestions : [' – ', ' — ', ' − ']

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ |      => suggestions : ['']
79 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | kind_filtered
79 Mot inconnu : xec =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | xec
79 Mot inconnu : x27 =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | x27
79 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | ev_key
79 Mot inconnu : KEY_RECORD =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | key_record
79 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ |       => suggestions : [' ']
79 Pas d’espace après ce signe. =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | (  => suggestions : ['(']
79 Mot inconnu : red =>     {KIND_FILTERED, 0xec, 0x27, EV_KEY, KEY_RECORD, 1},     /* ( o) red */ | red

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ |      => suggestions : ['']
80 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ | kind_filtered
80 Mot inconnu : xea =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ | xea
80 Mot inconnu : x25 =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ | x25
80 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ | ev_key
80 Mot inconnu : KEY_PLAY =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ | key_play
80 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ |         => suggestions : [' ']
80 Pas d’espace après ce signe. =>     {KIND_FILTERED, 0xea, 0x25, EV_KEY, KEY_PLAY, 1},       /* ( >) */ | (  => suggestions : ['(']

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ |      => suggestions : ['']
81 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ | kind_filtered
81 Mot inconnu : xe9 =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ | xe9
81 Mot inconnu : x24 =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ | x24
81 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ | ev_key
81 Mot inconnu : KEY_REWIND =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ | key_rewind
81 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xe9, 0x24, EV_KEY, KEY_REWIND, 1},     /* (<<) */ |       => suggestions : [' ']

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ |      => suggestions : ['']
82 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ | kind_filtered
82 Mot inconnu : xeb =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ | xeb
82 Mot inconnu : x26 =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ | x26
82 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ | ev_key
82 Mot inconnu : KEY_FORWARD =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ | key_forward
82 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xeb, 0x26, EV_KEY, KEY_FORWARD, 1},    /* (>>) */ |      => suggestions : [' ']

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ |      => suggestions : ['']
83 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ | kind_filtered
83 Mot inconnu : xed =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ | xed
83 Mot inconnu : x28 =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ | x28
83 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ | ev_key
83 Mot inconnu : KEY_STOP =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ | key_stop
83 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xed, 0x28, EV_KEY, KEY_STOP, 1},       /* ([]) */ |         => suggestions : [' ']

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ |      => suggestions : ['']
84 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ | kind_filtered
84 Mot inconnu : xee =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ | xee
84 Mot inconnu : x29 =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ | x29
84 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ | ev_key
84 Mot inconnu : KEY_PAUSE =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ | key_pause
84 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xee, 0x29, EV_KEY, KEY_PAUSE, 1},      /* ('') */ |        => suggestions : [' ']

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ |      => suggestions : ['']
85 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ | kind_filtered
85 Mot inconnu : xf0 =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ | xf0
85 Mot inconnu : x2b =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ | x2b
85 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ | ev_key
85 Mot inconnu : KEY_PREVIOUS =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ | key_previous
85 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xf0, 0x2b, EV_KEY, KEY_PREVIOUS, 1},   /* (<-) */ |     => suggestions : [' ']

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ |      => suggestions : ['']
86 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ | kind_filtered
86 Mot inconnu : xef =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ | xef
86 Mot inconnu : x2a =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ | x2a
86 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ | ev_key
86 Mot inconnu : KEY_NEXT =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ | key_next
86 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xef, 0x2a, EV_KEY, KEY_NEXT, 1},       /* (>+) */ |         => suggestions : [' ']

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ |      => suggestions : ['']
87 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ | kind_filtered
87 Mot inconnu : xf2 =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ | xf2
87 Mot inconnu : x2D =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ | x2d
87 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ | ev_key
87 Mot inconnu : KEY_INFO =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ | key_info
87 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ |         => suggestions : [' ']
87 Mot inconnu : PLAYING =>     {KIND_FILTERED, 0xf2, 0x2D, EV_KEY, KEY_INFO, 1},       /* PLAYING */ | playing

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ |      => suggestions : ['']
88 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ | kind_filtered
88 Mot inconnu : xf3 =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ | xf3
88 Mot inconnu : x2E =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ | x2e
88 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ | ev_key
88 Mot inconnu : KEY_HOME =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ | key_home
88 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xf3, 0x2E, EV_KEY, KEY_HOME, 1},       /* TOP */ |         => suggestions : [' ']

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ |      => suggestions : ['']
89 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ | kind_filtered
89 Mot inconnu : xf4 =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ | xf4
89 Mot inconnu : x2F =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ | x2f
89 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ | ev_key
89 Mot inconnu : KEY_END =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ | key_end
89 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ |          => suggestions : [' ']
89 Mot inconnu : END =>     {KIND_FILTERED, 0xf4, 0x2F, EV_KEY, KEY_END, 1},        /* END */ | end

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ |      => suggestions : ['']
90 Mot inconnu : KIND_FILTERED =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ | kind_filtered
90 Mot inconnu : xf5 =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ | xf5
90 Mot inconnu : x30 =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ | x30
90 Mot inconnu : EV_KEY =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ | ev_key
90 Mot inconnu : KEY_SELECT =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ | key_select
90 Espace(s) surnuméraire(s) à supprimer. =>     {KIND_FILTERED, 0xf5, 0x30, EV_KEY, KEY_SELECT, 1},     /* SELECT */ |       => suggestions : [' ']

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     {KIND_END, 0x00, 0x00, EV_MAX + 1, 0, 0}</file> |      => suggestions : ['']
92 Mot inconnu : KIND_END =>     {KIND_END, 0x00, 0x00, EV_MAX + 1, 0, 0}</file> | kind_end
92 Mot inconnu : x00 =>     {KIND_END, 0x00, 0x00, EV_MAX + 1, 0, 0}</file> | x00
92 Mot inconnu : x00 =>     {KIND_END, 0x00, 0x00, EV_MAX + 1, 0, 0}</file> | x00
92 Mot inconnu : EV_MAX =>     {KIND_END, 0x00, 0x00, EV_MAX + 1, 0, 0}</file> | ev_max

96 Mot inconnu : KEY_1 => ex KEY_1 par KEY_KP1 | key_1
96 Mot inconnu : KEY_KP1 => ex KEY_1 par KEY_KP1 | key_kp1
102 Typographie : points de suspension. Utilisez le caractère dédié. => mais pour aller plus loin et configurer les touches TV; DVD; stop ; enregistrement etc ... j'utilise xev et Préférences/raccourcis claviers. | ... => suggestions : ['…']
102 Mot inconnu : xev => mais pour aller plus loin et configurer les touches TV; DVD; stop ; enregistrement etc ... j'utilise xev et Préférences/raccourcis claviers. | xev

104 Mot inconnu : keycodes => Or les keycodes du input.h du noyau et ceux indiqués par xev, ne sont pas forcément les mêmes: | keycodes
104 Mot inconnu : xev => Or les keycodes du input.h du noyau et ceux indiqués par xev, ne sont pas forcément les mêmes: | xev

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * pour la touche 1 du clavier numérique le input.h donne 79 comme keycode et xev donne 87! |    => suggestions : ['']
108 Élision de l’article devant un mot commençant par une voyelle. =>   * pour la touche 1 du clavier numérique le input.h donne 79 comme keycode et xev donne 87! | le  => suggestions : ['l’']
108 Mot inconnu : keycode =>   * pour la touche 1 du clavier numérique le input.h donne 79 comme keycode et xev donne 87! | keycode
108 Mot inconnu : xev =>   * pour la touche 1 du clavier numérique le input.h donne 79 comme keycode et xev donne 87! | xev

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 |    => suggestions : ['']
109 Guillemets typographiques ouvrants. =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | " => suggestions : ['«\xa0', '“']
109 Guillemets typographiques fermants. =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | " => suggestions : ['\xa0»', '”']
109 Guillemets typographiques ouvrants. =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | " => suggestions : ['«\xa0', '“']
109 Mot inconnu : super_L =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | super_l
109 Guillemets typographiques fermants. =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | " => suggestions : ['\xa0»', '”']
109 Élision de l’article devant un mot commençant par une voyelle. =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | le  => suggestions : ['l’']
109 Il manque un espace avant la parenthèse. =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | ( => suggestions : [' (']
109 Mot inconnu : KEY_LEFTMETA =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | key_leftmeta
109 Mot inconnu : xev =>   * de même pour la touche "windows" ou "super_L" le input.h donne 125(KEY_LEFTMETA) et xev donne 133 | xev

118 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *  __Votre clavier multimédia a des touches multimédia non configurées__  |    => suggestions : ['']
118 Mot inconnu : __Votre =>   *  __Votre clavier multimédia a des touches multimédia non configurées__  | __votre
118 Mot inconnu : configurées__ =>   *  __Votre clavier multimédia a des touches multimédia non configurées__  | configurées__
118 Espace(s) en fin de ligne à supprimer. =>   *  __Votre clavier multimédia a des touches multimédia non configurées__  |   => suggestions : ['']

121 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  Exemple: |   => suggestions : ['']

122 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

123 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  xev renvoie pour la touche FN + F5: |   => suggestions : ['']
123 Mot inconnu : xev =>  xev renvoie pour la touche FN + F5: | xev
123 Mot inconnu : FN =>  xev renvoie pour la touche FN + F5: | fn
123 Mot inconnu : F5 =>  xev renvoie pour la touche FN + F5: | f5

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

127 Mot inconnu : keycode => donc le keycode associé dans le fichier input.h est 156-8=148 donc KEY_PROG1 pour le noyau 2.6.35-22 | keycode
127 Mot inconnu : KEY_PROG1 => donc le keycode associé dans le fichier input.h est 156-8=148 donc KEY_PROG1 pour le noyau 2.6.35-22 | key_prog1

128 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

129 Mot inconnu : ati_remote => Il suffit alors de remplacer dans ati_remote.c : | ati_remote

133 Espace(s) en fin de ligne à supprimer. => par  |   => suggestions : ['']

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

137 Pas d’espace avant une virgule. => Enfin , nous voulons utiliser notre lecteur multimédia préféré:( vlc dans mon cas) pour la touche DVD de la télécommande |  , => suggestions : [',']
137 Pas d’espace après ce signe. => Enfin , nous voulons utiliser notre lecteur multimédia préféré:( vlc dans mon cas) pour la touche DVD de la télécommande | (  => suggestions : ['(']
137 Mot inconnu : vlc => Enfin , nous voulons utiliser notre lecteur multimédia préféré:( vlc dans mon cas) pour la touche DVD de la télécommande | vlc

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

139 Mot inconnu : vlc => Il suffit d'aller dans Préférences/raccourcis claviers et ajouter le lancement de vlc avec comme touche de raccourcis le keysym XF86Launch1 | vlc
139 Mot inconnu : keysym => Il suffit d'aller dans Préférences/raccourcis claviers et ajouter le lancement de vlc avec comme touche de raccourcis le keysym XF86Launch1 | keysym
139 Mot inconnu : XF86Launch1 => Il suffit d'aller dans Préférences/raccourcis claviers et ajouter le lancement de vlc avec comme touche de raccourcis le keysym XF86Launch1 | xf86launch1

141 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

142 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * __Votre clavier multimédia est parfaitement configuré:__ |    => suggestions : ['']
142 Mot inconnu : __Votre =>   * __Votre clavier multimédia est parfaitement configuré:__ | __votre
142 Il manque un espace. =>   * __Votre clavier multimédia est parfaitement configuré:__ | __ => suggestions : [' __']
142 Mot inconnu : __ =>   * __Votre clavier multimédia est parfaitement configuré:__ | __

144 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

145 Mot inconnu : keycode => Il faut donc chercher donc connaitre le keycode de la touche et keysim associé. | keycode
145 Mot inconnu : keysim => Il faut donc chercher donc connaitre le keycode de la touche et keysim associé. | keysim

148 Mot inconnu : keycode-keysim => vous donne la relation keycode-keysim; sinon xev fait normalement bien le travail | keycode-keysim
148 Mot inconnu : xev => vous donne la relation keycode-keysim; sinon xev fait normalement bien le travail | xev

149 Mot inconnu : keycode => On cherche alors la correspondance du keycode dans le fichier input.h (en retirant 8 dans le cas du noyau 2.6.35-22) | keycode

150 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

151 Mot inconnu : prédent => Voir l'exemple prédent pour la fin de la modification du ficher ati_remote.c | prédent
151 Incohérence avec “du” : “ficher” est un verbe. => Voir l'exemple prédent pour la fin de la modification du ficher ati_remote.c | ficher => suggestions : ['fiche', 'fiches']
151 Mot inconnu : ati_remote => Voir l'exemple prédent pour la fin de la modification du ficher ati_remote.c | ati_remote

152 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

159 Mot inconnu : intrepid => version intrepid et suivante: | intrepid

162 Mot inconnu : Makefile => voici le Makefile : | makefile

186 Mot inconnu : endif => endif</code> | endif

190 Mot inconnu : make => make</code> | make

192 Mot inconnu : intrepid => version intrepid et suivantes: | intrepid

195 Mot inconnu : make => make</code> | make

197 Mot inconnu : ati_remote => le pilote compilé est le fichier ati_remote.ko | ati_remote
197 Il manque un espace. => le pilote compilé est le fichier ati_remote.ko | ko => suggestions : [' ko']

200 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - enlever le pilote actuel déjà chargé | -  => suggestions : ['—\xa0', '–\xa0']

212 Mot inconnu : ati_remote => la commande se fait toujours dans le répertoire ou se situe le fichier ati_remote.ko | ati_remote
212 Il manque un espace. => la commande se fait toujours dans le répertoire ou se situe le fichier ati_remote.ko | ko => suggestions : [' ko']

219 Mot inconnu : intrepid => version intrepid et suivantes: | intrepid

227 Mot inconnu : backup => Si écraser le fichier vous fait hérisser les poils, il est possible de faire un backup du fichier avant de l'écraser. | backup

231 Conjugaison erronée. Accord avec “il”. Le verbe devrait être à la 3ᵉ personne du singulier. => Si votre voisin a eu la bonne idée d'acheter la même télécommande que vous, il se peux qu'il arrive à prendre le contrôle de votre ordinateur (et vous le contrôle du sien). Pour remédier à ce problème assez embêtant, il faut changer le canal de communication de la télécommande pour se distinguer de celle du voisin. | peux => suggestions : ['peut']

234 Guillemets typographiques ouvrants. => Pour cela, on appuie quelques secondes sur le bouton "main" de la télécommande jusqu'à ce que la LED de contrôle se mette à clignoter. Elle clignote autant de fois que le numéro du canal sur lequel est configuré la télécommande. Une fois que la LED cesse de clignoter, on rentre un nouveau canal (différent du voisin bien sûr) à l'aide des touches numériques (les canaux vont de 1 à 16, ne pas oublier de mettre le 0 si on choisi un canal de 1 à 9, ex : 07). On confirme le numéro en ré-appuyant sur le bouton "main". La LED clignote le nombre de fois correspondant au canal sélectionné pour confirmer. | " => suggestions : ['«\xa0', '“']
234 Guillemets typographiques fermants. => Pour cela, on appuie quelques secondes sur le bouton "main" de la télécommande jusqu'à ce que la LED de contrôle se mette à clignoter. Elle clignote autant de fois que le numéro du canal sur lequel est configuré la télécommande. Une fois que la LED cesse de clignoter, on rentre un nouveau canal (différent du voisin bien sûr) à l'aide des touches numériques (les canaux vont de 1 à 16, ne pas oublier de mettre le 0 si on choisi un canal de 1 à 9, ex : 07). On confirme le numéro en ré-appuyant sur le bouton "main". La LED clignote le nombre de fois correspondant au canal sélectionné pour confirmer. | " => suggestions : ['\xa0»', '”']
234 Conjugaison erronée. Accord avec “on”. Le verbe devrait être à la 3ᵉ personne du singulier. => Pour cela, on appuie quelques secondes sur le bouton "main" de la télécommande jusqu'à ce que la LED de contrôle se mette à clignoter. Elle clignote autant de fois que le numéro du canal sur lequel est configuré la télécommande. Une fois que la LED cesse de clignoter, on rentre un nouveau canal (différent du voisin bien sûr) à l'aide des touches numériques (les canaux vont de 1 à 16, ne pas oublier de mettre le 0 si on choisi un canal de 1 à 9, ex : 07). On confirme le numéro en ré-appuyant sur le bouton "main". La LED clignote le nombre de fois correspondant au canal sélectionné pour confirmer. | choisi => suggestions : ['choisit', 'choisissait']
234 Guillemets typographiques ouvrants. => Pour cela, on appuie quelques secondes sur le bouton "main" de la télécommande jusqu'à ce que la LED de contrôle se mette à clignoter. Elle clignote autant de fois que le numéro du canal sur lequel est configuré la télécommande. Une fois que la LED cesse de clignoter, on rentre un nouveau canal (différent du voisin bien sûr) à l'aide des touches numériques (les canaux vont de 1 à 16, ne pas oublier de mettre le 0 si on choisi un canal de 1 à 9, ex : 07). On confirme le numéro en ré-appuyant sur le bouton "main". La LED clignote le nombre de fois correspondant au canal sélectionné pour confirmer. | " => suggestions : ['«\xa0', '“']
234 Guillemets typographiques fermants. => Pour cela, on appuie quelques secondes sur le bouton "main" de la télécommande jusqu'à ce que la LED de contrôle se mette à clignoter. Elle clignote autant de fois que le numéro du canal sur lequel est configuré la télécommande. Une fois que la LED cesse de clignoter, on rentre un nouveau canal (différent du voisin bien sûr) à l'aide des touches numériques (les canaux vont de 1 à 16, ne pas oublier de mettre le 0 si on choisi un canal de 1 à 9, ex : 07). On confirme le numéro en ré-appuyant sur le bouton "main". La LED clignote le nombre de fois correspondant au canal sélectionné pour confirmer. | " => suggestions : ['\xa0»', '”']

237 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => Il faut ensuite procéder à la configuration du module. A partir de là, 2 choix s'offre a nous : soit on masque le canal du voisin, soit on autorise que le nôtre, tout dépend si on connaît le canal du voisin :p | a => suggestions : ['À']
237 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. => Il faut ensuite procéder à la configuration du module. A partir de là, 2 choix s'offre a nous : soit on masque le canal du voisin, soit on autorise que le nôtre, tout dépend si on connaît le canal du voisin :p | a => suggestions : ['à']
240 Mot inconnu : canal_voisin => Le calcul du masque est assez simple : 2^canal_voisin | canal_voisin
244 Accord de nombre erroné avec « 2 » : « canal » devrait être au pluriel. => Là aussi le calcul n'est pas beaucoup plus compliqué : 65535-(2^canal) | canal => suggestions : ['canaux']

251 Il manque un trait d’union. => Remplacez masque par le masque calculé juste au dessus. | au dessus => suggestions : ['au-dessus']

255 Mot inconnu : ok => Si tout est ok, il ne reste plus qu'à enregistrer le masque pour que le module soit chargé avec celui-ci au démarrage. Pour cela, éditer le fichier /etc/modprobe.d/options | ok

262 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A la fin du fichier, rajouter ceci | a => suggestions : ['À']

270 Mot inconnu : debug => Il est possible d'activer un mode debug pour voir les signaux capturés et ceux masqués à l'aide de la commande | debug

273 Mot inconnu : loggué => Tout sera alors loggué dans le fichier /var/log/syslog, pour l'afficher en temps réel, exécutez | loggué

281 Mot inconnu : LIRC => ===== Utiliser sa télécommande avec le programme LIRC ===== | lirc

283 Mot inconnu : Lirc => Lirc est un programme permettant de contrôler à l'aide d'une télécommande votre ordinateur. | lirc

285 Mot inconnu : Lirc => L'avantage de ce programme est qu'il peut s'adapter à presque toute vos envies. Son principal défaut est une installation complexe, voici la méthode la plus simple pour installer et configurer Lirc sur votre ordinateur. | lirc

287 Mot inconnu : lirc => Vous trouverez sur le wiki d'autres pages traitant de la configuration de lirc et notamment une page présentant les fichiers lircrc permettant de personnaliser l'utilisation de votre télécommande. | lirc
287 Mot inconnu : lircrc => Vous trouverez sur le wiki d'autres pages traitant de la configuration de lirc et notamment une page présentant les fichiers lircrc permettant de personnaliser l'utilisation de votre télécommande. | lircrc
289 Mot inconnu : festy => Remarque d'un lecteur : Vous trouverez [[http://blog.roozeec.fr/2007/04/18/telecommande-ati-remote-wonder-sous-ubuntu/|ici]] une page de blog qui m'a été très utile, testé avec succès sous festy. | festy

295 Mot inconnu : LIRC => On installe LIRC et ce qu'il faut pour compiler le module de notre télécommande : | lirc

298 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt://lirc|lirc]] |    => suggestions : ['']

299 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt://lirc-modules-source|lirc-modules-source]] |    => suggestions : ['']

300 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt://module-assistant|module-assistant]] |    => suggestions : ['']

309 Mot inconnu : Ok => Sur l'écran qui apparaît, cliquez sur **Ok** | ok

311 Mot inconnu : ecran => Dans l'ecran proposant de choisir le module lirc choisir : **atiusb** puis **Ok** | ecran
311 Mot inconnu : lirc => Dans l'ecran proposant de choisir le module lirc choisir : **atiusb** puis **Ok** | lirc
311 Mot inconnu : atiusb => Dans l'ecran proposant de choisir le module lirc choisir : **atiusb** puis **Ok** | atiusb
311 Mot inconnu : Ok => Dans l'ecran proposant de choisir le module lirc choisir : **atiusb** puis **Ok** | ok

313 Mot inconnu : Install => Répondre **No** sur l'écran suivant puis **Install the package maintener version** et **Ok** | install
313 Mot inconnu : the => Répondre **No** sur l'écran suivant puis **Install the package maintener version** et **Ok** | the
313 Mot inconnu : maintener => Répondre **No** sur l'écran suivant puis **Install the package maintener version** et **Ok** | maintener
313 Mot inconnu : Ok => Répondre **No** sur l'écran suivant puis **Install the package maintener version** et **Ok** | ok

330 Mot inconnu : sudo => sudo depmod -a</code> | sudo
330 Mot inconnu : depmod => sudo depmod -a</code> | depmod
330 Il manque un espace à côté du tiret. => sudo depmod -a</code> |  - => suggestions : [' – ', ' — ']

334 Mot inconnu : ati_remote => ==== Suppression du module ati_remote ==== | ati_remote

336 Mot inconnu : ati_remote => On empêche le chargement du module (pilote) ati_remote : | ati_remote

342 Mot inconnu : blacklist => blacklist ati_remote</code> | blacklist
342 Mot inconnu : ati_remote => blacklist ati_remote</code> | ati_remote

354 Mot inconnu : lirc => Pour lancer lirc au démarrage de Gnome : | lirc

358 Mot inconnu : irexec => et ajouter irexec | irexec

360 Guillemets typographiques ouvrants. => Ensuite reste le plus "facile" configurer les programmes pour utiliser notre télécommande. | " => suggestions : ['«\xa0', '“']
360 Guillemets typographiques fermants. => Ensuite reste le plus "facile" configurer les programmes pour utiliser notre télécommande. | " => suggestions : ['\xa0»', '”']

372 Accord de nombre erroné : « touche » devrait être au pluriel. => Lors de l'appui sur une des touche de votre télécommande le Terminal doit vous signaler un evenement. | touche => suggestions : ['touches']
372 Mot inconnu : evenement => Lors de l'appui sur une des touche de votre télécommande le Terminal doit vous signaler un evenement. | evenement

378 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://blog.roozeec.fr/2007/04/18/telecommande-ati-remote-wonder-sous-ubuntu/|Tutoriel très utile pour paramétrer les touches]] |    => suggestions : ['']
