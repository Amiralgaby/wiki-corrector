
5 Mot inconnu : KMLDonkey => ======KMLDonkey : le client eDonkey pour KDE====== | kmldonkey
5 Mot inconnu : eDonkey => ======KMLDonkey : le client eDonkey pour KDE====== | edonkey
5 Mot inconnu : KDE => ======KMLDonkey : le client eDonkey pour KDE====== | kde

11 Mot inconnu : KMLDonkey => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | kmldonkey
11 Mot inconnu : core => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | core
11 Mot inconnu : MLDonkey => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | mldonkey
11 Mot inconnu : MLDonkey => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | mldonkey
11 Mot inconnu : eDonkey => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | edonkey
11 Mot inconnu : Overnet => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | overnet
11 Mot inconnu : KMLDonkey => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | kmldonkey
11 Mot inconnu : MLDonkey => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | mldonkey
11 Mot inconnu : aMule => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | amule
11 Mot inconnu : KTorrent => **KMLDonkey** est une interface graphique pour le noyau (core) **MLDonkey**. MLDonkey est un démon permettant de partager des fichiers sur les réseaux peer-to-peer eDonkey, Overnet, etc. KMLDonkey/MLDonkey est différent des autres clients de réseaux P2P tels que aMule ou KTorrent car l'interface graphique et le logiciel d'échange sont séparés. | ktorrent

13 Mot inconnu : MLDonkey => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | mldonkey
13 Guillemets typographiques ouvrants. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | '' => suggestions : ['«\xa0', '“']
13 Mot inconnu : mlnet => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | mlnet
13 Guillemets typographiques fermants. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | '' => suggestions : ['\xa0»', '”']
13 Il manque les traits d’union. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | c'est à dire => suggestions : ['c’est-à-dire']
13 Mot inconnu : Mlnet => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | mlnet
13 Mot inconnu : core => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | core
13 Espace(s) surnuméraire(s) à supprimer. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  |    => suggestions : [' ']
13 Mot inconnu : eDonkey => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | edonkey
13 Mot inconnu : Overnet => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | overnet
13 Accord de nombre erroné : « autre » devrait être au pluriel. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | autre => suggestions : ['autres']
13 Mot inconnu : FastTrack => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | fasttrack
13 Mot inconnu : Gnutella => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | gnutella
13 Typographie : points de suspension. Utilisez le caractère dédié. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  | ... => suggestions : ['…']
13 Pas d’espace avant un point. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  |  . => suggestions : ['.']
13 Espace(s) en fin de ligne à supprimer. => Le noyau MLDonkey ou ''mlnet'' est léger, performant et consomme très peu de ressources. C'est un "**démon**", c'est à dire qu'il peut tourner en tâche de fond, indépendamment de tout environnement graphique (par exemple sur un serveur). Mlnet est appelé **noyau** ou **core**.  Il supporte les réseaux peer-to-peer eDonkey, Overnet et est encore expérimental pour les autre réseaux (Torrent, FastTrack, Gnutella ...). .  |   => suggestions : ['']

15 Mot inconnu : KMLDonkey => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kmldonkey
15 Mot inconnu : intègrant => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | intègrant
15 Mot inconnu : KDE => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kde
15 Mot inconnu : KMLDonkey => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kmldonkey
15 Mot inconnu : mlnet => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | mlnet
15 Mot inconnu : MLDonkey => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | mldonkey
15 Mot inconnu : mlnet => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | mlnet
15 Mot inconnu : KMLDonkey => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kmldonkey
15 Mot inconnu : KDE => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kde
15 Mot inconnu : KTorrent => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | ktorrent
15 Typographie : points de suspension. Utilisez le caractère dédié. => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | ... => suggestions : ['…']
15 Mot inconnu : KMLDonkey => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kmldonkey
15 Mot inconnu : eDonkey2000 => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | edonkey2000
15 Mot inconnu : Overnet => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | overnet
15 Mot inconnu : Kad => KMLDonkey est une interface graphique écrite avec Qt et s'intègrant à KDE. KMLDonkey permet de communiquer plus facilement avec mlnet mais n'est pas nécessaire à son fonctionnement. Il existe d'autres interfaces pour MLDonkey/mlnet ([[http://sancho.awardspace.com/|Sancho]], [[http://mldonkey.sourceforge.net/Gui|Mldonkey-gui]], via [[http://www.commentcamarche.net/contents/utile/telnet.php3|telnet]] et par un navigateur Web…). KMLDonkey permet de consulter un ou plusieurs noyaux y compris des noyaux s'exécutant sur d'autres ordinateurs (par exemple sur un serveur). Des clients KDE performants ayant été développés pour les autres réseaux P2P ([[KTorrent]], [[http://forum.ubuntu-fr.org/viewtopic.php?id=4666|Apollon]], [[http://wxdcgui.sourceforge.net/|Valknut]] ...), nous nous concentrerons ici sur l'utilisation de KMLDonkey pour les réseaux eDonkey2000, Overnet et Kad. | kad

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée. |    => suggestions : ['']

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  <note>KMLDonkey n'est plus disponible dans les dépôts officiels depuis [[focal|Ubuntu 20.04]]((https://packages.ubuntu.com/search?suite=default&section=all&arch=any&searchon=names&keywords=kmldonkey)).</note> |   => suggestions : ['']
24 Mot inconnu : KMLDonkey =>  <note>KMLDonkey n'est plus disponible dans les dépôts officiels depuis [[focal|Ubuntu 20.04]]((https://packages.ubuntu.com/search?suite=default&section=all&arch=any&searchon=names&keywords=kmldonkey)).</note> | kmldonkey

28 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

34 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Serveurs** : Ici sont listés les serveurs disponibles. Vous pouvez choisir d'afficher seulement les serveurs auxquels mlnet est connecté. |    => suggestions : ['']
34 Mot inconnu : mlnet =>   * **Serveurs** : Ici sont listés les serveurs disponibles. Vous pouvez choisir d'afficher seulement les serveurs auxquels mlnet est connecté. | mlnet

35 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Recherche** : Vous pouvez chercher des fichiers à télécharger, en définissant des critères. En raison d'un bug de KMLDonkey, des résultats de recherche apparaissent plusieurs fois. |    => suggestions : ['']
35 Mot inconnu : KMLDonkey =>   * **Recherche** : Vous pouvez chercher des fichiers à télécharger, en définissant des critères. En raison d'un bug de KMLDonkey, des résultats de recherche apparaissent plusieurs fois. | kmldonkey

36 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Téléchargements** : Liste de vos fichiers en cours de téléchargement. |    => suggestions : ['']

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Envois** : Liste de vos fichiers dans le répertoire ''/incoming'' |    => suggestions : ['']
37 Mot inconnu : incoming =>   * **Envois** : Liste de vos fichiers dans le répertoire ''/incoming'' | incoming
37 Guillemets typographiques fermants. =>   * **Envois** : Liste de vos fichiers dans le répertoire ''/incoming'' | '' => suggestions : ['\xa0»', '”']

38 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Statistiques** : Évolution des débits, ainsi que statistiques sur les clients rencontrés sur le réseau. |    => suggestions : ['']

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Console** : Console telnet, permettant de dialoguer directement avec mlnet au moyen de commandes. La liste des commandes est donnée [[http://mldonkey.sourceforge.net/MLdonkeyCommandsExplained|ici]]. |    => suggestions : ['']
39 Mot inconnu : telnet =>   * **Console** : Console telnet, permettant de dialoguer directement avec mlnet au moyen de commandes. La liste des commandes est donnée [[http://mldonkey.sourceforge.net/MLdonkeyCommandsExplained|ici]]. | telnet
39 Mot inconnu : mlnet =>   * **Console** : Console telnet, permettant de dialoguer directement avec mlnet au moyen de commandes. La liste des commandes est donnée [[http://mldonkey.sourceforge.net/MLdonkeyCommandsExplained|ici]]. | mlnet

41 Mot inconnu : KMLDonkey => Au premier lancement de KMLDonkey, un assistant de configuration s'affichera : | kmldonkey

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Entrez le répertoire de travail défini précédemment. ~/.mldonkey |    => suggestions : ['']
42 Mot inconnu : mldonkey =>   * Entrez le répertoire de travail défini précédemment. ~/.mldonkey | mldonkey

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Entrez le chemin vers l'exécutable mlnet. Si vous l'avez installé par le paquet ''mldonkey-server'', ce sera probablement ''/usr/bin/mlnet''. |    => suggestions : ['']
43 Mot inconnu : mlnet =>   * Entrez le chemin vers l'exécutable mlnet. Si vous l'avez installé par le paquet ''mldonkey-server'', ce sera probablement ''/usr/bin/mlnet''. | mlnet
43 Guillemets typographiques ouvrants. =>   * Entrez le chemin vers l'exécutable mlnet. Si vous l'avez installé par le paquet ''mldonkey-server'', ce sera probablement ''/usr/bin/mlnet''. | '' => suggestions : ['«\xa0', '“']
43 Mot inconnu : mldonkey-server =>   * Entrez le chemin vers l'exécutable mlnet. Si vous l'avez installé par le paquet ''mldonkey-server'', ce sera probablement ''/usr/bin/mlnet''. | mldonkey-server
43 Guillemets typographiques fermants. =>   * Entrez le chemin vers l'exécutable mlnet. Si vous l'avez installé par le paquet ''mldonkey-server'', ce sera probablement ''/usr/bin/mlnet''. | '' => suggestions : ['\xa0»', '”']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Choisissez si vous voulez démarrer le noyau mlnet au lancement de KDE, ou si il sera démarré au lancement de KMLDonkey. |    => suggestions : ['']
44 Mot inconnu : mlnet =>   * Choisissez si vous voulez démarrer le noyau mlnet au lancement de KDE, ou si il sera démarré au lancement de KMLDonkey. | mlnet
44 Mot inconnu : KDE =>   * Choisissez si vous voulez démarrer le noyau mlnet au lancement de KDE, ou si il sera démarré au lancement de KMLDonkey. | kde
44 Il faut élider “si” et l’accoler au pronom. =>   * Choisissez si vous voulez démarrer le noyau mlnet au lancement de KDE, ou si il sera démarré au lancement de KMLDonkey. | si  => suggestions : ['s’']
44 Mot inconnu : KMLDonkey =>   * Choisissez si vous voulez démarrer le noyau mlnet au lancement de KDE, ou si il sera démarré au lancement de KMLDonkey. | kmldonkey

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Choisissez un nom pour votre core MLDonkey |    => suggestions : ['']
45 Mot inconnu : core =>   * Choisissez un nom pour votre core MLDonkey | core
45 Mot inconnu : MLDonkey =>   * Choisissez un nom pour votre core MLDonkey | mldonkey

51 Mot inconnu : KMLDonkey => ====Connexion de KMLDonkey au noyau==== | kmldonkey

52 Mot inconnu : KMLDonkey => KMLDonkey est maintenant lancé. Si il n'est pas connecté au noyau, cliquez sur //Fichier -> Se connecter à la base// puis le nom de votre noyau. | kmldonkey
52 Il faut élider “si” et l’accoler au pronom. => KMLDonkey est maintenant lancé. Si il n'est pas connecté au noyau, cliquez sur //Fichier -> Se connecter à la base// puis le nom de votre noyau. | si  => suggestions : ['S’']

54 Mot inconnu : Connected => La barre d'état doit maintenant afficher **Connected admin@localhost (nom_de_votre_noyau**) | connected
54 Mot inconnu : nom_de_votre_noyau => La barre d'état doit maintenant afficher **Connected admin@localhost (nom_de_votre_noyau**) | nom_de_votre_noyau

56 Mot inconnu : core => Configuration par défaut pour se connecter au core: | core
57 Mot inconnu : localhost => adresse: 127.0.0.1 ou localhost | localhost

60 Mot inconnu : Username => Username: admin | username

61 Mot inconnu : Password => Password:  | password
61 Espace(s) en fin de ligne à supprimer. => Password:  |   => suggestions : ['']

62 Mot inconnu : Path => Path to mlnet: /usr/bin/mlnet | path
62 Mot inconnu : to => Path to mlnet: /usr/bin/mlnet | to
62 Mot inconnu : mlnet => Path to mlnet: /usr/bin/mlnet | mlnet

63 Mot inconnu : Donkey => Donkey root: ~/.mldonkey | donkey
63 Mot inconnu : root => Donkey root: ~/.mldonkey | root
63 Mot inconnu : mldonkey => Donkey root: ~/.mldonkey | mldonkey

69 Mot inconnu : KMLDonkey => Une fois KMLDonkey lancé, allez dans l'onglet //Console// et tapez la commande ''portinfo''. Vous obtiendrez une réponse de ce type : | kmldonkey
69 Guillemets typographiques ouvrants. => Une fois KMLDonkey lancé, allez dans l'onglet //Console// et tapez la commande ''portinfo''. Vous obtiendrez une réponse de ce type : | '' => suggestions : ['«\xa0', '“']
69 Mot inconnu : portinfo => Une fois KMLDonkey lancé, allez dans l'onglet //Console// et tapez la commande ''portinfo''. Vous obtiendrez une réponse de ce type : | portinfo
69 Guillemets typographiques fermants. => Une fois KMLDonkey lancé, allez dans l'onglet //Console// et tapez la commande ''portinfo''. Vous obtiendrez une réponse de ce type : | '' => suggestions : ['\xa0»', '”']

79 Mot inconnu : Donkey => Donkey | 12071 | kademlia_port UDP</code> | donkey
79 Formatage des grands nombres. => Donkey | 12071 | kademlia_port UDP</code> | 12071 => suggestions : ['12\xa0071']
79 Mot inconnu : kademlia_port => Donkey | 12071 | kademlia_port UDP</code> | kademlia_port
79 Mot inconnu : UDP => Donkey | 12071 | kademlia_port UDP</code> | udp

80 Mot inconnu : TCP => Vous avez les ports TCP et UDP correspondants à chaque protocole (Kad utilise le même TCP que eDonkey). Veillez à les ouvrir sur votre pare-feu ou routeur. | tcp
80 Mot inconnu : UDP => Vous avez les ports TCP et UDP correspondants à chaque protocole (Kad utilise le même TCP que eDonkey). Veillez à les ouvrir sur votre pare-feu ou routeur. | udp
80 Mot inconnu : Kad => Vous avez les ports TCP et UDP correspondants à chaque protocole (Kad utilise le même TCP que eDonkey). Veillez à les ouvrir sur votre pare-feu ou routeur. | kad
80 Mot inconnu : TCP => Vous avez les ports TCP et UDP correspondants à chaque protocole (Kad utilise le même TCP que eDonkey). Veillez à les ouvrir sur votre pare-feu ou routeur. | tcp
80 Mot inconnu : eDonkey => Vous avez les ports TCP et UDP correspondants à chaque protocole (Kad utilise le même TCP que eDonkey). Veillez à les ouvrir sur votre pare-feu ou routeur. | edonkey

85 Élision de l’article devant un mot commençant par une voyelle. => ===Importer les téléchargements en cours de aMule/eMule/eDonkey=== | de  => suggestions : ['d’']
85 Mot inconnu : aMule => ===Importer les téléchargements en cours de aMule/eMule/eDonkey=== | amule
85 Mot inconnu : eMule => ===Importer les téléchargements en cours de aMule/eMule/eDonkey=== | emule
85 Mot inconnu : eDonkey => ===Importer les téléchargements en cours de aMule/eMule/eDonkey=== | edonkey

86 Mot inconnu : KMLDonkey => Allez dans la console de KMLDonkey, et tapez la commande | kmldonkey

88 Mot inconnu : aMule => où ~/.aMule/Temp est le répertoire des dossiers temporaires de aMule. | amule
88 Mot inconnu : Temp => où ~/.aMule/Temp est le répertoire des dossiers temporaires de aMule. | temp
88 Élision de l’article devant un mot commençant par une voyelle. => où ~/.aMule/Temp est le répertoire des dossiers temporaires de aMule. | de  => suggestions : ['d’']
88 Mot inconnu : aMule => où ~/.aMule/Temp est le répertoire des dossiers temporaires de aMule. | amule

90 Mot inconnu : Verify => Les fichiers apparaîtront dans votre liste de téléchargements, avec des pourcentages erronés. Faites un clic droit sur chacun des fichiers, et sélectionnez //Verify chunks//. Laissez mouliner quelques minutes pendant que le fichier est reconstruit (les parties en cours de téléchargement sont perdues). | verify
90 Mot inconnu : chunks => Les fichiers apparaîtront dans votre liste de téléchargements, avec des pourcentages erronés. Faites un clic droit sur chacun des fichiers, et sélectionnez //Verify chunks//. Laissez mouliner quelques minutes pendant que le fichier est reconstruit (les parties en cours de téléchargement sont perdues). | chunks
92 Mot inconnu : __déplacés__ => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | __déplacés__
92 Élision de l’article devant un mot commençant par une voyelle. => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | de  => suggestions : ['d’']
92 Mot inconnu : aMule => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | amule
92 Mot inconnu : KMLDonkey => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | kmldonkey
92 Mot inconnu : aMule => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | amule
92 Mot inconnu : aMule => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | amule
92 Mot inconnu : Temp => **Attention : lors de l'importation, les fichiers sont __déplacés__ depuis le répertoire de aMule.** Si vous voulez seulement tester KMLDonkey et éventuellement reprendre les téléchargements avec aMule, faites une copie du répertoire ~/.aMule/Temp et lancez l'importation sur le répertoire-copie. | temp

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']
102 Il manque un espace. => //Contributeurs : [[utilisateurs:xabilon]]// | xabilon => suggestions : [' xabilon']

104 Mot inconnu : KMLDonkey => //Basé sur le [[http://mldonkey.sourceforge.net/Main_Page|Manuel de KMLDonkey (eng)]]// | kmldonkey
104 Mot inconnu : eng => //Basé sur le [[http://mldonkey.sourceforge.net/Main_Page|Manuel de KMLDonkey (eng)]]// | eng
