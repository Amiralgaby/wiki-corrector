
5 Mot inconnu : Irssi => ====== Irssi ====== | irssi

13 Mot inconnu : Irssi => Comme la plupart des applications sous Linux Irssi se configure via l'édition d'un fichier texte. | irssi

20 Mot inconnu : Irssi => Irssi se lance dans un [[terminal|terminal]], via la commande : | irssi

22 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   irssi |    => suggestions : ['']
22 Mot inconnu : irssi =>   irssi | irssi

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Tout au dessus : Le sujet de la salle de discussion où vous vous trouvez actuellement. |    => suggestions : ['']
25 Il manque un trait d’union. =>   * Tout au dessus : Le sujet de la salle de discussion où vous vous trouvez actuellement. | au dessus => suggestions : ['au-dessus']

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * L'écran de dialogue proprement dit. |    => suggestions : ['']

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La barre de statut, tout en bas ((Il y'a, chez moi, une deuxième barre pour [[Screen]].)). |    => suggestions : ['']
27 Ni apostrophe ni trait d’union après “y”. =>   * La barre de statut, tout en bas ((Il y'a, chez moi, une deuxième barre pour [[Screen]].)). | y'a => suggestions : ['y a']
27 Mot inconnu : y'a =>   * La barre de statut, tout en bas ((Il y'a, chez moi, une deuxième barre pour [[Screen]].)). | y'a
27 Mot inconnu : Screen =>   * La barre de statut, tout en bas ((Il y'a, chez moi, une deuxième barre pour [[Screen]].)). | screen

34 Mot inconnu : IRC => |Se connecter à son premier serveur IRC.|<code bash>/connect irc.votreserveur.tld</code>| | irc

37 Mot inconnu : irssi => |Quitter irssi.|<code bash>/quit</code>| | irssi

38 Guillemets typographiques ouvrants. => |Afficher le 'Topic' (sujet de la salle où vous vous trouvez).|<code bash>/topic</code>| | ' => suggestions : ['“', '‘', '‹']
38 Mot inconnu : Topic => |Afficher le 'Topic' (sujet de la salle où vous vous trouvez).|<code bash>/topic</code>| | topic
38 Guillemets typographiques fermants. => |Afficher le 'Topic' (sujet de la salle où vous vous trouvez).|<code bash>/topic</code>| | ' => suggestions : ['”', '’', '›']

39 Mot inconnu : Irssi => |Affiche les noms des personnes dans la salle ((Il existe un script qui //tente// de faire une barre latérale pour Irssi http://wouter.coekaerts.be/site/irssi/nicklist.)).|<code bash>/names</code>| | irssi
41 Mot inconnu : Previous => |Se déplacer dans les différentes fenêtres.| **CTRL P**  : pour Previous, précédent **CTRL N** : pour Next, suivant ALT x : où x est le numéro de la fenêtre que vous voulez afficher((**ALT SHIFT** & : pour revenir aux messages serveurs.)).| | previous
41 Mot inconnu : Next => |Se déplacer dans les différentes fenêtres.| **CTRL P**  : pour Previous, précédent **CTRL N** : pour Next, suivant ALT x : où x est le numéro de la fenêtre que vous voulez afficher((**ALT SHIFT** & : pour revenir aux messages serveurs.)).| | next
41 Il manque un espace avant la parenthèse. => |Se déplacer dans les différentes fenêtres.| **CTRL P**  : pour Previous, précédent **CTRL N** : pour Next, suivant ALT x : où x est le numéro de la fenêtre que vous voulez afficher((**ALT SHIFT** & : pour revenir aux messages serveurs.)).| | ( => suggestions : [' (']
41 Mot inconnu : SHIFT => |Se déplacer dans les différentes fenêtres.| **CTRL P**  : pour Previous, précédent **CTRL N** : pour Next, suivant ALT x : où x est le numéro de la fenêtre que vous voulez afficher((**ALT SHIFT** & : pour revenir aux messages serveurs.)).| | shift

42 Guillemets typographiques ouvrants. => |Passer en 'non disponible' (away)((Les messages où vous êtes nommés seront copiés dans la fenêtre statut du serveur.)).| <code bash>/away [raison]</code>| | ' => suggestions : ['“', '‘', '‹']
42 Guillemets typographiques fermants. => |Passer en 'non disponible' (away)((Les messages où vous êtes nommés seront copiés dans la fenêtre statut du serveur.)).| <code bash>/away [raison]</code>| | ' => suggestions : ['”', '’', '›']

43 Guillemets typographiques ouvrants. => | Redevenir 'disponible'.|<code bash>/back</code>| | ' => suggestions : ['“', '‘', '‹']

44 Élision de l’article devant un mot commençant par une voyelle. => |Permet de voir si la machine d'un utilisateur est connectée au serveur, par exemple celui de irc.libera.chat, et de voir son temps de réponse.|<code bash>/ping</code>| | de  => suggestions : ['d’']

47 Mot inconnu : channels => | Affiche la liste des channels de l'ircnet sélectionné.|<code bash>/list</code>| | channels
47 Mot inconnu : ircnet => | Affiche la liste des channels de l'ircnet sélectionné.|<code bash>/list</code>| | ircnet

49 Mot inconnu : nick => | Met en couleur le nick de la personne qui prononce le mot.|<code bash>/hilight mot</code>| | nick

56 Élision de l’article devant un mot commençant par une voyelle. => Pour exécuter des commandes automatiquement au démarrage de irssi, il s'agit de copier les commandes en question dans le fichier startup(('/' n'est pas nécessaire ;-).)) que vous pouvez créer en saisissant dans un [[terminal|terminal]]:<code bash>touch ~/.irssi/startup</code> | de  => suggestions : ['d’']
56 Il manque un espace avant la parenthèse. => Pour exécuter des commandes automatiquement au démarrage de irssi, il s'agit de copier les commandes en question dans le fichier startup(('/' n'est pas nécessaire ;-).)) que vous pouvez créer en saisissant dans un [[terminal|terminal]]:<code bash>touch ~/.irssi/startup</code> | ( => suggestions : [' (']

62 Mot inconnu : Irssi => ===== Configuration de Irssi ===== | irssi

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>Ligne dans le fichier de configuration ~/.irssi/config.</file> |    => suggestions : ['']
65 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>Ligne dans le fichier de configuration ~/.irssi/config.</file> |  -  => suggestions : [' – ', ' — ', ' − ']
65 Mot inconnu : irssi =>   - <file bash>Ligne dans le fichier de configuration ~/.irssi/config.</file> | irssi

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>Les commandes équivalentes (à saisir dans votre client IRC Irssi).</code> |      => suggestions : ['']
67 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>Les commandes équivalentes (à saisir dans votre client IRC Irssi).</code> |  -  => suggestions : [' – ', ' — ', ' − ']

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   |    => suggestions : ['']
71 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   |  -  => suggestions : [' – ', ' — ', ' − ']
71 Guillemets typographiques ouvrants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['«\xa0', '“']
71 Mot inconnu : fe-common =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | fe-common
71 Mot inconnu : core =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | core
71 Guillemets typographiques fermants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['\xa0»', '”']
71 Mot inconnu : theme =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | theme
71 Guillemets typographiques ouvrants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['«\xa0', '“']
71 Mot inconnu : fear2 =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | fear2
71 Mot inconnu : theme =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | theme
71 Guillemets typographiques fermants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['\xa0»', '”']
71 Mot inconnu : term_charset =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | term_charset
71 Guillemets typographiques ouvrants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['«\xa0', '“']
71 Guillemets typographiques fermants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['\xa0»', '”']
71 Mot inconnu : autolog =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | autolog
71 Guillemets typographiques ouvrants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['«\xa0', '“']
71 Mot inconnu : yes =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | yes
71 Guillemets typographiques fermants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['\xa0»', '”']
71 Mot inconnu : completion_strict =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | completion_strict
71 Guillemets typographiques ouvrants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['«\xa0', '“']
71 Mot inconnu : yes =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | yes
71 Guillemets typographiques fermants. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   | " => suggestions : ['\xa0»', '”']
71 Espace(s) en fin de ligne à supprimer. =>   - <file bash>"fe-common/core" = { theme = "fear2.theme"; term_charset = "UTF-8"; autolog = "yes"; completion_strict = "yes"; };</file>   |    => suggestions : ['']

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set term_charset utf-8</code> |      => suggestions : ['']
73 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set term_charset utf-8</code> |  -  => suggestions : [' – ', ' — ', ' − ']

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  |    => suggestions : ['']
74 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
74 Mot inconnu : settings =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | settings
74 Mot inconnu : core =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | core
74 Mot inconnu : real_name =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | real_name
74 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['«\xa0', '“']
74 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['\xa0»', '”']
74 Mot inconnu : user_name =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | user_name
74 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['«\xa0', '“']
74 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['\xa0»', '”']
74 Mot inconnu : nick =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | nick
74 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['«\xa0', '“']
74 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['\xa0»', '”']
74 Mot inconnu : timestamp_format =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | timestamp_format
74 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | d => suggestions : [' D']
74 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | h => suggestions : [' H']
74 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | m => suggestions : [' M']
74 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | s => suggestions : [' S']
74 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['\xa0»', '”']
74 Mot inconnu : server_reconnect_time =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | server_reconnect_time
74 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['«\xa0', '“']
74 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  | " => suggestions : ['\xa0»', '”']
74 Espace(s) en fin de ligne à supprimer. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; timestamp_format = "%D %H:%M:%S"; server_reconnect_time = "1min"};</file>  |   => suggestions : ['']

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/nick votre_pseudonyme</code> |      => suggestions : ['']
76 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/nick votre_pseudonyme</code> |  -  => suggestions : [' – ', ' — ', ' − ']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  |    => suggestions : ['']
77 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
77 Mot inconnu : channels =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | channels
77 Pas d’espace après ce signe. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | (  => suggestions : ['(']
77 Mot inconnu : name =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | name
77 Guillemets typographiques fermants. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | " => suggestions : ['\xa0»', '”']
77 Mot inconnu : chatnet =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | chatnet
77 Guillemets typographiques ouvrants. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | " => suggestions : ['«\xa0', '“']
77 Mot inconnu : Libera =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | libera
77 Guillemets typographiques fermants. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | " => suggestions : ['\xa0»', '”']
77 Mot inconnu : autojoin =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | autojoin
77 Guillemets typographiques ouvrants. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | " => suggestions : ['«\xa0', '“']
77 Guillemets typographiques fermants. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  | " => suggestions : ['\xa0»', '”']
77 Pas d’espace avant ce signe. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  |  ) => suggestions : [')']
77 Espace(s) en fin de ligne à supprimer. =>   - <file bash>channels = ( { name = "#ubuntu-fr"; chatnet = "Libera"; autojoin = "Yes"; } );</file>  |   => suggestions : ['']

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/channel add -auto #ubuntu-fr Libera</code> |      => suggestions : ['']
79 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/channel add -auto #ubuntu-fr Libera</code> |  -  => suggestions : [' – ', ' — ', ' − ']

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |    => suggestions : ['']
80 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
80 Mot inconnu : servers =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | servers
80 Pas d’espace après ce signe. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | (  => suggestions : ['(']
80 Mot inconnu : address =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | address
80 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
80 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
80 Mot inconnu : chatnet =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | chatnet
80 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
80 Mot inconnu : Libera =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | libera
80 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
80 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
80 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
80 Mot inconnu : autoconnect =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | autoconnect
80 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
80 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | yes
80 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
80 Mot inconnu : term_type =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | term_type
80 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
80 Mot inconnu : utf-8 =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | utf-8
80 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
80 Pas d’espace avant ce signe. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |  ) => suggestions : [')']
80 Espace(s) en fin de ligne à supprimer. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |   => suggestions : ['']

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/server add -auto -network Libera -port 6667 irc.libera.chat</code> |      => suggestions : ['']
82 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/server add -auto -network Libera -port 6667 irc.libera.chat</code> |  -  => suggestions : [' – ', ' — ', ' − ']

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |    => suggestions : ['']
83 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
83 Mot inconnu : servers =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | servers
83 Pas d’espace après ce signe. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | (  => suggestions : ['(']
83 Mot inconnu : address =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | address
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Mot inconnu : chatnet =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | chatnet
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : Libera =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | libera
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Mot inconnu : use_ssl =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | use_ssl
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | yes
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Mot inconnu : ssl_verify =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | ssl_verify
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | yes
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Mot inconnu : ssl_capath =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | ssl_capath
83 Mot inconnu : autoconnect =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | autoconnect
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | yes
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Mot inconnu : term_type =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | term_type
83 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : utf-8 =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | utf-8
83 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  | " => suggestions : ['\xa0»', '”']
83 Pas d’espace avant ce signe. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |  ) => suggestions : [')']
83 Espace(s) en fin de ligne à supprimer. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file>  |   => suggestions : ['']

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/server add -auto -ssl_verify -ssl_capath /etc/ssl/certs -ssl -network Libera irc.libera.chat 7000</code> |      => suggestions : ['']
85 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/server add -auto -ssl_verify -ssl_capath /etc/ssl/certs -ssl -network Libera irc.libera.chat 7000</code> |  -  => suggestions : [' – ', ' — ', ' − ']

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> |    => suggestions : ['']
86 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> |  -  => suggestions : [' – ', ' — ', ' − ']
86 Mot inconnu : servers =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | servers
86 Pas d’espace après ce signe. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | (  => suggestions : ['(']
86 Mot inconnu : address =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | address
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Mot inconnu : chatnet =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | chatnet
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Mot inconnu : Libera =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | libera
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Mot inconnu : use_ssl =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | use_ssl
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | yes
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Mot inconnu : ssl_verify =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | ssl_verify
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | yes
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Mot inconnu : ssl_capath =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | ssl_capath
86 Mot inconnu : autoconnect =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | autoconnect
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Mot inconnu : yes =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | yes
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Mot inconnu : term_type =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | term_type
86 Guillemets typographiques ouvrants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['«\xa0', '“']
86 Mot inconnu : utf-8 =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | utf-8
86 Guillemets typographiques fermants. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> | " => suggestions : ['\xa0»', '”']
86 Pas d’espace avant ce signe. =>   - <file bash>servers = ( { address = "irc.libera.chat"; chatnet = "Libera"; port = "7000"; use_ssl = "yes"; ssl_verify = "yes"; ssl_capath = "/etc/ssl/certs"; autoconnect = "yes"; term_type = "utf-8"; } );</file> |  ) => suggestions : [')']

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  |    => suggestions : ['']
87 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
87 Mot inconnu : Libera =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | libera
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Mot inconnu : IRC =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | irc
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : max_kicks =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | max_kicks
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : max_msgs =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | max_msgs
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : max_whois =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | max_whois
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : sasl_mechanism =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | sasl_mechanism
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : sasl_username =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | sasl_username
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Mot inconnu : username =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | username
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : sasl_password =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | sasl_password
87 Guillemets typographiques ouvrants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['«\xa0', '“']
87 Mot inconnu : password_en_clair =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | password_en_clair
87 Guillemets typographiques fermants. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  | " => suggestions : ['\xa0»', '”']
87 Espace(s) en fin de ligne à supprimer. =>   - <file bash>Libera = { type = "IRC"; max_kicks = "1"; max_msgs = "4"; max_whois = "1"; sasl_mechanism = "plain"; sasl_username = "username"; sasl_password = "password_en_clair"; };</file>  |   => suggestions : ['']

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/server add -auto -ssl -ssl_verify -ssl_capath /etc/ssl/certs -network Libera -port 7000 irc.libera.chat</code>   |      => suggestions : ['']
89 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/server add -auto -ssl -ssl_verify -ssl_capath /etc/ssl/certs -network Libera -port 7000 irc.libera.chat</code>   |  -  => suggestions : [' – ', ' — ', ' − ']
89 Espace(s) en fin de ligne à supprimer. =>     - <code bash>/server add -auto -ssl -ssl_verify -ssl_capath /etc/ssl/certs -network Libera -port 7000 irc.libera.chat</code>   |    => suggestions : ['']

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/network add -sasl_mechanism plain -sasl_username <username> -sasl_password <password> Libera</code> |      => suggestions : ['']
90 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/network add -sasl_mechanism plain -sasl_username <username> -sasl_password <password> Libera</code> |  -  => suggestions : [' – ', ' — ', ' − ']

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  |      => suggestions : ['']
92 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  |  -  => suggestions : [' – ', ' — ', ' − ']
92 Mot inconnu : NickServ =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | nickserv
92 Mot inconnu : wait =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | wait
92 Mot inconnu : NickServ =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | nickserv
92 Mot inconnu : IRC =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | irc
92 Mot inconnu : cloak =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | cloak
92 Mot inconnu : Libera =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | libera
92 Mot inconnu : IRC =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | irc
92 Mot inconnu : auto-join =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | auto-join
92 Il manque un espace. =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | wait => suggestions : [' wait']
92 Mot inconnu : wait =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | wait
92 Mot inconnu : sasl_disconnect_on_failure =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | sasl_disconnect_on_failure
92 Incohérence avec “ON” : “pour” devrait être un verbe, un pronom objet, un adverbe de négation, etc. =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | pour => suggestions : []
92 Mot inconnu : Libera =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | libera
92 Mot inconnu : Nickserv =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  | nickserv
92 Espace(s) en fin de ligne à supprimer. =>     - Configuration du pseudonyme souhaité et permettre l'identification de son pseudonyme enregistré auprès de NickServ, et patienter un laps de temps. L'option **wait** 8000 permet d'attendre un laps de temps après l'identification auprès de NickServ avant de joindre un canal IRC. Ceci est pratique pour ne pas divulguer son adresse Internet, pour un utilisateur ayant un cloak sous Libera, et ayant un canal IRC ou des canaux, en auto-join. Veillez à supprimer l'option **;wait 8000** de la commande **ci-bas** avant, mais vous pouvez aussi utiliser la commande **/set sasl_disconnect_on_failure ON** pour vous déconnecter de Libera automatiquement, si vous êtes pas authentifié par Nickserv.  |   => suggestions : ['']

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/network add -nick "pseudonyme" -user "nom_d_utilisateur_à_afficher" -realname "nom_réel_à_afficher" -autosendcmd "/msg NickServ IDENTIFY password ;wait 8000" Libera</code> |      => suggestions : ['']
93 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/network add -nick "pseudonyme" -user "nom_d_utilisateur_à_afficher" -realname "nom_réel_à_afficher" -autosendcmd "/msg NickServ IDENTIFY password ;wait 8000" Libera</code> |  -  => suggestions : [' – ', ' — ', ' − ']

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  |    => suggestions : ['']
94 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
94 Mot inconnu : settings =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | settings
94 Mot inconnu : core =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | core
94 Mot inconnu : real_name =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | real_name
94 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['\xa0»', '”']
94 Mot inconnu : user_name =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | user_name
94 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['\xa0»', '”']
94 Mot inconnu : nick =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | nick
94 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['\xa0»', '”']
94 Mot inconnu : proxy_address =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | proxy_address
94 Mot inconnu : proxy_port =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | proxy_port
94 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['\xa0»', '”']
94 Mot inconnu : use_proxy =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | use_proxy
94 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['«\xa0', '“']
94 Mot inconnu : yes =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | yes
94 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  | " => suggestions : ['\xa0»', '”']
94 Espace(s) en fin de ligne à supprimer. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; proxy_address = "1.2.3.4"; proxy_port = "4242"; use_proxy = "yes"; };</file>  |   => suggestions : ['']

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set proxy_address 1.2.3.4</code> |      => suggestions : ['']
96 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set proxy_address 1.2.3.4</code> |  -  => suggestions : [' – ', ' — ', ' − ']

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set proxy_port 4242</code>  |      => suggestions : ['']
97 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set proxy_port 4242</code>  |  -  => suggestions : [' – ', ' — ', ' − ']

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set use_proxy ON</code> |      => suggestions : ['']
98 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set use_proxy ON</code> |  -  => suggestions : [' – ', ' — ', ' − ']

99 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  |    => suggestions : ['']
99 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
99 Mot inconnu : settings =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | settings
99 Mot inconnu : core =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | core
99 Mot inconnu : real_name =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | real_name
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : user_name =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | user_name
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : nick =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | nick
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : use_proxy =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | use_proxy
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Mot inconnu : yes =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | yes
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : proxy_address =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | proxy_address
99 Mot inconnu : proxy_port =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | proxy_port
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : proxy_string =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | proxy_string
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Mot inconnu : CONNECT =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | connect
99 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | s => suggestions : [' s']
99 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | d => suggestions : [' d']
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Mot inconnu : proxy_string_after =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | proxy_string_after
99 Guillemets typographiques ouvrants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['«\xa0', '“']
99 Mot inconnu : conn =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | conn
99 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | s => suggestions : [' s']
99 Il manque un espace. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | d => suggestions : [' d']
99 Guillemets typographiques fermants. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  | " => suggestions : ['\xa0»', '”']
99 Espace(s) en fin de ligne à supprimer. =>   - <file bash>settings = { core = { real_name = "pseudo"; user_name = "pseudo"; nick = "pseudo"; use_proxy = "yes"; proxy_address = "1.2.3.4"; proxy_port = "4242"; proxy_string = "CONNECT %s:%d HTTP/1.0\012\012"; proxy_string_after = "conn %s %d"; };</file>  |   => suggestions : ['']

101 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set use_proxy ON</code>  |      => suggestions : ['']
101 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set use_proxy ON</code>  |  -  => suggestions : [' – ', ' — ', ' − ']

102 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set proxy_address 1.2.3.4</code> |      => suggestions : ['']
102 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set proxy_address 1.2.3.4</code> |  -  => suggestions : [' – ', ' — ', ' − ']

103 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set proxy_port 4242</code> |      => suggestions : ['']
103 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set proxy_port 4242</code> |  -  => suggestions : [' – ', ' — ', ' − ']

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set -clear proxy_string</code> |      => suggestions : ['']
104 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set -clear proxy_string</code> |  -  => suggestions : [' – ', ' — ', ' − ']

105 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set proxy_string_after conn %s %d</code> |      => suggestions : ['']
105 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set proxy_string_after conn %s %d</code> |  -  => suggestions : [' – ', ' — ', ' − ']

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/eval set proxy_string CONNECT %s:%d HTTP/1.0\n\n</code> |      => suggestions : ['']
106 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/eval set proxy_string CONNECT %s:%d HTTP/1.0\n\n</code> |  -  => suggestions : [' – ', ' — ', ' − ']

107 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  |    => suggestions : ['']
107 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
107 Mot inconnu : settings =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | settings
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : fe-common =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | fe-common
107 Mot inconnu : core =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | core
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : beep_when_window_active =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | beep_when_window_active
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : yes =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | yes
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : beep_when_away =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | beep_when_away
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : yes =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | yes
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : beep_msg_level =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | beep_msg_level
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : HILIGHT =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | hilight
107 Mot inconnu : MSGS =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | msgs
107 Mot inconnu : DCC =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | dcc
107 Mot inconnu : DCCMSGS =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | dccmsgs
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : hilights =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | hilights
107 Pas d’espace après ce signe. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | (  => suggestions : ['(']
107 Mot inconnu : text =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | text
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : ton_nick =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | ton_nick
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : nick =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | nick
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : yes =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | yes
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : word =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | word
107 Guillemets typographiques ouvrants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['«\xa0', '“']
107 Guillemets typographiques fermants. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  | " => suggestions : ['\xa0»', '”']
107 Pas d’espace avant ce signe. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  |  ) => suggestions : [')']
107 Espace(s) en fin de ligne à supprimer. =>   - <file bash>settings = { "fe-common/core" = { beep_when_window_active = "yes"; beep_when_away = "yes"; beep_msg_level = "HILIGHT MSGS DCC DCCMSGS"; }; }; hilights = ( { text = "ton_nick"; nick = "yes"; word = "no"; } );</file>  |   => suggestions : ['']

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set beep_when_window_active on</code> |      => suggestions : ['']
109 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set beep_when_window_active on</code> |  -  => suggestions : [' – ', ' — ', ' − ']

110 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set beep_when_away on</code> |      => suggestions : ['']
110 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set beep_when_away on</code> |  -  => suggestions : [' – ', ' — ', ' − ']

111 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set bell_beeps on</code> |      => suggestions : ['']
111 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set bell_beeps on</code> |  -  => suggestions : [' – ', ' — ', ' − ']

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/set beep_msg_level HILIGHT MSGS DCC DCCMSGS</code> |      => suggestions : ['']
112 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/set beep_msg_level HILIGHT MSGS DCC DCCMSGS</code> |  -  => suggestions : [' – ', ' — ', ' − ']

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/hilight ton_nick</code> |      => suggestions : ['']
113 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/hilight ton_nick</code> |  -  => suggestions : [' – ', ' — ', ' − ']

114 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  |    => suggestions : ['']
114 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
114 S’il s’agit d’un impératif, pas de “s”. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | ignores => suggestions : ['ignore']
114 Pas d’espace après ce signe. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | (  => suggestions : ['(']
114 Mot inconnu : level =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | level
114 Guillemets typographiques ouvrants. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | " => suggestions : ['«\xa0', '“']
114 Mot inconnu : QUITS =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | quits
114 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
114 Mot inconnu : channels =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | channels
114 Pas d’espace après ce signe. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | (  => suggestions : ['(']
114 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
114 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
114 Pas d’espace avant ce signe. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  |  ) => suggestions : [')']
114 Pas d’espace avant ce signe. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  |  ) => suggestions : [')']
114 Espace(s) en fin de ligne à supprimer. =>   - <file bash>ignores = ( { level = "PARTS QUITS"; channels = ( "#nom_channel1", "#nom_du_channel2" ); } );</file>  |   => suggestions : ['']

116 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/ignore -channels #nom_channel1,#nom_du_channel2 * PARTS QUITS</code> |      => suggestions : ['']
116 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/ignore -channels #nom_channel1,#nom_du_channel2 * PARTS QUITS</code> |  -  => suggestions : [' – ', ' — ', ' − ']

117 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |    => suggestions : ['']
117 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
117 S’il s’agit d’un impératif, pas de “s”. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | ignores => suggestions : ['ignore']
117 Pas d’espace après ce signe. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | (  => suggestions : ['(']
117 Mot inconnu : level =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | level
117 Guillemets typographiques ouvrants. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['«\xa0', '“']
117 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
117 Mot inconnu : channels =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | channels
117 Pas d’espace après ce signe. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | (  => suggestions : ['(']
117 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
117 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
117 Pas d’espace avant ce signe. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |  ) => suggestions : [')']
117 Pas d’espace avant ce signe. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |  ) => suggestions : [')']
117 Espace(s) en fin de ligne à supprimer. =>   - <file bash>ignores = ( { level = "JOINS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |   => suggestions : ['']

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/ignore -channels #nom_channel1,#nom_channel2 * JOINS</code> |      => suggestions : ['']
119 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/ignore -channels #nom_channel1,#nom_channel2 * JOINS</code> |  -  => suggestions : [' – ', ' — ', ' − ']

120 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |    => suggestions : ['']
120 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |  -  => suggestions : [' – ', ' — ', ' − ']
120 S’il s’agit d’un impératif, pas de “s”. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | ignores => suggestions : ['ignore']
120 Pas d’espace après ce signe. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | (  => suggestions : ['(']
120 Mot inconnu : level =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | level
120 Guillemets typographiques ouvrants. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['«\xa0', '“']
120 Mot inconnu : QUITS =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | quits
120 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
120 Mot inconnu : channels =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | channels
120 Pas d’espace après ce signe. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | (  => suggestions : ['(']
120 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
120 Guillemets typographiques fermants. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  | " => suggestions : ['\xa0»', '”']
120 Pas d’espace avant ce signe. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |  ) => suggestions : [')']
120 Pas d’espace avant ce signe. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |  ) => suggestions : [')']
120 Espace(s) en fin de ligne à supprimer. =>   - <file bash>ignores = ( { level = "JOINS PARTS QUITS"; channels = ( "#nom_channel1", "#nom_channel2" ); } );</file>  |   => suggestions : ['']

122 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/ignore -channels #nom_channel1,#nom_channel2 * JOINS PARTS QUITS</code> |      => suggestions : ['']
122 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/ignore -channels #nom_channel1,#nom_channel2 * JOINS PARTS QUITS</code> |  -  => suggestions : [' – ', ' — ', ' − ']

123 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <code bash>ignores = ( { level = "ACTIONS"; pattern = "is (away|gone|back)"; regexp = "yes"; } );</code>  |    => suggestions : ['']
123 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <code bash>ignores = ( { level = "ACTIONS"; pattern = "is (away|gone|back)"; regexp = "yes"; } );</code>  |  -  => suggestions : [' – ', ' — ', ' − ']

125 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/ignore -regexp -pattern "is (away|gone|back)" * ACTIONS</code> |      => suggestions : ['']
125 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/ignore -regexp -pattern "is (away|gone|back)" * ACTIONS</code> |  -  => suggestions : [' – ', ' — ', ' − ']

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - <code bash>ignores = ( { mask = "*!*@IPV4/IPV6/CLOAK/RDNS"; level = "ALL"; replies = "yes"; } );</code> |    => suggestions : ['']
126 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - <code bash>ignores = ( { mask = "*!*@IPV4/IPV6/CLOAK/RDNS"; level = "ALL"; replies = "yes"; } );</code> |  -  => suggestions : [' – ', ' — ', ' − ']

128 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     - <code bash>/ignore -replies *!*@IPV4/IPV6/CLOAK/RDNS ALL</code> |      => suggestions : ['']
128 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>     - <code bash>/ignore -replies *!*@IPV4/IPV6/CLOAK/RDNS ALL</code> |  -  => suggestions : [' – ', ' — ', ' − ']

131 Mot inconnu : Irssi => Le thème par défaut de Irssi ne concorde pas du tout avec le thème de gnome-terminal : il est prévu pour un [[terminal|terminal]] sur fond noir. En particulier, le pseudo utilisateur est en gras blanc sur blanc, et les notifications en gras jaune sur blanc. | irssi
131 Si vous voulez évoquer le simulacre de “utilisateur”, mettez un trait d’union. => Le thème par défaut de Irssi ne concorde pas du tout avec le thème de gnome-terminal : il est prévu pour un [[terminal|terminal]] sur fond noir. En particulier, le pseudo utilisateur est en gras blanc sur blanc, et les notifications en gras jaune sur blanc. | pseudo utilisateur => suggestions : ['pseudo-utilisateur']

133 Il manque un espace. => Pour y remédier, on peut simplement remplacer ces couleurs dans le thème par défaut. Par exemple, y remplacer toutes les occurrences de %W (blanc gras) par %B (bleu gras) et de %Y (jaune gras) par %R (rouge gras). | w => suggestions : [' W']
133 Il manque un espace. => Pour y remédier, on peut simplement remplacer ces couleurs dans le thème par défaut. Par exemple, y remplacer toutes les occurrences de %W (blanc gras) par %B (bleu gras) et de %Y (jaune gras) par %R (rouge gras). | b => suggestions : [' B']
133 Il manque un espace. => Pour y remédier, on peut simplement remplacer ces couleurs dans le thème par défaut. Par exemple, y remplacer toutes les occurrences de %W (blanc gras) par %B (bleu gras) et de %Y (jaune gras) par %R (rouge gras). | y => suggestions : [' Y']
133 Il manque un espace. => Pour y remédier, on peut simplement remplacer ces couleurs dans le thème par défaut. Par exemple, y remplacer toutes les occurrences de %W (blanc gras) par %B (bleu gras) et de %Y (jaune gras) par %R (rouge gras). | r => suggestions : [' R']

140 Mot inconnu : sed => sed -i 's/%Y/%R/g' /usr/share/irssi/themes/default.theme</code> | sed
140 Il manque un espace à côté du tiret. => sed -i 's/%Y/%R/g' /usr/share/irssi/themes/default.theme</code> |  - => suggestions : [' – ', ' — ']
140 Guillemets typographiques ouvrants. => sed -i 's/%Y/%R/g' /usr/share/irssi/themes/default.theme</code> | ' => suggestions : ['“', '‘', '‹']
140 Il manque un espace. => sed -i 's/%Y/%R/g' /usr/share/irssi/themes/default.theme</code> | y => suggestions : [' Y']
140 Il manque un espace. => sed -i 's/%Y/%R/g' /usr/share/irssi/themes/default.theme</code> | r => suggestions : [' R']
140 Guillemets typographiques fermants. => sed -i 's/%Y/%R/g' /usr/share/irssi/themes/default.theme</code> | ' => suggestions : ['”', '’', '›']

142 Mot inconnu : irssi => Pour prendre en compte les changements, il faut soit charger un autre thème puis recharger le thème par défaut, soit relancer irssi. | irssi
145 Espace(s) en fin de ligne à supprimer. => <code bash>$HOME/.irssi</code>  |   => suggestions : ['']

146 Mot inconnu : theme => un fichier *.theme téléchargé par exemple [[http://www.irssi.org/themes|ici]].  | theme
146 Espace(s) en fin de ligne à supprimer. => un fichier *.theme téléchargé par exemple [[http://www.irssi.org/themes|ici]].  |   => suggestions : ['']

148 Mot inconnu : irssi => Pour charger le nouveau thème, il suffit d'utiliser dans irssi la commande : | irssi

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   /set theme nomduthème |    => suggestions : ['']
149 Mot inconnu : theme =>   /set theme nomduthème | theme
149 Mot inconnu : nomduthème =>   /set theme nomduthème | nomduthème

151 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   /set theme default |    => suggestions : ['']
151 Mot inconnu : theme =>   /set theme default | theme
151 Mot inconnu : default =>   /set theme default | default

154 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   /set colors off |    => suggestions : ['']
154 Mot inconnu : colors =>   /set colors off | colors

157 Mot inconnu : Irssi-proxy => ==== Irssi-proxy ==== | irssi-proxy

160 Mot inconnu : Irssi => C'est là qu'intervient le plugin proxy de Irssi. | irssi

164 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   /load proxy |    => suggestions : ['']
164 Mot inconnu : load =>   /load proxy | load

168 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   /set irssiproxy_password votre_mot_de_passe |    => suggestions : ['']
168 Mot inconnu : irssiproxy_password =>   /set irssiproxy_password votre_mot_de_passe | irssiproxy_password
168 Mot inconnu : votre_mot_de_passe =>   /set irssiproxy_password votre_mot_de_passe | votre_mot_de_passe

173 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   /set irssiproxy_ports Libera=XXXX |    => suggestions : ['']
173 Mot inconnu : irssiproxy_ports =>   /set irssiproxy_ports Libera=XXXX | irssiproxy_ports
173 Mot inconnu : Libera =>   /set irssiproxy_ports Libera=XXXX | libera
173 Mot inconnu : XXXX =>   /set irssiproxy_ports Libera=XXXX | xxxx

176 Mot inconnu : Irssi-OTR => ==== Irssi-OTR (chiffrement) ==== | irssi-otr

177 Mot inconnu : off-the-record_messaging => Chiffrer vos conversations avec [[off-the-record_messaging#irssi-otr|Irssi-OTR]]. | off-the-record_messaging

179 Mot inconnu : Irssi => ===== Irssi over Tor (libera.chat) ===== | irssi
179 Mot inconnu : over => ===== Irssi over Tor (libera.chat) ===== | over
179 Mot inconnu : Tor => ===== Irssi over Tor (libera.chat) ===== | tor
179 Mot inconnu : libera => ===== Irssi over Tor (libera.chat) ===== | libera
179 Il manque un espace. => ===== Irssi over Tor (libera.chat) ===== | chat => suggestions : [' chat']

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée. |    => suggestions : ['']

185 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avoir un pseudonyme [[https://libera.chat/guides/registration|enregistré]] auprès de [[https://libera.chat|Libera]]. |    => suggestions : ['']

190 Mot inconnu : Flag => <note important> Il peut être utile de vous référer à la page [[https://metrics.torproject.org/rs.html#advanced|Recherche avancée]]((Dans la partie **Flag**, favoriser le choix **Stable**.)).</note> | flag

193 Mot inconnu : torrc => ==== Fichier torrc minimal pour IRC === | torrc
193 Mot inconnu : IRC => ==== Fichier torrc minimal pour IRC === | irc

194 Mot inconnu : nodes => <note warning>Exclure des nodes de votre configuration Tor peut impacter votre anonymat plus ou moins gravement.  | nodes
194 Mot inconnu : Tor => <note warning>Exclure des nodes de votre configuration Tor peut impacter votre anonymat plus ou moins gravement.  | tor
194 Espace(s) en fin de ligne à supprimer. => <note warning>Exclure des nodes de votre configuration Tor peut impacter votre anonymat plus ou moins gravement.  |   => suggestions : ['']

197 Mot inconnu : torrc => <note tip>Voici un exemple d'un fichier **torrc** fonctionnel pour [[https://libera.chat|Libera]].</note> | torrc

207 Mot inconnu : daemon => pour démarrer votre daemon.  | daemon
207 Espace(s) en fin de ligne à supprimer. => pour démarrer votre daemon.  |   => suggestions : ['']

211 Mot inconnu : torrc => <note tip>Si votre fichier **torrc** est dans /etc/tor/</note> | torrc

215 Mot inconnu : daemon => <note> Pour connaître le statut de votre daemon tor :</note> | daemon
215 Mot inconnu : tor => <note> Pour connaître le statut de votre daemon tor :</note> | tor

260 Mot inconnu : daemon => ==== Stopper le daemon tor et installation des packages nécessaires ==== | daemon
260 Mot inconnu : tor => ==== Stopper le daemon tor et installation des packages nécessaires ==== | tor

263 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

265 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée. |    => suggestions : ['']
271 Pas d’espace avant une virgule. => <note important>Si vous utilisez Ubuntu 18.04 (Beaver Bionic), merci de visiter l'adresse [[https://2019.www.torproject.org/docs/debian.html]] , et d'ajouter le dépôt en question. Le binaire de Tor des dépôts Ubuntu Beaver Bionic 18.04, ne reçoit plus aucune mise à jour !.</note> |  , => suggestions : [',']
271 Mot inconnu : Tor => <note important>Si vous utilisez Ubuntu 18.04 (Beaver Bionic), merci de visiter l'adresse [[https://2019.www.torproject.org/docs/debian.html]] , et d'ajouter le dépôt en question. Le binaire de Tor des dépôts Ubuntu Beaver Bionic 18.04, ne reçoit plus aucune mise à jour !.</note> | tor

277 Mot inconnu : fingerprint => ==== Génération du certificat client et extraction du fingerprint sha-512 de votre certificat pour Libera ==== | fingerprint
277 Mot inconnu : sha-512 => ==== Génération du certificat client et extraction du fingerprint sha-512 de votre certificat pour Libera ==== | sha-512
277 Mot inconnu : Libera => ==== Génération du certificat client et extraction du fingerprint sha-512 de votre certificat pour Libera ==== | libera

297 Mot inconnu : SHA-512 => === Ajout de l'empreinte SHA-512 à votre pseudonyme Libera === | sha-512
297 Mot inconnu : Libera => === Ajout de l'empreinte SHA-512 à votre pseudonyme Libera === | libera

308 Mot inconnu : SASL => ==== Configuration de votre pseudonyme avec SASL ==== | sasl

315 Mot inconnu : Tor => ==== Ajout du réseau Tor à votre client Irssi ==== | tor
315 Mot inconnu : Irssi => ==== Ajout du réseau Tor à votre client Irssi ==== | irssi

333 Mot inconnu : Irssi => Pour que votre client Irssi se connecte sur le .onion de Libera, il nous faudra utiliser le logiciel [[apt>proxychains4]].  | irssi
333 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Pour que votre client Irssi se connecte sur le .onion de Libera, il nous faudra utiliser le logiciel [[apt>proxychains4]].  |  . => suggestions : ['. ', '.']
333 Mot inconnu : onion => Pour que votre client Irssi se connecte sur le .onion de Libera, il nous faudra utiliser le logiciel [[apt>proxychains4]].  | onion
333 Mot inconnu : Libera => Pour que votre client Irssi se connecte sur le .onion de Libera, il nous faudra utiliser le logiciel [[apt>proxychains4]].  | libera
333 Mot inconnu : proxychains4 => Pour que votre client Irssi se connecte sur le .onion de Libera, il nous faudra utiliser le logiciel [[apt>proxychains4]].  | proxychains4
333 Espace(s) en fin de ligne à supprimer. => Pour que votre client Irssi se connecte sur le .onion de Libera, il nous faudra utiliser le logiciel [[apt>proxychains4]].  |   => suggestions : ['']

339 Mot inconnu : irssi => Et nous lançons ensuite notre client irssi avec [[apt>proxychains4]] : | irssi
339 Mot inconnu : proxychains4 => Et nous lançons ensuite notre client irssi avec [[apt>proxychains4]] : | proxychains4

343 Mot inconnu : Irssi-labs => ===== Irssi-labs ===== | irssi-labs

350 Mot inconnu : Xirssi => ===== Xirssi ===== | xirssi

358 Mot inconnu : Irssi => ==== Compilation de Irssi ==== | irssi

363 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get build-dep irssi  |    => suggestions : ['']
363 Mot inconnu : sudo =>   sudo apt-get build-dep irssi  | sudo
363 Mot inconnu : apt-get =>   sudo apt-get build-dep irssi  | apt-get
363 Mot inconnu : build-dep =>   sudo apt-get build-dep irssi  | build-dep
363 Mot inconnu : irssi =>   sudo apt-get build-dep irssi  | irssi
363 Espace(s) en fin de ligne à supprimer. =>   sudo apt-get build-dep irssi  |   => suggestions : ['']

365 Mot inconnu : tar => <note>Ensuite, nous récupérons le tar.gz de Irssi via le site officiel.</note> | tar
365 Mot inconnu : gz => <note>Ensuite, nous récupérons le tar.gz de Irssi via le site officiel.</note> | gz
365 Mot inconnu : Irssi => <note>Ensuite, nous récupérons le tar.gz de Irssi via le site officiel.</note> | irssi

367 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   wget http://www.irssi.org/files/irssi-0.8.17.tar.gz |    => suggestions : ['']
367 Mot inconnu : wget =>   wget http://www.irssi.org/files/irssi-0.8.17.tar.gz | wget

369 Mot inconnu : tar => <note>Ensuite, nous décompressons le tar.gz irssi-0.8.17.tar.gz et on se place dans le dossier irssi-0.8.17.</note> | tar
369 Mot inconnu : gz => <note>Ensuite, nous décompressons le tar.gz irssi-0.8.17.tar.gz et on se place dans le dossier irssi-0.8.17.</note> | gz
369 Mot inconnu : irssi-0 => <note>Ensuite, nous décompressons le tar.gz irssi-0.8.17.tar.gz et on se place dans le dossier irssi-0.8.17.</note> | irssi-0
369 Mot inconnu : irssi-0 => <note>Ensuite, nous décompressons le tar.gz irssi-0.8.17.tar.gz et on se place dans le dossier irssi-0.8.17.</note> | irssi-0

371 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tar -xzvf irssi-0.8.17.tar.gz && cd irssi-0.8.17 |    => suggestions : ['']
371 Mot inconnu : tar =>   tar -xzvf irssi-0.8.17.tar.gz && cd irssi-0.8.17 | tar
371 Il manque un espace à côté du tiret. =>   tar -xzvf irssi-0.8.17.tar.gz && cd irssi-0.8.17 |  - => suggestions : [' – ', ' — ']
371 Mot inconnu : xzvf =>   tar -xzvf irssi-0.8.17.tar.gz && cd irssi-0.8.17 | xzvf
371 Mot inconnu : irssi-0 =>   tar -xzvf irssi-0.8.17.tar.gz && cd irssi-0.8.17 | irssi-0
371 Mot inconnu : irssi-0 =>   tar -xzvf irssi-0.8.17.tar.gz && cd irssi-0.8.17 | irssi-0

373 Mot inconnu : Irssi => <note>Nous lançons la compilation de Irssi.</note> | irssi

375 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ./configure --with-perl --with-glib2 ## L'option --with-glib2 n'est plus disponible, mais ce fut le cas à l'époque. |    => suggestions : ['']
375 Mot inconnu : with-perl =>   ./configure --with-perl --with-glib2 ## L'option --with-glib2 n'est plus disponible, mais ce fut le cas à l'époque. | with-perl
375 Mot inconnu : with-glib2 =>   ./configure --with-perl --with-glib2 ## L'option --with-glib2 n'est plus disponible, mais ce fut le cas à l'époque. | with-glib2
375 Mot inconnu : with-glib2 =>   ./configure --with-perl --with-glib2 ## L'option --with-glib2 n'est plus disponible, mais ce fut le cas à l'époque. | with-glib2

376 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   make |    => suggestions : ['']
376 Mot inconnu : make =>   make | make

377 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo make install |    => suggestions : ['']
377 Mot inconnu : sudo =>   sudo make install | sudo
377 Mot inconnu : make =>   sudo make install | make
377 Mot inconnu : install =>   sudo make install | install

378 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

379 Mot inconnu : Irssi => Nous vérifions votre version de Irssi via la commande suivante : | irssi

381 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   irssi --version |    => suggestions : ['']
381 Mot inconnu : irssi =>   irssi --version | irssi

385 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   irssi 0.8.17 (20141011 1044) |    => suggestions : ['']
385 Mot inconnu : irssi =>   irssi 0.8.17 (20141011 1044) | irssi
385 Formatage des grands nombres. =>   irssi 0.8.17 (20141011 1044) | 20141011 => suggestions : ['20\xa0141\xa0011']

387 Mot inconnu : Irssi => Votre Irssi est compilé, au tour de Xirssi. | irssi
387 Mot inconnu : Xirssi => Votre Irssi est compilé, au tour de Xirssi. | xirssi

389 Mot inconnu : Xirssi => ==== Compilation de Xirssi ==== | xirssi

390 Mot inconnu : Xirssi => <note>On installe le paquet subversion et on récupère les sources de Xirssi.</note> | xirssi

394 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get install subversion |    => suggestions : ['']
394 Mot inconnu : sudo =>   sudo apt-get install subversion | sudo
394 Mot inconnu : apt-get =>   sudo apt-get install subversion | apt-get
394 Mot inconnu : install =>   sudo apt-get install subversion | install

395 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   svn co http://svn.irssi.org:8080/repos/xirssi/trunk/ xirssi |    => suggestions : ['']
395 Mot inconnu : svn =>   svn co http://svn.irssi.org:8080/repos/xirssi/trunk/ xirssi | svn
395 Mot inconnu : co =>   svn co http://svn.irssi.org:8080/repos/xirssi/trunk/ xirssi | co
395 Mot inconnu : xirssi =>   svn co http://svn.irssi.org:8080/repos/xirssi/trunk/ xirssi | xirssi
395 Mot inconnu : trunk =>   svn co http://svn.irssi.org:8080/repos/xirssi/trunk/ xirssi | trunk
395 Mot inconnu : xirssi =>   svn co http://svn.irssi.org:8080/repos/xirssi/trunk/ xirssi | xirssi

397 Mot inconnu : xirssi => <note>On se place dans le dossier xirssi, et on lance la compilation :-D.</note> | xirssi

398 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd xirssi |    => suggestions : ['']
398 Mot inconnu : xirssi =>   cd xirssi | xirssi

399 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ./autogen.sh |    => suggestions : ['']
399 Mot inconnu : autogen =>   ./autogen.sh | autogen
399 Mot inconnu : sh =>   ./autogen.sh | sh

400 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ./configure --with-irssi=/patch/irssi |    => suggestions : ['']
400 Mot inconnu : with-irssi =>   ./configure --with-irssi=/patch/irssi | with-irssi
400 Mot inconnu : irssi =>   ./configure --with-irssi=/patch/irssi | irssi

401 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   make |    => suggestions : ['']
401 Mot inconnu : make =>   make | make

402 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo make install |    => suggestions : ['']
402 Mot inconnu : sudo =>   sudo make install | sudo
402 Mot inconnu : make =>   sudo make install | make
402 Mot inconnu : install =>   sudo make install | install

404 Mot inconnu : ok => Si tout est ok, vous devriez avoir votre binaire Xirssi : | ok
404 Mot inconnu : Xirssi => Si tout est ok, vous devriez avoir votre binaire Xirssi : | xirssi

411 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Lire la doc officielle, en anglais : http://www.irssi.org/documentation. |    => suggestions : ['']
411 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Lire la doc officielle, en anglais : http://www.irssi.org/documentation. |  -  => suggestions : [' – ', ' — ', ' − ']

412 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Si vous voulez utiliser de manière plus efficace Irssi vous pouvez changer les raccourcis claviers pour les principales commandes (toujours dans //~/.irssi/config//). |    => suggestions : ['']
412 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Si vous voulez utiliser de manière plus efficace Irssi vous pouvez changer les raccourcis claviers pour les principales commandes (toujours dans //~/.irssi/config//). |  -  => suggestions : [' – ', ' — ', ' − ']
412 Mot inconnu : Irssi =>   - Si vous voulez utiliser de manière plus efficace Irssi vous pouvez changer les raccourcis claviers pour les principales commandes (toujours dans //~/.irssi/config//). | irssi
412 Mot inconnu : irssi =>   - Si vous voulez utiliser de manière plus efficace Irssi vous pouvez changer les raccourcis claviers pour les principales commandes (toujours dans //~/.irssi/config//). | irssi

418 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * http://totalement.geek.oupas.fr/article/2007/07/20/irssi-un-client-irssi-en-mode-texte |    => suggestions : ['']

419 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * http://blog.creaone.fr/post/2010/11/08/Proxy-IRC-pour-Ubuntu |    => suggestions : ['']

420 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * https://libera.chat/guides/connect |    => suggestions : ['']

421 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * https://libera.chat/guides/certfp |    => suggestions : ['']
