
3 Mot inconnu : Yannick_LM => Ce tutoriel va vous permettre de transformer votre ordinateur en [[https://fr.wikipedia.org/wiki/Big_Ben|Big Ben]], ou plus modestement en pendule, qui sonne à chaque changement d'heure (sur une idée de Yannick_LM, cf. [[http://forum.ubuntu-fr.org/viewtopic.php?id=99763|le sujet sur le forum]] pour en discuter). | yannick_lm

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://upload.wikimedia.org/wikipedia/commons/1/1d/Westminster_sound.ogg|un carillon]], |    => suggestions : ['']

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.randonneur.net/sons/divers/coucou_01.wav|une cloche, un coucou]] ou [[http://upload.wikimedia.org/wikipedia/commons/6/68/Fr-coucou.ogg|cette personne qui dit coucou (licence creative commons)]]. |    => suggestions : ['']
13 Mot inconnu : creative =>   * [[http://www.randonneur.net/sons/divers/coucou_01.wav|une cloche, un coucou]] ou [[http://upload.wikimedia.org/wikipedia/commons/6/68/Fr-coucou.ogg|cette personne qui dit coucou (licence creative commons)]]. | creative
13 Mot inconnu : commons =>   * [[http://www.randonneur.net/sons/divers/coucou_01.wav|une cloche, un coucou]] ou [[http://upload.wikimedia.org/wikipedia/commons/6/68/Fr-coucou.ogg|cette personne qui dit coucou (licence creative commons)]]. | commons

15 Accord avec le COD « les » : Le participe passé « enregistré » devrait être au pluriel (et accordé en genre). => On supposera que vous les avez enregistré dans le dossier **home** (/home/votrenom) sous les noms **.carillon** et **.coucou** (le point précédent le nom indique qu'il apparaîtra comme un fichier caché). | enregistré => suggestions : ['enregistrés']

22 Mot inconnu : cron => Nous allons utiliser [[cron]] pour nous assurer que les cloches sonneront bien toutes les heures. Ouvrez un [[terminal#ou_est-il|terminal]] et tapez-y la commande suivante : | cron

23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   crontab -e |    => suggestions : ['']
23 Mot inconnu : crontab =>   crontab -e | crontab
23 Il manque un espace à côté du tiret. =>   crontab -e |  - => suggestions : [' – ', ' — ']

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done |    => suggestions : ['']
26 Espace(s) surnuméraire(s) à supprimer. =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done |       => suggestions : [' ']
26 Mot inconnu : aplay =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done | aplay
26 Il manque un espace. =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done | l => suggestions : [' l']
26 Mot inconnu : seq =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done | seq
26 Mot inconnu : aplay =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done | aplay
26 Mot inconnu : done =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done | done
33 Mot inconnu : syntax => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]). | syntax
33 Mot inconnu : cron => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]). | cron
33 Mot inconnu : aplay => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]). | aplay
33 Typographie : points de suspension. Utilisez le caractère dédié. => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]). | ... => suggestions : ['…']
33 Mot inconnu : done => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]). | done
33 Mot inconnu : anacron => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]). | anacron

35 Mot inconnu : aplay => La commande elle-même joue (**aplay**) le fichier $HOME/.carillon, puis enregistre le nombre de coups à jouer (1 à 12) dans la variable **HEURE**, et enfin joue le fichier $HOME/.coucou le nombre de fois voulues (boucle "for"). Si l'une de ces trois étapes échoue (fichier son qui n'existe pas, par exemple), on arrête tout (grâce aux **&&**). | aplay
35 Guillemets typographiques ouvrants. => La commande elle-même joue (**aplay**) le fichier $HOME/.carillon, puis enregistre le nombre de coups à jouer (1 à 12) dans la variable **HEURE**, et enfin joue le fichier $HOME/.coucou le nombre de fois voulues (boucle "for"). Si l'une de ces trois étapes échoue (fichier son qui n'existe pas, par exemple), on arrête tout (grâce aux **&&**). | " => suggestions : ['«\xa0', '“']
35 Guillemets typographiques fermants. => La commande elle-même joue (**aplay**) le fichier $HOME/.carillon, puis enregistre le nombre de coups à jouer (1 à 12) dans la variable **HEURE**, et enfin joue le fichier $HOME/.coucou le nombre de fois voulues (boucle "for"). Si l'une de ces trois étapes échoue (fichier son qui n'existe pas, par exemple), on arrête tout (grâce aux **&&**). | " => suggestions : ['\xa0»', '”']
