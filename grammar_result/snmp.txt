
9 S’il s’agit d’une interrogation, il manque un trait d’union. [[8:14]] => ==== Qu'est ce que le SNMP ? ==== <|> est ce => suggestions : ['est-ce']
19 Il manque un espace avant la parenthèse. [[17:18]] => Le protocole SNMP(Simple Network Management Protocol) est relativement simple… une fois qu'on a compris. Voyons comment se compose un ensemble d'éléments communiquant //via// SNMP. <|> ( => suggestions : [' (']
21 Typographie : pas de virgule avant les points de suspension. [[49:52]] => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits. <|> , … => suggestions : ['…']
21 Mot inconnu : dæmon [[116:121]] => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits. <|> dæmon
21 Mot inconnu : Object [[230:236]] => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits. <|> object
21 Mot inconnu : Identifiers [[237:248]] => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits. <|> identifiers
23 Mot inconnu : switches [[250:258]] => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162. <|> switches
37 Mot inconnu : polling [[58:65]] => SNMP peut être utilisé de deux manières distinctes : le //polling// et les //traps//. <|> polling

39 Mot inconnu : polling [[5:12]] => Le **polling** consiste simplement à envoyer une requête à intervalles réguliers pour obtenir une valeur particulière. Cette technique est appelée « vérification active ». Vous pouvez, par programme ou script, vérifier si les valeurs sont correctes. Si la requête échoue, il est possible qu'il y ait un problème avec le périphérique. Cependant, vu que le SNMP s'appuie sur UDP, il est conseillé de réitérer la requête pour confirmer le problème (surtout dans le cas d'une vérification au travers d'Internet). <|> polling
41 Mot inconnu : handlers [[728:736]] => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut. <|> handlers
46 Mot inconnu : v1 [[9:11]] =>   * SNMP v1 (RFC 1155, 1157 et 1212). <|> v1
47 Mot inconnu : v2c [[9:12]] =>   * SNMP v2c (RFC 1901 à 1908). <|> v2c
48 Mot inconnu : v3 [[9:11]] =>   * SNMP v3 (RFC 3411 à 3418). <|> v3

50 Mot inconnu : co-existence [[3:15]] => La co-existence des trois versions est détaillée dans la RFC 3584.  <|> co-existence
50 Espace(s) en fin de ligne à supprimer. [[66:67]] => La co-existence des trois versions est détaillée dans la RFC 3584.  <|>   => suggestions : ['']
110 Mot inconnu : MIBDIRS [[13:20]] =>   * **export MIBDIRS=** définit le répertoire où sont stocké les MIBs <|> mibdirs
110 Mot inconnu : MIBs [[65:69]] =>   * **export MIBDIRS=** définit le répertoire où sont stocké les MIBs <|> mibs
112 Mot inconnu : SNMPDRUN [[6:14]] =>   * **SNMPDRUN=** active ou désactive le service SNMP <|> snmpdrun
114 Mot inconnu : SNMPDOPTS [[6:15]] =>   * **SNMPDOPTS=** options de démarrage du daemon SNMPD <|> snmpdopts
114 Mot inconnu : SNMPD [[50:55]] =>   * **SNMPDOPTS=** options de démarrage du daemon SNMPD <|> snmpd
116 Mot inconnu : TRAPDRUN [[6:14]] =>   * **TRAPDRUN=** active ou désactive le service de capture des traps SNMP <|> trapdrun
118 Mot inconnu : TRAPDOPTS [[6:15]] =>   * **TRAPDOPTS=** options de démarrage de daemon SNMPTRAPD <|> trapdopts
118 Mot inconnu : SNMPTRAPD [[50:59]] =>   * **TRAPDOPTS=** options de démarrage de daemon SNMPTRAPD <|> snmptrapd

125 Mot inconnu : MIBs [[17:21]] => ==== Gestion des MIBs avec tkmib ==== <|> mibs
125 Mot inconnu : tkmib [[27:32]] => ==== Gestion des MIBs avec tkmib ==== <|> tkmib

141 Mot inconnu : Net-SNMP [[16:24]] => La bibliothèque Net-SNMP supporte une liste finie bien qu'extensible de MIB, définie lors de la compilation. <|> net-snmp

150 Mot inconnu : MIBs [[17:21]] => ==== Gestion des MIBs avec SNMPb ==== <|> mibs
150 Mot inconnu : SNMPb [[27:32]] => ==== Gestion des MIBs avec SNMPb ==== <|> snmpb
155 Espace(s) en fin de ligne à supprimer. [[83:84]] => Pour une utilisation de base du SNMP, vous avez besoin de 2 commandes principales :  <|>   => suggestions : ['']

161 Mot inconnu : snmpwalk [[5:13]] => ==== snmpwalk ==== <|> snmpwalk
172 Espace(s) en fin de ligne à supprimer. [[70:71]] => Une telle commande retourne quelque chose de similaire à ce qui suit :  <|>   => suggestions : ['']
195 Espace(s) en fin de ligne à supprimer. [[142:143]] => Cette liste peut être très longue et dépend du périphérique supervisé. Vous constatez que les informations sont classées par MIB suivi du OID.  <|>   => suggestions : ['']

205 Mot inconnu : snmpget [[5:12]] => ==== snmpget ==== <|> snmpget

220 Écriture invariable. Utilisez un point médian. [[6:13]] => ===== Note(s) ===== <|> note(s) => suggestions : ['Note·s']
