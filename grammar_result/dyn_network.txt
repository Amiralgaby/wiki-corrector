
9 Incohérence avec « me » : « menu » devrait être un verbe. => Lorsque l'on dispose d'un portable que l'on promène par monts et par vaux, il peut être bien pratique de choisir son environnement réseau au démarrage de la machine. On n'a alors plus besoin d'activer/désactiver certaines interfaces réseau ni de les configurer une fois l'initialisation de la machine terminée. Ce document propose une méthode simple permettant d'atteindre cet objectif, basée sur le choix d'un réseau dans me menu de démarrage, une configuration du fichier ''/etc/network/interfaces'' et un script de «mapping». | menu => suggestions : []
9 Mot inconnu : mapping => Lorsque l'on dispose d'un portable que l'on promène par monts et par vaux, il peut être bien pratique de choisir son environnement réseau au démarrage de la machine. On n'a alors plus besoin d'activer/désactiver certaines interfaces réseau ni de les configurer une fois l'initialisation de la machine terminée. Ce document propose une méthode simple permettant d'atteindre cet objectif, basée sur le choix d'un réseau dans me menu de démarrage, une configuration du fichier ''/etc/network/interfaces'' et un script de «mapping». | mapping

16 Guillemets typographiques ouvrants. => Depuis longtemps déjà, il est possible de spécifier des arguments à transmettre au noyau au démarrage de celui-ci. Parmi les plus connus citons ''root=/dev///XXXX//'' pour spécifier la partition racine du système, ou ''vga=//XYZ//'' pour déterminer le mode graphique lors de la phase de démarrage. | '' => suggestions : ['«\xa0', '“']
16 Mot inconnu : root => Depuis longtemps déjà, il est possible de spécifier des arguments à transmettre au noyau au démarrage de celui-ci. Parmi les plus connus citons ''root=/dev///XXXX//'' pour spécifier la partition racine du système, ou ''vga=//XYZ//'' pour déterminer le mode graphique lors de la phase de démarrage. | root
16 Mot inconnu : XXXX => Depuis longtemps déjà, il est possible de spécifier des arguments à transmettre au noyau au démarrage de celui-ci. Parmi les plus connus citons ''root=/dev///XXXX//'' pour spécifier la partition racine du système, ou ''vga=//XYZ//'' pour déterminer le mode graphique lors de la phase de démarrage. | xxxx
16 Guillemets typographiques ouvrants. => Depuis longtemps déjà, il est possible de spécifier des arguments à transmettre au noyau au démarrage de celui-ci. Parmi les plus connus citons ''root=/dev///XXXX//'' pour spécifier la partition racine du système, ou ''vga=//XYZ//'' pour déterminer le mode graphique lors de la phase de démarrage. | '' => suggestions : ['«\xa0', '“']
16 Mot inconnu : vga => Depuis longtemps déjà, il est possible de spécifier des arguments à transmettre au noyau au démarrage de celui-ci. Parmi les plus connus citons ''root=/dev///XXXX//'' pour spécifier la partition racine du système, ou ''vga=//XYZ//'' pour déterminer le mode graphique lors de la phase de démarrage. | vga
16 Mot inconnu : XYZ => Depuis longtemps déjà, il est possible de spécifier des arguments à transmettre au noyau au démarrage de celui-ci. Parmi les plus connus citons ''root=/dev///XXXX//'' pour spécifier la partition racine du système, ou ''vga=//XYZ//'' pour déterminer le mode graphique lors de la phase de démarrage. | xyz

18 Mot inconnu : proc => Sur le système en fonctionnement, l'ensemble des paramètres transmis au noyau en fonctionnement est consigné dans le fichier ''/proc/cmdline''. Nous allons utiliser ce moyen pour préciser quel est l'environnement réseau que nous souhaitons activer. On ajoutera par exemple une directive du type :<file> | proc
18 Mot inconnu : cmdline => Sur le système en fonctionnement, l'ensemble des paramètres transmis au noyau en fonctionnement est consigné dans le fichier ''/proc/cmdline''. Nous allons utiliser ce moyen pour préciser quel est l'environnement réseau que nous souhaitons activer. On ajoutera par exemple une directive du type :<file> | cmdline
18 Guillemets typographiques fermants. => Sur le système en fonctionnement, l'ensemble des paramètres transmis au noyau en fonctionnement est consigné dans le fichier ''/proc/cmdline''. Nous allons utiliser ce moyen pour préciser quel est l'environnement réseau que nous souhaitons activer. On ajoutera par exemple une directive du type :<file> | '' => suggestions : ['\xa0»', '”']

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   net=home-wifi |    => suggestions : ['']

21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   net=work-wired</file> |    => suggestions : ['']
21 Mot inconnu : work-wired =>   net=work-wired</file> | work-wired

26 Typographie : points de suspension. Utilisez le caractère dédié. => Au démarrage de la machine, le contenu du fichier ''/etc/network/interfaces'' détermine quelles sont les interfaces physiques qui vont être activées, et de quelle manière (automatique, manuelle avec spécification de l'adresse IP...). | ... => suggestions : ['…']

27 Espace(s) en fin de ligne à supprimer. => À chaque choix de réseau **logique** accessible dans le menu de démarrage nous allons faire correspondre une configuration particulière d'interface **physique** grâce à ce fichier ''/etc/network/interfaces''.  |   => suggestions : ['']

32 Mot inconnu : proc => Il ne nous reste plus qu'à récupérer, grâce à un script qui sera exécuté à l'intérieur de ''/etc/network/interfaces'', la valeur de paramètre définissant le réseau logique choisi. Sachant que l'ensemble des paramètres passés au noyau est disponible dans le fichier ''/proc/cmdline'' ; le script en question se contentera d'aller extraire la valeur de la chaîne de caractères qui suit la directive ''net='' et de remonter cette information aux instructions suivantes dans ''/etc/network/interfaces''. | proc
32 Mot inconnu : cmdline => Il ne nous reste plus qu'à récupérer, grâce à un script qui sera exécuté à l'intérieur de ''/etc/network/interfaces'', la valeur de paramètre définissant le réseau logique choisi. Sachant que l'ensemble des paramètres passés au noyau est disponible dans le fichier ''/proc/cmdline'' ; le script en question se contentera d'aller extraire la valeur de la chaîne de caractères qui suit la directive ''net='' et de remonter cette information aux instructions suivantes dans ''/etc/network/interfaces''. | cmdline
32 Guillemets typographiques fermants. => Il ne nous reste plus qu'à récupérer, grâce à un script qui sera exécuté à l'intérieur de ''/etc/network/interfaces'', la valeur de paramètre définissant le réseau logique choisi. Sachant que l'ensemble des paramètres passés au noyau est disponible dans le fichier ''/proc/cmdline'' ; le script en question se contentera d'aller extraire la valeur de la chaîne de caractères qui suit la directive ''net='' et de remonter cette information aux instructions suivantes dans ''/etc/network/interfaces''. | '' => suggestions : ['\xa0»', '”']
32 Guillemets typographiques ouvrants. => Il ne nous reste plus qu'à récupérer, grâce à un script qui sera exécuté à l'intérieur de ''/etc/network/interfaces'', la valeur de paramètre définissant le réseau logique choisi. Sachant que l'ensemble des paramètres passés au noyau est disponible dans le fichier ''/proc/cmdline'' ; le script en question se contentera d'aller extraire la valeur de la chaîne de caractères qui suit la directive ''net='' et de remonter cette information aux instructions suivantes dans ''/etc/network/interfaces''. | '' => suggestions : ['«\xa0', '“']

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   title           Ubuntu, kernel 2.6.12-10-386 |    => suggestions : ['']
40 Mot inconnu : title =>   title           Ubuntu, kernel 2.6.12-10-386 | title
40 Espace(s) surnuméraire(s) à supprimer. =>   title           Ubuntu, kernel 2.6.12-10-386 |             => suggestions : [' ']
40 Mot inconnu : kernel =>   title           Ubuntu, kernel 2.6.12-10-386 | kernel

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   root            (hd0,4) |    => suggestions : ['']
41 Mot inconnu : root =>   root            (hd0,4) | root
41 Espace(s) surnuméraire(s) à supprimer. =>   root            (hd0,4) |              => suggestions : [' ']
41 Mot inconnu : hd0 =>   root            (hd0,4) | hd0
41 Il manque un espace. =>   root            (hd0,4) | 4 => suggestions : [' 4']

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash |    => suggestions : ['']
42 Mot inconnu : kernel =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | kernel
42 Espace(s) surnuméraire(s) à supprimer. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash |            => suggestions : [' ']
42 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | -2 => suggestions : ['−2', '– 2', '— 2']
42 Mot inconnu : root =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | root
42 Mot inconnu : ro =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | ro
42 Mot inconnu : vga =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | vga
42 Accord de nombre erroné avec « 771 » : « quiet » devrait être au pluriel. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | quiet => suggestions : ['quiets']

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   initrd          /boot/initrd.img-2.6.12-10-386 |    => suggestions : ['']
43 Mot inconnu : initrd =>   initrd          /boot/initrd.img-2.6.12-10-386 | initrd
43 Espace(s) surnuméraire(s) à supprimer. =>   initrd          /boot/initrd.img-2.6.12-10-386 |            => suggestions : [' ']
43 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   initrd          /boot/initrd.img-2.6.12-10-386 | -2 => suggestions : ['−2', '– 2', '— 2']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   savedefault |    => suggestions : ['']
44 Mot inconnu : savedefault =>   savedefault | savedefault

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   boot |    => suggestions : ['']
45 Mot inconnu : boot =>   boot | boot
46 Mot inconnu : Standalone => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | standalone
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | wifi
46 Mot inconnu : Work => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | work
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | wifi
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | wifi
46 Mot inconnu : Work => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | work
46 Mot inconnu : Wired => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | wired
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). | wifi

48 Guillemets typographiques ouvrants. => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   | '' => suggestions : ['«\xa0', '“']
48 Mot inconnu : title => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   | title
48 Guillemets typographiques fermants. => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   | '' => suggestions : ['\xa0»', '”']
48 Guillemets typographiques ouvrants. => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   | '' => suggestions : ['«\xa0', '“']
48 Mot inconnu : kernel => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   | kernel
48 Guillemets typographiques fermants. => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   | '' => suggestions : ['\xa0»', '”']
48 Espace(s) en fin de ligne à supprimer. => Seules les lignes ''title'' et ''kernel'' doivent être modifiées :   |    => suggestions : ['']

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''title'' pour adapter le label qui sera proposé au démarrage, |    => suggestions : ['']
49 Guillemets typographiques ouvrants. =>   * ''title'' pour adapter le label qui sera proposé au démarrage, | '' => suggestions : ['«\xa0', '“']
49 Mot inconnu : title =>   * ''title'' pour adapter le label qui sera proposé au démarrage, | title
49 Guillemets typographiques fermants. =>   * ''title'' pour adapter le label qui sera proposé au démarrage, | '' => suggestions : ['\xa0»', '”']

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''kernel'' pour ajouter le paramètre noyau spécifique au réseau. |    => suggestions : ['']
50 Guillemets typographiques ouvrants. =>   * ''kernel'' pour ajouter le paramètre noyau spécifique au réseau. | '' => suggestions : ['«\xa0', '“']
50 Mot inconnu : kernel =>   * ''kernel'' pour ajouter le paramètre noyau spécifique au réseau. | kernel
50 Guillemets typographiques fermants. =>   * ''kernel'' pour ajouter le paramètre noyau spécifique au réseau. | '' => suggestions : ['\xa0»', '”']

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   title           Ubuntu, kernel 2.6.12-10-386 Standalone |    => suggestions : ['']
54 Mot inconnu : title =>   title           Ubuntu, kernel 2.6.12-10-386 Standalone | title
54 Espace(s) surnuméraire(s) à supprimer. =>   title           Ubuntu, kernel 2.6.12-10-386 Standalone |             => suggestions : [' ']
54 Mot inconnu : kernel =>   title           Ubuntu, kernel 2.6.12-10-386 Standalone | kernel
54 Mot inconnu : Standalone =>   title           Ubuntu, kernel 2.6.12-10-386 Standalone | standalone

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   root            (hd0,4) |    => suggestions : ['']
55 Mot inconnu : root =>   root            (hd0,4) | root
55 Espace(s) surnuméraire(s) à supprimer. =>   root            (hd0,4) |              => suggestions : [' ']
55 Mot inconnu : hd0 =>   root            (hd0,4) | hd0
55 Il manque un espace. =>   root            (hd0,4) | 4 => suggestions : [' 4']

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash |    => suggestions : ['']
56 Mot inconnu : kernel =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | kernel
56 Espace(s) surnuméraire(s) à supprimer. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash |            => suggestions : [' ']
56 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | -2 => suggestions : ['−2', '– 2', '— 2']
56 Mot inconnu : root =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | root
56 Mot inconnu : ro =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | ro
56 Mot inconnu : vga =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | vga
56 Accord de nombre erroné avec « 771 » : « quiet » devrait être au pluriel. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash | quiet => suggestions : ['quiets']

57 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   initrd          /boot/initrd.img-2.6.12-10-386 |    => suggestions : ['']
57 Mot inconnu : initrd =>   initrd          /boot/initrd.img-2.6.12-10-386 | initrd
57 Espace(s) surnuméraire(s) à supprimer. =>   initrd          /boot/initrd.img-2.6.12-10-386 |            => suggestions : [' ']
57 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   initrd          /boot/initrd.img-2.6.12-10-386 | -2 => suggestions : ['−2', '– 2', '— 2']

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   savedefault |    => suggestions : ['']
58 Mot inconnu : savedefault =>   savedefault | savedefault

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   boot |    => suggestions : ['']
59 Mot inconnu : boot =>   boot | boot

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   title           Ubuntu, kernel 2.6.12-10-386 Home WiFi |    => suggestions : ['']
61 Mot inconnu : title =>   title           Ubuntu, kernel 2.6.12-10-386 Home WiFi | title
61 Espace(s) surnuméraire(s) à supprimer. =>   title           Ubuntu, kernel 2.6.12-10-386 Home WiFi |             => suggestions : [' ']
61 Mot inconnu : kernel =>   title           Ubuntu, kernel 2.6.12-10-386 Home WiFi | kernel
61 Mot inconnu : WiFi =>   title           Ubuntu, kernel 2.6.12-10-386 Home WiFi | wifi

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   root            (hd0,4) |    => suggestions : ['']
62 Mot inconnu : root =>   root            (hd0,4) | root
62 Espace(s) surnuméraire(s) à supprimer. =>   root            (hd0,4) |              => suggestions : [' ']
62 Mot inconnu : hd0 =>   root            (hd0,4) | hd0
62 Il manque un espace. =>   root            (hd0,4) | 4 => suggestions : [' 4']

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi |    => suggestions : ['']
63 Mot inconnu : kernel =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi | kernel
63 Espace(s) surnuméraire(s) à supprimer. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi |            => suggestions : [' ']
63 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi | -2 => suggestions : ['−2', '– 2', '— 2']
63 Mot inconnu : root =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi | root
63 Mot inconnu : ro =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi | ro
63 Mot inconnu : vga =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi | vga
63 Accord de nombre erroné avec « 771 » : « quiet » devrait être au pluriel. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=home-wifi | quiet => suggestions : ['quiets']

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   initrd          /boot/initrd.img-2.6.12-10-386 |    => suggestions : ['']
64 Mot inconnu : initrd =>   initrd          /boot/initrd.img-2.6.12-10-386 | initrd
64 Espace(s) surnuméraire(s) à supprimer. =>   initrd          /boot/initrd.img-2.6.12-10-386 |            => suggestions : [' ']
64 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   initrd          /boot/initrd.img-2.6.12-10-386 | -2 => suggestions : ['−2', '– 2', '— 2']

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   savedefault |    => suggestions : ['']
65 Mot inconnu : savedefault =>   savedefault | savedefault

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   boot |    => suggestions : ['']
66 Mot inconnu : boot =>   boot | boot

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   title           Ubuntu, kernel 2.6.12-10-386 Work WiFi |    => suggestions : ['']
68 Mot inconnu : title =>   title           Ubuntu, kernel 2.6.12-10-386 Work WiFi | title
68 Espace(s) surnuméraire(s) à supprimer. =>   title           Ubuntu, kernel 2.6.12-10-386 Work WiFi |             => suggestions : [' ']
68 Mot inconnu : kernel =>   title           Ubuntu, kernel 2.6.12-10-386 Work WiFi | kernel
68 Mot inconnu : Work =>   title           Ubuntu, kernel 2.6.12-10-386 Work WiFi | work
68 Mot inconnu : WiFi =>   title           Ubuntu, kernel 2.6.12-10-386 Work WiFi | wifi

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   root            (hd0,4) |    => suggestions : ['']
69 Mot inconnu : root =>   root            (hd0,4) | root
69 Espace(s) surnuméraire(s) à supprimer. =>   root            (hd0,4) |              => suggestions : [' ']
69 Mot inconnu : hd0 =>   root            (hd0,4) | hd0
69 Il manque un espace. =>   root            (hd0,4) | 4 => suggestions : [' 4']

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi |    => suggestions : ['']
70 Mot inconnu : kernel =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | kernel
70 Espace(s) surnuméraire(s) à supprimer. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi |            => suggestions : [' ']
70 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | -2 => suggestions : ['−2', '– 2', '— 2']
70 Mot inconnu : root =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | root
70 Mot inconnu : ro =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | ro
70 Mot inconnu : vga =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | vga
70 Accord de nombre erroné avec « 771 » : « quiet » devrait être au pluriel. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | quiet => suggestions : ['quiets']
70 Mot inconnu : work-wifi =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wifi | work-wifi

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   initrd          /boot/initrd.img-2.6.12-10-386 |    => suggestions : ['']
71 Mot inconnu : initrd =>   initrd          /boot/initrd.img-2.6.12-10-386 | initrd
71 Espace(s) surnuméraire(s) à supprimer. =>   initrd          /boot/initrd.img-2.6.12-10-386 |            => suggestions : [' ']
71 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   initrd          /boot/initrd.img-2.6.12-10-386 | -2 => suggestions : ['−2', '– 2', '— 2']

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   savedefault |    => suggestions : ['']
72 Mot inconnu : savedefault =>   savedefault | savedefault

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   boot |    => suggestions : ['']
73 Mot inconnu : boot =>   boot | boot

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   title           Ubuntu, kernel 2.6.12-10-386 Work Wired |    => suggestions : ['']
75 Mot inconnu : title =>   title           Ubuntu, kernel 2.6.12-10-386 Work Wired | title
75 Espace(s) surnuméraire(s) à supprimer. =>   title           Ubuntu, kernel 2.6.12-10-386 Work Wired |             => suggestions : [' ']
75 Mot inconnu : kernel =>   title           Ubuntu, kernel 2.6.12-10-386 Work Wired | kernel
75 Mot inconnu : Work =>   title           Ubuntu, kernel 2.6.12-10-386 Work Wired | work
75 Mot inconnu : Wired =>   title           Ubuntu, kernel 2.6.12-10-386 Work Wired | wired

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   root            (hd0,4) |    => suggestions : ['']
76 Mot inconnu : root =>   root            (hd0,4) | root
76 Espace(s) surnuméraire(s) à supprimer. =>   root            (hd0,4) |              => suggestions : [' ']
76 Mot inconnu : hd0 =>   root            (hd0,4) | hd0
76 Il manque un espace. =>   root            (hd0,4) | 4 => suggestions : [' 4']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired |    => suggestions : ['']
77 Mot inconnu : kernel =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | kernel
77 Espace(s) surnuméraire(s) à supprimer. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired |            => suggestions : [' ']
77 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | -2 => suggestions : ['−2', '– 2', '— 2']
77 Mot inconnu : root =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | root
77 Mot inconnu : ro =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | ro
77 Mot inconnu : vga =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | vga
77 Accord de nombre erroné avec « 771 » : « quiet » devrait être au pluriel. =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | quiet => suggestions : ['quiets']
77 Mot inconnu : work-wired =>   kernel          /boot/vmlinuz-2.6.12-10-386 root=/dev/sda5 ro vga=771 quiet splash net=work-wired | work-wired

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   initrd          /boot/initrd.img-2.6.12-10-386 |    => suggestions : ['']
78 Mot inconnu : initrd =>   initrd          /boot/initrd.img-2.6.12-10-386 | initrd
78 Espace(s) surnuméraire(s) à supprimer. =>   initrd          /boot/initrd.img-2.6.12-10-386 |            => suggestions : [' ']
78 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   initrd          /boot/initrd.img-2.6.12-10-386 | -2 => suggestions : ['−2', '– 2', '— 2']

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   savedefault |    => suggestions : ['']
79 Mot inconnu : savedefault =>   savedefault | savedefault

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   boot |    => suggestions : ['']
80 Mot inconnu : boot =>   boot | boot

84 Accord de nombre erroné avec « les différentes interfaces » : « réseau » devrait être au pluriel. => Le fichier ''/etc/network/interfaces'' décrit l'ensemble des opérations à effectuer pour activer les différentes interfaces réseau **physiques** dont dispose la machine. Sa structure et son mode de fonctionnement pouvant être assez élaborés, je me contenterai ici d'aller à l'essentiel. | réseau => suggestions : ['réseaux']

86 Incohérence avec “que”. Confusion probable : “à” est une préposition. Écrivez “a” pour la conjugaison de “avoir”. => En premier lieu, on va demander à ce que toutes nos interfaces **physiques** subissent les opérations de configuration, quitte à que certaines restent inactives au bout du compte. Ceci s'obtient à l'aide d'un ligne de type : | à => suggestions : ['a']
86 Accord de genre erroné : « ligne » est féminin. => En premier lieu, on va demander à ce que toutes nos interfaces **physiques** subissent les opérations de configuration, quitte à que certaines restent inactives au bout du compte. Ceci s'obtient à l'aide d'un ligne de type : | un => suggestions : ['une']
86 Accord de genre erroné : « un » est un déterminant masculin. => En premier lieu, on va demander à ce que toutes nos interfaces **physiques** subissent les opérations de configuration, quitte à que certaines restent inactives au bout du compte. Ceci s'obtient à l'aide d'un ligne de type : | ligne => suggestions : ['ligné']

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   auto lo eth0 wlan0 |    => suggestions : ['']
87 Mot inconnu : lo =>   auto lo eth0 wlan0 | lo
87 Mot inconnu : eth0 =>   auto lo eth0 wlan0 | eth0
87 Mot inconnu : wlan0 =>   auto lo eth0 wlan0 | wlan0

88 Mot inconnu : lo => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | lo
88 Guillemets typographiques fermants. => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | '' => suggestions : ['\xa0»', '”']
88 Guillemets typographiques ouvrants. => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | '' => suggestions : ['«\xa0', '“']
88 Mot inconnu : eth0 => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | eth0
88 Guillemets typographiques fermants. => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | '' => suggestions : ['\xa0»', '”']
88 Guillemets typographiques ouvrants. => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | '' => suggestions : ['«\xa0', '“']
88 Mot inconnu : wlan0 => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | wlan0
88 Guillemets typographiques fermants. => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | '' => suggestions : ['\xa0»', '”']
88 Espace(s) surnuméraire(s) à supprimer. => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). |    => suggestions : [' ']
88 Mot inconnu : WiFi => (''lo'' est obligatoire, c'est la «boucle locale» ; ''eth0'' et ''wlan0'' sont les interfaces correspondant respectivement  à ma carte Ethernet, et à ma carte WiFi). | wifi

91 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   iface lo inet loopback |    => suggestions : ['']
91 Mot inconnu : iface =>   iface lo inet loopback | iface
91 Mot inconnu : lo =>   iface lo inet loopback | lo
91 Mot inconnu : inet =>   iface lo inet loopback | inet
91 Mot inconnu : loopback =>   iface lo inet loopback | loopback
93 Mot inconnu : mapping => Ensuite, des directives de «mapping» vont faire correspondre à chaque interface physique le nom du réseau tel qu'il a été spécifié en tant que paramètre au démarrage du noyau. | mapping

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mapping wlan0 |    => suggestions : ['']
96 Mot inconnu : mapping =>   mapping wlan0 | mapping
96 Mot inconnu : wlan0 =>   mapping wlan0 | wlan0

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     script /etc/network/get_net_kernel_param.sh |      => suggestions : ['']

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     map home-wifi wifihome |      => suggestions : ['']
98 Mot inconnu : map =>     map home-wifi wifihome | map
98 Mot inconnu : wifihome =>     map home-wifi wifihome | wifihome

99 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     map work-wifi wifiwork |      => suggestions : ['']
99 Mot inconnu : map =>     map work-wifi wifiwork | map
99 Mot inconnu : work-wifi =>     map work-wifi wifiwork | work-wifi
99 Mot inconnu : wifiwork =>     map work-wifi wifiwork | wifiwork

101 Guillemets typographiques ouvrants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['«\xa0', '“']
101 Mot inconnu : wlan0 => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | wlan0
101 Guillemets typographiques fermants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['\xa0»', '”']
101 Mot inconnu : appeller => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | appeller
101 Guillemets typographiques ouvrants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['«\xa0', '“']
101 Mot inconnu : wlan0 => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | wlan0
101 Guillemets typographiques fermants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['\xa0»', '”']
101 Guillemets typographiques ouvrants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['«\xa0', '“']
101 Mot inconnu : mapping => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | mapping
101 Guillemets typographiques fermants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['\xa0»', '”']
101 Guillemets typographiques ouvrants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['«\xa0', '“']
101 Mot inconnu : map => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | map
101 Guillemets typographiques fermants. => Cette déclaration signifie que pour configurer ''wlan0'' il faut appeller le script ''/etc/network/get_net_kernel_param.sh'' (auquel nous reviendrons dans [[#installation_du_script_de_mapping|la section suivante]]) qui recevra comme argument le nom de l'adresse physique, ici ''wlan0'', et en entrée standard les autres lignes du bloc ''mapping'' desquelles sont enlevées les mots-clés ''map''. | '' => suggestions : ['\xa0»', '”']

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 |    => suggestions : ['']
104 Mot inconnu : echo =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | echo
104 Il manque un espace à côté du tiret. =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 |  - => suggestions : [' – ', ' — ']
104 Guillemets typographiques ouvrants. =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | " => suggestions : ['«\xa0', '“']
104 Mot inconnu : wifihome =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | wifihome
104 Mot inconnu : nwork-wifi =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | nwork-wifi
104 Mot inconnu : wifiwork =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | wifiwork
104 Guillemets typographiques fermants. =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | " => suggestions : ['\xa0»', '”']
104 Mot inconnu : wlan0 =>   echo -e "home-wifi wifihome\nwork-wifi wifiwork" | /etc/network/get_kernel_param.sh wlan0 | wlan0

106 Mot inconnu : WiFi => Ce script est alors censé afficher sur sa sortie standard un identifiant de configuration figurant dans ''/etc/network/interfaces''. Dans notre cas, si l'on a choisi au démarrage l'entrée correspondant à **Home WiFi** (et donc le paramètre ''net=home-wifi'', le script devra afficher : | wifi
106 Guillemets typographiques ouvrants. => Ce script est alors censé afficher sur sa sortie standard un identifiant de configuration figurant dans ''/etc/network/interfaces''. Dans notre cas, si l'on a choisi au démarrage l'entrée correspondant à **Home WiFi** (et donc le paramètre ''net=home-wifi'', le script devra afficher : | '' => suggestions : ['«\xa0', '“']
106 Guillemets typographiques fermants. => Ce script est alors censé afficher sur sa sortie standard un identifiant de configuration figurant dans ''/etc/network/interfaces''. Dans notre cas, si l'on a choisi au démarrage l'entrée correspondant à **Home WiFi** (et donc le paramètre ''net=home-wifi'', le script devra afficher : | '' => suggestions : ['\xa0»', '”']

107 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   wifihome |    => suggestions : ['']
107 Mot inconnu : wifihome =>   wifihome | wifihome

108 Mot inconnu : Work => Si l'on a choisi l'entrée **Work WiFi** la sortie du script sera : | work
108 Mot inconnu : WiFi => Si l'on a choisi l'entrée **Work WiFi** la sortie du script sera : | wifi

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   wifiwork |    => suggestions : ['']
109 Mot inconnu : wifiwork =>   wifiwork | wifiwork

111 Guillemets typographiques ouvrants. => J'ajoute donc à ''/etc/network/interfaces'' les instructions de configuration effectives pour ''wifihome'' et pour ''wifiwork'' : <file> | '' => suggestions : ['«\xa0', '“']
111 Mot inconnu : wifihome => J'ajoute donc à ''/etc/network/interfaces'' les instructions de configuration effectives pour ''wifihome'' et pour ''wifiwork'' : <file> | wifihome
111 Guillemets typographiques fermants. => J'ajoute donc à ''/etc/network/interfaces'' les instructions de configuration effectives pour ''wifihome'' et pour ''wifiwork'' : <file> | '' => suggestions : ['\xa0»', '”']
111 Guillemets typographiques ouvrants. => J'ajoute donc à ''/etc/network/interfaces'' les instructions de configuration effectives pour ''wifihome'' et pour ''wifiwork'' : <file> | '' => suggestions : ['«\xa0', '“']
111 Mot inconnu : wifiwork => J'ajoute donc à ''/etc/network/interfaces'' les instructions de configuration effectives pour ''wifihome'' et pour ''wifiwork'' : <file> | wifiwork
111 Guillemets typographiques fermants. => J'ajoute donc à ''/etc/network/interfaces'' les instructions de configuration effectives pour ''wifihome'' et pour ''wifiwork'' : <file> | '' => suggestions : ['\xa0»', '”']

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   iface wifihome inet static |    => suggestions : ['']
112 Mot inconnu : iface =>   iface wifihome inet static | iface
112 Mot inconnu : wifihome =>   iface wifihome inet static | wifihome
112 Mot inconnu : inet =>   iface wifihome inet static | inet
112 Mot inconnu : static =>   iface wifihome inet static | static

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        pre-up modprobe ndiswrapper |         => suggestions : ['']
113 Mot inconnu : pre-up =>        pre-up modprobe ndiswrapper | pre-up
113 Mot inconnu : modprobe =>        pre-up modprobe ndiswrapper | modprobe
113 Mot inconnu : ndiswrapper =>        pre-up modprobe ndiswrapper | ndiswrapper

114 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        address 192.168.0.2 |         => suggestions : ['']
114 Mot inconnu : address =>        address 192.168.0.2 | address

115 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        netmask 255.255.255.0 |         => suggestions : ['']
115 Mot inconnu : netmask =>        netmask 255.255.255.0 | netmask

116 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        gateway 192.168.0.1 |         => suggestions : ['']
116 Mot inconnu : gateway =>        gateway 192.168.0.1 | gateway

117 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        wireless-essid homesweethome |         => suggestions : ['']
117 Mot inconnu : wireless-essid =>        wireless-essid homesweethome | wireless-essid
117 Mot inconnu : homesweethome =>        wireless-essid homesweethome | homesweethome

118 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        wireless-key 1234ABCDEF |         => suggestions : ['']
118 Mot inconnu : wireless-key =>        wireless-key 1234ABCDEF | wireless-key
118 Mot inconnu : ABCDEF =>        wireless-key 1234ABCDEF | abcdef

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf |         => suggestions : ['']
119 Mot inconnu : post-up =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf | post-up
119 Mot inconnu : echo =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf | echo
119 Il manque un espace à côté du tiret. =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf |  - => suggestions : [' – ', ' — ']
119 Guillemets typographiques ouvrants. =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf | " => suggestions : ['«\xa0', '“']
119 Mot inconnu : nameserver =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf | nameserver
119 Mot inconnu : nameserver =>        post-up echo -e "nameserver 213.228.0.168\nameserver 212.27.63.113" > /etc/resolv.conf | nameserver

120 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

121 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   iface wifiwork inet dhcp |    => suggestions : ['']
121 Mot inconnu : iface =>   iface wifiwork inet dhcp | iface
121 Mot inconnu : wifiwork =>   iface wifiwork inet dhcp | wifiwork
121 Mot inconnu : inet =>   iface wifiwork inet dhcp | inet
121 Mot inconnu : dhcp =>   iface wifiwork inet dhcp | dhcp

122 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        pre-up modprobe ndiswrapper |         => suggestions : ['']
122 Mot inconnu : pre-up =>        pre-up modprobe ndiswrapper | pre-up
122 Mot inconnu : modprobe =>        pre-up modprobe ndiswrapper | modprobe
122 Mot inconnu : ndiswrapper =>        pre-up modprobe ndiswrapper | ndiswrapper

123 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        wireless-essid workessid |         => suggestions : ['']
123 Mot inconnu : wireless-essid =>        wireless-essid workessid | wireless-essid
123 Mot inconnu : workessid =>        wireless-essid workessid | workessid

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        wireless-key ABCDEF1234</file> |         => suggestions : ['']
124 Mot inconnu : wireless-key =>        wireless-key ABCDEF1234</file> | wireless-key
124 Mot inconnu : ABCDEF1234 =>        wireless-key ABCDEF1234</file> | abcdef1234

126 Guillemets typographiques ouvrants. => La configuration de ''wifihome'' est purement statique. Outre sa propre adresse, j'y spécifie le masque de sous-réseau et la passerelle. Et en fin de configuration, à l'aide de la ligne comportant la commande ''post-up'' je crée le fichier ''/etc/resolv.conf'' avec les deux serveurs de nom de mon FAI pour avoir un DNS fonctionnel. | '' => suggestions : ['«\xa0', '“']
126 Mot inconnu : wifihome => La configuration de ''wifihome'' est purement statique. Outre sa propre adresse, j'y spécifie le masque de sous-réseau et la passerelle. Et en fin de configuration, à l'aide de la ligne comportant la commande ''post-up'' je crée le fichier ''/etc/resolv.conf'' avec les deux serveurs de nom de mon FAI pour avoir un DNS fonctionnel. | wifihome
126 Guillemets typographiques fermants. => La configuration de ''wifihome'' est purement statique. Outre sa propre adresse, j'y spécifie le masque de sous-réseau et la passerelle. Et en fin de configuration, à l'aide de la ligne comportant la commande ''post-up'' je crée le fichier ''/etc/resolv.conf'' avec les deux serveurs de nom de mon FAI pour avoir un DNS fonctionnel. | '' => suggestions : ['\xa0»', '”']
126 Guillemets typographiques ouvrants. => La configuration de ''wifihome'' est purement statique. Outre sa propre adresse, j'y spécifie le masque de sous-réseau et la passerelle. Et en fin de configuration, à l'aide de la ligne comportant la commande ''post-up'' je crée le fichier ''/etc/resolv.conf'' avec les deux serveurs de nom de mon FAI pour avoir un DNS fonctionnel. | '' => suggestions : ['«\xa0', '“']
126 Mot inconnu : post-up => La configuration de ''wifihome'' est purement statique. Outre sa propre adresse, j'y spécifie le masque de sous-réseau et la passerelle. Et en fin de configuration, à l'aide de la ligne comportant la commande ''post-up'' je crée le fichier ''/etc/resolv.conf'' avec les deux serveurs de nom de mon FAI pour avoir un DNS fonctionnel. | post-up
126 Guillemets typographiques fermants. => La configuration de ''wifihome'' est purement statique. Outre sa propre adresse, j'y spécifie le masque de sous-réseau et la passerelle. Et en fin de configuration, à l'aide de la ligne comportant la commande ''post-up'' je crée le fichier ''/etc/resolv.conf'' avec les deux serveurs de nom de mon FAI pour avoir un DNS fonctionnel. | '' => suggestions : ['\xa0»', '”']

128 Guillemets typographiques ouvrants. => La configuration de ''wifiwork'' est, quant à elle, entièrement automatique (par ''dhcp'') | '' => suggestions : ['«\xa0', '“']
128 Mot inconnu : wifiwork => La configuration de ''wifiwork'' est, quant à elle, entièrement automatique (par ''dhcp'') | wifiwork
128 Guillemets typographiques fermants. => La configuration de ''wifiwork'' est, quant à elle, entièrement automatique (par ''dhcp'') | '' => suggestions : ['\xa0»', '”']
128 Guillemets typographiques ouvrants. => La configuration de ''wifiwork'' est, quant à elle, entièrement automatique (par ''dhcp'') | '' => suggestions : ['«\xa0', '“']
128 Mot inconnu : dhcp => La configuration de ''wifiwork'' est, quant à elle, entièrement automatique (par ''dhcp'') | dhcp
128 Guillemets typographiques fermants. => La configuration de ''wifiwork'' est, quant à elle, entièrement automatique (par ''dhcp'') | '' => suggestions : ['\xa0»', '”']

130 Guillemets typographiques ouvrants. => Ces deux configurations nécessitent néanmoins que l'on charge préalablement le module ''ndiswrapper'' (bah oui, ma carte n'est pas supportée en natif :-(), d'o la ligne contenant la commande ''pre-up''. Dans les deux cas, les identifiants des réseaux sans fil sont également inclus dans la configuration. | '' => suggestions : ['«\xa0', '“']
130 Mot inconnu : ndiswrapper => Ces deux configurations nécessitent néanmoins que l'on charge préalablement le module ''ndiswrapper'' (bah oui, ma carte n'est pas supportée en natif :-(), d'o la ligne contenant la commande ''pre-up''. Dans les deux cas, les identifiants des réseaux sans fil sont également inclus dans la configuration. | ndiswrapper
130 Guillemets typographiques fermants. => Ces deux configurations nécessitent néanmoins que l'on charge préalablement le module ''ndiswrapper'' (bah oui, ma carte n'est pas supportée en natif :-(), d'o la ligne contenant la commande ''pre-up''. Dans les deux cas, les identifiants des réseaux sans fil sont également inclus dans la configuration. | '' => suggestions : ['\xa0»', '”']
130 Guillemets typographiques ouvrants. => Ces deux configurations nécessitent néanmoins que l'on charge préalablement le module ''ndiswrapper'' (bah oui, ma carte n'est pas supportée en natif :-(), d'o la ligne contenant la commande ''pre-up''. Dans les deux cas, les identifiants des réseaux sans fil sont également inclus dans la configuration. | '' => suggestions : ['«\xa0', '“']
130 Mot inconnu : pre-up => Ces deux configurations nécessitent néanmoins que l'on charge préalablement le module ''ndiswrapper'' (bah oui, ma carte n'est pas supportée en natif :-(), d'o la ligne contenant la commande ''pre-up''. Dans les deux cas, les identifiants des réseaux sans fil sont également inclus dans la configuration. | pre-up
130 Guillemets typographiques fermants. => Ces deux configurations nécessitent néanmoins que l'on charge préalablement le module ''ndiswrapper'' (bah oui, ma carte n'est pas supportée en natif :-(), d'o la ligne contenant la commande ''pre-up''. Dans les deux cas, les identifiants des réseaux sans fil sont également inclus dans la configuration. | '' => suggestions : ['\xa0»', '”']

132 Guillemets typographiques ouvrants. => Ce qui vaut pour l'interface physique ''wlan0'' est aisément transposable à ''eth0'' dont la configuration se fait donc à l'aide des lignes ci-dessous : <file> | '' => suggestions : ['«\xa0', '“']
132 Mot inconnu : wlan0 => Ce qui vaut pour l'interface physique ''wlan0'' est aisément transposable à ''eth0'' dont la configuration se fait donc à l'aide des lignes ci-dessous : <file> | wlan0
132 Guillemets typographiques fermants. => Ce qui vaut pour l'interface physique ''wlan0'' est aisément transposable à ''eth0'' dont la configuration se fait donc à l'aide des lignes ci-dessous : <file> | '' => suggestions : ['\xa0»', '”']
132 Guillemets typographiques ouvrants. => Ce qui vaut pour l'interface physique ''wlan0'' est aisément transposable à ''eth0'' dont la configuration se fait donc à l'aide des lignes ci-dessous : <file> | '' => suggestions : ['«\xa0', '“']
132 Mot inconnu : eth0 => Ce qui vaut pour l'interface physique ''wlan0'' est aisément transposable à ''eth0'' dont la configuration se fait donc à l'aide des lignes ci-dessous : <file> | eth0
132 Guillemets typographiques fermants. => Ce qui vaut pour l'interface physique ''wlan0'' est aisément transposable à ''eth0'' dont la configuration se fait donc à l'aide des lignes ci-dessous : <file> | '' => suggestions : ['\xa0»', '”']

133 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mapping eth0 |    => suggestions : ['']
133 Mot inconnu : mapping =>   mapping eth0 | mapping
133 Mot inconnu : eth0 =>   mapping eth0 | eth0

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        script /etc/network/get_kernel_param.sh |         => suggestions : ['']

135 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        map work-wired wiredwork |         => suggestions : ['']
135 Mot inconnu : map =>        map work-wired wiredwork | map
135 Mot inconnu : work-wired =>        map work-wired wiredwork | work-wired
135 Mot inconnu : wiredwork =>        map work-wired wiredwork | wiredwork

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   iface wiredwork inet dhcp |    => suggestions : ['']
137 Mot inconnu : iface =>   iface wiredwork inet dhcp | iface
137 Mot inconnu : wiredwork =>   iface wiredwork inet dhcp | wiredwork
137 Mot inconnu : inet =>   iface wiredwork inet dhcp | inet
137 Mot inconnu : dhcp =>   iface wiredwork inet dhcp | dhcp

138 Espace(s) en fin de ligne à supprimer. => </file>     |      => suggestions : ['']
140 Typographie : points de suspension. Utilisez le caractère dédié. => Ouf ! Voilà pour le fichier ''/etc/network/interfaces''. Ne reste plus que la dernière étape... | ... => suggestions : ['…']
144 Mot inconnu : mapping => ====Installation du script de «mapping»==== | mapping

146 Mot inconnu : mapping => Voici script de mapping dont le fonctionnement est décrit dans la section précédente : | mapping

178 Confusion probable : “sont” est le verbe “être” à la 3ᵉ personne du pluriel. Pour le déterminant, écrivez “son”. => Même si les commentaires sont en anglais, sont déroulement ne devrait pas poser de problème de compréhension majeur : | sont => suggestions : ['son']
178 Accord avec la forme verbale “sont” : “déroulement” devrait être au pluriel. => Même si les commentaires sont en anglais, sont déroulement ne devrait pas poser de problème de compréhension majeur : | déroulement => suggestions : ['déroulements']

179 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * le nom de l'interface passé en premier argument est récupéré dans la variable ''IFACE'' |    => suggestions : ['']
179 Guillemets typographiques ouvrants. =>   * le nom de l'interface passé en premier argument est récupéré dans la variable ''IFACE'' | '' => suggestions : ['«\xa0', '“']
179 Mot inconnu : IFACE =>   * le nom de l'interface passé en premier argument est récupéré dans la variable ''IFACE'' | iface
179 Guillemets typographiques fermants. =>   * le nom de l'interface passé en premier argument est récupéré dans la variable ''IFACE'' | '' => suggestions : ['\xa0»', '”']

180 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * le nom de la configuration réseau (paramètre noyau) est récupéré dans ''BOOTNETNAME'' |    => suggestions : ['']
180 Guillemets typographiques ouvrants. =>   * le nom de la configuration réseau (paramètre noyau) est récupéré dans ''BOOTNETNAME'' | '' => suggestions : ['«\xa0', '“']
180 Mot inconnu : BOOTNETNAME =>   * le nom de la configuration réseau (paramètre noyau) est récupéré dans ''BOOTNETNAME'' | bootnetname
180 Guillemets typographiques fermants. =>   * le nom de la configuration réseau (paramètre noyau) est récupéré dans ''BOOTNETNAME'' | '' => suggestions : ['\xa0»', '”']

181 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * le nom de l'interface logique à configurer sera stocké dans ''RESULTIFACENAME'' |    => suggestions : ['']
181 Guillemets typographiques ouvrants. =>   * le nom de l'interface logique à configurer sera stocké dans ''RESULTIFACENAME'' | '' => suggestions : ['«\xa0', '“']
181 Mot inconnu : RESULTIFACENAME =>   * le nom de l'interface logique à configurer sera stocké dans ''RESULTIFACENAME'' | resultifacename
181 Guillemets typographiques fermants. =>   * le nom de l'interface logique à configurer sera stocké dans ''RESULTIFACENAME'' | '' => suggestions : ['\xa0»', '”']

182 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' |    => suggestions : ['']
182 Guillemets typographiques ouvrants. =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' | '' => suggestions : ['«\xa0', '“']
182 Mot inconnu : while =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' | while
182 Guillemets typographiques fermants. =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' | '' => suggestions : ['\xa0»', '”']
182 Guillemets typographiques ouvrants. =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' | '' => suggestions : ['«\xa0', '“']
182 Mot inconnu : map =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' | map
182 Guillemets typographiques fermants. =>   * une boucle ''while'' traite toutes les lignes reçues en entrée et issues des lignes ''map'' de ''/etc/network/interfaces'' | '' => suggestions : ['\xa0»', '”']

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * ces lignes contiennent deux mots : le nom d'une configuration réseau (''NETNAME'') et le nom logique de l'interface correspondante à configurer (''IFACENAME'') |      => suggestions : ['']
183 Mot inconnu : NETNAME =>     * ces lignes contiennent deux mots : le nom d'une configuration réseau (''NETNAME'') et le nom logique de l'interface correspondante à configurer (''IFACENAME'') | netname
183 Guillemets typographiques fermants. =>     * ces lignes contiennent deux mots : le nom d'une configuration réseau (''NETNAME'') et le nom logique de l'interface correspondante à configurer (''IFACENAME'') | '' => suggestions : ['\xa0»', '”']
183 Mot inconnu : IFACENAME =>     * ces lignes contiennent deux mots : le nom d'une configuration réseau (''NETNAME'') et le nom logique de l'interface correspondante à configurer (''IFACENAME'') | ifacename
183 Guillemets typographiques fermants. =>     * ces lignes contiennent deux mots : le nom d'une configuration réseau (''NETNAME'') et le nom logique de l'interface correspondante à configurer (''IFACENAME'') | '' => suggestions : ['\xa0»', '”']

184 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * s'il y a correspondance entre le nom de la configuration et celle passée au noyau, on affecte l'interface logique à configurer avec la valeur de ''IFACENAME'' |      => suggestions : ['']
184 Guillemets typographiques ouvrants. =>     * s'il y a correspondance entre le nom de la configuration et celle passée au noyau, on affecte l'interface logique à configurer avec la valeur de ''IFACENAME'' | '' => suggestions : ['«\xa0', '“']
184 Mot inconnu : IFACENAME =>     * s'il y a correspondance entre le nom de la configuration et celle passée au noyau, on affecte l'interface logique à configurer avec la valeur de ''IFACENAME'' | ifacename
184 Guillemets typographiques fermants. =>     * s'il y a correspondance entre le nom de la configuration et celle passée au noyau, on affecte l'interface logique à configurer avec la valeur de ''IFACENAME'' | '' => suggestions : ['\xa0»', '”']

185 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * enfin, un test final vérifie qu'il y a bien une configuration correspondant à celle demandée (''RESULTIFACENAME'' n'est pas vide) et l'affiche |    => suggestions : ['']
185 Mot inconnu : RESULTIFACENAME =>   * enfin, un test final vérifie qu'il y a bien une configuration correspondant à celle demandée (''RESULTIFACENAME'' n'est pas vide) et l'affiche | resultifacename
185 Guillemets typographiques fermants. =>   * enfin, un test final vérifie qu'il y a bien une configuration correspondant à celle demandée (''RESULTIFACENAME'' n'est pas vide) et l'affiche | '' => suggestions : ['\xa0»', '”']

186 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * dans le cas contraire un code de retour non-nul est retourné signifiant qu'il ne faut pas configurer l'interface physique donnée en argument du script. |    => suggestions : ['']

188 Mot inconnu : scipt => Ce scipt se trouve donc dans le fichier ''/etc/network/get_net_kernel_param.sh'' comme indiqué dans ''/etc/network/interfaces''. | scipt

191 Accord de nombre erroné avec « les différents environnements » : « réseau » devrait être au pluriel. => Nous sommes donc arrivés au bout de nos peines, et disposons d'un système dont nous pouvons personnaliser à souhait les différents environnements réseau.  | réseau => suggestions : ['réseaux']
191 Espace(s) en fin de ligne à supprimer. => Nous sommes donc arrivés au bout de nos peines, et disposons d'un système dont nous pouvons personnaliser à souhait les différents environnements réseau.  |   => suggestions : ['']

196 Accord de nombre erroné avec « quelques lignes » : « supplémentaire » devrait être au pluriel. => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | supplémentaire => suggestions : ['supplémentaires']
196 Guillemets typographiques ouvrants. => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | '' => suggestions : ['«\xa0', '“']
196 Mot inconnu : mailhost => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | mailhost
196 Guillemets typographiques fermants. => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | '' => suggestions : ['\xa0»', '”']
196 Guillemets typographiques ouvrants. => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | '' => suggestions : ['«\xa0', '“']
196 Mot inconnu : mailhost => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | mailhost
196 Guillemets typographiques fermants. => Pour ceux qui ne se seraient pas encore endormis, il peut être utile d'ajouter d'autres éléments à la configuration dynamique. Par exemple, ma propre configuration ajoute quelques lignes supplémentaire à chaque interface logique dans ''/etc/network/interfaces'' de façon à configurer correctement le serveur SMTP sortant. L'astuce est de déclarer ce serveur dans /etc/hosts comme ''mailhost'' et de configurer l'ensemble de ses clients de messagerie en indiquant ''mailhost'' comme serveur de messagerie sortant. | '' => suggestions : ['\xa0»', '”']

198 Guillemets typographiques ouvrants. => Voici un exemple de ce que j'ai ajouté au bloc qui configure ''wifihome'' : | '' => suggestions : ['«\xa0', '“']
198 Mot inconnu : wifihome => Voici un exemple de ce que j'ai ajouté au bloc qui configure ''wifihome'' : | wifihome
198 Guillemets typographiques fermants. => Voici un exemple de ce que j'ai ajouté au bloc qui configure ''wifihome'' : | '' => suggestions : ['\xa0»', '”']

200 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   post-up grep -v mailhost /etc/hosts >> /tmp/hosts |    => suggestions : ['']
200 Mot inconnu : post-up =>   post-up grep -v mailhost /etc/hosts >> /tmp/hosts | post-up
200 Mot inconnu : grep =>   post-up grep -v mailhost /etc/hosts >> /tmp/hosts | grep
200 Il manque un espace à côté du tiret. =>   post-up grep -v mailhost /etc/hosts >> /tmp/hosts |  - => suggestions : [' – ', ' — ']
200 Mot inconnu : mailhost =>   post-up grep -v mailhost /etc/hosts >> /tmp/hosts | mailhost

201 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   post-up mv /tmp/hosts/ /etc/hosts |    => suggestions : ['']
201 Mot inconnu : post-up =>   post-up mv /tmp/hosts/ /etc/hosts | post-up
201 Mot inconnu : mv =>   post-up mv /tmp/hosts/ /etc/hosts | mv

202 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   post-up echo "212.27.48.4 smtp.free.fr mailhost" >> /etc/hosts |    => suggestions : ['']
202 Mot inconnu : post-up =>   post-up echo "212.27.48.4 smtp.free.fr mailhost" >> /etc/hosts | post-up
202 Mot inconnu : echo =>   post-up echo "212.27.48.4 smtp.free.fr mailhost" >> /etc/hosts | echo
202 Mot inconnu : mailhost =>   post-up echo "212.27.48.4 smtp.free.fr mailhost" >> /etc/hosts | mailhost
202 Guillemets typographiques fermants. =>   post-up echo "212.27.48.4 smtp.free.fr mailhost" >> /etc/hosts | " => suggestions : ['\xa0»', '”']

204 Mot inconnu : nettoyent => Les deux premières lignes nettoyent ''/etc/hosts'' pour en éliminer un éventuel ''mailhost'' résiduel, et la dernière y a joute l'adresse du serveur SMTP de mon FAI.  | nettoyent
204 Guillemets typographiques ouvrants. => Les deux premières lignes nettoyent ''/etc/hosts'' pour en éliminer un éventuel ''mailhost'' résiduel, et la dernière y a joute l'adresse du serveur SMTP de mon FAI.  | '' => suggestions : ['«\xa0', '“']
204 Mot inconnu : mailhost => Les deux premières lignes nettoyent ''/etc/hosts'' pour en éliminer un éventuel ''mailhost'' résiduel, et la dernière y a joute l'adresse du serveur SMTP de mon FAI.  | mailhost
204 Guillemets typographiques fermants. => Les deux premières lignes nettoyent ''/etc/hosts'' pour en éliminer un éventuel ''mailhost'' résiduel, et la dernière y a joute l'adresse du serveur SMTP de mon FAI.  | '' => suggestions : ['\xa0»', '”']
204 Espace(s) en fin de ligne à supprimer. => Les deux premières lignes nettoyent ''/etc/hosts'' pour en éliminer un éventuel ''mailhost'' résiduel, et la dernière y a joute l'adresse du serveur SMTP de mon FAI.  |   => suggestions : ['']

209 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * une connexion maison par wifi |    => suggestions : ['']

210 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * une connexion travail derrière un __PROXY__ ? |    => suggestions : ['']
210 Mot inconnu : __PROXY__ =>   * une connexion travail derrière un __PROXY__ ? | __proxy__
214 Il manque un espace. => Contributeurs : [[utilisateurs:verrader]] | verrader => suggestions : [' verrader']
