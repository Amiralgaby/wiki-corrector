46 Mot inconnu : Standalone => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> standalone
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> wifi
46 Mot inconnu : Work => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> work
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> wifi
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> wifi
46 Mot inconnu : Work => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> work
46 Mot inconnu : Wired => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> wired
46 Mot inconnu : WiFi => Afin de pouvoir choisir son réseau au démarrage, on va dupliquer ce bloc autant de fois qu'il y a de configurations réseau souhaitées. Dans mon cas, il y en a quatre : un mode «non-connecté» où aucune interface ne doit être activée que j'appellerai **Standalone**, un deuxième mode adapté à mon réseau domestique sans fil (**Home Wifi**) où seule l'interface WiFi doit être configurée, un troisième mode (**Work WiFi**) où je suis connecté au réseau d'entreprise par une borne WiFi, et enfin un dernier mode (**Work Wired**) utilisant un bon vieux câble Ethernet au cas où la borne WiFi de mon entreprise serait défaillante ;-). <|> wifi

86 Incohérence avec “que”. Confusion probable : “à” est une préposition. Écrivez “a” pour la conjugaison de “avoir”. => En premier lieu, on va demander à ce que toutes nos interfaces **physiques** subissent les opérations de configuration, quitte à que certaines restent inactives au bout du compte. Ceci s'obtient à l'aide d'un ligne de type : <|> à => suggestions : ['a']
86 Accord de genre erroné : « ligne » est féminin. => En premier lieu, on va demander à ce que toutes nos interfaces **physiques** subissent les opérations de configuration, quitte à que certaines restent inactives au bout du compte. Ceci s'obtient à l'aide d'un ligne de type : <|> un => suggestions : ['une']
86 Accord de genre erroné : « un » est un déterminant masculin. => En premier lieu, on va demander à ce que toutes nos interfaces **physiques** subissent les opérations de configuration, quitte à que certaines restent inactives au bout du compte. Ceci s'obtient à l'aide d'un ligne de type : <|> ligne => suggestions : ['ligné']
93 Mot inconnu : mapping => Ensuite, des directives de «mapping» vont faire correspondre à chaque interface physique le nom du réseau tel qu'il a été spécifié en tant que paramètre au démarrage du noyau. <|> mapping

108 Mot inconnu : Work => Si l'on a choisi l'entrée **Work WiFi** la sortie du script sera : <|> work
108 Mot inconnu : WiFi => Si l'on a choisi l'entrée **Work WiFi** la sortie du script sera : <|> wifi

138 Espace(s) en fin de ligne à supprimer. => </file>     <|>      => suggestions : ['']
144 Mot inconnu : mapping => ====Installation du script de «mapping»==== <|> mapping

146 Mot inconnu : mapping => Voici script de mapping dont le fonctionnement est décrit dans la section précédente : <|> mapping

178 Confusion probable : “sont” est le verbe “être” à la 3ᵉ personne du pluriel. Pour le déterminant, écrivez “son”. => Même si les commentaires sont en anglais, sont déroulement ne devrait pas poser de problème de compréhension majeur : <|> sont => suggestions : ['son']
178 Accord avec la forme verbale “sont” : “déroulement” devrait être au pluriel. => Même si les commentaires sont en anglais, sont déroulement ne devrait pas poser de problème de compréhension majeur : <|> déroulement => suggestions : ['déroulements']

191 Accord de nombre erroné avec « les différents environnements » : « réseau » devrait être au pluriel. => Nous sommes donc arrivés au bout de nos peines, et disposons d'un système dont nous pouvons personnaliser à souhait les différents environnements réseau.  <|> réseau => suggestions : ['réseaux']
191 Espace(s) en fin de ligne à supprimer. => Nous sommes donc arrivés au bout de nos peines, et disposons d'un système dont nous pouvons personnaliser à souhait les différents environnements réseau.  <|>   => suggestions : ['']
210 Mot inconnu : __PROXY__ =>   * une connexion travail derrière un __PROXY__ ? <|> __proxy__
