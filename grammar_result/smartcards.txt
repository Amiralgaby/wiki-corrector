
6 Espace(s) surnuméraire(s) à supprimer. => Les Cartes à puce  (smart cards en anglais) sont des cartes intelligentes qui embarquent un microcontrôleur ou un microprocesseur. Le nombre d'applications est illimité. |    => suggestions : [' ']
6 Mot inconnu : cards => Les Cartes à puce  (smart cards en anglais) sont des cartes intelligentes qui embarquent un microcontrôleur ou un microprocesseur. Le nombre d'applications est illimité. | cards

10 Mot inconnu : SC => Cette page traite de deux type de cartes, les cartes PC/SC et les cartes de type [[#javax.smartcardio]]. | sc
10 Mot inconnu : smartcardio => Cette page traite de deux type de cartes, les cartes PC/SC et les cartes de type [[#javax.smartcardio]]. | smartcardio

13 Mot inconnu : SC => La spécification de cette bibliothèque est faite par le PC/SC Workgroup, composé de grands fabricants de carte à puce ou d'ordinateur. Son but est d'assurer une base standard de commandes pour permettre une meilleure interopérabilité entre PC, lecteurs de carte et cartes à puce elles-mêmes. | sc
13 Mot inconnu : Workgroup => La spécification de cette bibliothèque est faite par le PC/SC Workgroup, composé de grands fabricants de carte à puce ou d'ordinateur. Son but est d'assurer une base standard de commandes pour permettre une meilleure interopérabilité entre PC, lecteurs de carte et cartes à puce elles-mêmes. | workgroup

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

19 Mot inconnu : SC => ===== PC/SC (Personal computer/Smart Card) ===== | sc
19 Mot inconnu : Personal => ===== PC/SC (Personal computer/Smart Card) ===== | personal

38 Mot inconnu : libccid => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. | libccid
38 Mot inconnu : pcscd => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. | pcscd
38 Mot inconnu : SC => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. | sc
38 Mot inconnu : Integrated_circuit_card_interface_device => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. | integrated_circuit_card_interface_device
42 Mot inconnu : pcsc-tools => Pour vérifier que tout fonctionne, vous pouvez utiliser les outils du paquet **[[apt>pcsc-tools]]** :  | pcsc-tools
42 Espace(s) en fin de ligne à supprimer. => Pour vérifier que tout fonctionne, vous pouvez utiliser les outils du paquet **[[apt>pcsc-tools]]** :  |   => suggestions : ['']

47 Mot inconnu : javax => ===== javax.smartcardio ===== | javax
47 Mot inconnu : smartcardio => ===== javax.smartcardio ===== | smartcardio

49 Mot inconnu : JSR => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. | jsr
49 Mot inconnu : cards => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. | cards
49 Mot inconnu : IEC => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. | iec
49 Mot inconnu : APDUs => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. | apdus
49 Mot inconnu : SC => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. | sc

51 Incohérence : les mots “des” et “ses” ne devraient pas se succéder. => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web. | des => suggestions : ['de', 'dès']
51 Confusion probable. Pour la préposition, écrivez “dès” ou “de”. => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web. | ses => suggestions : ['saies']
51 Accord de genre erroné : « applet » est masculin. => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web. | une => suggestions : ['un']
129 Espace(s) en fin de ligne à supprimer. => Généralement, sous Eclipse vous obtiendrez sur les classes de l'API un message d'erreur de ce type :  |   => suggestions : ['']

130 Mot inconnu : Access => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | access
130 Mot inconnu : The => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | the
130 Mot inconnu : TerminalFactory => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | terminalfactory
130 Mot inconnu : is => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | is
130 Mot inconnu : not => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | not
130 Mot inconnu : to => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | to
130 Mot inconnu : required => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | required
130 Mot inconnu : library => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | library
130 Il manque un espace. => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> | jar => suggestions : [' jar']

132 Mot inconnu : JVM => Pour pallier ce problème, il faut lever les restrictions d'Eclipse sur la JVM. | jvm

142 Mot inconnu : pcsc_scan => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix).  | pcsc_scan
142 Confusion. Ce qui est dû. => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix).  | du => suggestions : ['dû']
142 Espace(s) en fin de ligne à supprimer. => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix).  |   => suggestions : ['']

144 Mot inconnu : libpcsclite => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//. | libpcsclite
144 Mot inconnu : so => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//. | so
