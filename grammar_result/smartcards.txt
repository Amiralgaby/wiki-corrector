7 Espace(s) surnuméraire(s) à supprimer. => Les Cartes à puce  (smart cards en anglais) sont des cartes intelligentes qui embarquent un microcontrôleur ou un microprocesseur. Le nombre d'applications est illimité.
7 Mot inconnu : cards => Les Cartes à puce  (smart cards en anglais) sont des cartes intelligentes qui embarquent un microcontrôleur ou un microprocesseur. Le nombre d'applications est illimité.

11 Mot inconnu : SC => Cette page traite de deux type de cartes, les cartes PC/SC et les cartes de type [[#javax.smartcardio]].
11 Mot inconnu : smartcardio => Cette page traite de deux type de cartes, les cartes PC/SC et les cartes de type [[#javax.smartcardio]].
13 Mot inconnu : SC => [[wpfr>PC/SC|Personal computer/Smart Card]] (ou PC/SC) est une bibliothèque logicielle pour l'accès à des cartes à puce sous Microsoft Windows. Une implémentation libre de PC/SC, appelée PC/SC Lite, est disponible sous GNU/Linux et distribuée avec Mac OS X.
13 Mot inconnu : Personal => [[wpfr>PC/SC|Personal computer/Smart Card]] (ou PC/SC) est une bibliothèque logicielle pour l'accès à des cartes à puce sous Microsoft Windows. Une implémentation libre de PC/SC, appelée PC/SC Lite, est disponible sous GNU/Linux et distribuée avec Mac OS X.
13 Mot inconnu : SC => [[wpfr>PC/SC|Personal computer/Smart Card]] (ou PC/SC) est une bibliothèque logicielle pour l'accès à des cartes à puce sous Microsoft Windows. Une implémentation libre de PC/SC, appelée PC/SC Lite, est disponible sous GNU/Linux et distribuée avec Mac OS X.
13 Mot inconnu : SC => [[wpfr>PC/SC|Personal computer/Smart Card]] (ou PC/SC) est une bibliothèque logicielle pour l'accès à des cartes à puce sous Microsoft Windows. Une implémentation libre de PC/SC, appelée PC/SC Lite, est disponible sous GNU/Linux et distribuée avec Mac OS X.
13 Mot inconnu : SC => [[wpfr>PC/SC|Personal computer/Smart Card]] (ou PC/SC) est une bibliothèque logicielle pour l'accès à des cartes à puce sous Microsoft Windows. Une implémentation libre de PC/SC, appelée PC/SC Lite, est disponible sous GNU/Linux et distribuée avec Mac OS X.

14 Mot inconnu : SC => La spécification de cette bibliothèque est faite par le PC/SC Workgroup, composé de grands fabricants de carte à puce ou d'ordinateur. Son but est d'assurer une base standard de commandes pour permettre une meilleure interopérabilité entre PC, lecteurs de carte et cartes à puce elles-mêmes.
14 Mot inconnu : Workgroup => La spécification de cette bibliothèque est faite par le PC/SC Workgroup, composé de grands fabricants de carte à puce ou d'ordinateur. Son but est d'assurer une base standard de commandes pour permettre une meilleure interopérabilité entre PC, lecteurs de carte et cartes à puce elles-mêmes.

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer des [[:sudo|droits d'administration]].

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée.

20 Mot inconnu : SC => ===== PC/SC (Personal computer/Smart Card) =====
20 Mot inconnu : Personal => ===== PC/SC (Personal computer/Smart Card) =====

24 Mot inconnu : SC => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
24 Il manque un espace. => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
24 Mot inconnu : pcscd => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
24 Il manque un espace. => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
24 Mot inconnu : libpcsclite1 => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
24 Mot inconnu : pcsc-tools => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
24 Mot inconnu : SC => La gestion des lecteurs PC/SC n'est pas native sous Linux, mais peut être très facilement ajoutée par l'[[:tutoriel:comment_installer_un_paquet|installation des paquets]]  **[[apt>pcscd,libpcsclite1,pcsc-tools]]** qui installent respectivement le démon PC/SC et la bibliothèque de communication.
27 Guillemets typographiques ouvrants. => Par la suite, suivant votre lecteur, il vous faudra installer le pilote PC/SC correspondant à votre périphérique. Un certain nombre est déjà fourni dans les [[:depots|dépôts]] Ubuntu. Pour savoir lequel est nécessaire à l'utilisation de votre carte entrez la commande suivante dans un [[:terminal]] : <code>apt-cache search "PC/SC driver"</code>
27 Guillemets typographiques fermants. => Par la suite, suivant votre lecteur, il vous faudra installer le pilote PC/SC correspondant à votre périphérique. Un certain nombre est déjà fourni dans les [[:depots|dépôts]] Ubuntu. Pour savoir lequel est nécessaire à l'utilisation de votre carte entrez la commande suivante dans un [[:terminal]] : <code>apt-cache search "PC/SC driver"</code>

39 Mot inconnu : libccid => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard.
39 Mot inconnu : pcscd => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard.
39 Mot inconnu : SC => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard.
39 Mot inconnu : Integrated_circuit_card_interface_device => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard.
43 Mot inconnu : pcsc-tools => Pour vérifier que tout fonctionne, vous pouvez utiliser les outils du paquet **[[apt>pcsc-tools]]** : 
43 Espace(s) en fin de ligne à supprimer. => Pour vérifier que tout fonctionne, vous pouvez utiliser les outils du paquet **[[apt>pcsc-tools]]** : 

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **pcsc_scan** : un petit script d'exemple qui détecte les périphériques et leurs cartes : <code>pcsc_scan</code> 
44 Il manque un espace insécable. =>   * **pcsc_scan** : un petit script d'exemple qui détecte les périphériques et leurs cartes : <code>pcsc_scan</code> 
44 Espace(s) en fin de ligne à supprimer. =>   * **pcsc_scan** : un petit script d'exemple qui détecte les périphériques et leurs cartes : <code>pcsc_scan</code> 

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **gscriptor** : un petit logiciel avec interface graphique qui permet d'envoyer des commandes APDU.
45 Mot inconnu : gscriptor =>   * **gscriptor** : un petit logiciel avec interface graphique qui permet d'envoyer des commandes APDU.
45 Il manque un espace insécable. =>   * **gscriptor** : un petit logiciel avec interface graphique qui permet d'envoyer des commandes APDU.
45 Mot inconnu : APDU =>   * **gscriptor** : un petit logiciel avec interface graphique qui permet d'envoyer des commandes APDU.

48 Mot inconnu : javax => ===== javax.smartcardio =====
48 Mot inconnu : smartcardio => ===== javax.smartcardio =====

50 Mot inconnu : JSR => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC.
50 Mot inconnu : cards => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC.
50 Mot inconnu : IEC => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC.
50 Mot inconnu : APDUs => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC.
50 Mot inconnu : SC => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC.

52 Incohérence : les mots “des” et “ses” ne devraient pas se succéder. => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web.
52 Confusion probable. Pour la préposition, écrivez “dès” ou “de”. => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web.
52 Accord de genre erroné : « applet » est masculin. => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web.

54 Accord erroné : “API” et “introduit” ne sont pas accordés. => Cette API a été introduit depuis Java 1.6 et est disponible et fonctionnelle avec les [[:java]] et [[:openJDK]].

130 Il manque un espace insécable. => Généralement, sous Eclipse vous obtiendrez sur les classes de l'API un message d'erreur de ce type : 
130 Espace(s) en fin de ligne à supprimer. => Généralement, sous Eclipse vous obtiendrez sur les classes de l'API un message d'erreur de ce type : 

131 Mot inconnu : Access => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Il manque un espace insécable. => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : The => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : TerminalFactory => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : is => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : not => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : to => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : required => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Mot inconnu : library => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>
131 Il manque un espace. => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note>

133 Mot inconnu : JVM => Pour pallier ce problème, il faut lever les restrictions d'Eclipse sur la JVM.

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Clic droit sur votre projet puis **Properties**
134 Mot inconnu : Properties =>   * Clic droit sur votre projet puis **Properties**

135 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**.
135 Mot inconnu : Path =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**.
135 Mot inconnu : Access =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**.
135 Mot inconnu : rules =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**.
135 Mot inconnu : Edit =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**.

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Dans la fenêtre, ajouter une règle avec le bouton **Add**.
136 Mot inconnu : Add =>   * Dans la fenêtre, ajouter une règle avec le bouton **Add**.

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//.
137 Mot inconnu : Resolution =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//.
137 Mot inconnu : Rule =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//.
137 Il manque un espace. =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//.
137 Mot inconnu : javax =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//.
137 Mot inconnu : smartcardio =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//.

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Enfin valider.

143 Mot inconnu : pcsc_scan => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix). 
143 Confusion. Ce qui est dû. => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix). 
143 Espace(s) en fin de ligne à supprimer. => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix). 

145 Mot inconnu : libpcsclite => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//.
145 Mot inconnu : so => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//.
145 Il manque un espace insécable. => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//.
145 Il manque un espace insécable. => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//.
145 Il manque un espace insécable. => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//.

148 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Sous architecture x86 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib/libpcsclite.so</code>
148 Mot inconnu : x86 =>   * Sous architecture x86 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib/libpcsclite.so</code>
148 Il manque un espace insécable. =>   * Sous architecture x86 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib/libpcsclite.so</code>
148 Il manque un espace à côté du tiret. =>   * Sous architecture x86 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib/libpcsclite.so</code>

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Sous architecture amd64 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib64/libpcsclite.so</code>
149 Mot inconnu : amd64 =>   * Sous architecture amd64 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib64/libpcsclite.so</code>
149 Il manque un espace insécable. =>   * Sous architecture amd64 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib64/libpcsclite.so</code>
149 Il manque un espace à côté du tiret. =>   * Sous architecture amd64 : <code>sudo ln -s /lib/libpcsclite.so.1 /usr/local/lib64/libpcsclite.so</code>

161 Mot inconnu : SpringCard => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.
161 Accord de nombre erroné avec « des outils » : « gratuit » devrait être au pluriel. => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.
161 Mot inconnu : SC => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.
161 Guillemets typographiques ouvrants. => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.
161 Mot inconnu : javax => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.
161 Mot inconnu : smartcardio => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.
161 Guillemets typographiques fermants. => SpringCard met à disposition des outils gratuit pour PC/SC sur son site. Notamment un [[http://www.springcard.com/online/applet_pcsc/|applet Java en ligne]] qui permet de tester facilement si ''javax.smartcardio'' fonctionne.

164 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://wiki.debian.org/fr/Smartcards|liste des cartes reconnues sous debian avec leur pilote respectif]],
164 Mot inconnu : debian =>   * [[https://wiki.debian.org/fr/Smartcards|liste des cartes reconnues sous debian avec leur pilote respectif]],

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.springcard.com/solutions/pcsc.html| Liste d'outils PCSC recensé par SpringCard]].
165 Mot inconnu : PCSC =>   * [[http://www.springcard.com/solutions/pcsc.html| Liste d'outils PCSC recensé par SpringCard]].
165 Mot inconnu : SpringCard =>   * [[http://www.springcard.com/solutions/pcsc.html| Liste d'outils PCSC recensé par SpringCard]].

169 Il manque un espace insécable. => //Contributeurs : [[:utilisateurs:SaiyanRiku]] ;//
169 Il manque un espace. => //Contributeurs : [[:utilisateurs:SaiyanRiku]] ;//
169 Il manque un espace insécable. => //Contributeurs : [[:utilisateurs:SaiyanRiku]] ;//
