
6 Espace(s) surnuméraire(s) à supprimer. [[17:19]] => Les Cartes à puce  (smart cards en anglais) sont des cartes intelligentes qui embarquent un microcontrôleur ou un microprocesseur. Le nombre d'applications est illimité. <|>    => suggestions : [' ']
6 Mot inconnu : cards [[26:31]] => Les Cartes à puce  (smart cards en anglais) sont des cartes intelligentes qui embarquent un microcontrôleur ou un microprocesseur. Le nombre d'applications est illimité. <|> cards

10 Mot inconnu : SC [[56:58]] => Cette page traite de deux type de cartes, les cartes PC/SC et les cartes de type [[#javax.smartcardio]]. <|> sc
10 Mot inconnu : smartcardio [[90:101]] => Cette page traite de deux type de cartes, les cartes PC/SC et les cartes de type [[#javax.smartcardio]]. <|> smartcardio

13 Mot inconnu : SC [[59:61]] => La spécification de cette bibliothèque est faite par le PC/SC Workgroup, composé de grands fabricants de carte à puce ou d'ordinateur. Son but est d'assurer une base standard de commandes pour permettre une meilleure interopérabilité entre PC, lecteurs de carte et cartes à puce elles-mêmes. <|> sc
13 Mot inconnu : Workgroup [[62:71]] => La spécification de cette bibliothèque est faite par le PC/SC Workgroup, composé de grands fabricants de carte à puce ou d'ordinateur. Son but est d'assurer une base standard de commandes pour permettre une meilleure interopérabilité entre PC, lecteurs de carte et cartes à puce elles-mêmes. <|> workgroup

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

19 Mot inconnu : SC [[9:11]] => ===== PC/SC (Personal computer/Smart Card) ===== <|> sc
19 Mot inconnu : Personal [[13:21]] => ===== PC/SC (Personal computer/Smart Card) ===== <|> personal

38 Mot inconnu : libccid [[12:19]] => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. <|> libccid
38 Mot inconnu : pcscd [[49:54]] => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. <|> pcscd
38 Mot inconnu : SC [[74:76]] => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. <|> sc
38 Mot inconnu : Integrated_circuit_card_interface_device [[101:141]] => Le paquet **libccid** installé par défaut avec **pcscd** est le pilote PC/SC pour le standard [[wpen>Integrated_circuit_card_interface_device|CCID]]. Il permet la reconnaissance d'un grand nombre de lecteurs génériques basés sur ce standard. <|> integrated_circuit_card_interface_device
42 Mot inconnu : pcsc-tools [[85:95]] => Pour vérifier que tout fonctionne, vous pouvez utiliser les outils du paquet **[[apt>pcsc-tools]]** :  <|> pcsc-tools
42 Espace(s) en fin de ligne à supprimer. [[101:102]] => Pour vérifier que tout fonctionne, vous pouvez utiliser les outils du paquet **[[apt>pcsc-tools]]** :  <|>   => suggestions : ['']
44 Mot inconnu : gscriptor [[6:15]] =>   * **gscriptor** : un petit logiciel avec interface graphique qui permet d'envoyer des commandes APDU. <|> gscriptor
44 Mot inconnu : APDU [[98:102]] =>   * **gscriptor** : un petit logiciel avec interface graphique qui permet d'envoyer des commandes APDU. <|> apdu

47 Mot inconnu : javax [[6:11]] => ===== javax.smartcardio ===== <|> javax
47 Mot inconnu : smartcardio [[12:23]] => ===== javax.smartcardio ===== <|> smartcardio

49 Mot inconnu : JSR [[40:43]] => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. <|> jsr
49 Mot inconnu : cards [[124:129]] => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. <|> cards
49 Mot inconnu : IEC [[149:152]] => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. <|> iec
49 Mot inconnu : APDUs [[160:165]] => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. <|> apdus
49 Mot inconnu : SC [[254:256]] => L'API Java Smart Card I/O défini par la JSR 268 est une API pour le langage Java permettant la communication avec les smart cards en utilisant l'ISO/IEC 7816-4 APDUs. Elle permet ainsi la lecture et l'écriture des cartes et fonctionne avec le lecteur PC/SC. <|> sc

51 Incohérence : les mots “des” et “ses” ne devraient pas se succéder. [[3:6]] => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web. <|> des => suggestions : ['de', 'dès']
51 Confusion probable. Pour la préposition, écrivez “dès” ou “de”. [[7:10]] => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web. <|> ses => suggestions : ['saies']
51 Accord de genre erroné : « applet » est masculin. [[42:45]] => Un des ses atouts majeurs et que couplé à une applet Java, elle permet l'utilisation des cartes directement depuis le navigateur Web. <|> une => suggestions : ['un']
129 Espace(s) en fin de ligne à supprimer. [[100:101]] => Généralement, sous Eclipse vous obtiendrez sur les classes de l'API un message d'erreur de ce type :  <|>   => suggestions : ['']

130 Mot inconnu : Access [[16:22]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> access
130 Mot inconnu : The [[36:39]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> the
130 Mot inconnu : TerminalFactory [[45:60]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> terminalfactory
130 Mot inconnu : is [[61:63]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> is
130 Mot inconnu : not [[64:67]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> not
130 Mot inconnu : to [[83:85]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> to
130 Mot inconnu : required [[101:109]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> required
130 Mot inconnu : library [[110:117]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> library
130 Il manque un espace. [[157:160]] => <note important>Access restriction: The type TerminalFactory is not accessible due to restriction on required library /usr/lib/jvm/java-6-openjdk/jre/lib/rt.jar</note> <|> jar => suggestions : [' jar']

132 Mot inconnu : JVM [[74:77]] => Pour pallier ce problème, il faut lever les restrictions d'Eclipse sur la JVM. <|> jvm
133 Mot inconnu : Properties [[39:49]] =>   * Clic droit sur votre projet puis **Properties** <|> properties
134 Mot inconnu : Path [[33:37]] =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**. <|> path
134 Mot inconnu : Access [[86:92]] =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**. <|> access
134 Mot inconnu : rules [[93:98]] =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**. <|> rules
134 Mot inconnu : Edit [[115:119]] =>   * Dans la section **Java Build Path**, onglet **Librairies**, choisissez la ligne **Access rules** puis bouton **Edit**. <|> edit
135 Mot inconnu : Add [[56:59]] =>   * Dans la fenêtre, ajouter une règle avec le bouton **Add**. <|> add
136 Mot inconnu : Resolution [[11:21]] =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//. <|> resolution
136 Mot inconnu : Rule [[60:64]] =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//. <|> rule
136 Il manque un espace. [[87:92]] =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//. <|> javax => suggestions : [' javax']
136 Mot inconnu : javax [[87:92]] =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//. <|> javax
136 Mot inconnu : smartcardio [[93:104]] =>   * Dans **Resolution**, choisir "//Accessible//" et dans **Rule pattern** mettre //"%%javax/smartcardio/**%%"//. <|> smartcardio

142 Mot inconnu : pcsc_scan [[46:55]] => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix).  <|> pcsc_scan
142 Confusion. Ce qui est dû. [[85:87]] => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix).  <|> du => suggestions : ['dû']
142 Espace(s) en fin de ligne à supprimer. [[196:197]] => Si votre cible est correctement détectée avec pcsc_scan mais pas avec Java, ceci est du à un [[https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/378294|bug]] dans Ubuntu (ou Java au choix).  <|>   => suggestions : ['']

144 Mot inconnu : libpcsclite [[33:44]] => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//. <|> libpcsclite
144 Mot inconnu : so [[45:47]] => Par défaut, l'API Java cherche **libpcsclite.so** dans les dossiers ///usr/lib:/usr/lib64:/usr/local/lib:/usr/local/lib64//. Cependant, sous Ubuntu, elle se situe dans le dossier ///lib//. <|> so
163 Mot inconnu : debian [[76:82]] =>   * [[https://wiki.debian.org/fr/Smartcards|liste des cartes reconnues sous debian avec leur pilote respectif]], <|> debian
164 Mot inconnu : PCSC [[68:72]] =>   * [[http://www.springcard.com/solutions/pcsc.html| Liste d'outils PCSC recensé par SpringCard]]. <|> pcsc
164 Mot inconnu : SpringCard [[85:95]] =>   * [[http://www.springcard.com/solutions/pcsc.html| Liste d'outils PCSC recensé par SpringCard]]. <|> springcard
