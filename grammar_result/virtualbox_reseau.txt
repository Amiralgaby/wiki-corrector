
6 Mot inconnu : VirtualBox => ====== VirtualBox et le réseau ====== <|> virtualbox

13 Mot inconnu : VirtualBox => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> virtualbox
13 Accord de nombre erroné avec « wifi ». => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> cartes => suggestions : ['carte']
13 Accord de nombre erroné avec « cartes ». => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> wifi => suggestions : ['wifis']
13 Mot inconnu : t_work_with_my_Wireless_card => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> t_work_with_my_wireless_card
13 Mot inconnu : It => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> it
13 Mot inconnu : doesn't => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> doesn't
13 Mot inconnu : work => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> work
13 Mot inconnu : with => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> with
13 Mot inconnu : my => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> my
13 Mot inconnu : Wireless => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> wireless
13 Mot inconnu : card => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|> card
13 Espace(s) en fin de ligne à supprimer. => <note important>Attention si l'hôte (le système qui exécute VirtualBox) est connecté à votre réseau par wifi : beaucoup de cartes wifi **ne supportent pas bridge**, malheureusement les deux exemples donnés ci-dessous utilisent **bridge**. Plus d'information : [[http://www.linux-foundation.org/en/Net:Bridge#It_doesn.27t_work_with_my_Wireless_card.21|It doesn't work with my Wireless card!]]  <|>   => suggestions : ['']

14 Mot inconnu : workaround => Cependant, un workaround avec iptables et le nat peut permettre à VirtualBox de se connecter au réseau même si l'interface wifi ne supporte pas le bridge. <|> workaround
14 Mot inconnu : iptables => Cependant, un workaround avec iptables et le nat peut permettre à VirtualBox de se connecter au réseau même si l'interface wifi ne supporte pas le bridge. <|> iptables
14 Mot inconnu : nat => Cependant, un workaround avec iptables et le nat peut permettre à VirtualBox de se connecter au réseau même si l'interface wifi ne supporte pas le bridge. <|> nat
14 Mot inconnu : VirtualBox => Cependant, un workaround avec iptables et le nat peut permettre à VirtualBox de se connecter au réseau même si l'interface wifi ne supporte pas le bridge. <|> virtualbox

17 Mot inconnu : VirtualBox => Pour la rédaction de cet article, les options suivantes ont été utilisées dans la configuration réseau de VirtualBox: <|> virtualbox

22 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  Sous [[Jaunty]] avec la version des dépôts (version 2.1.4 OSE) il suffit d'installer **[[apt>bridge-utils]]** et de configurer l'adaptateur réseau sur "attaché à: Adaptateur réseau Hôte" pour la machine virtuelle. Si vous êtes en DHCP le tour est joué, la machine virtuelle est accessible directement sur le réseau local sans plus de configuration. <|>   => suggestions : ['']
22 Mot inconnu : Jaunty =>  Sous [[Jaunty]] avec la version des dépôts (version 2.1.4 OSE) il suffit d'installer **[[apt>bridge-utils]]** et de configurer l'adaptateur réseau sur "attaché à: Adaptateur réseau Hôte" pour la machine virtuelle. Si vous êtes en DHCP le tour est joué, la machine virtuelle est accessible directement sur le réseau local sans plus de configuration. <|> jaunty
22 Mot inconnu : bridge-utils =>  Sous [[Jaunty]] avec la version des dépôts (version 2.1.4 OSE) il suffit d'installer **[[apt>bridge-utils]]** et de configurer l'adaptateur réseau sur "attaché à: Adaptateur réseau Hôte" pour la machine virtuelle. Si vous êtes en DHCP le tour est joué, la machine virtuelle est accessible directement sur le réseau local sans plus de configuration. <|> bridge-utils
22 Guillemets typographiques ouvrants. =>  Sous [[Jaunty]] avec la version des dépôts (version 2.1.4 OSE) il suffit d'installer **[[apt>bridge-utils]]** et de configurer l'adaptateur réseau sur "attaché à: Adaptateur réseau Hôte" pour la machine virtuelle. Si vous êtes en DHCP le tour est joué, la machine virtuelle est accessible directement sur le réseau local sans plus de configuration. <|> " => suggestions : ['«\xa0', '“']
22 Guillemets typographiques fermants. =>  Sous [[Jaunty]] avec la version des dépôts (version 2.1.4 OSE) il suffit d'installer **[[apt>bridge-utils]]** et de configurer l'adaptateur réseau sur "attaché à: Adaptateur réseau Hôte" pour la machine virtuelle. Si vous êtes en DHCP le tour est joué, la machine virtuelle est accessible directement sur le réseau local sans plus de configuration. <|> " => suggestions : ['\xa0»', '”']

24 Mot inconnu : NAT => ===== NAT ===== <|> nat

37 Mot inconnu : connection => Le fait que le pont soit permanent nous permet, pour la méthode dynamique, d'ajouter les interfaces virtuelles sans couper la connection réseau de l'hôte. <|> connection

46 Guillemets typographiques ouvrants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['«\xa0', '“']
46 Mot inconnu : eth0 => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> eth0
46 Guillemets typographiques fermants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['\xa0»', '”']
46 Guillemets typographiques ouvrants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['«\xa0', '“']
46 Mot inconnu : address => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> address
46 Guillemets typographiques fermants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['\xa0»', '”']
46 Guillemets typographiques ouvrants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['«\xa0', '“']
46 Mot inconnu : netmask => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> netmask
46 Guillemets typographiques fermants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['\xa0»', '”']
46 Guillemets typographiques ouvrants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['«\xa0', '“']
46 Mot inconnu : gateway => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> gateway
46 Guillemets typographiques fermants. => Remplacer "eth0" par le nom de l'interface à laquelle on désire attacher le pont.\\ Remplacer les valeurs de "address", "netmask" et "gateway" par celles utilisées sur le réseau. <|> " => suggestions : ['\xa0»', '”']

48 Apostrophe incorrecte. => L' interface est probablement déjà configurée par le système, repérer les lignes du type <|> l'  => suggestions : ['L’']
48 Guillemets typographiques fermants. => L' interface est probablement déjà configurée par le système, repérer les lignes du type <|> ' => suggestions : ['”', '’', '›']

50 Mot inconnu : eth0 => auto eth0  <|> eth0
50 Espace(s) en fin de ligne à supprimer. => auto eth0  <|>   => suggestions : ['']

51 Mot inconnu : iface => iface eth0 inet dhcp <|> iface
51 Mot inconnu : eth0 => iface eth0 inet dhcp <|> eth0
51 Mot inconnu : inet => iface eth0 inet dhcp <|> inet
51 Mot inconnu : dhcp => iface eth0 inet dhcp <|> dhcp

53 Mot inconnu : eth0 => auto eth0  <|> eth0
53 Espace(s) en fin de ligne à supprimer. => auto eth0  <|>   => suggestions : ['']

54 Mot inconnu : iface => iface eth0 inet static <|> iface
54 Mot inconnu : eth0 => iface eth0 inet static <|> eth0
54 Mot inconnu : inet => iface eth0 inet static <|> inet
54 Mot inconnu : static => iface eth0 inet static <|> static

61 Mot inconnu : eth0 => auto eth0 <|> eth0

62 Mot inconnu : iface => iface eth0 inet manual <|> iface
62 Mot inconnu : eth0 => iface eth0 inet manual <|> eth0
62 Mot inconnu : inet => iface eth0 inet manual <|> inet
62 Mot inconnu : manual => iface eth0 inet manual <|> manual

66 Mot inconnu : br0 => auto br0 <|> br0

67 Mot inconnu : iface => iface br0 inet dhcp <|> iface
67 Mot inconnu : br0 => iface br0 inet dhcp <|> br0
67 Mot inconnu : inet => iface br0 inet dhcp <|> inet
67 Mot inconnu : dhcp => iface br0 inet dhcp <|> dhcp

68 Mot inconnu : bridge_ports => 	bridge_ports eth0 <|> bridge_ports
68 Mot inconnu : eth0 => 	bridge_ports eth0 <|> eth0

69 Mot inconnu : xxx => </file>sinon, ajouter (remplacer les xxx par les valeurs qui se trouvaient dans la configuration de eth0)<file> <|> xxx
69 Élision de l’article devant un mot commençant par une voyelle. => </file>sinon, ajouter (remplacer les xxx par les valeurs qui se trouvaient dans la configuration de eth0)<file> <|> de  => suggestions : ['d’']
69 Mot inconnu : eth0 => </file>sinon, ajouter (remplacer les xxx par les valeurs qui se trouvaient dans la configuration de eth0)<file> <|> eth0

70 Mot inconnu : br0 => auto br0 <|> br0

71 Mot inconnu : iface => iface br0 inet static <|> iface
71 Mot inconnu : br0 => iface br0 inet static <|> br0
71 Mot inconnu : inet => iface br0 inet static <|> inet
71 Mot inconnu : static => iface br0 inet static <|> static

72 Mot inconnu : bridge_ports => 	bridge_ports eth0 <|> bridge_ports
72 Mot inconnu : eth0 => 	bridge_ports eth0 <|> eth0

73 Mot inconnu : address => 	address xxx.xxx.xxx.xxx <|> address

74 Mot inconnu : netmask => 	netmask xxx.xxx.xxx.xxx <|> netmask

75 Mot inconnu : gateway => 	gateway xxx.xxx.xxx.xxx <|> gateway

80 Mot inconnu : VirtualBox => Quelques préparatifs sont nécessaires afin que VirtualBox puisse accéder aux interfaces virtuelles. <|> virtualbox

88 Mot inconnu : KERNEL => KERNEL=="tun", NAME="net/%k"</file> <|> kernel
88 Guillemets typographiques ouvrants. => KERNEL=="tun", NAME="net/%k"</file> <|> " => suggestions : ['«\xa0', '“']
88 Mot inconnu : tun => KERNEL=="tun", NAME="net/%k"</file> <|> tun
88 Guillemets typographiques fermants. => KERNEL=="tun", NAME="net/%k"</file> <|> " => suggestions : ['\xa0»', '”']
88 Mot inconnu : NAME => KERNEL=="tun", NAME="net/%k"</file> <|> name
88 Guillemets typographiques ouvrants. => KERNEL=="tun", NAME="net/%k"</file> <|> " => suggestions : ['«\xa0', '“']
88 Il manque un espace. => KERNEL=="tun", NAME="net/%k"</file> <|> k => suggestions : [' k']
88 Guillemets typographiques fermants. => KERNEL=="tun", NAME="net/%k"</file> <|> " => suggestions : ['\xa0»', '”']

90 Mot inconnu : KERNEL => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> kernel
90 Guillemets typographiques ouvrants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['«\xa0', '“']
90 Mot inconnu : tun => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> tun
90 Guillemets typographiques fermants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['\xa0»', '”']
90 Mot inconnu : NAME => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> name
90 Guillemets typographiques ouvrants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['«\xa0', '“']
90 Il manque un espace. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> k => suggestions : [' k']
90 Guillemets typographiques fermants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['\xa0»', '”']
90 Mot inconnu : GROUP => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> group
90 Guillemets typographiques ouvrants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['«\xa0', '“']
90 Mot inconnu : tunusers => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> tunusers
90 Guillemets typographiques fermants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['\xa0»', '”']
90 Guillemets typographiques ouvrants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['«\xa0', '“']
90 Guillemets typographiques fermants. => <file>KERNEL=="tun", NAME="net/%k", GROUP="tunusers", MODE="0660"</file> <|> " => suggestions : ['\xa0»', '”']

103 Guillemets typographiques ouvrants. => Nous allons ici utiliser la commande "VBoxTunctl", cet outil n'est pas fourni avec la version OpenSource de VirtualBox, il nous faut donc [[virtualbox#installation_de_la_version_officielle_methode_classique|installer la version officielle]]. <|> " => suggestions : ['«\xa0', '“']
103 Mot inconnu : VBoxTunctl => Nous allons ici utiliser la commande "VBoxTunctl", cet outil n'est pas fourni avec la version OpenSource de VirtualBox, il nous faut donc [[virtualbox#installation_de_la_version_officielle_methode_classique|installer la version officielle]]. <|> vboxtunctl
103 Guillemets typographiques fermants. => Nous allons ici utiliser la commande "VBoxTunctl", cet outil n'est pas fourni avec la version OpenSource de VirtualBox, il nous faut donc [[virtualbox#installation_de_la_version_officielle_methode_classique|installer la version officielle]]. <|> " => suggestions : ['\xa0»', '”']
103 Mot inconnu : OpenSource => Nous allons ici utiliser la commande "VBoxTunctl", cet outil n'est pas fourni avec la version OpenSource de VirtualBox, il nous faut donc [[virtualbox#installation_de_la_version_officielle_methode_classique|installer la version officielle]]. <|> opensource
103 Mot inconnu : VirtualBox => Nous allons ici utiliser la commande "VBoxTunctl", cet outil n'est pas fourni avec la version OpenSource de VirtualBox, il nous faut donc [[virtualbox#installation_de_la_version_officielle_methode_classique|installer la version officielle]]. <|> virtualbox
103 Mot inconnu : virtualbox => Nous allons ici utiliser la commande "VBoxTunctl", cet outil n'est pas fourni avec la version OpenSource de VirtualBox, il nous faut donc [[virtualbox#installation_de_la_version_officielle_methode_classique|installer la version officielle]]. <|> virtualbox

110 Mot inconnu : include => # include lib <|> include
110 Mot inconnu : lib => # include lib <|> lib

113 Mot inconnu : CALLNAME => CALLNAME=$(basename $0) <|> callname
113 Mot inconnu : basename => CALLNAME=$(basename $0) <|> basename

115 Mot inconnu : CALLNAME => case "$CALLNAME" in <|> callname
115 Guillemets typographiques fermants. => case "$CALLNAME" in <|> " => suggestions : ['\xa0»', '”']

116 Guillemets typographiques ouvrants. => 	"vbox-network_start") <|> " => suggestions : ['«\xa0', '“']
116 Mot inconnu : vbox-network_start => 	"vbox-network_start") <|> vbox-network_start
116 Guillemets typographiques fermants. => 	"vbox-network_start") <|> " => suggestions : ['\xa0»', '”']

117 Mot inconnu : the => 		# if the fd is set, interface already exists <|> the
117 Mot inconnu : fd => 		# if the fd is set, interface already exists <|> fd
117 Mot inconnu : is => 		# if the fd is set, interface already exists <|> is
117 Mot inconnu : already => 		# if the fd is set, interface already exists <|> already
117 Mot inconnu : exists => 		# if the fd is set, interface already exists <|> exists

118 Pas d’espace après ce signe. => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> [  => suggestions : ['[']
118 Mot inconnu : IF_FD => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> if_fd
118 Guillemets typographiques fermants. => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> " => suggestions : ['\xa0»', '”']
118 Guillemets typographiques ouvrants. => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> " => suggestions : ['«\xa0', '“']
118 Guillemets typographiques fermants. => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> " => suggestions : ['\xa0»', '”']
118 Pas d’espace avant ce signe. => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|>  ] => suggestions : [']']
118 Mot inconnu : echo => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> echo
118 Mot inconnu : IF_NAME => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> if_name
118 Mot inconnu : NO_ERROR => 		[ "$IF_FD" = "0" ] || { echo $IF_NAME; exit $NO_ERROR; } <|> no_error

119 Mot inconnu : create_iface => 		create_iface <|> create_iface

121 Une de ces ponctuations est superflue. => 	;; <|> ;; => suggestions : [';', ';']

122 Guillemets typographiques ouvrants. => 	"vbox-network_stop") <|> " => suggestions : ['«\xa0', '“']
122 Mot inconnu : vbox-network_stop => 	"vbox-network_stop") <|> vbox-network_stop
122 Guillemets typographiques fermants. => 	"vbox-network_stop") <|> " => suggestions : ['\xa0»', '”']

123 Mot inconnu : delete_iface => 		delete_iface <|> delete_iface

125 Une de ces ponctuations est superflue. => 	;; <|> ;; => suggestions : [';', ';']

127 Mot inconnu : E_BAD_CALLNAME => 		exit $E_BAD_CALLNAME <|> e_bad_callname

128 Une de ces ponctuations est superflue. => 	;; <|> ;; => suggestions : [';', ';']

129 Mot inconnu : esac => esac <|> esac

134 Mot inconnu : include => # include configuration <|> include

137 Mot inconnu : IF_FD => IF_FD="$1" <|> if_fd
137 Guillemets typographiques fermants. => IF_FD="$1" <|> " => suggestions : ['\xa0»', '”']

138 Mot inconnu : IF_NAME => IF_NAME="$2" <|> if_name
138 Guillemets typographiques fermants. => IF_NAME="$2" <|> " => suggestions : ['\xa0»', '”']

140 Mot inconnu : get => # get the user running vbox <|> get
140 Mot inconnu : the => # get the user running vbox <|> the
140 Mot inconnu : vbox => # get the user running vbox <|> vbox

141 Pas d’espace après ce signe. => if [ "$SUDO_USER" = "" ]; then <|> [  => suggestions : ['[']
141 Mot inconnu : SUDO_USER => if [ "$SUDO_USER" = "" ]; then <|> sudo_user
141 Guillemets typographiques fermants. => if [ "$SUDO_USER" = "" ]; then <|> " => suggestions : ['\xa0»', '”']
141 Pas d’espace avant ce signe. => if [ "$SUDO_USER" = "" ]; then <|>  ] => suggestions : [']']
141 Mot inconnu : then => if [ "$SUDO_USER" = "" ]; then <|> then

142 Mot inconnu : VBOX_USER => 	VBOX_USER=$USER <|> vbox_user

143 Mot inconnu : else => else <|> else

144 Mot inconnu : VBOX_USER => 	VBOX_USER=$SUDO_USER <|> vbox_user
144 Mot inconnu : SUDO_USER => 	VBOX_USER=$SUDO_USER <|> sudo_user

147 Mot inconnu : errors => # errors <|> errors

148 Mot inconnu : NO_ERROR => NO_ERROR=0 <|> no_error

149 Mot inconnu : E_ERROR => E_ERROR=1 <|> e_error

150 Mot inconnu : E_NOT_ROOT => E_NOT_ROOT=2 <|> e_not_root

151 Mot inconnu : E_TUNCTL_CREATE => E_TUNCTL_CREATE=3 <|> e_tunctl_create

152 Mot inconnu : E_BAD_CALLNAME => E_BAD_CALLNAME=4 <|> e_bad_callname

154 Mot inconnu : function => function create_iface <|> function
154 Mot inconnu : create_iface => function create_iface <|> create_iface

156 Mot inconnu : need => 	# need to be root <|> need
156 Mot inconnu : to => 	# need to be root <|> to
156 Mot inconnu : root => 	# need to be root <|> root

157 Pas d’espace après ce signe. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> [  => suggestions : ['[']
157 Mot inconnu : UID => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> uid
157 Guillemets typographiques fermants. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> " => suggestions : ['\xa0»', '”']
157 Guillemets typographiques ouvrants. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> " => suggestions : ['«\xa0', '“']
157 Guillemets typographiques fermants. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> " => suggestions : ['\xa0»', '”']
157 Pas d’espace avant ce signe. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|>  ] => suggestions : [']']
157 Mot inconnu : return => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> return
157 Mot inconnu : E_NOT_ROOT => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> e_not_root

159 Mot inconnu : create => 	# create the interface <|> create
159 Mot inconnu : the => 	# create the interface <|> the

160 Mot inconnu : TUNCTL_CMD => 	TUNCTL_CMD="$TUNCTL -b -u $VBOX_USER" <|> tunctl_cmd
160 Mot inconnu : TUNCTL => 	TUNCTL_CMD="$TUNCTL -b -u $VBOX_USER" <|> tunctl
160 Il manque un espace à côté du tiret. => 	TUNCTL_CMD="$TUNCTL -b -u $VBOX_USER" <|>  - => suggestions : [' – ', ' — ']
160 Mot inconnu : VBOX_USER => 	TUNCTL_CMD="$TUNCTL -b -u $VBOX_USER" <|> vbox_user
160 Guillemets typographiques fermants. => 	TUNCTL_CMD="$TUNCTL -b -u $VBOX_USER" <|> " => suggestions : ['\xa0»', '”']

161 Pas d’espace après ce signe. => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> [  => suggestions : ['[']
161 Mot inconnu : IF_NAME => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> if_name
161 Guillemets typographiques fermants. => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> " => suggestions : ['\xa0»', '”']
161 Pas d’espace avant ce signe. => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|>  ] => suggestions : [']']
161 Mot inconnu : TUNCTL_CMD => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> tunctl_cmd
161 Mot inconnu : TUNCTL_CMD => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> tunctl_cmd
161 Mot inconnu : IF_NAME => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> if_name
161 Guillemets typographiques fermants. => 	[ "$IF_NAME" = "" ] || TUNCTL_CMD="$TUNCTL_CMD -t $IF_NAME" <|> " => suggestions : ['\xa0»', '”']

162 Pas d’espace après ce signe. => 	IF=$( $TUNCTL_CMD )	 <|> (  => suggestions : ['(']
162 Mot inconnu : TUNCTL_CMD => 	IF=$( $TUNCTL_CMD )	 <|> tunctl_cmd
162 Pas d’espace avant ce signe. => 	IF=$( $TUNCTL_CMD )	 <|>  ) => suggestions : [')']

163 Pas d’espace après ce signe. => 	[ -z "$IF" ] && return $E_TUNCTL_CREATE <|> [  => suggestions : ['[']
163 Guillemets typographiques fermants. => 	[ -z "$IF" ] && return $E_TUNCTL_CREATE <|> " => suggestions : ['\xa0»', '”']
163 Pas d’espace avant ce signe. => 	[ -z "$IF" ] && return $E_TUNCTL_CREATE <|>  ] => suggestions : [']']
163 Mot inconnu : return => 	[ -z "$IF" ] && return $E_TUNCTL_CREATE <|> return
163 Mot inconnu : E_TUNCTL_CREATE => 	[ -z "$IF" ] && return $E_TUNCTL_CREATE <|> e_tunctl_create

165 Mot inconnu : bring => 	# bring it up <|> bring
165 Mot inconnu : it => 	# bring it up <|> it
165 Mot inconnu : up => 	# bring it up <|> up

166 Mot inconnu : IFCONFIG => 	$IFCONFIG $IF up >> /dev/null <|> ifconfig
166 Mot inconnu : up => 	$IFCONFIG $IF up >> /dev/null <|> up

168 Mot inconnu : it => 	# bridge it <|> it

169 Mot inconnu : BRCTL => 	$BRCTL addif $BRIDGE $IF >> /dev/null <|> brctl
169 Mot inconnu : addif => 	$BRCTL addif $BRIDGE $IF >> /dev/null <|> addif

171 Mot inconnu : echo => 	echo $IF <|> echo

172 Mot inconnu : return => 	return $NO_ERROR <|> return
172 Mot inconnu : NO_ERROR => 	return $NO_ERROR <|> no_error

175 Mot inconnu : function => function delete_iface <|> function
175 Mot inconnu : delete_iface => function delete_iface <|> delete_iface

177 Mot inconnu : need => 	# need to be root <|> need
177 Mot inconnu : to => 	# need to be root <|> to
177 Mot inconnu : root => 	# need to be root <|> root

178 Pas d’espace après ce signe. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> [  => suggestions : ['[']
178 Mot inconnu : UID => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> uid
178 Guillemets typographiques fermants. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> " => suggestions : ['\xa0»', '”']
178 Guillemets typographiques ouvrants. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> " => suggestions : ['«\xa0', '“']
178 Guillemets typographiques fermants. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> " => suggestions : ['\xa0»', '”']
178 Pas d’espace avant ce signe. => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|>  ] => suggestions : [']']
178 Mot inconnu : return => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> return
178 Mot inconnu : E_NOT_ROOT => 	[ "$UID" = "0" ] || return $E_NOT_ROOT <|> e_not_root

180 Mot inconnu : unbridge => 	# unbridge <|> unbridge

181 Mot inconnu : BRCTL => 	$BRCTL delif $BRIDGE $IF_NAME >> /dev/null <|> brctl
181 Mot inconnu : delif => 	$BRCTL delif $BRIDGE $IF_NAME >> /dev/null <|> delif
181 Mot inconnu : IF_NAME => 	$BRCTL delif $BRIDGE $IF_NAME >> /dev/null <|> if_name

183 Mot inconnu : delete => 	# delete <|> delete

184 Mot inconnu : TUNCTL => 	$TUNCTL -d $IF_NAME >> /dev/null <|> tunctl
184 Il manque un espace à côté du tiret. => 	$TUNCTL -d $IF_NAME >> /dev/null <|>  - => suggestions : [' – ', ' — ']
184 Mot inconnu : IF_NAME => 	$TUNCTL -d $IF_NAME >> /dev/null <|> if_name

190 Guillemets typographiques ouvrants. => BRIDGE="br0" <|> " => suggestions : ['«\xa0', '“']
190 Mot inconnu : br0 => BRIDGE="br0" <|> br0
190 Guillemets typographiques fermants. => BRIDGE="br0" <|> " => suggestions : ['\xa0»', '”']

191 Mot inconnu : TUN => TUN="/dev/net/tun" <|> tun

193 Mot inconnu : TUNCTL => TUNCTL="/usr/bin/VBoxTunctl -f $TUN" <|> tunctl
193 Il manque un espace à côté du tiret. => TUNCTL="/usr/bin/VBoxTunctl -f $TUN" <|>  - => suggestions : [' – ', ' — ']
193 Mot inconnu : TUN => TUNCTL="/usr/bin/VBoxTunctl -f $TUN" <|> tun
193 Guillemets typographiques fermants. => TUNCTL="/usr/bin/VBoxTunctl -f $TUN" <|> " => suggestions : ['\xa0»', '”']

194 Mot inconnu : BRCTL => BRCTL="/usr/sbin/brctl" <|> brctl

195 Mot inconnu : IFCONFIG => IFCONFIG="/sbin/ifconfig" <|> ifconfig

198 Accord de nombre erroné : « permission » devrait être au pluriel. => Modifier les permission de **/opt/bin/vbox-network** afin qu'il soit exécutable par les membres du groupe **vboxusers**: <|> permission => suggestions : ['permissions']
198 Mot inconnu : vboxusers => Modifier les permission de **/opt/bin/vbox-network** afin qu'il soit exécutable par les membres du groupe **vboxusers**: <|> vboxusers

204 Mot inconnu : vbox-network_start => Créer les liens **vbox-network_start** et **vbox-network_stop**: <|> vbox-network_start
204 Mot inconnu : vbox-network_stop => Créer les liens **vbox-network_start** et **vbox-network_stop**: <|> vbox-network_stop

211 Mot inconnu : Editer => Editer **/etc/sudoers** afin que Virtualbox puisse exécuter les commandes nécessaires sans se voir demander de mot de passe: <|> editer
211 Mot inconnu : Virtualbox => Editer **/etc/sudoers** afin que Virtualbox puisse exécuter les commandes nécessaires sans se voir demander de mot de passe: <|> virtualbox

217 Mot inconnu : Members => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> members
217 Mot inconnu : of => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> of
217 Mot inconnu : vboxusers => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> vboxusers
217 Mot inconnu : can => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> can
217 Mot inconnu : run => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> run
217 Mot inconnu : and => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> and
217 Mot inconnu : without => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> without
217 Mot inconnu : asked => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> asked
217 Mot inconnu : password => # Members of vboxusers can run /opt/bin/vbox-network_start and /opt/bin/vbox-network_stop without asked for a password <|> password

218 Il manque un espace. => %vboxusers ALL=(ALL) NOPASSWD: /opt/bin/vbox-network_start, /opt/bin/vbox-network_stop <|> vboxusers => suggestions : [' vboxusers']
218 Mot inconnu : vboxusers => %vboxusers ALL=(ALL) NOPASSWD: /opt/bin/vbox-network_start, /opt/bin/vbox-network_stop <|> vboxusers
218 Mot inconnu : ALL => %vboxusers ALL=(ALL) NOPASSWD: /opt/bin/vbox-network_start, /opt/bin/vbox-network_stop <|> all
218 Mot inconnu : ALL => %vboxusers ALL=(ALL) NOPASSWD: /opt/bin/vbox-network_start, /opt/bin/vbox-network_stop <|> all
218 Mot inconnu : NOPASSWD => %vboxusers ALL=(ALL) NOPASSWD: /opt/bin/vbox-network_start, /opt/bin/vbox-network_stop <|> nopasswd

222 Espace(s) en fin de ligne à supprimer. => Laisser le champ **Nom de l'interface** vide.\\  <|>   => suggestions : ['']

229 Mot inconnu : systeme => Les interfaces virtuelles seront créées au démarrage du systeme, meme si elles ne sont pas utilisées par la suite. <|> systeme
229 Mot inconnu : meme => Les interfaces virtuelles seront créées au démarrage du systeme, meme si elles ne sont pas utilisées par la suite. <|> meme

233 Mot inconnu : eth0 => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> eth0
233 Mot inconnu : tapX => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> tapx
233 Mot inconnu : tap0 => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> tap0
233 Mot inconnu : tap1 => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> tap1
233 Mot inconnu : tap2 => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> tap2
233 Mot inconnu : tap3 => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> tap3
233 Typographie : points de suspension. Utilisez le caractère dédié. => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|> ... => suggestions : ['…']
233 Espace(s) en fin de ligne à supprimer. => Remplacer **eth0** par le nom de l'interface à laquelle on a attaché le pont.\\ Remplacer **tapX** par le nom de l'interface (tap0, puis tap1, tap2, tap3 ...)\\  <|>   => suggestions : ['']

237 Accord de nombre erroné avec « chaque interface » : « virtuelles » devrait être au singulier. => Pour chaque interface virtuelles, ajouter (avant la section de l'interface br0) <|> virtuelles => suggestions : ['virtuelle']
237 Mot inconnu : br0 => Pour chaque interface virtuelles, ajouter (avant la section de l'interface br0) <|> br0

239 Mot inconnu : tapX => auto tapX <|> tapx

240 Mot inconnu : iface => iface tapX inet manual <|> iface
240 Mot inconnu : tapX => iface tapX inet manual <|> tapx
240 Mot inconnu : inet => iface tapX inet manual <|> inet
240 Mot inconnu : manual => iface tapX inet manual <|> manual

241 Mot inconnu : up => 	up ifconfig $IFACE up <|> up
241 Mot inconnu : ifconfig => 	up ifconfig $IFACE up <|> ifconfig
241 Mot inconnu : IFACE => 	up ifconfig $IFACE up <|> iface
241 Mot inconnu : up => 	up ifconfig $IFACE up <|> up

242 Mot inconnu : down => 	down ifconfig $IFACE down <|> down
242 Mot inconnu : ifconfig => 	down ifconfig $IFACE down <|> ifconfig
242 Mot inconnu : IFACE => 	down ifconfig $IFACE down <|> iface
242 Mot inconnu : down => 	down ifconfig $IFACE down <|> down

243 Mot inconnu : tunctl_user => 	tunctl_user <user> <|> tunctl_user

245 Mot inconnu : br0 => puis, dans la section de l'interface br0, rajouter tapX à la fin de la ligne suivante <|> br0
245 Mot inconnu : tapX => puis, dans la section de l'interface br0, rajouter tapX à la fin de la ligne suivante <|> tapx

246 Mot inconnu : eth0 => <file>bridge-ports eth0</file> <|> eth0

248 Mot inconnu : eth0 => <file>bridge-ports eth0 tapX</file> <|> eth0
248 Mot inconnu : tapX => <file>bridge-ports eth0 tapX</file> <|> tapx

257 Mot inconnu : Sun => Pour la version 1.6.0 de Sun il faut utiliser les cartes réseaux Intel Pro/1000 au lieu des PCNet . <|> sun
257 Mot inconnu : PCNet => Pour la version 1.6.0 de Sun il faut utiliser les cartes réseaux Intel Pro/1000 au lieu des PCNet . <|> pcnet

258 Mot inconnu : XP => Télécharger [[http://downloadcenter.intel.com/download.aspx?url=/4275/a08/PRO2KXP.exe&DwnldId=4275&ProductID=871&lang=fra|Pilotes Windows XP]] et les installer. <|> xp

260 Mot inconnu : Firestarter => ==== Pour les utilisateurs de Firestarter ==== <|> firestarter

264 Mot inconnu : FIXME => FIXME A compléter <|> fixme
264 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => FIXME A compléter <|> a => suggestions : ['À']
270 Mot inconnu : br0 =>   * //Périphérique réseau connecté à Internet:// br0 <|> br0
275 Mot inconnu : br0 =>   * Sélectionnez br0 si une seule interface réseau physique est utilisée (l'ordinateur ne gère pas le partage de la connexion Internet pour le réseau local) <|> br0
277 Mot inconnu : ethx =>   * Sélectionnez ethx (x à remplacer par le numéro correspondant) si l'ordinateur est relié au réseau local par ethx et à internet par br0 (par exemple pour gérer le partage de la connexion internet)  <|> ethx
277 Mot inconnu : ethx =>   * Sélectionnez ethx (x à remplacer par le numéro correspondant) si l'ordinateur est relié au réseau local par ethx et à internet par br0 (par exemple pour gérer le partage de la connexion internet)  <|> ethx
277 Mot inconnu : br0 =>   * Sélectionnez ethx (x à remplacer par le numéro correspondant) si l'ordinateur est relié au réseau local par ethx et à internet par br0 (par exemple pour gérer le partage de la connexion internet)  <|> br0
277 Espace(s) en fin de ligne à supprimer. =>   * Sélectionnez ethx (x à remplacer par le numéro correspondant) si l'ordinateur est relié au réseau local par ethx et à internet par br0 (par exemple pour gérer le partage de la connexion internet)  <|>   => suggestions : ['']

284 Mot inconnu : VirtualBox => Pour utiliser le réseau interne, dans le gestionnaire de machines VirtualBox, dans les propriétés de la machine, choisissez réseau interne dans les interfaces réseau. <|> virtualbox

286 Mot inconnu : Virtualbox => Puis, il vous faudra préciser le nom de réseau que vous allez utiliser. Sur la documentation de Virtualbox, il est précisé qu'il faut utiliser le nom "intnet" avec l'interface graphique. Ce qui se confirme après un test. <|> virtualbox
286 Guillemets typographiques ouvrants. => Puis, il vous faudra préciser le nom de réseau que vous allez utiliser. Sur la documentation de Virtualbox, il est précisé qu'il faut utiliser le nom "intnet" avec l'interface graphique. Ce qui se confirme après un test. <|> " => suggestions : ['«\xa0', '“']
286 Mot inconnu : intnet => Puis, il vous faudra préciser le nom de réseau que vous allez utiliser. Sur la documentation de Virtualbox, il est précisé qu'il faut utiliser le nom "intnet" avec l'interface graphique. Ce qui se confirme après un test. <|> intnet
286 Guillemets typographiques fermants. => Puis, il vous faudra préciser le nom de réseau que vous allez utiliser. Sur la documentation de Virtualbox, il est précisé qu'il faut utiliser le nom "intnet" avec l'interface graphique. Ce qui se confirme après un test. <|> " => suggestions : ['\xa0»', '”']

299 Mot inconnu : PFSense => Il suffit de créer une machine virtuelle qui servira de routeur (j'ai pour ma part utilisé PFSense mais une machine sous Débian peut fonctionner également). <|> pfsense
299 Mot inconnu : Débian => Il suffit de créer une machine virtuelle qui servira de routeur (j'ai pour ma part utilisé PFSense mais une machine sous Débian peut fonctionner également). <|> débian
301 Mot inconnu : WAN =>   * Une interface WAN, connectée en NAT. <|> wan
301 Mot inconnu : NAT =>   * Une interface WAN, connectée en NAT. <|> nat
302 Mot inconnu : LAN =>   * Une interface LAN, connectée au réseau interne. <|> lan

304 Mot inconnu : PFSense => Avec PFSense, la configuration est très facile, il suffit de se laisser guider. Il faut bien penser à configurer l'interface LAN en statique et dans le bon réseau et penser également à activer le serveur DHCP sur cette interface. <|> pfsense
304 Mot inconnu : LAN => Avec PFSense, la configuration est très facile, il suffit de se laisser guider. Il faut bien penser à configurer l'interface LAN en statique et dans le bon réseau et penser également à activer le serveur DHCP sur cette interface. <|> lan

306 Accord de nombre erroné avec « au réseau » : « internes » devrait être au singulier. => Ainsi, toutes les machines virtuelles connectées au réseau internes auront une adresse automatiquement attribuée et auront accès à internet en passant par le routeur précédemment créé. <|> internes => suggestions : ['interne', 'interné']
312 Mot inconnu : VirtualBox =>   * Documentation VirtualBox: [[https://www.virtualbox.org/wiki/End-user_documentation]] (EN) <|> virtualbox
