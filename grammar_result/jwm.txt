
5 Mot inconnu : JWM => ====== JWM ====== | jwm

10 Mot inconnu : JWM => **JWM** //(Joe's Window Manager)// est un gestionnaire de fenêtres pour le système X Window. **JWM** est écrit en C et peut être compilé en ne nécessitant que la bibliothèque Xlib. | jwm
10 Mot inconnu : Joe's => **JWM** //(Joe's Window Manager)// est un gestionnaire de fenêtres pour le système X Window. **JWM** est écrit en C et peut être compilé en ne nécessitant que la bibliothèque Xlib. | joe's
10 Mot inconnu : Window => **JWM** //(Joe's Window Manager)// est un gestionnaire de fenêtres pour le système X Window. **JWM** est écrit en C et peut être compilé en ne nécessitant que la bibliothèque Xlib. | window
10 Mot inconnu : Window => **JWM** //(Joe's Window Manager)// est un gestionnaire de fenêtres pour le système X Window. **JWM** est écrit en C et peut être compilé en ne nécessitant que la bibliothèque Xlib. | window
10 Mot inconnu : JWM => **JWM** //(Joe's Window Manager)// est un gestionnaire de fenêtres pour le système X Window. **JWM** est écrit en C et peut être compilé en ne nécessitant que la bibliothèque Xlib. | jwm
10 Mot inconnu : Xlib => **JWM** //(Joe's Window Manager)// est un gestionnaire de fenêtres pour le système X Window. **JWM** est écrit en C et peut être compilé en ne nécessitant que la bibliothèque Xlib. | xlib

22 Mot inconnu : jwmrc => Tout tient dans un unique fichier de configuration appelé jwmrc. | jwmrc

27 Mot inconnu : Egalement => Egalement, si jwm n'est pas proposé par l'écran de connexion, il est vraiment bien de taper dans le terminal:  | egalement
27 Mot inconnu : jwm => Egalement, si jwm n'est pas proposé par l'écran de connexion, il est vraiment bien de taper dans le terminal:  | jwm
27 Espace(s) en fin de ligne à supprimer. => Egalement, si jwm n'est pas proposé par l'écran de connexion, il est vraiment bien de taper dans le terminal:  |   => suggestions : ['']

30 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => Le fichier est codé en XML très facile a comprendre. | a => suggestions : ['à']

34 Guillemets typographiques ouvrants. => Il se situe dans la section "RootMenu" | " => suggestions : ['«\xa0', '“']
34 Mot inconnu : RootMenu => Il se situe dans la section "RootMenu" | rootmenu
34 Guillemets typographiques fermants. => Il se situe dans la section "RootMenu" | " => suggestions : ['\xa0»', '”']
35 Espace(s) en fin de ligne à supprimer. => Voici le mien (créé juste pour l'exemple) :  |   => suggestions : ['']

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  </RootMenu> </code> |   => suggestions : ['']
57 Mot inconnu : labeled => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | labeled
57 Guillemets typographiques ouvrants. => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | " => suggestions : ['«\xa0', '“']
57 Mot inconnu : true => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | true
57 Guillemets typographiques fermants. => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | " => suggestions : ['\xa0»', '”']
57 Guillemets typographiques ouvrants. => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | " => suggestions : ['«\xa0', '“']
57 Mot inconnu : false => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | false
57 Guillemets typographiques fermants. => D'abord la balise <RootMenu> : elle admet plusieurs attributs : **label** : sera affiché en haut du menu si l'attribut **labeled** a la valeur "true", ce deuxième attribut est facultatif et s'il n'est pas indiqué sa valeur par défaut est "false". | " => suggestions : ['\xa0»', '”']

58 Mot inconnu : height => **height** définit la hauteur des lignes du menu. En utilisant la valeur Zéro elle s'adapte automatiquement à la taille des éléments. | height
59 Mot inconnu : icon => On comprend facilement les balises <Program>. Deux attributs : **icon** et **label** (nom de l'entrée) On tape dans la balise le nom de l'exécutable. Optionnellement on peut ajouter la balise **height** pour préciser la hauteur de la ligne du menu | icon
59 Mot inconnu : height => On comprend facilement les balises <Program>. Deux attributs : **icon** et **label** (nom de l'entrée) On tape dans la balise le nom de l'exécutable. Optionnellement on peut ajouter la balise **height** pour préciser la hauteur de la ligne du menu | height

60 Mot inconnu : icon => Un sous-menu est contenu dans la balise <Menu> avec, la aussi, les attributs **icon** et **label**, ici encore l'attribut **height**, optionnel, spécifie la hauteur des items qui dépendent du sous menu. Je ne vous ferez pas l'injure de vous expliquer le rôle de la balise <Separator>. | icon
60 Mot inconnu : height => Un sous-menu est contenu dans la balise <Menu> avec, la aussi, les attributs **icon** et **label**, ici encore l'attribut **height**, optionnel, spécifie la hauteur des items qui dépendent du sous menu. Je ne vous ferez pas l'injure de vous expliquer le rôle de la balise <Separator>. | height
60 Conjugaison erronée. Accord avec “Je”. Le verbe devrait être à la 1ʳᵉ personne du singulier. => Un sous-menu est contenu dans la balise <Menu> avec, la aussi, les attributs **icon** et **label**, ici encore l'attribut **height**, optionnel, spécifie la hauteur des items qui dépendent du sous menu. Je ne vous ferez pas l'injure de vous expliquer le rôle de la balise <Separator>. | ferez => suggestions : ['ferai']

62 Mot inconnu : JWM => La balise <Restart> redémarre JWM. | jwm

63 Mot inconnu : confirm => Enfin <Exit> ferme la session, l'attribut **confirm**, s'il a pour valeur true, demande juste a l'utilisateur s'il veux vraiment quitter . | confirm
63 Mot inconnu : true => Enfin <Exit> ferme la session, l'attribut **confirm**, s'il a pour valeur true, demande juste a l'utilisateur s'il veux vraiment quitter . | true
63 Conjugaison erronée. Accord avec “il”. Le verbe devrait être à la 3ᵉ personne du singulier. => Enfin <Exit> ferme la session, l'attribut **confirm**, s'il a pour valeur true, demande juste a l'utilisateur s'il veux vraiment quitter . | veux => suggestions : ['veut']

67 Mot inconnu : JWM => Il faut dire a JWM dans quels dossiers elles se trouvent. Cela se passe entre les balises **Icons** (très original...) | jwm
67 Mot inconnu : Icons => Il faut dire a JWM dans quels dossiers elles se trouvent. Cela se passe entre les balises **Icons** (très original...) | icons
67 Typographie : points de suspension. Utilisez le caractère dédié. => Il faut dire a JWM dans quels dossiers elles se trouvent. Cela se passe entre les balises **Icons** (très original...) | ... => suggestions : ['…']

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   </Icons></code> |    => suggestions : ['']

75 Mot inconnu : JWM => Il est aussi possible de démarrer un certain nombre de programmes dès le démarrage de la session JWM. Cela est assez utile dans certains cas. | jwm

76 Mot inconnu : nautilus => Par exemple, on peut démarrer nautilus: | nautilus

81 Typographie : points de suspension. Utilisez le caractère dédié. => ==== Les Barres du bas, du haut... ==== | ... => suggestions : ['…']

82 Mot inconnu : JWM => JWM permet de programmer soi-même des menus, mais aussi de créer des barres. | jwm

103 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     </Tray></code> |      => suggestions : ['']

104 Guillemets typographiques ouvrants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['«\xa0', '“']
104 Guillemets typographiques fermants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['\xa0»', '”']
104 Guillemets typographiques ouvrants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['«\xa0', '“']
104 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | -1 => suggestions : ['−1', '– 1', '— 1']
104 Guillemets typographiques fermants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['\xa0»', '”']
104 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | -1 => suggestions : ['−1', '– 1', '— 1']
104 Guillemets typographiques ouvrants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['«\xa0', '“']
104 Guillemets typographiques fermants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['\xa0»', '”']
104 Guillemets typographiques ouvrants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['«\xa0', '“']
104 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | -1 => suggestions : ['−1', '– 1', '— 1']
104 Guillemets typographiques fermants. => "x=0" et "y=-1" donnent les coordonnées de la barre. -1 c'est en bas, 1 en haut. On imagine qu'il est tout à fait possible de faire des barres latérales avec la coordonnée "x=1" ou "x=-1" avec y=0. | " => suggestions : ['\xa0»', '”']

105 Mot inconnu : Height => Height c'est la hauteur de la barre. Cela dépend du type d'icone et ce que vous voulez y mettre. | height
105 Mot inconnu : icone => Height c'est la hauteur de la barre. Cela dépend du type d'icone et ce que vous voulez y mettre. | icone

107 Guillemets typographiques ouvrants. => Il y a écrit "Menu" sur le bouton du menu root expliqué plus haut. | " => suggestions : ['«\xa0', '“']
107 Guillemets typographiques fermants. => Il y a écrit "Menu" sur le bouton du menu root expliqué plus haut. | " => suggestions : ['\xa0»', '”']
107 Mot inconnu : root => Il y a écrit "Menu" sur le bouton du menu root expliqué plus haut. | root

108 Guillemets typographiques ouvrants. => L'autre bouton "R" est un bouton permettant de réduire toutes les fenêtres en même temps. | " => suggestions : ['«\xa0', '“']
108 Guillemets typographiques fermants. => L'autre bouton "R" est un bouton permettant de réduire toutes les fenêtres en même temps. | " => suggestions : ['\xa0»', '”']

110 Guillemets typographiques ouvrants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['«\xa0', '“']
110 Guillemets typographiques fermants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['\xa0»', '”']
110 Guillemets typographiques ouvrants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['«\xa0', '“']
110 Mot inconnu : Tasklist => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | tasklist
110 Guillemets typographiques fermants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['\xa0»', '”']
110 Guillemets typographiques ouvrants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['«\xa0', '“']
110 Guillemets typographiques fermants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['\xa0»', '”']
110 Guillemets typographiques ouvrants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['«\xa0', '“']
110 Mot inconnu : swallow => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | swallow
110 Guillemets typographiques fermants. => Le "Pager" est le système qui permet de gérer les bureaux multiples, la "Tasklist" les tâches, le "Dock" permet à des applications système de s'afficher, le "swallow" permet d'intégrer des applications comme ici l'indicateur de charge du processeur. | " => suggestions : ['\xa0»', '”']

121 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     </Tray></code> |      => suggestions : ['']

122 Guillemets typographiques ouvrants. => Le code "autohide="true"" permet de masquer la barre quand le pointeur de la souris n'est pas dessus. | " => suggestions : ['«\xa0', '“']
122 Mot inconnu : autohide => Le code "autohide="true"" permet de masquer la barre quand le pointeur de la souris n'est pas dessus. | autohide
122 Guillemets typographiques ouvrants. => Le code "autohide="true"" permet de masquer la barre quand le pointeur de la souris n'est pas dessus. | " => suggestions : ['«\xa0', '“']
122 Mot inconnu : true => Le code "autohide="true"" permet de masquer la barre quand le pointeur de la souris n'est pas dessus. | true
122 Guillemets typographiques fermants. => Le code "autohide="true"" permet de masquer la barre quand le pointeur de la souris n'est pas dessus. | " => suggestions : ['\xa0»', '”']

124 Mot inconnu : JWM => Ensuite il y a toute une partie sur l'apparence des fenêtres et sur le comportement de JWM. | jwm

127 Typographie : points de suspension. Utilisez le caractère dédié. => Je continue quand je peux... A très bientôt ;) | ... => suggestions : ['…']
127 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => Je continue quand je peux... A très bientôt ;) | a => suggestions : ['À']

132 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Site officiel : http://www.joewing.net/programs/jwm/ |    => suggestions : ['']

138 Mot inconnu : daypitoum => daypitoum, pwrdesc, reflets de vert | daypitoum
138 Mot inconnu : pwrdesc => daypitoum, pwrdesc, reflets de vert | pwrdesc
