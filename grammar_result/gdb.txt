
4 Mot inconnu : Débuggage [[7:16]] => ====== Débuggage avec gdb ====== <|> débuggage
4 Mot inconnu : gdb [[22:25]] => ====== Débuggage avec gdb ====== <|> gdb

7 Mot inconnu : gdb [[0:3]] => gdb, acronyme de GNU DeBugger, est un programme qui, comme son nom l'indique, permet de débugger un programme (langages C et C++ principalement, ainsi que d'autres : fortran 77, etc..). Il permet donc de traquer les bugs/erreurs se trouvant dans tout programme. <|> gdb
7 Mot inconnu : DeBugger [[21:29]] => gdb, acronyme de GNU DeBugger, est un programme qui, comme son nom l'indique, permet de débugger un programme (langages C et C++ principalement, ainsi que d'autres : fortran 77, etc..). Il permet donc de traquer les bugs/erreurs se trouvant dans tout programme. <|> debugger
7 Mot inconnu : débugger [[88:96]] => gdb, acronyme de GNU DeBugger, est un programme qui, comme son nom l'indique, permet de débugger un programme (langages C et C++ principalement, ainsi que d'autres : fortran 77, etc..). Il permet donc de traquer les bugs/erreurs se trouvant dans tout programme. <|> débugger
7 Mot inconnu : fortran [[166:173]] => gdb, acronyme de GNU DeBugger, est un programme qui, comme son nom l'indique, permet de débugger un programme (langages C et C++ principalement, ainsi que d'autres : fortran 77, etc..). Il permet donc de traquer les bugs/erreurs se trouvant dans tout programme. <|> fortran
7 Typographie : un ou trois points ? [[181:183]] => gdb, acronyme de GNU DeBugger, est un programme qui, comme son nom l'indique, permet de débugger un programme (langages C et C++ principalement, ainsi que d'autres : fortran 77, etc..). Il permet donc de traquer les bugs/erreurs se trouvant dans tout programme. <|> .. => suggestions : .…

9 Mot inconnu : débuggage [[199:208]] => Cet outil, indispensable à tout programmeur, bien que très performant n'est disponible qu'avec une interface en ligne de commande. Heureusement, il existe des interfaces graphiques qui facilitent le débuggage. <|> débuggage

15 Mot inconnu : débuggage [[113:122]] => Si vous développez en utilisant une bibliothèque particulière, vous pouvez éventuellement installer le paquet de débuggage, dont le nom finit par **-dbg**, en plus du paquet de développement (dont le nom finit par **-dev**). <|> débuggage
15 Mot inconnu : dbg [[149:152]] => Si vous développez en utilisant une bibliothèque particulière, vous pouvez éventuellement installer le paquet de débuggage, dont le nom finit par **-dbg**, en plus du paquet de développement (dont le nom finit par **-dev**). <|> dbg
15 Mot inconnu : dev [[217:220]] => Si vous développez en utilisant une bibliothèque particulière, vous pouvez éventuellement installer le paquet de débuggage, dont le nom finit par **-dbg**, en plus du paquet de développement (dont le nom finit par **-dev**). <|> dev

19 Mot inconnu : débuggage [[38:47]] => ==== Compilation du programme pour le débuggage ==== <|> débuggage

20 Mot inconnu : gdb [[9:12]] => Pour que gdb puisse débugger un programme, il a besoin des informations de débuggage, qui peuvent être ajoutées en ajoutant l'option **-g** au compilateur. <|> gdb
20 Mot inconnu : débugger [[20:28]] => Pour que gdb puisse débugger un programme, il a besoin des informations de débuggage, qui peuvent être ajoutées en ajoutant l'option **-g** au compilateur. <|> débugger
20 Mot inconnu : débuggage [[75:84]] => Pour que gdb puisse débugger un programme, il a besoin des informations de débuggage, qui peuvent être ajoutées en ajoutant l'option **-g** au compilateur. <|> débuggage

25 Mot inconnu : gdb [[18:21]] => ==== Lancement de gdb ==== <|> gdb

26 Accord de genre erroné : « fois » est féminin. [[0:2]] => Un fois le programme compilé, invoquez gdb comme ceci : <|> un => suggestions : Une
26 Accord de genre erroné : « Un » est un déterminant masculin. [[3:7]] => Un fois le programme compilé, invoquez gdb comme ceci : <|> fois => suggestions : foie
26 Mot inconnu : gdb [[39:42]] => Un fois le programme compilé, invoquez gdb comme ceci : <|> gdb

29 Mot inconnu : tui [[42:45]] => <note tip>on peut lancer avec l'option //-tui//  <|> tui
29 Espace(s) en fin de ligne à supprimer. [[47:48]] => <note tip>on peut lancer avec l'option //-tui//  <|>  

31 Mot inconnu : buggé [[84:89]] => qui permet de visualiser le code, les points d'arrêt… bref plus visuel… mais semble buggé  <|> buggé
31 Espace(s) en fin de ligne à supprimer. [[89:90]] => qui permet de visualiser le code, les points d'arrêt… bref plus visuel… mais semble buggé  <|>  

33 Mot inconnu : gdb [[20:23]] => Dans l'interface de gdb, vous pouvez lancer le programme avec **run** et quitter le débogueur avec **quit**. <|> gdb
33 Mot inconnu : run [[64:67]] => Dans l'interface de gdb, vous pouvez lancer le programme avec **run** et quitter le débogueur avec **quit**. <|> run
33 Mot inconnu : quit [[101:105]] => Dans l'interface de gdb, vous pouvez lancer le programme avec **run** et quitter le débogueur avec **quit**. <|> quit

34 Mot inconnu : where [[121:126]] => À tout moment, vous pouvez interrompre le programme avec le raccourci clavier **Ctrl+C** dans le terminal. La commande **where** vous permettra alors de voir la pile des appels. <|> where

37 Mot inconnu : gdb [[49:52]] => Si vous souhaitez changer l'exécutable ciblé par gdb, **exec monexecutable** peut vous être utile. <|> gdb
37 Mot inconnu : exec [[56:60]] => Si vous souhaitez changer l'exécutable ciblé par gdb, **exec monexecutable** peut vous être utile. <|> exec
37 Mot inconnu : monexecutable [[61:74]] => Si vous souhaitez changer l'exécutable ciblé par gdb, **exec monexecutable** peut vous être utile. <|> monexecutable

39 Mot inconnu : start [[14:19]] => La commande **start** lance le programme et s'arrête à la première ligne : la commande "n" permet ensuite de faire du pas-à-pas. <|> start
39 Guillemets typographiques ouvrants. [[87:88]] => La commande **start** lance le programme et s'arrête à la première ligne : la commande "n" permet ensuite de faire du pas-à-pas. <|> " => suggestions : « “
39 Guillemets typographiques fermants. [[89:90]] => La commande **start** lance le programme et s'arrête à la première ligne : la commande "n" permet ensuite de faire du pas-à-pas. <|> " => suggestions :  »”

41 Mot inconnu : run [[85:88]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> run
41 Mot inconnu : start [[97:102]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> start
41 Mot inconnu : gdb [[160:163]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> gdb
41 Mot inconnu : args [[166:170]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> args
41 Mot inconnu : monprogramme [[171:183]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> monprogramme
41 Mot inconnu : monoption [[184:193]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> monoption
41 Mot inconnu : mesoptions [[194:204]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|> mesoptions
41 Espace(s) en fin de ligne à supprimer. [[215:216]] => <note>Si le programme a des paramètres d'entrée, il faut les ajouter à la suite de **run** (ou **start**) ou le mettre en ligne de commande (attention, taper **gdb --args monprogramme monoption mesoptions**).</note>  <|>  

45 Espace(s) surnuméraire(s) à supprimer. [[9:22]] => ^commande             ^raccourci                ^effet                                                  ^ <|>               => suggestions :  
45 Espace(s) surnuméraire(s) à supprimer. [[32:48]] => ^commande             ^raccourci                ^effet                                                  ^ <|>                  => suggestions :  
45 Espace(s) surnuméraire(s) à supprimer. [[54:104]] => ^commande             ^raccourci                ^effet                                                  ^ <|>                                                    => suggestions :  

46 Mot inconnu : run [[1:4]] => |run                         | r                         | lance le programme (s'arrête au prochain point d'arrêt)                   | <|> run
46 Espace(s) surnuméraire(s) à supprimer. [[4:29]] => |run                         | r                         | lance le programme (s'arrête au prochain point d'arrêt)                   | <|>                           => suggestions :  
46 Espace(s) surnuméraire(s) à supprimer. [[32:57]] => |run                         | r                         | lance le programme (s'arrête au prochain point d'arrêt)                   | <|>                           => suggestions :  

47 Espace(s) surnuméraire(s) à supprimer. [[9:26]] => |continue                 | c                        | relance le programme  (s'arrête au prochain point d'arrêt)               | <|>                   => suggestions :  
47 Espace(s) surnuméraire(s) à supprimer. [[29:53]] => |continue                 | c                        | relance le programme  (s'arrête au prochain point d'arrêt)               | <|>                          => suggestions :  
47 Espace(s) surnuméraire(s) à supprimer. [[75:77]] => |continue                 | c                        | relance le programme  (s'arrête au prochain point d'arrêt)               | <|>    => suggestions :  

49 Espace(s) surnuméraire(s) à supprimer. [[6:8]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|>    => suggestions :  
49 Mot inconnu : yyy [[9:12]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|> yyy
49 Mot inconnu : xx [[16:18]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|> xx
49 Espace(s) surnuméraire(s) à supprimer. [[18:23]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|>       => suggestions :  
49 Mot inconnu : yyy [[28:31]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|> yyy
49 Mot inconnu : xx [[35:37]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|> xx
49 Espace(s) surnuméraire(s) à supprimer. [[37:45]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|>          => suggestions :  
49 Mot inconnu : xx [[81:83]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|> xx
49 Mot inconnu : yyy [[95:98]] => |break  [yyy.c:]xx     | b [yyy.c:]xx        | place un point d'arrêt à la ligne xx du fichier yyy.c (si indiqué)         | <|> yyy

50 Mot inconnu : breakpoints [[6:17]] => |info breakpoints     | info breakpoints | liste les points d'arrêts                                                                      | <|> breakpoints
50 Espace(s) surnuméraire(s) à supprimer. [[17:22]] => |info breakpoints     | info breakpoints | liste les points d'arrêts                                                                      | <|>       => suggestions :  
50 Mot inconnu : breakpoints [[29:40]] => |info breakpoints     | info breakpoints | liste les points d'arrêts                                                                      | <|> breakpoints
50 Espace(s) surnuméraire(s) à supprimer. [[68:138]] => |info breakpoints     | info breakpoints | liste les points d'arrêts                                                                      | <|>                                                                        => suggestions :  

51 Mot inconnu : delete [[1:7]] => |delete [x]                | d [x]                   | efface les points d'arrêts si pas d'argument, ou le point d'arrêt correspondant au n° x | <|> delete

53 Mot inconnu : next [[1:5]] => |next                      | n                          | exécute une instruction (ne rentre pas dans les fonctions)  peut-être suivi du nombre de ligne à exécuter  | <|> next
53 Espace(s) surnuméraire(s) à supprimer. [[5:27]] => |next                      | n                          | exécute une instruction (ne rentre pas dans les fonctions)  peut-être suivi du nombre de ligne à exécuter  | <|>                        => suggestions :  
53 Espace(s) surnuméraire(s) à supprimer. [[30:56]] => |next                      | n                          | exécute une instruction (ne rentre pas dans les fonctions)  peut-être suivi du nombre de ligne à exécuter  | <|>                            => suggestions :  
53 Espace(s) surnuméraire(s) à supprimer. [[163:165]] => |next                      | n                          | exécute une instruction (ne rentre pas dans les fonctions)  peut-être suivi du nombre de ligne à exécuter  | <|>    => suggestions :  

54 Espace(s) surnuméraire(s) à supprimer. [[5:27]] => |step                      | s                          | exécute une instruction (rentre potentiellement dans les fonctions) | <|>                        => suggestions :  
54 Espace(s) surnuméraire(s) à supprimer. [[30:56]] => |step                      | s                          | exécute une instruction (rentre potentiellement dans les fonctions) | <|>                            => suggestions :  

55 Espace(s) surnuméraire(s) à supprimer. [[7:27]] => |finish                    | f                           | exécute les instructions jusqu'à la sortie de la fonction                    | <|>                      => suggestions :  
55 Espace(s) surnuméraire(s) à supprimer. [[30:57]] => |finish                    | f                           | exécute les instructions jusqu'à la sortie de la fonction                    | <|>                             => suggestions :  
55 Espace(s) surnuméraire(s) à supprimer. [[116:136]] => |finish                    | f                           | exécute les instructions jusqu'à la sortie de la fonction                    | <|>                      => suggestions :  

56 Mot inconnu : list [[1:5]] => |list                        | l                           | affiche 10 lignes de code centrée sur la ligne à exécuter                 | <|> list
56 Espace(s) surnuméraire(s) à supprimer. [[5:29]] => |list                        | l                           | affiche 10 lignes de code centrée sur la ligne à exécuter                 | <|>                          => suggestions :  
56 Espace(s) surnuméraire(s) à supprimer. [[32:59]] => |list                        | l                           | affiche 10 lignes de code centrée sur la ligne à exécuter                 | <|>                             => suggestions :  
56 Espace(s) surnuméraire(s) à supprimer. [[118:135]] => |list                        | l                           | affiche 10 lignes de code centrée sur la ligne à exécuter                 | <|>                   => suggestions :  

57 Mot inconnu : until [[1:6]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|> until
57 Mot inconnu : xx [[7:9]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|> xx
57 Espace(s) surnuméraire(s) à supprimer. [[9:26]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|>                   => suggestions :  
57 Mot inconnu : xx [[30:32]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|> xx
57 Espace(s) surnuméraire(s) à supprimer. [[32:54]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|>                        => suggestions :  
57 Mot inconnu : xx [[98:100]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|> xx
57 Espace(s) en fin de ligne à supprimer. [[100:139]] => |until xx                 | u xx                      | exécute les instructions jusqu'à la ligne xx                                        <|>                                        

60 Mot inconnu : reset [[9:14]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> reset
60 Mot inconnu : halt [[15:19]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> halt
60 Espace(s) surnuméraire(s) à supprimer. [[19:26]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|>         => suggestions :  
60 Mot inconnu : reset [[56:61]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> reset
60 Mot inconnu : target [[65:71]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> target
60 Mot inconnu : execution [[97:106]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> execution
60 Mot inconnu : debug [[113:118]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> debug
60 Espace(s) surnuméraire(s) à supprimer. [[128:145]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|>                   => suggestions :  
60 Mot inconnu : debut [[145:150]] => |monitor reset halt       |                           | reset la target, permet de recommencer l'execution et le debug depuis le                 debut du code <|> debut

67 Mot inconnu : breakpoints [[32:43]] => ==== Placer des points d'arrêt (breakpoints) ==== <|> breakpoints

69 Mot inconnu : bugger [[54:60]] => Si vous soupçonnez une fonction particulière de faire bugger votre programme, vous pouvez placer un //breakpoint// (point d'arrêt) avant le lancement de cette fonction. Pour ce faire, utilisez la commande **break mafonction** (sans les parenthèses). <|> bugger
69 Mot inconnu : breakpoint [[102:112]] => Si vous soupçonnez une fonction particulière de faire bugger votre programme, vous pouvez placer un //breakpoint// (point d'arrêt) avant le lancement de cette fonction. Pour ce faire, utilisez la commande **break mafonction** (sans les parenthèses). <|> breakpoint
69 Mot inconnu : mafonction [[213:223]] => Si vous soupçonnez une fonction particulière de faire bugger votre programme, vous pouvez placer un //breakpoint// (point d'arrêt) avant le lancement de cette fonction. Pour ce faire, utilisez la commande **break mafonction** (sans les parenthèses). <|> mafonction

71 Mot inconnu : namespace [[58:67]] => Si la fonction désirée est située dans une classe ou un //namespace// (espace de noms) **niveau_englobant**, elle est accessible depuis **niveau_englobant::mafonction**. <|> namespace
71 Mot inconnu : niveau_englobant [[89:105]] => Si la fonction désirée est située dans une classe ou un //namespace// (espace de noms) **niveau_englobant**, elle est accessible depuis **niveau_englobant::mafonction**. <|> niveau_englobant
71 Mot inconnu : niveau_englobant [[138:154]] => Si la fonction désirée est située dans une classe ou un //namespace// (espace de noms) **niveau_englobant**, elle est accessible depuis **niveau_englobant::mafonction**. <|> niveau_englobant
71 Une de ces ponctuations est superflue. [[154:156]] => Si la fonction désirée est située dans une classe ou un //namespace// (espace de noms) **niveau_englobant**, elle est accessible depuis **niveau_englobant::mafonction**. <|> :: => suggestions : ::
71 Mot inconnu : mafonction [[156:166]] => Si la fonction désirée est située dans une classe ou un //namespace// (espace de noms) **niveau_englobant**, elle est accessible depuis **niveau_englobant::mafonction**. <|> mafonction

73 Mot inconnu : breakpoints [[59:70]] => Pour afficher la liste des points d'arrêt, utilisez **info breakpoints**. Vous remarquerez que chaque point d'arrêt est identifié par un numéro : <|> breakpoints

78 Mot inconnu : delete [[103:109]] => Ici, il a pour identifiant 1. S'il ne vous intéresse plus, vous pouvez le supprimer avec la commande **delete 1**. <|> delete

87 Mot inconnu : abbrégé [[14:21]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> abbrégé
87 Il manque un espace. [[50:54]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> hexa => suggestions :  hexa
87 Mot inconnu : hexa [[50:54]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> hexa
87 Il manque un espace. [[58:65]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> decimal => suggestions :  decimal
87 Mot inconnu : decimal [[58:65]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> decimal
87 Il manque un espace. [[69:74]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> float => suggestions :  float
87 Mot inconnu : float [[69:74]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> float
87 Il manque un espace. [[78:82]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> char => suggestions :  char
87 Il manque un espace. [[86:92]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> string => suggestions :  string
87 Mot inconnu : help [[94:98]] => ou encore, en abbrégé et en spécifiant un type (x:hexa, d:decimal, f:float, c:char, s:string… help x pour les voir tous): <|> help

95 Mot inconnu : gdb [[50:53]] => Il existe de multiples interfaces graphiques pour gdb qui facilitent grandement le débuggage en affichant le code source, créant des schémas représentant les variables, etc. En voici quelques-unes : <|> gdb
95 Mot inconnu : débuggage [[83:92]] => Il existe de multiples interfaces graphiques pour gdb qui facilitent grandement le débuggage en affichant le code source, créant des schémas représentant les variables, etc. En voici quelques-unes : <|> débuggage

104 Mot inconnu : GVim [[14:18]] => ==== Pour Vim/GVim ==== <|> gvim

115 Mot inconnu : ifort [[34:39]] => <note>Pas besoin de compiler avec ifort pour déboguer avec idb.</note> <|> ifort
115 Mot inconnu : idb [[59:62]] => <note>Pas besoin de compiler avec ifort pour déboguer avec idb.</note> <|> idb
