
20 Mot inconnu : debian => **Petit rappel sur le fichier debian/rules**\\ | debian
20 Mot inconnu : rules => **Petit rappel sur le fichier debian/rules**\\ | rules

21 Mot inconnu : debian => Le fichier //debian/rules// est le script (un Makefile) qui permet de construire le paquet. Même si la plupart du temps il passe par une étape de compilation des sources, ce n'est pas une nécessité. Si le logiciel que vous empaquetez n'a pas besoin d'être compilé, vous n'avez pas besoin que le debian/rules ne compile quelque chose. C'est le cas pour un script bash, ou pour un programme python par exemple. | debian
21 Mot inconnu : rules => Le fichier //debian/rules// est le script (un Makefile) qui permet de construire le paquet. Même si la plupart du temps il passe par une étape de compilation des sources, ce n'est pas une nécessité. Si le logiciel que vous empaquetez n'a pas besoin d'être compilé, vous n'avez pas besoin que le debian/rules ne compile quelque chose. C'est le cas pour un script bash, ou pour un programme python par exemple. | rules
21 Mot inconnu : Makefile => Le fichier //debian/rules// est le script (un Makefile) qui permet de construire le paquet. Même si la plupart du temps il passe par une étape de compilation des sources, ce n'est pas une nécessité. Si le logiciel que vous empaquetez n'a pas besoin d'être compilé, vous n'avez pas besoin que le debian/rules ne compile quelque chose. C'est le cas pour un script bash, ou pour un programme python par exemple. | makefile
21 Mot inconnu : debian => Le fichier //debian/rules// est le script (un Makefile) qui permet de construire le paquet. Même si la plupart du temps il passe par une étape de compilation des sources, ce n'est pas une nécessité. Si le logiciel que vous empaquetez n'a pas besoin d'être compilé, vous n'avez pas besoin que le debian/rules ne compile quelque chose. C'est le cas pour un script bash, ou pour un programme python par exemple. | debian
21 Mot inconnu : rules => Le fichier //debian/rules// est le script (un Makefile) qui permet de construire le paquet. Même si la plupart du temps il passe par une étape de compilation des sources, ce n'est pas une nécessité. Si le logiciel que vous empaquetez n'a pas besoin d'être compilé, vous n'avez pas besoin que le debian/rules ne compile quelque chose. C'est le cas pour un script bash, ou pour un programme python par exemple. | rules

31 Guillemets typographiques ouvrants. => Entrer dans le dossier "u-script/" puis exécutez : | " => suggestions : ['«\xa0', '“']

34 Mot inconnu : debian => Entrez dans le dossier source (venant d'être crée) qui contient le dossier **debian/** pour le paquet, et le script **u-script.sh**. Il n'y a rien d'autre, en particulier pas de //Makefile// ou autre donc cela va être au packageur de gérer l'installation (en respectant les standards). | debian
34 Mot inconnu : sh => Entrez dans le dossier source (venant d'être crée) qui contient le dossier **debian/** pour le paquet, et le script **u-script.sh**. Il n'y a rien d'autre, en particulier pas de //Makefile// ou autre donc cela va être au packageur de gérer l'installation (en respectant les standards). | sh
34 Mot inconnu : Makefile => Entrez dans le dossier source (venant d'être crée) qui contient le dossier **debian/** pour le paquet, et le script **u-script.sh**. Il n'y a rien d'autre, en particulier pas de //Makefile// ou autre donc cela va être au packageur de gérer l'installation (en respectant les standards). | makefile

36 Mot inconnu : debian => Le dossier **debian** contient : | debian

37 Mot inconnu : changelog => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | changelog
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : compat => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | compat
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : control => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | control
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : dirs => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | dirs
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : install => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | install
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : rules => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | rules
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : u-classroom => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | u-classroom
37 Espace(s) surnuméraire(s) à supprimer. => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> |    => suggestions : [' ']
37 Mot inconnu : watch => <file>changelog  compat  control  copyright  dirs  install  rules  u-classroom  watch</file> | watch

39 Mot inconnu : dirs => Les fichiers qui vont nous intéresser sont //dirs//, //install//, //rules//, //u-classroom// et //watch//. | dirs
39 Mot inconnu : install => Les fichiers qui vont nous intéresser sont //dirs//, //install//, //rules//, //u-classroom// et //watch//. | install
39 Mot inconnu : rules => Les fichiers qui vont nous intéresser sont //dirs//, //install//, //rules//, //u-classroom// et //watch//. | rules
39 Mot inconnu : u-classroom => Les fichiers qui vont nous intéresser sont //dirs//, //install//, //rules//, //u-classroom// et //watch//. | u-classroom
39 Mot inconnu : watch => Les fichiers qui vont nous intéresser sont //dirs//, //install//, //rules//, //u-classroom// et //watch//. | watch

45 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => <note help>A quoi sert un **wrapper** :\\ | a => suggestions : ['À']
45 Mot inconnu : wrapper => <note help>A quoi sert un **wrapper** :\\ | wrapper

46 Il manque un trait d’union. => Dans le cadre de ce cours, cela ne sert pas à grand chose mais pour beaucoup de script, le script doit être dans le même dossier que les données ce qui signifie l'installer dans "**/usr/share/<paquet>** avec les images ou autre.\\ | grand chose => suggestions : ['grand-chose']

47 Mot inconnu : wrapper => Dans ce cas, le script n'est pas directement accessible puisqu'il n'est pas placé dans **/usr/bin**. Le wrapper sert juste d'intermédiaire entre le script original installé ou il faut et "l'interface utilisateur" (i.e. lancement du script facilement en console) | wrapper
47 Guillemets typographiques ouvrants. => Dans ce cas, le script n'est pas directement accessible puisqu'il n'est pas placé dans **/usr/bin**. Le wrapper sert juste d'intermédiaire entre le script original installé ou il faut et "l'interface utilisateur" (i.e. lancement du script facilement en console) | " => suggestions : ['«\xa0', '“']
47 Guillemets typographiques fermants. => Dans ce cas, le script n'est pas directement accessible puisqu'il n'est pas placé dans **/usr/bin**. Le wrapper sert juste d'intermédiaire entre le script original installé ou il faut et "l'interface utilisateur" (i.e. lancement du script facilement en console) | " => suggestions : ['\xa0»', '”']

51 Mot inconnu : debian => Les fichiers //debian/dirs// et //debian/install// servent à cela et ils sont respectivement utilisés par //dh_installdirs// et //dh_install//. | debian
51 Mot inconnu : dirs => Les fichiers //debian/dirs// et //debian/install// servent à cela et ils sont respectivement utilisés par //dh_installdirs// et //dh_install//. | dirs
51 Mot inconnu : debian => Les fichiers //debian/dirs// et //debian/install// servent à cela et ils sont respectivement utilisés par //dh_installdirs// et //dh_install//. | debian
51 Mot inconnu : install => Les fichiers //debian/dirs// et //debian/install// servent à cela et ils sont respectivement utilisés par //dh_installdirs// et //dh_install//. | install
51 Mot inconnu : dh_installdirs => Les fichiers //debian/dirs// et //debian/install// servent à cela et ils sont respectivement utilisés par //dh_installdirs// et //dh_install//. | dh_installdirs
51 Mot inconnu : dh_install => Les fichiers //debian/dirs// et //debian/install// servent à cela et ils sont respectivement utilisés par //dh_installdirs// et //dh_install//. | dh_install

53 Mot inconnu : debian => **Le fichier //debian/rules// :**\\ | debian
53 Mot inconnu : rules => **Le fichier //debian/rules// :**\\ | rules

57 Mot inconnu : dh_installdirs => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | dh_installdirs
57 Mot inconnu : debian => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | debian
57 Mot inconnu : dirs => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | dirs
57 Guillemets typographiques ouvrants. => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | " => suggestions : ['«\xa0', '“']
57 Mot inconnu : debian => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | debian
57 Mot inconnu : u-classroom => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | u-classroom
57 Guillemets typographiques ouvrants. => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | " => suggestions : ['«\xa0', '“']
57 Mot inconnu : usr => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | usr
57 Guillemets typographiques ouvrants. => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | " => suggestions : ['«\xa0', '“']
57 Mot inconnu : usr => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | usr
57 Mot inconnu : share => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | share
57 Mot inconnu : u-classroom => //dh_installdirs// va lire le fichier //debian/dirs// et créer les dossiers nécessaires dans "debian/u-classroom/" (dans notre cas "usr/bin/" et "usr/share/u-classroom/"). | u-classroom

59 Mot inconnu : debuild => Lancer le debuild du paquet pour construire le paquet source : | debuild

64 Mot inconnu : debian => ===== Mettre à jour un paquet grâce à debian/watch ===== | debian
64 Mot inconnu : watch => ===== Mettre à jour un paquet grâce à debian/watch ===== | watch

78 Forme interrogative ? Mettez un trait d’union. => Puis placez vous de le répertoire nouvellement crée, comme le suggère le script | placez vous => suggestions : ['placez-vous']
78 Incohérence avec “de le” : “répertoire” est un nom ou un adjectif. => Puis placez vous de le répertoire nouvellement crée, comme le suggère le script | de le => suggestions : ['du']

86 Mot inconnu : uupdate => **ATTENTION**, //uupdate// n'est pas une formule magique !\\ | uupdate
87 Typographie : points de suspension. Utilisez le caractère dédié. => Tout est à revérifier pour une nouvelle version d'un paquet : vérifier que la licence n'a pas changé, que des fichiers n'ont pas été ajoutés... | ... => suggestions : ['…']

95 Mot inconnu : tar => <file>http://gauvain.pocentek.net/u-classroom/2007-05-17/archive/u-script-(.*)\.tar\.gz | tar
95 Mot inconnu : gz => <file>http://gauvain.pocentek.net/u-classroom/2007-05-17/archive/u-script-(.*)\.tar\.gz | gz

98 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => la fin de la ligne est une expression régulière qui laisse le choix pour la version. Les '**.**' dans les regexp sont des caractères particuliers donc ils doivent être "échappés" d'où le '**\**' devant. | la => suggestions : ['La']
98 Mot inconnu : regexp => la fin de la ligne est une expression régulière qui laisse le choix pour la version. Les '**.**' dans les regexp sont des caractères particuliers donc ils doivent être "échappés" d'où le '**\**' devant. | regexp
98 Si « donc » est la conjonction de coordination, une virgule est souhaitable si elle introduit une nouvelle proposition. => la fin de la ligne est une expression régulière qui laisse le choix pour la version. Les '**.**' dans les regexp sont des caractères particuliers donc ils doivent être "échappés" d'où le '**\**' devant. |  donc => suggestions : [', donc']
98 Guillemets typographiques ouvrants. => la fin de la ligne est une expression régulière qui laisse le choix pour la version. Les '**.**' dans les regexp sont des caractères particuliers donc ils doivent être "échappés" d'où le '**\**' devant. | " => suggestions : ['«\xa0', '“']
98 Guillemets typographiques fermants. => la fin de la ligne est une expression régulière qui laisse le choix pour la version. Les '**.**' dans les regexp sont des caractères particuliers donc ils doivent être "échappés" d'où le '**\**' devant. | " => suggestions : ['\xa0»', '”']

100 Mot inconnu : uscan => Pour plus d'informations sur **uscan** et ses recettes magiques : | uscan

105 Si « mais » est la conjonction de coordination, une virgule est souhaitable si elle introduit une nouvelle proposition. => En fait, empaqueter du python c'est comme empaqueter n'importe quoi mais il y a quelques règles à respecter : la fameuse [[http://www.debian.org/doc/packaging-manuals/python-policy/|Python Policy]]. |  mais => suggestions : [', mais']
105 Mot inconnu : Policy => En fait, empaqueter du python c'est comme empaqueter n'importe quoi mais il y a quelques règles à respecter : la fameuse [[http://www.debian.org/doc/packaging-manuals/python-policy/|Python Policy]]. | policy

116 Mot inconnu : control => Tout va se passer dans les fichiers //control//, //rules// et //pycompat//. | control
116 Mot inconnu : rules => Tout va se passer dans les fichiers //control//, //rules// et //pycompat//. | rules
116 Mot inconnu : pycompat => Tout va se passer dans les fichiers //control//, //rules// et //pycompat//. | pycompat

118 Mot inconnu : pycompat => ==== pycompat ==== | pycompat

120 Mot inconnu : debian => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | debian
120 Mot inconnu : pycompat => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | pycompat
120 Guillemets typographiques ouvrants. => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | " => suggestions : ['«\xa0', '“']
120 Guillemets typographiques fermants. => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | " => suggestions : ['\xa0»', '”']
120 Mot inconnu : debian => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | debian
120 Mot inconnu : compat => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | compat
120 Guillemets typographiques ouvrants. => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | " => suggestions : ['«\xa0', '“']
120 Guillemets typographiques fermants. => Le fichier //debian/pycompat// contient juste "2", tout comme //debian/compat// contient "5". Ceci est juste une indication de compatibilité. | " => suggestions : ['\xa0»', '”']

122 Mot inconnu : control => ==== control ==== | control

128 Mot inconnu : Build-Depends-Indep => C'est pour cela (en simplifiant) qu'elles sont listées dans **Build-Depends-Indep**. | build-depends-indep

130 Mot inconnu : XS-Python-Version => **XS-Python-Version: current** permet de dire que l'on construit ce module pour la version courante de python, c'est à dire la version 2.5 depuis feisty. | xs-python-version
130 Mot inconnu : current => **XS-Python-Version: current** permet de dire que l'on construit ce module pour la version courante de python, c'est à dire la version 2.5 depuis feisty. | current
130 Il manque les traits d’union. => **XS-Python-Version: current** permet de dire que l'on construit ce module pour la version courante de python, c'est à dire la version 2.5 depuis feisty. | c'est à dire => suggestions : ['c’est-à-dire']
130 Mot inconnu : feisty => **XS-Python-Version: current** permet de dire que l'on construit ce module pour la version courante de python, c'est à dire la version 2.5 depuis feisty. | feisty

132 Mot inconnu : XB-Python-Version => **XB-Python-Version: ${python:Versions}** est un champ qui va être utilisé pour savoir avec quelle(s) version(s) de python va être compatible le paquet binaire. | xb-python-version
132 Il manque un espace. => **XB-Python-Version: ${python:Versions}** est un champ qui va être utilisé pour savoir avec quelle(s) version(s) de python va être compatible le paquet binaire. | versions => suggestions : [' Versions']
132 Écriture invariable. Utilisez un point médian. => **XB-Python-Version: ${python:Versions}** est un champ qui va être utilisé pour savoir avec quelle(s) version(s) de python va être compatible le paquet binaire. | quelle(s) => suggestions : ['quelle·s']
132 Écriture invariable. Utilisez un point médian. => **XB-Python-Version: ${python:Versions}** est un champ qui va être utilisé pour savoir avec quelle(s) version(s) de python va être compatible le paquet binaire. | version(s) => suggestions : ['version·s']

134 Mot inconnu : Depends => **Depends: ${python:Depends}** permet de calculer les dépendances python (en incluant la version) et pycentral. | depends
134 Il manque un espace. => **Depends: ${python:Depends}** permet de calculer les dépendances python (en incluant la version) et pycentral. | depends => suggestions : [' Depends']
134 Mot inconnu : Depends => **Depends: ${python:Depends}** permet de calculer les dépendances python (en incluant la version) et pycentral. | depends
134 Mot inconnu : pycentral => **Depends: ${python:Depends}** permet de calculer les dépendances python (en incluant la version) et pycentral. | pycentral

137 Il manque un espace. => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | depends => suggestions : [' Depends']
137 Mot inconnu : Depends => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | depends
137 Mot inconnu : shlibs => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | shlibs
137 Il manque un espace. => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | depends => suggestions : [' Depends']
137 Mot inconnu : Depends => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | depends
137 Guillemets typographiques ouvrants. => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | " => suggestions : ['«\xa0', '“']
137 Guillemets typographiques fermants. => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | " => suggestions : ['\xa0»', '”']
137 Mot inconnu : python-gtk2 => **python:Depends** ne calcule pas tout (pas comme **shlibs:Depends** dans les paquets "courants"). Si votre paquet a besoin de **python-gtk2** (par exemple), il faudra l'ajouter. | python-gtk2

140 Il manque un espace. => **${python:Provides}** : Dans notre exemple, cela ne sert à rien car notre paquet est **arch: all** (fonctionnel pour toutes les architectures) mais pour les modules privés de python (des .so), cela permet de définir des paquets virtuels.\\ | provides => suggestions : [' Provides']
140 Mot inconnu : Provides => **${python:Provides}** : Dans notre exemple, cela ne sert à rien car notre paquet est **arch: all** (fonctionnel pour toutes les architectures) mais pour les modules privés de python (des .so), cela permet de définir des paquets virtuels.\\ | provides
140 Mot inconnu : all => **${python:Provides}** : Dans notre exemple, cela ne sert à rien car notre paquet est **arch: all** (fonctionnel pour toutes les architectures) mais pour les modules privés de python (des .so), cela permet de définir des paquets virtuels.\\ | all
140 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => **${python:Provides}** : Dans notre exemple, cela ne sert à rien car notre paquet est **arch: all** (fonctionnel pour toutes les architectures) mais pour les modules privés de python (des .so), cela permet de définir des paquets virtuels.\\ |  . => suggestions : ['. ', '.']
140 Mot inconnu : so => **${python:Provides}** : Dans notre exemple, cela ne sert à rien car notre paquet est **arch: all** (fonctionnel pour toutes les architectures) mais pour les modules privés de python (des .so), cela permet de définir des paquets virtuels.\\ | so

141 Mot inconnu : Provides => Par exemple si le module est compatible python 2.4 et 2.5 nous obtiendrons Provides: **python2.4-foo** et **python2.5-foo**. L'utilisateur pourra utiliser ces paquets virtuels comme n'importe quel autre paquet. | provides
141 Mot inconnu : python2 => Par exemple si le module est compatible python 2.4 et 2.5 nous obtiendrons Provides: **python2.4-foo** et **python2.5-foo**. L'utilisateur pourra utiliser ces paquets virtuels comme n'importe quel autre paquet. | python2
141 Mot inconnu : foo => Par exemple si le module est compatible python 2.4 et 2.5 nous obtiendrons Provides: **python2.4-foo** et **python2.5-foo**. L'utilisateur pourra utiliser ces paquets virtuels comme n'importe quel autre paquet. | foo
141 Mot inconnu : python2 => Par exemple si le module est compatible python 2.4 et 2.5 nous obtiendrons Provides: **python2.4-foo** et **python2.5-foo**. L'utilisateur pourra utiliser ces paquets virtuels comme n'importe quel autre paquet. | python2
141 Mot inconnu : foo => Par exemple si le module est compatible python 2.4 et 2.5 nous obtiendrons Provides: **python2.4-foo** et **python2.5-foo**. L'utilisateur pourra utiliser ces paquets virtuels comme n'importe quel autre paquet. | foo

149 Mot inconnu : install => <file>install: ne peut créer le répertoire `/usr/lib/python2.4/site-packages/HelloWorld': Permission non accordée | install

152 Mot inconnu : Makefile => Le problème se situe dans le Makefile. Ouvrez ce fichier pour comprendre pourquoi. Vous voyez alors :\\ | makefile

154 Mot inconnu : install => install -d /usr/lib/python2.4/site-packages/HelloWorld</file> | install
154 Il manque un espace à côté du tiret. => install -d /usr/lib/python2.4/site-packages/HelloWorld</file> |  - => suggestions : [' – ', ' — ']

155 Guillemets typographiques ouvrants. => qui permet de créer un dossier mais ///usr/lib/python2.4/site-packages/HelloWorld// est inaccessible puisque nous ne sommes pas "root" et nous essayons de créer le dossier dans //debian/python-helloworld//... | " => suggestions : ['«\xa0', '“']
155 Mot inconnu : root => qui permet de créer un dossier mais ///usr/lib/python2.4/site-packages/HelloWorld// est inaccessible puisque nous ne sommes pas "root" et nous essayons de créer le dossier dans //debian/python-helloworld//... | root
155 Guillemets typographiques fermants. => qui permet de créer un dossier mais ///usr/lib/python2.4/site-packages/HelloWorld// est inaccessible puisque nous ne sommes pas "root" et nous essayons de créer le dossier dans //debian/python-helloworld//... | " => suggestions : ['\xa0»', '”']
155 Mot inconnu : debian => qui permet de créer un dossier mais ///usr/lib/python2.4/site-packages/HelloWorld// est inaccessible puisque nous ne sommes pas "root" et nous essayons de créer le dossier dans //debian/python-helloworld//... | debian
155 Mot inconnu : python-helloworld => qui permet de créer un dossier mais ///usr/lib/python2.4/site-packages/HelloWorld// est inaccessible puisque nous ne sommes pas "root" et nous essayons de créer le dossier dans //debian/python-helloworld//... | python-helloworld
155 Typographie : points de suspension. Utilisez le caractère dédié. => qui permet de créer un dossier mais ///usr/lib/python2.4/site-packages/HelloWorld// est inaccessible puisque nous ne sommes pas "root" et nous essayons de créer le dossier dans //debian/python-helloworld//... | ... => suggestions : ['…']

157 Mot inconnu : Makefile => Cela ne peut pas marcher et il faudra donc modifier le Makefile pour utiliser **$(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld** (où DESTDIR sera en fait **debian/python-helloworld**). | makefile
157 Mot inconnu : DESTDIR => Cela ne peut pas marcher et il faudra donc modifier le Makefile pour utiliser **$(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld** (où DESTDIR sera en fait **debian/python-helloworld**). | destdir
157 Mot inconnu : DESTDIR => Cela ne peut pas marcher et il faudra donc modifier le Makefile pour utiliser **$(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld** (où DESTDIR sera en fait **debian/python-helloworld**). | destdir
157 Mot inconnu : debian => Cela ne peut pas marcher et il faudra donc modifier le Makefile pour utiliser **$(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld** (où DESTDIR sera en fait **debian/python-helloworld**). | debian
157 Mot inconnu : python-helloworld => Cela ne peut pas marcher et il faudra donc modifier le Makefile pour utiliser **$(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld** (où DESTDIR sera en fait **debian/python-helloworld**). | python-helloworld

159 Mot inconnu : __ne => Comme tout bon packageur, vous savez qu'il __ne faut pas modifier les sources__ de upstream. Nous allons donc **patcher** le Makefile... | __ne
159 Mot inconnu : sources__ => Comme tout bon packageur, vous savez qu'il __ne faut pas modifier les sources__ de upstream. Nous allons donc **patcher** le Makefile... | sources__
159 Élision de l’article devant un mot commençant par une voyelle. => Comme tout bon packageur, vous savez qu'il __ne faut pas modifier les sources__ de upstream. Nous allons donc **patcher** le Makefile... | de  => suggestions : ['d’']
159 Mot inconnu : upstream => Comme tout bon packageur, vous savez qu'il __ne faut pas modifier les sources__ de upstream. Nous allons donc **patcher** le Makefile... | upstream
159 Mot inconnu : Makefile => Comme tout bon packageur, vous savez qu'il __ne faut pas modifier les sources__ de upstream. Nous allons donc **patcher** le Makefile... | makefile
159 Typographie : points de suspension. Utilisez le caractère dédié. => Comme tout bon packageur, vous savez qu'il __ne faut pas modifier les sources__ de upstream. Nous allons donc **patcher** le Makefile... | ... => suggestions : ['…']

163 Mot inconnu : Debhelper => ==== Paquet utilisant Debhelper ==== | debhelper

165 Mot inconnu : Makefile => Nous venons de voir ci-dessus qu'il était nécessaire de patcher le //Makefile// (et non modifier directement le fichier) et pour cela nous allons utiliser la v2 du paquet pyhw précédemment téléchargé : | makefile
165 Mot inconnu : pyhw => Nous venons de voir ci-dessus qu'il était nécessaire de patcher le //Makefile// (et non modifier directement le fichier) et pour cela nous allons utiliser la v2 du paquet pyhw précédemment téléchargé : | pyhw

168 Mot inconnu : debian => Dans le dossier **debian**, nous avons un dossier **patches** qui contient le patch **01-makefile.dpatch** et le fichier **00list**, qui est en fait la liste des patches à appliquer. | debian
168 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => Dans le dossier **debian**, nous avons un dossier **patches** qui contient le patch **01-makefile.dpatch** et le fichier **00list**, qui est en fait la liste des patches à appliquer. | patches => suggestions : ['patche']
168 Mot inconnu : makefile => Dans le dossier **debian**, nous avons un dossier **patches** qui contient le patch **01-makefile.dpatch** et le fichier **00list**, qui est en fait la liste des patches à appliquer. | makefile
168 Mot inconnu : dpatch => Dans le dossier **debian**, nous avons un dossier **patches** qui contient le patch **01-makefile.dpatch** et le fichier **00list**, qui est en fait la liste des patches à appliquer. | dpatch
168 Mot inconnu : list => Dans le dossier **debian**, nous avons un dossier **patches** qui contient le patch **01-makefile.dpatch** et le fichier **00list**, qui est en fait la liste des patches à appliquer. | list
168 Incohérence avec « des » : « patches » est un verbe. => Dans le dossier **debian**, nous avons un dossier **patches** qui contient le patch **01-makefile.dpatch** et le fichier **00list**, qui est en fait la liste des patches à appliquer. | patches => suggestions : ['patchs']

170 Mot inconnu : dpatch => On utilise ici **dpatch** comme système de patch. | dpatch

172 Mot inconnu : debian => Le fichier **debian/rules** contient : | debian
172 Mot inconnu : rules => Le fichier **debian/rules** contient : | rules

174 Mot inconnu : Include => # Include dpatch stuff. | include
174 Mot inconnu : dpatch => # Include dpatch stuff. | dpatch
174 Mot inconnu : stuff => # Include dpatch stuff. | stuff

175 Mot inconnu : include => include /usr/share/dpatch/dpatch.make | include

178 Guillemets typographiques ouvrants. => Ceci permet d'inclure des règles toute faites qui automatisent le "patchage/dépatchage". | " => suggestions : ['«\xa0', '“']
178 Mot inconnu : patchage => Ceci permet d'inclure des règles toute faites qui automatisent le "patchage/dépatchage". | patchage
178 Mot inconnu : dépatchage => Ceci permet d'inclure des règles toute faites qui automatisent le "patchage/dépatchage". | dépatchage
178 Guillemets typographiques fermants. => Ceci permet d'inclure des règles toute faites qui automatisent le "patchage/dépatchage". | " => suggestions : ['\xa0»', '”']

186 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => Maintenant que vous savez appliquer les patches, voyons comment en créer ! | patches => suggestions : ['patche']

188 Mot inconnu : déja => Pour ce faire, nous allons repartir de zéro, et supprimer le patch déja présent dans le paquet : | déja

198 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => Commencer leur nom par un chiffre permet de savoir dans quel ordre ils seront appliqués. Lorsque l'on se retrouve avec 15-20 patches, c'est assez pratique. | patches => suggestions : ['patche']

200 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => le nom du patch est arbitraire. Ici nous nommons le patch **01-makefile** car c'est le premier patch crée (à appliquer) et qu'il agit sur le Makefile... | le => suggestions : ['Le']
200 Mot inconnu : makefile => le nom du patch est arbitraire. Ici nous nommons le patch **01-makefile** car c'est le premier patch crée (à appliquer) et qu'il agit sur le Makefile... | makefile
200 Mot inconnu : Makefile => le nom du patch est arbitraire. Ici nous nommons le patch **01-makefile** car c'est le premier patch crée (à appliquer) et qu'il agit sur le Makefile... | makefile
200 Typographie : points de suspension. Utilisez le caractère dédié. => le nom du patch est arbitraire. Ici nous nommons le patch **01-makefile** car c'est le premier patch crée (à appliquer) et qu'il agit sur le Makefile... | ... => suggestions : ['…']

205 Il manque les traits d’union. => Faites alors les modifications voulues, c'est à dire ajoutez **$(DESTDIR)** dans le //Makefile//, ce qui donne : | c'est à dire => suggestions : ['c’est-à-dire']
205 Mot inconnu : DESTDIR => Faites alors les modifications voulues, c'est à dire ajoutez **$(DESTDIR)** dans le //Makefile//, ce qui donne : | destdir
205 Mot inconnu : Makefile => Faites alors les modifications voulues, c'est à dire ajoutez **$(DESTDIR)** dans le //Makefile//, ce qui donne : | makefile

207 Mot inconnu : install => install -d $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld | install
207 Il manque un espace à côté du tiret. => install -d $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld |  - => suggestions : [' – ', ' — ']
207 Mot inconnu : DESTDIR => install -d $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld | destdir

208 Mot inconnu : install => install -m 644 src/*py $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld/ | install
208 Il manque un espace à côté du tiret. => install -m 644 src/*py $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld/ |  - => suggestions : [' – ', ' — ']
208 Si “src/” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => install -m 644 src/*py $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld/ | 644 src/ => suggestions : ['644\xa0src/']
208 Mot inconnu : src => install -m 644 src/*py $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld/ | src
208 Mot inconnu : py => install -m 644 src/*py $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld/ | py
208 Mot inconnu : DESTDIR => install -m 644 src/*py $(DESTDIR)/usr/lib/python2.4/site-packages/HelloWorld/ | destdir

213 Guillemets typographiques ouvrants. => pour quitter le shell "spécial" et revenir à votre shell habituel. | " => suggestions : ['«\xa0', '“']
213 Guillemets typographiques fermants. => pour quitter le shell "spécial" et revenir à votre shell habituel. | " => suggestions : ['\xa0»', '”']

215 Mot inconnu : debian => Vous pouvez vérifier le contenu de **debian/patches** et vous y trouverez le patch **01-makefile** qui vient d'être crée. | debian
215 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => Vous pouvez vérifier le contenu de **debian/patches** et vous y trouverez le patch **01-makefile** qui vient d'être crée. | patches => suggestions : ['patche']
215 Mot inconnu : makefile => Vous pouvez vérifier le contenu de **debian/patches** et vous y trouverez le patch **01-makefile** qui vient d'être crée. | makefile

218 Mot inconnu : makefile => <file>01-makefile</file> | makefile

220 Mot inconnu : makefile => Vous venez de patcher le makefile :) | makefile
225 Espace(s) en fin de ligne à supprimer. => Un Warning apparaîtra, nous reviendrons dessus plus bas :  |   => suggestions : ['']
227 Mot inconnu : python-helloworld => W: python-helloworld: script-not-executable | python-helloworld
227 Mot inconnu : script-not-executable => W: python-helloworld: script-not-executable | script-not-executable

233 Mot inconnu : pycentral => vous verrez que pycentral a correctement remplacé les dépendances par les paquets appropriés :\\ | pycentral

234 Mot inconnu : Makefile => Le //Makefile// installait dans **/usr/lib/python2.4** et au final le script //HelloWorld.py// se trouvera dans **/usr/share/pycentral/python-helloworld/site-packages/HelloWorld/**. | makefile
234 Mot inconnu : HelloWorld => Le //Makefile// installait dans **/usr/lib/python2.4** et au final le script //HelloWorld.py// se trouvera dans **/usr/share/pycentral/python-helloworld/site-packages/HelloWorld/**. | helloworld
234 Mot inconnu : py => Le //Makefile// installait dans **/usr/lib/python2.4** et au final le script //HelloWorld.py// se trouvera dans **/usr/share/pycentral/python-helloworld/site-packages/HelloWorld/**. | py

236 Mot inconnu : Depends => **Python-central** a donc complètement géré les problèmes de version de python (Depends: python, python-central (>= 0.5.8)). | depends

238 Mot inconnu : CDBS => ==== Paquet utilisant CDBS ==== | cdbs

240 Mot inconnu : pyhw => Nous allons passer directement à la version 4 de notre paquet **pyhw** (la v3 étant la même que la 2 mais version cdbs) | pyhw
240 Mot inconnu : v3 => Nous allons passer directement à la version 4 de notre paquet **pyhw** (la v3 étant la même que la 2 mais version cdbs) | v3
240 Mot inconnu : cdbs => Nous allons passer directement à la version 4 de notre paquet **pyhw** (la v3 étant la même que la 2 mais version cdbs) | cdbs

244 Mot inconnu : debian => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | debian
244 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | patches => suggestions : ['patche']
244 Mot inconnu : list => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | list
244 Mot inconnu : dpatch => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | dpatch
244 Mot inconnu : cdbs => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | cdbs
244 Guillemets typographiques ouvrants. => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | ' => suggestions : ['“', '‘', '‹']
244 Guillemets typographiques fermants. => Dans **debian/patches**, le fichier **00list** a disparu, et les extensions des patchs sont **.patch**, et non plus **.dpatch** (cdbs peut gérer n'importe quelle extension mais c'est 'patch' par défaut). | ' => suggestions : ['”', '’', '›']

246 Mot inconnu : debian => Le fichier **debian/rules** contient la ligne : | debian
246 Mot inconnu : rules => Le fichier **debian/rules** contient la ligne : | rules

248 Mot inconnu : include => include /usr/share/cdbs/1/rules/simple-patchsys.mk | include

250 Mot inconnu : CDBS => qui sert à inclure tout le système de patch de CDBS qui traitera tous fichier avec extension .patch du répertoire **debian/patches**. | cdbs
250 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => qui sert à inclure tout le système de patch de CDBS qui traitera tous fichier avec extension .patch du répertoire **debian/patches**. |  . => suggestions : ['. ', '.']
250 Mot inconnu : debian => qui sert à inclure tout le système de patch de CDBS qui traitera tous fichier avec extension .patch du répertoire **debian/patches**. | debian
250 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => qui sert à inclure tout le système de patch de CDBS qui traitera tous fichier avec extension .patch du répertoire **debian/patches**. | patches => suggestions : ['patche']

252 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… => Nous allons refaire le 2ème patch du paquet. Celui-ci corrigera le //Warning// que nous avons eu plus haut. | 2ème => suggestions : ['2ᵉ']

254 Mot inconnu : debian => Supprimer donc le fichier **debian/patches/02-shebang.patch** et exécutez : | debian
254 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => Supprimer donc le fichier **debian/patches/02-shebang.patch** et exécutez : | patches => suggestions : ['patche']
254 Mot inconnu : shebang => Supprimer donc le fichier **debian/patches/02-shebang.patch** et exécutez : | shebang
254 Il manque un espace. => Supprimer donc le fichier **debian/patches/02-shebang.patch** et exécutez : | patch => suggestions : [' patch']

257 Mot inconnu : shebang => Ce //Warning// est assez courant avec tous les scripts et les modules python sont pas destinés à être exécutés et donc le shebang (#!/usr/bin/env python) n'a pas à sa place ici. | shebang

259 Mot inconnu : src => Il faut donc supprimer la première ligne du fichier **src/HelloWorld.py** | src
259 Mot inconnu : HelloWorld => Il faut donc supprimer la première ligne du fichier **src/HelloWorld.py** | helloworld
259 Mot inconnu : py => Il faut donc supprimer la première ligne du fichier **src/HelloWorld.py** | py

263 Mot inconnu : cdbs-edit-patch => pour quitter cdbs-edit-patch. | cdbs-edit-patch
