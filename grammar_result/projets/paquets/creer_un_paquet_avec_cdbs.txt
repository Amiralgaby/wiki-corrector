2 Mot inconnu : DvP => Article mis en forme par DvP suite à la séance de formation organisée par Gloubiboulga sur le canal IRC #ubuntu-fr-classroom. Encore merci à lui pour ses excellents cours.
2 Mot inconnu : Gloubiboulga => Article mis en forme par DvP suite à la séance de formation organisée par Gloubiboulga sur le canal IRC #ubuntu-fr-classroom. Encore merci à lui pour ses excellents cours.
2 Mot inconnu : IRC => Article mis en forme par DvP suite à la séance de formation organisée par Gloubiboulga sur le canal IRC #ubuntu-fr-classroom. Encore merci à lui pour ses excellents cours.

4 Mot inconnu : Gloubiboulga => Merci à Gloubiboulga pour la relecture et corrections.

6 Mot inconnu : CDBS => ====== CDBS, un outil de création de paquets debian ====== 
6 Mot inconnu : debian => ====== CDBS, un outil de création de paquets debian ====== 
6 Espace(s) en fin de ligne à supprimer. => ====== CDBS, un outil de création de paquets debian ====== 

9 Mot inconnu : CDBS => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : Common => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : System => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : debian => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : rules => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : debhelper => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : CDBS => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : debian => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : rules => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : CDBS => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : KDE => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : Xfce => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : packagés => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.
9 Mot inconnu : CDBS => CDBS, pour Common Debian Build System, est un outil qui permet de simplifier votre debian/rules. Il permet de faire la même chose que ce que vous pouvez faire avec debhelper. Pour certains paquets faits avec CDBS, le debian/rules se résume à 2 lignes. CDBS est de plus utilisé par les mainteneurs. Sous Ubuntu, GNOME, KDE et Xfce sont entièrement packagés grâce à CDBS.

13 Il manque un espace insécable. => Pour pouvoir suivre cette documentation un certain nombre de pré-requis sont nécessaires : 
13 Espace(s) en fin de ligne à supprimer. => Pour pouvoir suivre cette documentation un certain nombre de pré-requis sont nécessaires : 

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avoir suivi (ou lu) les cours précédents sur la [[tutoriel:creer_un_paquet|création de paquets]] et la [[:tutoriel:compilation|compilation d'un programme]]
14 Il manque un espace. =>   * Avoir suivi (ou lu) les cours précédents sur la [[tutoriel:creer_un_paquet|création de paquets]] et la [[:tutoriel:compilation|compilation d'un programme]]
14 Mot inconnu : creer_un_paquet =>   * Avoir suivi (ou lu) les cours précédents sur la [[tutoriel:creer_un_paquet|création de paquets]] et la [[:tutoriel:compilation|compilation d'un programme]]
14 Il manque un espace. =>   * Avoir suivi (ou lu) les cours précédents sur la [[tutoriel:creer_un_paquet|création de paquets]] et la [[:tutoriel:compilation|compilation d'un programme]]

15 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Installer sur votre ordinateur les paquets suivants :
15 Il manque un espace insécable. =>   * Installer sur votre ordinateur les paquets suivants :

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * devscripts
16 Mot inconnu : devscripts =>     * devscripts

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * build-essential
17 Mot inconnu : build-essential =>     * build-essential

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * cdbs
18 Mot inconnu : cdbs =>     * cdbs

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * debhelper
19 Mot inconnu : debhelper =>     * debhelper

20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * lintian
20 Mot inconnu : lintian =>     * lintian

21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * fakeroot
21 Mot inconnu : fakeroot =>     * fakeroot

23 Il manque un espace insécable. => Afin d'installer rapidement ces paquets :
25 Il manque un espace. => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Mot inconnu : build-essential => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Mot inconnu : cdbs => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Il manque un espace. => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Mot inconnu : debhelper => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Mot inconnu : lintian => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Il manque un espace. => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Mot inconnu : fakeroot => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :
25 Il manque un espace insécable. => [[apt://devscripts,build-essential,cdbs,debhelper,lintian,fakeroot|{{apt.png}}]] ou en console :

29 Mot inconnu : CDBS => ===== Initiation à CDBS =====

30 Mot inconnu : CDBS => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Ceci est un verbe à la 1ʳᵉ personne du pluriel. Sujet (“nous” ou équivalent) introuvable. => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Mot inconnu : rules => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Mot inconnu : class => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Mot inconnu : debian => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Mot inconnu : rules => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Confusion : « notre possession », « la nôtre ». => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Guillemets typographiques ouvrants. => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Mot inconnu : rules => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Guillemets typographiques fermants. => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Guillemets typographiques ouvrants. => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Mot inconnu : class => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.
30 Guillemets typographiques fermants. => Une fois les paquets nécessaires à la création de paquets avec CDBS installés, regardez ensuite dans /usr/share/cdbs/1. Nous avons donc 2 dossiers (rules et class) qui contiennent des morceaux de debian/rules que l'on va pouvoir inclure dans le notre. Les "rules" sont des actions à exécuter suivant la méthode de compilation/installation du logiciel que vous empaquetez, les "class" permettent d'automatiser différentes taches que l'on retrouve dans tous les paquets concernant un certain type de paquets.

32 Guillemets typographiques ouvrants. => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : automagiquement => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Guillemets typographiques fermants. => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : debian => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : changelog => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : debian => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : control => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : Makefile => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : Makefile => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : dh_ => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : debhelper => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.
32 Mot inconnu : mk => Regardons le fichier /usr/share/cdbs/1/rules/debhelper.mk (Vous pouvez vous servir de Firefox pour regarder ce genre de fichiers texte). Le début de ce script décrit les variables qu'il utilise. Puis un certain nombre de ces variables sont définies "automagiquement", en tenant compte par exemple d'informations contenues dans debian/changelog ou debian/control. Ensuite une série de règles de Makefile sont décrites, avec les actions à exécuter. N'ayez pas peur, la syntaxe des fonctions avancées d'un Makefile est assez repoussante, mais il est vraiment rare d'avoir à s'en servir. Vous verrez enfin à la fin du fichier toute une série de dh_* (scripts debhelper) appelés par ce fichier .mk.

34 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Tous les fichiers .mk livrés avec CDBS ont ce profil (debhelper.mk est un exemple assez complexe, gnome.mk est beaucoup plus simple).
34 Mot inconnu : mk => Tous les fichiers .mk livrés avec CDBS ont ce profil (debhelper.mk est un exemple assez complexe, gnome.mk est beaucoup plus simple).
34 Mot inconnu : CDBS => Tous les fichiers .mk livrés avec CDBS ont ce profil (debhelper.mk est un exemple assez complexe, gnome.mk est beaucoup plus simple).
34 Mot inconnu : debhelper => Tous les fichiers .mk livrés avec CDBS ont ce profil (debhelper.mk est un exemple assez complexe, gnome.mk est beaucoup plus simple).
34 Mot inconnu : mk => Tous les fichiers .mk livrés avec CDBS ont ce profil (debhelper.mk est un exemple assez complexe, gnome.mk est beaucoup plus simple).
34 Mot inconnu : mk => Tous les fichiers .mk livrés avec CDBS ont ce profil (debhelper.mk est un exemple assez complexe, gnome.mk est beaucoup plus simple).

36 Guillemets typographiques ouvrants. => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Guillemets typographiques fermants. => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Il manque un espace insécable. => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Mot inconnu : autotools => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Mot inconnu : setup => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Mot inconnu : py => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Mot inconnu : qmake => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).
36 Typographie : points de suspension. Utilisez le caractère dédié. => La "difficulté" pour le packageur va être de choisir les bonnes règles ou classes pour son paquet (suivant le système de compilation du logiciel : autotools, setup.py, qmake...).

38 Mot inconnu : CDBS => == Comparaison CDBS / Debhelper ==
38 Mot inconnu : Debhelper => == Comparaison CDBS / Debhelper ==

40 Confusion. Ou vous confondez “à” (préposition) avec “a” (avoir), ou vous devez employer “au”. Exemple : _à_ midi, il _a_ pris son déjeuner _au_ restaurant. => Quand vous téléchargez un logiciel, 3 commandes suffisent souvent à le compiler/installer (les fameuses commandes ./configure, make et make install) mais vous pouvez aussi faire vous même la compilation en utilisant directement gcc ou g++.
40 Mot inconnu : make => Quand vous téléchargez un logiciel, 3 commandes suffisent souvent à le compiler/installer (les fameuses commandes ./configure, make et make install) mais vous pouvez aussi faire vous même la compilation en utilisant directement gcc ou g++.
40 Mot inconnu : make => Quand vous téléchargez un logiciel, 3 commandes suffisent souvent à le compiler/installer (les fameuses commandes ./configure, make et make install) mais vous pouvez aussi faire vous même la compilation en utilisant directement gcc ou g++.
40 Mot inconnu : install => Quand vous téléchargez un logiciel, 3 commandes suffisent souvent à le compiler/installer (les fameuses commandes ./configure, make et make install) mais vous pouvez aussi faire vous même la compilation en utilisant directement gcc ou g++.
40 Il manque un trait d’union si “même” se rapporte à “vous”. => Quand vous téléchargez un logiciel, 3 commandes suffisent souvent à le compiler/installer (les fameuses commandes ./configure, make et make install) mais vous pouvez aussi faire vous même la compilation en utilisant directement gcc ou g++.
40 Mot inconnu : gcc => Quand vous téléchargez un logiciel, 3 commandes suffisent souvent à le compiler/installer (les fameuses commandes ./configure, make et make install) mais vous pouvez aussi faire vous même la compilation en utilisant directement gcc ou g++.

42 Mot inconnu : debhelper => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 
42 Mot inconnu : cdbs => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 
42 Mot inconnu : debhelper => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 
42 Si « mais » est la conjonction de coordination, une virgule est souhaitable si elle introduit une nouvelle proposition. => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 
42 Mot inconnu : cdbs => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 
42 Mot inconnu : debhelper => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 
42 Espace(s) en fin de ligne à supprimer. => C'est le même principe avec debhelper et cdbs, vous pouvez tout faire manuellement avec debhelper mais vous pouvez aussi utiliser cdbs qui fera le même boulot avec 2 lignes de code (en utilisant debhelper 99 fois sur 100). 

44 Il manque un espace insécable. => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.
44 Mot inconnu : debian => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.
44 Mot inconnu : rules => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.
44 Mot inconnu : CDBS => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.
44 Mot inconnu : debian => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.
44 Mot inconnu : debhelper => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.
44 Mot inconnu : CDBS => **Attention** : Notez que seul le debian/rules est concerné par CDBS, le reste des fichiers de debian/ reste identique suivant que vous utilisiez debhelper ou CDBS.

46 Mot inconnu : CDBS => ===== Création d'un paquet avec CDBS ===== 
46 Espace(s) en fin de ligne à supprimer. => ===== Création d'un paquet avec CDBS ===== 

48 Mot inconnu : libtextcat => On va aujourd'hui empaqueter libtextcat (http://software.wise-guys.nl/libtextcat/). On va procéder en 2 étapes. D'abord en créant un paquet très laid, mais qui nous permettra de nous faire la main, puis en créant un vrai paquet, tout beau, et qui nous donnera plusieurs .debs.
48 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => On va aujourd'hui empaqueter libtextcat (http://software.wise-guys.nl/libtextcat/). On va procéder en 2 étapes. D'abord en créant un paquet très laid, mais qui nous permettra de nous faire la main, puis en créant un vrai paquet, tout beau, et qui nous donnera plusieurs .debs.
48 Mot inconnu : debs => On va aujourd'hui empaqueter libtextcat (http://software.wise-guys.nl/libtextcat/). On va procéder en 2 étapes. D'abord en créant un paquet très laid, mais qui nous permettra de nous faire la main, puis en créant un vrai paquet, tout beau, et qui nous donnera plusieurs .debs.

55 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => ==== 1 - Création du paquet « pas beau » ====
55 Il manque un espace insécable. => ==== 1 - Création du paquet « pas beau » ====
55 Il manque un espace insécable. => ==== 1 - Création du paquet « pas beau » ====

56 Mot inconnu : Gloubiboulga => Pour aller vite, Gloubiboulga a préparé un petit script qui va vous permettre de récupérer tous les fichiers nécessaires sur son site. Placez vous dans un dossier (le dossier ~/packaging de la première session fera très bien l'affaire si vous l'avez toujours) et utilisez :
56 Forme interrogative ? Mettez un trait d’union. => Pour aller vite, Gloubiboulga a préparé un petit script qui va vous permettre de récupérer tous les fichiers nécessaires sur son site. Placez vous dans un dossier (le dossier ~/packaging de la première session fera très bien l'affaire si vous l'avez toujours) et utilisez :
56 Il manque un espace insécable. => Pour aller vite, Gloubiboulga a préparé un petit script qui va vous permettre de récupérer tous les fichiers nécessaires sur son site. Placez vous dans un dossier (le dossier ~/packaging de la première session fera très bien l'affaire si vous l'avez toujours) et utilisez :

62 Mot inconnu : get_files => <note important>Il faut modifier le script get_files.sh, et remplacer à la ligne 6 la valeur de BASE_URL par :
62 Mot inconnu : sh => <note important>Il faut modifier le script get_files.sh, et remplacer à la ligne 6 la valeur de BASE_URL par :
62 Mot inconnu : BASE_URL => <note important>Il faut modifier le script get_files.sh, et remplacer à la ligne 6 la valeur de BASE_URL par :
62 Il manque un espace insécable. => <note important>Il faut modifier le script get_files.sh, et remplacer à la ligne 6 la valeur de BASE_URL par :

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   BASE_URL="http://gauvain.pocentek.net/u-classroom/2006-10-31/textcat"
63 Mot inconnu : BASE_URL =>   BASE_URL="http://gauvain.pocentek.net/u-classroom/2006-10-31/textcat"
63 Guillemets typographiques ouvrants. =>   BASE_URL="http://gauvain.pocentek.net/u-classroom/2006-10-31/textcat"

65 Mot inconnu : libtextcat => Ceci va vous permettre de récupérer le paquet source orig.tar.gz de libtextcat et un dossier debian/ contenant les fichiers nécessaires à la création d'un paquet tout moche ;)
65 Mot inconnu : debian => Ceci va vous permettre de récupérer le paquet source orig.tar.gz de libtextcat et un dossier debian/ contenant les fichiers nécessaires à la création d'un paquet tout moche ;)
65 Il manque un espace insécable. => Ceci va vous permettre de récupérer le paquet source orig.tar.gz de libtextcat et un dossier debian/ contenant les fichiers nécessaires à la création d'un paquet tout moche ;)

67 Il manque un espace insécable. => **Note** : Pour les besoins du cours, ces fichiers ont été téléchargés pour ne pas perdre trop de temps, mais le dossier debian/ et tous les fichiers auraient pu être créés par la commande :
67 Mot inconnu : debian => **Note** : Pour les besoins du cours, ces fichiers ont été téléchargés pour ne pas perdre trop de temps, mais le dossier debian/ et tous les fichiers auraient pu être créés par la commande :
67 Il manque un espace insécable. => **Note** : Pour les besoins du cours, ces fichiers ont été téléchargés pour ne pas perdre trop de temps, mais le dossier debian/ et tous les fichiers auraient pu être créés par la commande :

71 Il manque un espace insécable. => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.
71 Il manque un espace insécable. => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.
71 Mot inconnu : cdbs => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.
71 Mot inconnu : debian => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.
71 Il manque un espace insécable. => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.
71 Il manque un espace insécable. => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.
71 Mot inconnu : cdbs => Puis choisir « b » pour la création d'un paquet en utilisant cdbs. Ceci générera le dossier debian/ ainsi que les fichiers au « format » cdbs.

73 Mot inconnu : debian => Pour le détail sur les fichiers contenus dans le dossier debian/ rapporter vous au précédent tutoriel : [[tutoriel:creer_un_paquet|Créer un paquet]]
73 Il manque un espace insécable. => Pour le détail sur les fichiers contenus dans le dossier debian/ rapporter vous au précédent tutoriel : [[tutoriel:creer_un_paquet|Créer un paquet]]
73 Il manque un espace. => Pour le détail sur les fichiers contenus dans le dossier debian/ rapporter vous au précédent tutoriel : [[tutoriel:creer_un_paquet|Créer un paquet]]
73 Mot inconnu : creer_un_paquet => Pour le détail sur les fichiers contenus dans le dossier debian/ rapporter vous au précédent tutoriel : [[tutoriel:creer_un_paquet|Créer un paquet]]

75 Mot inconnu : debian => === Contenu du dossier debian/ ===

76 Mot inconnu : debian => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :
76 Mot inconnu : debian => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :
76 Mot inconnu : rules => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :
76 Mot inconnu : oeil => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :
76 Mot inconnu : debian => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :
76 Mot inconnu : control => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :
76 Il manque un espace insécable. => Allons voir ce qu'il y a dans ce dossier debian. Le fichier qui nous intéresse est bien entendu le debian/rules, mais jetons un oeil au debian/control :

80 Mot inconnu : Build-Depends => Vous voyez que les Build-Depends contiennent cdbs ET debhelper. Il est rare d'utiliser CDBS sans debhelper (Gloubiboulga lui-même n'a jamais vu un tel paquet).
80 Mot inconnu : cdbs => Vous voyez que les Build-Depends contiennent cdbs ET debhelper. Il est rare d'utiliser CDBS sans debhelper (Gloubiboulga lui-même n'a jamais vu un tel paquet).
80 Mot inconnu : debhelper => Vous voyez que les Build-Depends contiennent cdbs ET debhelper. Il est rare d'utiliser CDBS sans debhelper (Gloubiboulga lui-même n'a jamais vu un tel paquet).
80 Mot inconnu : CDBS => Vous voyez que les Build-Depends contiennent cdbs ET debhelper. Il est rare d'utiliser CDBS sans debhelper (Gloubiboulga lui-même n'a jamais vu un tel paquet).
80 Mot inconnu : debhelper => Vous voyez que les Build-Depends contiennent cdbs ET debhelper. Il est rare d'utiliser CDBS sans debhelper (Gloubiboulga lui-même n'a jamais vu un tel paquet).
80 Mot inconnu : Gloubiboulga => Vous voyez que les Build-Depends contiennent cdbs ET debhelper. Il est rare d'utiliser CDBS sans debhelper (Gloubiboulga lui-même n'a jamais vu un tel paquet).

82 Mot inconnu : debian => Maintenant, éditons le fichier debian/rules :
82 Mot inconnu : rules => Maintenant, éditons le fichier debian/rules :
82 Il manque un espace insécable. => Maintenant, éditons le fichier debian/rules :

86 Typographie : points de suspension. Utilisez le caractère dédié. => 6 lignes suffisent...

88 Mot inconnu : debian => === Détail du fichier debian/rules ===
88 Mot inconnu : rules => === Détail du fichier debian/rules ===

89 Mot inconnu : cdbs => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : autotools => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : mk => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : make => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : make => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : install => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Il manque un espace insécable. => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : debhelper => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : mk => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.
89 Mot inconnu : dh_ => Les deux premières lignes permettent d'inclure des règles et classes fournies par cdbs, en l'occurrence autotools.mk, qui s'occupera d'utiliser les fameuses commandes ./configure, make et make install ; et debhelper.mk que nous avons vu tout à l'heure, qui intègre un certain nombre de scripts dh_* pour la construction du paquet.

93 Il manque un espace insécable. => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : debhelper => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : mk => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : CDBS => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : DEB_INSTALL_MANPAGES_ => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Guillemets typographiques ouvrants. => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : textcat => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Guillemets typographiques fermants. => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : debian => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : createfp => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).
93 Mot inconnu : debian => Première chose : installer une page man. On a vu tout à l'heure que de nombreuses variables sont définies dans debhelper.mk. L'utilisateur de CDBS peut utiliser ces variables, les modifier ou les compléter pour adapter son paquet. Dans le cas d'une page man, c'est la variable DEB_INSTALL_MANPAGES_<paquet> qui entre en jeu. Le paquet dans notre cas est "textcat", et la page man debian/createfp.8 (déjà écrite, et disponible dans le dossier debian/ que vous avez téléchargé).

95 Il manque un espace insécable. => Pour assigner une valeur à la variable, on utilise le symbole ":=". Par exemple : //DEB_INSTALL_MANPAGES_textcat := debian/createfp.8 //
95 Mot inconnu : DEB_INSTALL_MANPAGES_textcat => Pour assigner une valeur à la variable, on utilise le symbole ":=". Par exemple : //DEB_INSTALL_MANPAGES_textcat := debian/createfp.8 //
95 Mot inconnu : debian => Pour assigner une valeur à la variable, on utilise le symbole ":=". Par exemple : //DEB_INSTALL_MANPAGES_textcat := debian/createfp.8 //
95 Mot inconnu : createfp => Pour assigner une valeur à la variable, on utilise le symbole ":=". Par exemple : //DEB_INSTALL_MANPAGES_textcat := debian/createfp.8 //

97 Mot inconnu : CDBS => CDBS saura qu'une page man existe, et dans quel paquet l'installer lors de la construction du paquet binaire (en utilisant en fait dh_installman).
97 Mot inconnu : dh_installman => CDBS saura qu'une page man existe, et dans quel paquet l'installer lors de la construction du paquet binaire (en utilisant en fait dh_installman).

99 Mot inconnu : CDBS => Il n'y a pas d'intérêt à détailler toutes les variables utilisables avec CDBS (il y en a des tonnes). Regarder ce qui se passe dans les fichiers .mk est certainement une meilleure idée. Vous pouvez pour cela utiliser grep pour rechercher quelque chose : 
99 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Il n'y a pas d'intérêt à détailler toutes les variables utilisables avec CDBS (il y en a des tonnes). Regarder ce qui se passe dans les fichiers .mk est certainement une meilleure idée. Vous pouvez pour cela utiliser grep pour rechercher quelque chose : 
99 Mot inconnu : mk => Il n'y a pas d'intérêt à détailler toutes les variables utilisables avec CDBS (il y en a des tonnes). Regarder ce qui se passe dans les fichiers .mk est certainement une meilleure idée. Vous pouvez pour cela utiliser grep pour rechercher quelque chose : 
99 Mot inconnu : grep => Il n'y a pas d'intérêt à détailler toutes les variables utilisables avec CDBS (il y en a des tonnes). Regarder ce qui se passe dans les fichiers .mk est certainement une meilleure idée. Vous pouvez pour cela utiliser grep pour rechercher quelque chose : 
99 Il manque un espace insécable. => Il n'y a pas d'intérêt à détailler toutes les variables utilisables avec CDBS (il y en a des tonnes). Regarder ce qui se passe dans les fichiers .mk est certainement une meilleure idée. Vous pouvez pour cela utiliser grep pour rechercher quelque chose : 
99 Espace(s) en fin de ligne à supprimer. => Il n'y a pas d'intérêt à détailler toutes les variables utilisables avec CDBS (il y en a des tonnes). Regarder ce qui se passe dans les fichiers .mk est certainement une meilleure idée. Vous pouvez pour cela utiliser grep pour rechercher quelque chose : 

103 Il manque un espace insécable. => Ce qui vous donnera en retour :  
103 Espace(s) en fin de ligne à supprimer. => Ce qui vous donnera en retour :  

107 Mot inconnu : grep => **Note sur grep** : -R permet de chercher dans tous les fichiers, -i de ne pas tenir compte de la casse. Cela donne une indication sur les variables à utiliser. Les noms des variables sont généralement suffisamment explicites pour permettre une recherche avec grep.
107 Il manque un espace insécable. => **Note sur grep** : -R permet de chercher dans tous les fichiers, -i de ne pas tenir compte de la casse. Cela donne une indication sur les variables à utiliser. Les noms des variables sont généralement suffisamment explicites pour permettre une recherche avec grep.
107 Mot inconnu : grep => **Note sur grep** : -R permet de chercher dans tous les fichiers, -i de ne pas tenir compte de la casse. Cela donne une indication sur les variables à utiliser. Les noms des variables sont généralement suffisamment explicites pour permettre une recherche avec grep.

109 Mot inconnu : CDBS => La documentation sur CDBS n'est pas très riche. La meilleure pour le moment est : [[http://perso.duckcorp.org/duck/cdbs-doc/cdbs-doc.xhtml]] traduite en français [[http://perso.duckcorp.org/duck/cdbs-doc/fr/cdbs-doc.xhtml|ici]].
109 Il manque un espace insécable. => La documentation sur CDBS n'est pas très riche. La meilleure pour le moment est : [[http://perso.duckcorp.org/duck/cdbs-doc/cdbs-doc.xhtml]] traduite en français [[http://perso.duckcorp.org/duck/cdbs-doc/fr/cdbs-doc.xhtml|ici]].

112 Mot inconnu : createfp => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : usr => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Élision de l’article devant un mot commençant par une voyelle. => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : usr => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : bin => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : sbin => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : make => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : install => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : textcat => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Il manque un espace insécable. => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : install => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Mot inconnu : textcat => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::
112 Une de ces ponctuations est superflue. => Il se peut également que vous ayez des actions particulières à exécuter à certains moments de la construction du paquet. Dans notre exemple, nous allons installer l'exécutable createfp dans usr/sbin au lieu de usr/bin. Pour ce faire nous allons renommer le dossier bin en sbin. Cela ne peut se faire qu'après avoir utilisé le `make install`. Nous allons donc créer une nouvelle règle pour le paquet textcat, qui s'appliquera après l'installation : install/textcat::

118 Mot inconnu : __Petit => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Mot inconnu : rappel__ => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Il manque un espace insécable. => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Mot inconnu : make => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Mot inconnu : install => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Mot inconnu : debian => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Confusion probable : “avoir” à la 3ᵉ personne du pluriel du présent s’écrit “ont”. => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Incohérence avec “on” : “une” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.
118 Mot inconnu : debian => __Petit rappel__ : Quand on lance le make install en construisant un paquet, l'installation se fait dans debian/paquet et pas sur le système local. Donc si on une action est à faire, elle doit être faite dans debian/paquet.

130 Mot inconnu : textcat => Ce script utilise les fichiers téléchargés tout à l'heure pour créer un vrai paquet (simplement en copiant le dossier textcat/debian dans le dossier source décompressé). 
130 Mot inconnu : debian => Ce script utilise les fichiers téléchargés tout à l'heure pour créer un vrai paquet (simplement en copiant le dossier textcat/debian dans le dossier source décompressé). 
130 Espace(s) en fin de ligne à supprimer. => Ce script utilise les fichiers téléchargés tout à l'heure pour créer un vrai paquet (simplement en copiant le dossier textcat/debian dans le dossier source décompressé). 
131 Il manque un espace insécable. => Contrairement à ce que nous avons fait lors de la première session, on ne passe pas par l'étape paquet source puis [[:pbuilder]], puisque vous savez tous faire ça, que c'est long, et que ça n'a aucun intérêt aujourd'hui ;)

133 Guillemets typographiques ouvrants. => Après le 'moulinage' (compilation du paquet) effectuer un :
133 Guillemets typographiques fermants. => Après le 'moulinage' (compilation du paquet) effectuer un :
133 Il manque un espace insécable. => Après le 'moulinage' (compilation du paquet) effectuer un :

137 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Vous avez bien votre paquet .deb mais vous avez vu que Lintian n'est pas spécialement content après la compilation :
137 Mot inconnu : deb => Vous avez bien votre paquet .deb mais vous avez vu que Lintian n'est pas spécialement content après la compilation :
137 Mot inconnu : Lintian => Vous avez bien votre paquet .deb mais vous avez vu que Lintian n'est pas spécialement content après la compilation :
137 Il manque un espace insécable. => Vous avez bien votre paquet .deb mais vous avez vu que Lintian n'est pas spécialement content après la compilation :

142 Guillemets typographiques ouvrants. => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Mot inconnu : dpkg => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Il manque un espace à côté du tiret. => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Guillemets typographiques fermants. => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Incohérence avec « c’ » : « sur » devrait être un verbe. => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Mot inconnu : deb => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Mot inconnu : sbin => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Mot inconnu : bin => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.
142 Mot inconnu : manpage => Faites un 'dpkg -c' sur le .deb, ceci va lister le contenu du paquet. Vous verrez que vous avez un dossier sbin, et pas de bin ainsi qu'une manpage.

144 Mot inconnu : debian => On va maintenant construire un paquet multiple, pour satisfaire la debian policy en changeant le debian/rules.
144 Mot inconnu : policy => On va maintenant construire un paquet multiple, pour satisfaire la debian policy en changeant le debian/rules.
144 Mot inconnu : debian => On va maintenant construire un paquet multiple, pour satisfaire la debian policy en changeant le debian/rules.
144 Mot inconnu : rules => On va maintenant construire un paquet multiple, pour satisfaire la debian policy en changeant le debian/rules.

147 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => ==== 2 - Création du paquet en respectant la « debian policy » ====
147 Il manque un espace insécable. => ==== 2 - Création du paquet en respectant la « debian policy » ====
147 Mot inconnu : debian => ==== 2 - Création du paquet en respectant la « debian policy » ====
147 Mot inconnu : policy => ==== 2 - Création du paquet en respectant la « debian policy » ====
147 Il manque un espace insécable. => ==== 2 - Création du paquet en respectant la « debian policy » ====

148 Il manque un espace insécable. => Retournez dans votre dossier initial (~/packaging ?) et lancez maintenant :
148 Il manque un espace insécable. => Retournez dans votre dossier initial (~/packaging ?) et lancez maintenant :

153 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Quelques fichiers .install sont ajoutés. Jetons un oeil au debian/control :
153 Mot inconnu : install => Quelques fichiers .install sont ajoutés. Jetons un oeil au debian/control :
153 Mot inconnu : oeil => Quelques fichiers .install sont ajoutés. Jetons un oeil au debian/control :
153 Mot inconnu : debian => Quelques fichiers .install sont ajoutés. Jetons un oeil au debian/control :
153 Mot inconnu : control => Quelques fichiers .install sont ajoutés. Jetons un oeil au debian/control :
153 Il manque un espace insécable. => Quelques fichiers .install sont ajoutés. Jetons un oeil au debian/control :

157 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Cette fois-ci trois paquets sont décrits, qui vont donner 3 .debs lors de la compilation.
157 Mot inconnu : debs => Cette fois-ci trois paquets sont décrits, qui vont donner 3 .debs lors de la compilation.

158 Mot inconnu : debian => Il reste maintenant à installer les fichiers voulus dans les dossiers debian/libtextcat0, debian/libtextcat-dev et debian/createfp.
158 Mot inconnu : textcat0 => Il reste maintenant à installer les fichiers voulus dans les dossiers debian/libtextcat0, debian/libtextcat-dev et debian/createfp.
158 Mot inconnu : debian => Il reste maintenant à installer les fichiers voulus dans les dossiers debian/libtextcat0, debian/libtextcat-dev et debian/createfp.
158 Mot inconnu : textcat-dev => Il reste maintenant à installer les fichiers voulus dans les dossiers debian/libtextcat0, debian/libtextcat-dev et debian/createfp.
158 Mot inconnu : debian => Il reste maintenant à installer les fichiers voulus dans les dossiers debian/libtextcat0, debian/libtextcat-dev et debian/createfp.
158 Mot inconnu : createfp => Il reste maintenant à installer les fichiers voulus dans les dossiers debian/libtextcat0, debian/libtextcat-dev et debian/createfp.

160 Accord de nombre erroné : « scripts » est au pluriel. => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Accord de nombre erroné : « scripts » devrait être au singulier. => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : debian => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : CDBS => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : debian => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Guillemets typographiques ouvrants. => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : mv => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Guillemets typographiques fermants. => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Guillemets typographiques ouvrants. => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : cp => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Guillemets typographiques fermants. => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : debian => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : rules => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : debian => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.
160 Mot inconnu : rules => Le scripts d'installation de la bibliothèque ne peut pas faire ça (choisir où installer les fichiers), on va donc pour commencer devoir installer tous les fichiers dans debian/tmp (ce que CDBS fera tout seul comme un grand). Puis on copiera les fichiers depuis debian/tmp vers les dossiers corrects. Des "mv" ou "cp" dans le debian/rules pourraient faire l'affaire, mais ça risque d'alourdir énormément le debian/rules.

162 Mot inconnu : debhelper => C'est là que debhelper revient sur le devant de la scène avec son merveilleux dh_install. ce script permet de déplacer les fichiers listés dans debian/<paquet>.install dans le dossier debian/<paquet> lors de son utilisation.
162 Mot inconnu : dh_install => C'est là que debhelper revient sur le devant de la scène avec son merveilleux dh_install. ce script permet de déplacer les fichiers listés dans debian/<paquet>.install dans le dossier debian/<paquet> lors de son utilisation.
162 Mot inconnu : debian => C'est là que debhelper revient sur le devant de la scène avec son merveilleux dh_install. ce script permet de déplacer les fichiers listés dans debian/<paquet>.install dans le dossier debian/<paquet> lors de son utilisation.
162 Mot inconnu : install => C'est là que debhelper revient sur le devant de la scène avec son merveilleux dh_install. ce script permet de déplacer les fichiers listés dans debian/<paquet>.install dans le dossier debian/<paquet> lors de son utilisation.
162 Mot inconnu : debian => C'est là que debhelper revient sur le devant de la scène avec son merveilleux dh_install. ce script permet de déplacer les fichiers listés dans debian/<paquet>.install dans le dossier debian/<paquet> lors de son utilisation.

164 Mot inconnu : createfp => Regardez par exemple createfp.install :
164 Mot inconnu : install => Regardez par exemple createfp.install :
164 Il manque un espace insécable. => Regardez par exemple createfp.install :

168 Mot inconnu : debian => Tous les fichiers installés dans debian/tmp/usr/bin/* se retrouveront dans debian/createfp/usr/bin/
168 Mot inconnu : debian => Tous les fichiers installés dans debian/tmp/usr/bin/* se retrouveront dans debian/createfp/usr/bin/
168 Mot inconnu : createfp => Tous les fichiers installés dans debian/tmp/usr/bin/* se retrouveront dans debian/createfp/usr/bin/

170 Mot inconnu : libtextcat-dev => Regardez maintenant libtextcat-dev.install :
170 Mot inconnu : install => Regardez maintenant libtextcat-dev.install :
170 Il manque un espace insécable. => Regardez maintenant libtextcat-dev.install :

174 Mot inconnu : src => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : textcat => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : usr => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : include => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : src => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : textcat => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : debian => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.
174 Mot inconnu : textcat-dev => La ligne src/textcat.h usr/include/ utilise une syntaxe un peu différente. Elle permet en fait d'installer le fichier src/textcat.h (fichier contenu dans les sources) dans debian/libtextcat-dev/usr/include.

176 Mot inconnu : debian => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.
176 Mot inconnu : rules => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.
176 Mot inconnu : bin => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.
176 Mot inconnu : sbin => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.
176 Mot inconnu : dh_install => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.
176 Mot inconnu : debhelper => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.
176 Mot inconnu : mk => Le debian/rules est quasiment identique à celui de notre premier paquet, seul le paquet cible pour l'installation de la page man et pour le renommage de bin en sbin est changé. Pas besoin d'appeler dh_install explicitement, debhelper.mk s'en charge.

178 Espace(s) en fin de ligne à supprimer. => === Compilation du paquet === 

179 Il manque un espace insécable. => Nous allons maintenant compiler les paquets :

189 Guillemets typographiques ouvrants. => Et après 'moulinage' :
189 Guillemets typographiques fermants. => Et après 'moulinage' :
189 Il manque un espace insécable. => Et après 'moulinage' :

193 Il manque un espace insécable. => Vous obtenez bien vos trois paquets binaires tous propres :

194 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * createfp_2.2-0ubuntu2_i386.deb
194 Mot inconnu : createfp_2 =>   * createfp_2.2-0ubuntu2_i386.deb
194 Mot inconnu : ubuntu2_i386 =>   * createfp_2.2-0ubuntu2_i386.deb
194 Mot inconnu : deb =>   * createfp_2.2-0ubuntu2_i386.deb

195 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * libtextcat0_2.2-0ubuntu2_i386.deb
195 Mot inconnu : libtextcat0_2 =>   * libtextcat0_2.2-0ubuntu2_i386.deb
195 Mot inconnu : ubuntu2_i386 =>   * libtextcat0_2.2-0ubuntu2_i386.deb
195 Mot inconnu : deb =>   * libtextcat0_2.2-0ubuntu2_i386.deb

196 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * libtextcat-dev_2.2-0ubuntu2_i386.deb
196 Mot inconnu : libtextcat-dev_2 =>   * libtextcat-dev_2.2-0ubuntu2_i386.deb
196 Mot inconnu : ubuntu2_i386 =>   * libtextcat-dev_2.2-0ubuntu2_i386.deb
196 Mot inconnu : deb =>   * libtextcat-dev_2.2-0ubuntu2_i386.deb
