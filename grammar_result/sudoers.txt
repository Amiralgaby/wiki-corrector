
4 Mot inconnu : sudo => ====== Configuration avancée de l'utilitaire sudo ====== | sudo

8 Guillemets typographiques ouvrants. => D'autres paramètres, destinés aux administrateurs de systèmes, concernent également la durée de validité de l'authentification des utilisateurs, la localisation du journal des événements et le niveau de courtoisie de ''sudo''. | '' => suggestions : ['«\xa0', '“']
8 Mot inconnu : sudo => D'autres paramètres, destinés aux administrateurs de systèmes, concernent également la durée de validité de l'authentification des utilisateurs, la localisation du journal des événements et le niveau de courtoisie de ''sudo''. | sudo
8 Guillemets typographiques fermants. => D'autres paramètres, destinés aux administrateurs de systèmes, concernent également la durée de validité de l'authentification des utilisateurs, la localisation du journal des événements et le niveau de courtoisie de ''sudo''. | '' => suggestions : ['\xa0»', '”']

15 Mot inconnu : README => Confer le fichier ///etc/sudoers.d/**README**// | readme

17 Guillemets typographiques ouvrants. => La gestion de ''sudo'' est améliorée dans les dernières versions (Debian version 1.7.2).  | '' => suggestions : ['«\xa0', '“']
17 Mot inconnu : sudo => La gestion de ''sudo'' est améliorée dans les dernières versions (Debian version 1.7.2).  | sudo
17 Guillemets typographiques fermants. => La gestion de ''sudo'' est améliorée dans les dernières versions (Debian version 1.7.2).  | '' => suggestions : ['\xa0»', '”']
17 Espace(s) en fin de ligne à supprimer. => La gestion de ''sudo'' est améliorée dans les dernières versions (Debian version 1.7.2).  |   => suggestions : ['']

18 Il manque les traits d’union. => C'est à dire pour toutes les versions d'Ubuntu supportées. | c'est à dire => suggestions : ['C’est-à-dire']

21 Guillemets fermants. => Tous les fichiers du répertoire **/etc/sudoers.d/** ne finissant pas par ''~'' ou ne contenant pas un ''.'' sont lus et analysés lorsque l'on utilise la commande ''sudo''. |  '' => suggestions : ['\xa0»', '”']
21 Guillemets typographiques fermants. => Tous les fichiers du répertoire **/etc/sudoers.d/** ne finissant pas par ''~'' ou ne contenant pas un ''.'' sont lus et analysés lorsque l'on utilise la commande ''sudo''. | '' => suggestions : ['\xa0»', '”']
21 Guillemets typographiques ouvrants. => Tous les fichiers du répertoire **/etc/sudoers.d/** ne finissant pas par ''~'' ou ne contenant pas un ''.'' sont lus et analysés lorsque l'on utilise la commande ''sudo''. | '' => suggestions : ['«\xa0', '“']
21 Mot inconnu : sudo => Tous les fichiers du répertoire **/etc/sudoers.d/** ne finissant pas par ''~'' ou ne contenant pas un ''.'' sont lus et analysés lorsque l'on utilise la commande ''sudo''. | sudo
21 Guillemets typographiques fermants. => Tous les fichiers du répertoire **/etc/sudoers.d/** ne finissant pas par ''~'' ou ne contenant pas un ''.'' sont lus et analysés lorsque l'on utilise la commande ''sudo''. | '' => suggestions : ['\xa0»', '”']

23 Guillemets typographiques ouvrants. => Pour modifier le fonctionnement de la commande ''sudo'', l'administrateur du système ne modifie plus le fichier ///etc/**sudoers**// mais positionne des fichiers de personnalisation dans le répertoire ///etc/**sudoers.d**//. | '' => suggestions : ['«\xa0', '“']
23 Mot inconnu : sudo => Pour modifier le fonctionnement de la commande ''sudo'', l'administrateur du système ne modifie plus le fichier ///etc/**sudoers**// mais positionne des fichiers de personnalisation dans le répertoire ///etc/**sudoers.d**//. | sudo
23 Guillemets typographiques fermants. => Pour modifier le fonctionnement de la commande ''sudo'', l'administrateur du système ne modifie plus le fichier ///etc/**sudoers**// mais positionne des fichiers de personnalisation dans le répertoire ///etc/**sudoers.d**//. | '' => suggestions : ['\xa0»', '”']
23 Mot inconnu : sudoers => Pour modifier le fonctionnement de la commande ''sudo'', l'administrateur du système ne modifie plus le fichier ///etc/**sudoers**// mais positionne des fichiers de personnalisation dans le répertoire ///etc/**sudoers.d**//. | sudoers
23 Mot inconnu : sudoers => Pour modifier le fonctionnement de la commande ''sudo'', l'administrateur du système ne modifie plus le fichier ///etc/**sudoers**// mais positionne des fichiers de personnalisation dans le répertoire ///etc/**sudoers.d**//. | sudoers

27 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. | vous => suggestions : ['Vous']
27 Mot inconnu : monfichier => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. | monfichier
27 Pas d’espace avant une virgule. => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. |  , => suggestions : [',']
27 Mot inconnu : sysctl => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. | sysctl
27 Pas d’espace avant une virgule. => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. |  , => suggestions : [',']
27 Mot inconnu : userX => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. | userx
27 Pas d’espace avant une virgule. => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. |  , => suggestions : [',']

29 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Vous disposez d'un aperçu des modifications en listant simplement le contenu du répertoire ///etc/**sudoers.d**//. |    => suggestions : ['']
29 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Vous disposez d'un aperçu des modifications en listant simplement le contenu du répertoire ///etc/**sudoers.d**//. |  -  => suggestions : [' – ', ' — ', ' − ']
29 Mot inconnu : sudoers =>   - Vous disposez d'un aperçu des modifications en listant simplement le contenu du répertoire ///etc/**sudoers.d**//. | sudoers

30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - l'administrateur peut annuler à tout moment une autorisation particulière de la commande ''sudo'' en supprimant le fichier de personnalisation correspondant.  |    => suggestions : ['']
30 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - l'administrateur peut annuler à tout moment une autorisation particulière de la commande ''sudo'' en supprimant le fichier de personnalisation correspondant.  |  -  => suggestions : [' – ', ' — ', ' − ']
30 Guillemets typographiques ouvrants. =>   - l'administrateur peut annuler à tout moment une autorisation particulière de la commande ''sudo'' en supprimant le fichier de personnalisation correspondant.  | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : sudo =>   - l'administrateur peut annuler à tout moment une autorisation particulière de la commande ''sudo'' en supprimant le fichier de personnalisation correspondant.  | sudo
30 Guillemets typographiques fermants. =>   - l'administrateur peut annuler à tout moment une autorisation particulière de la commande ''sudo'' en supprimant le fichier de personnalisation correspondant.  | '' => suggestions : ['\xa0»', '”']
30 Espace(s) en fin de ligne à supprimer. =>   - l'administrateur peut annuler à tout moment une autorisation particulière de la commande ''sudo'' en supprimant le fichier de personnalisation correspondant.  |   => suggestions : ['']

31 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - En supprimant tous les fichiers de personnalisation, vous êtes certain de revenir à la configuration par défaut de ''sudo'' qui sera restée d'origine. |    => suggestions : ['']
31 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - En supprimant tous les fichiers de personnalisation, vous êtes certain de revenir à la configuration par défaut de ''sudo'' qui sera restée d'origine. |  -  => suggestions : [' – ', ' — ', ' − ']
31 Guillemets typographiques ouvrants. =>   - En supprimant tous les fichiers de personnalisation, vous êtes certain de revenir à la configuration par défaut de ''sudo'' qui sera restée d'origine. | '' => suggestions : ['«\xa0', '“']
31 Mot inconnu : sudo =>   - En supprimant tous les fichiers de personnalisation, vous êtes certain de revenir à la configuration par défaut de ''sudo'' qui sera restée d'origine. | sudo
31 Guillemets typographiques fermants. =>   - En supprimant tous les fichiers de personnalisation, vous êtes certain de revenir à la configuration par défaut de ''sudo'' qui sera restée d'origine. | '' => suggestions : ['\xa0»', '”']

32 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Cette configuration peut se mettre à jour sans perdre vos modifications locales. |    => suggestions : ['']
32 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Cette configuration peut se mettre à jour sans perdre vos modifications locales. |  -  => suggestions : [' – ', ' — ', ' − ']

38 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

42 Il faut élider “si” et l’accoler au pronom. => Si il est toujours préférable de privilégier d'écrire ses modifications locales dans [[#etcsudoersd|/etc/sudoers.d]] il est toujours possible de surcharger directement le fichier /etc/sudoers. | si  => suggestions : ['S’']

44 Guillemets typographiques ouvrants. => La configuration de ''sudo'' est enregistrée dans le fichier de configuration ///etc/**sudoers**//. | '' => suggestions : ['«\xa0', '“']
44 Mot inconnu : sudo => La configuration de ''sudo'' est enregistrée dans le fichier de configuration ///etc/**sudoers**//. | sudo
44 Guillemets typographiques fermants. => La configuration de ''sudo'' est enregistrée dans le fichier de configuration ///etc/**sudoers**//. | '' => suggestions : ['\xa0»', '”']
44 Mot inconnu : sudoers => La configuration de ''sudo'' est enregistrée dans le fichier de configuration ///etc/**sudoers**//. | sudoers
47 Guillemets typographiques ouvrants. => La modification de ce fichier s'effectue à travers un utilitaire de vérification appelé **visudo**. <code bash> sudo visudo </code>Il effectue une vérification de l'intégrité du fichier après modification avant de l'enregistrer. En cas d'erreur lors de la modification, le nouveau fichier n'est pas enregistré, ce qui vous évite de vous retrouver dans l'impossibilité de corriger votre erreur. Enfin, il s'assure que ce fichier conserve ses droits Unix originaux, ce qui garantit le bon fonctionnement de ''sudo''. \\ | '' => suggestions : ['«\xa0', '“']
47 Guillemets typographiques fermants. => La modification de ce fichier s'effectue à travers un utilitaire de vérification appelé **visudo**. <code bash> sudo visudo </code>Il effectue une vérification de l'intégrité du fichier après modification avant de l'enregistrer. En cas d'erreur lors de la modification, le nouveau fichier n'est pas enregistré, ce qui vous évite de vous retrouver dans l'impossibilité de corriger votre erreur. Enfin, il s'assure que ce fichier conserve ses droits Unix originaux, ce qui garantit le bon fonctionnement de ''sudo''. \\ | '' => suggestions : ['\xa0»', '”']

48 Mot inconnu : visudo => À la fermeture du fichier // /etc/sudoers // ouvert par son outil d'édition **visudo**, la nouvelle configuration est automatiquement chargée. | visudo

49 Mot inconnu : visudo => ==== Choisir l'éditeur utilisé par visudo ==== | visudo

50 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. => === A chaque fois === | a => suggestions : ['À']

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Dans Ubuntu :** ''sudo VISUAL=/usr/bin/gedit visudo'' |    => suggestions : ['']
52 Guillemets typographiques ouvrants. =>   * **Dans Ubuntu :** ''sudo VISUAL=/usr/bin/gedit visudo'' | '' => suggestions : ['«\xa0', '“']
52 Mot inconnu : sudo =>   * **Dans Ubuntu :** ''sudo VISUAL=/usr/bin/gedit visudo'' | sudo
52 Mot inconnu : VISUAL =>   * **Dans Ubuntu :** ''sudo VISUAL=/usr/bin/gedit visudo'' | visual
52 Mot inconnu : visudo =>   * **Dans Ubuntu :** ''sudo VISUAL=/usr/bin/gedit visudo'' | visudo
52 Guillemets typographiques fermants. =>   * **Dans Ubuntu :** ''sudo VISUAL=/usr/bin/gedit visudo'' | '' => suggestions : ['\xa0»', '”']

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Dans Kubuntu :** ''sudo VISUAL=/usr/bin/kate visudo'' |    => suggestions : ['']
53 Guillemets typographiques ouvrants. =>   * **Dans Kubuntu :** ''sudo VISUAL=/usr/bin/kate visudo'' | '' => suggestions : ['«\xa0', '“']
53 Mot inconnu : sudo =>   * **Dans Kubuntu :** ''sudo VISUAL=/usr/bin/kate visudo'' | sudo
53 Mot inconnu : VISUAL =>   * **Dans Kubuntu :** ''sudo VISUAL=/usr/bin/kate visudo'' | visual
53 Mot inconnu : visudo =>   * **Dans Kubuntu :** ''sudo VISUAL=/usr/bin/kate visudo'' | visudo
53 Guillemets typographiques fermants. =>   * **Dans Kubuntu :** ''sudo VISUAL=/usr/bin/kate visudo'' | '' => suggestions : ['\xa0»', '”']

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' |    => suggestions : ['']
54 Mot inconnu : Xubuntu =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' | xubuntu
54 Guillemets typographiques ouvrants. =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' | '' => suggestions : ['«\xa0', '“']
54 Mot inconnu : sudo =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' | sudo
54 Mot inconnu : VISUAL =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' | visual
54 Mot inconnu : visudo =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' | visudo
54 Guillemets typographiques fermants. =>   * **Dans Xubuntu :** ''sudo VISUAL=/usr/bin/mousepad visudo'' | '' => suggestions : ['\xa0»', '”']

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **Dans Lubuntu :** ''sudo VISUAL=/usr/bin/leafpad visudo'' |    => suggestions : ['']
55 Guillemets typographiques ouvrants. =>   * **Dans Lubuntu :** ''sudo VISUAL=/usr/bin/leafpad visudo'' | '' => suggestions : ['«\xa0', '“']
55 Mot inconnu : sudo =>   * **Dans Lubuntu :** ''sudo VISUAL=/usr/bin/leafpad visudo'' | sudo
55 Mot inconnu : VISUAL =>   * **Dans Lubuntu :** ''sudo VISUAL=/usr/bin/leafpad visudo'' | visual
55 Mot inconnu : visudo =>   * **Dans Lubuntu :** ''sudo VISUAL=/usr/bin/leafpad visudo'' | visudo
55 Guillemets typographiques fermants. =>   * **Dans Lubuntu :** ''sudo VISUAL=/usr/bin/leafpad visudo'' | '' => suggestions : ['\xa0»', '”']

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' |    => suggestions : ['']
56 Guillemets typographiques ouvrants. =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | '' => suggestions : ['«\xa0', '“']
56 Mot inconnu : sudo =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | sudo
56 Mot inconnu : EDITOR =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | editor
56 Mot inconnu : visudo =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | visudo
56 Guillemets typographiques fermants. =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | '' => suggestions : ['\xa0»', '”']
56 Guillemets typographiques ouvrants. =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | '' => suggestions : ['«\xa0', '“']
56 Mot inconnu : sudo =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | sudo
56 Mot inconnu : EDITOR =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | editor
56 Espace(s) surnuméraire(s) à supprimer. =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' |    => suggestions : [' ']
56 Mot inconnu : visudo =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | visudo
56 Guillemets typographiques fermants. =>   * **En mode console :** ''sudo EDITOR=/usr/bin/nano visudo'' ** ou ** ''sudo EDITOR=/usr/bin/vim  visudo'' | '' => suggestions : ['\xa0»', '”']

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo update-alternatives --config editor |    => suggestions : ['']
59 Mot inconnu : sudo =>   sudo update-alternatives --config editor | sudo
59 Mot inconnu : update-alternatives =>   sudo update-alternatives --config editor | update-alternatives
59 Mot inconnu : editor =>   sudo update-alternatives --config editor | editor

66 Mot inconnu : __ => À __**la fin du fichier**__, ajoutez une ligne d'instruction... | __
66 Mot inconnu : __ => À __**la fin du fichier**__, ajoutez une ligne d'instruction... | __
66 Typographie : points de suspension. Utilisez le caractère dédié. => À __**la fin du fichier**__, ajoutez une ligne d'instruction... | ... => suggestions : ['…']

67 Mot inconnu : sudoers => <note important>En cas de litige entre ligne, ce sera la dernière dans le fichier sudoers qui sera comptée ! | sudoers

68 Pas d’espace avant une virgule. => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> |  , => suggestions : [',']
68 Mot inconnu : jérome => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | jérome
68 Mot inconnu : jérome => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | jérome
68 Mot inconnu : executer => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | executer
68 Mot inconnu : ls => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | ls
68 Mot inconnu : executer => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | executer
68 Mot inconnu : ls => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | ls
68 Mot inconnu : jérome => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | jérome
68 Mot inconnu : executer => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | executer
68 Mot inconnu : ls => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | ls
68 Mot inconnu : sudo => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | sudo
68 Mot inconnu : execution => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | execution
68 Mot inconnu : ls => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | ls
68 Mot inconnu : __ => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | __
68 Mot inconnu : __ => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | __
68 Mot inconnu : sudo => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> | sudo

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  ...telle que la suivante : |   => suggestions : ['']
69 Typographie : points de suspension. Utilisez le caractère dédié. =>  ...telle que la suivante : | ... => suggestions : ['…']

70 Mot inconnu : ALL => <file>identifiant	ALL = (user) /chemin/complet/commande,/chemin/complet/autrecommande | all
70 Mot inconnu : autrecommande => <file>identifiant	ALL = (user) /chemin/complet/commande,/chemin/complet/autrecommande | autrecommande

71 Il manque un espace. => %groupe	ALL = (user) /chemin/complet/commande,!/chemin/complet/autrecommande</file> | groupe => suggestions : [' groupe']
71 Mot inconnu : ALL => %groupe	ALL = (user) /chemin/complet/commande,!/chemin/complet/autrecommande</file> | all
71 Une de ces ponctuations est superflue. => %groupe	ALL = (user) /chemin/complet/commande,!/chemin/complet/autrecommande</file> | ,! => suggestions : [',', '!']
71 Mot inconnu : autrecommande => %groupe	ALL = (user) /chemin/complet/commande,!/chemin/complet/autrecommande</file> | autrecommande

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''identifiant'' représente un identifiant utilisateur du système Ubuntu. Un seul identifiant doit être précisé par ligne ; |    => suggestions : ['']
72 Guillemets typographiques ouvrants. =>   * ''identifiant'' représente un identifiant utilisateur du système Ubuntu. Un seul identifiant doit être précisé par ligne ; | '' => suggestions : ['«\xa0', '“']
72 Guillemets typographiques fermants. =>   * ''identifiant'' représente un identifiant utilisateur du système Ubuntu. Un seul identifiant doit être précisé par ligne ; | '' => suggestions : ['\xa0»', '”']

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''%groupe'' désigne un groupe d'utilisateurs du système Ubuntu. Le nom du groupe doit donc être précédé d'un symbole de pourcentage (''%''). Un seul groupe doit être précisé par ligne ; |    => suggestions : ['']
73 Il manque un espace. =>   * ''%groupe'' désigne un groupe d'utilisateurs du système Ubuntu. Le nom du groupe doit donc être précédé d'un symbole de pourcentage (''%''). Un seul groupe doit être précisé par ligne ; | groupe => suggestions : [' groupe']
73 Guillemets typographiques fermants. =>   * ''%groupe'' désigne un groupe d'utilisateurs du système Ubuntu. Le nom du groupe doit donc être précédé d'un symbole de pourcentage (''%''). Un seul groupe doit être précisé par ligne ; | '' => suggestions : ['\xa0»', '”']

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; |    => suggestions : ['']
74 Guillemets typographiques ouvrants. =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | '' => suggestions : ['«\xa0', '“']
74 Mot inconnu : ALL =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | all
74 Guillemets typographiques fermants. =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | '' => suggestions : ['\xa0»', '”']
74 Guillemets typographiques ouvrants. =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | '' => suggestions : ['«\xa0', '“']
74 Mot inconnu : ALL =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | all
74 Guillemets typographiques fermants. =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | '' => suggestions : ['\xa0»', '”']
74 Guillemets typographiques ouvrants. =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | '' => suggestions : ['«\xa0', '“']
74 Mot inconnu : ALL =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | all
74 Guillemets typographiques fermants. =>   * ''ALL'' désigne la ou les machines dans lesquelles les commandes suivantes sont autorisées ou refusées pour cet utilisateur ou ce groupe d'utilisateurs. Le mot-clé ''ALL'' désigne l'ensemble des machines de votre parc informatique. Dans le cadre d'une utilisation à domicile, laisser ''ALL'' n'est pas un inconvénient. Dans un grand parc d'entreprise, de meilleures stratégies sont à prévoir ; | '' => suggestions : ['\xa0»', '”']

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *  ''user'' (entre parenthèses) désigne l'utilisateur dont on prend les droits (peut valoir ALL pour tous) |    => suggestions : ['']
75 Guillemets typographiques ouvrants. =>   *  ''user'' (entre parenthèses) désigne l'utilisateur dont on prend les droits (peut valoir ALL pour tous) | '' => suggestions : ['«\xa0', '“']
75 Guillemets typographiques fermants. =>   *  ''user'' (entre parenthèses) désigne l'utilisateur dont on prend les droits (peut valoir ALL pour tous) | '' => suggestions : ['\xa0»', '”']
75 Mot inconnu : ALL =>   *  ''user'' (entre parenthèses) désigne l'utilisateur dont on prend les droits (peut valoir ALL pour tous) | all

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *  ''commande'' et ''autrecommande'' représentent des commandes pouvant être exécutées par l'utilisateur ou le groupe d'utilisateurs désigné en début de ligne. |    => suggestions : ['']
76 Guillemets typographiques ouvrants. =>   *  ''commande'' et ''autrecommande'' représentent des commandes pouvant être exécutées par l'utilisateur ou le groupe d'utilisateurs désigné en début de ligne. | '' => suggestions : ['«\xa0', '“']
76 Guillemets typographiques fermants. =>   *  ''commande'' et ''autrecommande'' représentent des commandes pouvant être exécutées par l'utilisateur ou le groupe d'utilisateurs désigné en début de ligne. | '' => suggestions : ['\xa0»', '”']
76 Guillemets typographiques ouvrants. =>   *  ''commande'' et ''autrecommande'' représentent des commandes pouvant être exécutées par l'utilisateur ou le groupe d'utilisateurs désigné en début de ligne. | '' => suggestions : ['«\xa0', '“']
76 Mot inconnu : autrecommande =>   *  ''commande'' et ''autrecommande'' représentent des commandes pouvant être exécutées par l'utilisateur ou le groupe d'utilisateurs désigné en début de ligne. | autrecommande
76 Guillemets typographiques fermants. =>   *  ''commande'' et ''autrecommande'' représentent des commandes pouvant être exécutées par l'utilisateur ou le groupe d'utilisateurs désigné en début de ligne. | '' => suggestions : ['\xa0»', '”']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     *  Les commandes précédées d'un point d'exclamation (''!'') sont refusées, alors que celles sans point d'exclamation sont autorisées ; |      => suggestions : ['']
77 Guillemets typographiques fermants. =>     *  Les commandes précédées d'un point d'exclamation (''!'') sont refusées, alors que celles sans point d'exclamation sont autorisées ; | '' => suggestions : ['\xa0»', '”']

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Les commandes multiples sont séparées par une virgule, sans espace ; |      => suggestions : ['']

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. |      => suggestions : ['']
79 Guillemets typographiques fermants. =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | '' => suggestions : ['\xa0»', '”']
79 Guillemets typographiques ouvrants. =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | '' => suggestions : ['«\xa0', '“']
79 Mot inconnu : update-manager =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | update-manager
79 Guillemets typographiques fermants. =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | '' => suggestions : ['\xa0»', '”']
79 Guillemets typographiques ouvrants. =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | '' => suggestions : ['«\xa0', '“']
79 Mot inconnu : which =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | which
79 Mot inconnu : which =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | which
79 Guillemets typographiques ouvrants. =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | '' => suggestions : ['«\xa0', '“']
79 Mot inconnu : whereis =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | whereis
79 Mot inconnu : whereis =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | whereis
79 Guillemets typographiques fermants. =>     * Les commandes doivent être entrées de manière exacte. Pour cette raison, préférez saisir des chemins absolus vers des commandes plutôt que des chemins relatifs (par exemple, ''/usr/sbin/update-manager'' plutôt que ''update-manager''). Pour connaître le chemin absolu d'une commande ou d'un utilitaire, saisissez dans un terminal ''which //commande//'' (([[man>which]])), ou ''whereis //commande//'' (([[man>whereis]])) en remplaçant //''commande''// par la commande en question. | '' => suggestions : ['\xa0»', '”']

82 Mot inconnu : ALL => <file>identifiant	ALL = (ALL) /chemin/complet/commande, NOPASSWD: /chemin/complet/autrecommande | all
82 Mot inconnu : ALL => <file>identifiant	ALL = (ALL) /chemin/complet/commande, NOPASSWD: /chemin/complet/autrecommande | all
82 Mot inconnu : NOPASSWD => <file>identifiant	ALL = (ALL) /chemin/complet/commande, NOPASSWD: /chemin/complet/autrecommande | nopasswd
82 Mot inconnu : autrecommande => <file>identifiant	ALL = (ALL) /chemin/complet/commande, NOPASSWD: /chemin/complet/autrecommande | autrecommande

83 Il manque un espace. => %groupe	ALL = (ALL) NOPASSWD: /chemin/complet/commande,/chemin/complet/autrecommande</file> | groupe => suggestions : [' groupe']
83 Mot inconnu : ALL => %groupe	ALL = (ALL) NOPASSWD: /chemin/complet/commande,/chemin/complet/autrecommande</file> | all
83 Mot inconnu : ALL => %groupe	ALL = (ALL) NOPASSWD: /chemin/complet/commande,/chemin/complet/autrecommande</file> | all
83 Mot inconnu : NOPASSWD => %groupe	ALL = (ALL) NOPASSWD: /chemin/complet/commande,/chemin/complet/autrecommande</file> | nopasswd
83 Mot inconnu : autrecommande => %groupe	ALL = (ALL) NOPASSWD: /chemin/complet/commande,/chemin/complet/autrecommande</file> | autrecommande

84 Guillemets typographiques ouvrants. => Toutes les commandes situées à la droite du mot-clé ''NOPASSWD:'' peuvent être exécutées par l'utilisateur ou le groupe d'utilisateurs précisé en début d'instruction. Celles restées à sa gauche sont toujours soumises à l'authentification par mot de passe. | '' => suggestions : ['«\xa0', '“']
84 Mot inconnu : NOPASSWD => Toutes les commandes situées à la droite du mot-clé ''NOPASSWD:'' peuvent être exécutées par l'utilisateur ou le groupe d'utilisateurs précisé en début d'instruction. Celles restées à sa gauche sont toujours soumises à l'authentification par mot de passe. | nopasswd

86 Guillemets typographiques ouvrants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['«\xa0', '“']
86 Guillemets typographiques fermants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['\xa0»', '”']
86 Guillemets typographiques ouvrants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['«\xa0', '“']
86 Mot inconnu : autrecommande => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | autrecommande
86 Guillemets typographiques fermants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['\xa0»', '”']
86 Confusion probable. Quand = à quel moment. Quant à = à propos de. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | quand => suggestions : ['Quant']
86 Guillemets typographiques ouvrants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['«\xa0', '“']
86 Guillemets typographiques fermants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['\xa0»', '”']
86 Guillemets typographiques ouvrants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['«\xa0', '“']
86 Mot inconnu : autrecommande => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | autrecommande
86 Guillemets typographiques fermants. => Dans cet exemple, //identifiant// doit fournir son mot de passe pour exécuter ''commande'', mais n'a pas à le saisir pour exécuter ''autrecommande''. Quand aux membres du groupe //groupe//, ils n'ont pas à saisir leur mot de passe pour exécuter ''commande'' ou ''autrecommande''. | '' => suggestions : ['\xa0»', '”']
88 Guillemets typographiques ouvrants. => Attention : il ne faut pas mettre juste la commande, mais tout le chemin vers le fichier. Par exemple il ne faut pas mettre "ls" mais "/bin/ls". | " => suggestions : ['«\xa0', '“']
88 Mot inconnu : ls => Attention : il ne faut pas mettre juste la commande, mais tout le chemin vers le fichier. Par exemple il ne faut pas mettre "ls" mais "/bin/ls". | ls
88 Guillemets typographiques fermants. => Attention : il ne faut pas mettre juste la commande, mais tout le chemin vers le fichier. Par exemple il ne faut pas mettre "ls" mais "/bin/ls". | " => suggestions : ['\xa0»', '”']

93 Mot inconnu : newgrp => Pensez à utiliser newgrp pour basculer votre groupe actif avant de faire appel à la commande autorisée par le sudo.\\ | newgrp
93 Mot inconnu : sudo => Pensez à utiliser newgrp pour basculer votre groupe actif avant de faire appel à la commande autorisée par le sudo.\\ | sudo

95 Mot inconnu : codeclavier => Après avoir créé le groupe codeclavier, pensez à utiliser un numéro spécial pour éviter les conflits avec les groupes utilisateurs, vous ajoutez cette ligne dans le fichier /etc/sudoers. | codeclavier

111 Guillemets typographiques ouvrants. => ====Exécuter un programme en tant qu'un autre 'user'==== | ' => suggestions : ['“', '‘', '‹']

112 Mot inconnu : sudo => La commande sudo permet d'exécuter un programme en tant qu'un autre utilisateur. | sudo

114 Mot inconnu : foo => <file>foo      ALL=(bar) NOPASSWD: /chemin/complet/program</file> | foo
114 Espace(s) surnuméraire(s) à supprimer. => <file>foo      ALL=(bar) NOPASSWD: /chemin/complet/program</file> |        => suggestions : [' ']
114 Mot inconnu : ALL => <file>foo      ALL=(bar) NOPASSWD: /chemin/complet/program</file> | all
114 Mot inconnu : NOPASSWD => <file>foo      ALL=(bar) NOPASSWD: /chemin/complet/program</file> | nopasswd
114 Mot inconnu : program => <file>foo      ALL=(bar) NOPASSWD: /chemin/complet/program</file> | program

115 Mot inconnu : foo => permet à foo d'utiliser program en tant que bar sans qu'on ne lui demande son mot de passe. | foo
115 Mot inconnu : program => permet à foo d'utiliser program en tant que bar sans qu'on ne lui demande son mot de passe. | program
117 Mot inconnu : sudo => //**Note**// : Après il faut quand même utiliser **sudo** pour le lancement de **program**. Comme ceci : | sudo
117 Mot inconnu : program => //**Note**// : Après il faut quand même utiliser **sudo** pour le lancement de **program**. Comme ceci : | program

118 Mot inconnu : sudo => <file>sudo program</file> | sudo
118 Mot inconnu : program => <file>sudo program</file> | program

125 Guillemets typographiques ouvrants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['«\xa0', '“']
125 Mot inconnu : timestamp_timeout => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | timestamp_timeout
125 Guillemets typographiques fermants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['\xa0»', '”']
125 Guillemets typographiques ouvrants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['«\xa0', '“']
125 Mot inconnu : Defaults => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | defaults
125 Guillemets typographiques fermants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['\xa0»', '”']
125 Guillemets typographiques ouvrants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['«\xa0', '“']
125 Guillemets typographiques fermants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['\xa0»', '”']
125 Guillemets typographiques ouvrants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['«\xa0', '“']
125 Guillemets typographiques fermants. => Ajoutez l'option ''timestamp_timeout=X'' à la fin de la ligne débutant par ''Defaults''. La valeur ''X'' doit être remplacée par la durée, en minutes, durant laquelle le mot de passe n'a pas à être fourni pour effectuer des actions d'administration dans le terminal ou pseudo-terminal courant. La valeur ''0'' désactive ce temps de grâce : un mot de passe doit être fourni à chaque action d'administration. | '' => suggestions : ['\xa0»', '”']

126 Mot inconnu : Defaults => <file>Defaults	env_reset</file> | defaults
126 Mot inconnu : env_reset => <file>Defaults	env_reset</file> | env_reset

127 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => devient | devient => suggestions : ['deviens']

128 Mot inconnu : Defaults => <file>Defaults	env_reset,timestamp_timeout=X</file> | defaults
128 Mot inconnu : env_reset => <file>Defaults	env_reset,timestamp_timeout=X</file> | env_reset
128 Il manque un espace. => <file>Defaults	env_reset,timestamp_timeout=X</file> | timestamp_timeout => suggestions : [' timestamp_timeout']
128 Mot inconnu : timestamp_timeout => <file>Defaults	env_reset,timestamp_timeout=X</file> | timestamp_timeout

135 Guillemets typographiques ouvrants. => Ajoutez l'option ''pwfeedback'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['«\xa0', '“']
135 Mot inconnu : pwfeedback => Ajoutez l'option ''pwfeedback'' à la fin de la ligne débutant par ''Defaults''. | pwfeedback
135 Guillemets typographiques fermants. => Ajoutez l'option ''pwfeedback'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['\xa0»', '”']
135 Guillemets typographiques ouvrants. => Ajoutez l'option ''pwfeedback'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['«\xa0', '“']
135 Mot inconnu : Defaults => Ajoutez l'option ''pwfeedback'' à la fin de la ligne débutant par ''Defaults''. | defaults
135 Guillemets typographiques fermants. => Ajoutez l'option ''pwfeedback'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['\xa0»', '”']

136 Mot inconnu : Defaults => <file>Defaults	env_reset</file> | defaults
136 Mot inconnu : env_reset => <file>Defaults	env_reset</file> | env_reset

137 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => devient | devient => suggestions : ['deviens']

138 Mot inconnu : Defaults => <file>Defaults	env_reset,pwfeedback</file> | defaults
138 Mot inconnu : env_reset => <file>Defaults	env_reset,pwfeedback</file> | env_reset
138 Il manque un espace. => <file>Defaults	env_reset,pwfeedback</file> | pwfeedback => suggestions : [' pwfeedback']
138 Mot inconnu : pwfeedback => <file>Defaults	env_reset,pwfeedback</file> | pwfeedback

143 Mot inconnu : badpass_message => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". | badpass_message
143 Guillemets typographiques ouvrants. => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". | " => suggestions : ['«\xa0', '“']
143 Guillemets typographiques fermants. => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". | " => suggestions : ['\xa0»', '”']
143 Guillemets typographiques ouvrants. => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". | " => suggestions : ['«\xa0', '“']
143 Mot inconnu : Defaults => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". | defaults
143 Guillemets typographiques fermants. => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". | " => suggestions : ['\xa0»', '”']

144 Mot inconnu : Defaults => <file>Defaults	env_reset</file> | defaults
144 Mot inconnu : env_reset => <file>Defaults	env_reset</file> | env_reset

145 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => devient | devient => suggestions : ['deviens']

146 Mot inconnu : Defaults => <file>Defaults	env_reset,badpass_message="texte à afficher"</file> | defaults
146 Mot inconnu : env_reset => <file>Defaults	env_reset,badpass_message="texte à afficher"</file> | env_reset
146 Il manque un espace. => <file>Defaults	env_reset,badpass_message="texte à afficher"</file> | badpass_message => suggestions : [' badpass_message']
146 Mot inconnu : badpass_message => <file>Defaults	env_reset,badpass_message="texte à afficher"</file> | badpass_message
146 Guillemets typographiques ouvrants. => <file>Defaults	env_reset,badpass_message="texte à afficher"</file> | " => suggestions : ['«\xa0', '“']
146 Guillemets typographiques fermants. => <file>Defaults	env_reset,badpass_message="texte à afficher"</file> | " => suggestions : ['\xa0»', '”']

149 Guillemets typographiques ouvrants. => Ajoutez l'option ''insults'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['«\xa0', '“']
149 Mot inconnu : insults => Ajoutez l'option ''insults'' à la fin de la ligne débutant par ''Defaults''. | insults
149 Guillemets typographiques fermants. => Ajoutez l'option ''insults'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['\xa0»', '”']
149 Guillemets typographiques ouvrants. => Ajoutez l'option ''insults'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['«\xa0', '“']
149 Mot inconnu : Defaults => Ajoutez l'option ''insults'' à la fin de la ligne débutant par ''Defaults''. | defaults
149 Guillemets typographiques fermants. => Ajoutez l'option ''insults'' à la fin de la ligne débutant par ''Defaults''. | '' => suggestions : ['\xa0»', '”']

150 Mot inconnu : Defaults => <file>Defaults	env_reset</file> | defaults
150 Mot inconnu : env_reset => <file>Defaults	env_reset</file> | env_reset

151 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => devient | devient => suggestions : ['deviens']

152 Mot inconnu : Defaults => <file>Defaults	env_reset,insults</file> | defaults
152 Mot inconnu : env_reset => <file>Defaults	env_reset,insults</file> | env_reset
152 Il manque un espace. => <file>Defaults	env_reset,insults</file> | insults => suggestions : [' insults']
152 Mot inconnu : insults => <file>Defaults	env_reset,insults</file> | insults

158 Mot inconnu : sudo => Si, en tentant d’exécuter une commande sudo, vous obtenez une erreur comme ci-dessous, c'est que votre fichier sudoers est corrompu. | sudo
158 Mot inconnu : sudoers => Si, en tentant d’exécuter une commande sudo, vous obtenez une erreur comme ci-dessous, c'est que votre fichier sudoers est corrompu. | sudoers

159 Mot inconnu : sudo => Comme il est corrompu, vous ne pouvez plus exécuter sudo, et donc plus modifier le fichier ... cercle vicieux | sudo
159 Typographie : points de suspension. Utilisez le caractère dédié. => Comme il est corrompu, vous ne pouvez plus exécuter sudo, et donc plus modifier le fichier ... cercle vicieux | ... => suggestions : ['…']

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   toto@fixe:~$ sudo |    => suggestions : ['']
161 Mot inconnu : sudo =>   toto@fixe:~$ sudo | sudo

162 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   >>> sudoers file: syntax error, line 0 <<< |    => suggestions : ['']
162 Mot inconnu : sudoers =>   >>> sudoers file: syntax error, line 0 <<< | sudoers
162 Mot inconnu : syntax =>   >>> sudoers file: syntax error, line 0 <<< | syntax
162 Mot inconnu : error =>   >>> sudoers file: syntax error, line 0 <<< | error
162 Mot inconnu : line =>   >>> sudoers file: syntax error, line 0 <<< | line

165 Mot inconnu : pkexec => <file>pkexec visudo</file> | pkexec
165 Mot inconnu : visudo => <file>pkexec visudo</file> | visudo

168 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

169 Mot inconnu : recovery => ==== Redémarrer en mode recovery ==== | recovery

172 Guillemets typographiques ouvrants. => ==== Choisir l'option "root" ==== | " => suggestions : ['«\xa0', '“']
172 Mot inconnu : root => ==== Choisir l'option "root" ==== | root
172 Guillemets typographiques fermants. => ==== Choisir l'option "root" ==== | " => suggestions : ['\xa0»', '”']

176 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mount -o remount,rw / |    => suggestions : ['']
176 Mot inconnu : mount =>   mount -o remount,rw / | mount
176 Il manque un espace à côté du tiret. =>   mount -o remount,rw / |  - => suggestions : [' – ', ' — ']
176 Mot inconnu : remount =>   mount -o remount,rw / | remount
176 Il manque un espace. =>   mount -o remount,rw / | rw => suggestions : [' rw']
176 Mot inconnu : rw =>   mount -o remount,rw / | rw

177 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

178 Mot inconnu : Editer => ==== Editer / corriger le fichier 'sudoers'  ==== | editer
178 Guillemets typographiques ouvrants. => ==== Editer / corriger le fichier 'sudoers'  ==== | ' => suggestions : ['“', '‘', '‹']
178 Mot inconnu : sudoers => ==== Editer / corriger le fichier 'sudoers'  ==== | sudoers
178 Guillemets typographiques fermants. => ==== Editer / corriger le fichier 'sudoers'  ==== | ' => suggestions : ['”', '’', '›']

181 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       cp /etc/sudoers /etc/sudoers.backup |        => suggestions : ['']
181 Mot inconnu : cp =>       cp /etc/sudoers /etc/sudoers.backup | cp

182 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       nano /etc/sudoers |        => suggestions : ['']
182 Mot inconnu : nano =>       nano /etc/sudoers | nano

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        |        => suggestions : ['']

186 Typographie : points de suspension. Utilisez le caractère dédié. => ===== Aller plus loin... ===== | ... => suggestions : ['…']

187 Mot inconnu : sudoers => Consultez la page de manuel officiel du fichier ///etc/**sudoers**// : | sudoers

188 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * En ligne : [[http://www.sudo.ws/sudo/sudoers.man.html|Sudoers Manual]] ; |    => suggestions : ['']
188 Mot inconnu : Sudoers =>   * En ligne : [[http://www.sudo.ws/sudo/sudoers.man.html|Sudoers Manual]] ; | sudoers
188 Mot inconnu : Manual =>   * En ligne : [[http://www.sudo.ws/sudo/sudoers.man.html|Sudoers Manual]] ; | manual

189 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. |    => suggestions : ['']
189 Guillemets typographiques ouvrants. =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. | '' => suggestions : ['«\xa0', '“']
189 Mot inconnu : sudoers =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. | sudoers
189 Guillemets typographiques fermants. =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. | '' => suggestions : ['\xa0»', '”']
189 Guillemets typographiques ouvrants. =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. | '' => suggestions : ['«\xa0', '“']
189 Mot inconnu : sudo =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. | sudo
189 Guillemets typographiques fermants. =>   * Copie locale : ''man sudoers'' Ce document regorge d'options supplémentaires et d'exemples pour personnaliser grandement le comportement de ''sudo''. | '' => suggestions : ['\xa0»', '”']

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://guide.andesi.org/html/ksudo.html|Comment donner certains droits root à un utilisateur (Sudo)]] |    => suggestions : ['']
190 Mot inconnu : root =>   * **(fr)** [[http://guide.andesi.org/html/ksudo.html|Comment donner certains droits root à un utilisateur (Sudo)]] | root
190 Mot inconnu : Sudo =>   * **(fr)** [[http://guide.andesi.org/html/ksudo.html|Comment donner certains droits root à un utilisateur (Sudo)]] | sudo
