
4 Mot inconnu : sudo [[45:49]] => ====== Configuration avancée de l'utilitaire sudo ====== <|> sudo

18 Il manque les traits d’union. [[0:12]] => C'est à dire pour toutes les versions d'Ubuntu supportées. <|> c'est à dire => suggestions : C’est-à-dire

27 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[0:4]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|> vous => suggestions : Vous
27 Mot inconnu : monfichier [[159:169]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|> monfichier
27 Pas d’espace avant une virgule. [[171:173]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|>  , => suggestions : ,
27 Mot inconnu : sysctl [[179:185]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|> sysctl
27 Pas d’espace avant une virgule. [[187:189]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|>  , => suggestions : ,
27 Mot inconnu : userX [[195:200]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|> userx
27 Pas d’espace avant une virgule. [[202:204]] => vous pouvez définir autant de fichiers que de modifications (voir le §2). Le nom est libre et peut donc faire référence à l'élément personnalisé. Exemples : **monfichier** , **10-sysctl** , **20-userX** , **30-apt**. <|>  , => suggestions : ,

48 Mot inconnu : visudo [[78:84]] => À la fermeture du fichier // /etc/sudoers // ouvert par son outil d'édition **visudo**, la nouvelle configuration est automatiquement chargée. <|> visudo

49 Mot inconnu : visudo [[35:41]] => ==== Choisir l'éditeur utilisé par visudo ==== <|> visudo

50 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. [[4:5]] => === A chaque fois === <|> a => suggestions : À

66 Typographie : points de suspension. Utilisez le caractère dédié. [[56:59]] => À __**la fin du fichier**__, ajoutez une ligne d'instruction... <|> tio => suggestions : …

67 Mot inconnu : sudoers [[82:89]] => <note important>En cas de litige entre ligne, ce sera la dernière dans le fichier sudoers qui sera comptée ! <|> sudoers

68 Pas d’espace avant une virgule. [[14:16]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|>  , => suggestions : ,
68 Mot inconnu : jérome [[19:25]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> jérome
68 Mot inconnu : jérome [[85:91]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> jérome
68 Mot inconnu : executer [[99:107]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> executer
68 Mot inconnu : ls [[122:124]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> ls
68 Mot inconnu : executer [[195:203]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> executer
68 Mot inconnu : ls [[218:220]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> ls
68 Mot inconnu : jérome [[226:232]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> jérome
68 Mot inconnu : executer [[249:257]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> executer
68 Mot inconnu : ls [[272:274]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> ls
68 Mot inconnu : sudo [[296:300]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> sudo
68 Mot inconnu : execution [[349:358]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> execution
68 Mot inconnu : ls [[362:364]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> ls
68 Mot inconnu : sudo [[520:524]] => Si par exemple , //jérome// fait partie du groupe //paris// et que vous mettez que //jérome// peut executer la commande //ls//, puis que plus loin vous mettez que le groupe //paris// ne peut pas executer la commande //ls//, //jérome// ne pourra pas executer la commande //ls// (du moins pas avec sudo) car la dernière ligne qui le concerne refuse l'execution de ls ! D'où l'importance de __**bien situer la ligne que vous souhaitez inclure**__, notamment **par rapport aux lignes déjà pré-définies pour les groupes admin et sudo** !</note> <|> sudo

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  ...telle que la suivante : <|>  
69 Typographie : points de suspension. Utilisez le caractère dédié. [[1:4]] =>  ...telle que la suivante : <|> ... => suggestions : …
88 Guillemets typographiques ouvrants. [[124:125]] => Attention : il ne faut pas mettre juste la commande, mais tout le chemin vers le fichier. Par exemple il ne faut pas mettre "ls" mais "/bin/ls". <|> " => suggestions : « “
88 Mot inconnu : ls [[125:127]] => Attention : il ne faut pas mettre juste la commande, mais tout le chemin vers le fichier. Par exemple il ne faut pas mettre "ls" mais "/bin/ls". <|> ls
88 Guillemets typographiques fermants. [[127:128]] => Attention : il ne faut pas mettre juste la commande, mais tout le chemin vers le fichier. Par exemple il ne faut pas mettre "ls" mais "/bin/ls". <|> " => suggestions :  »”

93 Mot inconnu : newgrp [[18:24]] => Pensez à utiliser newgrp pour basculer votre groupe actif avant de faire appel à la commande autorisée par le sudo.\\ <|> newgrp
93 Mot inconnu : sudo [[110:114]] => Pensez à utiliser newgrp pour basculer votre groupe actif avant de faire appel à la commande autorisée par le sudo.\\ <|> sudo

95 Mot inconnu : codeclavier [[27:38]] => Après avoir créé le groupe codeclavier, pensez à utiliser un numéro spécial pour éviter les conflits avec les groupes utilisateurs, vous ajoutez cette ligne dans le fichier /etc/sudoers. <|> codeclavier

111 Guillemets typographiques ouvrants. [[46:47]] => ====Exécuter un programme en tant qu'un autre 'user'==== <|> ' => suggestions : ‘“‹

112 Mot inconnu : sudo [[12:16]] => La commande sudo permet d'exécuter un programme en tant qu'un autre utilisateur. <|> sudo

115 Mot inconnu : foo [[9:12]] => permet à foo d'utiliser program en tant que bar sans qu'on ne lui demande son mot de passe. <|> foo
115 Mot inconnu : program [[24:31]] => permet à foo d'utiliser program en tant que bar sans qu'on ne lui demande son mot de passe. <|> program
117 Mot inconnu : sudo [[51:55]] => //**Note**// : Après il faut quand même utiliser **sudo** pour le lancement de **program**. Comme ceci : <|> sudo
117 Mot inconnu : program [[81:88]] => //**Note**// : Après il faut quand même utiliser **sudo** pour le lancement de **program**. Comme ceci : <|> program

127 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[0:7]] => devient <|> devient => suggestions : deviens

137 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[0:7]] => devient <|> devient => suggestions : deviens

143 Mot inconnu : badpass_message [[17:32]] => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". <|> badpass_message
143 Guillemets typographiques ouvrants. [[33:34]] => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". <|> " => suggestions : « “
143 Guillemets typographiques fermants. [[50:51]] => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". <|> " => suggestions :  »”
143 Guillemets typographiques ouvrants. [[86:87]] => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". <|> " => suggestions : « “
143 Mot inconnu : Defaults [[87:95]] => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". <|> defaults
143 Guillemets typographiques fermants. [[95:96]] => Ajoutez l'option badpass_message="texte à afficher" à la fin de la ligne débutant par "Defaults". <|> " => suggestions :  »”

145 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[0:7]] => devient <|> devient => suggestions : deviens

151 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[0:7]] => devient <|> devient => suggestions : deviens

158 Mot inconnu : sudo [[39:43]] => Si, en tentant d’exécuter une commande sudo, vous obtenez une erreur comme ci-dessous, c'est que votre fichier sudoers est corrompu. <|> sudo
158 Mot inconnu : sudoers [[111:118]] => Si, en tentant d’exécuter une commande sudo, vous obtenez une erreur comme ci-dessous, c'est que votre fichier sudoers est corrompu. <|> sudoers

159 Mot inconnu : sudo [[52:56]] => Comme il est corrompu, vous ne pouvez plus exécuter sudo, et donc plus modifier le fichier ... cercle vicieux <|> sudo
159 Typographie : points de suspension. Utilisez le caractère dédié. [[91:94]] => Comme il est corrompu, vous ne pouvez plus exécuter sudo, et donc plus modifier le fichier ... cercle vicieux <|> ... => suggestions : …

169 Mot inconnu : recovery [[24:32]] => ==== Redémarrer en mode recovery ==== <|> recovery

172 Guillemets typographiques ouvrants. [[22:23]] => ==== Choisir l'option "root" ==== <|> " => suggestions : « “
172 Guillemets typographiques fermants. [[27:28]] => ==== Choisir l'option "root" ==== <|> " => suggestions :  »”

178 Mot inconnu : Editer [[5:11]] => ==== Editer / corriger le fichier 'sudoers'  ==== <|> editer
178 Guillemets typographiques ouvrants. [[34:35]] => ==== Editer / corriger le fichier 'sudoers'  ==== <|> ' => suggestions : ‘“‹
178 Mot inconnu : sudoers [[35:42]] => ==== Editer / corriger le fichier 'sudoers'  ==== <|> sudoers
178 Guillemets typographiques fermants. [[42:43]] => ==== Editer / corriger le fichier 'sudoers'  ==== <|> ' => suggestions : ’”›

186 Typographie : points de suspension. Utilisez le caractère dédié. [[21:24]] => ===== Aller plus loin... ===== <|> ... => suggestions : …

187 Mot inconnu : sudoers [[57:64]] => Consultez la page de manuel officiel du fichier ///etc/**sudoers**// : <|> sudoers
