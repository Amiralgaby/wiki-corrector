
7 Espace(s) surnuméraire(s) à supprimer. => Pour plus d'informations,  allez sur [[https://fr.wikipedia.org/wiki/Prolog|Wikipedia]]. |    => suggestions : [' ']
11 Mot inconnu : SWI-Prolog => <note important>Attention ! Des différences d'interprétation du code Prolog peuvent exister d'un interpréteur à l'autre. C'est le cas par exemple entre SWI-Prolog et Sicstus Prolog lors de l'utilisation de la programmation logique par contrainte.</note> | swi-prolog
11 Mot inconnu : Sicstus => <note important>Attention ! Des différences d'interprétation du code Prolog peuvent exister d'un interpréteur à l'autre. C'est le cas par exemple entre SWI-Prolog et Sicstus Prolog lors de l'utilisation de la programmation logique par contrainte.</note> | sicstus

18 Mot inconnu : SWI-Prolog => ===== SWI-Prolog ===== | swi-prolog
22 Mot inconnu : débuggeur => Capacités : il possède un débuggeur graphique ainsi que plusieurs solveurs de contraintes. | débuggeur

29 Mot inconnu : prolog => Utiliser maintenant la commande prolog pour lancer l'interpréteur. | prolog

33 Mot inconnu : Emacs => ==== Utilisation avec Emacs ==== | emacs

35 Mot inconnu : Emacs => Il est possible d'installer la coloration syntaxique et l'interpréteur dans [[Emacs]]. | emacs

38 Mot inconnu : emacs => Ensuite éditez votre fichier **~/.emacs** pour y ajouter les lignes suivantes : | emacs

40 Une de ces ponctuations est superflue. => ;; Ajout du mode Prolog | ;; => suggestions : [';', ';']

41 Mot inconnu : autoload => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | autoload
41 Guillemets typographiques ouvrants. => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | ' => suggestions : ['“', '‘', '‹']
41 Mot inconnu : run-prolog => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | run-prolog
41 Guillemets typographiques ouvrants. => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | " => suggestions : ['«\xa0', '“']
41 Mot inconnu : prolog => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | prolog
41 Guillemets typographiques fermants. => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | " => suggestions : ['\xa0»', '”']
41 Guillemets typographiques ouvrants. => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | " => suggestions : ['«\xa0', '“']
41 Mot inconnu : Start => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | start
41 Mot inconnu : sub-process => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | sub-process
41 Guillemets typographiques fermants. => (autoload 'run-prolog "prolog" "Start a Prolog sub-process." t) | " => suggestions : ['\xa0»', '”']

42 Mot inconnu : autoload => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | autoload
42 Guillemets typographiques ouvrants. => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | ' => suggestions : ['“', '‘', '‹']
42 Mot inconnu : prolog-mode => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | prolog-mode
42 Guillemets typographiques ouvrants. => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | " => suggestions : ['«\xa0', '“']
42 Mot inconnu : prolog => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | prolog
42 Guillemets typographiques fermants. => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | " => suggestions : ['\xa0»', '”']
42 Guillemets typographiques ouvrants. => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | " => suggestions : ['«\xa0', '“']
42 Mot inconnu : editing => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | editing
42 Mot inconnu : programs => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | programs
42 Guillemets typographiques fermants. => (autoload 'prolog-mode "prolog" "Major mode for editing Prolog programs." t) | " => suggestions : ['\xa0»', '”']

43 Mot inconnu : autoload => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | autoload
43 Guillemets typographiques ouvrants. => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | ' => suggestions : ['“', '‘', '‹']
43 Mot inconnu : mercury-mode => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | mercury-mode
43 Guillemets typographiques ouvrants. => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | " => suggestions : ['«\xa0', '“']
43 Mot inconnu : prolog => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | prolog
43 Guillemets typographiques fermants. => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | " => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | " => suggestions : ['«\xa0', '“']
43 Mot inconnu : editing => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | editing
43 Mot inconnu : Mercury => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | mercury
43 Mot inconnu : programs => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | programs
43 Guillemets typographiques fermants. => (autoload 'mercury-mode "prolog" "Major mode for editing Mercury programs." t) | " => suggestions : ['\xa0»', '”']

44 Mot inconnu : setq => (setq prolog-system 'swi) | setq
44 Mot inconnu : prolog-system => (setq prolog-system 'swi) | prolog-system
44 Guillemets typographiques ouvrants. => (setq prolog-system 'swi) | ' => suggestions : ['“', '‘', '‹']
44 Mot inconnu : swi => (setq prolog-system 'swi) | swi

45 Mot inconnu : setq => (setq auto-mode-alist (append '(("\\.pl$" . prolog-mode) | setq
45 Mot inconnu : auto-mode-alist => (setq auto-mode-alist (append '(("\\.pl$" . prolog-mode) | auto-mode-alist
45 Pas d’espace avant un point. => (setq auto-mode-alist (append '(("\\.pl$" . prolog-mode) |  . => suggestions : ['.']
45 Mot inconnu : prolog-mode => (setq auto-mode-alist (append '(("\\.pl$" . prolog-mode) | prolog-mode

50 Mot inconnu : Consult => Voilà, l'interpréteur est installé. Maintenant, pour l'utiliser, ouvrez un fichier avec l'extension **.pl**, et tapez votre programme Prolog dedans. Pour l'interpréter, allez dans le menu **Prolog** et cliquez sur **Consult file**. Une invite apparaît alors en dessous, dans laquelle vous pouvez interroger votre programme Prolog. | consult

56 Mot inconnu : SWI-Prolog => Un autre interpréteur similaire à SWI-Prolog. Celui-ci est développé par l'INRIA. [[http://www.gprolog.org/|Site officiel]] | swi-prolog

67 Mot inconnu : gprolog => Utiliser maintenant la commande gprolog pour lancer l'interpréteur : | gprolog

71 Mot inconnu : TkECLiPSe => ===== TkECLiPSe ===== | tkeclipse

73 Mot inconnu : TkECLIPSe => TkECLIPSe est un logiciel open-source pour le développement et le déploiement des applications de programmation par contraintes. | tkeclipse
82 Mot inconnu : x86_64_linux => Sélectionner le dossier adapté à votre architecture système : x86_64_linux. | x86_64_linux

111 Mot inconnu : ECLIPSEDIR => Pour cela, tapez la commande suivante en remplaçant $ECLIPSEDIR par le répertoire adéquat (exemple : /home/bob/eclipse_basic) | eclipsedir

118 Mot inconnu : tkeclipse => Pour lancer tkeclipse : | tkeclipse

127 Mot inconnu : Sisctus => ===== Sisctus Prolog ===== | sisctus

129 Mot inconnu : Sicstus => Sicstus Prolog. Cet interpréteur n'est pas libre, mais peut fonctionner sous Linux. [[http://www.sics.se/sicstus/|Site officiel]] | sicstus

131 Mot inconnu : FIXME => FIXME | fixme
