
3 Mot inconnu : Anacron => ====== Anacron ====== | anacron

4 Mot inconnu : Anacron => Anacron sert à lancer __automatiquement__ des tâches informatiques (sauvegardes ou autres) à des intervalles prédéfinis (tout comme [[cron|cron]]). | anacron
4 Mot inconnu : __automatiquement__ => Anacron sert à lancer __automatiquement__ des tâches informatiques (sauvegardes ou autres) à des intervalles prédéfinis (tout comme [[cron|cron]]). | __automatiquement__

6 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - [[Cron]] est utilisé pour des machines à fonctionnement permanent (plutôt des serveurs).  |    => suggestions : ['']
6 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - [[Cron]] est utilisé pour des machines à fonctionnement permanent (plutôt des serveurs).  |  -  => suggestions : [' – ', ' — ', ' − ']
6 Mot inconnu : Cron =>   - [[Cron]] est utilisé pour des machines à fonctionnement permanent (plutôt des serveurs).  | cron
6 Espace(s) en fin de ligne à supprimer. =>   - [[Cron]] est utilisé pour des machines à fonctionnement permanent (plutôt des serveurs).  |   => suggestions : ['']

7 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - **Anacron** est utilisé pour des machines à fonctionnement discontinu (plutôt des PC). |    => suggestions : ['']
7 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - **Anacron** est utilisé pour des machines à fonctionnement discontinu (plutôt des PC). |  -  => suggestions : [' – ', ' — ', ' − ']
7 Mot inconnu : Anacron =>   - **Anacron** est utilisé pour des machines à fonctionnement discontinu (plutôt des PC). | anacron
9 Avec une unité de mesure, mettez un espace insécable. => En effet, [[cron|cron]] lance une tâche à un moment pré-déterminé (« le 14 janvier 2018 à 15h 30 »). Si la machine n'est pas allumée, la tâche n'est pas lancée, et ne le sera jamais, même après le re-démarrage. Elle est __perdue__. | 15h => suggestions : ['15\xa0h']
9 Mot inconnu : __perdue__ => En effet, [[cron|cron]] lance une tâche à un moment pré-déterminé (« le 14 janvier 2018 à 15h 30 »). Si la machine n'est pas allumée, la tâche n'est pas lancée, et ne le sera jamais, même après le re-démarrage. Elle est __perdue__. | __perdue__

11 Mot inconnu : Anacron => **Anacron** utilise au contraire des indications de temps relatives (« une fois par jour / par semaine / par mois »). Si vous avez demandé une tâche toute les semaines, et que votre PC est démarré seulement au bout de 10 jours, **anacron** constatera le retard, et lancera donc la tâche juste après le démarrage de votre PC. | anacron
11 Erreur d’accord probable avec “les”. => **Anacron** utilise au contraire des indications de temps relatives (« une fois par jour / par semaine / par mois »). Si vous avez demandé une tâche toute les semaines, et que votre PC est démarré seulement au bout de 10 jours, **anacron** constatera le retard, et lancera donc la tâche juste après le démarrage de votre PC. | toute => suggestions : ['toutes']
11 Avec une unité de mesure, mettez un espace insécable. => **Anacron** utilise au contraire des indications de temps relatives (« une fois par jour / par semaine / par mois »). Si vous avez demandé une tâche toute les semaines, et que votre PC est démarré seulement au bout de 10 jours, **anacron** constatera le retard, et lancera donc la tâche juste après le démarrage de votre PC. | 10 jours => suggestions : ['10\xa0jours']
11 Mot inconnu : anacron => **Anacron** utilise au contraire des indications de temps relatives (« une fois par jour / par semaine / par mois »). Si vous avez demandé une tâche toute les semaines, et que votre PC est démarré seulement au bout de 10 jours, **anacron** constatera le retard, et lancera donc la tâche juste après le démarrage de votre PC. | anacron

13 Mot inconnu : Anacron => **Anacron** démarre automatiquement à chaque lancement d'Ubuntu (vous n'avez rien à définir à ce niveau), vérifie si une ou des tâches sont à lancer, les démarre, puis se désactive jusqu'au prochain démarrage de votre système OU jusqu'à 7h30 le matin suivant (c'est d'ailleurs cron qui redémarre **anacron** à 7h30 - c'est du moins le paramétrage sur Ubuntu). Bien que **anacron** soit plutôt prévu pour les PC, on peut donc l'utiliser sur des serveurs Ubuntu. L'inverse (cron sur PC) est moins évident. | anacron
13 Mot inconnu : cron => **Anacron** démarre automatiquement à chaque lancement d'Ubuntu (vous n'avez rien à définir à ce niveau), vérifie si une ou des tâches sont à lancer, les démarre, puis se désactive jusqu'au prochain démarrage de votre système OU jusqu'à 7h30 le matin suivant (c'est d'ailleurs cron qui redémarre **anacron** à 7h30 - c'est du moins le paramétrage sur Ubuntu). Bien que **anacron** soit plutôt prévu pour les PC, on peut donc l'utiliser sur des serveurs Ubuntu. L'inverse (cron sur PC) est moins évident. | cron
13 Mot inconnu : anacron => **Anacron** démarre automatiquement à chaque lancement d'Ubuntu (vous n'avez rien à définir à ce niveau), vérifie si une ou des tâches sont à lancer, les démarre, puis se désactive jusqu'au prochain démarrage de votre système OU jusqu'à 7h30 le matin suivant (c'est d'ailleurs cron qui redémarre **anacron** à 7h30 - c'est du moins le paramétrage sur Ubuntu). Bien que **anacron** soit plutôt prévu pour les PC, on peut donc l'utiliser sur des serveurs Ubuntu. L'inverse (cron sur PC) est moins évident. | anacron
13 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => **Anacron** démarre automatiquement à chaque lancement d'Ubuntu (vous n'avez rien à définir à ce niveau), vérifie si une ou des tâches sont à lancer, les démarre, puis se désactive jusqu'au prochain démarrage de votre système OU jusqu'à 7h30 le matin suivant (c'est d'ailleurs cron qui redémarre **anacron** à 7h30 - c'est du moins le paramétrage sur Ubuntu). Bien que **anacron** soit plutôt prévu pour les PC, on peut donc l'utiliser sur des serveurs Ubuntu. L'inverse (cron sur PC) est moins évident. |  -  => suggestions : [' – ', ' — ', ' − ']
13 Mot inconnu : anacron => **Anacron** démarre automatiquement à chaque lancement d'Ubuntu (vous n'avez rien à définir à ce niveau), vérifie si une ou des tâches sont à lancer, les démarre, puis se désactive jusqu'au prochain démarrage de votre système OU jusqu'à 7h30 le matin suivant (c'est d'ailleurs cron qui redémarre **anacron** à 7h30 - c'est du moins le paramétrage sur Ubuntu). Bien que **anacron** soit plutôt prévu pour les PC, on peut donc l'utiliser sur des serveurs Ubuntu. L'inverse (cron sur PC) est moins évident. | anacron
13 Mot inconnu : cron => **Anacron** démarre automatiquement à chaque lancement d'Ubuntu (vous n'avez rien à définir à ce niveau), vérifie si une ou des tâches sont à lancer, les démarre, puis se désactive jusqu'au prochain démarrage de votre système OU jusqu'à 7h30 le matin suivant (c'est d'ailleurs cron qui redémarre **anacron** à 7h30 - c'est du moins le paramétrage sur Ubuntu). Bien que **anacron** soit plutôt prévu pour les PC, on peut donc l'utiliser sur des serveurs Ubuntu. L'inverse (cron sur PC) est moins évident. | cron

15 Mot inconnu : anacron => Le créateur d'**anacron** s'appelle Christian Schwarz. Le logiciel a depuis été totalement réécrit en [[https://fr.wikipedia.org/wiki/C_(langage)|langage C]] par Itai Tzur. | anacron
15 Il manque un espace avant la parenthèse. => Le créateur d'**anacron** s'appelle Christian Schwarz. Le logiciel a depuis été totalement réécrit en [[https://fr.wikipedia.org/wiki/C_(langage)|langage C]] par Itai Tzur. | ( => suggestions : [' (']
15 Mot inconnu : Itai => Le créateur d'**anacron** s'appelle Christian Schwarz. Le logiciel a depuis été totalement réécrit en [[https://fr.wikipedia.org/wiki/C_(langage)|langage C]] par Itai Tzur. | itai
15 Mot inconnu : Tzur => Le créateur d'**anacron** s'appelle Christian Schwarz. Le logiciel a depuis été totalement réécrit en [[https://fr.wikipedia.org/wiki/C_(langage)|langage C]] par Itai Tzur. | tzur

28 Espace(s) en fin de ligne à supprimer. => Ajouter à la fin du fichier votre automatisation, au format  |   => suggestions : ['']

29 Espace(s) surnuméraire(s) à supprimer. => <file>intervalle   délai   étiquette   commande</file> |     => suggestions : [' ']
29 Espace(s) surnuméraire(s) à supprimer. => <file>intervalle   délai   étiquette   commande</file> |     => suggestions : [' ']
29 Espace(s) surnuméraire(s) à supprimer. => <file>intervalle   délai   étiquette   commande</file> |     => suggestions : [' ']

34 Mot inconnu : __jamais__ => où **étiquette** = nom de la tâche (choisi par vous). Attention, __jamais__ d'espace vide ou de slash. | __jamais__
36 Typographie : points de suspension. Utilisez le caractère dédié. => où **commande** = une commande [[bash|bash]], le nom d'un programme, d'un script .... les espaces vides sont autorisés. | .... => suggestions : ['…']

38 Mot inconnu : __Exemple__ => __Exemple__ : | __exemple__

39 Mot inconnu : rsync => <file>   1	15	sauvegarde		rsync -avz /home/vous/Documents/ root@192.168.0.101:/home/</file> | rsync
39 Il manque un espace à côté du tiret. => <file>   1	15	sauvegarde		rsync -avz /home/vous/Documents/ root@192.168.0.101:/home/</file> |  - => suggestions : [' – ', ' — ']
39 Mot inconnu : avz => <file>   1	15	sauvegarde		rsync -avz /home/vous/Documents/ root@192.168.0.101:/home/</file> | avz

40 Mot inconnu : rsync => => La sauvegarde [[rsync]] est lancée tous les **1** jour (si le PC est allumé), **15** minutes après le démarrage du PC, pour sauvegarder le répertoire /Documents dans un répertoire se trouvant sur un serveur distant. | rsync

42 Mot inconnu : __utilisateur => **Attention, c'est l'__utilisateur root__ qui lance anacron. Il ne connait pas le répertoire par défaut de l'utilisateur courant, il faut donc (si besoin) le lui indiquer en clair (par exemple **/home/vous/Documents**, et pas **~/Documents**). \\ | __utilisateur
42 Mot inconnu : root__ => **Attention, c'est l'__utilisateur root__ qui lance anacron. Il ne connait pas le répertoire par défaut de l'utilisateur courant, il faut donc (si besoin) le lui indiquer en clair (par exemple **/home/vous/Documents**, et pas **~/Documents**). \\ | root__
42 Mot inconnu : anacron => **Attention, c'est l'__utilisateur root__ qui lance anacron. Il ne connait pas le répertoire par défaut de l'utilisateur courant, il faut donc (si besoin) le lui indiquer en clair (par exemple **/home/vous/Documents**, et pas **~/Documents**). \\ | anacron

43 Mot inconnu : __root => De plus, l'utilisateur __root n'ayant pas d'écran affecté__, on ne peut donc pas lancer et afficher par ce biais une application graphique, sauf a créer un anacrontab associé a l'utilisateur courant, et non a root (cf. plus bas).** | __root
43 Mot inconnu : affecté__ => De plus, l'utilisateur __root n'ayant pas d'écran affecté__, on ne peut donc pas lancer et afficher par ce biais une application graphique, sauf a créer un anacrontab associé a l'utilisateur courant, et non a root (cf. plus bas).** | affecté__
43 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => De plus, l'utilisateur __root n'ayant pas d'écran affecté__, on ne peut donc pas lancer et afficher par ce biais une application graphique, sauf a créer un anacrontab associé a l'utilisateur courant, et non a root (cf. plus bas).** | a => suggestions : ['à']
43 Incohérence probable avec “a” : “créer” n’est pas un participe passé. => De plus, l'utilisateur __root n'ayant pas d'écran affecté__, on ne peut donc pas lancer et afficher par ce biais une application graphique, sauf a créer un anacrontab associé a l'utilisateur courant, et non a root (cf. plus bas).** | créer => suggestions : ['créé']
43 Mot inconnu : anacrontab => De plus, l'utilisateur __root n'ayant pas d'écran affecté__, on ne peut donc pas lancer et afficher par ce biais une application graphique, sauf a créer un anacrontab associé a l'utilisateur courant, et non a root (cf. plus bas).** | anacrontab
43 Mot inconnu : root => De plus, l'utilisateur __root n'ayant pas d'écran affecté__, on ne peut donc pas lancer et afficher par ce biais une application graphique, sauf a créer un anacrontab associé a l'utilisateur courant, et non a root (cf. plus bas).** | root

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * sur un système fonctionnant en permanence, c'est [[cron]] qui lance anacron à 7h30 chaque jour (voir le fichier /etc/cron.d/anacron) |    => suggestions : ['']
47 Mot inconnu : cron =>   * sur un système fonctionnant en permanence, c'est [[cron]] qui lance anacron à 7h30 chaque jour (voir le fichier /etc/cron.d/anacron) | cron
47 Mot inconnu : anacron =>   * sur un système fonctionnant en permanence, c'est [[cron]] qui lance anacron à 7h30 chaque jour (voir le fichier /etc/cron.d/anacron) | anacron

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * sur un système ne tournant pas en permanence, anacron est lancé au démarrage car configuré en tant que service. |    => suggestions : ['']
48 Mot inconnu : anacron =>   * sur un système ne tournant pas en permanence, anacron est lancé au démarrage car configuré en tant que service. | anacron

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * anacron recherche les « fichiers dateurs » (anglais timestamps) correspondant à ses différents lancements (jobs) dans /var/spool/anacron. C'est dans ces fichiers que anacron sauvegarde les dates et heure de ses dernières automatisations. |    => suggestions : ['']
49 Mot inconnu : anacron =>   * anacron recherche les « fichiers dateurs » (anglais timestamps) correspondant à ses différents lancements (jobs) dans /var/spool/anacron. C'est dans ces fichiers que anacron sauvegarde les dates et heure de ses dernières automatisations. | anacron
49 Mot inconnu : timestamps =>   * anacron recherche les « fichiers dateurs » (anglais timestamps) correspondant à ses différents lancements (jobs) dans /var/spool/anacron. C'est dans ces fichiers que anacron sauvegarde les dates et heure de ses dernières automatisations. | timestamps
49 Mot inconnu : anacron =>   * anacron recherche les « fichiers dateurs » (anglais timestamps) correspondant à ses différents lancements (jobs) dans /var/spool/anacron. C'est dans ces fichiers que anacron sauvegarde les dates et heure de ses dernières automatisations. | anacron

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      - si, d'après un des fichiers dateurs, un job est en attente, anacron le lance |       => suggestions : ['']
50 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>      - si, d'après un des fichiers dateurs, un job est en attente, anacron le lance |  -  => suggestions : [' – ', ' — ', ' − ']
50 Mot inconnu : anacron =>      - si, d'après un des fichiers dateurs, un job est en attente, anacron le lance | anacron

51 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      - puis anacron met à jour le fichier dateur du job en question. Il se basera dessus pour connaître la date du prochain lancement. |       => suggestions : ['']
51 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>      - puis anacron met à jour le fichier dateur du job en question. Il se basera dessus pour connaître la date du prochain lancement. |  -  => suggestions : [' – ', ' — ', ' − ']
51 Mot inconnu : anacron =>      - puis anacron met à jour le fichier dateur du job en question. Il se basera dessus pour connaître la date du prochain lancement. | anacron

53 Mot inconnu : anacron => Le fonctionnement d'anacron est contrôlé par le fichier **/etc/anacrontab**. | anacron

57 S’il s’agit d’un impératif, mettez un trait d’union. => Modifiez le par un : | modifiez le => suggestions : ['Modifiez-le']

60 Espace(s) surnuméraire(s) à supprimer. => <file>intervalle   délai   étiquette   commande</file> |     => suggestions : [' ']
60 Espace(s) surnuméraire(s) à supprimer. => <file>intervalle   délai   étiquette   commande</file> |     => suggestions : [' ']
60 Espace(s) surnuméraire(s) à supprimer. => <file>intervalle   délai   étiquette   commande</file> |     => suggestions : [' ']

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * 1ère colonne, intervalle : c'est le nombre de __jours__ entre 2 exécutions d'une même tâche. Vous pouvez remplacer le nombre de jours par **@monthly**, ce qui lancera la tâche au début de chaque mois. Peu importe alors le nombre de jours du mois (28, 29, 30 ou 31). La macro **@yearly** est également acceptée (lancement annuel). Enfin, un intervalle = "**0**" (sans guillemets) demande un lancement à chaque démarrage du système (donc potentiellement plusieurs fois par jour). |    => suggestions : ['']
62 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. =>   * 1ère colonne, intervalle : c'est le nombre de __jours__ entre 2 exécutions d'une même tâche. Vous pouvez remplacer le nombre de jours par **@monthly**, ce qui lancera la tâche au début de chaque mois. Peu importe alors le nombre de jours du mois (28, 29, 30 ou 31). La macro **@yearly** est également acceptée (lancement annuel). Enfin, un intervalle = "**0**" (sans guillemets) demande un lancement à chaque démarrage du système (donc potentiellement plusieurs fois par jour). | 1ère => suggestions : ['1ʳᵉ']
62 Mot inconnu : __jours__ =>   * 1ère colonne, intervalle : c'est le nombre de __jours__ entre 2 exécutions d'une même tâche. Vous pouvez remplacer le nombre de jours par **@monthly**, ce qui lancera la tâche au début de chaque mois. Peu importe alors le nombre de jours du mois (28, 29, 30 ou 31). La macro **@yearly** est également acceptée (lancement annuel). Enfin, un intervalle = "**0**" (sans guillemets) demande un lancement à chaque démarrage du système (donc potentiellement plusieurs fois par jour). | __jours__

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * 2ème colonne, délai : c'est le nombre de __minutes__ entre le lancement d'**anacron** et l’exécution de la tâche. Cela permet d'éviter que toutes les tâches s'exécutent en même temps que le démarrage du système, en le ralentissant. |    => suggestions : ['']
63 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… =>   * 2ème colonne, délai : c'est le nombre de __minutes__ entre le lancement d'**anacron** et l’exécution de la tâche. Cela permet d'éviter que toutes les tâches s'exécutent en même temps que le démarrage du système, en le ralentissant. | 2ème => suggestions : ['2ᵉ']
63 Mot inconnu : __minutes__ =>   * 2ème colonne, délai : c'est le nombre de __minutes__ entre le lancement d'**anacron** et l’exécution de la tâche. Cela permet d'éviter que toutes les tâches s'exécutent en même temps que le démarrage du système, en le ralentissant. | __minutes__
63 Mot inconnu : anacron =>   * 2ème colonne, délai : c'est le nombre de __minutes__ entre le lancement d'**anacron** et l’exécution de la tâche. Cela permet d'éviter que toutes les tâches s'exécutent en même temps que le démarrage du système, en le ralentissant. | anacron

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * 3ème colonne, étiquette : nom que vous donnez à la tâche, pour les logs de anacron. __Ne doit pas comprendre d'espace vide ou de slash__ !! |    => suggestions : ['']
64 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… =>   * 3ème colonne, étiquette : nom que vous donnez à la tâche, pour les logs de anacron. __Ne doit pas comprendre d'espace vide ou de slash__ !! | 3ème => suggestions : ['3ᵉ']
64 Élision de l’article devant un mot commençant par une voyelle. =>   * 3ème colonne, étiquette : nom que vous donnez à la tâche, pour les logs de anacron. __Ne doit pas comprendre d'espace vide ou de slash__ !! | de  => suggestions : ['d’']
64 Mot inconnu : anacron =>   * 3ème colonne, étiquette : nom que vous donnez à la tâche, pour les logs de anacron. __Ne doit pas comprendre d'espace vide ou de slash__ !! | anacron
64 Mot inconnu : __Ne =>   * 3ème colonne, étiquette : nom que vous donnez à la tâche, pour les logs de anacron. __Ne doit pas comprendre d'espace vide ou de slash__ !! | __ne
64 Mot inconnu : slash__ =>   * 3ème colonne, étiquette : nom que vous donnez à la tâche, pour les logs de anacron. __Ne doit pas comprendre d'espace vide ou de slash__ !! | slash__

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * 4ème colonne, commande : tâche à exécuter (nom d'un script, commande bash, lancement d'un programme ...). Peut contenir des espaces vides. |    => suggestions : ['']
65 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… =>   * 4ème colonne, commande : tâche à exécuter (nom d'un script, commande bash, lancement d'un programme ...). Peut contenir des espaces vides. | 4ème => suggestions : ['4ᵉ']
65 Mot inconnu : bash =>   * 4ème colonne, commande : tâche à exécuter (nom d'un script, commande bash, lancement d'un programme ...). Peut contenir des espaces vides. | bash
65 Typographie : points de suspension. Utilisez le caractère dédié. =>   * 4ème colonne, commande : tâche à exécuter (nom d'un script, commande bash, lancement d'un programme ...). Peut contenir des espaces vides. | ... => suggestions : ['…']

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']
67 Pas de trait d’union. => Voici le contenu par défaut du fichier **/etc/anacrontab** (sur une [[bionic|Bionic 18.04]]). Ces lignes ne sont pas à modifier (elles sont utilisées pour générer des fichiers de log). On ajoute en-dessous sa ou ses commandes à automatiser. | en-dessous => suggestions : ['en dessous']

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    # /etc/anacrontab: configuration file for anacron |     => suggestions : ['']
69 Mot inconnu : anacron =>    # /etc/anacrontab: configuration file for anacron | anacron

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    # See anacron(8) and anacrontab(5) for details. |     => suggestions : ['']
71 Mot inconnu : See =>    # See anacron(8) and anacrontab(5) for details. | see
71 Mot inconnu : anacron =>    # See anacron(8) and anacrontab(5) for details. | anacron
71 Mot inconnu : and =>    # See anacron(8) and anacrontab(5) for details. | and
71 Mot inconnu : anacrontab =>    # See anacron(8) and anacrontab(5) for details. | anacrontab
71 Mot inconnu : details =>    # See anacron(8) and anacrontab(5) for details. | details

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    SHELL=/bin/sh |     => suggestions : ['']

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin |     => suggestions : ['']
74 Mot inconnu : PATH =>    PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin | path

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    HOME=/root |     => suggestions : ['']

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    LOGNAME=root |     => suggestions : ['']
76 Mot inconnu : LOGNAME =>    LOGNAME=root | logname
76 Mot inconnu : root =>    LOGNAME=root | root

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     |     => suggestions : ['']

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    # These replace cron's entries |     => suggestions : ['']
78 Mot inconnu : These =>    # These replace cron's entries | these
78 Mot inconnu : cron's =>    # These replace cron's entries | cron's
78 Mot inconnu : entries =>    # These replace cron's entries | entries

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    1	5	cron.daily	 nice run-parts --report /etc/cron.daily |     => suggestions : ['']
79 Mot inconnu : cron =>    1	5	cron.daily	 nice run-parts --report /etc/cron.daily | cron
79 Mot inconnu : daily =>    1	5	cron.daily	 nice run-parts --report /etc/cron.daily | daily
79 Incohérence : espace et tabulation. =>    1	5	cron.daily	 nice run-parts --report /etc/cron.daily | 	  => suggestions : [' ', '\t']
79 Mot inconnu : nice =>    1	5	cron.daily	 nice run-parts --report /etc/cron.daily | nice
79 Mot inconnu : run-parts =>    1	5	cron.daily	 nice run-parts --report /etc/cron.daily | run-parts

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    7	10	cron.weekly	 nice run-parts --report /etc/cron.weekly |     => suggestions : ['']
80 Mot inconnu : cron =>    7	10	cron.weekly	 nice run-parts --report /etc/cron.weekly | cron
80 Mot inconnu : weekly =>    7	10	cron.weekly	 nice run-parts --report /etc/cron.weekly | weekly
80 Incohérence : espace et tabulation. =>    7	10	cron.weekly	 nice run-parts --report /etc/cron.weekly | 	  => suggestions : [' ', '\t']
80 Mot inconnu : nice =>    7	10	cron.weekly	 nice run-parts --report /etc/cron.weekly | nice
80 Mot inconnu : run-parts =>    7	10	cron.weekly	 nice run-parts --report /etc/cron.weekly | run-parts

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    @monthly	15	cron.monthly nice run-parts --report /etc/cron.monthly |     => suggestions : ['']
81 Mot inconnu : cron =>    @monthly	15	cron.monthly nice run-parts --report /etc/cron.monthly | cron
81 Mot inconnu : monthly =>    @monthly	15	cron.monthly nice run-parts --report /etc/cron.monthly | monthly
81 Mot inconnu : nice =>    @monthly	15	cron.monthly nice run-parts --report /etc/cron.monthly | nice
81 Mot inconnu : run-parts =>    @monthly	15	cron.monthly nice run-parts --report /etc/cron.monthly | run-parts

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    </file> |     => suggestions : ['']

85 Mot inconnu : anacron => Par défaut, anacron est lancé par l'utilisateur root. Les commandes, même les commandes "systèmes", n'ont donc pas besoin de mot de passe (root a tous les droits). Et rien n’apparaît à l'écran, car l'utilisateur root n'a pas d'écran affecté. | anacron
85 Mot inconnu : root => Par défaut, anacron est lancé par l'utilisateur root. Les commandes, même les commandes "systèmes", n'ont donc pas besoin de mot de passe (root a tous les droits). Et rien n’apparaît à l'écran, car l'utilisateur root n'a pas d'écran affecté. | root
85 Guillemets typographiques ouvrants. => Par défaut, anacron est lancé par l'utilisateur root. Les commandes, même les commandes "systèmes", n'ont donc pas besoin de mot de passe (root a tous les droits). Et rien n’apparaît à l'écran, car l'utilisateur root n'a pas d'écran affecté. | " => suggestions : ['«\xa0', '“']
85 Guillemets typographiques fermants. => Par défaut, anacron est lancé par l'utilisateur root. Les commandes, même les commandes "systèmes", n'ont donc pas besoin de mot de passe (root a tous les droits). Et rien n’apparaît à l'écran, car l'utilisateur root n'a pas d'écran affecté. | " => suggestions : ['\xa0»', '”']
85 Mot inconnu : root => Par défaut, anacron est lancé par l'utilisateur root. Les commandes, même les commandes "systèmes", n'ont donc pas besoin de mot de passe (root a tous les droits). Et rien n’apparaît à l'écran, car l'utilisateur root n'a pas d'écran affecté. | root
85 Mot inconnu : root => Par défaut, anacron est lancé par l'utilisateur root. Les commandes, même les commandes "systèmes", n'ont donc pas besoin de mot de passe (root a tous les droits). Et rien n’apparaît à l'écran, car l'utilisateur root n'a pas d'écran affecté. | root

87 Mot inconnu : anacrontab => Si on souhaite lancer une application graphique visible à l'écran (bien sûr, si un mot de passe est nécessaire, il sera désormais demandé), il faut donc créer un anacrontab spécifique à l'utilisateur (à vous). Pour ce faire : | anacrontab

89 Mot inconnu : __Créez => 1/ __Créez les 3 répertoires nécessaires__ dans votre compte utilisateur : | __créez
89 Mot inconnu : nécessaires__ => 1/ __Créez les 3 répertoires nécessaires__ dans votre compte utilisateur : | nécessaires__

92 Mot inconnu : __Créez => 2/ __Créez un fichier texte **anacrontab**__ (qui est un simple fichier texte sans extension) dans le répertoire **~/.anacron/etc/**, et placez-y un contenu simplifié, qui ne remplace pas, mais s'ajoute à l'anacrontab du système. Par exemple : | __créez
92 Mot inconnu : anacrontab => 2/ __Créez un fichier texte **anacrontab**__ (qui est un simple fichier texte sans extension) dans le répertoire **~/.anacron/etc/**, et placez-y un contenu simplifié, qui ne remplace pas, mais s'ajoute à l'anacrontab du système. Par exemple : | anacrontab
92 Mot inconnu : __ => 2/ __Créez un fichier texte **anacrontab**__ (qui est un simple fichier texte sans extension) dans le répertoire **~/.anacron/etc/**, et placez-y un contenu simplifié, qui ne remplace pas, mais s'ajoute à l'anacrontab du système. Par exemple : | __
92 Mot inconnu : anacron => 2/ __Créez un fichier texte **anacrontab**__ (qui est un simple fichier texte sans extension) dans le répertoire **~/.anacron/etc/**, et placez-y un contenu simplifié, qui ne remplace pas, mais s'ajoute à l'anacrontab du système. Par exemple : | anacron
92 Mot inconnu : anacrontab => 2/ __Créez un fichier texte **anacrontab**__ (qui est un simple fichier texte sans extension) dans le répertoire **~/.anacron/etc/**, et placez-y un contenu simplifié, qui ne remplace pas, mais s'ajoute à l'anacrontab du système. Par exemple : | anacrontab

101 Mot inconnu : VOTRE_IDENTIFIANT => **Personnalisez VOTRE_IDENTIFIANT** (ligne 4)! Dans cet exemple, anacron lance tous les 4 jours, 2 minutes après le démarrage, un processus nommé test (le nom est libre) qui lance l'explorateur de fichier Thunar (celui de Xubuntu). | votre_identifiant
101 Mot inconnu : anacron => **Personnalisez VOTRE_IDENTIFIANT** (ligne 4)! Dans cet exemple, anacron lance tous les 4 jours, 2 minutes après le démarrage, un processus nommé test (le nom est libre) qui lance l'explorateur de fichier Thunar (celui de Xubuntu). | anacron
101 Avec une unité de mesure, mettez un espace insécable. => **Personnalisez VOTRE_IDENTIFIANT** (ligne 4)! Dans cet exemple, anacron lance tous les 4 jours, 2 minutes après le démarrage, un processus nommé test (le nom est libre) qui lance l'explorateur de fichier Thunar (celui de Xubuntu). | 4 jours => suggestions : ['4\xa0jours']
101 Mot inconnu : Thunar => **Personnalisez VOTRE_IDENTIFIANT** (ligne 4)! Dans cet exemple, anacron lance tous les 4 jours, 2 minutes après le démarrage, un processus nommé test (le nom est libre) qui lance l'explorateur de fichier Thunar (celui de Xubuntu). | thunar
101 Mot inconnu : Xubuntu => **Personnalisez VOTRE_IDENTIFIANT** (ligne 4)! Dans cet exemple, anacron lance tous les 4 jours, 2 minutes après le démarrage, un processus nommé test (le nom est libre) qui lance l'explorateur de fichier Thunar (celui de Xubuntu). | xubuntu

104 Mot inconnu : __Ouvrez => 3/ __Ouvrez votre fichier **~/.profil**, et placez cette ligne à la fin__ : | __ouvrez
104 Mot inconnu : fin__ => 3/ __Ouvrez votre fichier **~/.profil**, et placez cette ligne à la fin__ : | fin__

107 Mot inconnu : anacrontab => Cette ligne lance votre **anacrontab** personnel. Désormais, l'exemple ci-dessus exécutera 2 Mn après le démarrage la commande choisie (le logiciel **thunar**) si 4 jours (ou plus si pas de démarrage) se sont écoulés depuis la précédente exécution. | anacrontab
107 Mot inconnu : Mn => Cette ligne lance votre **anacrontab** personnel. Désormais, l'exemple ci-dessus exécutera 2 Mn après le démarrage la commande choisie (le logiciel **thunar**) si 4 jours (ou plus si pas de démarrage) se sont écoulés depuis la précédente exécution. | mn
107 Mot inconnu : thunar => Cette ligne lance votre **anacrontab** personnel. Désormais, l'exemple ci-dessus exécutera 2 Mn après le démarrage la commande choisie (le logiciel **thunar**) si 4 jours (ou plus si pas de démarrage) se sont écoulés depuis la précédente exécution. | thunar
107 Avec une unité de mesure, mettez un espace insécable. => Cette ligne lance votre **anacrontab** personnel. Désormais, l'exemple ci-dessus exécutera 2 Mn après le démarrage la commande choisie (le logiciel **thunar**) si 4 jours (ou plus si pas de démarrage) se sont écoulés depuis la précédente exécution. | 4 jours => suggestions : ['4\xa0jours']

110 Mot inconnu : anacron => Tapez **anacron**, suivi d'un option (par exemple **anacron -T**) : | anacron
110 Accord de genre erroné : « option » est féminin. => Tapez **anacron**, suivi d'un option (par exemple **anacron -T**) : | un => suggestions : ['une']
110 Mot inconnu : anacron => Tapez **anacron**, suivi d'un option (par exemple **anacron -T**) : | anacron
110 Il manque un espace à côté du tiret. => Tapez **anacron**, suivi d'un option (par exemple **anacron -T**) : |  - => suggestions : [' – ', ' — ']
114 Mot inconnu : Anacron => **-s** : Met en série l'exécution des tâches. Anacron ne lancera pas une nouvelle tâche avant que la précédente ne soit terminée.\\ | anacron
115 Il manque un espace à côté du tiret. => **-n** : Lance les tâches tout de suite. Ignore les définitions de délai dans le fichier /etc/anacrontab Cette option implique -s.\\ |  - => suggestions : [' – ', ' — ']
116 Mot inconnu : Anacron => **-d** : N'exécute pas en arrière-plan. Dans ce mode, Anacron enverra les messages d'information vers la sortie d'erreurs, ainsi qu'à syslog. La sortie des tâches est envoyée via un message comme d'habitude.\\ | anacron
116 Mot inconnu : syslog => **-d** : N'exécute pas en arrière-plan. Dans ce mode, Anacron enverra les messages d'information vers la sortie d'erreurs, ainsi qu'à syslog. La sortie des tâches est envoyée via un message comme d'habitude.\\ | syslog
117 Il manque un espace à côté du tiret. => **-q** : Supprime les messages destinés à la sortie d'erreurs. Applicable seulement avec -d.\\ |  - => suggestions : [' – ', ' — ']

118 Mot inconnu : anacrontab => **-t anacrontab** : Utilise le fichier anacrontab défini, à la place de celui par défaut. Par exemple : **anacron -t ~/.anacron/etc/anacrontab**\\ | anacrontab
118 Mot inconnu : anacrontab => **-t anacrontab** : Utilise le fichier anacrontab défini, à la place de celui par défaut. Par exemple : **anacron -t ~/.anacron/etc/anacrontab**\\ | anacrontab
118 Mot inconnu : anacron => **-t anacrontab** : Utilise le fichier anacrontab défini, à la place de celui par défaut. Par exemple : **anacron -t ~/.anacron/etc/anacrontab**\\ | anacron
118 Mot inconnu : anacron => **-t anacrontab** : Utilise le fichier anacrontab défini, à la place de celui par défaut. Par exemple : **anacron -t ~/.anacron/etc/anacrontab**\\ | anacron
121 Mot inconnu : anacrontab => **-T** : Test la syntaxe de votre anacrontab, et indique les erreurs.\\ | anacrontab

125 Mot inconnu : Anacron => Par défaut, **Anacron** (et son fichier de config **anacrontab**) est lancé (par [[cron|cron]]) au démarrage du PC. Après l'exécution des commandes paramétrées, **anacron** se désactive. Si la machine n'est jamais éteinte, le fichier **/etc/anacrontab** est re-lancé (par cron) tout les matins à 7H30. Ses paramétrages seront donc bien testés et (si nécessaire) appliqués chaque jour. Il est à noter que ce lancement de 7H30 fonctionne même si la machine est en veille, du moins après la sortie de veille (ne marche sans doute pas pour une [[veille_et_hibernation|hibernation]], mais à tester). | anacron
125 Mot inconnu : anacrontab => Par défaut, **Anacron** (et son fichier de config **anacrontab**) est lancé (par [[cron|cron]]) au démarrage du PC. Après l'exécution des commandes paramétrées, **anacron** se désactive. Si la machine n'est jamais éteinte, le fichier **/etc/anacrontab** est re-lancé (par cron) tout les matins à 7H30. Ses paramétrages seront donc bien testés et (si nécessaire) appliqués chaque jour. Il est à noter que ce lancement de 7H30 fonctionne même si la machine est en veille, du moins après la sortie de veille (ne marche sans doute pas pour une [[veille_et_hibernation|hibernation]], mais à tester). | anacrontab
125 Mot inconnu : anacron => Par défaut, **Anacron** (et son fichier de config **anacrontab**) est lancé (par [[cron|cron]]) au démarrage du PC. Après l'exécution des commandes paramétrées, **anacron** se désactive. Si la machine n'est jamais éteinte, le fichier **/etc/anacrontab** est re-lancé (par cron) tout les matins à 7H30. Ses paramétrages seront donc bien testés et (si nécessaire) appliqués chaque jour. Il est à noter que ce lancement de 7H30 fonctionne même si la machine est en veille, du moins après la sortie de veille (ne marche sans doute pas pour une [[veille_et_hibernation|hibernation]], mais à tester). | anacron
125 Erreur d’accord probable avec « les matins ». => Par défaut, **Anacron** (et son fichier de config **anacrontab**) est lancé (par [[cron|cron]]) au démarrage du PC. Après l'exécution des commandes paramétrées, **anacron** se désactive. Si la machine n'est jamais éteinte, le fichier **/etc/anacrontab** est re-lancé (par cron) tout les matins à 7H30. Ses paramétrages seront donc bien testés et (si nécessaire) appliqués chaque jour. Il est à noter que ce lancement de 7H30 fonctionne même si la machine est en veille, du moins après la sortie de veille (ne marche sans doute pas pour une [[veille_et_hibernation|hibernation]], mais à tester). | tout => suggestions : ['tous']
125 Mot inconnu : veille_et_hibernation => Par défaut, **Anacron** (et son fichier de config **anacrontab**) est lancé (par [[cron|cron]]) au démarrage du PC. Après l'exécution des commandes paramétrées, **anacron** se désactive. Si la machine n'est jamais éteinte, le fichier **/etc/anacrontab** est re-lancé (par cron) tout les matins à 7H30. Ses paramétrages seront donc bien testés et (si nécessaire) appliqués chaque jour. Il est à noter que ce lancement de 7H30 fonctionne même si la machine est en veille, du moins après la sortie de veille (ne marche sans doute pas pour une [[veille_et_hibernation|hibernation]], mais à tester). | veille_et_hibernation

127 Mot inconnu : anacrontab => Par contre, un fichier **anacrontab personnel** (qui est inconnu de [[cron|cron]]) __n'est pas relancé à 7h30__. Il ne l'est qu'au démarrage du PC. | anacrontab
127 Mot inconnu : __n'est => Par contre, un fichier **anacrontab personnel** (qui est inconnu de [[cron|cron]]) __n'est pas relancé à 7h30__. Il ne l'est qu'au démarrage du PC. | __n'est
127 Mot inconnu : h30__ => Par contre, un fichier **anacrontab personnel** (qui est inconnu de [[cron|cron]]) __n'est pas relancé à 7h30__. Il ne l'est qu'au démarrage du PC. | h30__

129 Mot inconnu : anacrontab => L'avantage d'un **anacrontab** personnel est donc qu'on peut lancer des applications graphiques (contrairement à l'**anacrontab** du système), mais son inconvénient est qu'il ne fonctionne pas sur des machines qu'on arrêtent rarement ou jamais. Le contournement est alors de modifier cron pour qu'il lance votre **anacrontab** personnel tous les jours, à l'heure souhaitée. | anacrontab
129 Mot inconnu : anacrontab => L'avantage d'un **anacrontab** personnel est donc qu'on peut lancer des applications graphiques (contrairement à l'**anacrontab** du système), mais son inconvénient est qu'il ne fonctionne pas sur des machines qu'on arrêtent rarement ou jamais. Le contournement est alors de modifier cron pour qu'il lance votre **anacrontab** personnel tous les jours, à l'heure souhaitée. | anacrontab
129 Conjugaison erronée. Accord avec “on”. Le verbe devrait être à la 3ᵉ personne du singulier. => L'avantage d'un **anacrontab** personnel est donc qu'on peut lancer des applications graphiques (contrairement à l'**anacrontab** du système), mais son inconvénient est qu'il ne fonctionne pas sur des machines qu'on arrêtent rarement ou jamais. Le contournement est alors de modifier cron pour qu'il lance votre **anacrontab** personnel tous les jours, à l'heure souhaitée. | arrêtent => suggestions : ['arrête']
129 Mot inconnu : cron => L'avantage d'un **anacrontab** personnel est donc qu'on peut lancer des applications graphiques (contrairement à l'**anacrontab** du système), mais son inconvénient est qu'il ne fonctionne pas sur des machines qu'on arrêtent rarement ou jamais. Le contournement est alors de modifier cron pour qu'il lance votre **anacrontab** personnel tous les jours, à l'heure souhaitée. | cron
129 Mot inconnu : anacrontab => L'avantage d'un **anacrontab** personnel est donc qu'on peut lancer des applications graphiques (contrairement à l'**anacrontab** du système), mais son inconvénient est qu'il ne fonctionne pas sur des machines qu'on arrêtent rarement ou jamais. Le contournement est alors de modifier cron pour qu'il lance votre **anacrontab** personnel tous les jours, à l'heure souhaitée. | anacrontab

133 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => <note>anacron n'est pas lancé si l'ordinateur que vous utilisez n'est pas branché sur secteur. Ainsi, il n'entraîne pas de consommation supplémentaire pour un portable.</note> | anacron => suggestions : ['Anacron']
133 Mot inconnu : anacron => <note>anacron n'est pas lancé si l'ordinateur que vous utilisez n'est pas branché sur secteur. Ainsi, il n'entraîne pas de consommation supplémentaire pour un portable.</note> | anacron

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[incron]] : effectuer une action, commande(s), scripts, etc, en cas de modifications de fichiers ou de répertoires donnés |    => suggestions : ['']
137 Mot inconnu : incron =>   * [[incron]] : effectuer une action, commande(s), scripts, etc, en cas de modifications de fichiers ou de répertoires donnés | incron
137 Écriture invariable. Utilisez un point médian. =>   * [[incron]] : effectuer une action, commande(s), scripts, etc, en cas de modifications de fichiers ou de répertoires donnés | commande(s) => suggestions : ['commande·s']

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[fcron]] : programmer des tâches devant être exécutées |    => suggestions : ['']
138 Mot inconnu : fcron =>   * [[fcron]] : programmer des tâches devant être exécutées | fcron
140 Mot inconnu : sylvainsjc => Auteurs : [[utilisateurs/sylvainsjc]] - [[utilisateurs/christophe c]] | sylvainsjc
140 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Auteurs : [[utilisateurs/sylvainsjc]] - [[utilisateurs/christophe c]] |  -  => suggestions : [' – ', ' — ', ' − ']
140 Mot inconnu : christophe => Auteurs : [[utilisateurs/sylvainsjc]] - [[utilisateurs/christophe c]] | christophe
142 Espace(s) en fin de ligne à supprimer. => Contributeurs :  |   => suggestions : ['']
