
5 Mot inconnu : Mailman => ====== Les liste de diffusions Mailman ====== <|> mailman

10 Mot inconnu : Mailman => **Mailman** est une application libre pour gérer des listes de diffusion électroniques, les listes de discussion et les « newsletters » (traduisez littéralement par « lettres d'information »). La plupart des listes de diffusions de logiciel libre utilisent Mailman comme programme de gestion des messages. Ce dernier est performant, facile à installer et facile à maintenir.  <|> mailman
10 Mot inconnu : Mailman => **Mailman** est une application libre pour gérer des listes de diffusion électroniques, les listes de discussion et les « newsletters » (traduisez littéralement par « lettres d'information »). La plupart des listes de diffusions de logiciel libre utilisent Mailman comme programme de gestion des messages. Ce dernier est performant, facile à installer et facile à maintenir.  <|> mailman

13 Mot inconnu : allpackages => la version inclue par défaut dans le [[pu>allpackages|dépôt principale de Xenial (16.04)]] est la 2.1 qui est la plus répandue alors que la dernière release est la  [[https://docs.mailman3.org/en/latest/|v. 3.1]] avec des ruptures importantes: installation via pip (python), django… API REST… docker.</note> <|> allpackages
13 Mot inconnu : release => la version inclue par défaut dans le [[pu>allpackages|dépôt principale de Xenial (16.04)]] est la 2.1 qui est la plus répandue alors que la dernière release est la  [[https://docs.mailman3.org/en/latest/|v. 3.1]] avec des ruptures importantes: installation via pip (python), django… API REST… docker.</note> <|> release
13 Mot inconnu : pip => la version inclue par défaut dans le [[pu>allpackages|dépôt principale de Xenial (16.04)]] est la 2.1 qui est la plus répandue alors que la dernière release est la  [[https://docs.mailman3.org/en/latest/|v. 3.1]] avec des ruptures importantes: installation via pip (python), django… API REST… docker.</note> <|> pip
13 Mot inconnu : django => la version inclue par défaut dans le [[pu>allpackages|dépôt principale de Xenial (16.04)]] est la 2.1 qui est la plus répandue alors que la dernière release est la  [[https://docs.mailman3.org/en/latest/|v. 3.1]] avec des ruptures importantes: installation via pip (python), django… API REST… docker.</note> <|> django
13 Mot inconnu : REST => la version inclue par défaut dans le [[pu>allpackages|dépôt principale de Xenial (16.04)]] est la 2.1 qui est la plus répandue alors que la dernière release est la  [[https://docs.mailman3.org/en/latest/|v. 3.1]] avec des ruptures importantes: installation via pip (python), django… API REST… docker.</note> <|> rest

22 Mot inconnu : Apache2 => ==== Apache2 ==== <|> apache2

25 Mot inconnu : Exim4 => ==== Exim4 ==== <|> exim4

30 Mot inconnu : Exim4 => Une fois Exim4 installé, les fichiers de configuration se trouvent dans « /etc/exim4/ ». Dans Ubuntu, par défaut, les fichiers de configuration de Exim4 sont répartis en plusieurs fichiers. <|> exim4
30 Mot inconnu : Exim4 => Une fois Exim4 installé, les fichiers de configuration se trouvent dans « /etc/exim4/ ». Dans Ubuntu, par défaut, les fichiers de configuration de Exim4 sont répartis en plusieurs fichiers. <|> exim4

38 Mot inconnu : Mailman => ==== Mailman ==== <|> mailman
42 Mot inconnu : CGI => Cette dernière copiera les fichiers d'installation dans le dossier « /var/lib/mailman » et installera les scripts CGI dans le dossier « /usr/lib/cgi-bin/mailman ». <|> cgi
43 Mot inconnu : list => Enfin, le programme créera le groupe et l'utilisateur « list ». Notez que le processus « mailman » doit être lancé avec les privilèges super-utilisateur. <|> list
43 Mot inconnu : mailman => Enfin, le programme créera le groupe et l'utilisateur « list ». Notez que le processus « mailman » doit être lancé avec les privilèges super-utilisateur. <|> mailman

48 Mot inconnu : Mailman => Pour cette section, il est nécessaire que vous ayez complété avec succès l'installation de Mailman, Apache et Exim4. Ici, nous allons voir les étapes de configuration. À la fin de cette section, Mailman devrait être prêt à être utilisé. <|> mailman
48 Mot inconnu : Exim4 => Pour cette section, il est nécessaire que vous ayez complété avec succès l'installation de Mailman, Apache et Exim4. Ici, nous allons voir les étapes de configuration. À la fin de cette section, Mailman devrait être prêt à être utilisé. <|> exim4
48 Mot inconnu : Mailman => Pour cette section, il est nécessaire que vous ayez complété avec succès l'installation de Mailman, Apache et Exim4. Ici, nous allons voir les étapes de configuration. À la fin de cette section, Mailman devrait être prêt à être utilisé. <|> mailman

52 Mot inconnu : Apache2 => Une fois l'installation d'Apache2 effectuée, vous pouvez le démarrer avec la commande suivante : <|> apache2

56 Mot inconnu : Mailman => Mailman utilise Apache pour créer un rendu de ses scripts CGI. Les scripts de Mailman se trouvent dans le dossier « /usr/lib/cgi-bin/mailman ». Dans le fichier « /etc/apache2/apache2.conf », rajoutez une ligne : <|> mailman
56 Mot inconnu : CGI => Mailman utilise Apache pour créer un rendu de ses scripts CGI. Les scripts de Mailman se trouvent dans le dossier « /usr/lib/cgi-bin/mailman ». Dans le fichier « /etc/apache2/apache2.conf », rajoutez une ligne : <|> cgi
56 Mot inconnu : Mailman => Mailman utilise Apache pour créer un rendu de ses scripts CGI. Les scripts de Mailman se trouvent dans le dossier « /usr/lib/cgi-bin/mailman ». Dans le fichier « /etc/apache2/apache2.conf », rajoutez une ligne : <|> mailman

57 Mot inconnu : ScriptAlias => <file xml>ScriptAlias /mailman/ /usr/lib/cgi-bin/mailman/</file> <|> scriptalias
57 Mot inconnu : mailman => <file xml>ScriptAlias /mailman/ /usr/lib/cgi-bin/mailman/</file> <|> mailman

75 Mot inconnu : cgi => Pensez à activer le module cgi de Apache2 par la commande suivante : <|> cgi
75 Mot inconnu : Apache2 => Pensez à activer le module cgi de Apache2 par la commande suivante : <|> apache2

79 Mot inconnu : Exim4 => ==== Exim4 ==== <|> exim4

81 Mot inconnu : Mailman => Pour que Mailman puisse fonctionner avec Exim4, vous êtes supposé configurer ce dernier. Comme mentionné plus haut, par défaut, Exim4 utilise de multiples fichiers de configurations, et de tout type. Pour plus de détails, merci de vous référer au site [[http://www.exim.org|officiel d'Exim]]. <|> mailman
81 Mot inconnu : Exim4 => Pour que Mailman puisse fonctionner avec Exim4, vous êtes supposé configurer ce dernier. Comme mentionné plus haut, par défaut, Exim4 utilise de multiples fichiers de configurations, et de tout type. Pour plus de détails, merci de vous référer au site [[http://www.exim.org|officiel d'Exim]]. <|> exim4
81 Mot inconnu : Exim4 => Pour que Mailman puisse fonctionner avec Exim4, vous êtes supposé configurer ce dernier. Comme mentionné plus haut, par défaut, Exim4 utilise de multiples fichiers de configurations, et de tout type. Pour plus de détails, merci de vous référer au site [[http://www.exim.org|officiel d'Exim]]. <|> exim4
81 Mot inconnu : Exim => Pour que Mailman puisse fonctionner avec Exim4, vous êtes supposé configurer ce dernier. Comme mentionné plus haut, par défaut, Exim4 utilise de multiples fichiers de configurations, et de tout type. Pour plus de détails, merci de vous référer au site [[http://www.exim.org|officiel d'Exim]]. <|> exim

83 Mot inconnu : Mailman => Pour démarrer Mailman, nous devons ajouter un nouveau fichier de configuration avec les catégories suivantes : <|> mailman

88 Mot inconnu : Exim => Exim crée un fichier principal de configuration, ainsi que plusieurs mini-fichiers de configuration. C'est pourquoi, l'ordre de ces fichiers de configuration est important. Une fois ces fichiers créés, vous pouvez lancer Exim4 avec la commande : <|> exim
88 Mot inconnu : Exim4 => Exim crée un fichier principal de configuration, ainsi que plusieurs mini-fichiers de configuration. C'est pourquoi, l'ordre de ces fichiers de configuration est important. Une fois ces fichiers créés, vous pouvez lancer Exim4 avec la commande : <|> exim4

99 Mot inconnu : start => # start <|> start

100 Mot inconnu : dir => # Home dir for your Mailman installation -- aka Mailman's prefix <|> dir
100 Mot inconnu : your => # Home dir for your Mailman installation -- aka Mailman's prefix <|> your
100 Mot inconnu : Mailman => # Home dir for your Mailman installation -- aka Mailman's prefix <|> mailman
100 Mot inconnu : aka => # Home dir for your Mailman installation -- aka Mailman's prefix <|> aka
100 Mot inconnu : Mailman's => # Home dir for your Mailman installation -- aka Mailman's prefix <|> mailman's
100 Mot inconnu : prefix => # Home dir for your Mailman installation -- aka Mailman's prefix <|> prefix

101 Mot inconnu : directory => # directory. <|> directory

102 Mot inconnu : By => # By default this is set to "/usr/local/mailman" <|> by
102 Mot inconnu : default => # By default this is set to "/usr/local/mailman" <|> default
102 Mot inconnu : this => # By default this is set to "/usr/local/mailman" <|> this
102 Mot inconnu : is => # By default this is set to "/usr/local/mailman" <|> is
102 Mot inconnu : to => # By default this is set to "/usr/local/mailman" <|> to

103 Mot inconnu : Red => # On a Red Hat/Fedora system using the RPM use "/var/mailman" <|> red
103 Mot inconnu : Hat => # On a Red Hat/Fedora system using the RPM use "/var/mailman" <|> hat
103 Mot inconnu : system => # On a Red Hat/Fedora system using the RPM use "/var/mailman" <|> system
103 Mot inconnu : using => # On a Red Hat/Fedora system using the RPM use "/var/mailman" <|> using
103 Mot inconnu : the => # On a Red Hat/Fedora system using the RPM use "/var/mailman" <|> the
103 Mot inconnu : RPM => # On a Red Hat/Fedora system using the RPM use "/var/mailman" <|> rpm

104 Incohérence avec “On” : “Debian” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => # On Debian using the deb package use "/var/lib/mailman" <|> debian => suggestions : []
104 Mot inconnu : using => # On Debian using the deb package use "/var/lib/mailman" <|> using
104 Mot inconnu : the => # On Debian using the deb package use "/var/lib/mailman" <|> the
104 Mot inconnu : deb => # On Debian using the deb package use "/var/lib/mailman" <|> deb

105 Mot inconnu : This => # This is normally the same as ~mailman <|> this
105 Mot inconnu : is => # This is normally the same as ~mailman <|> is
105 Mot inconnu : normally => # This is normally the same as ~mailman <|> normally
105 Mot inconnu : the => # This is normally the same as ~mailman <|> the
105 Mot inconnu : mailman => # This is normally the same as ~mailman <|> mailman

106 Mot inconnu : MM_HOME => MM_HOME=/var/lib/mailman <|> mm_home

108 Mot inconnu : and => # User and group for Mailman, should match your --with-mail-gid <|> and
108 Mot inconnu : group => # User and group for Mailman, should match your --with-mail-gid <|> group
108 Mot inconnu : Mailman => # User and group for Mailman, should match your --with-mail-gid <|> mailman
108 Mot inconnu : should => # User and group for Mailman, should match your --with-mail-gid <|> should
108 Mot inconnu : your => # User and group for Mailman, should match your --with-mail-gid <|> your
108 Mot inconnu : with-mail-gid => # User and group for Mailman, should match your --with-mail-gid <|> with-mail-gid

109 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => # switch to Mailman's configure script.  Value is normally "mailman" <|> switch => suggestions : ['Switch']
109 Mot inconnu : switch => # switch to Mailman's configure script.  Value is normally "mailman" <|> switch
109 Mot inconnu : to => # switch to Mailman's configure script.  Value is normally "mailman" <|> to
109 Mot inconnu : Mailman's => # switch to Mailman's configure script.  Value is normally "mailman" <|> mailman's
109 Mot inconnu : is => # switch to Mailman's configure script.  Value is normally "mailman" <|> is
109 Mot inconnu : normally => # switch to Mailman's configure script.  Value is normally "mailman" <|> normally
109 Guillemets typographiques ouvrants. => # switch to Mailman's configure script.  Value is normally "mailman" <|> " => suggestions : ['«\xa0', '“']
109 Mot inconnu : mailman => # switch to Mailman's configure script.  Value is normally "mailman" <|> mailman
109 Guillemets typographiques fermants. => # switch to Mailman's configure script.  Value is normally "mailman" <|> " => suggestions : ['\xa0»', '”']

110 Mot inconnu : MM_UID => MM_UID=list <|> mm_uid
110 Mot inconnu : list => MM_UID=list <|> list

111 Mot inconnu : MM_GID => MM_GID=list <|> mm_gid
111 Mot inconnu : list => MM_GID=list <|> list

113 Mot inconnu : Domains => # Domains that your lists are in - colon separated list <|> domains
113 Mot inconnu : that => # Domains that your lists are in - colon separated list <|> that
113 Mot inconnu : your => # Domains that your lists are in - colon separated list <|> your
113 Mot inconnu : lists => # Domains that your lists are in - colon separated list <|> lists
113 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => # Domains that your lists are in - colon separated list <|>  -  => suggestions : [' – ', ' — ', ' − ']
113 Mot inconnu : separated => # Domains that your lists are in - colon separated list <|> separated
113 Mot inconnu : list => # Domains that your lists are in - colon separated list <|> list

114 Mot inconnu : you => # you may wish to add these into local_domains as well <|> you
114 Mot inconnu : may => # you may wish to add these into local_domains as well <|> may
114 Mot inconnu : wish => # you may wish to add these into local_domains as well <|> wish
114 Mot inconnu : to => # you may wish to add these into local_domains as well <|> to
114 Mot inconnu : add => # you may wish to add these into local_domains as well <|> add
114 Mot inconnu : these => # you may wish to add these into local_domains as well <|> these
114 Mot inconnu : into => # you may wish to add these into local_domains as well <|> into
114 Mot inconnu : local_domains => # you may wish to add these into local_domains as well <|> local_domains
114 Mot inconnu : well => # you may wish to add these into local_domains as well <|> well

115 Mot inconnu : domainlist => domainlist mm_domains=bluestar.co.in <|> domainlist
115 Mot inconnu : mm_domains => domainlist mm_domains=bluestar.co.in <|> mm_domains

119 Mot inconnu : These => # These values are derived from the ones above and should not need <|> these
119 Mot inconnu : derived => # These values are derived from the ones above and should not need <|> derived
119 Mot inconnu : from => # These values are derived from the ones above and should not need <|> from
119 Mot inconnu : the => # These values are derived from the ones above and should not need <|> the
119 Mot inconnu : ones => # These values are derived from the ones above and should not need <|> ones
119 Mot inconnu : above => # These values are derived from the ones above and should not need <|> above
119 Mot inconnu : and => # These values are derived from the ones above and should not need <|> and
119 Mot inconnu : should => # These values are derived from the ones above and should not need <|> should
119 Mot inconnu : not => # These values are derived from the ones above and should not need <|> not
119 Mot inconnu : need => # These values are derived from the ones above and should not need <|> need

120 Mot inconnu : editing => # editing unless you have munged your mailman installation <|> editing
120 Mot inconnu : unless => # editing unless you have munged your mailman installation <|> unless
120 Mot inconnu : you => # editing unless you have munged your mailman installation <|> you
120 Mot inconnu : munged => # editing unless you have munged your mailman installation <|> munged
120 Mot inconnu : your => # editing unless you have munged your mailman installation <|> your
120 Mot inconnu : mailman => # editing unless you have munged your mailman installation <|> mailman

122 Mot inconnu : The => # The path of the Mailman mail wrapper script <|> the
122 Mot inconnu : path => # The path of the Mailman mail wrapper script <|> path
122 Mot inconnu : of => # The path of the Mailman mail wrapper script <|> of
122 Mot inconnu : the => # The path of the Mailman mail wrapper script <|> the
122 Mot inconnu : Mailman => # The path of the Mailman mail wrapper script <|> mailman
122 Mot inconnu : wrapper => # The path of the Mailman mail wrapper script <|> wrapper

123 Mot inconnu : MM_WRAP => MM_WRAP=MM_HOME/mail/mailman <|> mm_wrap
123 Mot inconnu : MM_HOME => MM_WRAP=MM_HOME/mail/mailman <|> mm_home
123 Mot inconnu : mailman => MM_WRAP=MM_HOME/mail/mailman <|> mailman

125 Mot inconnu : The => # The path of the list config file (used as a required file when <|> the
125 Mot inconnu : path => # The path of the list config file (used as a required file when <|> path
125 Mot inconnu : of => # The path of the list config file (used as a required file when <|> of
125 Mot inconnu : the => # The path of the list config file (used as a required file when <|> the
125 Mot inconnu : list => # The path of the list config file (used as a required file when <|> list
125 Mot inconnu : used => # The path of the list config file (used as a required file when <|> used
125 Mot inconnu : required => # The path of the list config file (used as a required file when <|> required
125 Mot inconnu : when => # The path of the list config file (used as a required file when <|> when

126 Mot inconnu : verifying => # verifying list addresses) <|> verifying
126 Mot inconnu : list => # verifying list addresses) <|> list
126 Mot inconnu : addresses => # verifying list addresses) <|> addresses

127 Mot inconnu : MM_LISTCHK => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> mm_listchk
127 Mot inconnu : MM_HOME => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> mm_home
127 Mot inconnu : lists => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> lists
127 Mot inconnu : lc => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> lc
127 Une de ces ponctuations est superflue. => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> :: => suggestions : [':', ':']
127 Mot inconnu : local_part => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> local_part
127 Mot inconnu : pck => MM_LISTCHK=MM_HOME/lists/${lc::$local_part}/config.pck <|> pck

128 Mot inconnu : end => # end <|> end
133 Mot inconnu : _exim4-config_mailman => Tous les fichiers de configuration concernant le type « transport » sont stockés dans le dossier « /etc/exim4/conf.d/transport/ ». Vous pouvez ajouter les lignes suivantes dans un nouveau fichier nommé « 04_exim4-config_mailman »: <|> _exim4-config_mailman

136 Mot inconnu : mailman_transport => mailman_transport: <|> mailman_transport

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  driver = pipe <|>   => suggestions : ['']

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  command = MM_WRAP \ <|>   => suggestions : ['']
138 Mot inconnu : command =>  command = MM_WRAP \ <|> command
138 Mot inconnu : MM_WRAP =>  command = MM_WRAP \ <|> mm_wrap
151 Mot inconnu : _exim4-config_mailman => Tous les fichiers de configuration concernant le type « router » sont stockés dans le dossier « /etc/exim4/conf.d/router/ ». Vous pouvez ajouter les lignes suivantes dans un nouveau fichier nommé « 04_exim4-config_mailman »: <|> _exim4-config_mailman

154 Mot inconnu : mailman_router => mailman_router: <|> mailman_router

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  driver = accept <|>   => suggestions : ['']
155 Mot inconnu : accept =>  driver = accept <|> accept

156 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  require_files = MM_HOME/lists/$local_part/config.pck <|>   => suggestions : ['']
156 Mot inconnu : require_files =>  require_files = MM_HOME/lists/$local_part/config.pck <|> require_files
156 Mot inconnu : MM_HOME =>  require_files = MM_HOME/lists/$local_part/config.pck <|> mm_home
156 Mot inconnu : lists =>  require_files = MM_HOME/lists/$local_part/config.pck <|> lists
156 Mot inconnu : local_part =>  require_files = MM_HOME/lists/$local_part/config.pck <|> local_part
156 Mot inconnu : pck =>  require_files = MM_HOME/lists/$local_part/config.pck <|> pck

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  local_part_suffix_optional <|>   => suggestions : ['']
157 Mot inconnu : local_part_suffix_optional =>  local_part_suffix_optional <|> local_part_suffix_optional

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  local_part_suffix = -bounces : -bounces+* : \ <|>   => suggestions : ['']
158 Mot inconnu : local_part_suffix =>  local_part_suffix = -bounces : -bounces+* : \ <|> local_part_suffix
158 Mot inconnu : bounces =>  local_part_suffix = -bounces : -bounces+* : \ <|> bounces
158 Mot inconnu : bounces =>  local_part_suffix = -bounces : -bounces+* : \ <|> bounces

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  transport = mailman_transport <|>   => suggestions : ['']
161 Mot inconnu : mailman_transport =>  transport = mailman_transport <|> mailman_transport

164 Mot inconnu : Mailman => ==== Mailman ==== <|> mailman

166 Mot inconnu : mailman => Modifiez d'abord les paramètres de mailman afin qu'il reconnaisse votre nom de domaine. Éditez le fichier /etc/mailman/mm_cfg.py et ajoutez-y : <|> mailman

171 Mot inconnu : postfix_to_mailman => [[https://wiki.list.org/DOC/How%20do%20I%20configure%20postfix_to_mailman.py%3F|infos sur postfix_to_mailman.py]] <|> postfix_to_mailman
171 Mot inconnu : py => [[https://wiki.list.org/DOC/How%20do%20I%20configure%20postfix_to_mailman.py%3F|infos sur postfix_to_mailman.py]] <|> py
173 Mot inconnu : mailman => Créez ensuite une liste de diffusion, ici « mailman »: <|> mailman

197 Mot inconnu : Exim => Nous avons configuré Exim afin qu'il reconnaisse tous les courriels de Mailman. Ainsi, il n'est plus obligatoire de créer des entrées dans « /etc/aliases ». Si vous avez effectué un changement quelconque, merci de vous assurer que vous ayez redémarré tous les services, avant de passer à la section suivante. <|> exim
197 Mot inconnu : Mailman => Nous avons configuré Exim afin qu'il reconnaisse tous les courriels de Mailman. Ainsi, il n'est plus obligatoire de créer des entrées dans « /etc/aliases ». Si vous avez effectué un changement quelconque, merci de vous assurer que vous ayez redémarré tous les services, avant de passer à la section suivante. <|> mailman

199 Mot inconnu : Mailman => Enfin, démarrez Mailman : <|> mailman

205 Mot inconnu : DEFAULT_SERVER_LANGUAGE => DEFAULT_SERVER_LANGUAGE = 'fr' <|> default_server_language
205 Guillemets typographiques ouvrants. => DEFAULT_SERVER_LANGUAGE = 'fr' <|> ' => suggestions : ['“', '‘', '‹']
205 Guillemets typographiques fermants. => DEFAULT_SERVER_LANGUAGE = 'fr' <|> ' => suggestions : ['”', '’', '›']

211 Mot inconnu : Mailman => Nous allons maintenant voir comment administrer Mailman. Cette étape considère que l'installation de ce dernier a correctement été effectuée.  <|> mailman

213 Mot inconnu : Mailman => Mailman fournit une administration web facile d'utilisation. Pour y accéder, entrez le lien suivant dans votre navigateur internet : http://serveur/cgi-bin/mailman/admin <|> mailman

220 Mot inconnu : bounces => Les rebonds (bounces) correspondent à des refus de distribution du serveur de mail du destinataire. Les rebonds sont tracés dans le fichier /var/log/mailman/bounce <|> bounces

224 Mot inconnu : Mailman => Mailman fournit aussi une interface web pour les utilisateurs. Pour y accéder, entrez le lien suivant dans votre navigateur :  <|> mailman
227 Mot inconnu : mailman => La liste de diffusion par défaut, « mailman », devrait apparaître à l'écran. Si vous cliquez sur le nom de la liste de diffusion, l'interface affichera le formulaire de souscription. Vous pouvez entrer votre adresse électronique, votre nom (optionnel), et un mot de passe, afin de vous inscrire. Suivez les instructions contenues dans le courriel envoyé à la fin de l'inscription, pour finir cette dernière. <|> mailman

229 Mot inconnu : Handlers => ===== Handlers ===== <|> handlers

231 Mot inconnu : Mailman => Il peut être utile de modifier les mails que l’on envoie d’une manière n’étant pas prévue par Mailman. Dans cette optique on peut vouloir par exemple changer les en-têtes d’un mail, le corps des messages ou tout simplement effectuer une modération selon certains critères préprogrammés.  Un exemple concret est disponible dans la [[mailman#Je ne reçois pas mes propres mails depuis mon entreprise|FAQ de cette page]]. <|> mailman
231 Mot inconnu : mailman => Il peut être utile de modifier les mails que l’on envoie d’une manière n’étant pas prévue par Mailman. Dans cette optique on peut vouloir par exemple changer les en-têtes d’un mail, le corps des messages ou tout simplement effectuer une modération selon certains critères préprogrammés.  Un exemple concret est disponible dans la [[mailman#Je ne reçois pas mes propres mails depuis mon entreprise|FAQ de cette page]]. <|> mailman

233 Mot inconnu : Mailman => Le traitement des mails depuis leur réception jusqu’à leur renvoi à la liste est décomposé par Mailman en plusieurs phases, appelées « Handlers », dont l’ordre et l’usage est défini dans le fichier « Mailman/defaults.py » par la ligne suivante : <|> mailman
233 Mot inconnu : Handlers => Le traitement des mails depuis leur réception jusqu’à leur renvoi à la liste est décomposé par Mailman en plusieurs phases, appelées « Handlers », dont l’ordre et l’usage est défini dans le fichier « Mailman/defaults.py » par la ligne suivante : <|> handlers
233 Mot inconnu : Mailman => Le traitement des mails depuis leur réception jusqu’à leur renvoi à la liste est décomposé par Mailman en plusieurs phases, appelées « Handlers », dont l’ordre et l’usage est défini dans le fichier « Mailman/defaults.py » par la ligne suivante : <|> mailman
233 Mot inconnu : defaults => Le traitement des mails depuis leur réception jusqu’à leur renvoi à la liste est décomposé par Mailman en plusieurs phases, appelées « Handlers », dont l’ordre et l’usage est défini dans le fichier « Mailman/defaults.py » par la ligne suivante : <|> defaults
233 Mot inconnu : py => Le traitement des mails depuis leur réception jusqu’à leur renvoi à la liste est décomposé par Mailman en plusieurs phases, appelées « Handlers », dont l’ordre et l’usage est défini dans le fichier « Mailman/defaults.py » par la ligne suivante : <|> py

245 Mot inconnu : handlers => Tous les handlers de cette liste sont des fichiers contenant du code en Python et sont situés dans le répertoire « Mailman/Handlers ». Bien entendu il est possible de les modifier directement afin de personnaliser le comportement de l’application, mais un meilleur moyen est de créer un handler personnalisé et de l’insérer à l’endroit où on le souhaite dans le traitement. <|> handlers
245 Mot inconnu : Mailman => Tous les handlers de cette liste sont des fichiers contenant du code en Python et sont situés dans le répertoire « Mailman/Handlers ». Bien entendu il est possible de les modifier directement afin de personnaliser le comportement de l’application, mais un meilleur moyen est de créer un handler personnalisé et de l’insérer à l’endroit où on le souhaite dans le traitement. <|> mailman
245 Mot inconnu : Handlers => Tous les handlers de cette liste sont des fichiers contenant du code en Python et sont situés dans le répertoire « Mailman/Handlers ». Bien entendu il est possible de les modifier directement afin de personnaliser le comportement de l’application, mais un meilleur moyen est de créer un handler personnalisé et de l’insérer à l’endroit où on le souhaite dans le traitement. <|> handlers
245 Mot inconnu : handler => Tous les handlers de cette liste sont des fichiers contenant du code en Python et sont situés dans le répertoire « Mailman/Handlers ». Bien entendu il est possible de les modifier directement afin de personnaliser le comportement de l’application, mais un meilleur moyen est de créer un handler personnalisé et de l’insérer à l’endroit où on le souhaite dans le traitement. <|> handler

247 Mot inconnu : Handlers => ==== Handlers personnalisés==== <|> handlers

249 Mot inconnu : handlers => Les handlers personnalisés ont plusieurs avantages : <|> handlers

256 Mot inconnu : handler => Un handler est codé en python. Il doit nécessairement définir la fonction « process(mlist, msg, msgdata) » qui sera appelée par Mailman avec ces trois arguments : <|> handler
256 Il manque un espace avant la parenthèse. => Un handler est codé en python. Il doit nécessairement définir la fonction « process(mlist, msg, msgdata) » qui sera appelée par Mailman avec ces trois arguments : <|> ( => suggestions : [' (']
256 Mot inconnu : mlist => Un handler est codé en python. Il doit nécessairement définir la fonction « process(mlist, msg, msgdata) » qui sera appelée par Mailman avec ces trois arguments : <|> mlist
256 Mot inconnu : msg => Un handler est codé en python. Il doit nécessairement définir la fonction « process(mlist, msg, msgdata) » qui sera appelée par Mailman avec ces trois arguments : <|> msg
256 Mot inconnu : msgdata => Un handler est codé en python. Il doit nécessairement définir la fonction « process(mlist, msg, msgdata) » qui sera appelée par Mailman avec ces trois arguments : <|> msgdata
256 Mot inconnu : Mailman => Un handler est codé en python. Il doit nécessairement définir la fonction « process(mlist, msg, msgdata) » qui sera appelée par Mailman avec ces trois arguments : <|> mailman

261 Mot inconnu : handlers => Toutes les modifications qui sont effectuées dans cette fonction affecteront le message et donc le traitement qui sera effectué par les handlers suivants. Il convient donc de placer le handler personnalisé au bon endroit dans le pipeline de traitement du mail. <|> handlers
261 Mot inconnu : handler => Toutes les modifications qui sont effectuées dans cette fonction affecteront le message et donc le traitement qui sera effectué par les handlers suivants. Il convient donc de placer le handler personnalisé au bon endroit dans le pipeline de traitement du mail. <|> handler

263 Mot inconnu : handler => === Insertion du handler=== <|> handler

264 Mot inconnu : handler => Considérons que notre handler personnalisé a bien été créé et est sauvegardé dans le répertoire « Mailman/Handlers » sous le doux nom « MonHandler ». Il faut alors choisir où insérer le code créé. <|> handler
264 Mot inconnu : Mailman => Considérons que notre handler personnalisé a bien été créé et est sauvegardé dans le répertoire « Mailman/Handlers » sous le doux nom « MonHandler ». Il faut alors choisir où insérer le code créé. <|> mailman
264 Mot inconnu : Handlers => Considérons que notre handler personnalisé a bien été créé et est sauvegardé dans le répertoire « Mailman/Handlers » sous le doux nom « MonHandler ». Il faut alors choisir où insérer le code créé. <|> handlers
264 Mot inconnu : MonHandler => Considérons que notre handler personnalisé a bien été créé et est sauvegardé dans le répertoire « Mailman/Handlers » sous le doux nom « MonHandler ». Il faut alors choisir où insérer le code créé. <|> monhandler

265 Mot inconnu : handlers => Pour cela je vous laisse vous reporter à la liste de handlers que nous avons vu plus haut (le champ GLOBAL_PIPELINE dans le fichier « Defaults.py »). <|> handlers
265 Mot inconnu : GLOBAL_PIPELINE => Pour cela je vous laisse vous reporter à la liste de handlers que nous avons vu plus haut (le champ GLOBAL_PIPELINE dans le fichier « Defaults.py »). <|> global_pipeline
265 Mot inconnu : Defaults => Pour cela je vous laisse vous reporter à la liste de handlers que nous avons vu plus haut (le champ GLOBAL_PIPELINE dans le fichier « Defaults.py »). <|> defaults
265 Mot inconnu : py => Pour cela je vous laisse vous reporter à la liste de handlers que nous avons vu plus haut (le champ GLOBAL_PIPELINE dans le fichier « Defaults.py »). <|> py

266 Mot inconnu : handler => Pour l’exemple nous allons le positionner avant le handler « Moderate ».  <|> handler
266 Mot inconnu : Moderate => Pour l’exemple nous allons le positionner avant le handler « Moderate ».  <|> moderate

290 Mot inconnu : handler => Soit le pipeline global au complet ainsi que notre handler personnalisé inséré au bon endroit. Bien sûr si vous souhaitez remplacer « Moderate » par « MonHandler », vous supprimez « Moderate » du pipeline. <|> handler
290 Mot inconnu : Moderate => Soit le pipeline global au complet ainsi que notre handler personnalisé inséré au bon endroit. Bien sûr si vous souhaitez remplacer « Moderate » par « MonHandler », vous supprimez « Moderate » du pipeline. <|> moderate
290 Mot inconnu : MonHandler => Soit le pipeline global au complet ainsi que notre handler personnalisé inséré au bon endroit. Bien sûr si vous souhaitez remplacer « Moderate » par « MonHandler », vous supprimez « Moderate » du pipeline. <|> monhandler
290 Mot inconnu : Moderate => Soit le pipeline global au complet ainsi que notre handler personnalisé inséré au bon endroit. Bien sûr si vous souhaitez remplacer « Moderate » par « MonHandler », vous supprimez « Moderate » du pipeline. <|> moderate
292 Mot inconnu : MaListe => Ensuite pour l’appliquer à la liste « MaListe » il ne reste qu’à exécuter la commande : <|> maliste

298 Mot inconnu : Mailman => Enfin redémarrez Mailman : <|> mailman

306 Mot inconnu : Exim => ====Envoi de mails avec Exim==== <|> exim

307 Mot inconnu : exim => Si vous n'arrivez pas à envoyer de mails avec exim, vérifiez que vos fichiers logs ne contiennent pas une des erreurs suivantes : <|> exim

309 Mot inconnu : not => === 554 SMTP service not available === <|> not
309 Mot inconnu : available => === 554 SMTP service not available === <|> available

311 Incohérence avec “d’” : “autorisez” est une forme verbale conjuguée. => Il suffit d'autorisez l'accès au service exim en ajoutant dans le fichier /etc/hosts.allow la ligne : <|> autorisez => suggestions : ['autorisés', 'autorisée', 'autorisé', 'autorisées']
311 Mot inconnu : exim => Il suffit d'autorisez l'accès au service exim en ajoutant dans le fichier /etc/hosts.allow la ligne : <|> exim

314 Mot inconnu : sorry => === 553 sorry, your envelope sender domain must exist (#5.7.1) === <|> sorry
314 Mot inconnu : your => === 553 sorry, your envelope sender domain must exist (#5.7.1) === <|> your
314 Mot inconnu : envelope => === 553 sorry, your envelope sender domain must exist (#5.7.1) === <|> envelope
314 Mot inconnu : sender => === 553 sorry, your envelope sender domain must exist (#5.7.1) === <|> sender
314 Mot inconnu : domain => === 553 sorry, your envelope sender domain must exist (#5.7.1) === <|> domain
314 Mot inconnu : exist => === 553 sorry, your envelope sender domain must exist (#5.7.1) === <|> exist

316 Mot inconnu : primary_hostname => Modifiez le paramètre **primary_hostname** dans le fichier de configuration d'exim, /etc/mail/exim.conf, de telle sorte qu'il contienne votre nom de domaine : <|> primary_hostname
316 Mot inconnu : exim => Modifiez le paramètre **primary_hostname** dans le fichier de configuration d'exim, /etc/mail/exim.conf, de telle sorte qu'il contienne votre nom de domaine : <|> exim
320 Mot inconnu : from => Avec mon adresse professionnelle, je ne recevais pas mes propres mails, ni ceux venant d’autres personnes de ma société. Cela venait du fait que le serveur de messagerie de l’entreprise n’autorisait pas de mails entrant si le nom de domaine était celui de la boite. Afin de contourner le problème il faut simplement supprimer le nom de domaine du champ d’en-tête « from ». Nous allons donc créer un handler personnalisé nommé « RemoveDomain.py » que l’on va placer dans le dossier « Mailman/Handlers ». Il contient le code suivant : <|> from
320 Mot inconnu : handler => Avec mon adresse professionnelle, je ne recevais pas mes propres mails, ni ceux venant d’autres personnes de ma société. Cela venait du fait que le serveur de messagerie de l’entreprise n’autorisait pas de mails entrant si le nom de domaine était celui de la boite. Afin de contourner le problème il faut simplement supprimer le nom de domaine du champ d’en-tête « from ». Nous allons donc créer un handler personnalisé nommé « RemoveDomain.py » que l’on va placer dans le dossier « Mailman/Handlers ». Il contient le code suivant : <|> handler
320 Mot inconnu : RemoveDomain => Avec mon adresse professionnelle, je ne recevais pas mes propres mails, ni ceux venant d’autres personnes de ma société. Cela venait du fait que le serveur de messagerie de l’entreprise n’autorisait pas de mails entrant si le nom de domaine était celui de la boite. Afin de contourner le problème il faut simplement supprimer le nom de domaine du champ d’en-tête « from ». Nous allons donc créer un handler personnalisé nommé « RemoveDomain.py » que l’on va placer dans le dossier « Mailman/Handlers ». Il contient le code suivant : <|> removedomain
320 Mot inconnu : py => Avec mon adresse professionnelle, je ne recevais pas mes propres mails, ni ceux venant d’autres personnes de ma société. Cela venait du fait que le serveur de messagerie de l’entreprise n’autorisait pas de mails entrant si le nom de domaine était celui de la boite. Afin de contourner le problème il faut simplement supprimer le nom de domaine du champ d’en-tête « from ». Nous allons donc créer un handler personnalisé nommé « RemoveDomain.py » que l’on va placer dans le dossier « Mailman/Handlers ». Il contient le code suivant : <|> py
320 Mot inconnu : Mailman => Avec mon adresse professionnelle, je ne recevais pas mes propres mails, ni ceux venant d’autres personnes de ma société. Cela venait du fait que le serveur de messagerie de l’entreprise n’autorisait pas de mails entrant si le nom de domaine était celui de la boite. Afin de contourner le problème il faut simplement supprimer le nom de domaine du champ d’en-tête « from ». Nous allons donc créer un handler personnalisé nommé « RemoveDomain.py » que l’on va placer dans le dossier « Mailman/Handlers ». Il contient le code suivant : <|> mailman
320 Mot inconnu : Handlers => Avec mon adresse professionnelle, je ne recevais pas mes propres mails, ni ceux venant d’autres personnes de ma société. Cela venait du fait que le serveur de messagerie de l’entreprise n’autorisait pas de mails entrant si le nom de domaine était celui de la boite. Afin de contourner le problème il faut simplement supprimer le nom de domaine du champ d’en-tête « from ». Nous allons donc créer un handler personnalisé nommé « RemoveDomain.py » que l’on va placer dans le dossier « Mailman/Handlers ». Il contient le code suivant : <|> handlers

335 Mot inconnu : handler => Pour corriger le problème sur toutes les listes et éviter que cela arrive sur les listes futures, nous allons insérer ce handler de manière globale dans le pipeline : <|> handler
340 Mot inconnu : Cleanse => Pourquoi l’insérer avant « Cleanse » ? En fait on l’insère plutôt après « AvoidDuplicates ». Si nous l’avions inséré n’importe où avant ce handler, Mailman aurait considéré que vous n’étiez pas l’expéditeur du mail (vu que le nom de domaine est différent) et vous aurait donc envoyé une copie de votre propre mail malgré le fait que vous ayez configuré l’option « Recevez les messages que vous envoyez à la liste ? » à « Non ». <|> cleanse
340 Mot inconnu : AvoidDuplicates => Pourquoi l’insérer avant « Cleanse » ? En fait on l’insère plutôt après « AvoidDuplicates ». Si nous l’avions inséré n’importe où avant ce handler, Mailman aurait considéré que vous n’étiez pas l’expéditeur du mail (vu que le nom de domaine est différent) et vous aurait donc envoyé une copie de votre propre mail malgré le fait que vous ayez configuré l’option « Recevez les messages que vous envoyez à la liste ? » à « Non ». <|> avoidduplicates
340 Mot inconnu : handler => Pourquoi l’insérer avant « Cleanse » ? En fait on l’insère plutôt après « AvoidDuplicates ». Si nous l’avions inséré n’importe où avant ce handler, Mailman aurait considéré que vous n’étiez pas l’expéditeur du mail (vu que le nom de domaine est différent) et vous aurait donc envoyé une copie de votre propre mail malgré le fait que vous ayez configuré l’option « Recevez les messages que vous envoyez à la liste ? » à « Non ». <|> handler
340 Mot inconnu : Mailman => Pourquoi l’insérer avant « Cleanse » ? En fait on l’insère plutôt après « AvoidDuplicates ». Si nous l’avions inséré n’importe où avant ce handler, Mailman aurait considéré que vous n’étiez pas l’expéditeur du mail (vu que le nom de domaine est différent) et vous aurait donc envoyé une copie de votre propre mail malgré le fait que vous ayez configuré l’option « Recevez les messages que vous envoyez à la liste ? » à « Non ». <|> mailman

342 Mot inconnu : MailMan => ==== Migrer MailMan entre 2 serveurs ==== <|> mailman

366 Mot inconnu : Mailman => ==== Mailman ne fonctionne qu'en local après migration vers Precise 12.04 (Relay access denied) ==== <|> mailman
366 Mot inconnu : Precise => ==== Mailman ne fonctionne qu'en local après migration vers Precise 12.04 (Relay access denied) ==== <|> precise
366 Mot inconnu : Relay => ==== Mailman ne fonctionne qu'en local après migration vers Precise 12.04 (Relay access denied) ==== <|> relay
366 Mot inconnu : access => ==== Mailman ne fonctionne qu'en local après migration vers Precise 12.04 (Relay access denied) ==== <|> access
366 Mot inconnu : denied => ==== Mailman ne fonctionne qu'en local après migration vers Precise 12.04 (Relay access denied) ==== <|> denied

368 Mot inconnu : mailman => Si l'envoi de mails depuis l'extérieur sur la liste échoue ou que mailman n'arrive pas à envoyer les mails à tous les destinataires, cela peut provenir d'un problème de résolution DNS. <|> mailman

370 Mot inconnu : Postfix => Un exemple de log Postfix : <|> postfix

394 Mot inconnu : Dbmail => ===== Dbmail ===== <|> dbmail

395 Mot inconnu : dbmail => [[dbmail#mailman|Dbmail et Mailman]] <|> dbmail
395 Mot inconnu : Dbmail => [[dbmail#mailman|Dbmail et Mailman]] <|> dbmail
395 Mot inconnu : Mailman => [[dbmail#mailman|Dbmail et Mailman]] <|> mailman
401 Mot inconnu : handlers => //Contributeurs : [[utilisateurs:Kmeleon]] ([[https://wiki.ubuntu.com/Mailman|traduction]]), [[utilisateurs:Ner0lph]] (mise aux normes), [[utilisateurs:piccolo]] (handlers).// <|> handlers
