
5 Mot inconnu : MingW => ====== Comment utiliser MingW[32|64] pour faire des exécutables Windows ? ====== | mingw
6 Mot inconnu : MingW => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. | mingw
6 Mot inconnu : MingW => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. | mingw
6 Mot inconnu : GCC => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. | gcc
6 Mot inconnu : MingW => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. | mingw
6 Mot inconnu : GCC => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. | gcc

8 Espace(s) en fin de ligne à supprimer. => Pour suivre ce tutoriel vous devez savoir  |   => suggestions : ['']

9 Il manque un espace. => [[tutoriel:console_ligne_de_commande|vous déplacer dans l'arborescence en ligne de commande]]. | console_ligne_de_commande => suggestions : [' console_ligne_de_commande']
9 Mot inconnu : console_ligne_de_commande => [[tutoriel:console_ligne_de_commande|vous déplacer dans l'arborescence en ligne de commande]]. | console_ligne_de_commande

11 Mot inconnu : gcc => Nous allons uniquement utiliser du C ici, pour du C++ remplacer **gcc** par **g++**. | gcc

22 Guillemets typographiques ouvrants. => Si vous n'en avez pas voici un code à copier-coller dans un fichier (de préférence "main.c") | " => suggestions : ['«\xa0', '“']
22 Guillemets typographiques fermants. => Si vous n'en avez pas voici un code à copier-coller dans un fichier (de préférence "main.c") | " => suggestions : ['\xa0»', '”']

49 Mot inconnu : MingW32 => ==== Installer MingW32 ==== | mingw32
50 Mot inconnu : x86_64-w64-mingw32-gcc => Pour compiler en 32 bits, installer la version 64 bits ci-dessous et remplacer tous les « x86_64-w64-mingw32-gcc » par « i686-w64-mingw32-gcc ». | x86_64-w64-mingw32-gcc
50 Mot inconnu : i686-w64-mingw32-gcc => Pour compiler en 32 bits, installer la version 64 bits ci-dessous et remplacer tous les « x86_64-w64-mingw32-gcc » par « i686-w64-mingw32-gcc ». | i686-w64-mingw32-gcc

51 Mot inconnu : Mingw64 => ==== Installer Mingw64 ==== | mingw64
52 Mot inconnu : gcc-mingw-w64 => installer **[[apt>gcc-mingw-w64]]**. | gcc-mingw-w64

61 Mot inconnu : exe => <note>Le nom de l'exécutable est **bonjour.exe** arbitrairement pour distinguer les exécutables Linux des exécutables Windows  | exe
61 Espace(s) en fin de ligne à supprimer. => <note>Le nom de l'exécutable est **bonjour.exe** arbitrairement pour distinguer les exécutables Linux des exécutables Windows  |   => suggestions : ['']

64 Mot inconnu : TADA => TADA ! un bel exécutable fut créé dans le dossier courant, faites  | tada
64 Espace(s) en fin de ligne à supprimer. => TADA ! un bel exécutable fut créé dans le dossier courant, faites  |   => suggestions : ['']
71 Mot inconnu : makefile => ==== Le « makefile » ==== | makefile

74 Mot inconnu : makefile => Créons maintenant un fichier //makefile// dans le même dossier que « main.c »: | makefile
81 Mot inconnu : x86_64-w64-mingw32-gcc => **Note :** Il y a une tabulation et pas une suite d'espaces devant « x86_64-w64-mingw32-gcc » sur la 3ème ligne de l'exemple. Cette tabulation est //obligatoire//. | x86_64-w64-mingw32-gcc
81 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… => **Note :** Il y a une tabulation et pas une suite d'espaces devant « x86_64-w64-mingw32-gcc » sur la 3ème ligne de l'exemple. Cette tabulation est //obligatoire//. | 3ème => suggestions : ['3ᵉ']

93 Incohérence avec “on” : “accueil” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => on accueil vos erreurs sur [[https://forum.ubuntu-fr.org/|le forum]] et nous mettrons les solutions ici | accueil => suggestions : ['accueille']
96 Pléonasme. => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». | suffit simplement => suggestions : ['suffit']
96 Mot inconnu : gcc => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». | gcc
96 Mot inconnu : x86_64-w64-mingw32-gcc => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». | x86_64-w64-mingw32-gcc
96 Mot inconnu : x86_64-w64-mingw32-g => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». | x86_64-w64-mingw32-g

98 Mot inconnu : Visual => N'oubliez pas cependant que les programmes seront bien plus gros en taille que ceux produits pour Linux ou par Microsoft Visual Studio. Ceci est dû au fait que la bibliothèque standard doit être liée statiquement avec l'exécutable.  | visual
98 Espace(s) en fin de ligne à supprimer. => N'oubliez pas cependant que les programmes seront bien plus gros en taille que ceux produits pour Linux ou par Microsoft Visual Studio. Ceci est dû au fait que la bibliothèque standard doit être liée statiquement avec l'exécutable.  |   => suggestions : ['']
