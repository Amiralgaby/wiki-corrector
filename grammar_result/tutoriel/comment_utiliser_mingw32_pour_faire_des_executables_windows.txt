
5 Mot inconnu : MingW [[24:29]] => ====== Comment utiliser MingW[32|64] pour faire des exécutables Windows ? ====== <|> mingw
6 Mot inconnu : MingW [[131:136]] => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. <|> mingw
6 Mot inconnu : MingW [[138:143]] => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. <|> mingw
6 Mot inconnu : MingW [[171:176]] => Il peut arriver que pour certaines raisons l'on souhaite créer des exécutables pour Windows depuis Linux. Il existe une solution : MingW. MingW s'utilise avec GCC ou G++. MingW est le portage sous Windows de GCC. <|> mingw

8 Espace(s) en fin de ligne à supprimer. [[41:42]] => Pour suivre ce tutoriel vous devez savoir  <|>  
15 Mot inconnu : MingW64 [[20:27]] =>   * Installation de MingW64 <|> mingw64
18 Mot inconnu : make [[26:30]] =>   * Supplément : faire un make file pour faciliter la commande de build <|> make

22 Guillemets typographiques ouvrants. [[83:84]] => Si vous n'en avez pas voici un code à copier-coller dans un fichier (de préférence "main.c") <|> " => suggestions : « “
22 Guillemets typographiques fermants. [[90:91]] => Si vous n'en avez pas voici un code à copier-coller dans un fichier (de préférence "main.c") <|> " => suggestions :  »”

49 Mot inconnu : MingW32 [[15:22]] => ==== Installer MingW32 ==== <|> mingw32
50 Mot inconnu : x86_64-w64-mingw32-gcc [[90:112]] => Pour compiler en 32 bits, installer la version 64 bits ci-dessous et remplacer tous les « x86_64-w64-mingw32-gcc » par « i686-w64-mingw32-gcc ». <|> x86_64-w64-mingw32-gcc
50 Mot inconnu : i686-w64-mingw32-gcc [[121:141]] => Pour compiler en 32 bits, installer la version 64 bits ci-dessous et remplacer tous les « x86_64-w64-mingw32-gcc » par « i686-w64-mingw32-gcc ». <|> i686-w64-mingw32-gcc

51 Mot inconnu : Mingw64 [[15:22]] => ==== Installer Mingw64 ==== <|> mingw64
61 Espace(s) en fin de ligne à supprimer. [[125:126]] => <note>Le nom de l'exécutable est **bonjour.exe** arbitrairement pour distinguer les exécutables Linux des exécutables Windows  <|>  

64 Mot inconnu : TADA [[0:4]] => TADA ! un bel exécutable fut créé dans le dossier courant, faites  <|> tada
64 Espace(s) en fin de ligne à supprimer. [[65:66]] => TADA ! un bel exécutable fut créé dans le dossier courant, faites  <|>  
81 Mot inconnu : x86_64-w64-mingw32-gcc [[69:91]] => **Note :** Il y a une tabulation et pas une suite d'espaces devant « x86_64-w64-mingw32-gcc » sur la 3ème ligne de l'exemple. Cette tabulation est //obligatoire//. <|> x86_64-w64-mingw32-gcc
81 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[101:105]] => **Note :** Il y a une tabulation et pas une suite d'espaces devant « x86_64-w64-mingw32-gcc » sur la 3ème ligne de l'exemple. Cette tabulation est //obligatoire//. <|> 3ème => suggestions : 3ᵉ
96 Pléonasme. [[76:93]] => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». <|> suffit simplement => suggestions : suffit
96 Mot inconnu : x86_64-w64-mingw32-gcc [[146:168]] => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». <|> x86_64-w64-mingw32-gcc
96 Mot inconnu : x86_64-w64-mingw32-g [[188:208]] => Vous pouvez maintenant créer des exécutables Windows depuis Linux : il vous suffit simplement de remplacer lors de vos compilations « gcc » par « x86_64-w64-mingw32-gcc » et « g++ » par « x86_64-w64-mingw32-g++ ». <|> x86_64-w64-mingw32-g
98 Espace(s) en fin de ligne à supprimer. [[231:232]] => N'oubliez pas cependant que les programmes seront bien plus gros en taille que ceux produits pour Linux ou par Microsoft Visual Studio. Ceci est dû au fait que la bibliothèque standard doit être liée statiquement avec l'exécutable.  <|>  
