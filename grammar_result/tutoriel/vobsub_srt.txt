
5 Mot inconnu : VobSub => ====== Conversion de sous-titres VobSub en SRT ====== | vobsub
5 Mot inconnu : SRT => ====== Conversion de sous-titres VobSub en SRT ====== | srt

7 Mot inconnu : VobSub => Ce tutoriel décrit une façon de convertir des sous-titres **VobSub** en sous-titres **SRT**. | vobsub
7 Mot inconnu : SRT => Ce tutoriel décrit une façon de convertir des sous-titres **VobSub** en sous-titres **SRT**. | srt

11 Mot inconnu : SRT => Les sous-titres **SRT** (appelés aussi SubRip) sont au format texte, facilement éditables, peuvent être intégrés à des fichiers vidéos et sont aisément lus par les lecteurs multimédias. | srt
11 Mot inconnu : SubRip => Les sous-titres **SRT** (appelés aussi SubRip) sont au format texte, facilement éditables, peuvent être intégrés à des fichiers vidéos et sont aisément lus par les lecteurs multimédias. | subrip

19 Mot inconnu : Nautilus => La méthode ci-dessous utilise différents logiciels, combinant interface graphique, ligne de commande et script Nautilus, mais reste simple malgré cela. | nautilus

32 Mot inconnu : Nautilus => ==== Script Nautilus ==== | nautilus

41 Mot inconnu : printf => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | | printf
41 Il manque un espace. => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | | s => suggestions : [' s']
41 Mot inconnu : NAUTILUS_SCRIPT_SELECTED_FILE_PATHS => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | | nautilus_script_selected_file_paths
41 Guillemets typographiques fermants. => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | | " => suggestions : ['\xa0»', '”']

42 Mot inconnu : while => while read -r arg | while
42 Mot inconnu : read => while read -r arg | read
42 Il manque un espace à côté du tiret. => while read -r arg |  - => suggestions : [' – ', ' — ']
42 Mot inconnu : arg => while read -r arg | arg

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tesseract "$arg" "$arg" -l fra -psm 6 |    => suggestions : ['']
44 Mot inconnu : arg =>   tesseract "$arg" "$arg" -l fra -psm 6 | arg
44 Guillemets typographiques fermants. =>   tesseract "$arg" "$arg" -l fra -psm 6 | " => suggestions : ['\xa0»', '”']
44 Mot inconnu : arg =>   tesseract "$arg" "$arg" -l fra -psm 6 | arg
44 Guillemets typographiques fermants. =>   tesseract "$arg" "$arg" -l fra -psm 6 | " => suggestions : ['\xa0»', '”']
44 Mot inconnu : fra =>   tesseract "$arg" "$arg" -l fra -psm 6 | fra
44 Il manque un espace à côté du tiret. =>   tesseract "$arg" "$arg" -l fra -psm 6 |  - => suggestions : [' – ', ' — ']
44 Mot inconnu : psm =>   tesseract "$arg" "$arg" -l fra -psm 6 | psm

45 Mot inconnu : done => done | done

48 Mot inconnu : XFCE => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | xfce
48 Mot inconnu : Xubuntu => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | xubuntu
48 Mot inconnu : Thunar => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | thunar
48 Mot inconnu : OCR_Tesseract => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | ocr_tesseract
48 Mot inconnu : sh => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | sh
48 Il manque un espace. => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | f => suggestions : [' F']
48 Guillemets typographiques fermants. => Sous XFCE / Xubuntu, vous pouvez créer le script ci-dessous, et configurer une action personnalisée dans Thunar avec la commande : ''/chemin/OCR_Tesseract.sh %F'' | '' => suggestions : ['\xa0»', '”']

53 Mot inconnu : arg => for arg in $@ | arg

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tesseract "$arg" "$arg" -l fra -psm 6 |    => suggestions : ['']
55 Mot inconnu : arg =>   tesseract "$arg" "$arg" -l fra -psm 6 | arg
55 Guillemets typographiques fermants. =>   tesseract "$arg" "$arg" -l fra -psm 6 | " => suggestions : ['\xa0»', '”']
55 Mot inconnu : arg =>   tesseract "$arg" "$arg" -l fra -psm 6 | arg
55 Guillemets typographiques fermants. =>   tesseract "$arg" "$arg" -l fra -psm 6 | " => suggestions : ['\xa0»', '”']
55 Mot inconnu : fra =>   tesseract "$arg" "$arg" -l fra -psm 6 | fra
55 Il manque un espace à côté du tiret. =>   tesseract "$arg" "$arg" -l fra -psm 6 |  - => suggestions : [' – ', ' — ']
55 Mot inconnu : psm =>   tesseract "$arg" "$arg" -l fra -psm 6 | psm

56 Mot inconnu : done => done | done

59 Mot inconnu : nautilus => Si vous n'arrivez pas à installer le script dans nautilus, vous pouvez placer et lancer ce script à l'intérieur du dossier où se trouvent les fichiers : | nautilus

61 Mot inconnu : NPROC => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | nproc
61 Mot inconnu : nproc => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | nproc
61 Mot inconnu : all => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | all
61 Mot inconnu : awk => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | awk
61 Mot inconnu : print => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | print
61 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” s’il s’agit d’une soustraction [3] ou de représenter un nombre négatif [4].) => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor |  -  => suggestions : [' – ', ' — ', ' − ', ' −']
61 Mot inconnu : number => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | number
61 Mot inconnu : of => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | of
61 Mot inconnu : processor => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor | processor

65 Mot inconnu : echo => 	echo "$fichier" | echo
65 Guillemets typographiques fermants. => 	echo "$fichier" | " => suggestions : ['\xa0»', '”']

66 Espace(s) surnuméraire(s) à supprimer. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null |    => suggestions : [' ']
66 Guillemets typographiques fermants. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null | " => suggestions : ['\xa0»', '”']
66 Guillemets typographiques fermants. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null | " => suggestions : ['\xa0»', '”']
66 Mot inconnu : fra => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null | fra
66 Il manque un espace à côté du tiret. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null |  - => suggestions : [' – ', ' — ']
66 Mot inconnu : psm => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null | psm

68 Pas d’espace après ce signe. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then | [  => suggestions : ['[']
68 Il manque un espace à côté du tiret. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then |  - => suggestions : [' – ', ' — ']
68 Mot inconnu : wc => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then | wc
68 Il manque un espace à côté du tiret. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then |  - => suggestions : [' – ', ' — ']
68 Mot inconnu : gt => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then | gt
68 Mot inconnu : NPROC => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then | nproc
68 Pas d’espace avant ce signe. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then |  ] => suggestions : [']']
68 Mot inconnu : then => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then | then

69 Mot inconnu : wait => 		wait -n | wait
69 Il manque un espace à côté du tiret. => 		wait -n |  - => suggestions : [' – ', ' — ']

71 Mot inconnu : done => done | done

72 Mot inconnu : wait => wait | wait

77 Mot inconnu : VobSub => ==== Obtenir le sous-titrage VobSub ==== | vobsub

79 Mot inconnu : VobSub => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. | vobsub
79 Guillemets fermants. => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. |  '' => suggestions : ['\xa0»', '”']
79 Mot inconnu : idx => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. | idx
79 Guillemets typographiques fermants. => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. | '' => suggestions : ['\xa0»', '”']
79 Guillemets fermants. => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. |  '' => suggestions : ['\xa0»', '”']
79 Mot inconnu : sub => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. | sub
79 Guillemets typographiques fermants. => Un sous-titrage VobSub est composé de 2 fichiers : ''.idx'' + ''.sub''. | '' => suggestions : ['\xa0»', '”']

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). |    => suggestions : ['']
82 Mot inconnu : Avidemux =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). | avidemux
82 Mot inconnu : VOB =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). | vob
82 Il manque un espace. =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). | vobsub => suggestions : [' VobSub']
82 Mot inconnu : VobSub =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). | vobsub

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * À partir d'un fichier MKV : **MKV-Extractor-GUI** |    => suggestions : ['']
83 Mot inconnu : MKV =>   * À partir d'un fichier MKV : **MKV-Extractor-GUI** | mkv
83 Mot inconnu : MKV-Extractor-GUI =>   * À partir d'un fichier MKV : **MKV-Extractor-GUI** | mkv-extractor-gui

87 Mot inconnu : TIFF => Pour extraire les images des sous-titres au format TIFF, on utilise la commande suivante : | tiff

93 Mot inconnu : __Paramètres__ => __Paramètres__ : | __paramètres__

95 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. |    => suggestions : ['']
95 Guillemets fermants. =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. |  '' => suggestions : ['\xa0»', '”']
95 Mot inconnu : idx =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. | idx
95 Guillemets typographiques fermants. =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. | '' => suggestions : ['\xa0»', '”']
95 Guillemets fermants. =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. |  '' => suggestions : ['\xa0»', '”']
95 Mot inconnu : sub =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. | sub
95 Guillemets typographiques fermants. =>   * ''<nom du vobsub>'' est le nom du fichier de sous-titres, sans les extensions ''.idx'' et ''.sub''. | '' => suggestions : ['\xa0»', '”']

99 Guillemets fermants. => Cela va générer toute une série de fichiers ''.tif'' : chacune de ces images est un sous-titre. |  '' => suggestions : ['\xa0»', '”']
99 Guillemets typographiques fermants. => Cela va générer toute une série de fichiers ''.tif'' : chacune de ces images est un sous-titre. | '' => suggestions : ['\xa0»', '”']
101 Guillemets fermants. => Attention, cela peut faire beaucoup de fichiers : si votre vidéo a 1000 sous-titres, il y aura 1000 fichiers ''.tif''. |  '' => suggestions : ['\xa0»', '”']
101 Guillemets typographiques fermants. => Attention, cela peut faire beaucoup de fichiers : si votre vidéo a 1000 sous-titres, il y aura 1000 fichiers ''.tif''. | '' => suggestions : ['\xa0»', '”']

103 Guillemets fermants. => Un fichier ''.xml'' est également généré, qui contient l'indexation des sous-titres au format XML. |  '' => suggestions : ['\xa0»', '”']
103 Mot inconnu : xml => Un fichier ''.xml'' est également généré, qui contient l'indexation des sous-titres au format XML. | xml
103 Guillemets typographiques fermants. => Un fichier ''.xml'' est également généré, qui contient l'indexation des sous-titres au format XML. | '' => suggestions : ['\xa0»', '”']

107 Guillemets fermants. => Sélectionner tous les fichiers ''.tif'' et lancer le script Nautilus "OCR_Tesseract". |  '' => suggestions : ['\xa0»', '”']
107 Guillemets typographiques fermants. => Sélectionner tous les fichiers ''.tif'' et lancer le script Nautilus "OCR_Tesseract". | '' => suggestions : ['\xa0»', '”']
107 Mot inconnu : Nautilus => Sélectionner tous les fichiers ''.tif'' et lancer le script Nautilus "OCR_Tesseract". | nautilus
107 Guillemets typographiques ouvrants. => Sélectionner tous les fichiers ''.tif'' et lancer le script Nautilus "OCR_Tesseract". | " => suggestions : ['«\xa0', '“']
107 Mot inconnu : OCR_Tesseract => Sélectionner tous les fichiers ''.tif'' et lancer le script Nautilus "OCR_Tesseract". | ocr_tesseract
107 Guillemets typographiques fermants. => Sélectionner tous les fichiers ''.tif'' et lancer le script Nautilus "OCR_Tesseract". | " => suggestions : ['\xa0»', '”']

111 Guillemets typographiques ouvrants. => Vous pouvez aussi lancer le script "Tesseract.sh" dans le dossier où se trouvent les fichiers. | " => suggestions : ['«\xa0', '“']
111 Mot inconnu : sh => Vous pouvez aussi lancer le script "Tesseract.sh" dans le dossier où se trouvent les fichiers. | sh
111 Guillemets typographiques fermants. => Vous pouvez aussi lancer le script "Tesseract.sh" dans le dossier où se trouvent les fichiers. | " => suggestions : ['\xa0»', '”']

113 Guillemets fermants. => Cela va générer un fichier ''.txt'' pour chaque fichier ''.tif'', contenant le texte du sous-titre. |  '' => suggestions : ['\xa0»', '”']
113 Mot inconnu : txt => Cela va générer un fichier ''.txt'' pour chaque fichier ''.tif'', contenant le texte du sous-titre. | txt
113 Guillemets typographiques fermants. => Cela va générer un fichier ''.txt'' pour chaque fichier ''.tif'', contenant le texte du sous-titre. | '' => suggestions : ['\xa0»', '”']
113 Guillemets fermants. => Cela va générer un fichier ''.txt'' pour chaque fichier ''.tif'', contenant le texte du sous-titre. |  '' => suggestions : ['\xa0»', '”']
113 Guillemets typographiques fermants. => Cela va générer un fichier ''.txt'' pour chaque fichier ''.tif'', contenant le texte du sous-titre. | '' => suggestions : ['\xa0»', '”']

115 Mot inconnu : SRT => ==== Générer le fichier de sous-titres SRT ==== | srt

122 Mot inconnu : __Paramètres__ => __Paramètres__ : | __paramètres__

123 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) |    => suggestions : ['']
123 Guillemets typographiques ouvrants. =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) | '' => suggestions : ['«\xa0', '“']
123 Mot inconnu : xml =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) | xml
123 Guillemets typographiques fermants. =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) | '' => suggestions : ['\xa0»', '”']
123 Guillemets fermants. =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) |  '' => suggestions : ['\xa0»', '”']
123 Mot inconnu : xml =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) | xml
123 Guillemets typographiques fermants. =>   * ''nom.xml'' : le nom du fichier ''.xml'' (voir étape 2) | '' => suggestions : ['\xa0»', '”']

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. |    => suggestions : ['']
124 Guillemets typographiques ouvrants. =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. | '' => suggestions : ['«\xa0', '“']
124 Mot inconnu : srt =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. | srt
124 Guillemets typographiques fermants. =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. | '' => suggestions : ['\xa0»', '”']
124 Guillemets fermants. =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. |  '' => suggestions : ['\xa0»', '”']
124 Mot inconnu : srt =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. | srt
124 Guillemets typographiques fermants. =>   * ''nom.srt'' : le nom du fichier de sous-titres ''.srt'' que l'on veut créer. | '' => suggestions : ['\xa0»', '”']

126 Guillemets fermants. => Un fichier de sous-titres ''.srt'' est généré. |  '' => suggestions : ['\xa0»', '”']
126 Mot inconnu : srt => Un fichier de sous-titres ''.srt'' est généré. | srt
126 Guillemets typographiques fermants. => Un fichier de sous-titres ''.srt'' est généré. | '' => suggestions : ['\xa0»', '”']
