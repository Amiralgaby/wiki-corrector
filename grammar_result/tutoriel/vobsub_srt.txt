
5 Mot inconnu : VobSub => ====== Conversion de sous-titres VobSub en SRT ====== <|> vobsub
5 Mot inconnu : SRT => ====== Conversion de sous-titres VobSub en SRT ====== <|> srt

7 Mot inconnu : VobSub => Ce tutoriel décrit une façon de convertir des sous-titres **VobSub** en sous-titres **SRT**. <|> vobsub
7 Mot inconnu : SRT => Ce tutoriel décrit une façon de convertir des sous-titres **VobSub** en sous-titres **SRT**. <|> srt

11 Mot inconnu : SRT => Les sous-titres **SRT** (appelés aussi SubRip) sont au format texte, facilement éditables, peuvent être intégrés à des fichiers vidéos et sont aisément lus par les lecteurs multimédias. <|> srt
11 Mot inconnu : SubRip => Les sous-titres **SRT** (appelés aussi SubRip) sont au format texte, facilement éditables, peuvent être intégrés à des fichiers vidéos et sont aisément lus par les lecteurs multimédias. <|> subrip

19 Mot inconnu : Nautilus => La méthode ci-dessous utilise différents logiciels, combinant interface graphique, ligne de commande et script Nautilus, mais reste simple malgré cela. <|> nautilus

32 Mot inconnu : Nautilus => ==== Script Nautilus ==== <|> nautilus

41 Mot inconnu : printf => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | <|> printf
41 Il manque un espace. => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | <|> s => suggestions : [' s']
41 Mot inconnu : NAUTILUS_SCRIPT_SELECTED_FILE_PATHS => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | <|> nautilus_script_selected_file_paths
41 Guillemets typographiques fermants. => printf %s "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | <|> " => suggestions : ['\xa0»', '”']

42 Mot inconnu : while => while read -r arg <|> while
42 Mot inconnu : read => while read -r arg <|> read
42 Il manque un espace à côté du tiret. => while read -r arg <|>  - => suggestions : [' – ', ' — ']
42 Mot inconnu : arg => while read -r arg <|> arg

45 Mot inconnu : done => done <|> done

53 Mot inconnu : arg => for arg in $@ <|> arg

56 Mot inconnu : done => done <|> done

59 Mot inconnu : nautilus => Si vous n'arrivez pas à installer le script dans nautilus, vous pouvez placer et lancer ce script à l'intérieur du dossier où se trouvent les fichiers : <|> nautilus

61 Mot inconnu : NPROC => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> nproc
61 Mot inconnu : nproc => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> nproc
61 Mot inconnu : all => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> all
61 Mot inconnu : awk => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> awk
61 Mot inconnu : print => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> print
61 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” s’il s’agit d’une soustraction [3] ou de représenter un nombre négatif [4].) => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|>  -  => suggestions : [' – ', ' — ', ' − ', ' −']
61 Mot inconnu : number => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> number
61 Mot inconnu : of => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> of
61 Mot inconnu : processor => NPROC=$(nproc --all| awk '{ print $1 - 1 }')        # Set number of processor <|> processor

65 Mot inconnu : echo => 	echo "$fichier" <|> echo
65 Guillemets typographiques fermants. => 	echo "$fichier" <|> " => suggestions : ['\xa0»', '”']

66 Guillemets typographiques fermants. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null <|> " => suggestions : ['\xa0»', '”']
66 Guillemets typographiques fermants. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null <|> " => suggestions : ['\xa0»', '”']
66 Mot inconnu : fra => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null <|> fra
66 Il manque un espace à côté du tiret. => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null <|>  - => suggestions : [' – ', ' — ']
66 Mot inconnu : psm => 	tesseract  "$fichier" "$fichier" -l fra -psm 6 &>/dev/null <|> psm

68 Pas d’espace après ce signe. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|> [  => suggestions : ['[']
68 Il manque un espace à côté du tiret. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|>  - => suggestions : [' – ', ' — ']
68 Mot inconnu : wc => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|> wc
68 Il manque un espace à côté du tiret. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|>  - => suggestions : [' – ', ' — ']
68 Mot inconnu : gt => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|> gt
68 Mot inconnu : NPROC => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|> nproc
68 Pas d’espace avant ce signe. => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|>  ] => suggestions : [']']
68 Mot inconnu : then => 	if [[ $(jobs -r -p | wc -l) -gt $NPROC ]]; then <|> then

69 Mot inconnu : wait => 		wait -n <|> wait
69 Il manque un espace à côté du tiret. => 		wait -n <|>  - => suggestions : [' – ', ' — ']

71 Mot inconnu : done => done <|> done

72 Mot inconnu : wait => wait <|> wait

77 Mot inconnu : VobSub => ==== Obtenir le sous-titrage VobSub ==== <|> vobsub
82 Mot inconnu : Avidemux =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). <|> avidemux
82 Mot inconnu : VOB =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). <|> vob
82 Il manque un espace. =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). <|> vobsub => suggestions : [' VobSub']
82 Mot inconnu : VobSub =>   * À partir d'un DVD : **Avidemux** possède un outil pour extraire les sous-titres (menu Outils > VOB%% -> %%VobSub). <|> vobsub
83 Mot inconnu : MKV =>   * À partir d'un fichier MKV : **MKV-Extractor-GUI** <|> mkv
83 Mot inconnu : MKV-Extractor-GUI =>   * À partir d'un fichier MKV : **MKV-Extractor-GUI** <|> mkv-extractor-gui

87 Mot inconnu : TIFF => Pour extraire les images des sous-titres au format TIFF, on utilise la commande suivante : <|> tiff

93 Mot inconnu : __Paramètres__ => __Paramètres__ : <|> __paramètres__

111 Guillemets typographiques ouvrants. => Vous pouvez aussi lancer le script "Tesseract.sh" dans le dossier où se trouvent les fichiers. <|> " => suggestions : ['«\xa0', '“']
111 Mot inconnu : sh => Vous pouvez aussi lancer le script "Tesseract.sh" dans le dossier où se trouvent les fichiers. <|> sh
111 Guillemets typographiques fermants. => Vous pouvez aussi lancer le script "Tesseract.sh" dans le dossier où se trouvent les fichiers. <|> " => suggestions : ['\xa0»', '”']

115 Mot inconnu : SRT => ==== Générer le fichier de sous-titres SRT ==== <|> srt

122 Mot inconnu : __Paramètres__ => __Paramètres__ : <|> __paramètres__
