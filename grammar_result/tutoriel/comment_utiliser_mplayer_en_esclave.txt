2 Mot inconnu : mplayer => {{tag>mplayer tutoriel}}

6 Mot inconnu : Mplayer => ====== Comment utiliser Mplayer en esclave ? ======
6 Il manque un espace insécable. => ====== Comment utiliser Mplayer en esclave ? ======
10 Mot inconnu : Environnement_de_bureau => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].
10 Il manque un espace. => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].

12 Il manque un espace insécable. => Cette méthode est plutôt déconseillée aux adeptes de solutions «usine à gaz», qui préféreront alors une interface graphique complète, il existe de nombreux [[:lecteur_audio|lecteurs de musique]] et [[:lecture_et_encodage_de_fichiers_videos|lecteurs vidéos]] de qualité.
12 Il manque un espace insécable. => Cette méthode est plutôt déconseillée aux adeptes de solutions «usine à gaz», qui préféreront alors une interface graphique complète, il existe de nombreux [[:lecteur_audio|lecteurs de musique]] et [[:lecture_et_encodage_de_fichiers_videos|lecteurs vidéos]] de qualité.

16 Mot inconnu : mplayer => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Il manque un espace insécable. => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Mot inconnu : backend => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Il manque un espace insécable. => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Mot inconnu : mplayer => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Accord de nombre erroné avec « connaissance ». => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Accord de nombre erroné avec « rapides ». => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Mot inconnu : mplayer => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.

18 Mot inconnu : bash => man bash</code>
19 Mot inconnu : Flux_standard => il faut aussi comprendre les notions de [[wpfr>Flux_standard|flux]] et de redirection de flux.

21 Il manque un espace. => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : mplayer => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : mplayer => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : Tube_nommé => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Forme interrogative ? Mettez un trait d’union. => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.

23 Mot inconnu : Let's => ===== Let's go ? =====
23 Il manque un espace insécable. => ===== Let's go ? =====

25 Mot inconnu : mplayer => Tout d'abord, il faut trouver la commande adéquate pour lancer mplayer. Le manuel nous informe qu'il faut utiliser l'argument -slave.
25 Il manque un espace à côté du tiret. => Tout d'abord, il faut trouver la commande adéquate pour lancer mplayer. Le manuel nous informe qu'il faut utiliser l'argument -slave.

27 Il manque un espace insécable. => NOTE : Voir −input cmdlist pour une liste des commandes esclaves, et DOCS/tech/slave.txt pour leur description.</code>
27 Mot inconnu : cmdlist => NOTE : Voir −input cmdlist pour une liste des commandes esclaves, et DOCS/tech/slave.txt pour leur description.</code>
27 Mot inconnu : txt => NOTE : Voir −input cmdlist pour une liste des commandes esclaves, et DOCS/tech/slave.txt pour leur description.</code>

28 Il manque un espace à côté du tiret. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Guillemets typographiques ouvrants. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Mot inconnu : controle => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Guillemets typographiques fermants. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace à côté du tiret. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Mot inconnu : Flux_standard => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace insécable. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace insécable. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace insécable. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
29 Il manque un espace à côté du tiret. => <code>mplayer -quiet -slave -input file=/tmp/music-control</code>

30 Mot inconnu : NB => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Il manque un espace insécable. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Il manque un espace à côté du tiret. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : shuffle => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : idle => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : mplayer => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Il manque un espace à côté du tiret. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : préloader => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Espace(s) en fin de ligne à supprimer. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 

33 Mot inconnu : fifofile => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque les traits d’union. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque un espace insécable. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque un espace insécable. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : stdin => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : mplayer => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : fifofile => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : mplayer => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque un espace insécable. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
34 Il manque un espace à côté du tiret. => <code>mplayer -input cmdlist</code>

35 Mot inconnu : fifofile => Le principe est donc simple, il suffit de passer des commandes à notre fifofile ce qui influencera le comportement de mplayer.
35 Mot inconnu : mplayer => Le principe est donc simple, il suffit de passer des commandes à notre fifofile ce qui influencera le comportement de mplayer.

38 Accord de genre erroné entre « chemins » et « cités ». => <note tip>Les chemins cités ci-dessous ne sont pas obligatoires, ils ne font qu'office d'exemple. Adaptez les en fonction en vos besoins et envies.</note>

40 Mot inconnu : fifofile => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".
40 Guillemets typographiques ouvrants. => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".
40 Mot inconnu : mkfifo => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".
40 Guillemets typographiques fermants. => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".

42 Mot inconnu : mplayer => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Mot inconnu : ecole => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Mot inconnu : scripting => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Mot inconnu : initiation_au_shell => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Espace(s) en fin de ligne à supprimer. => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 

44 Mot inconnu : stdout => Cependant, le stdout et le stderr nous intéressent, car ils permettent de récupérer le nom du titre joué, par exemple dans le cas d'une chanson (cf fixme). Nous allons donc les rediriger vers deux fichiers distincts.
44 Mot inconnu : stderr => Cependant, le stdout et le stderr nous intéressent, car ils permettent de récupérer le nom du titre joué, par exemple dans le cas d'une chanson (cf fixme). Nous allons donc les rediriger vers deux fichiers distincts.
44 Mot inconnu : fixme => Cependant, le stdout et le stderr nous intéressent, car ils permettent de récupérer le nom du titre joué, par exemple dans le cas d'une chanson (cf fixme). Nous allons donc les rediriger vers deux fichiers distincts.
45 Il manque un espace à côté du tiret. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace à côté du tiret. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>

47 Mot inconnu : mplayer => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : stdout => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : echo => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : stdin => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : fifofile => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
48 Guillemets typographiques ouvrants. => <code>echo 'macommande' > /tmp/music-control</code>
48 Guillemets typographiques fermants. => <code>echo 'macommande' > /tmp/music-control</code>

49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : mplayer => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Il manque un espace à côté du tiret. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : cmdlist => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : seek => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : loadfile => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : loadlist => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Il manque un espace insécable. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].

51 Guillemets typographiques ouvrants. => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Mot inconnu : get_xxx => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Guillemets typographiques fermants. => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Mot inconnu : mplayer => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Il manque un espace insécable. => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
52 Guillemets typographiques ouvrants. => <code>echo 'get_meta_title' > /tmp/music-control</code>
52 Guillemets typographiques fermants. => <code>echo 'get_meta_title' > /tmp/music-control</code>

53 Mot inconnu : mplayer => Cela affichera la ligne suivante dans ~/.mplayer/mplayer.log
53 Mot inconnu : mplayer => Cela affichera la ligne suivante dans ~/.mplayer/mplayer.log
53 Il manque un espace. => Cela affichera la ligne suivante dans ~/.mplayer/mplayer.log

55 Il manque un espace insécable. => On peut donc filtrer la sortie de la manière suivante :
56 Il manque un espace. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Guillemets typographiques ouvrants. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Il manque un espace à côté du tiret. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Il manque un espace à côté du tiret. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>

57 Mot inconnu : grep => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 Mot inconnu : fifo => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 Mot inconnu : mplayer => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 Mot inconnu : fifo => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).

59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : grep => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : tail => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : cut => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace insécable. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : grep => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : Title => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : mplayer => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : mplayer => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : cut => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace à côté du tiret. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : tail => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace à côté du tiret. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''

61 Mot inconnu : get_xxx => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Guillemets typographiques ouvrants. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Mot inconnu : mplayer => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Il manque un espace à côté du tiret. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Mot inconnu : cmdlist => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Guillemets typographiques fermants. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Il manque un espace insécable. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :

78 Mot inconnu : get_meta_genre => get_meta_genre       # Genre</code>
78 Espace(s) surnuméraire(s) à supprimer. => get_meta_genre       # Genre</code>

81 Mot inconnu : mplayer => Cet aspect de mplayer nous permet de le contrôler via des scripts bash. 
81 Mot inconnu : bash => Cet aspect de mplayer nous permet de le contrôler via des scripts bash. 
81 Espace(s) en fin de ligne à supprimer. => Cet aspect de mplayer nous permet de le contrôler via des scripts bash. 

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *de passer à la chanson suivante

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *de passer à la chanson précédente

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *de mettre mplayer en pause
93 Mot inconnu : mplayer =>    *de mettre mplayer en pause

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *d'arrêter mplayer
98 Mot inconnu : mplayer =>    *d'arrêter mplayer
105 Mot inconnu : mplayer => Ces petits scripts, combinés par exemple à [[:zenity]], permettent un excellent contrôle de mplayer. On notera par exemple la possibilité de créer un petit script qui affichera un navigateur et permettra d'ouvrir un morceau, et de le jouer dans mplayer. Allez je suis gentil, je vous le donne aussi :p
105 Mot inconnu : mplayer => Ces petits scripts, combinés par exemple à [[:zenity]], permettent un excellent contrôle de mplayer. On notera par exemple la possibilité de créer un petit script qui affichera un navigateur et permettra d'ouvrir un morceau, et de le jouer dans mplayer. Allez je suis gentil, je vous le donne aussi :p

111 Il manque un espace insécable. => De même, une méthode pas très conventionnelle permet de récupérer dans le fichier log le titre de la dernière chanson. Exemple (décidément, je vous donne tout !), et pardonnez la mauvaise qualité de ces scripts.

128 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !
128 Typographie : un ou trois points ? => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !
128 Mot inconnu : xbindkeys => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !
128 Il manque un espace insécable. => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !

129 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *[[http://www.mplayerhq.hu|Le site officiel de mplayer]]
129 Mot inconnu : mplayer =>    *[[http://www.mplayerhq.hu|Le site officiel de mplayer]]

130 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *[[http://www.mplayerhq.hu/DOCS/man/fr/mplayer.1.html|Des infos sur le mode "slave" et les commandes possibles]]
130 Guillemets typographiques ouvrants. =>    *[[http://www.mplayerhq.hu/DOCS/man/fr/mplayer.1.html|Des infos sur le mode "slave" et les commandes possibles]]
130 Guillemets typographiques fermants. =>    *[[http://www.mplayerhq.hu/DOCS/man/fr/mplayer.1.html|Des infos sur le mode "slave" et les commandes possibles]]

131 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : Mplayer =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : wikipédia =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : mplayer =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]

134 Il manque un espace insécable. => //Contributeurs: [[:utilisateurs:blackbg]]//
134 Il manque un espace. => //Contributeurs: [[:utilisateurs:blackbg]]//
