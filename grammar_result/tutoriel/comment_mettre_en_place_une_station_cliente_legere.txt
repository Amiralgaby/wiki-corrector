
9 S’il s’agit d’une interrogation, il manque un trait d’union. => ===== Qu'est ce qu'une station cliente légère ? ===== | est ce => suggestions : ['est-ce']
22 Accord de genre erroné entre « instructions » et « appropriés ». => Séquence de démarrage (d'un point de vue station cliente) : la station cliente peut soit disposer d'un noyau sur un média de stockage local, soit le charger depuis le serveur au travers du réseau (en utilisant les instructions appropriés, il est possible de charger le noyau linux depuis un serveur au travers d'une carte réseau de démarrage. Ainsi, la station cliente n'a plus besoin de stocker quoi que ce soit, si ce n'est sur la mémoire morte de la carte réseau.) | appropriés => suggestions : ['appropriées']
22 Mot inconnu : linux => Séquence de démarrage (d'un point de vue station cliente) : la station cliente peut soit disposer d'un noyau sur un média de stockage local, soit le charger depuis le serveur au travers du réseau (en utilisant les instructions appropriés, il est possible de charger le noyau linux depuis un serveur au travers d'une carte réseau de démarrage. Ainsi, la station cliente n'a plus besoin de stocker quoi que ce soit, si ce n'est sur la mémoire morte de la carte réseau.) | linux

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * Séquence de démarrage - |     => suggestions : ['']

26 Mot inconnu : PXE => La carte réseau PXE lance une requête DHCP sur le réseau local. Le serveur DHCP répond en indiquant à la carte où se trouve le noyau linux. Le noyau est alors chargé au travers du réseau via le protocole TFTP. | pxe
26 Mot inconnu : linux => La carte réseau PXE lance une requête DHCP sur le réseau local. Le serveur DHCP répond en indiquant à la carte où se trouve le noyau linux. Le noyau est alors chargé au travers du réseau via le protocole TFTP. | linux
26 Mot inconnu : TFTP => La carte réseau PXE lance une requête DHCP sur le réseau local. Le serveur DHCP répond en indiquant à la carte où se trouve le noyau linux. Le noyau est alors chargé au travers du réseau via le protocole TFTP. | tftp

28 Mot inconnu : linux => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | linux
28 Guillemets typographiques ouvrants. => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | '' => suggestions : ['«\xa0', '“']
28 Mot inconnu : initramfs => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | initramfs
28 Guillemets typographiques fermants. => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | '' => suggestions : ['\xa0»', '”']
28 Mot inconnu : linux => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | linux
28 Guillemets typographiques ouvrants. => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | '' => suggestions : ['«\xa0', '“']
28 Mot inconnu : root => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | root
28 Guillemets typographiques fermants. => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | '' => suggestions : ['\xa0»', '”']
28 Un seul point après « etc. » => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | etc... => suggestions : ['etc.']
28 Mot inconnu : root => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | root
28 Mot inconnu : NFS => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | nfs
28 Mot inconnu : Network => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | network
28 Mot inconnu : System => Une fois le noyau chargé, il est exécuté, et la machine démarre sous linux. ''initramfs'' est chargé avec le noyau linux et il est monté comme système de fichiers ''root''. Ceci procure automatiquement les pilotes nécessaires pour la carte réseau, la souris, le clavier, etc... Une fois le pilote de carte réseau chargé en mémoire, une seconde requête DHCP fournit aux clients les informations comme l'adresse IP, le masque réseau, la passerelle, le serveur DNS et le point de montage root NFS (Network File System) . | system

30 Mot inconnu : linux => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | linux
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : initramfs => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | initramfs
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']
30 Mot inconnu : root => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | root
30 Mot inconnu : linux => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | linux
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : root => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | root
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']
30 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | a => suggestions : ['À']
30 Mot inconnu : root => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | root
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : root => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | root
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']
30 Mot inconnu : root => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | root
30 Pas d’espace avant un point. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. |  . => suggestions : ['.']
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : initramfs => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | initramfs
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : init => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | init
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']
30 Mot inconnu : autodéctées => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | autodéctées
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : breezy => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | breezy
30 Mot inconnu : ltsp => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | ltsp
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']
30 Guillemets typographiques ouvrants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['«\xa0', '“']
30 Mot inconnu : ldm => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | ldm
30 Guillemets typographiques fermants. => Le noyau linux exécute ''ubuntu initramfs'', qui monte le système de fichiers root partagé du serveur, sur la machine cliente, en lecture seule. La station cliente a donc alors un noyau linux de démarrage, un système de fichiers ''root'', comme un vrai système Linux. A partir de maintenant, quand nous parlerons du système de fichiers de la station client, il s'agira en fait du système de fichiers root du serveur monté en lecture seule. Le système de fichiers ''root'' monté par la station cliente est différent du système de fichiers root que le serveur utilise lui-même, mais il est conçu spécialement pour les stations clientes, et il est partagé entre toutes celles connectées au serveur (il est situé dans le répertoire /opt/ltsp/<arch> sur le serveur) . ''initramfs'' appelle le programme ''init'', les paramètres du serveur X sont autodéctées et le gestionnaire de connexion ''ubuntu breezy ltsp'', que l'on appelle ''ldm'' est exécuté. | '' => suggestions : ['\xa0»', '”']

32 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - X nuts and bolts - | -  => suggestions : ['—\xa0', '–\xa0']
32 Mot inconnu : nuts => - X nuts and bolts - | nuts
32 Mot inconnu : and => - X nuts and bolts - | and
32 Mot inconnu : bolts => - X nuts and bolts - | bolts

34 Guillemets typographiques ouvrants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['«\xa0', '“']
34 Mot inconnu : ldm => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | ldm
34 Guillemets typographiques fermants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['\xa0»', '”']
34 Guillemets typographiques ouvrants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['«\xa0', '“']
34 Mot inconnu : ssh => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | ssh
34 Guillemets typographiques fermants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['\xa0»', '”']
34 Guillemets typographiques ouvrants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['«\xa0', '“']
34 Mot inconnu : ssh => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | ssh
34 Guillemets typographiques fermants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['\xa0»', '”']
34 Espace(s) surnuméraire(s) à supprimer. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. |    => suggestions : [' ']
34 Guillemets typographiques ouvrants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['«\xa0', '“']
34 Mot inconnu : tcp => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | tcp
34 Guillemets typographiques fermants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['\xa0»', '”']
34 Guillemets typographiques ouvrants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['«\xa0', '“']
34 Mot inconnu : ltsp => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | ltsp
34 Guillemets typographiques fermants. => Une fois connecté, ''ldm'' crée un tunnel ''ssh'' et démarre une session X sur le serveur avec affichage sur les stations clientes via le tunnel. L'utilisation de ''ssh'' procure des avantages : vous n'avez pas à configurer le serveur X sur la station cliente,  et aucun transport de données par protocole ''tcp'' non sécurisé n'est initialisée, comme cela pouvait l'être auparavant avec ''ltsp''. | '' => suggestions : ['\xa0»', '”']

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Une machine sous ''Ubuntu Breezy 5.10'' qui jouera le rôle de serveur, |      => suggestions : ['']
39 Guillemets typographiques ouvrants. =>     * Une machine sous ''Ubuntu Breezy 5.10'' qui jouera le rôle de serveur, | '' => suggestions : ['«\xa0', '“']
39 Mot inconnu : Breezy =>     * Une machine sous ''Ubuntu Breezy 5.10'' qui jouera le rôle de serveur, | breezy
39 Guillemets typographiques fermants. =>     * Une machine sous ''Ubuntu Breezy 5.10'' qui jouera le rôle de serveur, | '' => suggestions : ['\xa0»', '”']

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * au moins une machine avec démarrage ''PXE'' qui jouera le rôle du client, |      => suggestions : ['']
40 Guillemets typographiques ouvrants. =>     * au moins une machine avec démarrage ''PXE'' qui jouera le rôle du client, | '' => suggestions : ['«\xa0', '“']
40 Mot inconnu : PXE =>     * au moins une machine avec démarrage ''PXE'' qui jouera le rôle du client, | pxe
40 Guillemets typographiques fermants. =>     * au moins une machine avec démarrage ''PXE'' qui jouera le rôle du client, | '' => suggestions : ['\xa0»', '”']

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * un espace libre sur le disque dur, |      => suggestions : ['']

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * un connexion internet rapide, un mirroir local pour ''Breezy'', ou beaucoup de patience, |      => suggestions : ['']
42 Accord de genre erroné : « connexion » est féminin. =>     * un connexion internet rapide, un mirroir local pour ''Breezy'', ou beaucoup de patience, | un => suggestions : ['une']
42 Mot inconnu : mirroir =>     * un connexion internet rapide, un mirroir local pour ''Breezy'', ou beaucoup de patience, | mirroir
42 Guillemets typographiques ouvrants. =>     * un connexion internet rapide, un mirroir local pour ''Breezy'', ou beaucoup de patience, | '' => suggestions : ['«\xa0', '“']
42 Mot inconnu : Breezy =>     * un connexion internet rapide, un mirroir local pour ''Breezy'', ou beaucoup de patience, | breezy
42 Guillemets typographiques fermants. =>     * un connexion internet rapide, un mirroir local pour ''Breezy'', ou beaucoup de patience, | '' => suggestions : ['\xa0»', '”']

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, |      => suggestions : ['']
43 Guillemets typographiques ouvrants. =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | '' => suggestions : ['«\xa0', '“']
43 Guillemets typographiques fermants. =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | '' => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | '' => suggestions : ['«\xa0', '“']
43 Mot inconnu : PXE =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | pxe
43 Guillemets typographiques fermants. =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | '' => suggestions : ['\xa0»', '”']
43 Guillemets typographiques ouvrants. =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | '' => suggestions : ['«\xa0', '“']
43 Guillemets typographiques fermants. =>     * un serveur ''DHCP'' capable de supporter des clients ''PXE'', ou un segment de réseau séparé où vous pouvez lancer un serveur ''DHCP'' dédié, | '' => suggestions : ['\xa0»', '”']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * une certaine aisance avec la ligne de commande, |      => suggestions : ['']

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * un certain goût du risque, |      => suggestions : ['']

46 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * et un désir brûlant d'envoyer vos commentaires aux développeurs d'Ubuntu ! |      => suggestions : ['']

53 Mot inconnu : PXE => === Si vous disposez déjà d'un serveur DHCP avec prise en charge des clients PXE === | pxe

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le configurer de façon à obtenir un fichier de démarrage ''/ltsp/pxelinux.0'' et un chemin root vers ''/opt/ltsp/i386''. |    => suggestions : ['']
55 Mot inconnu : ltsp =>   * Le configurer de façon à obtenir un fichier de démarrage ''/ltsp/pxelinux.0'' et un chemin root vers ''/opt/ltsp/i386''. | ltsp
55 Mot inconnu : pxelinux =>   * Le configurer de façon à obtenir un fichier de démarrage ''/ltsp/pxelinux.0'' et un chemin root vers ''/opt/ltsp/i386''. | pxelinux
55 Guillemets typographiques fermants. =>   * Le configurer de façon à obtenir un fichier de démarrage ''/ltsp/pxelinux.0'' et un chemin root vers ''/opt/ltsp/i386''. | '' => suggestions : ['\xa0»', '”']
55 Mot inconnu : root =>   * Le configurer de façon à obtenir un fichier de démarrage ''/ltsp/pxelinux.0'' et un chemin root vers ''/opt/ltsp/i386''. | root

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          |      => suggestions : ['']
56 Mot inconnu : Breezy =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          | breezy
56 Mot inconnu : pxelinux =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          | pxelinux
56 Mot inconnu : ltsp =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          | ltsp
56 Mot inconnu : i386 =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          | i386
56 Mot inconnu : pxelinux =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          | pxelinux
56 Guillemets typographiques fermants. =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          | '' => suggestions : ['\xa0»', '”']
56 Espace(s) en fin de ligne à supprimer. =>     (Pour les versions supérieures à Breezy, le chemin de pxelinux.0 à spécifier est ''/ltsp/i386/pxelinux.0'').          |           => suggestions : ['']

57 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avec ISC DHCPD, utiliser les options suivantes :<file> |    => suggestions : ['']
57 Mot inconnu : ISC =>   * Avec ISC DHCPD, utiliser les options suivantes :<file> | isc
57 Mot inconnu : DHCPD =>   * Avec ISC DHCPD, utiliser les options suivantes :<file> | dhcpd

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   filename "/ltsp/pxelinux.0"; |    => suggestions : ['']
58 Mot inconnu : filename =>   filename "/ltsp/pxelinux.0"; | filename
58 Mot inconnu : ltsp =>   filename "/ltsp/pxelinux.0"; | ltsp
58 Mot inconnu : pxelinux =>   filename "/ltsp/pxelinux.0"; | pxelinux
58 Guillemets typographiques fermants. =>   filename "/ltsp/pxelinux.0"; | " => suggestions : ['\xa0»', '”']

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   option root-path "/opt/ltsp/i386";</file> |    => suggestions : ['']
59 Mot inconnu : root-path =>   option root-path "/opt/ltsp/i386";</file> | root-path

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Si besoin, adapter le fichier de configuration « /etc/ltsp/dhcpd.conf » (configuré par défaut pour un serveur d'adresse IP 192.168.0.1 relié à des clients 'PXE') |    => suggestions : ['']
65 Guillemets typographiques ouvrants. =>   * Si besoin, adapter le fichier de configuration « /etc/ltsp/dhcpd.conf » (configuré par défaut pour un serveur d'adresse IP 192.168.0.1 relié à des clients 'PXE') | ' => suggestions : ['“', '‘', '‹']
65 Mot inconnu : PXE =>   * Si besoin, adapter le fichier de configuration « /etc/ltsp/dhcpd.conf » (configuré par défaut pour un serveur d'adresse IP 192.168.0.1 relié à des clients 'PXE') | pxe

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> |    => suggestions : ['']
66 Mot inconnu : firewall =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | firewall
66 Guillemets typographiques ouvrants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['«\xa0', '“']
66 Mot inconnu : TFTP =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | tftp
66 Guillemets typographiques fermants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['\xa0»', '”']
66 Guillemets typographiques ouvrants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['«\xa0', '“']
66 Mot inconnu : NFS =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | nfs
66 Guillemets typographiques fermants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['\xa0»', '”']
66 Guillemets typographiques ouvrants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['«\xa0', '“']
66 Guillemets typographiques fermants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['\xa0»', '”']
66 Mot inconnu : standalone =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | standalone
66 Guillemets typographiques ouvrants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['«\xa0', '“']
66 Mot inconnu : portmap =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | portmap
66 Guillemets typographiques fermants. =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | '' => suggestions : ['\xa0»', '”']
66 Mot inconnu : loopback =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | loopback
66 Mot inconnu : Editez =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | editez
66 Mot inconnu : portmap =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | portmap
66 Mot inconnu : rpc =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | rpc
66 Mot inconnu : mountd =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | mountd
66 Mot inconnu : rpc =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | rpc
66 Mot inconnu : statd =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | statd
66 Mot inconnu : tftpd =>   * Si un firewall est présent sur le serveur, il vous faudra autoriser ''TFTP'' et ''NFS'' (et ''DHCP'' si vous exécutez un serveur standalone). Assurez-vous également que ''portmap'' n'est pas limité à l'interface de bouclage (loopback) dans /etc/default/portmap (commentez la ligne "-i 127.0.0.1" si elle existe). Editez éventuellement `/etc/hosts.allow' pour limiter l'accès à portmap, rpc.mountd, rpc.statd, et in.tftpd, uniquement depuis le réseau local :<file> | tftpd

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   portmap:    192.168.0.0/24 |    => suggestions : ['']
68 Mot inconnu : portmap =>   portmap:    192.168.0.0/24 | portmap
68 Espace(s) surnuméraire(s) à supprimer. =>   portmap:    192.168.0.0/24 |      => suggestions : [' ']

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   rpc.mountd: 192.168.0.0/24 |    => suggestions : ['']
69 Mot inconnu : rpc =>   rpc.mountd: 192.168.0.0/24 | rpc
69 Mot inconnu : mountd =>   rpc.mountd: 192.168.0.0/24 | mountd

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   rpc.statd:  192.168.0.0/24 |    => suggestions : ['']
70 Mot inconnu : rpc =>   rpc.statd:  192.168.0.0/24 | rpc
70 Mot inconnu : statd =>   rpc.statd:  192.168.0.0/24 | statd
70 Espace(s) surnuméraire(s) à supprimer. =>   rpc.statd:  192.168.0.0/24 |    => suggestions : [' ']

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   in.tftpd:   192.168.0.0/24</file> |    => suggestions : ['']
71 Mot inconnu : tftpd =>   in.tftpd:   192.168.0.0/24</file> | tftpd
71 Espace(s) surnuméraire(s) à supprimer. =>   in.tftpd:   192.168.0.0/24</file> |     => suggestions : [' ']

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo ltsp-build-client  |    => suggestions : ['']
80 Mot inconnu : sudo =>   sudo ltsp-build-client  | sudo
80 Mot inconnu : ltsp-build-client =>   sudo ltsp-build-client  | ltsp-build-client
80 Espace(s) en fin de ligne à supprimer. =>   sudo ltsp-build-client  |   => suggestions : ['']

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ce script est prévu pour fonctionner avec un mirroir spécial Ubuntu. Mais vous pouvez également le modifier si vous avez un miroir plus proche ou un cédérom : |    => suggestions : ['']
82 Mot inconnu : mirroir =>   * Ce script est prévu pour fonctionner avec un mirroir spécial Ubuntu. Mais vous pouvez également le modifier si vous avez un miroir plus proche ou un cédérom : | mirroir

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo ltsp-build-client --mirror [WWW] file://cdrom |    => suggestions : ['']
84 Mot inconnu : sudo =>   sudo ltsp-build-client --mirror [WWW] file://cdrom | sudo
84 Mot inconnu : ltsp-build-client =>   sudo ltsp-build-client --mirror [WWW] file://cdrom | ltsp-build-client
84 Mot inconnu : mirror =>   sudo ltsp-build-client --mirror [WWW] file://cdrom | mirror

86 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => en n'oubliant pas de copier les sources.list du serveur en chroot. Soyez patient, selon la vitesse de votre connexion Internet et la puissance de  votre serveur, la construction peut prendre plusieurs minutes ... | en => suggestions : ['En']
86 Mot inconnu : list => en n'oubliant pas de copier les sources.list du serveur en chroot. Soyez patient, selon la vitesse de votre connexion Internet et la puissance de  votre serveur, la construction peut prendre plusieurs minutes ... | list
86 Mot inconnu : chroot => en n'oubliant pas de copier les sources.list du serveur en chroot. Soyez patient, selon la vitesse de votre connexion Internet et la puissance de  votre serveur, la construction peut prendre plusieurs minutes ... | chroot
86 Espace(s) surnuméraire(s) à supprimer. => en n'oubliant pas de copier les sources.list du serveur en chroot. Soyez patient, selon la vitesse de votre connexion Internet et la puissance de  votre serveur, la construction peut prendre plusieurs minutes ... |    => suggestions : [' ']
86 Typographie : points de suspension. Utilisez le caractère dédié. => en n'oubliant pas de copier les sources.list du serveur en chroot. Soyez patient, selon la vitesse de votre connexion Internet et la puissance de  votre serveur, la construction peut prendre plusieurs minutes ... | ... => suggestions : ['…']
88 Guillemets typographiques fermants. => <note important>Attention : si vous avez modifié les paramètres de dépendances d'''apt'' pour que les paquets recommandés ne soient pas sélectionnés automatiquement, il vous manquera certains paquets avec le script. Aucune connexion avec ''sdm'' ne sera alors possible puisque certains composants du serveur X seront manquants.</note> | '' => suggestions : ['\xa0»', '”']
88 Guillemets typographiques ouvrants. => <note important>Attention : si vous avez modifié les paramètres de dépendances d'''apt'' pour que les paquets recommandés ne soient pas sélectionnés automatiquement, il vous manquera certains paquets avec le script. Aucune connexion avec ''sdm'' ne sera alors possible puisque certains composants du serveur X seront manquants.</note> | '' => suggestions : ['«\xa0', '“']
88 Mot inconnu : sdm => <note important>Attention : si vous avez modifié les paramètres de dépendances d'''apt'' pour que les paquets recommandés ne soient pas sélectionnés automatiquement, il vous manquera certains paquets avec le script. Aucune connexion avec ''sdm'' ne sera alors possible puisque certains composants du serveur X seront manquants.</note> | sdm
88 Guillemets typographiques fermants. => <note important>Attention : si vous avez modifié les paramètres de dépendances d'''apt'' pour que les paquets recommandés ne soient pas sélectionnés automatiquement, il vous manquera certains paquets avec le script. Aucune connexion avec ''sdm'' ne sera alors possible puisque certains composants du serveur X seront manquants.</note> | '' => suggestions : ['\xa0»', '”']

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   apt-get install openssh-server  |    => suggestions : ['']
90 Mot inconnu : apt-get =>   apt-get install openssh-server  | apt-get
90 Mot inconnu : install =>   apt-get install openssh-server  | install
90 Mot inconnu : openssh-server =>   apt-get install openssh-server  | openssh-server
90 Espace(s) en fin de ligne à supprimer. =>   apt-get install openssh-server  |   => suggestions : ['']

91 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo ltsp-update-sshkeys |    => suggestions : ['']
91 Mot inconnu : sudo =>   sudo ltsp-update-sshkeys | sudo
91 Mot inconnu : ltsp-update-sshkeys =>   sudo ltsp-update-sshkeys | ltsp-update-sshkeys
93 Mot inconnu : ssh_known_hosts => ==== Vérifier le fichier de configuration « ssh_known_hosts » ==== | ssh_known_hosts

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   servername ssh-rsa AAAAB3NzaC1yc2EAAAABI... |    => suggestions : ['']
97 Mot inconnu : servername =>   servername ssh-rsa AAAAB3NzaC1yc2EAAAABI... | servername
97 Mot inconnu : ssh-rsa =>   servername ssh-rsa AAAAB3NzaC1yc2EAAAABI... | ssh-rsa
97 Mot inconnu : AAAAB3NzaC1yc2EAAAABI =>   servername ssh-rsa AAAAB3NzaC1yc2EAAAABI... | aaaab3nzac1yc2eaaaabi
97 Typographie : points de suspension. Utilisez le caractère dédié. =>   servername ssh-rsa AAAAB3NzaC1yc2EAAAABI... | ... => suggestions : ['…']

99 Typographie : points de suspension. Utilisez le caractère dédié. => ...ajouter alors l'adresse IP de la façon suivante : | ... => suggestions : ['…']

101 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   servername,192.168.0.1 ssh-rsa AAAAB3NzaC1yc2EAAAABI... |    => suggestions : ['']
101 Mot inconnu : servername =>   servername,192.168.0.1 ssh-rsa AAAAB3NzaC1yc2EAAAABI... | servername
101 Il manque un espace. =>   servername,192.168.0.1 ssh-rsa AAAAB3NzaC1yc2EAAAABI... | 192 => suggestions : [' 192']
101 Mot inconnu : ssh-rsa =>   servername,192.168.0.1 ssh-rsa AAAAB3NzaC1yc2EAAAABI... | ssh-rsa
101 Mot inconnu : AAAAB3NzaC1yc2EAAAABI =>   servername,192.168.0.1 ssh-rsa AAAAB3NzaC1yc2EAAAABI... | aaaab3nzac1yc2eaaaabi
101 Typographie : points de suspension. Utilisez le caractère dédié. =>   servername,192.168.0.1 ssh-rsa AAAAB3NzaC1yc2EAAAABI... | ... => suggestions : ['…']

107 Espace(s) surnuméraire(s) à supprimer. => ====    5.      Lancer le client par PXE et observer le résultat. ==== |        => suggestions : [' ']
107 Mot inconnu : PXE => ====    5.      Lancer le client par PXE et observer le résultat. ==== | pxe

111 Mot inconnu : PXE => Si votre station client est dépourvue de carte réseau PXE, vous pouvez créer un cédérom ou une disquette de démarrage via [[http://www.rom-o-matic.net/|le site ROM-o-matic.net]]. Graver alors l'image iso ou enregistrer l'image disquette, et démarrer à partir du média créé. | pxe
111 Mot inconnu : ROM-o-matic => Si votre station client est dépourvue de carte réseau PXE, vous pouvez créer un cédérom ou une disquette de démarrage via [[http://www.rom-o-matic.net/|le site ROM-o-matic.net]]. Graver alors l'image iso ou enregistrer l'image disquette, et démarrer à partir du média créé. | rom-o-matic
111 Mot inconnu : iso => Si votre station client est dépourvue de carte réseau PXE, vous pouvez créer un cédérom ou une disquette de démarrage via [[http://www.rom-o-matic.net/|le site ROM-o-matic.net]]. Graver alors l'image iso ou enregistrer l'image disquette, et démarrer à partir du média créé. | iso

113 Espace(s) surnuméraire(s) à supprimer. => ==== 6.      Connectez-vous avec un identifiant autorisé pour la connexion ssh à distance ==== |        => suggestions : [' ']
113 Mot inconnu : ssh => ==== 6.      Connectez-vous avec un identifiant autorisé pour la connexion ssh à distance ==== | ssh

115 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => et observez le résultat. Si tout fonctionne correctement, vous devriez maintenant être dans une session de travail sur le serveur. | et => suggestions : ['Et']

117 Typographie : points de suspension. Utilisez le caractère dédié. => == ...et pour terminer... envoyez un courriel aux développeurs d'Ubuntu pour partager vos découvertes ! == | ... => suggestions : ['…']
117 Typographie : points de suspension. Utilisez le caractère dédié. => == ...et pour terminer... envoyez un courriel aux développeurs d'Ubuntu pour partager vos découvertes ! == | ... => suggestions : ['…']

120 Guillemets typographiques ouvrants. => Si vous utilisez un serveur ''DHCP'' dédié sur lequel vous ne souhaitez pas installer LTSP, vous pouvez vous contenter de rediriger la station cliente vers un serveur différent. | '' => suggestions : ['«\xa0', '“']
120 Guillemets typographiques fermants. => Si vous utilisez un serveur ''DHCP'' dédié sur lequel vous ne souhaitez pas installer LTSP, vous pouvez vous contenter de rediriger la station cliente vers un serveur différent. | '' => suggestions : ['\xa0»', '”']
120 Mot inconnu : LTSP => Si vous utilisez un serveur ''DHCP'' dédié sur lequel vous ne souhaitez pas installer LTSP, vous pouvez vous contenter de rediriger la station cliente vers un serveur différent. | ltsp

122 Guillemets typographiques ouvrants. => Dans le fichier de configuration du serveur ''DHCP'', ''dhcpd.conf'': | '' => suggestions : ['«\xa0', '“']
122 Guillemets typographiques fermants. => Dans le fichier de configuration du serveur ''DHCP'', ''dhcpd.conf'': | '' => suggestions : ['\xa0»', '”']
122 Guillemets typographiques ouvrants. => Dans le fichier de configuration du serveur ''DHCP'', ''dhcpd.conf'': | '' => suggestions : ['«\xa0', '“']
122 Mot inconnu : dhcpd => Dans le fichier de configuration du serveur ''DHCP'', ''dhcpd.conf'': | dhcpd
122 Il manque un espace. => Dans le fichier de configuration du serveur ''DHCP'', ''dhcpd.conf'': | conf => suggestions : [' conf']
122 Guillemets typographiques fermants. => Dans le fichier de configuration du serveur ''DHCP'', ''dhcpd.conf'': | '' => suggestions : ['\xa0»', '”']

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   next-server 192.168.0.3;  |    => suggestions : ['']
124 Mot inconnu : next-server =>   next-server 192.168.0.3;  | next-server
124 Espace(s) en fin de ligne à supprimer. =>   next-server 192.168.0.3;  |   => suggestions : ['']

126 Mot inconnu : LTSP => où 192.168.0.3 est l'adresse de votre serveur LTSP. | ltsp

131 Formatage des grands nombres. => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | 19407 => suggestions : ['19\xa0407']
131 Mot inconnu : OpenSSH => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | openssh
131 Mot inconnu : forwarding => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | forwarding
131 Mot inconnu : IPv6 => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | ipv6
131 Guillemets typographiques ouvrants. => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | " => suggestions : ['«\xa0', '“']
131 Mot inconnu : AddressFamily => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | addressfamily
131 Mot inconnu : inet => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | inet
131 Guillemets typographiques fermants. => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | " => suggestions : ['\xa0»', '”']
131 Guillemets typographiques ouvrants. => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | '' => suggestions : ['«\xa0', '“']
131 Mot inconnu : openssh => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | openssh
131 Guillemets typographiques fermants. => * Bogue 19407: OpenSSH semble ne pas attribuer correctement les ports pour faire du X forwarding, ce qui empêche de se déconnecter et de se reconnecter immédiatement après, si la prise en charge IPv6 est activée. Désactivez en ajoutant la ligne "AddressFamily inet" au fichier ''/etc/ssh/sshd_config'', et relancez le démon ''openssh''. | '' => suggestions : ['\xa0»', '”']

133 Mot inconnu : NAT => ===== Cas d'une station cliente NAT ===== | nat

135 Mot inconnu : The => Ce tutoriel est en fait la synthèse d'informations diverses sur le partage d'une connexion internet entre un serveur et ses stations clientes. The latter will act as NAT/gateway. | the
135 Mot inconnu : will => Ce tutoriel est en fait la synthèse d'informations diverses sur le partage d'une connexion internet entre un serveur et ses stations clientes. The latter will act as NAT/gateway. | will
135 Mot inconnu : act => Ce tutoriel est en fait la synthèse d'informations diverses sur le partage d'une connexion internet entre un serveur et ses stations clientes. The latter will act as NAT/gateway. | act
135 Mot inconnu : NAT => Ce tutoriel est en fait la synthèse d'informations diverses sur le partage d'une connexion internet entre un serveur et ses stations clientes. The latter will act as NAT/gateway. | nat
135 Mot inconnu : gateway => Ce tutoriel est en fait la synthèse d'informations diverses sur le partage d'une connexion internet entre un serveur et ses stations clientes. The latter will act as NAT/gateway. | gateway
139 Espace(s) en fin de ligne à supprimer. => Vous aurez besoin de :  |   => suggestions : ['']

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un poste client serveur entièrement configuré, disposant d'au moins deux interfaces réseaux, la première connectée à internet, la seconde connectée au réseau interne. Pour les étapes suivantes, nous supposerons que votre serveur est également configuré en ''gateway'' réseau.  |    => suggestions : ['']
140 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * un poste client serveur entièrement configuré, disposant d'au moins deux interfaces réseaux, la première connectée à internet, la seconde connectée au réseau interne. Pour les étapes suivantes, nous supposerons que votre serveur est également configuré en ''gateway'' réseau.  | un => suggestions : ['Un']
140 Guillemets typographiques ouvrants. =>   * un poste client serveur entièrement configuré, disposant d'au moins deux interfaces réseaux, la première connectée à internet, la seconde connectée au réseau interne. Pour les étapes suivantes, nous supposerons que votre serveur est également configuré en ''gateway'' réseau.  | '' => suggestions : ['«\xa0', '“']
140 Mot inconnu : gateway =>   * un poste client serveur entièrement configuré, disposant d'au moins deux interfaces réseaux, la première connectée à internet, la seconde connectée au réseau interne. Pour les étapes suivantes, nous supposerons que votre serveur est également configuré en ''gateway'' réseau.  | gateway
140 Guillemets typographiques fermants. =>   * un poste client serveur entièrement configuré, disposant d'au moins deux interfaces réseaux, la première connectée à internet, la seconde connectée au réseau interne. Pour les étapes suivantes, nous supposerons que votre serveur est également configuré en ''gateway'' réseau.  | '' => suggestions : ['\xa0»', '”']
140 Espace(s) en fin de ligne à supprimer. =>   * un poste client serveur entièrement configuré, disposant d'au moins deux interfaces réseaux, la première connectée à internet, la seconde connectée au réseau interne. Pour les étapes suivantes, nous supposerons que votre serveur est également configuré en ''gateway'' réseau.  |   => suggestions : ['']

147 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Vérifier que les 2 interfaces sont bien configurées dans « /etc/network/interfaces », |    => suggestions : ['']

148 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Vérifier avec la commande ''ifconfig'' qu'elles sont toutes deux actives, |    => suggestions : ['']
148 Guillemets typographiques ouvrants. =>   * Vérifier avec la commande ''ifconfig'' qu'elles sont toutes deux actives, | '' => suggestions : ['«\xa0', '“']
148 Mot inconnu : ifconfig =>   * Vérifier avec la commande ''ifconfig'' qu'elles sont toutes deux actives, | ifconfig
148 Guillemets typographiques fermants. =>   * Vérifier avec la commande ''ifconfig'' qu'elles sont toutes deux actives, | '' => suggestions : ['\xa0»', '”']

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Assurez-vous que le serveur peut se connecter à internet. |    => suggestions : ['']

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ip_forward=yes |    => suggestions : ['']
155 Mot inconnu : ip_forward =>   ip_forward=yes | ip_forward
155 Mot inconnu : yes =>   ip_forward=yes | yes

156 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   spoofprotect=yes |    => suggestions : ['']
156 Mot inconnu : spoofprotect =>   spoofprotect=yes | spoofprotect
156 Mot inconnu : yes =>   spoofprotect=yes | yes

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   syncookies=no |    => suggestions : ['']
157 Mot inconnu : syncookies =>   syncookies=no | syncookies

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' |    => suggestions : ['']
161 Mot inconnu : sudo =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | sudo
161 Mot inconnu : sh =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | sh
161 Il manque un espace à côté du tiret. =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' |  - => suggestions : [' – ', ' — ']
161 Guillemets typographiques ouvrants. =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | ' => suggestions : ['“', '‘', '‹']
161 Mot inconnu : echo =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | echo
161 Mot inconnu : proc =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | proc
161 Mot inconnu : sys =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | sys
161 Mot inconnu : ipv4 =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | ipv4
161 Mot inconnu : ip_forward =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | ip_forward
161 Guillemets typographiques fermants. =>   sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward' | ' => suggestions : ['”', '’', '›']

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * Activer le masquage d'adresse. Par défaut, le réseau ltsp utilise l'adresse 192.168.0.0/24. N'oubliez de la modifier pour être cohérent avec votre réseau, en utilisant la commande : |     => suggestions : ['']
165 Mot inconnu : ltsp =>    * Activer le masquage d'adresse. Par défaut, le réseau ltsp utilise l'adresse 192.168.0.0/24. N'oubliez de la modifier pour être cohérent avec votre réseau, en utilisant la commande : | ltsp

167 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 |    => suggestions : ['']
167 Mot inconnu : sudo =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 | sudo
167 Mot inconnu : iptables =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 | iptables
167 Mot inconnu : nat =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 | nat
167 Mot inconnu : POSTROUTING =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 | postrouting
167 Mot inconnu : jump =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 | jump
167 Mot inconnu : MASQUERADE =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 | masquerade
167 Espace(s) surnuméraire(s) à supprimer. =>   sudo iptables --table nat --append POSTROUTING --jump MASQUERADE  --source 192.168.0.0/24 |    => suggestions : [' ']

169 Guillemets typographiques ouvrants. => pour autoriser ''NAT''. | '' => suggestions : ['«\xa0', '“']
169 Mot inconnu : NAT => pour autoriser ''NAT''. | nat
169 Guillemets typographiques fermants. => pour autoriser ''NAT''. | '' => suggestions : ['\xa0»', '”']

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Entrez votre login sur une des stations clientes et appréciez les joies de l'internet. Si cette étape échoue, essayez de remplacer ''​%%--%%append'' par ''​%%--%%delete'' dans la commande ci-dessus. |      => suggestions : ['']
171 Il manque un espace. =>     * Entrez votre login sur une des stations clientes et appréciez les joies de l'internet. Si cette étape échoue, essayez de remplacer ''​%%--%%append'' par ''​%%--%%delete'' dans la commande ci-dessus. | append => suggestions : [' append']
171 Guillemets typographiques fermants. =>     * Entrez votre login sur une des stations clientes et appréciez les joies de l'internet. Si cette étape échoue, essayez de remplacer ''​%%--%%append'' par ''​%%--%%delete'' dans la commande ci-dessus. | '' => suggestions : ['\xa0»', '”']
171 Il manque un espace. =>     * Entrez votre login sur une des stations clientes et appréciez les joies de l'internet. Si cette étape échoue, essayez de remplacer ''​%%--%%append'' par ''​%%--%%delete'' dans la commande ci-dessus. | delete => suggestions : [' delete']
171 Mot inconnu : delete =>     * Entrez votre login sur une des stations clientes et appréciez les joies de l'internet. Si cette étape échoue, essayez de remplacer ''​%%--%%append'' par ''​%%--%%delete'' dans la commande ci-dessus. | delete
171 Guillemets typographiques fermants. =>     * Entrez votre login sur une des stations clientes et appréciez les joies de l'internet. Si cette étape échoue, essayez de remplacer ''​%%--%%append'' par ''​%%--%%delete'' dans la commande ci-dessus. | '' => suggestions : ['\xa0»', '”']

172 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Pour fixer les règles NAT d'''iptables'', lancez les commandes suivantes : |      => suggestions : ['']
172 Mot inconnu : NAT =>     * Pour fixer les règles NAT d'''iptables'', lancez les commandes suivantes : | nat
172 Mot inconnu : iptables =>     * Pour fixer les règles NAT d'''iptables'', lancez les commandes suivantes : | iptables
172 Guillemets typographiques fermants. =>     * Pour fixer les règles NAT d'''iptables'', lancez les commandes suivantes : | '' => suggestions : ['\xa0»', '”']

174 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo sh -c 'iptables-save > /etc/ltsp/nat.conf' |    => suggestions : ['']
174 Mot inconnu : sudo =>   sudo sh -c 'iptables-save > /etc/ltsp/nat.conf' | sudo
174 Mot inconnu : sh =>   sudo sh -c 'iptables-save > /etc/ltsp/nat.conf' | sh
174 Il manque un espace à côté du tiret. =>   sudo sh -c 'iptables-save > /etc/ltsp/nat.conf' |  - => suggestions : [' – ', ' — ']
174 Guillemets typographiques ouvrants. =>   sudo sh -c 'iptables-save > /etc/ltsp/nat.conf' | ' => suggestions : ['“', '‘', '‹']
174 Mot inconnu : iptables-save =>   sudo sh -c 'iptables-save > /etc/ltsp/nat.conf' | iptables-save

178 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   up iptables-restore < /etc/ltsp/nat.conf |    => suggestions : ['']
178 Mot inconnu : up =>   up iptables-restore < /etc/ltsp/nat.conf | up
178 Mot inconnu : iptables-restore =>   up iptables-restore < /etc/ltsp/nat.conf | iptables-restore

182 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   auto eth1 |    => suggestions : ['']
182 Mot inconnu : eth1 =>   auto eth1 | eth1

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   iface eth1 inet static |    => suggestions : ['']
183 Mot inconnu : iface =>   iface eth1 inet static | iface
183 Mot inconnu : eth1 =>   iface eth1 inet static | eth1
183 Mot inconnu : inet =>   iface eth1 inet static | inet
183 Mot inconnu : static =>   iface eth1 inet static | static

184 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         address 192.168.0.1 |          => suggestions : ['']
184 Mot inconnu : address =>         address 192.168.0.1 | address

185 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         netmask 255.255.255.0 |          => suggestions : ['']
185 Mot inconnu : netmask =>         netmask 255.255.255.0 | netmask

186 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         broadcast 192.168.0.255 |          => suggestions : ['']
186 Mot inconnu : broadcast =>         broadcast 192.168.0.255 | broadcast

187 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         network 192.168.0.0 |          => suggestions : ['']
187 Mot inconnu : network =>         network 192.168.0.0 | network

188 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         up iptables-restore < /etc/ltsp/nat.conf |          => suggestions : ['']
188 Mot inconnu : up =>         up iptables-restore < /etc/ltsp/nat.conf | up
188 Mot inconnu : iptables-restore =>         up iptables-restore < /etc/ltsp/nat.conf | iptables-restore

190 Après la préposition “pour”, le verbe devrait probablement être à l’infinitif. => pour vous assurez que les tables ''nat'' sont configurées correctement à chaque redémarrage. | assurez => suggestions : ['assurer']
190 Guillemets typographiques ouvrants. => pour vous assurez que les tables ''nat'' sont configurées correctement à chaque redémarrage. | '' => suggestions : ['«\xa0', '“']
190 Mot inconnu : nat => pour vous assurez que les tables ''nat'' sont configurées correctement à chaque redémarrage. | nat
190 Guillemets typographiques fermants. => pour vous assurez que les tables ''nat'' sont configurées correctement à chaque redémarrage. | '' => suggestions : ['\xa0»', '”']

194 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #net.ipv4.conf.default.forwarding=1    |      => suggestions : ['']
194 Espace(s) en fin de ligne à supprimer. =>     #net.ipv4.conf.default.forwarding=1    |     => suggestions : ['']
201 Espace(s) surnuméraire(s) à supprimer. => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] |     => suggestions : [' ']
201 Il manque un espace. => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | gauthier => suggestions : [' Gauthier']
201 Espace(s) surnuméraire(s) à supprimer. => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] |    => suggestions : [' ']
201 Mot inconnu : Persistence => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | persistence
201 Guillemets typographiques ouvrants. => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | " => suggestions : ['«\xa0', '“']
201 Mot inconnu : ip => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | ip
201 Mot inconnu : forwarding => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | forwarding
201 Guillemets typographiques fermants. => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | " => suggestions : ['\xa0»', '”']
201 Il manque un espace. => //Contributeurs :   * [[https://wiki.ubuntu.com/ThinClientHowto|Traduction et amélioration]] par [[utilisateurs:Gauthier]].  * [[https://wiki.ubuntu.com/ThinClientHowto|Persistence de l'"ip forwarding" après redémarrage]] par [[utilisateurs:vpxavier]] | vpxavier => suggestions : [' vpxavier']
