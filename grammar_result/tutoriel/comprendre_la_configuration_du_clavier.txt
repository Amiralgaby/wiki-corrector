8 Pas d’espace après ce signe. => Ce qui est envoyé à l'ordinateur est en réalité une suite de valeurs hexadécimales appelées **« scan-codes »** qui représentent la position physique de la touche sur le clavier et des informations précisant s'il s'agit de l'actionnement ou du relâchement de la touche. C'est le système d'exploitation qui va interpréter ces codes plus ou moins directement et transmettre aux applications un **symbole de touche** (( //keysymbol// )). <|> (  => suggestions : ['(']
8 Mot inconnu : keysymbol => Ce qui est envoyé à l'ordinateur est en réalité une suite de valeurs hexadécimales appelées **« scan-codes »** qui représentent la position physique de la touche sur le clavier et des informations précisant s'il s'agit de l'actionnement ou du relâchement de la touche. C'est le système d'exploitation qui va interpréter ces codes plus ou moins directement et transmettre aux applications un **symbole de touche** (( //keysymbol// )). <|> keysymbol
8 Pas d’espace avant ce signe. => Ce qui est envoyé à l'ordinateur est en réalité une suite de valeurs hexadécimales appelées **« scan-codes »** qui représentent la position physique de la touche sur le clavier et des informations précisant s'il s'agit de l'actionnement ou du relâchement de la touche. C'est le système d'exploitation qui va interpréter ces codes plus ou moins directement et transmettre aux applications un **symbole de touche** (( //keysymbol// )). <|>  ) => suggestions : [')']

10 Pas d’espace après ce signe. => Ces symboles de touche (( //keysymbols// )) envoyés aux applications représentent : <|> (  => suggestions : ['(']
10 Mot inconnu : keysymbols => Ces symboles de touche (( //keysymbols// )) envoyés aux applications représentent : <|> keysymbols
10 Pas d’espace avant ce signe. => Ces symboles de touche (( //keysymbols// )) envoyés aux applications représentent : <|>  ) => suggestions : [')']
11 Espace(s) surnuméraire(s) à supprimer. =>   * soit  des **caractères directement affichables**, parmi lesquels les lettres et les chiffres ou divers symboles graphiques,  <|>    => suggestions : [' ']
11 Espace(s) en fin de ligne à supprimer. =>   * soit  des **caractères directement affichables**, parmi lesquels les lettres et les chiffres ou divers symboles graphiques,  <|>   => suggestions : ['']
12 Espace(s) surnuméraire(s) à supprimer. =>   * soit  des **codes d’événement ou de fonction** que chacune des applications doit interpréter à sa manière. <|>    => suggestions : [' ']
14 Pas d’espace après ce signe. => Dans le détail, les « **scan-codes** » sont d'abord transformés en **codes de touches** (( //keycodes// ))   puis en **symboles de touches** ((// keysymbols// )) .\\ <|> (  => suggestions : ['(']
14 Mot inconnu : keycodes => Dans le détail, les « **scan-codes** » sont d'abord transformés en **codes de touches** (( //keycodes// ))   puis en **symboles de touches** ((// keysymbols// )) .\\ <|> keycodes
14 Pas d’espace avant ce signe. => Dans le détail, les « **scan-codes** » sont d'abord transformés en **codes de touches** (( //keycodes// ))   puis en **symboles de touches** ((// keysymbols// )) .\\ <|>  ) => suggestions : [')']
14 Mot inconnu : keysymbols => Dans le détail, les « **scan-codes** » sont d'abord transformés en **codes de touches** (( //keycodes// ))   puis en **symboles de touches** ((// keysymbols// )) .\\ <|> keysymbols
14 Pas d’espace avant ce signe. => Dans le détail, les « **scan-codes** » sont d'abord transformés en **codes de touches** (( //keycodes// ))   puis en **symboles de touches** ((// keysymbols// )) .\\ <|>  ) => suggestions : [')']

16 Mot inconnu : keyboard => La deuxième étape de l'interprétation fait appel à une table de correspondance entre les **codes de touches** (qui sont invariants) et les **symboles de touches**. Cette table de correspondance qui représente la disposition des caractères sur les touches est appelée «** agencement de clavier**((//keyboard layout//)) »  .\\ <|> keyboard
16 Mot inconnu : layout => La deuxième étape de l'interprétation fait appel à une table de correspondance entre les **codes de touches** (qui sont invariants) et les **symboles de touches**. Cette table de correspondance qui représente la disposition des caractères sur les touches est appelée «** agencement de clavier**((//keyboard layout//)) »  .\\ <|> layout
16 Espace(s) surnuméraire(s) à supprimer. => La deuxième étape de l'interprétation fait appel à une table de correspondance entre les **codes de touches** (qui sont invariants) et les **symboles de touches**. Cette table de correspondance qui représente la disposition des caractères sur les touches est appelée «** agencement de clavier**((//keyboard layout//)) »  .\\ <|>    => suggestions : [' ']

19 Mot inconnu : Scancode => ==== Scancode des touches transmis par le clavier ==== <|> scancode

20 Mot inconnu : scancode => L'appui sur une touche du clavier envoie une séquence scancode au pilote clavier du noyau Linux. Quelques claviers peuvent-être programmés, mais généralement le scancode correspond à des touches fixes. <|> scancode
20 Mot inconnu : scancode => L'appui sur une touche du clavier envoie une séquence scancode au pilote clavier du noyau Linux. Quelques claviers peuvent-être programmés, mais généralement le scancode correspond à des touches fixes. <|> scancode

23 Mot inconnu : BÉPOÈ => Exemple pour AZERTY/BÉPOÈ!/QWERTY <|> bépoè

38 Mot inconnu : scancode => Lorsque l'on appuie **↓** sur la même touche «**A**» (AZERTY), soit B (BÉPO), soit Q (QWERTY), le scancode généré est alors : **0x10**. <|> scancode
38 Mot inconnu : x10 => Lorsque l'on appuie **↓** sur la même touche «**A**» (AZERTY), soit B (BÉPO), soit Q (QWERTY), le scancode généré est alors : **0x10**. <|> x10

39 Mot inconnu : scancode => Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0x90**.  <|> scancode
39 Mot inconnu : x90 => Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0x90**.  <|> x90
39 Espace(s) en fin de ligne à supprimer. => Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0x90**.  <|>   => suggestions : ['']

40 Mot inconnu : scancode => La séquence de scancode «**0x10 0x90**» correspond alors au caractère A pour l'Azerty. <|> scancode
40 Mot inconnu : x10 => La séquence de scancode «**0x10 0x90**» correspond alors au caractère A pour l'Azerty. <|> x10
40 Mot inconnu : x90 => La séquence de scancode «**0x10 0x90**» correspond alors au caractère A pour l'Azerty. <|> x90
42 Mot inconnu : xe0 => Lorsque l'on appuie **↓** sur la touche «**Alt Gr**» la séquence de code générée est : **0xe0 0x38**. Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0xe0 0xb8**. <|> xe0
42 Mot inconnu : x38 => Lorsque l'on appuie **↓** sur la touche «**Alt Gr**» la séquence de code générée est : **0xe0 0x38**. Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0xe0 0xb8**. <|> x38
42 Mot inconnu : scancode => Lorsque l'on appuie **↓** sur la touche «**Alt Gr**» la séquence de code générée est : **0xe0 0x38**. Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0xe0 0xb8**. <|> scancode
42 Mot inconnu : xe0 => Lorsque l'on appuie **↓** sur la touche «**Alt Gr**» la séquence de code générée est : **0xe0 0x38**. Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0xe0 0xb8**. <|> xe0
42 Mot inconnu : xb8 => Lorsque l'on appuie **↓** sur la touche «**Alt Gr**» la séquence de code générée est : **0xe0 0x38**. Lorsque l'on relâche la touche **↑** le scancode généré est alors : **0xe0 0xb8**. <|> xb8

43 Mot inconnu : scancode => La séquence de scancode «**0xe0 0x38 0xe0 0xb8**» correspond alors à une fonction. <|> scancode
43 Mot inconnu : xe0 => La séquence de scancode «**0xe0 0x38 0xe0 0xb8**» correspond alors à une fonction. <|> xe0
43 Mot inconnu : x38 => La séquence de scancode «**0xe0 0x38 0xe0 0xb8**» correspond alors à une fonction. <|> x38
43 Mot inconnu : xe0 => La séquence de scancode «**0xe0 0x38 0xe0 0xb8**» correspond alors à une fonction. <|> xe0
43 Mot inconnu : xb8 => La séquence de scancode «**0xe0 0x38 0xe0 0xb8**» correspond alors à une fonction. <|> xb8

45 Mot inconnu : K93SM => Exemple de codes clavier pour un portable ASUS K93SM <|> k93sm

48 Mot inconnu : Keycodes => ==== Keycodes des touches du clavier ==== <|> keycodes

49 Mot inconnu : scancode => Comme nous l'avons vu en introduction des séquences de scancode sont transformées en **code de touche**, c'est ce que nous appelons le **keycode**. <|> scancode
49 Mot inconnu : keycode => Comme nous l'avons vu en introduction des séquences de scancode sont transformées en **code de touche**, c'est ce que nous appelons le **keycode**. <|> keycode

53 Mot inconnu : BÉPOÈ => Exemple pour AZERTY/BÉPOÈ!/QWERTY <|> bépoè

74 Mot inconnu : scancode => La séquence de scancode «0x10 0x90» du caractère «**A**» (AZERTY), soit B (BÉPO), soit Q (QWERTY), correspond alors au keycode **16**. <|> scancode
74 Mot inconnu : x10 => La séquence de scancode «0x10 0x90» du caractère «**A**» (AZERTY), soit B (BÉPO), soit Q (QWERTY), correspond alors au keycode **16**. <|> x10
74 Mot inconnu : x90 => La séquence de scancode «0x10 0x90» du caractère «**A**» (AZERTY), soit B (BÉPO), soit Q (QWERTY), correspond alors au keycode **16**. <|> x90
74 Mot inconnu : keycode => La séquence de scancode «0x10 0x90» du caractère «**A**» (AZERTY), soit B (BÉPO), soit Q (QWERTY), correspond alors au keycode **16**. <|> keycode

76 Mot inconnu : scancode => Et la séquence de scancode «0xe0 0x38 0xe0 0xb8» de la fonction «**Alt Gr**» correspond alors au keycode **100**. <|> scancode
76 Mot inconnu : xe0 => Et la séquence de scancode «0xe0 0x38 0xe0 0xb8» de la fonction «**Alt Gr**» correspond alors au keycode **100**. <|> xe0
76 Mot inconnu : x38 => Et la séquence de scancode «0xe0 0x38 0xe0 0xb8» de la fonction «**Alt Gr**» correspond alors au keycode **100**. <|> x38
76 Mot inconnu : xe0 => Et la séquence de scancode «0xe0 0x38 0xe0 0xb8» de la fonction «**Alt Gr**» correspond alors au keycode **100**. <|> xe0
76 Mot inconnu : xb8 => Et la séquence de scancode «0xe0 0x38 0xe0 0xb8» de la fonction «**Alt Gr**» correspond alors au keycode **100**. <|> xb8
76 Mot inconnu : keycode => Et la séquence de scancode «0xe0 0x38 0xe0 0xb8» de la fonction «**Alt Gr**» correspond alors au keycode **100**. <|> keycode

78 Mot inconnu : keycode => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> keycode
78 Mot inconnu : Fn => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> fn
78 Mot inconnu : Screen => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> screen
78 Mot inconnu : scancode => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> scancode
78 Mot inconnu : xe0 => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> xe0
78 Mot inconnu : x63 => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> x63
78 Mot inconnu : xe0 => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> xe0
78 Mot inconnu : xe3 => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> xe3
78 Mot inconnu : keycode => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> keycode
78 Grands nombres : utilisez des espaces insécables. => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> 143 431 => suggestions : ['143\xa0431']
78 Typographie : un ou trois points ? => Le keycode a aussi ses fonctions, par exemple pour le clavier si dessous l'appui sur «**Fn Off Screen**» de scancode «**0xe0 0x63 0xe0 0xe3**» génère l'appel à la fonction «**143**» avec l'option «**431**», soit le keycode «**143 431**».. <|> .. => suggestions : ['…', '.']

80 Mot inconnu : K93SM => Exemple de codes clavier pour un portable ASUS K93SM : <|> k93sm

83 Mot inconnu : console-setup-linux => Vérifiez que vous avez le paquet console-setup-linux installé : <|> console-setup-linux

97 Mot inconnu : keycodes => L'interprétation fait appel à une table de correspondance entre les codes de touches keycodes (qui sont invariantes) et les symboles de touches. Cette table de correspondance, qui représente la disposition des caractères sur les touches correspondant à l'**agencement du clavier**, se trouve dans le répertoire «**/usr/share/keymaps/**». <|> keycodes

98 Mot inconnu : loadkeys => Pour charger la table de l'agencement du clavier il faut utiliser la commande «**loadkeys**». <|> loadkeys

103 Il manque un espace. => <note warning>Si cette commande ne fonctionne pas commencez par la [[tutoriel:comprendre_la_configuration_du_clavier#configuration_initiale|Configuration initiale]]</note> <|> comprendre_la_configuration_du_clavier => suggestions : [' comprendre_la_configuration_du_clavier']
103 Mot inconnu : comprendre_la_configuration_du_clavier => <note warning>Si cette commande ne fonctionne pas commencez par la [[tutoriel:comprendre_la_configuration_du_clavier#configuration_initiale|Configuration initiale]]</note> <|> comprendre_la_configuration_du_clavier

110 Mot inconnu : TeleTYpewriter => La console [[http://blog.securite.free.fr/index.php/difference-les-terminaux-sous-linux-ttypts|TeleTYpewriter agetty]] utilise les polices Unicode, mais elle ne gère pas vraiment l’Unicode avec tous ses caractères. <|> teletypewriter
110 Mot inconnu : agetty => La console [[http://blog.securite.free.fr/index.php/difference-les-terminaux-sous-linux-ttypts|TeleTYpewriter agetty]] utilise les polices Unicode, mais elle ne gère pas vraiment l’Unicode avec tous ses caractères. <|> agetty

112 Accord de nombre erroné : « jeux » est au pluriel. => Vous pouvez afficher le jeux de caractères présent dans le terminal TTY avec la commande : <|> le => suggestions : ['les']
112 Accord de nombre erroné : « jeux » devrait être au singulier. => Vous pouvez afficher le jeux de caractères présent dans le terminal TTY avec la commande : <|> jeux => suggestions : ['jeu']
112 Mot inconnu : TTY => Vous pouvez afficher le jeux de caractères présent dans le terminal TTY avec la commande : <|> tty

157 Mot inconnu : dvorack-fr-bepo-utf8 => Copiez le fichier dvorack-fr-bepo-utf8.kmap.gz pour travailler avec : <|> dvorack-fr-bepo-utf8
157 Mot inconnu : kmap => Copiez le fichier dvorack-fr-bepo-utf8.kmap.gz pour travailler avec : <|> kmap
157 Mot inconnu : gz => Copiez le fichier dvorack-fr-bepo-utf8.kmap.gz pour travailler avec : <|> gz

160 Mot inconnu : tty => Basculez sur une console tty (Ctlr+Alt+Fx), se connecter si nécessaire, puis saisissez une fonte de police de terminal compatible comme Uni2-Fixed16: <|> tty
160 Mot inconnu : Ctlr => Basculez sur une console tty (Ctlr+Alt+Fx), se connecter si nécessaire, puis saisissez une fonte de police de terminal compatible comme Uni2-Fixed16: <|> ctlr
160 Mot inconnu : Fx => Basculez sur une console tty (Ctlr+Alt+Fx), se connecter si nécessaire, puis saisissez une fonte de police de terminal compatible comme Uni2-Fixed16: <|> fx
160 Mot inconnu : Uni2-Fixed16 => Basculez sur une console tty (Ctlr+Alt+Fx), se connecter si nécessaire, puis saisissez une fonte de police de terminal compatible comme Uni2-Fixed16: <|> uni2-fixed16

163 Mot inconnu : mon-bepo => Puis chargez le clavier généré mon-bepo.map : <|> mon-bepo
163 Mot inconnu : map => Puis chargez le clavier généré mon-bepo.map : <|> map

166 Mot inconnu : charset => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> charset
166 Guillemets typographiques ouvrants. => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> " => suggestions : ['«\xa0', '“']
166 Mot inconnu : unicode => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> unicode
166 Guillemets typographiques fermants. => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> " => suggestions : ['\xa0»', '”']
166 Mot inconnu : mon-bepo => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> mon-bepo
166 Mot inconnu : map => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> map
166 Mot inconnu : charset => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> charset
166 Guillemets typographiques ouvrants. => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> " => suggestions : ['«\xa0', '“']
166 Mot inconnu : iso-8859-15 => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> iso-8859-15
166 Guillemets typographiques fermants. => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> " => suggestions : ['\xa0»', '”']
166 Mot inconnu : sudo => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> sudo
166 Mot inconnu : loadkeys => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> loadkeys
166 Espace(s) surnuméraire(s) à supprimer. => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|>    => suggestions : [' ']
166 Mot inconnu : mon-bepo => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> mon-bepo
166 Mot inconnu : map => Vous devez alors modifier la directive **charset "unicode"** du fichier mon-bepo.map en **charset "iso-8859-15"** puis recharger le fichier **sudo loadkeys  ~/mon-bepo.map**. <|> map

171 Mot inconnu : mon-bepo => Voyons ce que le fichier mon-bepo.map contient pour le keycode 5 : <|> mon-bepo
171 Mot inconnu : map => Voyons ce que le fichier mon-bepo.map contient pour le keycode 5 : <|> map
171 Mot inconnu : keycode => Voyons ce que le fichier mon-bepo.map contient pour le keycode 5 : <|> keycode

173 Mot inconnu : keycode => keycode   5 = +parenleft +four bracketleft  U+2264 <|> keycode
173 Espace(s) surnuméraire(s) à supprimer. => keycode   5 = +parenleft +four bracketleft  U+2264 <|>     => suggestions : [' ']
173 Mot inconnu : parenleft => keycode   5 = +parenleft +four bracketleft  U+2264 <|> parenleft
173 Mot inconnu : bracketleft => keycode   5 = +parenleft +four bracketleft  U+2264 <|> bracketleft
173 Espace(s) surnuméraire(s) à supprimer. => keycode   5 = +parenleft +four bracketleft  U+2264 <|>    => suggestions : [' ']

178 Mot inconnu : keycode => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> keycode
178 Guillemets typographiques ouvrants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['«\xa0', '“']
178 Guillemets typographiques fermants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['\xa0»', '”']
178 Guillemets typographiques ouvrants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['«\xa0', '“']
178 Guillemets typographiques fermants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['\xa0»', '”']
178 Guillemets typographiques ouvrants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['«\xa0', '“']
178 Guillemets typographiques ouvrants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['«\xa0', '“']
178 Guillemets typographiques fermants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['\xa0»', '”']
178 Guillemets typographiques ouvrants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['«\xa0', '“']
178 Guillemets typographiques fermants. => <file>keycode "n° Touche" = "Caractère par Défaut" "Caractère avec la touche ⇑" "Caractère avec la touche Alt Gr" "Caractère avec les touches ⇑ + Alt Gr"</file> <|> " => suggestions : ['\xa0»', '”']

180 Mot inconnu : parentleft => Dans notre exemple la première ligne indique que lors de la frappe sur la touche on affiche **+parentleft** "**(**", lorsque l'on utilise la touche **⇑** on affiche **+four** "**4**", lorsque l'on utilise la touche **Alt Gr** on affiche **bracketleft** "**[**", et enfin avec la combinaison **⇑+Alt Gr** on  affiche **U+2264** "**≤**" <|> parentleft
180 Mot inconnu : bracketleft => Dans notre exemple la première ligne indique que lors de la frappe sur la touche on affiche **+parentleft** "**(**", lorsque l'on utilise la touche **⇑** on affiche **+four** "**4**", lorsque l'on utilise la touche **Alt Gr** on affiche **bracketleft** "**[**", et enfin avec la combinaison **⇑+Alt Gr** on  affiche **U+2264** "**≤**" <|> bracketleft
180 Espace(s) surnuméraire(s) à supprimer. => Dans notre exemple la première ligne indique que lors de la frappe sur la touche on affiche **+parentleft** "**(**", lorsque l'on utilise la touche **⇑** on affiche **+four** "**4**", lorsque l'on utilise la touche **Alt Gr** on affiche **bracketleft** "**[**", et enfin avec la combinaison **⇑+Alt Gr** on  affiche **U+2264** "**≤**" <|>    => suggestions : [' ']

182 Guillemets typographiques ouvrants. => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> " => suggestions : ['«\xa0', '“']
182 Guillemets typographiques fermants. => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> " => suggestions : ['\xa0»', '”']
182 Mot inconnu : keycode => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> keycode
182 Guillemets typographiques ouvrants. => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> " => suggestions : ['«\xa0', '“']
182 Guillemets typographiques fermants. => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> " => suggestions : ['\xa0»', '”']
182 Guillemets typographiques ouvrants. => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> " => suggestions : ['«\xa0', '“']
182 Guillemets typographiques fermants. => <file>"Touche de composition ou pas" keycode "n° Touche" = "Ma Variable"</file> <|> " => suggestions : ['\xa0»', '”']

184 Mot inconnu : Meta_parentleft => Dans notre exemple on définit la variable "**Meta_parentleft**" pour la touche lorsqu'elle est utilisée avec **Alt** , "**Meta_four**" lorsque elle est utilisée avec **Alt** + **⇑**, et la variable "**Meta_bracketleft**" lorsqu'elle est utilisée avec **Alt** + **Alt Gr**. <|> meta_parentleft
184 Pas d’espace avant une virgule. => Dans notre exemple on définit la variable "**Meta_parentleft**" pour la touche lorsqu'elle est utilisée avec **Alt** , "**Meta_four**" lorsque elle est utilisée avec **Alt** + **⇑**, et la variable "**Meta_bracketleft**" lorsqu'elle est utilisée avec **Alt** + **Alt Gr**. <|>  , => suggestions : [',']
184 Mot inconnu : Meta_four => Dans notre exemple on définit la variable "**Meta_parentleft**" pour la touche lorsqu'elle est utilisée avec **Alt** , "**Meta_four**" lorsque elle est utilisée avec **Alt** + **⇑**, et la variable "**Meta_bracketleft**" lorsqu'elle est utilisée avec **Alt** + **Alt Gr**. <|> meta_four
184 Mot inconnu : Meta_bracketleft => Dans notre exemple on définit la variable "**Meta_parentleft**" pour la touche lorsqu'elle est utilisée avec **Alt** , "**Meta_four**" lorsque elle est utilisée avec **Alt** + **⇑**, et la variable "**Meta_bracketleft**" lorsqu'elle est utilisée avec **Alt** + **Alt Gr**. <|> meta_bracketleft

188 Mot inconnu : dumpkeys => La première action à faire c'est de récupérer les variables disponibles pour le paramétrage du clavier avec la commande **dumpkeys** : <|> dumpkeys
266 Mot inconnu : keymaps => == Définition des touches «keymaps» == <|> keymaps

267 Mot inconnu : keymaps => Comme nous l'avons vu précédemment pour générer plusieurs caractères avec une touche on la combine avec d'autres touches modificatrices que l'on appelle les «**keymaps**» <|> keymaps

271 Mot inconnu : mon-bepo => Dans le fichier de configuration d'un clavier **~/mon-bepo.map** nous pouvons précisé les touches modificatrices utilisables par défaut pour la carte de symboles. <|> mon-bepo
271 Mot inconnu : map => Dans le fichier de configuration d'un clavier **~/mon-bepo.map** nous pouvons précisé les touches modificatrices utilisables par défaut pour la carte de symboles. <|> map
271 S’il s’agit d’une action que le sujet peut accomplir, le verbe devrait être à l’infinitif. => Dans le fichier de configuration d'un clavier **~/mon-bepo.map** nous pouvons précisé les touches modificatrices utilisables par défaut pour la carte de symboles. <|> précisé => suggestions : ['préciser']

280 Mot inconnu : MajG => MajG = 16 <|> majg

281 Mot inconnu : MajD => MajD = 32 <|> majd

282 Mot inconnu : CtrlG => CtrlG = 64 <|> ctrlg

283 Mot inconnu : CtrlD => CtrlD = 128 <|> ctrld

284 Mot inconnu : VerMaj => VerMaj = 256</file> <|> vermaj

285 Guillemets typographiques ouvrants. => Pour gérer les touches "Touche seule", Maj, AltGr, Maj+AltGr nous devrons définir au moins le keymaps suivant :  <|> " => suggestions : ['«\xa0', '“']
285 Guillemets typographiques fermants. => Pour gérer les touches "Touche seule", Maj, AltGr, Maj+AltGr nous devrons définir au moins le keymaps suivant :  <|> " => suggestions : ['\xa0»', '”']
285 Mot inconnu : keymaps => Pour gérer les touches "Touche seule", Maj, AltGr, Maj+AltGr nous devrons définir au moins le keymaps suivant :  <|> keymaps
285 Espace(s) en fin de ligne à supprimer. => Pour gérer les touches "Touche seule", Maj, AltGr, Maj+AltGr nous devrons définir au moins le keymaps suivant :  <|>   => suggestions : ['']

286 Mot inconnu : keymaps => <file>keymaps 0-3</file> <|> keymaps

287 Mot inconnu : keymaps => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> keymaps
287 Mot inconnu : mon-bepo => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> mon-bepo
287 Mot inconnu : map => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> map
287 Mot inconnu : loadkeys => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> loadkeys
287 Mot inconnu : too => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> too
287 Mot inconnu : many => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> many
287 Mot inconnu : entries => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> entries
287 Mot inconnu : one => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> one
287 Mot inconnu : line => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|> line
287 Espace(s) en fin de ligne à supprimer. => <note warning>Si le keymaps défini ne correspond pas aux combinaisons renseignées dans le fichier ~/mon-bepo.map, lors du chargement du fichier avec la commande loadkeys une erreur «**too many (//x//) entries on one line**» est affichée.</note>  <|>   => suggestions : ['']

289 Mot inconnu : keymaps => <file>keymaps 0-4,8,12</file> <|> keymaps
291 Espace(s) en fin de ligne à supprimer. =>   * 8 : Alt,  <|>   => suggestions : ['']

294 Mot inconnu : keycode => <file>keycode «N° Touche» = Touche Maj AltGr Maj+AltGr Ctrl Alt Alt+Ctrl</file> <|> keycode
294 Doublon. => <file>keycode «N° Touche» = Touche Maj AltGr Maj+AltGr Ctrl Alt Alt+Ctrl</file> <|> alt alt => suggestions : ['Alt']

297 Mot inconnu : keymaps => <file>keymaps 0-15</file> <|> keymaps

299 Mot inconnu : Uni2-Fixed16 => == Affichage d'un caractère de la table de caractères de Uni2-Fixed16.psf == <|> uni2-fixed16
299 Mot inconnu : psf => == Affichage d'un caractère de la table de caractères de Uni2-Fixed16.psf == <|> psf

301 Mot inconnu : mon-bepo => Pour cela on modifie le fichier **~/mon-bepo.map** : <|> mon-bepo
301 Mot inconnu : map => Pour cela on modifie le fichier **~/mon-bepo.map** : <|> map

302 Mot inconnu : keycode => <file>keycode  12 = equal U+00b0 U+2260 U+00b4 #U+2032</file> <|> keycode
302 Espace(s) surnuméraire(s) à supprimer. => <file>keycode  12 = equal U+00b0 U+2260 U+00b4 #U+2032</file> <|>    => suggestions : [' ']
302 Mot inconnu : equal => <file>keycode  12 = equal U+00b0 U+2260 U+00b4 #U+2032</file> <|> equal
302 Mot inconnu : b0 => <file>keycode  12 = equal U+00b0 U+2260 U+00b4 #U+2032</file> <|> b0
302 Si “U” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => <file>keycode  12 = equal U+00b0 U+2260 U+00b4 #U+2032</file> <|> 2260 u => suggestions : ['2\xa0260\xa0U']
302 Mot inconnu : b4 => <file>keycode  12 = equal U+00b0 U+2260 U+00b4 #U+2032</file> <|> b4

304 Mot inconnu : keycode => <file>keycode  13 = percent grave U+2030 U+02dd #U+2033</file> <|> keycode
304 Espace(s) surnuméraire(s) à supprimer. => <file>keycode  13 = percent grave U+2030 U+02dd #U+2033</file> <|>    => suggestions : [' ']
304 Si “U” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => <file>keycode  13 = percent grave U+2030 U+02dd #U+2033</file> <|> 2030 u => suggestions : ['2\xa0030\xa0U']
304 Mot inconnu : dd => <file>keycode  13 = percent grave U+2030 U+02dd #U+2033</file> <|> dd

308 Mot inconnu : F70 => <file>string F70 = "ij" <|> f70
308 Guillemets typographiques ouvrants. => <file>string F70 = "ij" <|> " => suggestions : ['«\xa0', '“']
308 Mot inconnu : ij => <file>string F70 = "ij" <|> ij
308 Guillemets typographiques fermants. => <file>string F70 = "ij" <|> " => suggestions : ['\xa0»', '”']

309 Mot inconnu : F71 => string F71 = "IJ" <|> f71
309 Guillemets typographiques ouvrants. => string F71 = "IJ" <|> " => suggestions : ['«\xa0', '“']
309 Mot inconnu : IJ => string F71 = "IJ" <|> ij
309 Guillemets typographiques fermants. => string F71 = "IJ" <|> " => suggestions : ['\xa0»', '”']

310 Mot inconnu : keycode => keycode  25 = j J F70 F71 <|> keycode
310 Espace(s) surnuméraire(s) à supprimer. => keycode  25 = j J F70 F71 <|>    => suggestions : [' ']
310 Mot inconnu : F70 => keycode  25 = j J F70 F71 <|> f70
310 Mot inconnu : F71 => keycode  25 = j J F70 F71 <|> f71

317 Mot inconnu : keycode => <file>keycode 125 = Compose</file> <|> keycode

320 Mot inconnu : keycode => <file>keycode 22 = v V</file> <|> keycode

322 Mot inconnu : Uni2-Fixed16 => Puis on peut affecter les accents aux touches dont les caractères sont présents dans Uni2-Fixed16.psf : <|> uni2-fixed16
322 Mot inconnu : psf => Puis on peut affecter les accents aux touches dont les caractères sont présents dans Uni2-Fixed16.psf : <|> psf

323 Guillemets typographiques ouvrants. => <file>compose 'v' 'e' to U+011b <|> ' => suggestions : ['“', '‘', '‹']
323 Guillemets typographiques fermants. => <file>compose 'v' 'e' to U+011b <|> ' => suggestions : ['”', '’', '›']
323 Guillemets typographiques ouvrants. => <file>compose 'v' 'e' to U+011b <|> ' => suggestions : ['“', '‘', '‹']
323 Guillemets typographiques fermants. => <file>compose 'v' 'e' to U+011b <|> ' => suggestions : ['”', '’', '›']
323 Mot inconnu : to => <file>compose 'v' 'e' to U+011b <|> to

324 Guillemets typographiques ouvrants. => compose 'v' 'E' to U+011A <|> ' => suggestions : ['“', '‘', '‹']
324 Guillemets typographiques fermants. => compose 'v' 'E' to U+011A <|> ' => suggestions : ['”', '’', '›']
324 Guillemets typographiques ouvrants. => compose 'v' 'E' to U+011A <|> ' => suggestions : ['“', '‘', '‹']
324 Guillemets typographiques fermants. => compose 'v' 'E' to U+011A <|> ' => suggestions : ['”', '’', '›']
324 Mot inconnu : to => compose 'v' 'E' to U+011A <|> to

325 Guillemets typographiques ouvrants. => compose 'v' 'c' to U+010d <|> ' => suggestions : ['“', '‘', '‹']
325 Guillemets typographiques fermants. => compose 'v' 'c' to U+010d <|> ' => suggestions : ['”', '’', '›']
325 Guillemets typographiques ouvrants. => compose 'v' 'c' to U+010d <|> ' => suggestions : ['“', '‘', '‹']
325 Guillemets typographiques fermants. => compose 'v' 'c' to U+010d <|> ' => suggestions : ['”', '’', '›']
325 Mot inconnu : to => compose 'v' 'c' to U+010d <|> to

326 Guillemets typographiques ouvrants. => compose 'v' 'C' to U+010c <|> ' => suggestions : ['“', '‘', '‹']
326 Guillemets typographiques fermants. => compose 'v' 'C' to U+010c <|> ' => suggestions : ['”', '’', '›']
326 Guillemets typographiques ouvrants. => compose 'v' 'C' to U+010c <|> ' => suggestions : ['“', '‘', '‹']
326 Guillemets typographiques fermants. => compose 'v' 'C' to U+010c <|> ' => suggestions : ['”', '’', '›']
326 Mot inconnu : to => compose 'v' 'C' to U+010c <|> to

327 Guillemets typographiques ouvrants. => compose 'v' 't' to U+0165 <|> ' => suggestions : ['“', '‘', '‹']
327 Guillemets typographiques fermants. => compose 'v' 't' to U+0165 <|> ' => suggestions : ['”', '’', '›']
327 Guillemets typographiques ouvrants. => compose 'v' 't' to U+0165 <|> ' => suggestions : ['“', '‘', '‹']
327 Guillemets typographiques fermants. => compose 'v' 't' to U+0165 <|> ' => suggestions : ['”', '’', '›']
327 Mot inconnu : to => compose 'v' 't' to U+0165 <|> to

328 Guillemets typographiques ouvrants. => compose 'v' 'T' to U+0164 <|> ' => suggestions : ['“', '‘', '‹']
328 Guillemets typographiques fermants. => compose 'v' 'T' to U+0164 <|> ' => suggestions : ['”', '’', '›']
328 Guillemets typographiques ouvrants. => compose 'v' 'T' to U+0164 <|> ' => suggestions : ['“', '‘', '‹']
328 Guillemets typographiques fermants. => compose 'v' 'T' to U+0164 <|> ' => suggestions : ['”', '’', '›']
328 Mot inconnu : to => compose 'v' 'T' to U+0164 <|> to

329 Guillemets typographiques ouvrants. => compose 'v' 'd' to U+010f <|> ' => suggestions : ['“', '‘', '‹']
329 Guillemets typographiques fermants. => compose 'v' 'd' to U+010f <|> ' => suggestions : ['”', '’', '›']
329 Guillemets typographiques ouvrants. => compose 'v' 'd' to U+010f <|> ' => suggestions : ['“', '‘', '‹']
329 Guillemets typographiques fermants. => compose 'v' 'd' to U+010f <|> ' => suggestions : ['”', '’', '›']
329 Mot inconnu : to => compose 'v' 'd' to U+010f <|> to

330 Guillemets typographiques ouvrants. => compose 'v' 'D' to U+010e <|> ' => suggestions : ['“', '‘', '‹']
330 Guillemets typographiques fermants. => compose 'v' 'D' to U+010e <|> ' => suggestions : ['”', '’', '›']
330 Guillemets typographiques ouvrants. => compose 'v' 'D' to U+010e <|> ' => suggestions : ['“', '‘', '‹']
330 Guillemets typographiques fermants. => compose 'v' 'D' to U+010e <|> ' => suggestions : ['”', '’', '›']
330 Mot inconnu : to => compose 'v' 'D' to U+010e <|> to
330 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… => compose 'v' 'D' to U+010e <|> 010e => suggestions : ['010ᵉ']

331 Guillemets typographiques ouvrants. => compose 'v' 's' to U+0161 <|> ' => suggestions : ['“', '‘', '‹']
331 Guillemets typographiques fermants. => compose 'v' 's' to U+0161 <|> ' => suggestions : ['”', '’', '›']
331 Guillemets typographiques ouvrants. => compose 'v' 's' to U+0161 <|> ' => suggestions : ['“', '‘', '‹']
331 Guillemets typographiques fermants. => compose 'v' 's' to U+0161 <|> ' => suggestions : ['”', '’', '›']
331 Mot inconnu : to => compose 'v' 's' to U+0161 <|> to

332 Guillemets typographiques ouvrants. => compose 'v' 'S' to U+0160 <|> ' => suggestions : ['“', '‘', '‹']
332 Guillemets typographiques fermants. => compose 'v' 'S' to U+0160 <|> ' => suggestions : ['”', '’', '›']
332 Guillemets typographiques ouvrants. => compose 'v' 'S' to U+0160 <|> ' => suggestions : ['“', '‘', '‹']
332 Guillemets typographiques fermants. => compose 'v' 'S' to U+0160 <|> ' => suggestions : ['”', '’', '›']
332 Mot inconnu : to => compose 'v' 'S' to U+0160 <|> to

333 Guillemets typographiques ouvrants. => compose 'v' 'l' to U+013e <|> ' => suggestions : ['“', '‘', '‹']
333 Guillemets typographiques fermants. => compose 'v' 'l' to U+013e <|> ' => suggestions : ['”', '’', '›']
333 Guillemets typographiques ouvrants. => compose 'v' 'l' to U+013e <|> ' => suggestions : ['“', '‘', '‹']
333 Guillemets typographiques fermants. => compose 'v' 'l' to U+013e <|> ' => suggestions : ['”', '’', '›']
333 Mot inconnu : to => compose 'v' 'l' to U+013e <|> to
333 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… => compose 'v' 'l' to U+013e <|> 013e => suggestions : ['013ᵉ']

334 Guillemets typographiques ouvrants. => compose 'v' 'L' to U+013d <|> ' => suggestions : ['“', '‘', '‹']
334 Guillemets typographiques fermants. => compose 'v' 'L' to U+013d <|> ' => suggestions : ['”', '’', '›']
334 Guillemets typographiques ouvrants. => compose 'v' 'L' to U+013d <|> ' => suggestions : ['“', '‘', '‹']
334 Guillemets typographiques fermants. => compose 'v' 'L' to U+013d <|> ' => suggestions : ['”', '’', '›']
334 Mot inconnu : to => compose 'v' 'L' to U+013d <|> to

335 Guillemets typographiques ouvrants. => compose 'v' 'r' to U+0159 <|> ' => suggestions : ['“', '‘', '‹']
335 Guillemets typographiques fermants. => compose 'v' 'r' to U+0159 <|> ' => suggestions : ['”', '’', '›']
335 Guillemets typographiques ouvrants. => compose 'v' 'r' to U+0159 <|> ' => suggestions : ['“', '‘', '‹']
335 Guillemets typographiques fermants. => compose 'v' 'r' to U+0159 <|> ' => suggestions : ['”', '’', '›']
335 Mot inconnu : to => compose 'v' 'r' to U+0159 <|> to

336 Guillemets typographiques ouvrants. => compose 'v' 'R' to U+0158 <|> ' => suggestions : ['“', '‘', '‹']
336 Guillemets typographiques fermants. => compose 'v' 'R' to U+0158 <|> ' => suggestions : ['”', '’', '›']
336 Guillemets typographiques ouvrants. => compose 'v' 'R' to U+0158 <|> ' => suggestions : ['“', '‘', '‹']
336 Guillemets typographiques fermants. => compose 'v' 'R' to U+0158 <|> ' => suggestions : ['”', '’', '›']
336 Mot inconnu : to => compose 'v' 'R' to U+0158 <|> to

337 Guillemets typographiques ouvrants. => compose 'v' 'n' to U+0148 <|> ' => suggestions : ['“', '‘', '‹']
337 Guillemets typographiques fermants. => compose 'v' 'n' to U+0148 <|> ' => suggestions : ['”', '’', '›']
337 Guillemets typographiques ouvrants. => compose 'v' 'n' to U+0148 <|> ' => suggestions : ['“', '‘', '‹']
337 Guillemets typographiques fermants. => compose 'v' 'n' to U+0148 <|> ' => suggestions : ['”', '’', '›']
337 Mot inconnu : to => compose 'v' 'n' to U+0148 <|> to

338 Guillemets typographiques ouvrants. => compose 'v' 'N' to U+0147 <|> ' => suggestions : ['“', '‘', '‹']
338 Guillemets typographiques fermants. => compose 'v' 'N' to U+0147 <|> ' => suggestions : ['”', '’', '›']
338 Guillemets typographiques ouvrants. => compose 'v' 'N' to U+0147 <|> ' => suggestions : ['“', '‘', '‹']
338 Guillemets typographiques fermants. => compose 'v' 'N' to U+0147 <|> ' => suggestions : ['”', '’', '›']
338 Mot inconnu : to => compose 'v' 'N' to U+0147 <|> to

339 Guillemets typographiques ouvrants. => compose 'v' 'z' to U+017e <|> ' => suggestions : ['“', '‘', '‹']
339 Guillemets typographiques fermants. => compose 'v' 'z' to U+017e <|> ' => suggestions : ['”', '’', '›']
339 Guillemets typographiques ouvrants. => compose 'v' 'z' to U+017e <|> ' => suggestions : ['“', '‘', '‹']
339 Guillemets typographiques fermants. => compose 'v' 'z' to U+017e <|> ' => suggestions : ['”', '’', '›']
339 Mot inconnu : to => compose 'v' 'z' to U+017e <|> to
339 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… => compose 'v' 'z' to U+017e <|> 017e => suggestions : ['017ᵉ']

340 Guillemets typographiques ouvrants. => compose 'v' 'Z' to U+017d</file> <|> ' => suggestions : ['“', '‘', '‹']
340 Guillemets typographiques fermants. => compose 'v' 'Z' to U+017d</file> <|> ' => suggestions : ['”', '’', '›']
340 Guillemets typographiques ouvrants. => compose 'v' 'Z' to U+017d</file> <|> ' => suggestions : ['“', '‘', '‹']
340 Guillemets typographiques fermants. => compose 'v' 'Z' to U+017d</file> <|> ' => suggestions : ['”', '’', '›']
340 Mot inconnu : to => compose 'v' 'Z' to U+017d</file> <|> to

343 Mot inconnu : keycode => <file>keycode 17 = +eacute +Eacute</file> <|> keycode
343 Mot inconnu : eacute => <file>keycode 17 = +eacute +Eacute</file> <|> eacute
343 Mot inconnu : Eacute => <file>keycode 17 = +eacute +Eacute</file> <|> eacute

347 Guillemets typographiques ouvrants. => <file>compose 'é' 'ê' to 'ê' <|> ' => suggestions : ['“', '‘', '‹']
347 Mot inconnu : é => <file>compose 'é' 'ê' to 'ê' <|> é
347 Guillemets typographiques fermants. => <file>compose 'é' 'ê' to 'ê' <|> ' => suggestions : ['”', '’', '›']
347 Guillemets typographiques ouvrants. => <file>compose 'é' 'ê' to 'ê' <|> ' => suggestions : ['“', '‘', '‹']
347 Mot inconnu : ê => <file>compose 'é' 'ê' to 'ê' <|> ê
347 Guillemets typographiques fermants. => <file>compose 'é' 'ê' to 'ê' <|> ' => suggestions : ['”', '’', '›']
347 Mot inconnu : to => <file>compose 'é' 'ê' to 'ê' <|> to
347 Guillemets typographiques ouvrants. => <file>compose 'é' 'ê' to 'ê' <|> ' => suggestions : ['“', '‘', '‹']
347 Mot inconnu : ê => <file>compose 'é' 'ê' to 'ê' <|> ê
347 Guillemets typographiques fermants. => <file>compose 'é' 'ê' to 'ê' <|> ' => suggestions : ['”', '’', '›']

348 Guillemets typographiques ouvrants. => compose 'é' 'Ê' to 'Ê' <|> ' => suggestions : ['“', '‘', '‹']
348 Mot inconnu : é => compose 'é' 'Ê' to 'Ê' <|> é
348 Guillemets typographiques fermants. => compose 'é' 'Ê' to 'Ê' <|> ' => suggestions : ['”', '’', '›']
348 Guillemets typographiques ouvrants. => compose 'é' 'Ê' to 'Ê' <|> ' => suggestions : ['“', '‘', '‹']
348 Mot inconnu : Ê => compose 'é' 'Ê' to 'Ê' <|> ê
348 Guillemets typographiques fermants. => compose 'é' 'Ê' to 'Ê' <|> ' => suggestions : ['”', '’', '›']
348 Mot inconnu : to => compose 'é' 'Ê' to 'Ê' <|> to
348 Guillemets typographiques ouvrants. => compose 'é' 'Ê' to 'Ê' <|> ' => suggestions : ['“', '‘', '‹']
348 Mot inconnu : Ê => compose 'é' 'Ê' to 'Ê' <|> ê
348 Guillemets typographiques fermants. => compose 'é' 'Ê' to 'Ê' <|> ' => suggestions : ['”', '’', '›']

349 Guillemets typographiques ouvrants. => compose 'é' 'a' to U+00e1 <|> ' => suggestions : ['“', '‘', '‹']
349 Mot inconnu : é => compose 'é' 'a' to U+00e1 <|> é
349 Guillemets typographiques fermants. => compose 'é' 'a' to U+00e1 <|> ' => suggestions : ['”', '’', '›']
349 Guillemets typographiques ouvrants. => compose 'é' 'a' to U+00e1 <|> ' => suggestions : ['“', '‘', '‹']
349 Guillemets typographiques fermants. => compose 'é' 'a' to U+00e1 <|> ' => suggestions : ['”', '’', '›']
349 Mot inconnu : to => compose 'é' 'a' to U+00e1 <|> to
349 Mot inconnu : e1 => compose 'é' 'a' to U+00e1 <|> e1

350 Guillemets typographiques ouvrants. => compose 'é' 'A' to U+00c1 <|> ' => suggestions : ['“', '‘', '‹']
350 Mot inconnu : é => compose 'é' 'A' to U+00c1 <|> é
350 Guillemets typographiques fermants. => compose 'é' 'A' to U+00c1 <|> ' => suggestions : ['”', '’', '›']
350 Guillemets typographiques ouvrants. => compose 'é' 'A' to U+00c1 <|> ' => suggestions : ['“', '‘', '‹']
350 Guillemets typographiques fermants. => compose 'é' 'A' to U+00c1 <|> ' => suggestions : ['”', '’', '›']
350 Mot inconnu : to => compose 'é' 'A' to U+00c1 <|> to
350 Mot inconnu : c1 => compose 'é' 'A' to U+00c1 <|> c1

351 Guillemets typographiques ouvrants. => compose 'é' 'æ' to 'æ' <|> ' => suggestions : ['“', '‘', '‹']
351 Mot inconnu : é => compose 'é' 'æ' to 'æ' <|> é
351 Guillemets typographiques fermants. => compose 'é' 'æ' to 'æ' <|> ' => suggestions : ['”', '’', '›']
351 Guillemets typographiques ouvrants. => compose 'é' 'æ' to 'æ' <|> ' => suggestions : ['“', '‘', '‹']
351 Guillemets typographiques fermants. => compose 'é' 'æ' to 'æ' <|> ' => suggestions : ['”', '’', '›']
351 Mot inconnu : to => compose 'é' 'æ' to 'æ' <|> to
351 Guillemets typographiques ouvrants. => compose 'é' 'æ' to 'æ' <|> ' => suggestions : ['“', '‘', '‹']
351 Guillemets typographiques fermants. => compose 'é' 'æ' to 'æ' <|> ' => suggestions : ['”', '’', '›']

352 Guillemets typographiques ouvrants. => compose 'é' 'Æ' to 'Æ' <|> ' => suggestions : ['“', '‘', '‹']
352 Mot inconnu : é => compose 'é' 'Æ' to 'Æ' <|> é
352 Guillemets typographiques fermants. => compose 'é' 'Æ' to 'Æ' <|> ' => suggestions : ['”', '’', '›']
352 Guillemets typographiques ouvrants. => compose 'é' 'Æ' to 'Æ' <|> ' => suggestions : ['“', '‘', '‹']
352 Guillemets typographiques fermants. => compose 'é' 'Æ' to 'Æ' <|> ' => suggestions : ['”', '’', '›']
352 Mot inconnu : to => compose 'é' 'Æ' to 'Æ' <|> to
352 Guillemets typographiques ouvrants. => compose 'é' 'Æ' to 'Æ' <|> ' => suggestions : ['“', '‘', '‹']
352 Guillemets typographiques fermants. => compose 'é' 'Æ' to 'Æ' <|> ' => suggestions : ['”', '’', '›']

353 Guillemets typographiques ouvrants. => compose 'é' 'u' to U+00fa <|> ' => suggestions : ['“', '‘', '‹']
353 Mot inconnu : é => compose 'é' 'u' to U+00fa <|> é
353 Guillemets typographiques fermants. => compose 'é' 'u' to U+00fa <|> ' => suggestions : ['”', '’', '›']
353 Guillemets typographiques ouvrants. => compose 'é' 'u' to U+00fa <|> ' => suggestions : ['“', '‘', '‹']
353 Guillemets typographiques fermants. => compose 'é' 'u' to U+00fa <|> ' => suggestions : ['”', '’', '›']
353 Mot inconnu : to => compose 'é' 'u' to U+00fa <|> to

354 Guillemets typographiques ouvrants. => compose 'é' 'U' to U+00da <|> ' => suggestions : ['“', '‘', '‹']
354 Mot inconnu : é => compose 'é' 'U' to U+00da <|> é
354 Guillemets typographiques fermants. => compose 'é' 'U' to U+00da <|> ' => suggestions : ['”', '’', '›']
354 Guillemets typographiques ouvrants. => compose 'é' 'U' to U+00da <|> ' => suggestions : ['“', '‘', '‹']
354 Guillemets typographiques fermants. => compose 'é' 'U' to U+00da <|> ' => suggestions : ['”', '’', '›']
354 Mot inconnu : to => compose 'é' 'U' to U+00da <|> to
354 Mot inconnu : da => compose 'é' 'U' to U+00da <|> da

355 Guillemets typographiques ouvrants. => compose 'é' 'y' to U+00fd <|> ' => suggestions : ['“', '‘', '‹']
355 Mot inconnu : é => compose 'é' 'y' to U+00fd <|> é
355 Guillemets typographiques fermants. => compose 'é' 'y' to U+00fd <|> ' => suggestions : ['”', '’', '›']
355 Guillemets typographiques ouvrants. => compose 'é' 'y' to U+00fd <|> ' => suggestions : ['“', '‘', '‹']
355 Guillemets typographiques fermants. => compose 'é' 'y' to U+00fd <|> ' => suggestions : ['”', '’', '›']
355 Mot inconnu : to => compose 'é' 'y' to U+00fd <|> to
355 Mot inconnu : fd => compose 'é' 'y' to U+00fd <|> fd

356 Guillemets typographiques ouvrants. => compose 'é' 'Y' to U+00dd <|> ' => suggestions : ['“', '‘', '‹']
356 Mot inconnu : é => compose 'é' 'Y' to U+00dd <|> é
356 Guillemets typographiques fermants. => compose 'é' 'Y' to U+00dd <|> ' => suggestions : ['”', '’', '›']
356 Guillemets typographiques ouvrants. => compose 'é' 'Y' to U+00dd <|> ' => suggestions : ['“', '‘', '‹']
356 Guillemets typographiques fermants. => compose 'é' 'Y' to U+00dd <|> ' => suggestions : ['”', '’', '›']
356 Mot inconnu : to => compose 'é' 'Y' to U+00dd <|> to
356 Mot inconnu : dd => compose 'é' 'Y' to U+00dd <|> dd

357 Guillemets typographiques ouvrants. => compose 'é' 'p' to U+1e57 <|> ' => suggestions : ['“', '‘', '‹']
357 Mot inconnu : é => compose 'é' 'p' to U+1e57 <|> é
357 Guillemets typographiques fermants. => compose 'é' 'p' to U+1e57 <|> ' => suggestions : ['”', '’', '›']
357 Guillemets typographiques ouvrants. => compose 'é' 'p' to U+1e57 <|> ' => suggestions : ['“', '‘', '‹']
357 Guillemets typographiques fermants. => compose 'é' 'p' to U+1e57 <|> ' => suggestions : ['”', '’', '›']
357 Mot inconnu : to => compose 'é' 'p' to U+1e57 <|> to
357 Mot inconnu : e57 => compose 'é' 'p' to U+1e57 <|> e57

358 Guillemets typographiques ouvrants. => compose 'é' 'P' to U+1e56 <|> ' => suggestions : ['“', '‘', '‹']
358 Mot inconnu : é => compose 'é' 'P' to U+1e56 <|> é
358 Guillemets typographiques fermants. => compose 'é' 'P' to U+1e56 <|> ' => suggestions : ['”', '’', '›']
358 Guillemets typographiques ouvrants. => compose 'é' 'P' to U+1e56 <|> ' => suggestions : ['“', '‘', '‹']
358 Guillemets typographiques fermants. => compose 'é' 'P' to U+1e56 <|> ' => suggestions : ['”', '’', '›']
358 Mot inconnu : to => compose 'é' 'P' to U+1e56 <|> to
358 Mot inconnu : e56 => compose 'é' 'P' to U+1e56 <|> e56

359 Guillemets typographiques ouvrants. => compose 'é' 'i' to U+00ed <|> ' => suggestions : ['“', '‘', '‹']
359 Mot inconnu : é => compose 'é' 'i' to U+00ed <|> é
359 Guillemets typographiques fermants. => compose 'é' 'i' to U+00ed <|> ' => suggestions : ['”', '’', '›']
359 Guillemets typographiques ouvrants. => compose 'é' 'i' to U+00ed <|> ' => suggestions : ['“', '‘', '‹']
359 Guillemets typographiques fermants. => compose 'é' 'i' to U+00ed <|> ' => suggestions : ['”', '’', '›']
359 Mot inconnu : to => compose 'é' 'i' to U+00ed <|> to
359 Mot inconnu : ed => compose 'é' 'i' to U+00ed <|> ed

360 Guillemets typographiques ouvrants. => compose 'é' 'I' to U+00cd <|> ' => suggestions : ['“', '‘', '‹']
360 Mot inconnu : é => compose 'é' 'I' to U+00cd <|> é
360 Guillemets typographiques fermants. => compose 'é' 'I' to U+00cd <|> ' => suggestions : ['”', '’', '›']
360 Guillemets typographiques ouvrants. => compose 'é' 'I' to U+00cd <|> ' => suggestions : ['“', '‘', '‹']
360 Guillemets typographiques fermants. => compose 'é' 'I' to U+00cd <|> ' => suggestions : ['”', '’', '›']
360 Mot inconnu : to => compose 'é' 'I' to U+00cd <|> to

361 Guillemets typographiques ouvrants. => compose 'é' 'o' to U+00f3 <|> ' => suggestions : ['“', '‘', '‹']
361 Mot inconnu : é => compose 'é' 'o' to U+00f3 <|> é
361 Guillemets typographiques fermants. => compose 'é' 'o' to U+00f3 <|> ' => suggestions : ['”', '’', '›']
361 Guillemets typographiques ouvrants. => compose 'é' 'o' to U+00f3 <|> ' => suggestions : ['“', '‘', '‹']
361 Guillemets typographiques fermants. => compose 'é' 'o' to U+00f3 <|> ' => suggestions : ['”', '’', '›']
361 Mot inconnu : to => compose 'é' 'o' to U+00f3 <|> to
361 Mot inconnu : f3 => compose 'é' 'o' to U+00f3 <|> f3

362 Guillemets typographiques ouvrants. => compose 'é' 'O' to U+00d3 <|> ' => suggestions : ['“', '‘', '‹']
362 Mot inconnu : é => compose 'é' 'O' to U+00d3 <|> é
362 Guillemets typographiques fermants. => compose 'é' 'O' to U+00d3 <|> ' => suggestions : ['”', '’', '›']
362 Guillemets typographiques ouvrants. => compose 'é' 'O' to U+00d3 <|> ' => suggestions : ['“', '‘', '‹']
362 Guillemets typographiques fermants. => compose 'é' 'O' to U+00d3 <|> ' => suggestions : ['”', '’', '›']
362 Mot inconnu : to => compose 'é' 'O' to U+00d3 <|> to
362 Mot inconnu : d3 => compose 'é' 'O' to U+00d3 <|> d3

363 Guillemets typographiques ouvrants. => compose 'é' 'e' to 'é' <|> ' => suggestions : ['“', '‘', '‹']
363 Mot inconnu : é => compose 'é' 'e' to 'é' <|> é
363 Guillemets typographiques fermants. => compose 'é' 'e' to 'é' <|> ' => suggestions : ['”', '’', '›']
363 Guillemets typographiques ouvrants. => compose 'é' 'e' to 'é' <|> ' => suggestions : ['“', '‘', '‹']
363 Guillemets typographiques fermants. => compose 'é' 'e' to 'é' <|> ' => suggestions : ['”', '’', '›']
363 Mot inconnu : to => compose 'é' 'e' to 'é' <|> to
363 Guillemets typographiques ouvrants. => compose 'é' 'e' to 'é' <|> ' => suggestions : ['“', '‘', '‹']
363 Mot inconnu : é => compose 'é' 'e' to 'é' <|> é
363 Guillemets typographiques fermants. => compose 'é' 'e' to 'é' <|> ' => suggestions : ['”', '’', '›']

364 Guillemets typographiques ouvrants. => compose 'é' 'E' to 'É' <|> ' => suggestions : ['“', '‘', '‹']
364 Mot inconnu : é => compose 'é' 'E' to 'É' <|> é
364 Guillemets typographiques fermants. => compose 'é' 'E' to 'É' <|> ' => suggestions : ['”', '’', '›']
364 Guillemets typographiques ouvrants. => compose 'é' 'E' to 'É' <|> ' => suggestions : ['“', '‘', '‹']
364 Guillemets typographiques fermants. => compose 'é' 'E' to 'É' <|> ' => suggestions : ['”', '’', '›']
364 Mot inconnu : to => compose 'é' 'E' to 'É' <|> to
364 Guillemets typographiques ouvrants. => compose 'é' 'E' to 'É' <|> ' => suggestions : ['“', '‘', '‹']
364 Mot inconnu : É => compose 'é' 'E' to 'É' <|> é
364 Guillemets typographiques fermants. => compose 'é' 'E' to 'É' <|> ' => suggestions : ['”', '’', '›']

365 Guillemets typographiques ouvrants. => compose 'é' 'k' to U+045c <|> ' => suggestions : ['“', '‘', '‹']
365 Mot inconnu : é => compose 'é' 'k' to U+045c <|> é
365 Guillemets typographiques fermants. => compose 'é' 'k' to U+045c <|> ' => suggestions : ['”', '’', '›']
365 Guillemets typographiques ouvrants. => compose 'é' 'k' to U+045c <|> ' => suggestions : ['“', '‘', '‹']
365 Guillemets typographiques fermants. => compose 'é' 'k' to U+045c <|> ' => suggestions : ['”', '’', '›']
365 Mot inconnu : to => compose 'é' 'k' to U+045c <|> to

366 Guillemets typographiques ouvrants. => compose 'é' 'K' to U+040c <|> ' => suggestions : ['“', '‘', '‹']
366 Mot inconnu : é => compose 'é' 'K' to U+040c <|> é
366 Guillemets typographiques fermants. => compose 'é' 'K' to U+040c <|> ' => suggestions : ['”', '’', '›']
366 Guillemets typographiques ouvrants. => compose 'é' 'K' to U+040c <|> ' => suggestions : ['“', '‘', '‹']
366 Guillemets typographiques fermants. => compose 'é' 'K' to U+040c <|> ' => suggestions : ['”', '’', '›']
366 Mot inconnu : to => compose 'é' 'K' to U+040c <|> to

367 Guillemets typographiques ouvrants. => compose 'é' 'c' to U+0107 <|> ' => suggestions : ['“', '‘', '‹']
367 Mot inconnu : é => compose 'é' 'c' to U+0107 <|> é
367 Guillemets typographiques fermants. => compose 'é' 'c' to U+0107 <|> ' => suggestions : ['”', '’', '›']
367 Guillemets typographiques ouvrants. => compose 'é' 'c' to U+0107 <|> ' => suggestions : ['“', '‘', '‹']
367 Guillemets typographiques fermants. => compose 'é' 'c' to U+0107 <|> ' => suggestions : ['”', '’', '›']
367 Mot inconnu : to => compose 'é' 'c' to U+0107 <|> to

368 Guillemets typographiques ouvrants. => compose 'é' 'C' to U+0106 <|> ' => suggestions : ['“', '‘', '‹']
368 Mot inconnu : é => compose 'é' 'C' to U+0106 <|> é
368 Guillemets typographiques fermants. => compose 'é' 'C' to U+0106 <|> ' => suggestions : ['”', '’', '›']
368 Guillemets typographiques ouvrants. => compose 'é' 'C' to U+0106 <|> ' => suggestions : ['“', '‘', '‹']
368 Guillemets typographiques fermants. => compose 'é' 'C' to U+0106 <|> ' => suggestions : ['”', '’', '›']
368 Mot inconnu : to => compose 'é' 'C' to U+0106 <|> to

369 Guillemets typographiques ouvrants. => compose 'é' 's' to U+015b <|> ' => suggestions : ['“', '‘', '‹']
369 Mot inconnu : é => compose 'é' 's' to U+015b <|> é
369 Guillemets typographiques fermants. => compose 'é' 's' to U+015b <|> ' => suggestions : ['”', '’', '›']
369 Guillemets typographiques ouvrants. => compose 'é' 's' to U+015b <|> ' => suggestions : ['“', '‘', '‹']
369 Guillemets typographiques fermants. => compose 'é' 's' to U+015b <|> ' => suggestions : ['”', '’', '›']
369 Mot inconnu : to => compose 'é' 's' to U+015b <|> to

370 Guillemets typographiques ouvrants. => compose 'é' 'S' to U+015a <|> ' => suggestions : ['“', '‘', '‹']
370 Mot inconnu : é => compose 'é' 'S' to U+015a <|> é
370 Guillemets typographiques fermants. => compose 'é' 'S' to U+015a <|> ' => suggestions : ['”', '’', '›']
370 Guillemets typographiques ouvrants. => compose 'é' 'S' to U+015a <|> ' => suggestions : ['“', '‘', '‹']
370 Guillemets typographiques fermants. => compose 'é' 'S' to U+015a <|> ' => suggestions : ['”', '’', '›']
370 Mot inconnu : to => compose 'é' 'S' to U+015a <|> to

371 Guillemets typographiques ouvrants. => compose 'é' 'g' to U+0121 <|> ' => suggestions : ['“', '‘', '‹']
371 Mot inconnu : é => compose 'é' 'g' to U+0121 <|> é
371 Guillemets typographiques fermants. => compose 'é' 'g' to U+0121 <|> ' => suggestions : ['”', '’', '›']
371 Guillemets typographiques ouvrants. => compose 'é' 'g' to U+0121 <|> ' => suggestions : ['“', '‘', '‹']
371 Guillemets typographiques fermants. => compose 'é' 'g' to U+0121 <|> ' => suggestions : ['”', '’', '›']
371 Mot inconnu : to => compose 'é' 'g' to U+0121 <|> to

372 Guillemets typographiques ouvrants. => compose 'é' 'G' to U+0120 <|> ' => suggestions : ['“', '‘', '‹']
372 Mot inconnu : é => compose 'é' 'G' to U+0120 <|> é
372 Guillemets typographiques fermants. => compose 'é' 'G' to U+0120 <|> ' => suggestions : ['”', '’', '›']
372 Guillemets typographiques ouvrants. => compose 'é' 'G' to U+0120 <|> ' => suggestions : ['“', '‘', '‹']
372 Guillemets typographiques fermants. => compose 'é' 'G' to U+0120 <|> ' => suggestions : ['”', '’', '›']
372 Mot inconnu : to => compose 'é' 'G' to U+0120 <|> to

373 Guillemets typographiques ouvrants. => compose 'é' 'l' to U+013a <|> ' => suggestions : ['“', '‘', '‹']
373 Mot inconnu : é => compose 'é' 'l' to U+013a <|> é
373 Guillemets typographiques fermants. => compose 'é' 'l' to U+013a <|> ' => suggestions : ['”', '’', '›']
373 Guillemets typographiques ouvrants. => compose 'é' 'l' to U+013a <|> ' => suggestions : ['“', '‘', '‹']
373 Guillemets typographiques fermants. => compose 'é' 'l' to U+013a <|> ' => suggestions : ['”', '’', '›']
373 Mot inconnu : to => compose 'é' 'l' to U+013a <|> to

374 Guillemets typographiques ouvrants. => compose 'é' 'L' to U+0139 <|> ' => suggestions : ['“', '‘', '‹']
374 Mot inconnu : é => compose 'é' 'L' to U+0139 <|> é
374 Guillemets typographiques fermants. => compose 'é' 'L' to U+0139 <|> ' => suggestions : ['”', '’', '›']
374 Guillemets typographiques ouvrants. => compose 'é' 'L' to U+0139 <|> ' => suggestions : ['“', '‘', '‹']
374 Guillemets typographiques fermants. => compose 'é' 'L' to U+0139 <|> ' => suggestions : ['”', '’', '›']
374 Mot inconnu : to => compose 'é' 'L' to U+0139 <|> to

375 Guillemets typographiques ouvrants. => compose 'é' 'r' to U+0155 <|> ' => suggestions : ['“', '‘', '‹']
375 Mot inconnu : é => compose 'é' 'r' to U+0155 <|> é
375 Guillemets typographiques fermants. => compose 'é' 'r' to U+0155 <|> ' => suggestions : ['”', '’', '›']
375 Guillemets typographiques ouvrants. => compose 'é' 'r' to U+0155 <|> ' => suggestions : ['“', '‘', '‹']
375 Guillemets typographiques fermants. => compose 'é' 'r' to U+0155 <|> ' => suggestions : ['”', '’', '›']
375 Mot inconnu : to => compose 'é' 'r' to U+0155 <|> to

376 Guillemets typographiques ouvrants. => compose 'é' 'R' to U+0154 <|> ' => suggestions : ['“', '‘', '‹']
376 Mot inconnu : é => compose 'é' 'R' to U+0154 <|> é
376 Guillemets typographiques fermants. => compose 'é' 'R' to U+0154 <|> ' => suggestions : ['”', '’', '›']
376 Guillemets typographiques ouvrants. => compose 'é' 'R' to U+0154 <|> ' => suggestions : ['“', '‘', '‹']
376 Guillemets typographiques fermants. => compose 'é' 'R' to U+0154 <|> ' => suggestions : ['”', '’', '›']
376 Mot inconnu : to => compose 'é' 'R' to U+0154 <|> to

377 Guillemets typographiques ouvrants. => compose 'é' 'n' to U+0144 <|> ' => suggestions : ['“', '‘', '‹']
377 Mot inconnu : é => compose 'é' 'n' to U+0144 <|> é
377 Guillemets typographiques fermants. => compose 'é' 'n' to U+0144 <|> ' => suggestions : ['”', '’', '›']
377 Guillemets typographiques ouvrants. => compose 'é' 'n' to U+0144 <|> ' => suggestions : ['“', '‘', '‹']
377 Guillemets typographiques fermants. => compose 'é' 'n' to U+0144 <|> ' => suggestions : ['”', '’', '›']
377 Mot inconnu : to => compose 'é' 'n' to U+0144 <|> to

378 Guillemets typographiques ouvrants. => compose 'é' 'N' to U+0143 <|> ' => suggestions : ['“', '‘', '‹']
378 Mot inconnu : é => compose 'é' 'N' to U+0143 <|> é
378 Guillemets typographiques fermants. => compose 'é' 'N' to U+0143 <|> ' => suggestions : ['”', '’', '›']
378 Guillemets typographiques ouvrants. => compose 'é' 'N' to U+0143 <|> ' => suggestions : ['“', '‘', '‹']
378 Guillemets typographiques fermants. => compose 'é' 'N' to U+0143 <|> ' => suggestions : ['”', '’', '›']
378 Mot inconnu : to => compose 'é' 'N' to U+0143 <|> to

379 Guillemets typographiques ouvrants. => compose 'é' 'z' to U+017a <|> ' => suggestions : ['“', '‘', '‹']
379 Mot inconnu : é => compose 'é' 'z' to U+017a <|> é
379 Guillemets typographiques fermants. => compose 'é' 'z' to U+017a <|> ' => suggestions : ['”', '’', '›']
379 Guillemets typographiques ouvrants. => compose 'é' 'z' to U+017a <|> ' => suggestions : ['“', '‘', '‹']
379 Guillemets typographiques fermants. => compose 'é' 'z' to U+017a <|> ' => suggestions : ['”', '’', '›']
379 Mot inconnu : to => compose 'é' 'z' to U+017a <|> to

380 Guillemets typographiques ouvrants. => compose 'é' 'Z' to U+0179 <|> ' => suggestions : ['“', '‘', '‹']
380 Mot inconnu : é => compose 'é' 'Z' to U+0179 <|> é
380 Guillemets typographiques fermants. => compose 'é' 'Z' to U+0179 <|> ' => suggestions : ['”', '’', '›']
380 Guillemets typographiques ouvrants. => compose 'é' 'Z' to U+0179 <|> ' => suggestions : ['“', '‘', '‹']
380 Guillemets typographiques fermants. => compose 'é' 'Z' to U+0179 <|> ' => suggestions : ['”', '’', '›']
380 Mot inconnu : to => compose 'é' 'Z' to U+0179 <|> to

381 Guillemets typographiques ouvrants. => compose 'é' 'm' to 'm' <|> ' => suggestions : ['“', '‘', '‹']
381 Mot inconnu : é => compose 'é' 'm' to 'm' <|> é
381 Guillemets typographiques fermants. => compose 'é' 'm' to 'm' <|> ' => suggestions : ['”', '’', '›']
381 Guillemets typographiques ouvrants. => compose 'é' 'm' to 'm' <|> ' => suggestions : ['“', '‘', '‹']
381 Guillemets typographiques fermants. => compose 'é' 'm' to 'm' <|> ' => suggestions : ['”', '’', '›']
381 Mot inconnu : to => compose 'é' 'm' to 'm' <|> to
381 Guillemets typographiques ouvrants. => compose 'é' 'm' to 'm' <|> ' => suggestions : ['“', '‘', '‹']
381 Guillemets typographiques fermants. => compose 'é' 'm' to 'm' <|> ' => suggestions : ['”', '’', '›']

382 Guillemets typographiques ouvrants. => compose 'é' 'M' to U+1e40 <|> ' => suggestions : ['“', '‘', '‹']
382 Mot inconnu : é => compose 'é' 'M' to U+1e40 <|> é
382 Guillemets typographiques fermants. => compose 'é' 'M' to U+1e40 <|> ' => suggestions : ['”', '’', '›']
382 Guillemets typographiques ouvrants. => compose 'é' 'M' to U+1e40 <|> ' => suggestions : ['“', '‘', '‹']
382 Guillemets typographiques fermants. => compose 'é' 'M' to U+1e40 <|> ' => suggestions : ['”', '’', '›']
382 Mot inconnu : to => compose 'é' 'M' to U+1e40 <|> to
382 Mot inconnu : e40 => compose 'é' 'M' to U+1e40 <|> e40

383 Guillemets typographiques ouvrants. => compose 'é' 'w' to U+1e83 <|> ' => suggestions : ['“', '‘', '‹']
383 Mot inconnu : é => compose 'é' 'w' to U+1e83 <|> é
383 Guillemets typographiques fermants. => compose 'é' 'w' to U+1e83 <|> ' => suggestions : ['”', '’', '›']
383 Guillemets typographiques ouvrants. => compose 'é' 'w' to U+1e83 <|> ' => suggestions : ['“', '‘', '‹']
383 Guillemets typographiques fermants. => compose 'é' 'w' to U+1e83 <|> ' => suggestions : ['”', '’', '›']
383 Mot inconnu : to => compose 'é' 'w' to U+1e83 <|> to
383 Mot inconnu : e83 => compose 'é' 'w' to U+1e83 <|> e83

384 Guillemets typographiques ouvrants. => compose 'é' 'W' to U+1e82 <|> ' => suggestions : ['“', '‘', '‹']
384 Mot inconnu : é => compose 'é' 'W' to U+1e82 <|> é
384 Guillemets typographiques fermants. => compose 'é' 'W' to U+1e82 <|> ' => suggestions : ['”', '’', '›']
384 Guillemets typographiques ouvrants. => compose 'é' 'W' to U+1e82 <|> ' => suggestions : ['“', '‘', '‹']
384 Guillemets typographiques fermants. => compose 'é' 'W' to U+1e82 <|> ' => suggestions : ['”', '’', '›']
384 Mot inconnu : to => compose 'é' 'W' to U+1e82 <|> to
384 Mot inconnu : e82 => compose 'é' 'W' to U+1e82 <|> e82

385 Guillemets typographiques ouvrants. => compose 'é' 'ç' to 'ç' <|> ' => suggestions : ['“', '‘', '‹']
385 Mot inconnu : é => compose 'é' 'ç' to 'ç' <|> é
385 Guillemets typographiques fermants. => compose 'é' 'ç' to 'ç' <|> ' => suggestions : ['”', '’', '›']
385 Guillemets typographiques ouvrants. => compose 'é' 'ç' to 'ç' <|> ' => suggestions : ['“', '‘', '‹']
385 Guillemets typographiques fermants. => compose 'é' 'ç' to 'ç' <|> ' => suggestions : ['”', '’', '›']
385 Mot inconnu : to => compose 'é' 'ç' to 'ç' <|> to
385 Guillemets typographiques ouvrants. => compose 'é' 'ç' to 'ç' <|> ' => suggestions : ['“', '‘', '‹']
385 Guillemets typographiques fermants. => compose 'é' 'ç' to 'ç' <|> ' => suggestions : ['”', '’', '›']

386 Guillemets typographiques ouvrants. => compose 'é' 'Ç' to 'Ç' <|> ' => suggestions : ['“', '‘', '‹']
386 Mot inconnu : é => compose 'é' 'Ç' to 'Ç' <|> é
386 Guillemets typographiques fermants. => compose 'é' 'Ç' to 'Ç' <|> ' => suggestions : ['”', '’', '›']
386 Guillemets typographiques ouvrants. => compose 'é' 'Ç' to 'Ç' <|> ' => suggestions : ['“', '‘', '‹']
386 Guillemets typographiques fermants. => compose 'é' 'Ç' to 'Ç' <|> ' => suggestions : ['”', '’', '›']
386 Mot inconnu : to => compose 'é' 'Ç' to 'Ç' <|> to
386 Guillemets typographiques ouvrants. => compose 'é' 'Ç' to 'Ç' <|> ' => suggestions : ['“', '‘', '‹']
386 Guillemets typographiques fermants. => compose 'é' 'Ç' to 'Ç' <|> ' => suggestions : ['”', '’', '›']

390 Guillemets typographiques ouvrants. => <file>compose 'É' 'o' to U+0151 <|> ' => suggestions : ['“', '‘', '‹']
390 Mot inconnu : É => <file>compose 'É' 'o' to U+0151 <|> é
390 Guillemets typographiques fermants. => <file>compose 'É' 'o' to U+0151 <|> ' => suggestions : ['”', '’', '›']
390 Guillemets typographiques ouvrants. => <file>compose 'É' 'o' to U+0151 <|> ' => suggestions : ['“', '‘', '‹']
390 Guillemets typographiques fermants. => <file>compose 'É' 'o' to U+0151 <|> ' => suggestions : ['”', '’', '›']
390 Mot inconnu : to => <file>compose 'É' 'o' to U+0151 <|> to

391 Guillemets typographiques ouvrants. => compose 'É' 'O' to U+0150 <|> ' => suggestions : ['“', '‘', '‹']
391 Mot inconnu : É => compose 'É' 'O' to U+0150 <|> é
391 Guillemets typographiques fermants. => compose 'É' 'O' to U+0150 <|> ' => suggestions : ['”', '’', '›']
391 Guillemets typographiques ouvrants. => compose 'É' 'O' to U+0150 <|> ' => suggestions : ['“', '‘', '‹']
391 Guillemets typographiques fermants. => compose 'É' 'O' to U+0150 <|> ' => suggestions : ['”', '’', '›']
391 Mot inconnu : to => compose 'É' 'O' to U+0150 <|> to

392 Guillemets typographiques ouvrants. => compose 'É' 'u' to U+0171 <|> ' => suggestions : ['“', '‘', '‹']
392 Mot inconnu : É => compose 'É' 'u' to U+0171 <|> é
392 Guillemets typographiques fermants. => compose 'É' 'u' to U+0171 <|> ' => suggestions : ['”', '’', '›']
392 Guillemets typographiques ouvrants. => compose 'É' 'u' to U+0171 <|> ' => suggestions : ['“', '‘', '‹']
392 Guillemets typographiques fermants. => compose 'É' 'u' to U+0171 <|> ' => suggestions : ['”', '’', '›']
392 Mot inconnu : to => compose 'É' 'u' to U+0171 <|> to

393 Guillemets typographiques ouvrants. => compose 'É' 'U' to U+0170 <|> ' => suggestions : ['“', '‘', '‹']
393 Mot inconnu : É => compose 'É' 'U' to U+0170 <|> é
393 Guillemets typographiques fermants. => compose 'É' 'U' to U+0170 <|> ' => suggestions : ['”', '’', '›']
393 Guillemets typographiques ouvrants. => compose 'É' 'U' to U+0170 <|> ' => suggestions : ['“', '‘', '‹']
393 Guillemets typographiques fermants. => compose 'É' 'U' to U+0170 <|> ' => suggestions : ['”', '’', '›']
393 Mot inconnu : to => compose 'É' 'U' to U+0170 <|> to

394 Guillemets typographiques ouvrants. => compose 'É' ' ' to U+02dd</file> <|> ' => suggestions : ['“', '‘', '‹']
394 Mot inconnu : É => compose 'É' ' ' to U+02dd</file> <|> é
394 Guillemets typographiques fermants. => compose 'É' ' ' to U+02dd</file> <|> ' => suggestions : ['”', '’', '›']
394 Mot inconnu : to => compose 'É' ' ' to U+02dd</file> <|> to
394 Mot inconnu : dd => compose 'É' ' ' to U+02dd</file> <|> dd

396 Accord de nombre erroné : « jeux » est au pluriel. => Vous avez maintenant les bases pour compléter le clavier bépo sur le jeux de caractères Uni2-Fixed16 dans la console. <|> le => suggestions : ['les']
396 Accord de nombre erroné : « jeux » devrait être au singulier. => Vous avez maintenant les bases pour compléter le clavier bépo sur le jeux de caractères Uni2-Fixed16 dans la console. <|> jeux => suggestions : ['jeu']
396 Mot inconnu : Uni2-Fixed16 => Vous avez maintenant les bases pour compléter le clavier bépo sur le jeux de caractères Uni2-Fixed16 dans la console. <|> uni2-fixed16

398 Mot inconnu : mon-bepo => === Modularisation du fichier d'agencement mon-bepo.map  === <|> mon-bepo
398 Mot inconnu : map => === Modularisation du fichier d'agencement mon-bepo.map  === <|> map
398 Espace(s) surnuméraire(s) à supprimer. => === Modularisation du fichier d'agencement mon-bepo.map  === <|>    => suggestions : [' ']

399 Espace(s) en fin de ligne à supprimer. => Maintenant on se propose de réaliser ce clavier de façon modulaire pour pouvoir réutiliser ces modules pour construire d'autres claviers.  <|>   => suggestions : ['']

401 Mot inconnu : inc => Nous devons donc créer des fichiers avec une extension **.inc**. Pour les utiliser il suffira de les appeler avec la commande **include**. <|> inc
401 Mot inconnu : include => Nous devons donc créer des fichiers avec une extension **.inc**. Pour les utiliser il suffira de les appeler avec la commande **include**. <|> include

403 Espace(s) en fin de ligne à supprimer. => Voici la structure que l'on se propose de mettre en place  <|>   => suggestions : ['']

406 Mot inconnu : system => Fichier system.inc <|> system
406 Mot inconnu : inc => Fichier system.inc <|> inc

409 Mot inconnu : edit => Fichier edit.inc <|> edit
409 Mot inconnu : inc => Fichier edit.inc <|> inc

412 Mot inconnu : functions => Fichier functions.inc <|> functions
412 Mot inconnu : inc => Fichier functions.inc <|> inc

415 Mot inconnu : numpad => Fichier numpad.inc <|> numpad
415 Mot inconnu : inc => Fichier numpad.inc <|> inc

418 Mot inconnu : bepo => bepo.inc ou bepo.map avec  <|> bepo
418 Mot inconnu : inc => bepo.inc ou bepo.map avec  <|> inc
418 Mot inconnu : bepo => bepo.inc ou bepo.map avec  <|> bepo
418 Mot inconnu : map => bepo.inc ou bepo.map avec  <|> map
418 Espace(s) en fin de ligne à supprimer. => bepo.inc ou bepo.map avec  <|>   => suggestions : ['']

419 Mot inconnu : Charset => <file>Charset "iso-8859-15" <|> charset
419 Guillemets typographiques ouvrants. => <file>Charset "iso-8859-15" <|> " => suggestions : ['«\xa0', '“']
419 Mot inconnu : iso-8859-15 => <file>Charset "iso-8859-15" <|> iso-8859-15
419 Guillemets typographiques fermants. => <file>Charset "iso-8859-15" <|> " => suggestions : ['\xa0»', '”']

421 Mot inconnu : include => include "system.inc" <|> include
421 Guillemets typographiques ouvrants. => include "system.inc" <|> " => suggestions : ['«\xa0', '“']
421 Mot inconnu : system => include "system.inc" <|> system
421 Mot inconnu : inc => include "system.inc" <|> inc
421 Guillemets typographiques fermants. => include "system.inc" <|> " => suggestions : ['\xa0»', '”']

422 Mot inconnu : include => include "edit.inc" <|> include
422 Guillemets typographiques ouvrants. => include "edit.inc" <|> " => suggestions : ['«\xa0', '“']
422 Mot inconnu : edit => include "edit.inc" <|> edit
422 Mot inconnu : inc => include "edit.inc" <|> inc
422 Guillemets typographiques fermants. => include "edit.inc" <|> " => suggestions : ['\xa0»', '”']

423 Mot inconnu : include => include "functions.inc" <|> include
423 Guillemets typographiques ouvrants. => include "functions.inc" <|> " => suggestions : ['«\xa0', '“']
423 Mot inconnu : functions => include "functions.inc" <|> functions
423 Mot inconnu : inc => include "functions.inc" <|> inc
423 Guillemets typographiques fermants. => include "functions.inc" <|> " => suggestions : ['\xa0»', '”']

424 Mot inconnu : include => include "numpad.inc" <|> include
424 Guillemets typographiques ouvrants. => include "numpad.inc" <|> " => suggestions : ['«\xa0', '“']
424 Mot inconnu : numpad => include "numpad.inc" <|> numpad
424 Mot inconnu : inc => include "numpad.inc" <|> inc
424 Guillemets typographiques fermants. => include "numpad.inc" <|> " => suggestions : ['\xa0»', '”']

426 Typographie : points de suspension. Utilisez le caractère dédié. => ... <|> ... => suggestions : ['…']

427 Espace(s) en fin de ligne à supprimer. => </file>  <|>   => suggestions : ['']

428 Mot inconnu : Fn => == Les touches Fn spéciales == <|> fn

430 Mot inconnu : bepo_asus_k93sm => bepo_asus_k93sm.map <|> bepo_asus_k93sm
430 Mot inconnu : map => bepo_asus_k93sm.map <|> map

432 Mot inconnu : Charset => <file>Charset "iso-8859-15" <|> charset
432 Guillemets typographiques ouvrants. => <file>Charset "iso-8859-15" <|> " => suggestions : ['«\xa0', '“']
432 Mot inconnu : iso-8859-15 => <file>Charset "iso-8859-15" <|> iso-8859-15
432 Guillemets typographiques fermants. => <file>Charset "iso-8859-15" <|> " => suggestions : ['\xa0»', '”']

434 Mot inconnu : include => include "bepo.map" <|> include
434 Guillemets typographiques ouvrants. => include "bepo.map" <|> " => suggestions : ['«\xa0', '“']
434 Mot inconnu : bepo => include "bepo.map" <|> bepo
434 Mot inconnu : map => include "bepo.map" <|> map
434 Guillemets typographiques fermants. => include "bepo.map" <|> " => suggestions : ['\xa0»', '”']

435 Typographie : points de suspension. Utilisez le caractère dédié. => ... <|> ... => suggestions : ['…']

436 Espace(s) en fin de ligne à supprimer. => </file>  <|>   => suggestions : ['']

464 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']
473 Mot inconnu : bépoè => Et lorsque la fenêtre est active et que l’on tape avec un clavier bépo «bépoè^». Dans le terminal où est exécuté la ligne de commande s’affiche le résultat : <|> bépoè

487 Mot inconnu : lphanumérique => Ici cela signifie que la touche **A**lphanumérique marquée du chiffre //1// ((sur la rangée de chiffres au dessus des lettres sur un clavier [[http://bepo.fr/wiki/TypeMatrix|Typematrix]].)) est en première position (**01**) de la ligne **E** (les lignes sont numérotées de A à E en partant du coté de l'utilisateur et en allant vers l'écran ((Du moins pour ce qui est des caractères imprimables, c'est à dire en excluant les lignes qui ne comprennent que des caractères de contrôle.))  ) et au code **10**.\\ <|> lphanumérique
487 Il manque un trait d’union. => Ici cela signifie que la touche **A**lphanumérique marquée du chiffre //1// ((sur la rangée de chiffres au dessus des lettres sur un clavier [[http://bepo.fr/wiki/TypeMatrix|Typematrix]].)) est en première position (**01**) de la ligne **E** (les lignes sont numérotées de A à E en partant du coté de l'utilisateur et en allant vers l'écran ((Du moins pour ce qui est des caractères imprimables, c'est à dire en excluant les lignes qui ne comprennent que des caractères de contrôle.))  ) et au code **10**.\\ <|> au dessus => suggestions : ['au-dessus']
487 Confusion : “coté” est le participe passé du verbe “coter”. => Ici cela signifie que la touche **A**lphanumérique marquée du chiffre //1// ((sur la rangée de chiffres au dessus des lettres sur un clavier [[http://bepo.fr/wiki/TypeMatrix|Typematrix]].)) est en première position (**01**) de la ligne **E** (les lignes sont numérotées de A à E en partant du coté de l'utilisateur et en allant vers l'écran ((Du moins pour ce qui est des caractères imprimables, c'est à dire en excluant les lignes qui ne comprennent que des caractères de contrôle.))  ) et au code **10**.\\ <|> coté => suggestions : ['côté']
487 Il manque les traits d’union. => Ici cela signifie que la touche **A**lphanumérique marquée du chiffre //1// ((sur la rangée de chiffres au dessus des lettres sur un clavier [[http://bepo.fr/wiki/TypeMatrix|Typematrix]].)) est en première position (**01**) de la ligne **E** (les lignes sont numérotées de A à E en partant du coté de l'utilisateur et en allant vers l'écran ((Du moins pour ce qui est des caractères imprimables, c'est à dire en excluant les lignes qui ne comprennent que des caractères de contrôle.))  ) et au code **10**.\\ <|> c'est à dire => suggestions : ['c’est-à-dire']
487 Pas d’espace avant ce signe. => Ici cela signifie que la touche **A**lphanumérique marquée du chiffre //1// ((sur la rangée de chiffres au dessus des lettres sur un clavier [[http://bepo.fr/wiki/TypeMatrix|Typematrix]].)) est en première position (**01**) de la ligne **E** (les lignes sont numérotées de A à E en partant du coté de l'utilisateur et en allant vers l'écran ((Du moins pour ce qui est des caractères imprimables, c'est à dire en excluant les lignes qui ne comprennent que des caractères de contrôle.))  ) et au code **10**.\\ <|>  ) => suggestions : [')']

491 Mot inconnu : LF => signifie que la touche majuscule de gauche a le code **50**   (LF pour left = gauche et SH pour Shift =Maj) . <|> lf
491 Mot inconnu : left => signifie que la touche majuscule de gauche a le code **50**   (LF pour left = gauche et SH pour Shift =Maj) . <|> left
491 Mot inconnu : SH => signifie que la touche majuscule de gauche a le code **50**   (LF pour left = gauche et SH pour Shift =Maj) . <|> sh
491 Mot inconnu : Shift => signifie que la touche majuscule de gauche a le code **50**   (LF pour left = gauche et SH pour Shift =Maj) . <|> shift

493 Pas d’espace après ce signe. => Pour faciliter l'utilisation de certains codes de touche ((  //keycodes// )), il existe également un fichier  [[file:///usr/share/X11/xkb/keycodes/aliases|/usr/share/X11/xkb/keycodes/aliases]]  qui associe au nom symbolique des touches un nom plus intelligible appelé **alias**.\\ <|> (  => suggestions : ['(']
493 Mot inconnu : keycodes => Pour faciliter l'utilisation de certains codes de touche ((  //keycodes// )), il existe également un fichier  [[file:///usr/share/X11/xkb/keycodes/aliases|/usr/share/X11/xkb/keycodes/aliases]]  qui associe au nom symbolique des touches un nom plus intelligible appelé **alias**.\\ <|> keycodes
493 Pas d’espace avant ce signe. => Pour faciliter l'utilisation de certains codes de touche ((  //keycodes// )), il existe également un fichier  [[file:///usr/share/X11/xkb/keycodes/aliases|/usr/share/X11/xkb/keycodes/aliases]]  qui associe au nom symbolique des touches un nom plus intelligible appelé **alias**.\\ <|>  ) => suggestions : [')']
493 Espace(s) surnuméraire(s) à supprimer. => Pour faciliter l'utilisation de certains codes de touche ((  //keycodes// )), il existe également un fichier  [[file:///usr/share/X11/xkb/keycodes/aliases|/usr/share/X11/xkb/keycodes/aliases]]  qui associe au nom symbolique des touches un nom plus intelligible appelé **alias**.\\ <|>    => suggestions : [' ']

494 Guillemets typographiques ouvrants. => Voici par exemple un court extrait de la section "qwerty" : <|> " => suggestions : ['«\xa0', '“']
494 Guillemets typographiques fermants. => Voici par exemple un court extrait de la section "qwerty" : <|> " => suggestions : ['\xa0»', '”']

496 Mot inconnu : xkb_keycodes => xkb_keycodes "qwerty" { <|> xkb_keycodes
496 Guillemets typographiques ouvrants. => xkb_keycodes "qwerty" { <|> " => suggestions : ['«\xa0', '“']
496 Guillemets typographiques fermants. => xkb_keycodes "qwerty" { <|> " => suggestions : ['\xa0»', '”']

501 Guillemets typographiques ouvrants. => Pour autant que la section "qwerty" de ce fichier soit expressément spécifiée dans la configuration, la touche <AD01> pourra être désignée également par <LatQ>. <|> " => suggestions : ['«\xa0', '“']
501 Guillemets typographiques fermants. => Pour autant que la section "qwerty" de ce fichier soit expressément spécifiée dans la configuration, la touche <AD01> pourra être désignée également par <LatQ>. <|> " => suggestions : ['\xa0»', '”']

502 Espace(s) surnuméraire(s) à supprimer. => <note warning>Il n'y a normalement pas lieu de toucher aux fichiers contenus dans le dossier **/usr/share/X11/xkb/keycodes**. En effet, les codes émis par les touches ne sont pas modifiables. S'il existe de nombreux  fichiers associant ces numéros de code aux noms symboliques' c'est parce que les constructeurs n'utilisent pas tous le même code pour une touche placée au même endroit.  Il y a donc besoin d'un tel fichier pour chacun des types de clavier. </note> <|>    => suggestions : [' ']
502 Guillemets typographiques fermants. => <note warning>Il n'y a normalement pas lieu de toucher aux fichiers contenus dans le dossier **/usr/share/X11/xkb/keycodes**. En effet, les codes émis par les touches ne sont pas modifiables. S'il existe de nombreux  fichiers associant ces numéros de code aux noms symboliques' c'est parce que les constructeurs n'utilisent pas tous le même code pour une touche placée au même endroit.  Il y a donc besoin d'un tel fichier pour chacun des types de clavier. </note> <|> ' => suggestions : ['”', '’', '›']
502 Espace(s) surnuméraire(s) à supprimer. => <note warning>Il n'y a normalement pas lieu de toucher aux fichiers contenus dans le dossier **/usr/share/X11/xkb/keycodes**. En effet, les codes émis par les touches ne sont pas modifiables. S'il existe de nombreux  fichiers associant ces numéros de code aux noms symboliques' c'est parce que les constructeurs n'utilisent pas tous le même code pour une touche placée au même endroit.  Il y a donc besoin d'un tel fichier pour chacun des types de clavier. </note> <|>    => suggestions : [' ']

507 Espace(s) surnuméraire(s) à supprimer. => Il existe dans le dossier **/usr/share/X11/xkb/symbols**, des fichiers qui  définissent des **tables de correspondance** entre les **codes de touches** et les **symboles de touches** pour les différentes langues, et dont les sections traitent des différentes variantes de clavier connues, comme par exemple le fichier [[file:///usr/share/X11/xkb/symbols/fr|/usr/share/X11/xkb/symbols/fr]] pour la langue française.\\ <|>    => suggestions : [' ']
507 Pléonasme. => Il existe dans le dossier **/usr/share/X11/xkb/symbols**, des fichiers qui  définissent des **tables de correspondance** entre les **codes de touches** et les **symboles de touches** pour les différentes langues, et dont les sections traitent des différentes variantes de clavier connues, comme par exemple le fichier [[file:///usr/share/X11/xkb/symbols/fr|/usr/share/X11/xkb/symbols/fr]] pour la langue française.\\ <|> comme par exemple => suggestions : ['comme', 'par exemple']

510 Il manque les traits d’union. => Pour le cas précis de la redéfinition d'une table de correspondance pour un clavier donné, une table linéaire ((C'est à dire ici sans combinaison avec d'autres table par inclusion par exemple.)) reprenant l'ensemble des touches peut suffire.  <|> c'est à dire => suggestions : ['C’est-à-dire']
510 Espace(s) en fin de ligne à supprimer. => Pour le cas précis de la redéfinition d'une table de correspondance pour un clavier donné, une table linéaire ((C'est à dire ici sans combinaison avec d'autres table par inclusion par exemple.)) reprenant l'ensemble des touches peut suffire.  <|>   => suggestions : ['']

511 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

512 Mot inconnu : keymap => Par ailleurs, parmi les différentes tables évoquées ci-dessus, celles sélectionnées par l'utilisateur, dans le dialogue des préférences clavier, se combinent au démarrage du système pour former une table plus vaste dénommée **carte du clavier** ((keymap en anglais.)). <|> keymap

518 Mot inconnu : xmodmap => <note>Il existe un utilitaire graphique pour xmodmap : xkeycaps, disponible dans les dépôts sur Ubuntu 16.04</note> <|> xmodmap
518 Mot inconnu : xkeycaps => <note>Il existe un utilitaire graphique pour xmodmap : xkeycaps, disponible dans les dépôts sur Ubuntu 16.04</note> <|> xkeycaps

521 Après le verbe “faire”, ce verbe devrait être à l’infinitif. => Faites défilez les pages avec les flèches de changement de page. <|> défilez => suggestions : ['défiler']

523 Confusion. Pour un COD, utilisez “la”. Ou, si ce “là” signifie “ici”, ne mettez pas de trait d’union. => Si vous désirez pouvoir examiner dans le détail cette carte, sauvegardez-là dans un fichier.\\ <|> sauvegardez-là => suggestions : ['sauvegardez-la', 'sauvegardez là']

524 Mot inconnu : carte_active => Par exemple, si vous souhaitez en disposer sur votre Bureau avec pour nom //carte_active// vous entrerez la commande : <|> carte_active

527 Mot inconnu : keys => === Touches modificatrices (modifier keys)  === <|> keys

529 Mot inconnu : keycode => <file>keycode  24 = a A æ Æ </file> <|> keycode
529 Espace(s) surnuméraire(s) à supprimer. => <file>keycode  24 = a A æ Æ </file> <|>    => suggestions : [' ']

532 Guillemets typographiques ouvrants. => Par exemple pour le clavier français, il s'agira du fichier **/usr/share/X11/xkb/symbols/fr** dans lequel vous trouverez, à la section "Autre", la ligne suivante : <|> " => suggestions : ['«\xa0', '“']
532 Guillemets typographiques fermants. => Par exemple pour le clavier français, il s'agira du fichier **/usr/share/X11/xkb/symbols/fr** dans lequel vous trouverez, à la section "Autre", la ligne suivante : <|> " => suggestions : ['\xa0»', '”']

547 Guillemets typographiques ouvrants. => <note important>La "carte du clavier", rangée dans le fichier **carte_active**, ne correspond à la table **fr** section "Autre" que si des réaffectations de touches n'ont pas été faites par des commandes en ligne.\\ Notez que cette façon de réaffecter les touches par des commandes en ligne est perturbante dans la mesure où elle désynchronise la perception que vous avez de votre agencement par les outils graphiques et la réalité.</note> <|> " => suggestions : ['«\xa0', '“']
547 Guillemets typographiques fermants. => <note important>La "carte du clavier", rangée dans le fichier **carte_active**, ne correspond à la table **fr** section "Autre" que si des réaffectations de touches n'ont pas été faites par des commandes en ligne.\\ Notez que cette façon de réaffecter les touches par des commandes en ligne est perturbante dans la mesure où elle désynchronise la perception que vous avez de votre agencement par les outils graphiques et la réalité.</note> <|> " => suggestions : ['\xa0»', '”']
547 Mot inconnu : carte_active => <note important>La "carte du clavier", rangée dans le fichier **carte_active**, ne correspond à la table **fr** section "Autre" que si des réaffectations de touches n'ont pas été faites par des commandes en ligne.\\ Notez que cette façon de réaffecter les touches par des commandes en ligne est perturbante dans la mesure où elle désynchronise la perception que vous avez de votre agencement par les outils graphiques et la réalité.</note> <|> carte_active
547 Guillemets typographiques ouvrants. => <note important>La "carte du clavier", rangée dans le fichier **carte_active**, ne correspond à la table **fr** section "Autre" que si des réaffectations de touches n'ont pas été faites par des commandes en ligne.\\ Notez que cette façon de réaffecter les touches par des commandes en ligne est perturbante dans la mesure où elle désynchronise la perception que vous avez de votre agencement par les outils graphiques et la réalité.</note> <|> " => suggestions : ['«\xa0', '“']
547 Guillemets typographiques fermants. => <note important>La "carte du clavier", rangée dans le fichier **carte_active**, ne correspond à la table **fr** section "Autre" que si des réaffectations de touches n'ont pas été faites par des commandes en ligne.\\ Notez que cette façon de réaffecter les touches par des commandes en ligne est perturbante dans la mesure où elle désynchronise la perception que vous avez de votre agencement par les outils graphiques et la réalité.</note> <|> " => suggestions : ['\xa0»', '”']

549 Apostrophe incorrecte. => Vous observerez donc par cet exemple, et c'est vrai pour d' autres touches, qu'un même code de touche peut être associé à plusieurs (ici quatre) symboles de touche et que ces symboles de touche sont obtenus en accompagnant l'appui sur la touche par maintien préalable d'autres touches, telles que ⇧, //Alt Gr// ou la combinaison des deux.  <|> d'  => suggestions : ['d’']
549 Guillemets typographiques fermants. => Vous observerez donc par cet exemple, et c'est vrai pour d' autres touches, qu'un même code de touche peut être associé à plusieurs (ici quatre) symboles de touche et que ces symboles de touche sont obtenus en accompagnant l'appui sur la touche par maintien préalable d'autres touches, telles que ⇧, //Alt Gr// ou la combinaison des deux.  <|> ' => suggestions : ['”', '’', '›']
549 Espace(s) en fin de ligne à supprimer. => Vous observerez donc par cet exemple, et c'est vrai pour d' autres touches, qu'un même code de touche peut être associé à plusieurs (ici quatre) symboles de touche et que ces symboles de touche sont obtenus en accompagnant l'appui sur la touche par maintien préalable d'autres touches, telles que ⇧, //Alt Gr// ou la combinaison des deux.  <|>   => suggestions : ['']

551 Pas d’espace après ce signe. => Les touches ⇧ et Alt Gr, qui ne produisent pas d'effet en elles-mêmes, mais qui modifient le symbole de touche envoyé par la touche qui les accompagne, sont appelées** touches modificatrices** (( //modifier keys// )). <|> (  => suggestions : ['(']
551 Mot inconnu : keys => Les touches ⇧ et Alt Gr, qui ne produisent pas d'effet en elles-mêmes, mais qui modifient le symbole de touche envoyé par la touche qui les accompagne, sont appelées** touches modificatrices** (( //modifier keys// )). <|> keys
551 Pas d’espace avant ce signe. => Les touches ⇧ et Alt Gr, qui ne produisent pas d'effet en elles-mêmes, mais qui modifient le symbole de touche envoyé par la touche qui les accompagne, sont appelées** touches modificatrices** (( //modifier keys// )). <|>  ) => suggestions : [')']

553 Il manque un “s” à même. => <note important>En réalité, les touches ne sont pas modificatrices par elles-même. C'est plutôt le symbole de touche qui leur est attaché qui l'est. Aussi ces touches peuvent-elles être changées pour d'autres. Vous verrez plus loin dans cette page, que pour être modificateur, ces symboles doivent être mis en relation avec certaines variables faisant partie de l'**état du clavier** qui est transmis aux librairies chargées de la transformation des scan-codes en symboles de touche.</note> <|> elles-même => suggestions : ['elles-mêmes']
559 Accord de nombre erroné avec « les touches » : « modificatrice » devrait être au pluriel. =>   * symbole de niveau 4 : **Æ**  -> accessible avec les touches modificatrice Alt Gr+⇧ <|> modificatrice => suggestions : ['modificatrices']

574 Mot inconnu : keycode => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> keycode
574 Espace(s) surnuméraire(s) à supprimer. => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|>    => suggestions : [' ']
574 Mot inconnu : ae => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> ae
574 Mot inconnu : AE => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> ae
574 Mot inconnu : adiaeresis => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> adiaeresis
574 Mot inconnu : Adiaeresis => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> adiaeresis
574 Mot inconnu : guillemotleft => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> guillemotleft
574 Mot inconnu : guillemotright => keycode  24 = a A q Q ae AE q Q adiaeresis Adiaeresis q Q guillemotleft guillemotright <|> guillemotright
576 Espace(s) en fin de ligne à supprimer. => Ce qui en clair correspond à :  <|>   => suggestions : ['']

577 Mot inconnu : keycode => ^keycode 24 | a | A | q | Q | æ | Æ | q | Q | ä | Ä | q | Q | « | » | <|> keycode
577 Mot inconnu : ä => ^keycode 24 | a | A | q | Q | æ | Æ | q | Q | ä | Ä | q | Q | « | » | <|> ä
577 Mot inconnu : Ä => ^keycode 24 | a | A | q | Q | æ | Æ | q | Q | ä | Ä | q | Q | « | » | <|> ä

587 Mot inconnu : GiNj => Mis à part, la particularité signalée dans la note ci-dessus, et en notant //GiNj//, **i** étant la valeur du **G**roupe et **j** celle du **N**iveau, la carte présente les données dans cet ordre: <|> ginj
587 Mot inconnu : roupe => Mis à part, la particularité signalée dans la note ci-dessus, et en notant //GiNj//, **i** étant la valeur du **G**roupe et **j** celle du **N**iveau, la carte présente les données dans cet ordre: <|> roupe
587 Mot inconnu : iveau => Mis à part, la particularité signalée dans la note ci-dessus, et en notant //GiNj//, **i** étant la valeur du **G**roupe et **j** celle du **N**iveau, la carte présente les données dans cet ordre: <|> iveau

589 Mot inconnu : G1N1 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g1n1
589 Mot inconnu : G1N2 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g1n2
589 Mot inconnu : G2N1 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g2n1
589 Mot inconnu : G2N2 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g2n2
589 Mot inconnu : G1N3 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g1n3
589 Mot inconnu : G1N4 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g1n4
589 Mot inconnu : G2N3 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g2n3
589 Mot inconnu : G2N4 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g2n4
589 Mot inconnu : G3N1 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g3n1
589 Mot inconnu : G3N2 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g3n2
589 Mot inconnu : G4N1 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g4n1
589 Mot inconnu : G4N2 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g4n2
589 Mot inconnu : G3N3 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g3n3
589 Mot inconnu : G3N4 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g3n4
589 Mot inconnu : G4N3 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g4n3
589 Mot inconnu : G4N4 => | G1N1 | G1N2 | G2N1 | G2N2 | G1N3 | G1N4 | G2N3 | G2N4 | G3N1 | G3N2 | G4N1 | G4N2 | G3N3 | G3N4 | G4N3 | G4N4 | <|> g4n4

591 Mot inconnu : XKB => ===== Principe de gestion du clavier par XKB ===== <|> xkb

592 Espace(s) surnuméraire(s) à supprimer. => ==== Schéma  simplifié ==== <|>    => suggestions : [' ']
598 Il manque un trait d’union si “même” se rapporte à “lui”. =>   * Le serveur X n'adresse pas lui même les symboles de touche aux applications. Ce sont Xlib et les toolkits qui le font en utilisant la carte du clavier vue précédemment et en se basant sur les "scancodes" et l'**état du clavier** contenus dans l’événement transmis par le serveur X. <|> lui même => suggestions : ['lui-même']
598 Mot inconnu : Xlib =>   * Le serveur X n'adresse pas lui même les symboles de touche aux applications. Ce sont Xlib et les toolkits qui le font en utilisant la carte du clavier vue précédemment et en se basant sur les "scancodes" et l'**état du clavier** contenus dans l’événement transmis par le serveur X. <|> xlib
598 Mot inconnu : toolkits =>   * Le serveur X n'adresse pas lui même les symboles de touche aux applications. Ce sont Xlib et les toolkits qui le font en utilisant la carte du clavier vue précédemment et en se basant sur les "scancodes" et l'**état du clavier** contenus dans l’événement transmis par le serveur X. <|> toolkits
598 Guillemets typographiques ouvrants. =>   * Le serveur X n'adresse pas lui même les symboles de touche aux applications. Ce sont Xlib et les toolkits qui le font en utilisant la carte du clavier vue précédemment et en se basant sur les "scancodes" et l'**état du clavier** contenus dans l’événement transmis par le serveur X. <|> " => suggestions : ['«\xa0', '“']
598 Mot inconnu : scancodes =>   * Le serveur X n'adresse pas lui même les symboles de touche aux applications. Ce sont Xlib et les toolkits qui le font en utilisant la carte du clavier vue précédemment et en se basant sur les "scancodes" et l'**état du clavier** contenus dans l’événement transmis par le serveur X. <|> scancodes
598 Guillemets typographiques fermants. =>   * Le serveur X n'adresse pas lui même les symboles de touche aux applications. Ce sont Xlib et les toolkits qui le font en utilisant la carte du clavier vue précédemment et en se basant sur les "scancodes" et l'**état du clavier** contenus dans l’événement transmis par le serveur X. <|> " => suggestions : ['\xa0»', '”']
599 S’il s’agit d’un impératif, mettez un trait d’union. =>   * Le serveur X gère une variable appelée //état du clavier// et communique cette information aux librairies. En pratique, pour gérer cet **état du clavier**, il utilise le code de touche qui, rappelons le, ne représente pas que des caractères, mais aussi des fonctions à exécuter. <|> rappelons le => suggestions : ['rappelons-le']

609 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|>   => suggestions : ['']
609 Mot inconnu : key =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> key
609 Mot inconnu : Group1 =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> group1
609 Guillemets typographiques ouvrants. =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> " => suggestions : ['«\xa0', '“']
609 Mot inconnu : ONE_LEVEL =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> one_level
609 Guillemets typographiques fermants. =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> " => suggestions : ['\xa0»', '”']
609 Mot inconnu : symbols =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> symbols
609 Mot inconnu : Group1 =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> group1
609 Pas d’espace après ce signe. =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> [  => suggestions : ['[']
609 Mot inconnu : ISO_Level3_Shift =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|> iso_level3_shift
609 Pas d’espace avant ce signe. =>  <file> key <RALT> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ] <|>  ] => suggestions : [']']

614 Mot inconnu : ISO_Level3_Shift => Le symbole de touche ISO_Level3_Shift est le symbole associé au niveau 3. <|> iso_level3_shift

616 Mot inconnu : Mod5 => La variable **Mod5** est une des variables qui font partie de l'état du clavier et qui sont prises en compte dans l'interprétation du niveau par les librairies xlib. Ces variables sont appelées «**Modificateurs**». <|> mod5
616 Mot inconnu : xlib => La variable **Mod5** est une des variables qui font partie de l'état du clavier et qui sont prises en compte dans l'interprétation du niveau par les librairies xlib. Ces variables sont appelées «**Modificateurs**». <|> xlib

620 Mot inconnu : Shift => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> shift
620 Mot inconnu : Lock => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> lock
620 Mot inconnu : Control => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> control
620 Mot inconnu : Mod1 => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> mod1
620 Mot inconnu : Mod2 => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> mod2
620 Mot inconnu : Mod3 => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> mod3
620 Mot inconnu : Mod4 => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> mod4
620 Mot inconnu : Mod5 => |Shift|Lock|Control|Mod1|Mod2|Mod3|Mod4|Mod5 <|> mod5

625 Conjugaison erronée. Accord avec “Le résultat…”. Le verbe devrait être à la 3ᵉ personne du singulier. => Le résultat devraient ressembler à ceci : <|> devraient => suggestions : ['devrait']

640 Mot inconnu : shift => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|> shift
640 Forme interrogative ? Mettez un trait d’union. => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|> sont elles => suggestions : ['sont-elles']
640 Il manque un trait d’union. => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|> elles mêmes => suggestions : ['elles-mêmes']
640 Mot inconnu : Shift_L => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|> shift_l
640 Mot inconnu : Shift_R => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|> shift_r
640 Espace(s) surnuméraire(s) à supprimer. => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|>    => suggestions : [' ']
640 Mot inconnu : ISO_Level3_Shift => Vous pouvez voir ici entre autres, que le modificateur shift est associé aux touches qui sont elles mêmes associées aux symboles Shift_L ((touche majuscule de gauche)) et Shift_R  ((touche majuscule de droite)) et que le passage en niveau 3 se fait par la touche qui est associée au symbole ISO_Level3_Shift. <|> iso_level3_shift

642 Mot inconnu : Mod1 => Pour que les modificateurs Mod1 à Mod5 aient un effet déterminé sur le choix du symbole de touche, il faut qu'ils soient mis en correspondance avec un symbole de touche modificateur, par une instruction du type : <|> mod1
642 Mot inconnu : Mod5 => Pour que les modificateurs Mod1 à Mod5 aient un effet déterminé sur le choix du symbole de touche, il faut qu'ils soient mis en correspondance avec un symbole de touche modificateur, par une instruction du type : <|> mod5
646 Mot inconnu : ISO_Level3_Shift => Des exemples de symboles de touche possédant une fonction modificatrice sont : ISO_Level3_Shift, Num_Lock, ISO_Level5_Shift, Caps_Lock…\\ <|> iso_level3_shift
646 Mot inconnu : Num_Lock => Des exemples de symboles de touche possédant une fonction modificatrice sont : ISO_Level3_Shift, Num_Lock, ISO_Level5_Shift, Caps_Lock…\\ <|> num_lock
646 Mot inconnu : ISO_Level5_Shift => Des exemples de symboles de touche possédant une fonction modificatrice sont : ISO_Level3_Shift, Num_Lock, ISO_Level5_Shift, Caps_Lock…\\ <|> iso_level5_shift
646 Mot inconnu : Caps_Lock => Des exemples de symboles de touche possédant une fonction modificatrice sont : ISO_Level3_Shift, Num_Lock, ISO_Level5_Shift, Caps_Lock…\\ <|> caps_lock

647 Espace(s) surnuméraire(s) à supprimer. => Le fichier  [[file:///usr/include/X11/keysymdef.h|/usr/include/X11/keysymdef.h]] présente tous les symboles de touche utilisés dans le système ; les symboles de touche à fonction modificatrice y apparaissent dans des sections repérées par le titre «modifiers». <|>    => suggestions : [' ']
647 Mot inconnu : modifiers => Le fichier  [[file:///usr/include/X11/keysymdef.h|/usr/include/X11/keysymdef.h]] présente tous les symboles de touche utilisés dans le système ; les symboles de touche à fonction modificatrice y apparaissent dans des sections repérées par le titre «modifiers». <|> modifiers

651 Confusion : “coté” est le participe passé du verbe “coter”. => La table de clavier étant divisée en [[#groupes]], il faut donc que l'état du clavier comprenne une information sur le numéro de groupe pour le sélectionner. Cette information est bien présente dans l'état du clavier, à coté des [[#modificateurs]] qui, pour leur part,  permettent de sélectionner le bon niveau. <|> coté => suggestions : ['côté', 'côtés']
651 Espace(s) surnuméraire(s) à supprimer. => La table de clavier étant divisée en [[#groupes]], il faut donc que l'état du clavier comprenne une information sur le numéro de groupe pour le sélectionner. Cette information est bien présente dans l'état du clavier, à coté des [[#modificateurs]] qui, pour leur part,  permettent de sélectionner le bon niveau. <|>    => suggestions : [' ']

659 Espace(s) en fin de ligne à supprimer. => Les différents types de touches sont définis dans les fichiers placés dans le dossier **/usr/share/X11/xkb/types** et sont de la forme  <|>   => suggestions : ['']

660 Guillemets typographiques ouvrants. => <file>type 'NomDeType '{' Instructions '};</file>.  Parmi les instructions, on peut rencontrer les instructions suivantes : <|> ' => suggestions : ['“', '‘', '‹']
660 Mot inconnu : NomDeType => <file>type 'NomDeType '{' Instructions '};</file>.  Parmi les instructions, on peut rencontrer les instructions suivantes : <|> nomdetype
660 Espace(s) surnuméraire(s) à supprimer. => <file>type 'NomDeType '{' Instructions '};</file>.  Parmi les instructions, on peut rencontrer les instructions suivantes : <|>    => suggestions : [' ']
661 Mot inconnu : modifiers =>   * modifiers = <liste de modificateurs> : il s'agit de la liste des modificateurs qui sont repris dans la définition du type. <|> modifiers
662 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|> map => suggestions : ['Map']
662 Mot inconnu : map =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|> map
662 Mot inconnu : xmodmap =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|> xmodmap
662 Mot inconnu : Level1 =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|> level1
662 Mot inconnu : Level8 =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|> level8
662 Il manque un trait d’union. =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|> au delà => suggestions : ['Au-delà']
662 Espace(s) en fin de ligne à supprimer. =>   * map[<combinaison de modificateurs>] = <nom du niveau> : c'est la combinaison de modificateurs correspondant au nom du niveau indiqué. \\ Les noms reconnus par le programme xmodmap vont de Level1 à Level8. Au delà il faut utiliser une valeur numérique, mais il y a peu de chances que vous en ayez besoin.  <|>   => suggestions : ['']
663 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * level_name[<nom normalisé>] = <nom symbolique libre> : xkb ne fait aucun usage de ces noms symboliques, mais ils sont néanmoins requis. Ils servent dans l'affichage des agencements. <|> level_name => suggestions : ['Level_name']
663 Mot inconnu : level_name =>   * level_name[<nom normalisé>] = <nom symbolique libre> : xkb ne fait aucun usage de ces noms symboliques, mais ils sont néanmoins requis. Ils servent dans l'affichage des agencements. <|> level_name
663 Mot inconnu : xkb =>   * level_name[<nom normalisé>] = <nom symbolique libre> : xkb ne fait aucun usage de ces noms symboliques, mais ils sont néanmoins requis. Ils servent dans l'affichage des agencements. <|> xkb
664 Mot inconnu : preserve =>   * preserve[...] = ... : Reportez vous aux documentations citées en référence (( Voir en bas de page)) pour des éclaircissements sur cette instruction dont la compréhension est difficile aux non programmeurs, et n'est pas indispensable ici.\\  <|> preserve
664 Typographie : points de suspension. Utilisez le caractère dédié. =>   * preserve[...] = ... : Reportez vous aux documentations citées en référence (( Voir en bas de page)) pour des éclaircissements sur cette instruction dont la compréhension est difficile aux non programmeurs, et n'est pas indispensable ici.\\  <|> ... => suggestions : ['…']
664 Typographie : points de suspension. Utilisez le caractère dédié. =>   * preserve[...] = ... : Reportez vous aux documentations citées en référence (( Voir en bas de page)) pour des éclaircissements sur cette instruction dont la compréhension est difficile aux non programmeurs, et n'est pas indispensable ici.\\  <|> ... => suggestions : ['…']
664 Forme interrogative ? Mettez un trait d’union. =>   * preserve[...] = ... : Reportez vous aux documentations citées en référence (( Voir en bas de page)) pour des éclaircissements sur cette instruction dont la compréhension est difficile aux non programmeurs, et n'est pas indispensable ici.\\  <|> reportez vous => suggestions : ['Reportez-vous']
664 Pas d’espace après ce signe. =>   * preserve[...] = ... : Reportez vous aux documentations citées en référence (( Voir en bas de page)) pour des éclaircissements sur cette instruction dont la compréhension est difficile aux non programmeurs, et n'est pas indispensable ici.\\  <|> (  => suggestions : ['(']
664 Espace(s) en fin de ligne à supprimer. =>   * preserve[...] = ... : Reportez vous aux documentations citées en référence (( Voir en bas de page)) pour des éclaircissements sur cette instruction dont la compréhension est difficile aux non programmeurs, et n'est pas indispensable ici.\\  <|>   => suggestions : ['']

680 Mot inconnu : modifiers => 	modifiers = Shift+Lock+LevelThree; <|> modifiers
680 Mot inconnu : Shift => 	modifiers = Shift+Lock+LevelThree; <|> shift
680 Mot inconnu : Lock => 	modifiers = Shift+Lock+LevelThree; <|> lock
680 Mot inconnu : LevelThree => 	modifiers = Shift+Lock+LevelThree; <|> levelthree

681 Mot inconnu : map => 	map[None] = Level1; <|> map
681 Mot inconnu : Level1 => 	map[None] = Level1; <|> level1

682 Mot inconnu : map => 	map[Shift] = Level2; <|> map
682 Mot inconnu : Shift => 	map[Shift] = Level2; <|> shift
682 Mot inconnu : Level2 => 	map[Shift] = Level2; <|> level2

683 Mot inconnu : map => 	map[Lock]  = Level2; <|> map
683 Mot inconnu : Lock => 	map[Lock]  = Level2; <|> lock
683 Mot inconnu : Level2 => 	map[Lock]  = Level2; <|> level2

684 Mot inconnu : map => 	map[LevelThree] = Level3; <|> map
684 Mot inconnu : LevelThree => 	map[LevelThree] = Level3; <|> levelthree
684 Mot inconnu : Level3 => 	map[LevelThree] = Level3; <|> level3

685 Mot inconnu : map => 	map[Shift+LevelThree] = Level4; <|> map
685 Mot inconnu : Shift => 	map[Shift+LevelThree] = Level4; <|> shift
685 Mot inconnu : LevelThree => 	map[Shift+LevelThree] = Level4; <|> levelthree
685 Mot inconnu : Level4 => 	map[Shift+LevelThree] = Level4; <|> level4

686 Mot inconnu : map => 	map[Lock+LevelThree] =  Level4; <|> map
686 Mot inconnu : Lock => 	map[Lock+LevelThree] =  Level4; <|> lock
686 Mot inconnu : LevelThree => 	map[Lock+LevelThree] =  Level4; <|> levelthree
686 Mot inconnu : Level4 => 	map[Lock+LevelThree] =  Level4; <|> level4

687 Mot inconnu : map => 	map[Lock+Shift+LevelThree] =  Level3; <|> map
687 Mot inconnu : Lock => 	map[Lock+Shift+LevelThree] =  Level3; <|> lock
687 Mot inconnu : Shift => 	map[Lock+Shift+LevelThree] =  Level3; <|> shift
687 Mot inconnu : LevelThree => 	map[Lock+Shift+LevelThree] =  Level3; <|> levelthree
687 Mot inconnu : Level3 => 	map[Lock+Shift+LevelThree] =  Level3; <|> level3

688 Mot inconnu : level_name => 	level_name[Level1] = "Base"; <|> level_name
688 Mot inconnu : Level1 => 	level_name[Level1] = "Base"; <|> level1
688 Guillemets typographiques ouvrants. => 	level_name[Level1] = "Base"; <|> " => suggestions : ['«\xa0', '“']
688 Guillemets typographiques fermants. => 	level_name[Level1] = "Base"; <|> " => suggestions : ['\xa0»', '”']

689 Mot inconnu : level_name => 	level_name[Level2] = "Shift"; <|> level_name
689 Mot inconnu : Level2 => 	level_name[Level2] = "Shift"; <|> level2
689 Guillemets typographiques ouvrants. => 	level_name[Level2] = "Shift"; <|> " => suggestions : ['«\xa0', '“']
689 Mot inconnu : Shift => 	level_name[Level2] = "Shift"; <|> shift
689 Guillemets typographiques fermants. => 	level_name[Level2] = "Shift"; <|> " => suggestions : ['\xa0»', '”']

690 Mot inconnu : level_name => 	level_name[Level3] = "Alt Base"; <|> level_name
690 Mot inconnu : Level3 => 	level_name[Level3] = "Alt Base"; <|> level3
690 Guillemets typographiques ouvrants. => 	level_name[Level3] = "Alt Base"; <|> " => suggestions : ['«\xa0', '“']
690 Guillemets typographiques fermants. => 	level_name[Level3] = "Alt Base"; <|> " => suggestions : ['\xa0»', '”']

691 Mot inconnu : level_name => 	level_name[Level4] = "Shift Alt"; <|> level_name
691 Mot inconnu : Level4 => 	level_name[Level4] = "Shift Alt"; <|> level4
691 Guillemets typographiques ouvrants. => 	level_name[Level4] = "Shift Alt"; <|> " => suggestions : ['«\xa0', '“']
691 Mot inconnu : Shift => 	level_name[Level4] = "Shift Alt"; <|> shift
691 Guillemets typographiques fermants. => 	level_name[Level4] = "Shift Alt"; <|> " => suggestions : ['\xa0»', '”']

695 Mot inconnu : LevelThree => <note>  On observera que dans les modificateurs apparaissent des noms (comme LevelThree) qui ne font pas partie de la liste des modificateurs, cités plus haut, qui sont normalement transmis dans l'état du clavier.  Ces modificateurs, à usage réservé de xkb, sont appelés** modificateurs virtuels**. xkb les utilise en réalité pour établir l'état du clavier, en particulier l'état des modificateurs qui en font partie. Ces modificateurs standards sont aussi  appelés : **modificateurs réels**. Cet aspect sera détaillé lorsque sera abordée la définition même des touches.</note> <|> levelthree
695 Espace(s) surnuméraire(s) à supprimer. => <note>  On observera que dans les modificateurs apparaissent des noms (comme LevelThree) qui ne font pas partie de la liste des modificateurs, cités plus haut, qui sont normalement transmis dans l'état du clavier.  Ces modificateurs, à usage réservé de xkb, sont appelés** modificateurs virtuels**. xkb les utilise en réalité pour établir l'état du clavier, en particulier l'état des modificateurs qui en font partie. Ces modificateurs standards sont aussi  appelés : **modificateurs réels**. Cet aspect sera détaillé lorsque sera abordée la définition même des touches.</note> <|>    => suggestions : [' ']
695 Mot inconnu : xkb => <note>  On observera que dans les modificateurs apparaissent des noms (comme LevelThree) qui ne font pas partie de la liste des modificateurs, cités plus haut, qui sont normalement transmis dans l'état du clavier.  Ces modificateurs, à usage réservé de xkb, sont appelés** modificateurs virtuels**. xkb les utilise en réalité pour établir l'état du clavier, en particulier l'état des modificateurs qui en font partie. Ces modificateurs standards sont aussi  appelés : **modificateurs réels**. Cet aspect sera détaillé lorsque sera abordée la définition même des touches.</note> <|> xkb
695 Mot inconnu : xkb => <note>  On observera que dans les modificateurs apparaissent des noms (comme LevelThree) qui ne font pas partie de la liste des modificateurs, cités plus haut, qui sont normalement transmis dans l'état du clavier.  Ces modificateurs, à usage réservé de xkb, sont appelés** modificateurs virtuels**. xkb les utilise en réalité pour établir l'état du clavier, en particulier l'état des modificateurs qui en font partie. Ces modificateurs standards sont aussi  appelés : **modificateurs réels**. Cet aspect sera détaillé lorsque sera abordée la définition même des touches.</note> <|> xkb
695 Espace(s) surnuméraire(s) à supprimer. => <note>  On observera que dans les modificateurs apparaissent des noms (comme LevelThree) qui ne font pas partie de la liste des modificateurs, cités plus haut, qui sont normalement transmis dans l'état du clavier.  Ces modificateurs, à usage réservé de xkb, sont appelés** modificateurs virtuels**. xkb les utilise en réalité pour établir l'état du clavier, en particulier l'état des modificateurs qui en font partie. Ces modificateurs standards sont aussi  appelés : **modificateurs réels**. Cet aspect sera détaillé lorsque sera abordée la définition même des touches.</note> <|>    => suggestions : [' ']

697 Mot inconnu : xkb => xkb attache aux touches, les types par défaut suivants  : <|> xkb
697 Espace(s) surnuméraire(s) à supprimer. => xkb attache aux touches, les types par défaut suivants  : <|>    => suggestions : [' ']
698 Mot inconnu : ONE_LEVEL =>   * ONE_LEVEL ((1 niveau )) : pour les touches qui ne possèdent qu'un seul symbole et qui est indépendant des modificateurs. Par exemple Enter, Escape, Space, etc... <|> one_level
698 Pas d’espace avant ce signe. =>   * ONE_LEVEL ((1 niveau )) : pour les touches qui ne possèdent qu'un seul symbole et qui est indépendant des modificateurs. Par exemple Enter, Escape, Space, etc... <|>  ) => suggestions : [')']
698 Mot inconnu : Space =>   * ONE_LEVEL ((1 niveau )) : pour les touches qui ne possèdent qu'un seul symbole et qui est indépendant des modificateurs. Par exemple Enter, Escape, Space, etc... <|> space
698 Un seul point après « etc. » =>   * ONE_LEVEL ((1 niveau )) : pour les touches qui ne possèdent qu'un seul symbole et qui est indépendant des modificateurs. Par exemple Enter, Escape, Space, etc... <|> etc... => suggestions : ['etc.']
699 Mot inconnu : TWO_LEVEL =>   * TWO_LEVEL ((2 niveaux)) : pour les touches à deux niveaux non alphabétiques. Le deuxième niveau est choisi par le modificateur //Shift// mais ne fait pas intervenir le modificateur //Lock//. Des exemples de telles touches sont sur un clavier AZERTY standard: //1/€€//, <|> two_level
699 Mot inconnu : Shift =>   * TWO_LEVEL ((2 niveaux)) : pour les touches à deux niveaux non alphabétiques. Le deuxième niveau est choisi par le modificateur //Shift// mais ne fait pas intervenir le modificateur //Lock//. Des exemples de telles touches sont sur un clavier AZERTY standard: //1/€€//, <|> shift
699 Mot inconnu : Lock =>   * TWO_LEVEL ((2 niveaux)) : pour les touches à deux niveaux non alphabétiques. Le deuxième niveau est choisi par le modificateur //Shift// mais ne fait pas intervenir le modificateur //Lock//. Des exemples de telles touches sont sur un clavier AZERTY standard: //1/€€//, <|> lock
700 Mot inconnu : ALPHABETIC =>   * ALPHABETIC : pour les touches alphabétiques. Elles possèdent deux niveaux également mais sont dépendantes de //Shift// **et** de //Lock//. <|> alphabetic
700 Mot inconnu : Shift =>   * ALPHABETIC : pour les touches alphabétiques. Elles possèdent deux niveaux également mais sont dépendantes de //Shift// **et** de //Lock//. <|> shift
700 Mot inconnu : Lock =>   * ALPHABETIC : pour les touches alphabétiques. Elles possèdent deux niveaux également mais sont dépendantes de //Shift// **et** de //Lock//. <|> lock
701 Guillemets typographiques ouvrants. =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> " => suggestions : ['«\xa0', '“']
701 Mot inconnu : KEYPAD =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> keypad
701 Guillemets typographiques fermants. =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> " => suggestions : ['\xa0»', '”']
701 Pas d’espace après ce signe. =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> (  => suggestions : ['(']
701 Mot inconnu : Shift =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> shift
701 Mot inconnu : NumLock =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> numlock
701 Mot inconnu : NumLock =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> numlock
701 Mot inconnu : Mod1 =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> mod1
701 Mot inconnu : Mod5 =>   * "KEYPAD" (( littéralement : pavé de touches, encore appelé «pavé numérique»)): Il s'agit de touches supplémentaires, sur certains claviers, regroupées en carré comprenant le plus souvent les touches numériques et les touches de direction. Elles ont deux niveaux aussi, mais dépendent de //Shift// **et** de //NumLock//. //NumLock// est un symbole de touche qui, lorsqu'il est attaché à un des modificateurs standards Mod1 à Mod5, lui confère une fonction de verrouillage de la fonction numérique des touches du pavé. <|> mod5

706 Mot inconnu : key => <file>key codeDeTouche	{description};</file> <|> key
706 Mot inconnu : codeDeTouche => <file>key codeDeTouche	{description};</file> <|> codedetouche

707 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => où //codeDeTouche// est le code de la touche tel qu'[[#Codes de touches (keycodes) |expliqué plus haut]], de la forme **<xxxx>** et où la partie entre accolades comprend la définition proprement dite. Cette définition peut porter sur de nombreux paramètres qu'il est difficile de présenter tous ici sans entrer dans des considérations complexes qui dépassent le besoin de ce tutoriel.\\ <|> où => suggestions : ['Où']
707 Mot inconnu : codeDeTouche => où //codeDeTouche// est le code de la touche tel qu'[[#Codes de touches (keycodes) |expliqué plus haut]], de la forme **<xxxx>** et où la partie entre accolades comprend la définition proprement dite. Cette définition peut porter sur de nombreux paramètres qu'il est difficile de présenter tous ici sans entrer dans des considérations complexes qui dépassent le besoin de ce tutoriel.\\ <|> codedetouche
707 Mot inconnu : keycodes => où //codeDeTouche// est le code de la touche tel qu'[[#Codes de touches (keycodes) |expliqué plus haut]], de la forme **<xxxx>** et où la partie entre accolades comprend la définition proprement dite. Cette définition peut porter sur de nombreux paramètres qu'il est difficile de présenter tous ici sans entrer dans des considérations complexes qui dépassent le besoin de ce tutoriel.\\ <|> keycodes

708 Espace(s) en fin de ligne à supprimer. => Pour une présentation exhaustive reportez-vous aux documents cités en référence en fin de page.  <|>   => suggestions : ['']

723 Typographie : points de suspension. Utilisez le caractère dédié. => <file>type = ..., or type[numéroGroupe] = ...</file> <|> ... => suggestions : ['…']
723 Mot inconnu : numéroGroupe => <file>type = ..., or type[numéroGroupe] = ...</file> <|> numérogroupe
723 Typographie : points de suspension. Utilisez le caractère dédié. => <file>type = ..., or type[numéroGroupe] = ...</file> <|> ... => suggestions : ['…']

726 Mot inconnu : Group1 => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> group1
726 Guillemets typographiques ouvrants. => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> " => suggestions : ['«\xa0', '“']
726 Mot inconnu : ONE_LEVEL => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> one_level
726 Guillemets typographiques fermants. => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> " => suggestions : ['\xa0»', '”']
726 Mot inconnu : Group2 => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> group2
726 Guillemets typographiques ouvrants. => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> " => suggestions : ['«\xa0', '“']
726 Mot inconnu : TWO_LEVEL => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> two_level
726 Guillemets typographiques fermants. => type[Group1]="ONE_LEVEL",type[Group2]="TWO_LEVEL", <|> " => suggestions : ['\xa0»', '”']

728 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  <note>Si vous souhaitez inclure un type personnel dans une configuration particulière du clavier, prenez exemple sur les types décrits dans les fichiers du dossier **/usr/share/X11/xkb/types**.  <|>   => suggestions : ['']
728 Espace(s) en fin de ligne à supprimer. =>  <note>Si vous souhaitez inclure un type personnel dans une configuration particulière du clavier, prenez exemple sur les types décrits dans les fichiers du dossier **/usr/share/X11/xkb/types**.  <|>   => suggestions : ['']

732 Mot inconnu : symbols => <file>symbols[...] = ...</file> <|> symbols
732 Typographie : points de suspension. Utilisez le caractère dédié. => <file>symbols[...] = ...</file> <|> ... => suggestions : ['…']
732 Typographie : points de suspension. Utilisez le caractère dédié. => <file>symbols[...] = ...</file> <|> ... => suggestions : ['…']
733 Espace(s) en fin de ligne à supprimer. => par exemple :  <|>   => suggestions : ['']

735 Mot inconnu : symbols => symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ], <|> symbols
735 Mot inconnu : Group1 => symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ], <|> group1
735 Pas d’espace après ce signe. => symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ], <|> [  => suggestions : ['[']
735 Mot inconnu : ISO_Level3_Shift => symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ], <|> iso_level3_shift
735 Mot inconnu : ISO_Next_Group => symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ], <|> iso_next_group
735 Pas d’espace avant ce signe. => symbols[Group1] = [ ISO_Level3_Shift, ISO_Next_Group ], <|>  ] => suggestions : [']']

737 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  <note>La remarque faite précédemment à propos des groupes vaut également dans ce cas.</note> <|>   => suggestions : ['']

741 Mot inconnu : key => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|> key
741 Pas d’espace après ce signe. => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|> [  => suggestions : ['[']
741 Espace(s) surnuméraire(s) à supprimer. => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|>     => suggestions : [' ']
741 Mot inconnu : quotedbl => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|> quotedbl
741 Espace(s) surnuméraire(s) à supprimer. => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|>             => suggestions : [' ']
741 Mot inconnu : at => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|> at
741 Espace(s) surnuméraire(s) à supprimer. => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|>      => suggestions : [' ']
741 Mot inconnu : oneeighth => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|> oneeighth
741 Pas d’espace avant ce signe. => key <AE02>	{ [         2,   quotedbl,           at,    oneeighth ]	}; <|>  ] => suggestions : [']']

749 Espace(s) surnuméraire(s) à supprimer. => D'une façon assez générale, les fichiers de configuration se présentent comme  une suite de sections de la forme suivante : <|>    => suggestions : [' ']

751 Pas d’espace après ce signe. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|> [  => suggestions : ['[']
751 Pas d’espace avant ce signe. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|>  ] => suggestions : [']']
751 Pas d’espace après ce signe. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|> [  => suggestions : ['[']
751 Pas d’espace avant ce signe. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|>  ] => suggestions : [']']
751 Pas d’espace après ce signe. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|> [  => suggestions : ['[']
751 Pas d’espace avant ce signe. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|>  ] => suggestions : [']']
751 Une de ces ponctuations est superflue. => [ [[#Drapeaux]] ] [[#TypeDeFichier]] [ [[#NomDeSection]] ] '{' [ [[#Instructions]] ] '};: <|> ;: => suggestions : [';', ':']

754 Mot inconnu : xkb => Un seul de ces drapeaux est utilisé par xkb : **default**. La section marquée //default// est celle qui est prise en compte lorsqu'une référence au fichier est faite sans mentionner le nom de la section. <|> xkb
754 Mot inconnu : default => Un seul de ces drapeaux est utilisé par xkb : **default**. La section marquée //default// est celle qui est prise en compte lorsqu'une référence au fichier est faite sans mentionner le nom de la section. <|> default
754 Mot inconnu : default => Un seul de ces drapeaux est utilisé par xkb : **default**. La section marquée //default// est celle qui est prise en compte lorsqu'une référence au fichier est faite sans mentionner le nom de la section. <|> default

758 Mot inconnu : TypeDeFichier => ===  TypeDeFichier === <|> typedefichier

762 Mot inconnu : xkb_keycodes => |**xkb_keycodes**| Fichiers établissant la correspondance entre le code de chacune des touches et un nom symbolique de ce code. Les fichiers de ce type sont placés dans le dossier **/usr/share/X11/xkb/keycodes**| <|> xkb_keycodes

763 Mot inconnu : xkb_types => |**xkb_types**| Fichiers décrivant les types de touche, en particulier leur nombre de niveaux et la relation entre ces niveaux et les modificateurs. Les fichiers de ce type sont placés dans le dossier ** /usr/share/X11/xkb/types**| <|> xkb_types

764 Mot inconnu : xkb_symbols => |**xkb_symbols**|Fichiers décrivant, entre autres, le type et les symboles de touche de cette touche. Les fichiers de ce type sont placés dans le dossier **/usr/share/X11/xkb/symbols**| <|> xkb_symbols

765 Mot inconnu : xkb_compat => |**xkb_compat**|Fichiers décrivant le comportement des modificateurs. Ceci renvoie à des notions complexes qui ne sont pas strictement nécessaires pour la compréhension de ce tutoriel. Pour une présentation exhaustive reportez-vous aux documents cités en référence en fin de page. Les fichiers de ce type sont placés dans le dossier **/usr/share/X11/xkb/compat**| <|> xkb_compat

766 Mot inconnu : xkb_geometry => |**xkb_geometry**|Fichiers décrivant le placement physique des touches sur le clavier. Les fichiers de ce type sont placés dans le dossier **/usr/share/X11/xkb/geometry**| <|> xkb_geometry

770 Mot inconnu : NomDeSection => === NomDeSection === <|> nomdesection

771 Espace(s) surnuméraire(s) à supprimer. => Il attribue un nom à la section. Pour les instructions d'inclusion de fichier, ou de partie de fichier, une  référence à une section particulière pourra être faite en utilisant ce nom. <|>    => suggestions : [' ']

776 Mot inconnu : symbols => Par exemple, dans un fichier du dossier //symbols//, on peut trouver une instruction de définition des symboles attachés aux différents de cette touche telle que : <|> symbols

777 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|>   => suggestions : ['']
777 Mot inconnu : key =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|> key
777 Pas d’espace après ce signe. =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|> [  => suggestions : ['[']
777 Espace(s) surnuméraire(s) à supprimer. =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|>                  => suggestions : [' ']
777 Espace(s) surnuméraire(s) à supprimer. =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|>             => suggestions : [' ']
777 Mot inconnu : adiaeresis =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|> adiaeresis
777 Espace(s) surnuméraire(s) à supprimer. =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|>              => suggestions : [' ']
777 Mot inconnu : Adiaeresis =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|> adiaeresis
777 Pas d’espace avant ce signe. =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|>  ] => suggestions : [']']
777 Mot inconnu : ä =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|> ä
777 Mot inconnu : Ä =>  <file>key <AC01>	{ [                q,                Q,           adiaeresis,            Adiaeresis ] }; // q Q ä Ä <|> ä

781 Mot inconnu : include => D'une façon générale, les fichiers de configuration n'ont pas une présentation où ceux-ci seraient indépendants les uns des autres. Au contraire, ils sont en général très imbriqués, faisant appel, par des instructions //include//, à des parties d'autres fichier de même type. Ceci rend d'ailleurs la lecture d'une configuration donnée assez difficile. <|> include

783 Mot inconnu : include => === L'instruction include === <|> include

791 Mot inconnu : override => |**override**|Quand ce mode de fusion est utilisé et qu'une nouvelle déclaration entre en conflit avec une précédente déclaration, la nouvelle déclaration est conservée| <|> override

792 Mot inconnu : override => |**replace**|En général, ce mode est équivalent au mode //override//.Cependant, l'interprétation en est plus nuancée dans les fichiers de symboles de touches. Comme la description d'une touche comporte une suite de symboles à associer aux différents niveaux, il se peut que plusieurs descriptions d'une même touche, intéressent chacune une partie seulement de l'ensemble des symboles. Dans un tel cas, si le mode est //override//, les symboles des **niveaux décrits** de la nouvelle déclaration écrasent ceux de l'ancienne; par contre, si le mode est replace, **tous les niveaux sont écrasés**, ce qui signifie que les symboles absents de la nouvelle déclaration seront sans symbole affecté.| <|> override
792 Mot inconnu : override => |**replace**|En général, ce mode est équivalent au mode //override//.Cependant, l'interprétation en est plus nuancée dans les fichiers de symboles de touches. Comme la description d'une touche comporte une suite de symboles à associer aux différents niveaux, il se peut que plusieurs descriptions d'une même touche, intéressent chacune une partie seulement de l'ensemble des symboles. Dans un tel cas, si le mode est //override//, les symboles des **niveaux décrits** de la nouvelle déclaration écrasent ceux de l'ancienne; par contre, si le mode est replace, **tous les niveaux sont écrasés**, ce qui signifie que les symboles absents de la nouvelle déclaration seront sans symbole affecté.| <|> override

793 Mot inconnu : alternate => |**alternate**|Ce mode n'est utilisé que pour les codes de touche. La nouvelle définition est considérée comme un alias.| <|> alternate
796 Pas d’espace avant une virgule. =>   * Sans autre déclaration qui le contredise à l'intérieur de l'élément inclus, lors de l'inclusion d'un élément , le mode //override// est appliqué par défaut. <|>  , => suggestions : [',']
796 Mot inconnu : override =>   * Sans autre déclaration qui le contredise à l'intérieur de l'élément inclus, lors de l'inclusion d'un élément , le mode //override// est appliqué par défaut. <|> override
797 Mot inconnu : override =>   * Si l'inclusion porte sur une suite d'éléments reliés par le signe +, les éléments ajoutés sont fusionnés entre eux avec le mode //override//. Les déclarations internes peuvent néanmoins contredire ce principe. <|> override
799 Mot inconnu : override =>   * Le mode de fusion par défaut, override, peut être contredit en remplaçant le terme include par le nom d'un mode d'insertion. Par exemple, dans un fichier de symboles : <|> override
799 Mot inconnu : include =>   * Le mode de fusion par défaut, override, peut être contredit en remplaçant le terme include par le nom d'un mode d'insertion. Par exemple, dans un fichier de symboles : <|> include
800 Il manque un espace avant la parenthèse. => <file>replace «fr(oss_nodeadkeys)"</file> <|> ( => suggestions : [' (']
800 Mot inconnu : oss_nodeadkeys => <file>replace «fr(oss_nodeadkeys)"</file> <|> oss_nodeadkeys

801 Accord avec la forme verbale “doivent” : “incluse” devrait être au pluriel. => signifie que les déclarations du fichier fr doivent être incluse en appliquant le mode //replace// et non pas le mode  par défaut //override//. Les déclarations internes peuvent néanmoins contredire ce principe. <|> incluse => suggestions : ['incluses']
801 Espace(s) surnuméraire(s) à supprimer. => signifie que les déclarations du fichier fr doivent être incluse en appliquant le mode //replace// et non pas le mode  par défaut //override//. Les déclarations internes peuvent néanmoins contredire ce principe. <|>    => suggestions : [' ']
801 Mot inconnu : override => signifie que les déclarations du fichier fr doivent être incluse en appliquant le mode //replace// et non pas le mode  par défaut //override//. Les déclarations internes peuvent néanmoins contredire ce principe. <|> override

803 Espace(s) en fin de ligne à supprimer. => <file>  <|>   => suggestions : ['']

804 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  replace key <HYPR> { <|>   => suggestions : ['']
804 Mot inconnu : key =>  replace key <HYPR> { <|> key

809 Espace(s) en fin de ligne à supprimer. => </file>  <|>   => suggestions : ['']

814 Il manque un espace. => Les pages [[tutoriel:creer_et_utiliser_un_agencement_de_clavier_personnalise|Créer et utiliser un agencement de clavier personnalisé]] et [[tutoriel:exemple_de_creation_d_un_agencement_clavier_personnalise|Exemple de création d'un agencement de clavier personnalisé]] décrivent, dans les grandes lignes pour la première et, très en détails pour la seconde, la démarche d'écriture d'un agencement personnalisé. <|> creer_et_utiliser_un_agencement_de_clavier_personnalise => suggestions : [' creer_et_utiliser_un_agencement_de_clavier_personnalise']
814 Mot inconnu : creer_et_utiliser_un_agencement_de_clavier_personnalise => Les pages [[tutoriel:creer_et_utiliser_un_agencement_de_clavier_personnalise|Créer et utiliser un agencement de clavier personnalisé]] et [[tutoriel:exemple_de_creation_d_un_agencement_clavier_personnalise|Exemple de création d'un agencement de clavier personnalisé]] décrivent, dans les grandes lignes pour la première et, très en détails pour la seconde, la démarche d'écriture d'un agencement personnalisé. <|> creer_et_utiliser_un_agencement_de_clavier_personnalise
814 Il manque un espace. => Les pages [[tutoriel:creer_et_utiliser_un_agencement_de_clavier_personnalise|Créer et utiliser un agencement de clavier personnalisé]] et [[tutoriel:exemple_de_creation_d_un_agencement_clavier_personnalise|Exemple de création d'un agencement de clavier personnalisé]] décrivent, dans les grandes lignes pour la première et, très en détails pour la seconde, la démarche d'écriture d'un agencement personnalisé. <|> exemple_de_creation_d_un_agencement_clavier_personnalise => suggestions : [' exemple_de_creation_d_un_agencement_clavier_personnalise']
814 Mot inconnu : exemple_de_creation_d_un_agencement_clavier_personnalise => Les pages [[tutoriel:creer_et_utiliser_un_agencement_de_clavier_personnalise|Créer et utiliser un agencement de clavier personnalisé]] et [[tutoriel:exemple_de_creation_d_un_agencement_clavier_personnalise|Exemple de création d'un agencement de clavier personnalisé]] décrivent, dans les grandes lignes pour la première et, très en détails pour la seconde, la démarche d'écriture d'un agencement personnalisé. <|> exemple_de_creation_d_un_agencement_clavier_personnalise

818 Espace(s) en fin de ligne à supprimer. => Les bases théoriques de cette page sont accessibles sur le site de [[http://pascal.tsu.ru/en/xkb/| Ivan Pascal]], qui traite d'une manière exhaustive tout ce qui n'a pu être qu'effleuré ici. Ce texte, bien écrit, requiert néanmoins une attention soutenue, en particulier, à qui n'est pas un programmeur.  <|>   => suggestions : ['']
