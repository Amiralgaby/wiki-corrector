
5 Mot inconnu : Apache2 [[27:34]] => ====== Utiliser HTTPS avec Apache2 ====== <|> apache2

7 Mot inconnu : TLS [[111:114]] => Avec HTTPS, les échanges HTTP entre le client et le serveur sont chiffrés (et donc sécurisés) via le protocole TLS (ou autrefois SSL). <|> tls
7 Mot inconnu : SSL [[129:132]] => Avec HTTPS, les échanges HTTP entre le client et le serveur sont chiffrés (et donc sécurisés) via le protocole TLS (ou autrefois SSL). <|> ssl

11 Mot inconnu : TLS [[18:21]] => ==== Le protocole TLS ==== <|> tls

19 Espace(s) en fin de ligne à supprimer. [[325:326]] => [[https://fr.wikipedia.org/wiki/Certificat_%C3%A9lectronique|Un certificat]] permet de fournir diverses informations concernant l'identité de son détenteur (la personne qui publie les données). Ce certificat s'accompagne d'une **clé publique** qui est indispensable pour que la communication entre les machines soit chiffrée.  <|>   => suggestions : ['']

23 Mot inconnu : webmasters [[132:142]] => Dans la plupart des cas, l'obtention d'un certificat certifié par une AC (autorité de certification) ayant un prix assez élevé, les webmasters auront tendance à vouloir signer eux-même leur certificat. Ce faisant, il est à noter que dans ce cas, le certificat ne sera pas reconnu par les navigateurs web comme étant certifié.  <|> webmasters
23 Il manque un “s” à même. [[176:184]] => Dans la plupart des cas, l'obtention d'un certificat certifié par une AC (autorité de certification) ayant un prix assez élevé, les webmasters auront tendance à vouloir signer eux-même leur certificat. Ce faisant, il est à noter que dans ce cas, le certificat ne sera pas reconnu par les navigateurs web comme étant certifié.  <|> eux-même => suggestions : ['eux-mêmes']
23 Espace(s) en fin de ligne à supprimer. [[325:326]] => Dans la plupart des cas, l'obtention d'un certificat certifié par une AC (autorité de certification) ayant un prix assez élevé, les webmasters auront tendance à vouloir signer eux-même leur certificat. Ce faisant, il est à noter que dans ce cas, le certificat ne sera pas reconnu par les navigateurs web comme étant certifié.  <|>   => suggestions : ['']

25 Mot inconnu : Cert [[27:31]] => [[http://www.cacert.org|CA Cert]] permet d'obtenir des certificats gratuits. Il vous faudra néanmoins installer le certificat racine dans votre navigateur. <|> cert

27 Mot inconnu : Let's [[27:32]] => [[https://letsencrypt.org/|Let's encrypt]] permet également d'obtenir des certificats gratuits. En outre Let'Encrypt fournit l'application [[https://certbot.eff.org/|cerbot]] qui simplifie grandement la création et la gestion des certificats. <|> let's
27 Mot inconnu : encrypt [[33:40]] => [[https://letsencrypt.org/|Let's encrypt]] permet également d'obtenir des certificats gratuits. En outre Let'Encrypt fournit l'application [[https://certbot.eff.org/|cerbot]] qui simplifie grandement la création et la gestion des certificats. <|> encrypt
27 Mot inconnu : Let'Encrypt [[105:116]] => [[https://letsencrypt.org/|Let's encrypt]] permet également d'obtenir des certificats gratuits. En outre Let'Encrypt fournit l'application [[https://certbot.eff.org/|cerbot]] qui simplifie grandement la création et la gestion des certificats. <|> let'encrypt

31 Mot inconnu : Apache2 [[47:54]] => ===== Mise en application avec le Serveur Http Apache2 ===== <|> apache2

33 Mot inconnu : SSL [[26:29]] => ==== Activation du module SSL/TLS ==== <|> ssl
33 Mot inconnu : TLS [[30:33]] => ==== Activation du module SSL/TLS ==== <|> tls

35 Mot inconnu : TLS [[22:25]] => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : <|> tls
35 Mot inconnu : Apache2 [[66:73]] => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : <|> apache2
35 Mot inconnu : ssl [[103:106]] => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : <|> ssl

37 Mot inconnu : Apache2 [[34:41]] => puis recharger la configuration d'Apache2 faites : <|> apache2

44 Mot inconnu : Let's [[33:38]] => ==== Création du certificat avec Let's encrypt ==== <|> let's
44 Mot inconnu : encrypt [[39:46]] => ==== Création du certificat avec Let's encrypt ==== <|> encrypt
46 Espace(s) en fin de ligne à supprimer. [[11:12]] => Prérequis :  <|>   => suggestions : ['']
47 Espace(s) surnuméraire(s) à supprimer. [[47:49]] =>   * avoir un nom de domaine pleinement qualifié  (nous utiliserons example.com dans la suite) ; <|>    => suggestions : [' ']
47 Mot inconnu : example [[67:74]] =>   * avoir un nom de domaine pleinement qualifié  (nous utiliserons example.com dans la suite) ; <|> example

50 Mot inconnu : Certbot [[20:27]] => === Installation de Certbot === <|> certbot

51 Mot inconnu : certbot [[55:62]] => Les instructions pour installer et utiliser simplement certbot sont disponibles en anglais [[https://certbot.eff.org/|sur le site officiel.]] <|> certbot

53 Mot inconnu : certbot [[60:67]] => En voici, un récapitulatif. Il suffit d'installer le paquet certbot : <|> certbot

59 Mot inconnu : Certbot [[31:38]] => === Générer le certificat avec Certbot === <|> certbot

60 Mot inconnu : Certbot [[0:7]] => Certbot dispose de très nombreuses options qui sont documentées en anglais [[hhttps://certbot.eff.org/docs/using.html|sur le site officiel]]. <|> certbot
60 Mot inconnu : hhttps [[77:83]] => Certbot dispose de très nombreuses options qui sont documentées en anglais [[hhttps://certbot.eff.org/docs/using.html|sur le site officiel]]. <|> hhttps

66 Accord de nombre erroné : « domaine » devrait être au pluriel. [[64:71]] => Le script se déroule et pose des questions, à commencer par les domaine à passer en https, puis si on veut rediriger http vers https… <|> domaine => suggestions : ['domaines']
68 Mot inconnu : webroot [[90:97]] => Une autre méthode également simple pour générer un certificat en utilisant le greffon « //webroot// » est: <|> webroot

72 Il manque un espace à côté du tiret. [[73:75]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|>  - => suggestions : [' – ', ' — ']
72 Mot inconnu : example [[78:85]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|> example
72 Il manque un espace à côté du tiret. [[202:204]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|>  - => suggestions : [' – ', ' — ']
72 Mot inconnu : example [[215:222]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|> example

74 Après “être”, le verbe ne devrait pas être conjugué à la 2ᵉ personne du singulier. [[217:222]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> crées => suggestions : ['créés', 'créées', 'créé', 'créée']
74 Mot inconnu : cron [[243:247]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> cron
74 Mot inconnu : timer [[277:282]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> timer
74 Mot inconnu : systemd [[283:290]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> systemd
74 Mot inconnu : lib [[292:295]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> lib
74 Mot inconnu : systemd [[296:303]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> systemd
74 Mot inconnu : system [[304:310]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> system
74 Mot inconnu : certbot [[311:318]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> certbot
74 Mot inconnu : timer [[319:324]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> timer
74 Mot inconnu : Let'sEncrypt [[435:447]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> let'sencrypt

167 Espace(s) en fin de ligne à supprimer. [[31:32]] => ==== Renforcer la sécurité ====  <|>   => suggestions : ['']
