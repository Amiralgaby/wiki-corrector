
5 Mot inconnu : Apache2 => ====== Utiliser HTTPS avec Apache2 ====== | apache2

7 Mot inconnu : TLS => Avec HTTPS, les échanges HTTP entre le client et le serveur sont chiffrés (et donc sécurisés) via le protocole TLS (ou autrefois SSL). | tls
7 Mot inconnu : SSL => Avec HTTPS, les échanges HTTP entre le client et le serveur sont chiffrés (et donc sécurisés) via le protocole TLS (ou autrefois SSL). | ssl

11 Mot inconnu : TLS => ==== Le protocole TLS ==== | tls

19 Espace(s) en fin de ligne à supprimer. => [[https://fr.wikipedia.org/wiki/Certificat_%C3%A9lectronique|Un certificat]] permet de fournir diverses informations concernant l'identité de son détenteur (la personne qui publie les données). Ce certificat s'accompagne d'une **clé publique** qui est indispensable pour que la communication entre les machines soit chiffrée.  |   => suggestions : ['']

23 Mot inconnu : webmasters => Dans la plupart des cas, l'obtention d'un certificat certifié par une AC (autorité de certification) ayant un prix assez élevé, les webmasters auront tendance à vouloir signer eux-même leur certificat. Ce faisant, il est à noter que dans ce cas, le certificat ne sera pas reconnu par les navigateurs web comme étant certifié.  | webmasters
23 Il manque un “s” à même. => Dans la plupart des cas, l'obtention d'un certificat certifié par une AC (autorité de certification) ayant un prix assez élevé, les webmasters auront tendance à vouloir signer eux-même leur certificat. Ce faisant, il est à noter que dans ce cas, le certificat ne sera pas reconnu par les navigateurs web comme étant certifié.  | eux-même => suggestions : ['eux-mêmes']
23 Espace(s) en fin de ligne à supprimer. => Dans la plupart des cas, l'obtention d'un certificat certifié par une AC (autorité de certification) ayant un prix assez élevé, les webmasters auront tendance à vouloir signer eux-même leur certificat. Ce faisant, il est à noter que dans ce cas, le certificat ne sera pas reconnu par les navigateurs web comme étant certifié.  |   => suggestions : ['']

25 Mot inconnu : Cert => [[http://www.cacert.org|CA Cert]] permet d'obtenir des certificats gratuits. Il vous faudra néanmoins installer le certificat racine dans votre navigateur. | cert

27 Mot inconnu : Let's => [[https://letsencrypt.org/|Let's encrypt]] permet également d'obtenir des certificats gratuits. En outre Let'Encrypt fournit l'application [[https://certbot.eff.org/|cerbot]] qui simplifie grandement la création et la gestion des certificats. | let's
27 Mot inconnu : encrypt => [[https://letsencrypt.org/|Let's encrypt]] permet également d'obtenir des certificats gratuits. En outre Let'Encrypt fournit l'application [[https://certbot.eff.org/|cerbot]] qui simplifie grandement la création et la gestion des certificats. | encrypt
27 Mot inconnu : Let'Encrypt => [[https://letsencrypt.org/|Let's encrypt]] permet également d'obtenir des certificats gratuits. En outre Let'Encrypt fournit l'application [[https://certbot.eff.org/|cerbot]] qui simplifie grandement la création et la gestion des certificats. | let'encrypt

31 Mot inconnu : Apache2 => ===== Mise en application avec le Serveur Http Apache2 ===== | apache2

33 Mot inconnu : SSL => ==== Activation du module SSL/TLS ==== | ssl
33 Mot inconnu : TLS => ==== Activation du module SSL/TLS ==== | tls

35 Mot inconnu : TLS => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : | tls
35 Mot inconnu : Apache2 => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : | apache2
35 Mot inconnu : ssl => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : | ssl

37 Mot inconnu : Apache2 => puis recharger la configuration d'Apache2 faites : | apache2

44 Mot inconnu : Let's => ==== Création du certificat avec Let's encrypt ==== | let's
44 Mot inconnu : encrypt => ==== Création du certificat avec Let's encrypt ==== | encrypt
46 Espace(s) en fin de ligne à supprimer. => Prérequis :  |   => suggestions : ['']

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * avoir un nom de domaine pleinement qualifié  (nous utiliserons example.com dans la suite) ; |    => suggestions : ['']
47 Espace(s) surnuméraire(s) à supprimer. =>   * avoir un nom de domaine pleinement qualifié  (nous utiliserons example.com dans la suite) ; |    => suggestions : [' ']
47 Mot inconnu : example =>   * avoir un nom de domaine pleinement qualifié  (nous utiliserons example.com dans la suite) ; | example

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * avoir un serveur web apache déjà configuré, fonctionnel et accessible publiquement. |    => suggestions : ['']

50 Mot inconnu : Certbot => === Installation de Certbot === | certbot

51 Mot inconnu : certbot => Les instructions pour installer et utiliser simplement certbot sont disponibles en anglais [[https://certbot.eff.org/|sur le site officiel.]] | certbot

53 Mot inconnu : certbot => En voici, un récapitulatif. Il suffit d'installer le paquet certbot : | certbot

56 Mot inconnu : sudo => sudo apt install certbot</code> | sudo
56 Mot inconnu : install => sudo apt install certbot</code> | install
56 Mot inconnu : certbot => sudo apt install certbot</code> | certbot

59 Mot inconnu : Certbot => === Générer le certificat avec Certbot === | certbot

60 Mot inconnu : Certbot => Certbot dispose de très nombreuses options qui sont documentées en anglais [[hhttps://certbot.eff.org/docs/using.html|sur le site officiel]]. | certbot
60 Mot inconnu : hhttps => Certbot dispose de très nombreuses options qui sont documentées en anglais [[hhttps://certbot.eff.org/docs/using.html|sur le site officiel]]. | hhttps

66 Accord de nombre erroné : « domaine » devrait être au pluriel. => Le script se déroule et pose des questions, à commencer par les domaine à passer en https, puis si on veut rediriger http vers https… | domaine => suggestions : ['domaines']
68 Mot inconnu : webroot => Une autre méthode également simple pour générer un certificat en utilisant le greffon « //webroot// » est: | webroot

72 Il manque un espace à côté du tiret. => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. |  - => suggestions : [' – ', ' — ']
72 Mot inconnu : example => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. | example
72 Il manque un espace à côté du tiret. => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. |  - => suggestions : [' – ', ' — ']
72 Mot inconnu : example => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. | example

74 Après “être”, le verbe ne devrait pas être conjugué à la 2ᵉ personne du singulier. => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | crées => suggestions : ['créées', 'créée', 'créés', 'créé']
74 Mot inconnu : cron => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | cron
74 Mot inconnu : timer => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | timer
74 Mot inconnu : systemd => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | systemd
74 Mot inconnu : lib => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | lib
74 Mot inconnu : systemd => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | systemd
74 Mot inconnu : system => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | system
74 Mot inconnu : certbot => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | certbot
74 Mot inconnu : timer => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | timer
74 Mot inconnu : Let'sEncrypt => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). | let'sencrypt

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **/etc/letsencrypt/live/example.com/privkey.pem** pour la clé privée |     => suggestions : ['']

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **/etc/letsencrypt/live/example.com/fullchain.pem** pour le certificat complet. |     => suggestions : ['']

167 Espace(s) en fin de ligne à supprimer. => ==== Renforcer la sécurité ====  |   => suggestions : ['']
