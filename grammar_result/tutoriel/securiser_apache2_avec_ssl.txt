
5 Mot inconnu : Apache2 [[27:34]] => ====== Utiliser HTTPS avec Apache2 ====== <|> apache2

29 Mot inconnu : Apache2 [[47:54]] => ===== Mise en application avec le Serveur Http Apache2 ===== <|> apache2
33 Mot inconnu : Apache2 [[66:73]] => Pour que le protocole TLS puisse fonctionner avec le Serveur HTTP Apache2, il faut activer le module **ssl** avec la commande : <|> apache2

36 Mot inconnu : Apache2 [[34:41]] => puis recharger la configuration d'Apache2 avec : <|> apache2

43 Mot inconnu : Let's [[33:38]] => ==== Création du certificat avec Let's encrypt ==== <|> let's
43 Mot inconnu : encrypt [[39:46]] => ==== Création du certificat avec Let's encrypt ==== <|> encrypt
46 Mot inconnu : enregistremet [[76:89]] =>   * avoir un nom de domaine pleinement qualifié acheté auprès d'un bureau d'enregistremet (nous utiliserons example.com dans la suite) ; <|> enregistremet
46 Mot inconnu : example [[108:115]] =>   * avoir un nom de domaine pleinement qualifié acheté auprès d'un bureau d'enregistremet (nous utiliserons example.com dans la suite) ; <|> example

50 Mot inconnu : Certbot [[20:27]] => === Installation de Certbot === <|> certbot

53 Mot inconnu : certbot [[60:67]] => En voici, un récapitulatif. Il suffit d'installer le paquet certbot : <|> certbot

59 Mot inconnu : Certbot [[31:38]] => === Générer le certificat avec Certbot === <|> certbot

67 Accord de nombre erroné : « domaine » devrait être au pluriel. [[64:71]] => Le script se déroule et pose des questions, à commencer par les domaine à passer en https, puis si on veut rediriger http vers https… <|> domaine => suggestions : ['domaines']
69 Mot inconnu : webroot [[90:97]] => Une autre méthode également simple pour générer un certificat en utilisant le greffon « //webroot// » est: <|> webroot

73 Il manque un espace à côté du tiret. [[73:75]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|>  - => suggestions : [' – ', ' — ']
73 Mot inconnu : example [[78:85]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|> example
73 Il manque un espace à côté du tiret. [[202:204]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|>  - => suggestions : [' – ', ' — ']
73 Mot inconnu : example [[215:222]] => Cette commande va générer un certificat valable pour les domaines (option -d) example.com et www.example.com, qui correspondent à un site web existant et fonctionnel placé dans le dossier racine (option -w) var/www/example. <|> example

75 Après “être”, le verbe ne devrait pas être conjugué à la 2ᵉ personne du singulier. [[217:222]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> crées => suggestions : ['créé', 'créée', 'créés', 'créées']
75 Mot inconnu : timer [[277:282]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> timer
75 Mot inconnu : lib [[292:295]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> lib
75 Mot inconnu : system [[304:310]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> system
75 Mot inconnu : certbot [[311:318]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> certbot
75 Mot inconnu : timer [[319:324]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> timer
75 Mot inconnu : Let'sEncrypt [[435:447]] => À l'issue de la commande précédente sera crée une arborescence sous /etc/letsencrypt qui contient vos certificats et des fichiers de configuration nécessaires aux procédures de renouvellement et de révocation. Seront crées également une tâche cron (/etc/cron.d./certbot) et un timer systemd (lib/systemd/system/certbot.timer) permettant de renouveler automatiquement les certificats avant qu'ils n'arrivent à échéance (les certificats Let'sEncrypt ne sont valables que 3 mois). <|> let'sencrypt
