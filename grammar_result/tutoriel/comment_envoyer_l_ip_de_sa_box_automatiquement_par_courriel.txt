
11 Mot inconnu : GET => <file>GET bot.whatismyipaddress.com</file> | get

23 Mot inconnu : sh => <file>sh ~/getip</file> | sh
23 Mot inconnu : getip => <file>sh ~/getip</file> | getip

24 Mot inconnu : cat => <file>cat ~/.myip</file> | cat
24 Mot inconnu : myip => <file>cat ~/.myip</file> | myip

32 Mot inconnu : msmtp => == par msmtp == | msmtp

35 Mot inconnu : ssmtp => == par ssmtp == | ssmtp

37 Mot inconnu : Subject => <note tip>Sans préciser Subject://DeQuoiOnParle// le message n'aura pas de sujet. | subject
37 Mot inconnu : DeQuoiOnParle => <note tip>Sans préciser Subject://DeQuoiOnParle// le message n'aura pas de sujet. | dequoionparle

38 Mot inconnu : myip => Il faut donc prévoir de le rajouter en tête du fichier ~/.myip</note> | myip

49 Mot inconnu : echo => echo Subject:MaBoxMeParle > .myip | echo
49 Mot inconnu : Subject => echo Subject:MaBoxMeParle > .myip | subject
49 Il manque un espace. => echo Subject:MaBoxMeParle > .myip | maboxmeparle => suggestions : [' MaBoxMeParle']
49 Mot inconnu : MaBoxMeParle => echo Subject:MaBoxMeParle > .myip | maboxmeparle
49 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => echo Subject:MaBoxMeParle > .myip |  . => suggestions : ['. ', '.']
49 Mot inconnu : myip => echo Subject:MaBoxMeParle > .myip | myip

50 Mot inconnu : GET => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | get
50 Mot inconnu : grep => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | grep
50 Guillemets typographiques ouvrants. => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | " => suggestions : ['«\xa0', '“']
50 Mot inconnu : Your => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | your
50 Mot inconnu : is => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | is
50 Guillemets typographiques fermants. => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | " => suggestions : ['\xa0»', '”']
50 Mot inconnu : awk => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | awk
50 Mot inconnu : print => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | print
50 Mot inconnu : sed => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | sed
50 Guillemets typographiques ouvrants. => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | ' => suggestions : ['“', '‘', '‹']
50 Mot inconnu : awk => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | awk
50 Mot inconnu : print => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | print
50 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip |  . => suggestions : ['. ', '.']
50 Mot inconnu : myip => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip | myip

51 Mot inconnu : echo => echo "" >> .myip | echo
51 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => echo "" >> .myip |  . => suggestions : ['. ', '.']
51 Mot inconnu : myip => echo "" >> .myip | myip

52 Mot inconnu : sleep => sleep 1 | sleep

53 Mot inconnu : GET => GET http://bot.whatismyipaddress.com >> .myip | get
53 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => GET http://bot.whatismyipaddress.com >> .myip |  . => suggestions : ['. ', '.']
53 Mot inconnu : myip => GET http://bot.whatismyipaddress.com >> .myip | myip

54 Mot inconnu : echo => echo "" >> .myip | echo
54 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => echo "" >> .myip |  . => suggestions : ['. ', '.']
54 Mot inconnu : myip => echo "" >> .myip | myip

55 Mot inconnu : cat => cat .myip | msmtp johnny@whitehouse.gov</file> | cat
55 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => cat .myip | msmtp johnny@whitehouse.gov</file> |  . => suggestions : ['. ', '.']
55 Mot inconnu : myip => cat .myip | msmtp johnny@whitehouse.gov</file> | myip
55 Mot inconnu : msmtp => cat .myip | msmtp johnny@whitehouse.gov</file> | msmtp

69 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => === Contenu de .myip === |  . => suggestions : ['. ', '.']
69 Mot inconnu : myip => === Contenu de .myip === | myip

79 Mot inconnu : crontab => ==== Par la crontab ==== | crontab

81 Typographie : un ou trois points ? => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. | .. => suggestions : ['…', '.']
81 Mot inconnu : cron => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. | cron
81 Mot inconnu : unix => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. | unix
81 Mot inconnu : linux => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. | linux

83 Mot inconnu : crontab => === Modification de la crontab === | crontab

87 Mot inconnu : crontab => <note important>On évite systématiquement l'édition par la commande crontab -e, parce que la perte de 50 lignes de programmation sur un serveur de production, ça fait toujours chaud aux oreilles !</note> | crontab
87 Il manque un espace à côté du tiret. => <note important>On évite systématiquement l'édition par la commande crontab -e, parce que la perte de 50 lignes de programmation sur un serveur de production, ça fait toujours chaud aux oreilles !</note> |  - => suggestions : [' – ', ' — ']

95 Mot inconnu : crontab => === Injection des modifications de la crontab === | crontab

98 Mot inconnu : crontab => <file>crontab ~/cron</file> | crontab
98 Mot inconnu : cron => <file>crontab ~/cron</file> | cron

100 Mot inconnu : crontab => == Vérification de la crontab == | crontab

106 Mot inconnu : FIXME => FIXME (23 8,12,15,18 1-5 * *) donne bien les jours 1 à 5 dans la semaine alors que (23 8,12,15,18 * * 1-5) donne les jours 1 à 5 du mois | fixme

111 Mot inconnu : crontab => ==== Par autre chose que la crontab… ==== | crontab
