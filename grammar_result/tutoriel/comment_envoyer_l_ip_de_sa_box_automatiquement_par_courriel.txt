
32 Mot inconnu : msmtp [[7:12]] => == par msmtp == <|> msmtp

35 Mot inconnu : ssmtp [[7:12]] => == par ssmtp == <|> ssmtp

37 Mot inconnu : Subject [[24:31]] => <note tip>Sans préciser Subject://DeQuoiOnParle// le message n'aura pas de sujet. <|> subject
37 Mot inconnu : DeQuoiOnParle [[34:47]] => <note tip>Sans préciser Subject://DeQuoiOnParle// le message n'aura pas de sujet. <|> dequoionparle

38 Mot inconnu : myip [[58:62]] => Il faut donc prévoir de le rajouter en tête du fichier ~/.myip</note> <|> myip

49 Mot inconnu : echo [[0:4]] => echo Subject:MaBoxMeParle > .myip <|> echo
49 Mot inconnu : Subject [[5:12]] => echo Subject:MaBoxMeParle > .myip <|> subject
49 Il manque un espace. [[13:25]] => echo Subject:MaBoxMeParle > .myip <|> maboxmeparle => suggestions : [' MaBoxMeParle']
49 Mot inconnu : MaBoxMeParle [[13:25]] => echo Subject:MaBoxMeParle > .myip <|> maboxmeparle
49 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[27:29]] => echo Subject:MaBoxMeParle > .myip <|>  . => suggestions : ['. ', '.']
49 Mot inconnu : myip [[29:33]] => echo Subject:MaBoxMeParle > .myip <|> myip

50 Mot inconnu : GET [[0:3]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> get
50 Mot inconnu : grep [[30:34]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> grep
50 Guillemets typographiques ouvrants. [[35:36]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> " => suggestions : ['«\xa0', '“']
50 Mot inconnu : Your [[36:40]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> your
50 Mot inconnu : is [[44:46]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> is
50 Guillemets typographiques fermants. [[46:47]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> " => suggestions : ['\xa0»', '”']
50 Mot inconnu : awk [[49:52]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> awk
50 Mot inconnu : print [[55:60]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> print
50 Mot inconnu : sed [[66:69]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> sed
50 Guillemets typographiques ouvrants. [[70:71]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> ' => suggestions : ['“', '‘', '‹']
50 Mot inconnu : awk [[80:83]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> awk
50 Mot inconnu : print [[86:91]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> print
50 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[99:101]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|>  . => suggestions : ['. ', '.']
50 Mot inconnu : myip [[101:105]] => GET http://www.formyip.com/ | grep "Your IP is" |awk '{print $6}'|sed 's/</ /g'|awk '{print $1}' >> .myip <|> myip

51 Mot inconnu : echo [[0:4]] => echo "" >> .myip <|> echo
51 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[10:12]] => echo "" >> .myip <|>  . => suggestions : ['. ', '.']
51 Mot inconnu : myip [[12:16]] => echo "" >> .myip <|> myip

52 Mot inconnu : sleep [[0:5]] => sleep 1 <|> sleep

53 Mot inconnu : GET [[0:3]] => GET http://bot.whatismyipaddress.com >> .myip <|> get
53 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[39:41]] => GET http://bot.whatismyipaddress.com >> .myip <|>  . => suggestions : ['. ', '.']
53 Mot inconnu : myip [[41:45]] => GET http://bot.whatismyipaddress.com >> .myip <|> myip

54 Mot inconnu : echo [[0:4]] => echo "" >> .myip <|> echo
54 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[10:12]] => echo "" >> .myip <|>  . => suggestions : ['. ', '.']
54 Mot inconnu : myip [[12:16]] => echo "" >> .myip <|> myip
67 Typographie : points de suspension. Utilisez le caractère dédié. [[145:148]] =>   * Depuis votre client de messagerie, vérifiez que vous avez bien reçu le message attendu, soit 3 lignes avec l'adresse IP de la maison blanche ... si c'est là que votre box est branchée. <|> ... => suggestions : ['…']

69 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[14:16]] => === Contenu de .myip === <|>  . => suggestions : ['. ', '.']
69 Mot inconnu : myip [[16:20]] => === Contenu de .myip === <|> myip

79 Mot inconnu : crontab [[12:19]] => ==== Par la crontab ==== <|> crontab

81 Typographie : un ou trois points ? [[13:15]] => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. <|> .. => suggestions : ['…', '.']
81 Mot inconnu : cron [[16:20]] => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. <|> cron
81 Mot inconnu : unix [[41:45]] => Le système [[..\cron|crontab]] intégré à unix/linux permet une programmation simple de l'exécution de commandes et scripts. <|> unix

83 Mot inconnu : crontab [[23:30]] => === Modification de la crontab === <|> crontab
85 Mot inconnu : crontab [[10:17]] =>   * Si la crontab de l'utilisateur existe, on la redirige vers un fichier <|> crontab

87 Mot inconnu : crontab [[68:75]] => <note important>On évite systématiquement l'édition par la commande crontab -e, parce que la perte de 50 lignes de programmation sur un serveur de production, ça fait toujours chaud aux oreilles !</note> <|> crontab
87 Il manque un espace à côté du tiret. [[75:77]] => <note important>On évite systématiquement l'édition par la commande crontab -e, parce que la perte de 50 lignes de programmation sur un serveur de production, ça fait toujours chaud aux oreilles !</note> <|>  - => suggestions : [' – ', ' — ']

95 Mot inconnu : crontab [[38:45]] => === Injection des modifications de la crontab === <|> crontab
97 Mot inconnu : cron [[21:25]] =>   * Créer le fichier cron ne suffit pas, il faut encore l'injecter dans le système crontab : <|> cron
97 Mot inconnu : crontab [[83:90]] =>   * Créer le fichier cron ne suffit pas, il faut encore l'injecter dans le système crontab : <|> crontab

100 Mot inconnu : crontab [[22:29]] => == Vérification de la crontab == <|> crontab
109 Mot inconnu : cron [[41:45]] =>   * Pas de raison de laisser traîner son cron derrière soi, puisqu'on sait le recréer à volonté <|> cron

111 Mot inconnu : crontab [[28:35]] => ==== Par autre chose que la crontab… ==== <|> crontab
117 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[39:41]] =>   * Il est possible de créer un fichier .ini dans lequel on stocke l'ip connue, une comparaison avec l'ip courante décidera si il est nécessaire d'envoyer le mail ou pas en cas de changement. <|>  . => suggestions : ['. ', '.']
117 Mot inconnu : ini [[41:44]] =>   * Il est possible de créer un fichier .ini dans lequel on stocke l'ip connue, une comparaison avec l'ip courante décidera si il est nécessaire d'envoyer le mail ou pas en cas de changement. <|> ini
117 Il faut élider “si” et l’accoler au pronom. [[124:127]] =>   * Il est possible de créer un fichier .ini dans lequel on stocke l'ip connue, une comparaison avec l'ip courante décidera si il est nécessaire d'envoyer le mail ou pas en cas de changement. <|> si  => suggestions : ['s’']
