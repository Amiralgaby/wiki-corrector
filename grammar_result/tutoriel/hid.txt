
4 Mot inconnu : HID [[37:40]] => ====== Utilisation d'un périphérique HID ====== <|> hid

6 Mot inconnu : HID [[30:33]] => Les périphériques de la norme HID permettent d'envoyer des commandes au serveur X. <|> hid
7 Typographie : points de suspension. Utilisez le caractère dédié. [[94:97]] => Toutefois toutes les commandes reçues ne sont pas toujours exploitables directement sous linux... <|> ... => suggestions : ['…']

8 Guillemets typographiques ouvrants. [[49:50]] => C'est pourquoi il est intéressant de pouvoir les "remapper", c'est à dire les attribuer aux commandes linux (**inputdev**) de notre choix. <|> " => suggestions : ['«\xa0', '“']
8 Mot inconnu : remapper [[50:58]] => C'est pourquoi il est intéressant de pouvoir les "remapper", c'est à dire les attribuer aux commandes linux (**inputdev**) de notre choix. <|> remapper
8 Guillemets typographiques fermants. [[58:59]] => C'est pourquoi il est intéressant de pouvoir les "remapper", c'est à dire les attribuer aux commandes linux (**inputdev**) de notre choix. <|> " => suggestions : ['\xa0»', '”']
8 Il manque les traits d’union. [[61:73]] => C'est pourquoi il est intéressant de pouvoir les "remapper", c'est à dire les attribuer aux commandes linux (**inputdev**) de notre choix. <|> c'est à dire => suggestions : ['c’est-à-dire']
8 Mot inconnu : inputdev [[111:119]] => C'est pourquoi il est intéressant de pouvoir les "remapper", c'est à dire les attribuer aux commandes linux (**inputdev**) de notre choix. <|> inputdev

12 Mot inconnu : configuer [[33:42]] => En second lieu, on verra comment configuer **LIRC** pour exploiter ce matériel. <|> configuer

48 Mot inconnu : Blacklist [[5:14]] => ==== Blacklist de l'entrée du périphérique ==== <|> blacklist

53 Mot inconnu : rensigant [[27:36]] => Et y copier ces lignes, en rensigant MatchProduct en fonction de ce que vous avez obtenu ci-dessus :  <|> rensigant
53 Mot inconnu : MatchProduct [[37:49]] => Et y copier ces lignes, en rensigant MatchProduct en fonction de ce que vous avez obtenu ci-dessus :  <|> matchproduct
53 Espace(s) en fin de ligne à supprimer. [[100:101]] => Et y copier ces lignes, en rensigant MatchProduct en fonction de ce que vous avez obtenu ci-dessus :  <|>   => suggestions : ['']

63 Mot inconnu : HID_MAPPER [[6:16]] => ===== HID_MAPPER ===== <|> hid_mapper

70 Mot inconnu : hid_mapper [[18:28]] => L'installation de hid_mapper s'effectue par les commandes suivantes : <|> hid_mapper

83 Guillemets typographiques ouvrants. [[20:21]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> " => suggestions : ['«\xa0', '“']
83 Mot inconnu : lorque [[63:69]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> lorque
83 Mot inconnu : apuyons [[75:82]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> apuyons
83 Mot inconnu : rensignant [[139:149]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> rensignant
83 Mot inconnu : product [[178:185]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> product
83 Mot inconnu : Vendor [[224:230]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> vendor
83 Mot inconnu : Product [[239:246]] => Nous allons ensuite "écouter ce que raconte notre périphérique lorque nous apuyons sur chacune des touches. Lancer la commande suivante en rensignant les options manufacturer et product avec les ID obtenus précédemment (ici Vendor=0755 et Product=2626) : <|> product

92 Formatage des grands nombres. [[22:34]] => Chaque code tel que **038100000000** ou  **04003d0000000000** correspondent à une touche, et ici **010000000000000000** est sans importance puisqu'il apparaît pour chaque touche... <|> 038100000000 => suggestions : ['038\xa0100\xa0000\xa0000']
92 Espace(s) surnuméraire(s) à supprimer. [[39:41]] => Chaque code tel que **038100000000** ou  **04003d0000000000** correspondent à une touche, et ici **010000000000000000** est sans importance puisqu'il apparaît pour chaque touche... <|>    => suggestions : [' ']
92 Mot inconnu : d0000000000 [[48:59]] => Chaque code tel que **038100000000** ou  **04003d0000000000** correspondent à une touche, et ici **010000000000000000** est sans importance puisqu'il apparaît pour chaque touche... <|> d0000000000
92 Formatage des grands nombres. [[99:117]] => Chaque code tel que **038100000000** ou  **04003d0000000000** correspondent à une touche, et ici **010000000000000000** est sans importance puisqu'il apparaît pour chaque touche... <|> 010000000000000000 => suggestions : ['010\xa0000\xa0000\xa0000\xa0000\xa0000', '01\xa00000\xa00000\xa00000\xa00000']
92 Typographie : points de suspension. Utilisez le caractère dédié. [[177:180]] => Chaque code tel que **038100000000** ou  **04003d0000000000** correspondent à une touche, et ici **010000000000000000** est sans importance puisqu'il apparaît pour chaque touche... <|> ... => suggestions : ['…']

95 Accord de nombre erroné : « évènement » devrait être au pluriel. [[19:28]] => ===Assignation des évènement à des actions=== <|> évènement => suggestions : ['évènements']

97 Accord de nombre erroné avec « 2 » : « fichier » devrait être au pluriel. [[73:80]] => On relève alors les codes obtenus ci-dessus pour générer au choix 1 ou 2 fichier de configuration : remote.map et mouse.map <|> fichier => suggestions : ['fichiers']
97 Mot inconnu : remote [[100:106]] => On relève alors les codes obtenus ci-dessus pour générer au choix 1 ou 2 fichier de configuration : remote.map et mouse.map <|> remote
97 Mot inconnu : map [[107:110]] => On relève alors les codes obtenus ci-dessus pour générer au choix 1 ou 2 fichier de configuration : remote.map et mouse.map <|> map
97 Mot inconnu : mouse [[114:119]] => On relève alors les codes obtenus ci-dessus pour générer au choix 1 ou 2 fichier de configuration : remote.map et mouse.map <|> mouse
97 Mot inconnu : map [[120:123]] => On relève alors les codes obtenus ci-dessus pour générer au choix 1 ou 2 fichier de configuration : remote.map et mouse.map <|> map

98 Accord avec la forme verbale “sont” : “disponible” devrait être au pluriel. [[52:62]] => Les codes d'actions qui peuvent-être utilisées sont disponible dans le fichier /usr/include/linux/input.h. <|> disponible => suggestions : ['disponibles']

100 Mot inconnu : remote [[10:16]] => ==Fichier remote.map== <|> remote
100 Mot inconnu : map [[17:20]] => ==Fichier remote.map== <|> map

102 Mot inconnu : remote [[26:32]] => On constitue le fichier **remote.map** de la manière suivante, cet exemple correspondant à ma télécommande. <|> remote
102 Mot inconnu : map [[33:36]] => On constitue le fichier **remote.map** de la manière suivante, cet exemple correspondant à ma télécommande. <|> map

155 Mot inconnu : mouse [[10:15]] => ==Fichier mouse.map== <|> mouse
155 Mot inconnu : map [[16:19]] => ==Fichier mouse.map== <|> map

157 Espace(s) en fin de ligne à supprimer. [[195:196]] => Dans mon cas, ma télécommande a une fonction spéciale d'émulation du déplacement du curseur de la souris, et affiche différents codes en fonction du temps d'appui sur les flèches directionnelles.  <|>   => suggestions : ['']

158 Mot inconnu : mouse [[65:70]] => Celui sera configurable de la manière suivante dans le fichier **mouse.map**.  <|> mouse
158 Mot inconnu : map [[71:74]] => Celui sera configurable de la manière suivante dans le fichier **mouse.map**.  <|> map
158 Espace(s) en fin de ligne à supprimer. [[77:78]] => Celui sera configurable de la manière suivante dans le fichier **mouse.map**.  <|>   => suggestions : ['']

159 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. [[0:2]] => - REL_Y correspond à un déplacement sur l'axe vertical <|> -  => suggestions : ['—\xa0', '–\xa0']
159 Mot inconnu : REL_Y [[2:7]] => - REL_Y correspond à un déplacement sur l'axe vertical <|> rel_y

160 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. [[0:2]] => - REL_X sur l'axe horizontal <|> -  => suggestions : ['—\xa0', '–\xa0']
160 Mot inconnu : REL_X [[2:7]] => - REL_X sur l'axe horizontal <|> rel_x

161 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. [[0:2]] => - Le dernier chiffre de chaque ligne à la taille du déplacement en nombre de pixel. <|> -  => suggestions : ['—\xa0', '–\xa0']

180 Guillemets typographiques ouvrants. [[24:25]] => On peut alors lancer le "mappage" pour assigner les nouveaux codes aux évènements envoyés par notre périphérique. <|> " => suggestions : ['«\xa0', '“']
180 Guillemets typographiques fermants. [[32:33]] => On peut alors lancer le "mappage" pour assigner les nouveaux codes aux évènements envoyés par notre périphérique. <|> " => suggestions : ['\xa0»', '”']

184 Mot inconnu : hid_mapper [[16:26]] => Le démarrage de hid_mapper s'effectue de la manière suivante : <|> hid_mapper

189 Mot inconnu : udev [[34:38]] => On peut également créer une règle udev pour lancer hid_mapper à la détection du matériel. <|> udev
189 Mot inconnu : hid_mapper [[51:61]] => On peut également créer une règle udev pour lancer hid_mapper à la détection du matériel. <|> hid_mapper

195 Mot inconnu : idVendor [[36:44]] => contenant le code (penser à adapter idVendor et idProduct): <|> idvendor
195 Mot inconnu : idProduct [[48:57]] => contenant le code (penser à adapter idVendor et idProduct): <|> idproduct

200 Mot inconnu : hid_mapper [[2:12]] => **hid_mapper** se lancera alors au démarrage et permettra d'assigner des raccourcis clavier aux codes correspondant aux touches de la télécommande. <|> hid_mapper

203 Mot inconnu : HID [[21:24]] => ===== Utilisation du HID avec LIRC ===== <|> hid

206 Apostrophe incorrecte. [[44:47]] => Pour cela, on attribue un lien symbolique à l' input/eventx générée par hid_mapper en ajoutant la ligne suivante au fichier 10-HID-REMOTE.rules que l'on vient de créer : <|> l'  => suggestions : ['l’']
206 Guillemets typographiques fermants. [[45:46]] => Pour cela, on attribue un lien symbolique à l' input/eventx générée par hid_mapper en ajoutant la ligne suivante au fichier 10-HID-REMOTE.rules que l'on vient de créer : <|> ' => suggestions : ['”', '’', '›']
206 Mot inconnu : eventx [[53:59]] => Pour cela, on attribue un lien symbolique à l' input/eventx générée par hid_mapper en ajoutant la ligne suivante au fichier 10-HID-REMOTE.rules que l'on vient de créer : <|> eventx
206 Mot inconnu : hid_mapper [[72:82]] => Pour cela, on attribue un lien symbolique à l' input/eventx générée par hid_mapper en ajoutant la ligne suivante au fichier 10-HID-REMOTE.rules que l'on vient de créer : <|> hid_mapper
206 Mot inconnu : HID-REMOTE [[127:137]] => Pour cela, on attribue un lien symbolique à l' input/eventx générée par hid_mapper en ajoutant la ligne suivante au fichier 10-HID-REMOTE.rules que l'on vient de créer : <|> hid-remote
206 Mot inconnu : rules [[138:143]] => Pour cela, on attribue un lien symbolique à l' input/eventx générée par hid_mapper en ajoutant la ligne suivante au fichier 10-HID-REMOTE.rules que l'on vient de créer : <|> rules

212 Mot inconnu : devinput [[7:15]] => |codes devinput]] au fichier **/etc/lirc/lircd.conf**.  <|> devinput
212 Espace(s) en fin de ligne à supprimer. [[54:55]] => |codes devinput]] au fichier **/etc/lirc/lircd.conf**.  <|>   => suggestions : ['']

214 Mot inconnu : MiroPCTV [[72:80]] => Pour des raisons pédagogiques, admettons que vous avez une télécommande MiroPCTV connectée sur le port série ttyS0 (lirc_serial). <|> miropctv
214 Mot inconnu : ttyS0 [[109:114]] => Pour des raisons pédagogiques, admettons que vous avez une télécommande MiroPCTV connectée sur le port série ttyS0 (lirc_serial). <|> ttys0
214 Mot inconnu : lirc_serial [[116:127]] => Pour des raisons pédagogiques, admettons que vous avez une télécommande MiroPCTV connectée sur le port série ttyS0 (lirc_serial). <|> lirc_serial

219 Mot inconnu : lircd [[22:27]] => Lancer deux instances lircd, dont l'une est connectée à l'autre : <|> lircd

228 Mot inconnu : mofifier [[18:26]] => On doit pour cela mofifier les fichiers de configuration de LIRC pour intégrer le support de notre nouvelle télécommande : <|> mofifier

249 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. [[0:2]] => - Enfin, on modifie le sript de lancement de lirc pour qu'il démarre les 2 instances de lircd : <|> -  => suggestions : ['—\xa0', '–\xa0']
249 Mot inconnu : sript [[23:28]] => - Enfin, on modifie le sript de lancement de lirc pour qu'il démarre les 2 instances de lircd : <|> sript
249 Mot inconnu : lircd [[88:93]] => - Enfin, on modifie le sript de lancement de lirc pour qu'il démarre les 2 instances de lircd : <|> lircd

251 Mot inconnu : Editer [[0:6]] => Editer le fichier **/etc/init.d/lirc** et le modifier vers la ligne 160 : <|> editer

253 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. [[0:2]] => - Remplacer : <|> -  => suggestions : ['—\xa0', '–\xa0']

257 Espace(s) en fin de ligne à supprimer. [[3:4]] => par  <|>   => suggestions : ['']

263 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. [[0:2]] => - Ainsi que : <|> -  => suggestions : ['—\xa0', '–\xa0']

275 Mot inconnu : pricipale [[7:16]] => Source pricipale : http://forum.xbmc.org/showthread.php?tid=88560&page=17 <|> pricipale
