
6 Espace(s) surnuméraire(s) à supprimer. => En informatique, la **compilation** (d'un logiciel ou d'une bibliothèque) est une procédure par laquelle un code source (format compréhensible par un humain, type [[#ASCII]]) est transformé en code [[#binaire]], un langage compréhensible par votre ordinateur, dans le but d'être exécuté.  Un logiciel est compilé afin de pouvoir être lancé par l'utilisateur. |    => suggestions : [' ']

10 Espace(s) en fin de ligne à supprimer. => Cette documentation présente une méthode //généraliste// et //vulgarisée// pour compiler des programmes et des bibliothèques.   |    => suggestions : ['']
35 Mot inconnu : fakeroot => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. | fakeroot
35 Mot inconnu : checkinstall => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. | checkinstall
35 Mot inconnu : checkinstall => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. | checkinstall
35 Mettez des guillemets fermants plutôt qu’ouvrants. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. |  « => suggestions : ['\xa0»', '”']
35 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. |  . => suggestions : ['. ', '.']
35 Mot inconnu : deb => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. | deb
35 Espace(s) surnuméraire(s) à supprimer. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques. |    => suggestions : [' ']
46 Mot inconnu : README => Si le système APT récupère toutes les dépendances d'un logiciel, ce n'est pas le cas lorsque vous effectuez vous-même une compilation. Parcourez bien le site du projet et les pages de documentation afin de savoir quelles dépendances nécessite le logiciel (fréquemment, vous en trouverez aussi une liste dans le fichier « README » se trouvant dans l'archive contenant le code source). Beaucoup de paquets sont disponibles dans les dépôts APT pour les satisfaire. | readme

55 Mot inconnu : dev => Le plus important pour une bonne compilation, ce sont les bibliothèques de développement. Elles sont contenues dans des paquets qui finissent par "**-dev**". Pour connaître celles qui sont nécessaires, lisez bien les fichiers README ou INSTALL livrés habituellement avec le programme. | dev
55 Mot inconnu : README => Le plus important pour une bonne compilation, ce sont les bibliothèques de développement. Elles sont contenues dans des paquets qui finissent par "**-dev**". Pour connaître celles qui sont nécessaires, lisez bien les fichiers README ou INSTALL livrés habituellement avec le programme. | readme
55 Mot inconnu : INSTALL => Le plus important pour une bonne compilation, ce sont les bibliothèques de développement. Elles sont contenues dans des paquets qui finissent par "**-dev**". Pour connaître celles qui sont nécessaires, lisez bien les fichiers README ou INSTALL livrés habituellement avec le programme. | install
57 Mot inconnu : dev => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ». | dev
57 Mot inconnu : Synaptic => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ». | synaptic
57 Mot inconnu : libgtk2 => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ». | libgtk2
57 Mot inconnu : dev => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ». | dev

61 Accord de nombre erroné avec « les paquets » : « utile » devrait être au pluriel. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | utile => suggestions : ['utiles']
61 Mot inconnu : apt-cache => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | apt-cache
61 Mot inconnu : showsrc => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | showsrc
61 Mot inconnu : dépots => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | dépots
61 Guillemets typographiques ouvrants. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | " => suggestions : ['«\xa0', '“']
61 Mot inconnu : deb-src => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | deb-src
61 Guillemets typographiques fermants. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour). | " => suggestions : ['\xa0»', '”']

70 Mot inconnu : build-dep => Vous pouvez aussi utiliser directement build-dep : | build-dep

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get build-dep amsn |    => suggestions : ['']
72 Mot inconnu : sudo =>   sudo apt-get build-dep amsn | sudo
72 Mot inconnu : apt-get =>   sudo apt-get build-dep amsn | apt-get
72 Mot inconnu : build-dep =>   sudo apt-get build-dep amsn | build-dep
72 Mot inconnu : amsn =>   sudo apt-get build-dep amsn | amsn
85 Mot inconnu : Tab => <note tip>N'hésitez pas à utiliser la touche « Tab » de votre clavier pour compléter automatiquement le nom de commandes et de fichiers dans votre terminal. ;-)</note> | tab

88 Mot inconnu : CVS => ==== Depuis un dépôt CVS ou SVN ==== | cvs
88 Mot inconnu : SVN => ==== Depuis un dépôt CVS ou SVN ==== | svn

90 Mot inconnu : CVS => La procédure pour récupérer un code source depuis un dépôt CVS ou SVN varie d'une place à une autre.  Les instructions pour récupérer le code source sont indiquées, dans la plupart des cas, sur la page des téléchargements du site du logiciel concerné ou dans les pages pour développeurs. | cvs
90 Mot inconnu : SVN => La procédure pour récupérer un code source depuis un dépôt CVS ou SVN varie d'une place à une autre.  Les instructions pour récupérer le code source sont indiquées, dans la plupart des cas, sur la page des téléchargements du site du logiciel concerné ou dans les pages pour développeurs. | svn
90 Espace(s) surnuméraire(s) à supprimer. => La procédure pour récupérer un code source depuis un dépôt CVS ou SVN varie d'une place à une autre.  Les instructions pour récupérer le code source sont indiquées, dans la plupart des cas, sur la page des téléchargements du site du logiciel concerné ou dans les pages pour développeurs. |    => suggestions : [' ']

97 Mot inconnu : sudo => Pour compiler un programme sans utiliser sudo rajouter l'utilisateur au groupe src. | sudo
97 Mot inconnu : src => Pour compiler un programme sans utiliser sudo rajouter l'utilisateur au groupe src. | src

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On se rend dans le répertoire dans lequel se trouve le code source du logiciel ou de la bibliothèque à compiler en utilisant la commande [[tutoriel/console_commandes_de_base#cd|cd]]. |    => suggestions : ['']
113 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On se rend dans le répertoire dans lequel se trouve le code source du logiciel ou de la bibliothèque à compiler en utilisant la commande [[tutoriel/console_commandes_de_base#cd|cd]]. |  -  => suggestions : [' – ', ' — ', ' − ']
113 Mot inconnu : console_commandes_de_base =>   - On se rend dans le répertoire dans lequel se trouve le code source du logiciel ou de la bibliothèque à compiler en utilisant la commande [[tutoriel/console_commandes_de_base#cd|cd]]. | console_commandes_de_base

114 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On appelle l'utilitaire « configure » se trouvant dans ce répertoire. Celui-ci vérifie que toutes les dépendances du logiciel ou de la bibliothèque à compiler sont bien satisfaites. Si certaines ne sont pas satisfaites, il s'arrête en indiquant ce qui est manquant pour continuer la procédure. Voir juste après comment corriger cela. |    => suggestions : ['']
114 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On appelle l'utilitaire « configure » se trouvant dans ce répertoire. Celui-ci vérifie que toutes les dépendances du logiciel ou de la bibliothèque à compiler sont bien satisfaites. Si certaines ne sont pas satisfaites, il s'arrête en indiquant ce qui est manquant pour continuer la procédure. Voir juste après comment corriger cela. |  -  => suggestions : [' – ', ' — ', ' − ']

115 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue. |    => suggestions : ['']
115 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue. |  -  => suggestions : [' – ', ' — ', ' − ']
115 Mot inconnu : make =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue. | make
115 Espace(s) surnuméraire(s) à supprimer. =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue. |    => suggestions : [' ']

116 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Finalement, le code binaire étant généré, il ne reste qu'à installer le logiciel ou la bibliothèque. \\ |    => suggestions : ['']
116 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Finalement, le code binaire étant généré, il ne reste qu'à installer le logiciel ou la bibliothèque. \\ |  -  => suggestions : [' – ', ' — ', ' − ']

117 Espace(s) en fin de ligne à supprimer. => On appelle le programme  |   => suggestions : ['']

134 Mot inconnu : apt-get => Tout paquet Debian/Ubuntu qui se respecte liste toutes les dépendances qui lui sont nécessaires tant à l'exécution comme à la compilation. La manière la plus simple de télécharger les dépendances est d'utiliser apt-get avec l'option build-dep, ainsi la commande : | apt-get
134 Mot inconnu : build-dep => Tout paquet Debian/Ubuntu qui se respecte liste toutes les dépendances qui lui sont nécessaires tant à l'exécution comme à la compilation. La manière la plus simple de télécharger les dépendances est d'utiliser apt-get avec l'option build-dep, ainsi la commande : | build-dep
142 Incohérence avec “de” : “configure” est une forme verbale conjuguée. => === Les erreurs de « configure » === | configure => suggestions : ['configurés', 'configuré', 'configurée', 'configurées']

144 Espace(s) en fin de ligne à supprimer. => Si les dépendances ne sont pas installées, l'étape de configuration  |   => suggestions : ['']

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  n'ira pas jusqu'au bout et vous donnera un message d'erreur indiquant ce qui manque. |   => suggestions : ['']
150 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => Prenons l'exemple de la dépendance manquante « gtk+-2.0 ». | -2 => suggestions : ['−2', '– 2', '— 2']

153 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    No package 'gtk+-2.0' found |     => suggestions : ['']
153 Guillemets typographiques ouvrants. =>    No package 'gtk+-2.0' found | ' => suggestions : ['“', '‘', '‹']
153 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>    No package 'gtk+-2.0' found | -2 => suggestions : ['−2', '– 2', '— 2']
153 Guillemets typographiques fermants. =>    No package 'gtk+-2.0' found | ' => suggestions : ['”', '’', '›']
153 Mot inconnu : found =>    No package 'gtk+-2.0' found | found
155 Mot inconnu : dev => On sait que l'on cherche un paquet « -dev ». Donc on va utiliser la commande : | dev

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    apt-cache search --names-only gtk dev |     => suggestions : ['']
157 Mot inconnu : apt-cache =>    apt-cache search --names-only gtk dev | apt-cache
157 Mot inconnu : search =>    apt-cache search --names-only gtk dev | search
157 Mot inconnu : names-only =>    apt-cache search --names-only gtk dev | names-only
157 Mot inconnu : dev =>    apt-cache search --names-only gtk dev | dev
159 Mot inconnu : names-only => L'option « --names-only » permet de faire abstraction des descriptions des paquets pour la recherche. | names-only

164 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    apt-cache search --names-only libgtk dev |     => suggestions : ['']
164 Mot inconnu : apt-cache =>    apt-cache search --names-only libgtk dev | apt-cache
164 Mot inconnu : search =>    apt-cache search --names-only libgtk dev | search
164 Mot inconnu : names-only =>    apt-cache search --names-only libgtk dev | names-only
164 Mot inconnu : libgtk =>    apt-cache search --names-only libgtk dev | libgtk
164 Mot inconnu : dev =>    apt-cache search --names-only libgtk dev | dev

168 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    apt-cache search --names-only libgtk2 dev |     => suggestions : ['']
168 Mot inconnu : apt-cache =>    apt-cache search --names-only libgtk2 dev | apt-cache
168 Mot inconnu : search =>    apt-cache search --names-only libgtk2 dev | search
168 Mot inconnu : names-only =>    apt-cache search --names-only libgtk2 dev | names-only
168 Mot inconnu : libgtk2 =>    apt-cache search --names-only libgtk2 dev | libgtk2
168 Mot inconnu : dev =>    apt-cache search --names-only libgtk2 dev | dev

172 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   libgtk2.0-dev - Development files for the GTK+ library |    => suggestions : ['']
172 Mot inconnu : libgtk2 =>   libgtk2.0-dev - Development files for the GTK+ library | libgtk2
172 Mot inconnu : dev =>   libgtk2.0-dev - Development files for the GTK+ library | dev
172 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   libgtk2.0-dev - Development files for the GTK+ library |  -  => suggestions : [' – ', ' — ', ' − ']
172 Mot inconnu : Development =>   libgtk2.0-dev - Development files for the GTK+ library | development
172 Mot inconnu : the =>   libgtk2.0-dev - Development files for the GTK+ library | the
172 Mot inconnu : library =>   libgtk2.0-dev - Development files for the GTK+ library | library
174 Mot inconnu : libgtk2 => Le paquet manquant était : **libgtk2.0-dev**. | libgtk2
174 Mot inconnu : dev => Le paquet manquant était : **libgtk2.0-dev**. | dev
185 Mot inconnu : library => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent). | library
185 Typographie : points de suspension. Utilisez le caractère dédié. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent). | ... => suggestions : ['…']
185 Mot inconnu : libpng => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent). | libpng
185 Mettez des guillemets fermants plutôt qu’ouvrants. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent). |  « => suggestions : ['\xa0»', '”']
185 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent). |  . => suggestions : ['. ', '.']
188 Mot inconnu : libfltk1 => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ».  | libfltk1
188 Mettez des guillemets fermants plutôt qu’ouvrants. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ».  |  « => suggestions : ['\xa0»', '”']
188 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ».  |  . => suggestions : ['. ', '.']
188 Mot inconnu : so => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ».  | so
188 Le verbe ne devrait pas être un participe passé. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ».  | installés => suggestions : []
188 Espace(s) en fin de ligne à supprimer. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ».  |   => suggestions : ['']
189 Mot inconnu : libfltk1 => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]). | libfltk1
189 Mot inconnu : dev => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]). | dev
189 Mettez des guillemets fermants plutôt qu’ouvrants. => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]). |  « => suggestions : ['\xa0»', '”']
189 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[https://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]). |  . => suggestions : ['. ', '.']
191 Mot inconnu : dev => Pour chaque bibliothèque existante dans Ubuntu, il existe un paquet dont le nom finit par « -dev », qu'il est nécessaire d'installer pour compiler les logiciels qui dépendent de cette bibliothèque. | dev
195 Mot inconnu : autotools => ==== Les « autotools » ==== | autotools

197 Mot inconnu : autotools => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ». | autotools
197 Mettez des guillemets fermants plutôt qu’ouvrants. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ». |  « => suggestions : ['\xa0»', '”']
201 Mot inconnu : Makefile => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur. | makefile
201 Mot inconnu : Makefile => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur. | makefile
201 Il manque un espace. => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur. | in => suggestions : [' in']

202 Mot inconnu : autotools => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. | autotools
202 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. |  -  => suggestions : [' – ', ' — ', ' − ']
202 Guillemets typographiques ouvrants. => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. | " => suggestions : ['«\xa0', '“']
202 Guillemets typographiques fermants. => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. | " => suggestions : ['\xa0»', '”']
202 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. |  -  => suggestions : [' – ', ' — ', ' − ']
202 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. |  -  => suggestions : [' – ', ' — ', ' − ']
202 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples. |  -  => suggestions : [' – ', ' — ', ' − ']

208 Mot inconnu : make => === make === | make
210 Mot inconnu : make => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile : | make
210 Mot inconnu : install => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile : | install
210 Mot inconnu : uninstall => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile : | uninstall
210 Mot inconnu : distclean => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile : | distclean
210 Mot inconnu : Makefile => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile : | makefile

211 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make install » permet d'installer le programme ; |    => suggestions : ['']
211 Mot inconnu : make =>   * « make install » permet d'installer le programme ; | make
211 Mot inconnu : install =>   * « make install » permet d'installer le programme ; | install

212 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make uninstall » permet de tout désinstaller ; |    => suggestions : ['']
212 Mot inconnu : make =>   * « make uninstall » permet de tout désinstaller ; | make
212 Mot inconnu : uninstall =>   * « make uninstall » permet de tout désinstaller ; | uninstall

213 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ; |    => suggestions : ['']
213 Mot inconnu : make =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ; | make

214 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make distclean » supprime aussi ce que « configure » a généré. |    => suggestions : ['']
214 Mot inconnu : make =>   * « make distclean » supprime aussi ce que « configure » a généré. | make
214 Mot inconnu : distclean =>   * « make distclean » supprime aussi ce que « configure » a généré. | distclean

216 Mot inconnu : apt-file => === apt-file === | apt-file

221 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get install apt-file |    => suggestions : ['']
221 Mot inconnu : sudo =>   sudo apt-get install apt-file | sudo
221 Mot inconnu : apt-get =>   sudo apt-get install apt-file | apt-get
221 Mot inconnu : install =>   sudo apt-get install apt-file | install
221 Mot inconnu : apt-file =>   sudo apt-get install apt-file | apt-file

223 Mot inconnu : apt-get => On l'initialise ensuite comme pour apt-get en tapant : | apt-get

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-file update |    => suggestions : ['']
225 Mot inconnu : sudo =>   sudo apt-file update | sudo
225 Mot inconnu : apt-file =>   sudo apt-file update | apt-file
225 Mot inconnu : update =>   sudo apt-file update | update
227 Mot inconnu : libgthread => Dans notre exemple de tout à l'heure, on voulait trouver dans quel paquet se trouve la bibliothèque « libgthread », on tape alors : | libgthread

229 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   apt-file search libgthread |    => suggestions : ['']
229 Mot inconnu : apt-file =>   apt-file search libgthread | apt-file
229 Mot inconnu : search =>   apt-file search libgthread | search
229 Mot inconnu : libgthread =>   apt-file search libgthread | libgthread
231 Mot inconnu : libglib2 => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ». | libglib2
231 Mot inconnu : dev => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ». | dev
231 Mot inconnu : libglib1 => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ». | libglib1
231 Mot inconnu : dev => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ». | dev

235 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   apt-file search libgthread-2.0 |    => suggestions : ['']
235 Mot inconnu : apt-file =>   apt-file search libgthread-2.0 | apt-file
235 Mot inconnu : search =>   apt-file search libgthread-2.0 | search
235 Mot inconnu : libgthread-2 =>   apt-file search libgthread-2.0 | libgthread-2

237 Accord de genre erroné : « sources » est féminin. => Il se base sur le « sources.list ».  | le => suggestions : ['les', 'la']
237 Accord de genre erroné : « le » est un déterminant masculin. => Il se base sur le « sources.list ».  | sources => suggestions : ['sourcé']
237 Mot inconnu : list => Il se base sur le « sources.list ».  | list
237 Espace(s) en fin de ligne à supprimer. => Il se base sur le « sources.list ».  |   => suggestions : ['']

238 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. |     => suggestions : ['']
238 Mot inconnu : The =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. | the
238 Mot inconnu : fetched =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. | fetched
238 Mot inconnu : from =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. | from
238 Mot inconnu : the =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. | the
238 Écriture invariable. Utilisez un point médian. =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. | location(s) => suggestions : ['location·s']
238 Mot inconnu : specified =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list. | specified

242 Espace(s) en fin de ligne à supprimer. => Si  |   => suggestions : ['']

250 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Une [[tutoriel:creer_un_paquet#foire_aux_questions|foire aux questions]] est disponible. |    => suggestions : ['']
250 Il manque un espace. =>   * Une [[tutoriel:creer_un_paquet#foire_aux_questions|foire aux questions]] est disponible. | creer_un_paquet => suggestions : [' creer_un_paquet']
250 Mot inconnu : creer_un_paquet =>   * Une [[tutoriel:creer_un_paquet#foire_aux_questions|foire aux questions]] est disponible. | creer_un_paquet

251 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Discussion [[https://forum.ubuntu-fr.org/viewtopic.php?id=987|Désinstaller un programme compilé]] sur le forum ubuntu-fr |    => suggestions : ['']
251 Mot inconnu : ubuntu-fr =>   * Discussion [[https://forum.ubuntu-fr.org/viewtopic.php?id=987|Désinstaller un programme compilé]] sur le forum ubuntu-fr | ubuntu-fr
