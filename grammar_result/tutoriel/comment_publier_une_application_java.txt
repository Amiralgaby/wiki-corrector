
8 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A noter que cette méthode peut également être utilisée pour publier une application réalisée dans un autre langage et dont l'installation ne requiert pas une re-compilation des sources. | a => suggestions : ['À']

12 Mot inconnu : launchpad => ===== Compte launchpad et ppa ===== | launchpad
14 Mot inconnu : launchpad => Il est indispensable de créer un ppa sur launchpad.net. Cette [[http://developer.ubuntu.com/publish/apps/other-forms-of-submitting-apps/ppa/|page]] vous y aidera. | launchpad
15 Espace(s) en fin de ligne à supprimer. => Pour ce faire il faut :  |   => suggestions : ['']

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Se créer un compte sur launchpad.net |    => suggestions : ['']
16 Mot inconnu : launchpad =>   * Se créer un compte sur launchpad.net | launchpad

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Se créer une clef gpg (à l'aide de SeaHorse ou Kgpg) |    => suggestions : ['']
17 Mot inconnu : gpg =>   * Se créer une clef gpg (à l'aide de SeaHorse ou Kgpg) | gpg
17 Mot inconnu : SeaHorse =>   * Se créer une clef gpg (à l'aide de SeaHorse ou Kgpg) | seahorse
17 Mot inconnu : Kgpg =>   * Se créer une clef gpg (à l'aide de SeaHorse ou Kgpg) | kgpg

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Créer le ppa et le configurer. |    => suggestions : ['']

20 Mot inconnu : launchpad => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | launchpad
20 Guillemets typographiques ouvrants. => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | " => suggestions : ['«\xa0', '“']
20 Mot inconnu : monlaunchpad => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | monlaunchpad
20 Guillemets typographiques fermants. => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | " => suggestions : ['\xa0»', '”']
20 Guillemets typographiques ouvrants. => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | " => suggestions : ['«\xa0', '“']
20 Mot inconnu : monppa => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | monppa
20 Guillemets typographiques fermants. => Pour la suite nous considérons que le launchpad créé est "monlaunchpad" et le ppa "monppa". | " => suggestions : ['\xa0»', '”']

21 Mot inconnu : email => L'email associé est moi@email.com. | email

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Créer un répertoire local ou seront construits les builds. Par exemple /home/user/ppa. Appelons le $PPA_HOME. |    => suggestions : ['']
24 S’il s’agit d’un impératif, mettez un trait d’union. =>   * Créer un répertoire local ou seront construits les builds. Par exemple /home/user/ppa. Appelons le $PPA_HOME. | appelons le => suggestions : ['Appelons-le']
24 Mot inconnu : PPA_HOME =>   * Créer un répertoire local ou seront construits les builds. Par exemple /home/user/ppa. Appelons le $PPA_HOME. | ppa_home

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Dans $PPA_HOME, créer un sous-répertoire avec le nom de l'application (monappli) |    => suggestions : ['']
25 Mot inconnu : PPA_HOME =>   * Dans $PPA_HOME, créer un sous-répertoire avec le nom de l'application (monappli) | ppa_home
25 Mot inconnu : monappli =>   * Dans $PPA_HOME, créer un sous-répertoire avec le nom de l'application (monappli) | monappli

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Puis dans ce dernier répertoire un sous-répertoire avec la version de l'application. A noter que le nom de ce sous-répertoire est formaté : nomappli-version. Ici par exemple monappli-0.1.0. |    => suggestions : ['']
26 S’il s’agit de la préposition « à », il faut accentuer la majuscule. =>   * Puis dans ce dernier répertoire un sous-répertoire avec la version de l'application. A noter que le nom de ce sous-répertoire est formaté : nomappli-version. Ici par exemple monappli-0.1.0. | a => suggestions : ['À']
26 Mot inconnu : nomappli-version =>   * Puis dans ce dernier répertoire un sous-répertoire avec la version de l'application. A noter que le nom de ce sous-répertoire est formaté : nomappli-version. Ici par exemple monappli-0.1.0. | nomappli-version
26 Mot inconnu : monappli-0 =>   * Puis dans ce dernier répertoire un sous-répertoire avec la version de l'application. A noter que le nom de ce sous-répertoire est formaté : nomappli-version. Ici par exemple monappli-0.1.0. | monappli-0

27 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A l'arrivée on a : | a => suggestions : ['À']

29 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    /home/user/ppa |     => suggestions : ['']

30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>              |__ monappli |               => suggestions : ['']
30 Mot inconnu : __ =>              |__ monappli | __
30 Mot inconnu : monappli =>              |__ monappli | monappli

31 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>              |     |___monappli-0.1.0 |               => suggestions : ['']
31 Mot inconnu : ___monappli-0 =>              |     |___monappli-0.1.0 | ___monappli-0

32 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>              |     |___monappli-0.2.0 |               => suggestions : ['']
32 Mot inconnu : ___monappli-0 =>              |     |___monappli-0.2.0 | ___monappli-0

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>              |__ monapplibis |               => suggestions : ['']
33 Mot inconnu : __ =>              |__ monapplibis | __
33 Mot inconnu : monapplibis =>              |__ monapplibis | monapplibis

36 Mot inconnu : monappli => Pour la suite nous allons essayer de packager monappli. | monappli

38 Mot inconnu : dh_make => ===== dh_make : initialisation des fichiers debian ===== | dh_make
38 Mot inconnu : debian => ===== dh_make : initialisation des fichiers debian ===== | debian

40 Mot inconnu : PPA_HOME => Dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 :  | ppa_home
40 Mot inconnu : monappli => Dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 :  | monappli
40 Mot inconnu : monappli-0 => Dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 :  | monappli-0
40 Espace(s) en fin de ligne à supprimer. => Dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 :  |   => suggestions : ['']

44 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A noter que le paramètre "copyright" indique la licence sous laquelle vous souhaitez publier votre oeuvre (ici apache). Pour plus de détails : [[http://developer.ubuntu.com/publish/apps/choosing-a-license/|ici]] | a => suggestions : ['À']
44 Guillemets typographiques ouvrants. => A noter que le paramètre "copyright" indique la licence sous laquelle vous souhaitez publier votre oeuvre (ici apache). Pour plus de détails : [[http://developer.ubuntu.com/publish/apps/choosing-a-license/|ici]] | " => suggestions : ['«\xa0', '“']
44 Guillemets typographiques fermants. => A noter que le paramètre "copyright" indique la licence sous laquelle vous souhaitez publier votre oeuvre (ici apache). Pour plus de détails : [[http://developer.ubuntu.com/publish/apps/choosing-a-license/|ici]] | " => suggestions : ['\xa0»', '”']
44 Mot inconnu : oeuvre => A noter que le paramètre "copyright" indique la licence sous laquelle vous souhaitez publier votre oeuvre (ici apache). Pour plus de détails : [[http://developer.ubuntu.com/publish/apps/choosing-a-license/|ici]] | oeuvre

45 Mot inconnu : email => Il est également important que l'email soit le même que celui avec lequel vous avez la clef GPG. | email
45 Mot inconnu : GPG => Il est également important que l'email soit le même que celui avec lequel vous avez la clef GPG. | gpg

46 Mot inconnu : debian => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  | debian
46 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  |  . => suggestions : ['. ', '.']
46 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  |  . => suggestions : ['. ', '.']
46 Mot inconnu : PPA_HOME => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  | ppa_home
46 Mot inconnu : monappli => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  | monappli
46 Mot inconnu : monappli-0 => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  | monappli-0
46 Espace(s) en fin de ligne à supprimer. => Ceci va créer un sous-répertoire debian contenant différents fichiers. Les fichiers avec les extensions .ex et .EX sont sans intérêts. Donc sous $PPA_HOME/monappli/monappli-0.1.0 :  |   => suggestions : ['']

51 Mot inconnu : PPA_HOME => Voyons maintenant les fichiers importants sous $PPA_HOME/monappli/monappli-0.1.0/debian. | ppa_home
51 Mot inconnu : monappli => Voyons maintenant les fichiers importants sous $PPA_HOME/monappli/monappli-0.1.0/debian. | monappli
51 Mot inconnu : monappli-0 => Voyons maintenant les fichiers importants sous $PPA_HOME/monappli/monappli-0.1.0/debian. | monappli-0
51 Mot inconnu : debian => Voyons maintenant les fichiers importants sous $PPA_HOME/monappli/monappli-0.1.0/debian. | debian

52 Mot inconnu : changelog => ==== Fichier changelog ==== | changelog
53 Espace(s) en fin de ligne à supprimer. => Ce fichier contient les informations décrivant les changements opérés depuis la dernière version. Vous devez avoir cela :  |   => suggestions : ['']

61 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A modifier pour obtenir quelque chose de plus pertinent :  | a => suggestions : ['À']
61 Espace(s) en fin de ligne à supprimer. => A modifier pour obtenir quelque chose de plus pertinent :  |   => suggestions : ['']

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Remplacer "unstable" par une version d'ubuntu ("trusty" par exemple pour la 14.04). |    => suggestions : ['']
62 Guillemets typographiques ouvrants. =>   * Remplacer "unstable" par une version d'ubuntu ("trusty" par exemple pour la 14.04). | " => suggestions : ['«\xa0', '“']
62 Mot inconnu : unstable =>   * Remplacer "unstable" par une version d'ubuntu ("trusty" par exemple pour la 14.04). | unstable
62 Guillemets typographiques fermants. =>   * Remplacer "unstable" par une version d'ubuntu ("trusty" par exemple pour la 14.04). | " => suggestions : ['\xa0»', '”']
62 Guillemets typographiques ouvrants. =>   * Remplacer "unstable" par une version d'ubuntu ("trusty" par exemple pour la 14.04). | " => suggestions : ['«\xa0', '“']
62 Guillemets typographiques fermants. =>   * Remplacer "unstable" par une version d'ubuntu ("trusty" par exemple pour la 14.04). | " => suggestions : ['\xa0»', '”']

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Compléter les éléments de modification. |    => suggestions : ['']

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Changer éventuellement la date en conservant le formalisme. |    => suggestions : ['']
65 Espace(s) en fin de ligne à supprimer. => Finalement :  |   => suggestions : ['']

75 Mot inconnu : control => ==== Fichier control ==== | control
76 Espace(s) en fin de ligne à supprimer. => Ce fichier est un descriptif de l'application et ressemble à cela :  |   => suggestions : ['']

95 Guillemets typographiques ouvrants. => Il convient de changer la section. Typiquement on peut mettre "utils". Plus de détails [[https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections|ici]]. | " => suggestions : ['«\xa0', '“']
95 Mot inconnu : utils => Il convient de changer la section. Typiquement on peut mettre "utils". Plus de détails [[https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections|ici]]. | utils
95 Guillemets typographiques fermants. => Il convient de changer la section. Typiquement on peut mettre "utils". Plus de détails [[https://www.debian.org/doc/debian-policy/ch-archive.html#s-subsections|ici]]. | " => suggestions : ['\xa0»', '”']

96 Guillemets typographiques ouvrants. => Le plus important est la zone "depends" qui décrit les dépendances d'autres paquets. Pour une application java, manifestement on doit dépendre du paquet java.  | " => suggestions : ['«\xa0', '“']
96 Mot inconnu : depends => Le plus important est la zone "depends" qui décrit les dépendances d'autres paquets. Pour une application java, manifestement on doit dépendre du paquet java.  | depends
96 Guillemets typographiques fermants. => Le plus important est la zone "depends" qui décrit les dépendances d'autres paquets. Pour une application java, manifestement on doit dépendre du paquet java.  | " => suggestions : ['\xa0»', '”']
96 Espace(s) en fin de ligne à supprimer. => Le plus important est la zone "depends" qui décrit les dépendances d'autres paquets. Pour une application java, manifestement on doit dépendre du paquet java.  |   => suggestions : ['']

117 Mot inconnu : install => ==== Fichier install ==== | install

118 Mot inconnu : apt-get => Ce fichier décrit la destination des différents fichiers composant le paquet lors de l'installation par apt-get install. S'il n'a pas été créé par dh_make il faut le créer. | apt-get
118 Mot inconnu : install => Ce fichier décrit la destination des différents fichiers composant le paquet lors de l'installation par apt-get install. S'il n'a pas été créé par dh_make il faut le créer. | install
118 Mot inconnu : dh_make => Ce fichier décrit la destination des différents fichiers composant le paquet lors de l'installation par apt-get install. S'il n'a pas été créé par dh_make il faut le créer. | dh_make

119 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A l'installation le shell lanceur devra se trouver dans /usr/bin, les autres élements nécessaires à l'exécution dans /usr/lib/monappli. | a => suggestions : ['À']
119 Mot inconnu : élements => A l'installation le shell lanceur devra se trouver dans /usr/bin, les autres élements nécessaires à l'exécution dans /usr/lib/monappli. | élements

120 Mot inconnu : monappli-0 => Typiquement pour une application java on va trouver un jar (monappli-0.1.0.jar) contenant le bytecode, un shell (monappli) pour lancer le programme, éventuellement des ressources comme des images (monappli.png). | monappli-0
120 Mot inconnu : bytecode => Typiquement pour une application java on va trouver un jar (monappli-0.1.0.jar) contenant le bytecode, un shell (monappli) pour lancer le programme, éventuellement des ressources comme des images (monappli.png). | bytecode
120 Mot inconnu : monappli => Typiquement pour une application java on va trouver un jar (monappli-0.1.0.jar) contenant le bytecode, un shell (monappli) pour lancer le programme, éventuellement des ressources comme des images (monappli.png). | monappli
120 Mot inconnu : monappli => Typiquement pour une application java on va trouver un jar (monappli-0.1.0.jar) contenant le bytecode, un shell (monappli) pour lancer le programme, éventuellement des ressources comme des images (monappli.png). | monappli

122 Mot inconnu : Egalement => Egalement à l'installation on voudra créer un raccourci (monappli.desktop) dans le menu et y associer une icône (monappli_icon.png). | egalement
122 Mot inconnu : monappli => Egalement à l'installation on voudra créer un raccourci (monappli.desktop) dans le menu et y associer une icône (monappli_icon.png). | monappli
122 Mot inconnu : desktop => Egalement à l'installation on voudra créer un raccourci (monappli.desktop) dans le menu et y associer une icône (monappli_icon.png). | desktop
122 Mot inconnu : monappli_icon => Egalement à l'installation on voudra créer un raccourci (monappli.desktop) dans le menu et y associer une icône (monappli_icon.png). | monappli_icon

131 Mot inconnu : monappli => Ci-dessous un exemple de fichier monappli.desktop  | monappli
131 Mot inconnu : desktop => Ci-dessous un exemple de fichier monappli.desktop  | desktop
131 Espace(s) en fin de ligne à supprimer. => Ci-dessous un exemple de fichier monappli.desktop  |   => suggestions : ['']

146 Mot inconnu : PPA_HOME => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | ppa_home
146 Mot inconnu : monappli => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | monappli
146 Mot inconnu : monappli-0 => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | monappli-0
146 Une de ces ponctuations est superflue. => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | , . => suggestions : [',', '.']
146 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). |  . => suggestions : ['. ', '.']
146 Mot inconnu : desktop => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | desktop
146 Une de ces ponctuations est superflue. => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | , . => suggestions : [',', '.']
146 Typographie : points de suspension. Utilisez le caractère dédié. => Il reste à copier dans le répertoire $PPA_HOME/monappli/monappli-0.1.0 tous les fichiers nécessaires au fonctionnement de l'application (jar, shell, ressources, icône, .desktop, ...). | ... => suggestions : ['…']

147 Mot inconnu : src => Vous pouvez également prévoir un répertoire src pour le source. | src
147 Accord de genre erroné : « source » est féminin. => Vous pouvez également prévoir un répertoire src pour le source. | le => suggestions : ['la']
147 Accord de genre erroné : « le » est un déterminant masculin. => Vous pouvez également prévoir un répertoire src pour le source. | source => suggestions : ['sourcé']

149 Mot inconnu : packagé => L'ensemble est désormais prêt à être packagé. | packagé

152 Mot inconnu : debuild => ===== debuild : construction du package ===== | debuild

153 Mot inconnu : PPA_HOME => Sous $PPA_HOME/monappli/monappli-0.1.0 :  | ppa_home
153 Mot inconnu : monappli => Sous $PPA_HOME/monappli/monappli-0.1.0 :  | monappli
153 Mot inconnu : monappli-0 => Sous $PPA_HOME/monappli/monappli-0.1.0 :  | monappli-0
153 Espace(s) en fin de ligne à supprimer. => Sous $PPA_HOME/monappli/monappli-0.1.0 :  |   => suggestions : ['']

157 Mot inconnu : PPA_HOME => L'exécution de cette commande crée un ensemble de fichier sous $PPA_HOME/monappli :  | ppa_home
157 Mot inconnu : monappli => L'exécution de cette commande crée un ensemble de fichier sous $PPA_HOME/monappli :  | monappli
157 Espace(s) en fin de ligne à supprimer. => L'exécution de cette commande crée un ensemble de fichier sous $PPA_HOME/monappli :  |   => suggestions : ['']

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * monappli_0.1.0.dsc : descriptif technique du paquet  |    => suggestions : ['']
158 Mot inconnu : monappli_0 =>   * monappli_0.1.0.dsc : descriptif technique du paquet  | monappli_0
158 Mot inconnu : dsc =>   * monappli_0.1.0.dsc : descriptif technique du paquet  | dsc
158 Espace(s) en fin de ligne à supprimer. =>   * monappli_0.1.0.dsc : descriptif technique du paquet  |   => suggestions : ['']

159 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * monappli_0.1.0_source.build : journal d'exécution du build |    => suggestions : ['']
159 Mot inconnu : monappli_0 =>   * monappli_0.1.0_source.build : journal d'exécution du build | monappli_0

160 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * monappli_0.1.0_source.changes : autre descriptif technique du paquet |    => suggestions : ['']
160 Mot inconnu : monappli_0 =>   * monappli_0.1.0_source.changes : autre descriptif technique du paquet | monappli_0

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * monappli_0.1.0.tar.gz : le package proprement dit |    => suggestions : ['']
161 Mot inconnu : monappli_0 =>   * monappli_0.1.0.tar.gz : le package proprement dit | monappli_0
161 Mot inconnu : tar =>   * monappli_0.1.0.tar.gz : le package proprement dit | tar
161 Mot inconnu : gz =>   * monappli_0.1.0.tar.gz : le package proprement dit | gz

163 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A noter que lors de l'exécution le programme vous demandera la passphrase que vous avez utilisé pour créer la clef GPG. | a => suggestions : ['À']
163 Mot inconnu : passphrase => A noter que lors de l'exécution le programme vous demandera la passphrase que vous avez utilisé pour créer la clef GPG. | passphrase
163 Mot inconnu : GPG => A noter que lors de l'exécution le programme vous demandera la passphrase que vous avez utilisé pour créer la clef GPG. | gpg

165 Mot inconnu : dput => ===== dput : upload sur launchpad ===== | dput
165 Mot inconnu : upload => ===== dput : upload sur launchpad ===== | upload
165 Mot inconnu : launchpad => ===== dput : upload sur launchpad ===== | launchpad

166 Mot inconnu : uploader => Il ne reste plus qu'à uploader le package sur launchpad.net. Sous $PPA_HOME/monappli/monappli-0.1.0:  | uploader
166 Mot inconnu : launchpad => Il ne reste plus qu'à uploader le package sur launchpad.net. Sous $PPA_HOME/monappli/monappli-0.1.0:  | launchpad
166 Mot inconnu : PPA_HOME => Il ne reste plus qu'à uploader le package sur launchpad.net. Sous $PPA_HOME/monappli/monappli-0.1.0:  | ppa_home
166 Mot inconnu : monappli => Il ne reste plus qu'à uploader le package sur launchpad.net. Sous $PPA_HOME/monappli/monappli-0.1.0:  | monappli
166 Mot inconnu : monappli-0 => Il ne reste plus qu'à uploader le package sur launchpad.net. Sous $PPA_HOME/monappli/monappli-0.1.0:  | monappli-0
166 Espace(s) en fin de ligne à supprimer. => Il ne reste plus qu'à uploader le package sur launchpad.net. Sous $PPA_HOME/monappli/monappli-0.1.0:  |   => suggestions : ['']

170 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | a => suggestions : ['À']
170 Mot inconnu : tar => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | tar
170 Mot inconnu : gz => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | gz
170 Une de ces ponctuations est superflue. => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | , . => suggestions : [',', '.']
170 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  |  . => suggestions : ['. ', '.']
170 Mot inconnu : dsc => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | dsc
170 Une de ces ponctuations est superflue. => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | , . => suggestions : [',', '.']
170 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  |  . => suggestions : ['. ', '.']
170 Mot inconnu : launchpad => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | launchpad
170 Accord de genre erroné : « paquet » est masculin. => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | la => suggestions : ['le']
170 Mot inconnu : launchpad => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | launchpad
170 Mot inconnu : monlaunchpad => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | monlaunchpad
170 Mot inconnu : monppa => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  | monppa
170 Espace(s) en fin de ligne à supprimer. => A la suite de cette commande, les fichiers (.tar.gz, .dsc, .changes) sont chargés sur launchpad.net. Un mail vous est envoyé sur moi@email.com pour vous indiquer que la paquet a été accepté dans launchpad.net. En vous connectant sur https://launchpad.net/~monlaunchpad/+archive/ubuntu/monppa vous devez voir votre package.  |   => suggestions : ['']

172 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Par contre il n'est pas forcément directement opérationnel car des process en background sur launchpad vont construire des paquets .deb directement opérationnels (1 en amd64, 1 en i386) ce qui peut prendre un peu de temps (de quelques minutes à 1h). |  car => suggestions : [', car']
172 Mot inconnu : launchpad => Par contre il n'est pas forcément directement opérationnel car des process en background sur launchpad vont construire des paquets .deb directement opérationnels (1 en amd64, 1 en i386) ce qui peut prendre un peu de temps (de quelques minutes à 1h). | launchpad
172 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Par contre il n'est pas forcément directement opérationnel car des process en background sur launchpad vont construire des paquets .deb directement opérationnels (1 en amd64, 1 en i386) ce qui peut prendre un peu de temps (de quelques minutes à 1h). |  . => suggestions : ['. ', '.']
172 Mot inconnu : deb => Par contre il n'est pas forcément directement opérationnel car des process en background sur launchpad vont construire des paquets .deb directement opérationnels (1 en amd64, 1 en i386) ce qui peut prendre un peu de temps (de quelques minutes à 1h). | deb
172 Mot inconnu : amd64 => Par contre il n'est pas forcément directement opérationnel car des process en background sur launchpad vont construire des paquets .deb directement opérationnels (1 en amd64, 1 en i386) ce qui peut prendre un peu de temps (de quelques minutes à 1h). | amd64
172 Mot inconnu : i386 => Par contre il n'est pas forcément directement opérationnel car des process en background sur launchpad vont construire des paquets .deb directement opérationnels (1 en amd64, 1 en i386) ce qui peut prendre un peu de temps (de quelques minutes à 1h). | i386

174 Guillemets typographiques ouvrants. => Cliquer sur le lien "view package details". | " => suggestions : ['«\xa0', '“']
174 Mot inconnu : view => Cliquer sur le lien "view package details". | view
174 Mot inconnu : details => Cliquer sur le lien "view package details". | details
174 Guillemets typographiques fermants. => Cliquer sur le lien "view package details". | " => suggestions : ['\xa0»', '”']

176 Guillemets typographiques ouvrants. => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | " => suggestions : ['«\xa0', '“']
176 Mot inconnu : monappli-0 => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | monappli-0
176 Guillemets typographiques fermants. => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | " => suggestions : ['\xa0»', '”']
176 Espace(s) surnuméraire(s) à supprimer. => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  |    => suggestions : [' ']
176 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  |  . => suggestions : ['. ', '.']
176 Mot inconnu : dsc => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | dsc
176 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  |  . => suggestions : ['. ', '.']
176 Mot inconnu : tar => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | tar
176 Mot inconnu : gz => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | gz
176 Mot inconnu : launchpad => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | launchpad
176 Mot inconnu : amd64 => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | amd64
176 Mot inconnu : deb => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | deb
176 Mot inconnu : i386 => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | i386
176 Mot inconnu : deb => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  | deb
176 Espace(s) en fin de ligne à supprimer. => Une liste cliquable des paquets apparait. En cliquant sur le lien "monappli-0.1.1", vous voyez apparaitre le détail du package  : au minimum un fichier .dsc et un .tar.gz. Si launchpad a déjà effectué son travail vous voyez également un fichier amd64.deb et un i386.deb, sinon il faut attendre.  |   => suggestions : ['']

179 Mot inconnu : monappli => Pour pouvoir installer l'application monappli il faut ajouter le ppa à votre liste :  | monappli
179 Espace(s) en fin de ligne à supprimer. => Pour pouvoir installer l'application monappli il faut ajouter le ppa à votre liste :  |   => suggestions : ['']
185 Espace(s) en fin de ligne à supprimer. => Il reste à installer l'application via le gestionnaire de logiciel ou via la ligne de commande :  |   => suggestions : ['']

191 Mot inconnu : changelog => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | changelog
191 Mot inconnu : control => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | control
191 Mot inconnu : install => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | install
191 Une de ces ponctuations est superflue. => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | , . => suggestions : [',', '.']
191 Typographie : points de suspension. Utilisez le caractère dédié. => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | ... => suggestions : ['…']
191 Guillemets typographiques ouvrants. => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | " => suggestions : ['«\xa0', '“']
191 Mot inconnu : debuild => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | debuild
191 Guillemets typographiques fermants. => Si vous faites évoluer votre application, pour publier la version suivante, il suffit de copier le sous-répertoire de la dernière version, d'en actualiser le contenu (fichiers changelog, control, install, ...) et de reprendre les commandes depuis l'étape "debuild : construction du package". | " => suggestions : ['\xa0»', '”']

192 Mot inconnu : PPA_HOME => Par exemple sous $PPA_HOME/monappli :  | ppa_home
192 Mot inconnu : monappli => Par exemple sous $PPA_HOME/monappli :  | monappli
192 Espace(s) en fin de ligne à supprimer. => Par exemple sous $PPA_HOME/monappli :  |   => suggestions : ['']

199 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://developer.ubuntu.com/publish/apps/other-forms-of-submitting-apps/ppa/|sur le site des développeurs ubuntu]] |    => suggestions : ['']

200 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://www.ebower.com/docs/ubuntu-ppa/|Tutoriel en anglais dont cette page est largement inspirée]] |    => suggestions : ['']
