2 Mot inconnu : À_RECYCLER => {{tag>console À_RECYCLER tutoriel}}

5 Mot inconnu : Learn => ====== Learn UNIX in 10 minutes. Version 1.2 FR 1.0 ====== 
5 Espace(s) en fin de ligne à supprimer. => ====== Learn UNIX in 10 minutes. Version 1.2 FR 1.0 ====== 

7 Il manque un espace insécable. => Les commandes de base de la ligne de commande UNIX (le shell) : dernière révision 17 Mai 2001\\
7 Pas de majuscule sur les mois. => Les commandes de base de la ligne de commande UNIX (le shell) : dernière révision 17 Mai 2001\\

8 Il manque un espace insécable. => Site Original : [[http://freeengineer.org/learnUNIXin10minutes.html|Learn UNIX in 10 minutes]]
8 Mot inconnu : Learn => Site Original : [[http://freeengineer.org/learnUNIXin10minutes.html|Learn UNIX in 10 minutes]]

16 Mot inconnu : DAO => Ce document a été rédigé il y a quelques années pour des étudiants en Dessin Assisté par Ordinateur (DAO) .

19 Mot inconnu : copyrighté => Ce document est copyrighté mais peut être reproduit selon les termes de la [[http://www.gnu.org/copyleft/fdl.html|GFDL]].

20 Mot inconnu : This => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : is => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : something => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : that => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : had => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : given => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : to => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : students => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : years => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Mot inconnu : past => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 
20 Espace(s) en fin de ligne à supprimer. => Envoyez-moi vos commentaires, corrections ou tout autre ajout qui vous semble absolument nécessaire dans ce document.((This is something that I had given out to students (CAD user training) in years past. 

21 Mot inconnu : The => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : purpose => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : was => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : to => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : one => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : the => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : basics => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : commands => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : getting => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : started => The purpose was to have on one page the basics commands for getting started using 
21 Mot inconnu : using => The purpose was to have on one page the basics commands for getting started using 
21 Espace(s) en fin de ligne à supprimer. => The purpose was to have on one page the basics commands for getting started using 

22 Mot inconnu : the => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : so => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : that => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : they => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : didn't => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : call => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : asking => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : what => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : to => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : the => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : first => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : time => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Mot inconnu : someone => the UNIX shell (so that they didn't call me asking what to do the first time someone 
22 Espace(s) en fin de ligne à supprimer. => the UNIX shell (so that they didn't call me asking what to do the first time someone 

23 Mot inconnu : them => gave them a tape). \\

24 Mot inconnu : This => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : is => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : copyrighted => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : freely => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : redistributable => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : under => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : the => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : terms => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : of => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : the => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Mot inconnu : GFDL => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Pas d’espace avant un point. => This document is copyrighted but freely redistributable under the terms of the GFDL . 
24 Espace(s) en fin de ligne à supprimer. => This document is copyrighted but freely redistributable under the terms of the GFDL . 

25 Mot inconnu : Send => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : comments => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : and => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : stuff => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : that => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : you => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : think => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : should => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Mot inconnu : absolutly => Send me comments, corrections, and extra stuff that you think should absolutly must be 
25 Espace(s) en fin de ligne à supprimer. => Send me comments, corrections, and extra stuff that you think should absolutly must be 

26 Mot inconnu : included => included. I'll gladly listen.\\
26 Mot inconnu : I'll => included. I'll gladly listen.\\
26 Mot inconnu : gladly => included. I'll gladly listen.\\
26 Mot inconnu : listen => included. I'll gladly listen.\\

43 Il manque un espace insécable. => Exemples :

45 Guillemets typographiques ouvrants. => | / |   Dossier "racine"|
45 Guillemets typographiques fermants. => | / |   Dossier "racine"|

46 Mot inconnu : usr => |/usr |  Dossier usr (sous-dossier du dossier "racine") |
46 Guillemets typographiques ouvrants. => |/usr |  Dossier usr (sous-dossier du dossier "racine") |
46 Guillemets typographiques fermants. => |/usr |  Dossier usr (sous-dossier du dossier "racine") |

47 Mot inconnu : STRIM100 => |/usr/STRIM100 |           STRIM100 est un sous-dossier de /usr |

51 Mot inconnu : pwd => | pwd  | montre le nom du dossier de travail courant (//Print Working Directory//)     |
51 Espace(s) surnuméraire(s) à supprimer. => | pwd  | montre le nom du dossier de travail courant (//Print Working Directory//)     |
51 Mot inconnu : Print => | pwd  | montre le nom du dossier de travail courant (//Print Working Directory//)     |
51 Mot inconnu : Working => | pwd  | montre le nom du dossier de travail courant (//Print Working Directory//)     |
51 Mot inconnu : Directory => | pwd  | montre le nom du dossier de travail courant (//Print Working Directory//)     |

52 Espace(s) surnuméraire(s) à supprimer. => | cd   | change le dossier de travail pour un autre dossier |

54 Mot inconnu : INIT => | cd INIT  | change le dossier de travail pour INIT, qui est un sous-dossier du dossier courant  |
54 Espace(s) surnuméraire(s) à supprimer. => | cd INIT  | change le dossier de travail pour INIT, qui est un sous-dossier du dossier courant  |
54 Mot inconnu : INIT => | cd INIT  | change le dossier de travail pour INIT, qui est un sous-dossier du dossier courant  |
54 Espace(s) surnuméraire(s) à supprimer. => | cd INIT  | change le dossier de travail pour INIT, qui est un sous-dossier du dossier courant  |

55 Typographie : un ou trois points ? => | cd ..  | change le dossier de travail pour le dossier parent |
55 Espace(s) surnuméraire(s) à supprimer. => | cd ..  | change le dossier de travail pour le dossier parent |

56 Mot inconnu : STRMWORK => | cd $STRMWORK | change le dossier de travail pour le dossier défini par la variable d'environnement 'STRMWORK'|
56 Guillemets typographiques ouvrants. => | cd $STRMWORK | change le dossier de travail pour le dossier défini par la variable d'environnement 'STRMWORK'|
56 Mot inconnu : STRMWORK => | cd $STRMWORK | change le dossier de travail pour le dossier défini par la variable d'environnement 'STRMWORK'|

61 Guillemets typographiques ouvrants. => ''ls'' liste le dossier de travail courant
61 Mot inconnu : ls => ''ls'' liste le dossier de travail courant
61 Guillemets typographiques fermants. => ''ls'' liste le dossier de travail courant

63 Guillemets typographiques ouvrants. => ''ls -l //dossier//'' liste au format détaillé le dossier //dossier// 
63 Mot inconnu : ls => ''ls -l //dossier//'' liste au format détaillé le dossier //dossier// 
63 Il manque un espace à côté du tiret. => ''ls -l //dossier//'' liste au format détaillé le dossier //dossier// 
63 Espace(s) en fin de ligne à supprimer. => ''ls -l //dossier//'' liste au format détaillé le dossier //dossier// 

65 Il manque un espace insécable. => Par exemple : 
65 Espace(s) en fin de ligne à supprimer. => Par exemple : 

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    $ ls -l /home/marven/work/
67 Mot inconnu : ls =>    $ ls -l /home/marven/work/
67 Il manque un espace à côté du tiret. =>    $ ls -l /home/marven/work/

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Mot inconnu : drwxr-xr-x =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Espace(s) surnuméraire(s) à supprimer. =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Mot inconnu : marven =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Espace(s) surnuméraire(s) à supprimer. =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Espace(s) surnuméraire(s) à supprimer. =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Espace(s) surnuméraire(s) à supprimer. =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo
68 Mot inconnu : ToDo =>    drwxr-xr-x    4 marven    staff     1024  2004-04-04 09:40 ToDo

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    -rw-r--r--    1 marven    staff    767392 2004-04-04 14:28 scanlib.tar.gz
69 Mot inconnu : rw-r =>    -rw-r--r--    1 marven    staff    767392 2004-04-04 14:28 scanlib.tar.gz
69 Mot inconnu : marven =>    -rw-r--r--    1 marven    staff    767392 2004-04-04 14:28 scanlib.tar.gz
69 Espace(s) surnuméraire(s) à supprimer. =>    -rw-r--r--    1 marven    staff    767392 2004-04-04 14:28 scanlib.tar.gz
69 Espace(s) surnuméraire(s) à supprimer. =>    -rw-r--r--    1 marven    staff    767392 2004-04-04 14:28 scanlib.tar.gz
69 Formatage des grands nombres. =>    -rw-r--r--    1 marven    staff    767392 2004-04-04 14:28 scanlib.tar.gz

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    ^^ ^  ^  ^     ^   ^             ^           ^      ^        ^      ^

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    || |  |  |     |   |             |           |      |        |      |  
71 Espace(s) en fin de ligne à supprimer. =>    || |  |  |     |   |             |           |      |        |      |  

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    || |  |  |     |  Propriétaire  Groupe      Taille Date     Heure  Nom 
72 Espace(s) surnuméraire(s) à supprimer. =>    || |  |  |     |  Propriétaire  Groupe      Taille Date     Heure  Nom 
72 Espace(s) surnuméraire(s) à supprimer. =>    || |  |  |     |  Propriétaire  Groupe      Taille Date     Heure  Nom 
72 Espace(s) surnuméraire(s) à supprimer. =>    || |  |  |     |  Propriétaire  Groupe      Taille Date     Heure  Nom 
72 Espace(s) surnuméraire(s) à supprimer. =>    || |  |  |     |  Propriétaire  Groupe      Taille Date     Heure  Nom 
72 Espace(s) en fin de ligne à supprimer. =>    || |  |  |     |  Propriétaire  Groupe      Taille Date     Heure  Nom 

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    || |  |  |    Nombre de fichiers ou dossiers que le dossier listé contient

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    || |  | Permissions pour tous

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    || | Permissions pour les membres du groupe staff

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    ||Permissions pour le propriétaire  r = lecture (read), w = écriture (write), x = exécute (execute),  
76 Espace(s) surnuméraire(s) à supprimer. =>    ||Permissions pour le propriétaire  r = lecture (read), w = écriture (write), x = exécute (execute),  
76 Mot inconnu : read =>    ||Permissions pour le propriétaire  r = lecture (read), w = écriture (write), x = exécute (execute),  
76 Mot inconnu : write =>    ||Permissions pour le propriétaire  r = lecture (read), w = écriture (write), x = exécute (execute),  
76 Mot inconnu : execute =>    ||Permissions pour le propriétaire  r = lecture (read), w = écriture (write), x = exécute (execute),  
76 Espace(s) en fin de ligne à supprimer. =>    ||Permissions pour le propriétaire  r = lecture (read), w = écriture (write), x = exécute (execute),  

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |  - =  pas de droits
77 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    |  - =  pas de droits

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   Type de fichier * : - = Fichier régulier, d = Dossier, l = Lien symbolique ou autre...
78 Il manque un espace insécable. =>   Type de fichier * : - = Fichier régulier, d = Dossier, l = Lien symbolique ou autre...
78 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   Type de fichier * : - = Fichier régulier, d = Dossier, l = Lien symbolique ou autre...
78 Typographie : points de suspension. Utilisez le caractère dédié. =>   Type de fichier * : - = Fichier régulier, d = Dossier, l = Lien symbolique ou autre...

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  === chmod ===
87 Mot inconnu : chmod =>  === chmod ===

88 Il manque un espace insécable. => == En employant la méthode alphabétique: ==

90 Il manque un espace insécable. => Ce qu'il faut savoir:

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Mot inconnu : __u__ =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Il manque un espace insécable. =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Mot inconnu : ser =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Mot inconnu : __g__ =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Il manque un espace insécable. =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Mot inconnu : roup =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Mot inconnu : __o__ =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Il manque un espace insécable. =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)
92 Mot inconnu : ther =>   * __u__: utilisateur (**u**ser), __g__: groupe (**g**roup) et __o__: autres (**o**ther)

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         

95 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Mot inconnu : __r__ =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Il manque un espace insécable. =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Mot inconnu : ead =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Mot inconnu : __w__ =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Il manque un espace insécable. =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Mot inconnu : __x__ =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Il manque un espace insécable. =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)
95 Mot inconnu : ecute =>   * __r__: lire (**r**ead), __w__: écrire (**w**rite) et __x__: exécuter (e**x**ecute)

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    chmod [ugo][+-=][rwx] fichier
98 Mot inconnu : chmod =>    chmod [ugo][+-=][rwx] fichier
98 Mot inconnu : ugo =>    chmod [ugo][+-=][rwx] fichier
98 Mot inconnu : rwx =>    chmod [ugo][+-=][rwx] fichier

100 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Vous devez donc choisir le groupe à modifier (u, g, o) suivis du symbole + pour donner une permission, du symbole - pour la retirer ou du symbole = pour définir la permission exacte suivi des permissions à appliquer (r, w, x).

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    chmod u+x fichier
104 Mot inconnu : chmod =>    chmod u+x fichier

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    chmod go-wx fichier
108 Mot inconnu : chmod =>    chmod go-wx fichier
108 Mot inconnu : go-wx =>    chmod go-wx fichier

110 Il manque un espace insécable. => == En employant la méthode numérique: ==

114 Espace(s) en fin de ligne à supprimer. => Il faut savoir que x=1, w=2 et r=4 ensuite vous additionnez les chiffres si vous voulez cumuler les droits. L'ordre des chiffres est propriétaire/groupe/autres.  

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   chmod 755 fichier
119 Mot inconnu : chmod =>   chmod 755 fichier
119 Accord de nombre erroné avec « 755 » : « fichier » devrait être au pluriel. =>   chmod 755 fichier

121 Mot inconnu : rwx => On a propriétaire/groupe/autres donc rwx/rx/rx donc 4+2+1/4+1/4+1 et donc 7/5/5.
121 Mot inconnu : rx => On a propriétaire/groupe/autres donc rwx/rx/rx donc 4+2+1/4+1/4+1 et donc 7/5/5.
121 Mot inconnu : rx => On a propriétaire/groupe/autres donc rwx/rx/rx donc 4+2+1/4+1/4+1 et donc 7/5/5.

123 Espace(s) surnuméraire(s) à supprimer. => Astuce pour ceux qui connaissent le binaire. On veut  rwx lire/écrire/exécuter donc 111 en binaire qui vaut 7 en décimal. On veut r-x lire/**pas ecrire**/exécuter donc 101 en binaire qui vaut 5 en décimal. 
123 Mot inconnu : rwx => Astuce pour ceux qui connaissent le binaire. On veut  rwx lire/écrire/exécuter donc 111 en binaire qui vaut 7 en décimal. On veut r-x lire/**pas ecrire**/exécuter donc 101 en binaire qui vaut 5 en décimal. 
123 Mot inconnu : ecrire => Astuce pour ceux qui connaissent le binaire. On veut  rwx lire/écrire/exécuter donc 111 en binaire qui vaut 7 en décimal. On veut r-x lire/**pas ecrire**/exécuter donc 101 en binaire qui vaut 5 en décimal. 
123 Espace(s) en fin de ligne à supprimer. => Astuce pour ceux qui connaissent le binaire. On veut  rwx lire/écrire/exécuter donc 111 en binaire qui vaut 7 en décimal. On veut r-x lire/**pas ecrire**/exécuter donc 101 en binaire qui vaut 5 en décimal. 

125 Mot inconnu : chgrp => === chgrp ===

127 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   chgrp staff fichier
127 Mot inconnu : chgrp =>   chgrp staff fichier

131 Mot inconnu : chown => === chown ===

133 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   chown sheherazade fichier
133 Mot inconnu : chown =>   chown sheherazade fichier
133 Mot inconnu : sheherazade =>   chown sheherazade fichier

135 Mot inconnu : sheherazade => fait de sheherazade la propriétaire du fichier  //fichier//.
135 Espace(s) surnuméraire(s) à supprimer. => fait de sheherazade la propriétaire du fichier  //fichier//.

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   chown -R sheherazade dir
137 Mot inconnu : chown =>   chown -R sheherazade dir
137 Il manque un espace à côté du tiret. =>   chown -R sheherazade dir
137 Mot inconnu : sheherazade =>   chown -R sheherazade dir
137 Mot inconnu : dir =>   chown -R sheherazade dir

139 Mot inconnu : sheherazade => fait de sheherazade la propriétaire du dossier //dir// et de **tous** ses sous dossiers.
139 Mot inconnu : dir => fait de sheherazade la propriétaire du dossier //dir// et de **tous** ses sous dossiers.

141 Mot inconnu : root => <note important>Vous devez être le/la propriétaire du fichier/dossier ou être root avant de taper ces commandes. Sous Ubuntu il faut les préfixer par **sudo**.</note>
141 Mot inconnu : sudo => <note important>Vous devez être le/la propriétaire du fichier/dossier ou être root avant de taper ces commandes. Sous Ubuntu il faut les préfixer par **sudo**.</note>

146 Mot inconnu : cp => |cp fichier_source fichier_destination | copie un fichier |
146 Mot inconnu : fichier_source => |cp fichier_source fichier_destination | copie un fichier |
146 Mot inconnu : fichier_destination => |cp fichier_source fichier_destination | copie un fichier |

147 Mot inconnu : cp => |cp -r dossier_source dossier_destination | copie un dossier |
147 Il manque un espace à côté du tiret. => |cp -r dossier_source dossier_destination | copie un dossier |
147 Mot inconnu : dossier_source => |cp -r dossier_source dossier_destination | copie un dossier |
147 Mot inconnu : dossier_destination => |cp -r dossier_source dossier_destination | copie un dossier |

148 Mot inconnu : mv => | mv fichier1 nouveau_nom_fichier1 | déplace ou renomme un fichier |
148 Mot inconnu : fichier1 => | mv fichier1 nouveau_nom_fichier1 | déplace ou renomme un fichier |
148 Mot inconnu : nouveau_nom_fichier1 => | mv fichier1 nouveau_nom_fichier1 | déplace ou renomme un fichier |

149 Mot inconnu : rm => | rm fichier1 [fichier2 ...] | supprime un fichier (ou une liste de fichiers) (( **Il n'y a pas de corbeille**)) |
149 Mot inconnu : fichier1 => | rm fichier1 [fichier2 ...] | supprime un fichier (ou une liste de fichiers) (( **Il n'y a pas de corbeille**)) |
149 Mot inconnu : fichier2 => | rm fichier1 [fichier2 ...] | supprime un fichier (ou une liste de fichiers) (( **Il n'y a pas de corbeille**)) |
149 Typographie : points de suspension. Utilisez le caractère dédié. => | rm fichier1 [fichier2 ...] | supprime un fichier (ou une liste de fichiers) (( **Il n'y a pas de corbeille**)) |
149 Pas d’espace après ce signe. => | rm fichier1 [fichier2 ...] | supprime un fichier (ou une liste de fichiers) (( **Il n'y a pas de corbeille**)) |

150 Mot inconnu : rm => | rm -r dossier1 [dossier2...] | supprime un dossier et **tous** ses sous-dossiers, à manier avec précaution |
150 Il manque un espace à côté du tiret. => | rm -r dossier1 [dossier2...] | supprime un dossier et **tous** ses sous-dossiers, à manier avec précaution |
150 Mot inconnu : dossier1 => | rm -r dossier1 [dossier2...] | supprime un dossier et **tous** ses sous-dossiers, à manier avec précaution |
150 Mot inconnu : dossier2 => | rm -r dossier1 [dossier2...] | supprime un dossier et **tous** ses sous-dossiers, à manier avec précaution |
150 Typographie : points de suspension. Utilisez le caractère dédié. => | rm -r dossier1 [dossier2...] | supprime un dossier et **tous** ses sous-dossiers, à manier avec précaution |

151 Mot inconnu : mkdir => | mkdir dossier1 [dossier2...]   | crée un dossier  |
151 Mot inconnu : dossier1 => | mkdir dossier1 [dossier2...]   | crée un dossier  |
151 Mot inconnu : dossier2 => | mkdir dossier1 [dossier2...]   | crée un dossier  |
151 Typographie : points de suspension. Utilisez le caractère dédié. => | mkdir dossier1 [dossier2...]   | crée un dossier  |
151 Espace(s) surnuméraire(s) à supprimer. => | mkdir dossier1 [dossier2...]   | crée un dossier  |

152 Mot inconnu : rmdir => |rmdir dossier1 [dossier2...] | supprime un dossier vide|
152 Mot inconnu : dossier1 => |rmdir dossier1 [dossier2...] | supprime un dossier vide|
152 Mot inconnu : dossier2 => |rmdir dossier1 [dossier2...] | supprime un dossier vide|
152 Typographie : points de suspension. Utilisez le caractère dédié. => |rmdir dossier1 [dossier2...] | supprime un dossier vide|

158 Mot inconnu : cat => | cat fichier | affiche le contenu du fichier à l'écran en ASCII |

159 Il manque un espace insécable. => | more fichier | affiche progressivement un fichier à l'écran : Entrer = descend d'une ligne, Espace = descend d'une page, q = quitte |

160 Mot inconnu : less => | less fichier | comme more, mais on peut utiliser la touche Page Précédente. Pas disponible sur tous les systèmes. |

161 Mot inconnu : vi => | vi fichier | éditer un fichier avec l'éditeur vi. Tous les systèmes Unix ont un éditeur //à la// vi. |
161 Mot inconnu : vi => | vi fichier | éditer un fichier avec l'éditeur vi. Tous les systèmes Unix ont un éditeur //à la// vi. |
161 Mot inconnu : vi => | vi fichier | éditer un fichier avec l'éditeur vi. Tous les systèmes Unix ont un éditeur //à la// vi. |

162 Mot inconnu : emacs => | emacs fichier | éditer un fichier avec l'éditeur emacs. Pas disponible sur tous les systèmes. |
162 Mot inconnu : emacs => | emacs fichier | éditer un fichier avec l'éditeur emacs. Pas disponible sur tous les systèmes. |

163 Mot inconnu : head => | head fichier | affiche par défaut les 10 premières lignes d'un fichier |

164 Mot inconnu : head => | head -n{N} fichier | affiche les N premières lignes d'un fichier |
164 Il manque un espace à côté du tiret. => | head -n{N} fichier | affiche les N premières lignes d'un fichier |
164 Accord de genre erroné entre « N » et « premières ». => | head -n{N} fichier | affiche les N premières lignes d'un fichier |

165 Mot inconnu : tail => | tail fichier | affiche par défaut les 10 dernières lignes d'un fichier |

166 Mot inconnu : tail => | tail -n{N} fichier | affiche les N dernières lignes d'un fichier |
166 Il manque un espace à côté du tiret. => | tail -n{N} fichier | affiche les N dernières lignes d'un fichier |
166 Accord de genre erroné entre « N » et « dernières ». => | tail -n{N} fichier | affiche les N dernières lignes d'un fichier |

175 Il manque un espace insécable. => Vous pouvez connaître le shell que vous utilisez avec la commande :

178 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   printenv SHELL
178 Mot inconnu : printenv =>   printenv SHELL

186 Guillemets typographiques ouvrants. => Vous pouvez apprendre au shell à 'mémoriser' des informations pour utilisation ultérieure grâce aux variables d'environnement.
186 Guillemets typographiques fermants. => Vous pouvez apprendre au shell à 'mémoriser' des informations pour utilisation ultérieure grâce aux variables d'environnement.

187 Mot inconnu : bash => Par exemple avec bash :
187 Il manque un espace insécable. => Par exemple avec bash :

189 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   export CASROOT=/usr/local/CAS3.0 	
189 Mot inconnu : CASROOT =>   export CASROOT=/usr/local/CAS3.0 	
189 Incohérence : espace et tabulation. =>   export CASROOT=/usr/local/CAS3.0 	

191 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => définit la variable CASROOT avec la valeur /usr/local/CAS3.0.
191 Mot inconnu : CASROOT => définit la variable CASROOT avec la valeur /usr/local/CAS3.0.

193 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd $CASROOT				
193 Mot inconnu : CASROOT =>   cd $CASROOT				

195 Mot inconnu : CASROOT => change le répertoire de travail courant pour CASROOT.

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   export LD_LIBRARY_PATH=$CASROOT/Linux/lib  	
197 Mot inconnu : LD_LIBRARY_PATH =>   export LD_LIBRARY_PATH=$CASROOT/Linux/lib  	
197 Mot inconnu : CASROOT =>   export LD_LIBRARY_PATH=$CASROOT/Linux/lib  	
197 Espace(s) surnuméraire(s) à supprimer. =>   export LD_LIBRARY_PATH=$CASROOT/Linux/lib  	
197 Incohérence : espace et tabulation. =>   export LD_LIBRARY_PATH=$CASROOT/Linux/lib  	

199 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => définit la variable LD_LIBRARY_PATH qui prendra la valeur CASROOT avec /Linux/lib ajouté à la fin, c'est-à-dire /usr/local/CAS3.0/Linux/lib.
199 Mot inconnu : LD_LIBRARY_PATH => définit la variable LD_LIBRARY_PATH qui prendra la valeur CASROOT avec /Linux/lib ajouté à la fin, c'est-à-dire /usr/local/CAS3.0/Linux/lib.
199 Mot inconnu : CASROOT => définit la variable LD_LIBRARY_PATH qui prendra la valeur CASROOT avec /Linux/lib ajouté à la fin, c'est-à-dire /usr/local/CAS3.0/Linux/lib.

201 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   printenv
201 Mot inconnu : printenv =>   printenv

205 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   printenv CASROOT 		
205 Mot inconnu : printenv =>   printenv CASROOT 		
205 Mot inconnu : CASROOT =>   printenv CASROOT 		
205 Incohérence : espace et tabulation. =>   printenv CASROOT 		

207 Mot inconnu : CASROOT => affiche la valeur de la variable d'environnement nommée CASROOT : ///usr/local/CAS3.0.//
207 Il manque un espace insécable. => affiche la valeur de la variable d'environnement nommée CASROOT : ///usr/local/CAS3.0.//

209 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   echo $CASROOT 			
209 Mot inconnu : echo =>   echo $CASROOT 			
209 Mot inconnu : CASROOT =>   echo $CASROOT 			
209 Incohérence : espace et tabulation. =>   echo $CASROOT 			

216 Mot inconnu : bash => Une fonctionnalité de bash et tcsh (et parfois d'autres) est de pouvoir utiliser la touche "flèche vers le haut" pour accéder aux dernières commandes entrées, les éditer, et les re-exécuter.
216 Mot inconnu : tcsh => Une fonctionnalité de bash et tcsh (et parfois d'autres) est de pouvoir utiliser la touche "flèche vers le haut" pour accéder aux dernières commandes entrées, les éditer, et les re-exécuter.
216 Guillemets typographiques ouvrants. => Une fonctionnalité de bash et tcsh (et parfois d'autres) est de pouvoir utiliser la touche "flèche vers le haut" pour accéder aux dernières commandes entrées, les éditer, et les re-exécuter.
216 Guillemets typographiques fermants. => Une fonctionnalité de bash et tcsh (et parfois d'autres) est de pouvoir utiliser la touche "flèche vers le haut" pour accéder aux dernières commandes entrées, les éditer, et les re-exécuter.

223 Mot inconnu : bash => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : tcsh => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : TAB => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : constantine-monks-and-willy-wonka => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : txt => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Guillemets typographiques ouvrants. => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : vi => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : const => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).
223 Mot inconnu : TAB => Une des fonctionnalités de bash et tcsh (et probablement d'autres) est de pouvoir utiliser la touche TAB pour compléter un nom de fichier tapé partiellement. Par exemple, si vous avez un fichier nommé constantine-monks-and-willy-wonka.txt dans votre répertoire et si vous voulez l'éditer, vous pouvez taper 'vi const', enfoncer la touche TAB, et le shell va remplir le reste du nom pour vous (à condition qu'il soit unique).

224 Mot inconnu : ksh => Dans ksh (kornshell), cette complétion se fait en appuyant 2 fois sur la touche Echap.
224 Mot inconnu : kornshell => Dans ksh (kornshell), cette complétion se fait en appuyant 2 fois sur la touche Echap.
224 Mot inconnu : Echap => Dans ksh (kornshell), cette complétion se fait en appuyant 2 fois sur la touche Echap.

226 Mot inconnu : Bash => ==== Bash vous montre la voie ====

229 Mot inconnu : Bash => Bash complète aussi bien les noms de commandes que les variables d'environnement.

230 Mot inconnu : TAB => En cas de possibilités multiples de complétion, taper deux fois sur la touche TAB vous montrera toutes les complétions possibles. Bash est le shell par défaut de la plupart des systèmes Linux.
230 Mot inconnu : Bash => En cas de possibilités multiples de complétion, taper deux fois sur la touche TAB vous montrera toutes les complétions possibles. Bash est le shell par défaut de la plupart des systèmes Linux.

234 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  ======

239 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   grep chaine fichier > nouveau_fichier 
239 Mot inconnu : grep =>   grep chaine fichier > nouveau_fichier 
239 Mot inconnu : nouveau_fichier =>   grep chaine fichier > nouveau_fichier 
239 Espace(s) en fin de ligne à supprimer. =>   grep chaine fichier > nouveau_fichier 

240 Guillemets typographiques ouvrants. => redirige la sortie de la commande précédente 'grep' dans un fichier nommé //nouveau_fichier//. //Si nouveau_fichier existe il sera remplacé/ecrasé//
240 Mot inconnu : grep => redirige la sortie de la commande précédente 'grep' dans un fichier nommé //nouveau_fichier//. //Si nouveau_fichier existe il sera remplacé/ecrasé//
240 Guillemets typographiques fermants. => redirige la sortie de la commande précédente 'grep' dans un fichier nommé //nouveau_fichier//. //Si nouveau_fichier existe il sera remplacé/ecrasé//
240 Mot inconnu : nouveau_fichier => redirige la sortie de la commande précédente 'grep' dans un fichier nommé //nouveau_fichier//. //Si nouveau_fichier existe il sera remplacé/ecrasé//
240 Mot inconnu : nouveau_fichier => redirige la sortie de la commande précédente 'grep' dans un fichier nommé //nouveau_fichier//. //Si nouveau_fichier existe il sera remplacé/ecrasé//
240 Mot inconnu : ecrasé => redirige la sortie de la commande précédente 'grep' dans un fichier nommé //nouveau_fichier//. //Si nouveau_fichier existe il sera remplacé/ecrasé//

242 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   grep chaine fichier >> fichier_existant
242 Mot inconnu : grep =>   grep chaine fichier >> fichier_existant
242 Mot inconnu : fichier_existant =>   grep chaine fichier >> fichier_existant

243 Guillemets typographiques ouvrants. => ajoute la sortie de la commande 'grep' à la fin du fichier //fichier_existant//.
243 Mot inconnu : grep => ajoute la sortie de la commande 'grep' à la fin du fichier //fichier_existant//.
243 Guillemets typographiques fermants. => ajoute la sortie de la commande 'grep' à la fin du fichier //fichier_existant//.
243 Mot inconnu : fichier_existant => ajoute la sortie de la commande 'grep' à la fin du fichier //fichier_existant//.

247 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

251 Guillemets typographiques ouvrants. => Le symbole tube ("pipe") "|" est utilisé pour rediriger la sortie d'une commande vers une autre.
251 Guillemets typographiques fermants. => Le symbole tube ("pipe") "|" est utilisé pour rediriger la sortie d'une commande vers une autre.

253 Il manque un espace insécable. => Par exemple :

255 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ls -l | more
255 Mot inconnu : ls =>   ls -l | more
255 Il manque un espace à côté du tiret. =>   ls -l | more

257 Guillemets typographiques ouvrants. => Cette commande prend la sortie du listage au format long des fichiers dans un répertoire produit par "ls -l" et la redirige vers la commande "more" (aussi appelé filtre). Dans ce cas, une très longue liste de fichier peut être vue page par page.
257 Mot inconnu : ls => Cette commande prend la sortie du listage au format long des fichiers dans un répertoire produit par "ls -l" et la redirige vers la commande "more" (aussi appelé filtre). Dans ce cas, une très longue liste de fichier peut être vue page par page.
257 Il manque un espace à côté du tiret. => Cette commande prend la sortie du listage au format long des fichiers dans un répertoire produit par "ls -l" et la redirige vers la commande "more" (aussi appelé filtre). Dans ce cas, une très longue liste de fichier peut être vue page par page.
257 Guillemets typographiques fermants. => Cette commande prend la sortie du listage au format long des fichiers dans un répertoire produit par "ls -l" et la redirige vers la commande "more" (aussi appelé filtre). Dans ce cas, une très longue liste de fichier peut être vue page par page.
257 Guillemets typographiques ouvrants. => Cette commande prend la sortie du listage au format long des fichiers dans un répertoire produit par "ls -l" et la redirige vers la commande "more" (aussi appelé filtre). Dans ce cas, une très longue liste de fichier peut être vue page par page.
257 Guillemets typographiques fermants. => Cette commande prend la sortie du listage au format long des fichiers dans un répertoire produit par "ls -l" et la redirige vers la commande "more" (aussi appelé filtre). Dans ce cas, une très longue liste de fichier peut être vue page par page.

267 Il manque un espace insécable. => Par exemple :

269 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cat `find . -name aaa.txt`
269 Mot inconnu : cat =>   cat `find . -name aaa.txt`
269 Mot inconnu : find =>   cat `find . -name aaa.txt`
269 Pas d’espace avant un point. =>   cat `find . -name aaa.txt`
269 Mot inconnu : name =>   cat `find . -name aaa.txt`
269 Mot inconnu : aaa =>   cat `find . -name aaa.txt`
269 Mot inconnu : txt =>   cat `find . -name aaa.txt`

271 Mot inconnu : ecran => va afficher à l'ecran (voir cat) le contenu de tous les fichiers nommés aaa.txt dans le dossier de travail courant ou ses sous-dossiers.
271 Mot inconnu : cat => va afficher à l'ecran (voir cat) le contenu de tous les fichiers nommés aaa.txt dans le dossier de travail courant ou ses sous-dossiers.
271 Mot inconnu : aaa => va afficher à l'ecran (voir cat) le contenu de tous les fichiers nommés aaa.txt dans le dossier de travail courant ou ses sous-dossiers.
271 Mot inconnu : txt => va afficher à l'ecran (voir cat) le contenu de tous les fichiers nommés aaa.txt dans le dossier de travail courant ou ses sous-dossiers.

272 Pas d’espace après ce signe. => <note>Cette syntaxe est dépassée, on lui préfère maintenant la notation $( expression ) </note>
272 Pas d’espace avant ce signe. => <note>Cette syntaxe est dépassée, on lui préfère maintenant la notation $( expression ) </note>

273 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cat $(find . -name aaa.txt)
273 Mot inconnu : cat =>   cat $(find . -name aaa.txt)
273 Mot inconnu : find =>   cat $(find . -name aaa.txt)
273 Pas d’espace avant un point. =>   cat $(find . -name aaa.txt)
273 Mot inconnu : name =>   cat $(find . -name aaa.txt)
273 Mot inconnu : aaa =>   cat $(find . -name aaa.txt)
273 Mot inconnu : txt =>   cat $(find . -name aaa.txt)

275 Il manque un espace insécable. => === Rechercher une chaîne de caractères : La commande grep ===
275 Mot inconnu : grep => === Rechercher une chaîne de caractères : La commande grep ===

277 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   grep chaine fichier
277 Mot inconnu : grep =>   grep chaine fichier

282 Il manque un espace insécable. => === Rechercher des fichiers : La commande find ===
282 Mot inconnu : find => === Rechercher des fichiers : La commande find ===

284 Il manque un espace insécable. => Syntaxe :

285 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find chemin -name fichier
285 Mot inconnu : find =>   find chemin -name fichier
285 Il manque un espace à côté du tiret. =>   find chemin -name fichier
285 Mot inconnu : name =>   find chemin -name fichier

286 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

288 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find . -name aaa.txt    
288 Mot inconnu : find =>   find . -name aaa.txt    
288 Pas d’espace avant un point. =>   find . -name aaa.txt    
288 Mot inconnu : name =>   find . -name aaa.txt    
288 Mot inconnu : aaa =>   find . -name aaa.txt    
288 Mot inconnu : txt =>   find . -name aaa.txt    
288 Espace(s) en fin de ligne à supprimer. =>   find . -name aaa.txt    

290 Mot inconnu : aaa => cherche les fichiers nommés aaa.txt dans le dossier courant ou ses sous-dossiers.
290 Mot inconnu : txt => cherche les fichiers nommés aaa.txt dans le dossier courant ou ses sous-dossiers.

292 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find / -name vimrc
292 Mot inconnu : find =>   find / -name vimrc
292 Mot inconnu : name =>   find / -name vimrc
292 Mot inconnu : vimrc =>   find / -name vimrc

294 Mot inconnu : vimrc => cherche les fichiers nommés vimrc depuis le dossier racine

296 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find /usr/local/games -name "*xpilot*" 
296 Mot inconnu : find =>   find /usr/local/games -name "*xpilot*" 
296 Il manque un espace à côté du tiret. =>   find /usr/local/games -name "*xpilot*" 
296 Mot inconnu : name =>   find /usr/local/games -name "*xpilot*" 
296 Mot inconnu : xpilot =>   find /usr/local/games -name "*xpilot*" 
296 Espace(s) en fin de ligne à supprimer. =>   find /usr/local/games -name "*xpilot*" 

298 Mot inconnu : xpilot => cherche tous les fichiers dont le nom contient //xpilot// dans le dossier /usr/local/games 
298 Espace(s) en fin de ligne à supprimer. => cherche tous les fichiers dont le nom contient //xpilot// dans le dossier /usr/local/games 

301 Il manque un espace insécable. => ==== Créer des archives ('grappe de fichier') : La commande tar ====
301 Mot inconnu : tar => ==== Créer des archives ('grappe de fichier') : La commande tar ====

304 Mot inconnu : tar => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Mot inconnu : ape => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Mot inconnu : ar => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Mot inconnu : chive => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques fermants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques ouvrants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques fermants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Il manque un espace insécable. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques ouvrants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques fermants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Mot inconnu : email => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Erreur de numérisation ? Virgules au lieu de points ? => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Typographie : points de suspension. Utilisez le caractère dédié. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Erreur de numérisation ? Virgules au lieu de points ? => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Typographie : points de suspension. Utilisez le caractère dédié. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques ouvrants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Guillemets typographiques fermants. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 
304 Espace(s) en fin de ligne à supprimer. => La commande tar signifie '**t**ape **ar**chive' (archive sur bande). C'est la méthode 'standard' pour lire et écrire des archives. Le sens commun d'archives papier est ici dépassé et élargi : il s'agit simplement de regrouper plusieurs fichiers dans un 'pack' en un seul nouveau fichier, pour des raisons pratiques de transfert (une seule pièce jointe dans un email par exemple), de stockage (par thème, par année,...) ou de dépendances (installation d'une application, d'un système d'exploitation,...) par exemple. Il faut noter que les fichiers ainsi rassemblés restent 'indépendants' et ne se mélangent pas comme on pourrait le faire en fusionnant les données (avec un traitement de texte par exemple). 

307 Mot inconnu : tar => Vous trouverez souvent des archives de fichiers avec des noms comme fichiers.tar, ou fichiers.tar.gz. Ce sont respectivement des fichiers dans une archive tar et des fichiers dans une archive tar qui a été compressée avec le programme de compression gzip.
307 Mot inconnu : tar => Vous trouverez souvent des archives de fichiers avec des noms comme fichiers.tar, ou fichiers.tar.gz. Ce sont respectivement des fichiers dans une archive tar et des fichiers dans une archive tar qui a été compressée avec le programme de compression gzip.
307 Mot inconnu : tar => Vous trouverez souvent des archives de fichiers avec des noms comme fichiers.tar, ou fichiers.tar.gz. Ce sont respectivement des fichiers dans une archive tar et des fichiers dans une archive tar qui a été compressée avec le programme de compression gzip.
307 Mot inconnu : gzip => Vous trouverez souvent des archives de fichiers avec des noms comme fichiers.tar, ou fichiers.tar.gz. Ce sont respectivement des fichiers dans une archive tar et des fichiers dans une archive tar qui a été compressée avec le programme de compression gzip.

309 Mot inconnu : tar => Il est très probable, si quelqu'un vous envoie des fichiers, qu'ils soient compressés dans une archive tar.

311 Mot inconnu : tar => De même, si vous devez envoyer des fichiers, vous devriez utiliser tar.

315 Guillemets typographiques ouvrants. => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Mot inconnu : tar => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Il manque un espace à côté du tiret. => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Mot inconnu : xvf => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Mot inconnu : tar => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Guillemets typographiques fermants. => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Doublon. => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |
315 Mot inconnu : tar => | ''tar -xvf archive.tar''  | e**x**trait les fichiers de l'archive archive.tar, en affichant les noms des fichiers qui la composent |

316 Guillemets typographiques ouvrants. => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |
316 Mot inconnu : tar => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |
316 Il manque un espace à côté du tiret. => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |
316 Mot inconnu : xvzf => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |
316 Guillemets typographiques fermants. => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |
316 Mot inconnu : gzip => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |
316 Mot inconnu : tar => | ''tar -xvzf archive.tar.gz''  | e**x**trait les fichiers de l'archive en utilisant gzip puis tar |

317 Guillemets typographiques ouvrants. => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |
317 Mot inconnu : tar => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |
317 Il manque un espace à côté du tiret. => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |
317 Mot inconnu : jxvf => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |
317 Guillemets typographiques fermants. => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |
317 Mot inconnu : bzip2 => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |
317 Mot inconnu : tar => | ''tar -jxvf archive.tar.bz2''  | e**x**trait les fichiers de l'archive en utilisant bzip2 puis tar |

318 Guillemets typographiques ouvrants. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : tar => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Il manque un espace à côté du tiret. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : cvf => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : tar => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : fichier1 => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : fichier2 => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Typographie : points de suspension. Utilisez le caractère dédié. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Guillemets typographiques ouvrants. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : tar => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Guillemets typographiques fermants. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : fichier1 => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Espace(s) surnuméraire(s) à supprimer. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Mot inconnu : fichier2 => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |
318 Typographie : points de suspension. Utilisez le caractère dédié. => | ''tar -cvf archive.tar fichier1 [fichier2...]''  | **C**rée un fichier "archive.tar" contenant fichier1,  fichier2... |

319 Guillemets typographiques ouvrants. => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Mot inconnu : tar => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Il manque un espace à côté du tiret. => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Mot inconnu : cvzf => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Mot inconnu : mon_dossier => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Guillemets typographiques fermants. => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Mot inconnu : gzip => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Guillemets typographiques ouvrants. => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|
319 Mot inconnu : mon_dossier => | ''tar -cvzf archive.tar.gz mon_dossier'' | crée un fichier gzip contenant tout le contenu du dossier 'mon_dossier'|

322 Il manque un espace insécable. => ==== Compression de fichier : gzip, bzip2 ====
322 Mot inconnu : gzip => ==== Compression de fichier : gzip, bzip2 ====
322 Mot inconnu : bzip2 => ==== Compression de fichier : gzip, bzip2 ====

324 Mot inconnu : gzip => == gzip ==

326 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => gzip est un outil GNU de compression et de decompression. L'extension pour les fichiers gzippés est .gz.
326 Mot inconnu : gzip => gzip est un outil GNU de compression et de decompression. L'extension pour les fichiers gzippés est .gz.
326 Mot inconnu : decompression => gzip est un outil GNU de compression et de decompression. L'extension pour les fichiers gzippés est .gz.
326 Mot inconnu : gzippés => gzip est un outil GNU de compression et de decompression. L'extension pour les fichiers gzippés est .gz.
326 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => gzip est un outil GNU de compression et de decompression. L'extension pour les fichiers gzippés est .gz.
326 Mot inconnu : gz => gzip est un outil GNU de compression et de decompression. L'extension pour les fichiers gzippés est .gz.

328 Mot inconnu : gzip => | gzip fichier.txt | crée le fichier compressé fichier.txt.gz |
328 Mot inconnu : txt => | gzip fichier.txt | crée le fichier compressé fichier.txt.gz |

329 Mot inconnu : gunzip => | gunzip fichier.txt.gz | extrait le fichier fichier.txt |
329 Doublon. => | gunzip fichier.txt.gz | extrait le fichier fichier.txt |
329 Mot inconnu : txt => | gunzip fichier.txt.gz | extrait le fichier fichier.txt |

332 Mot inconnu : bzip2 => == bzip2 ==

334 Mot inconnu : bzip2 => L'utilitaire bzip2 offre (en général) un meilleur taux de compression que gzip, mais au coût d'un temps de compression et décompression plus élevé.
334 Mot inconnu : gzip => L'utilitaire bzip2 offre (en général) un meilleur taux de compression que gzip, mais au coût d'un temps de compression et décompression plus élevé.

336 Mot inconnu : bzip2 => | bzip2 fichier.txt | crée le fichier fichier.txt.bz2 |
336 Mot inconnu : txt => | bzip2 fichier.txt | crée le fichier fichier.txt.bz2 |
336 Doublon. => | bzip2 fichier.txt | crée le fichier fichier.txt.bz2 |

337 Mot inconnu : bunzip2 => | bunzip2 fichier.txt.bz2 | décompresse le fichier fichier.txt.bz2.  |
337 Doublon. => | bunzip2 fichier.txt.bz2 | décompresse le fichier fichier.txt.bz2.  |
337 Espace(s) surnuméraire(s) à supprimer. => | bunzip2 fichier.txt.bz2 | décompresse le fichier fichier.txt.bz2.  |

341 Il manque un espace insécable. => ==== Besoin d'aide : La commande man ===

343 Guillemets typographiques ouvrants. => La plupart des commandes ont une page de manuel qui donne une description de leurs utilisations plus ou moins détaillées, parfois utiles, parfois obscures. Certains disent qu'elles ont été appelées "man pages", parce qu'elles ne s'adressent qu'aux vrais Hommes.
343 Guillemets typographiques fermants. => La plupart des commandes ont une page de manuel qui donne une description de leurs utilisations plus ou moins détaillées, parfois utiles, parfois obscures. Certains disent qu'elles ont été appelées "man pages", parce qu'elles ne s'adressent qu'aux vrais Hommes.

345 Il manque un espace insécable. => Exemple:

346 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   man ls
346 Mot inconnu : ls =>   man ls

347 Mot inconnu : ls => affiche la page de manuel pour la commande ls

349 Accord de nombre erroné : « man » devrait être au pluriel. => Pour obtenir des man pages en français :
349 Il manque un espace insécable. => Pour obtenir des man pages en français :

350 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get install manpages-fr
350 Mot inconnu : sudo =>   sudo apt-get install manpages-fr
350 Mot inconnu : apt-get =>   sudo apt-get install manpages-fr
350 Mot inconnu : install =>   sudo apt-get install manpages-fr
350 Mot inconnu : manpages-fr =>   sudo apt-get install manpages-fr

353 Mot inconnu : Vi => ==== Commandes de base de l'éditeur Vi ====

357 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   vi nom_du_fichier
357 Mot inconnu : vi =>   vi nom_du_fichier
357 Mot inconnu : nom_du_fichier =>   vi nom_du_fichier

361 Guillemets typographiques ouvrants. => ''i'' :    **i**nsère avant le curseur\\
361 Guillemets typographiques fermants. => ''i'' :    **i**nsère avant le curseur\\
361 Il manque un espace insécable. => ''i'' :    **i**nsère avant le curseur\\
361 Espace(s) surnuméraire(s) à supprimer. => ''i'' :    **i**nsère avant le curseur\\
361 Mot inconnu : nsère => ''i'' :    **i**nsère avant le curseur\\

363 Guillemets typographiques ouvrants. => ''I'' :   **I**nsère au début de la ligne courante\\
363 Guillemets typographiques fermants. => ''I'' :   **I**nsère au début de la ligne courante\\
363 Il manque un espace insécable. => ''I'' :   **I**nsère au début de la ligne courante\\
363 Espace(s) surnuméraire(s) à supprimer. => ''I'' :   **I**nsère au début de la ligne courante\\
363 Mot inconnu : nsère => ''I'' :   **I**nsère au début de la ligne courante\\

365 Guillemets typographiques ouvrants. => ''a'' :    insère **a**près le curseur\\
365 Guillemets typographiques fermants. => ''a'' :    insère **a**près le curseur\\
365 Il manque un espace insécable. => ''a'' :    insère **a**près le curseur\\
365 Espace(s) surnuméraire(s) à supprimer. => ''a'' :    insère **a**près le curseur\\
365 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. => ''a'' :    insère **a**près le curseur\\

367 Guillemets typographiques ouvrants. => ''A'' :    insère à la fin de la ligne\\
367 Guillemets typographiques fermants. => ''A'' :    insère à la fin de la ligne\\
367 Il manque un espace insécable. => ''A'' :    insère à la fin de la ligne\\
367 Espace(s) surnuméraire(s) à supprimer. => ''A'' :    insère à la fin de la ligne\\

369 Guillemets typographiques ouvrants. => ''r'' :    remplace 1 caractère\\
369 Guillemets typographiques fermants. => ''r'' :    remplace 1 caractère\\
369 Il manque un espace insécable. => ''r'' :    remplace 1 caractère\\
369 Espace(s) surnuméraire(s) à supprimer. => ''r'' :    remplace 1 caractère\\

371 Guillemets typographiques ouvrants. => ''R'' :    passe en mode **R**emplacement\
371 Guillemets typographiques fermants. => ''R'' :    passe en mode **R**emplacement\
371 Il manque un espace insécable. => ''R'' :    passe en mode **R**emplacement\
371 Espace(s) surnuméraire(s) à supprimer. => ''R'' :    passe en mode **R**emplacement\

373 Il manque un espace insécable. => ''<ECHAP>'' : met fin au mode Edition (insertion ou remplacement)
373 Mot inconnu : Edition => ''<ECHAP>'' : met fin au mode Edition (insertion ou remplacement)

377 Guillemets typographiques ouvrants. => ''x'' :    efface un seul caractère\\
377 Guillemets typographiques fermants. => ''x'' :    efface un seul caractère\\
377 Il manque un espace insécable. => ''x'' :    efface un seul caractère\\
377 Espace(s) surnuméraire(s) à supprimer. => ''x'' :    efface un seul caractère\\

379 Guillemets typographiques ouvrants. => ''dd'' :   efface la ligne courante et la place dans un buffer\\
379 Mot inconnu : dd => ''dd'' :   efface la ligne courante et la place dans un buffer\\
379 Guillemets typographiques fermants. => ''dd'' :   efface la ligne courante et la place dans un buffer\\
379 Il manque un espace insécable. => ''dd'' :   efface la ligne courante et la place dans un buffer\\
379 Espace(s) surnuméraire(s) à supprimer. => ''dd'' :   efface la ligne courante et la place dans un buffer\\
379 Mot inconnu : buffer => ''dd'' :   efface la ligne courante et la place dans un buffer\\

381 Mot inconnu : dd => ''//n//dd'' :  Efface //n// lignes (n est un nombre) et les place dans le buffer\\
381 Guillemets typographiques fermants. => ''//n//dd'' :  Efface //n// lignes (n est un nombre) et les place dans le buffer\\
381 Il manque un espace insécable. => ''//n//dd'' :  Efface //n// lignes (n est un nombre) et les place dans le buffer\\
381 Espace(s) surnuméraire(s) à supprimer. => ''//n//dd'' :  Efface //n// lignes (n est un nombre) et les place dans le buffer\\
381 Mot inconnu : buffer => ''//n//dd'' :  Efface //n// lignes (n est un nombre) et les place dans le buffer\\

383 Guillemets typographiques ouvrants. => ''J'' :    déplace la ligne suivante à la fin de la ligne courante (effacement des caractères de retour chariot)
383 Guillemets typographiques fermants. => ''J'' :    déplace la ligne suivante à la fin de la ligne courante (effacement des caractères de retour chariot)
383 Il manque un espace insécable. => ''J'' :    déplace la ligne suivante à la fin de la ligne courante (effacement des caractères de retour chariot)
383 Espace(s) surnuméraire(s) à supprimer. => ''J'' :    déplace la ligne suivante à la fin de la ligne courante (effacement des caractères de retour chariot)

387 Guillemets typographiques ouvrants. => ''u '' :   annule la dernière commande
387 Guillemets isolés. => ''u '' :   annule la dernière commande
387 Il manque un espace insécable. => ''u '' :   annule la dernière commande
387 Espace(s) surnuméraire(s) à supprimer. => ''u '' :   annule la dernière commande

391 Guillemets typographiques ouvrants. => ''yy'' :   copie la ligne courante dans le buffer
391 Mot inconnu : yy => ''yy'' :   copie la ligne courante dans le buffer
391 Guillemets typographiques fermants. => ''yy'' :   copie la ligne courante dans le buffer
391 Il manque un espace insécable. => ''yy'' :   copie la ligne courante dans le buffer
391 Espace(s) surnuméraire(s) à supprimer. => ''yy'' :   copie la ligne courante dans le buffer
391 Mot inconnu : buffer => ''yy'' :   copie la ligne courante dans le buffer

393 Mot inconnu : yy => ''//n//yy'' :  copie //n// lignes dans le buffer (n est un nombre)
393 Guillemets typographiques fermants. => ''//n//yy'' :  copie //n// lignes dans le buffer (n est un nombre)
393 Il manque un espace insécable. => ''//n//yy'' :  copie //n// lignes dans le buffer (n est un nombre)
393 Espace(s) surnuméraire(s) à supprimer. => ''//n//yy'' :  copie //n// lignes dans le buffer (n est un nombre)
393 Mot inconnu : buffer => ''//n//yy'' :  copie //n// lignes dans le buffer (n est un nombre)

395 Guillemets typographiques ouvrants. => ''p'' :    colle le contenu du buffer après la ligne courante
395 Guillemets typographiques fermants. => ''p'' :    colle le contenu du buffer après la ligne courante
395 Il manque un espace insécable. => ''p'' :    colle le contenu du buffer après la ligne courante
395 Espace(s) surnuméraire(s) à supprimer. => ''p'' :    colle le contenu du buffer après la ligne courante
395 Mot inconnu : buffer => ''p'' :    colle le contenu du buffer après la ligne courante

398 Guillemets typographiques ouvrants. => ''P'' :    colle le contenu du buffer avant la ligne courante
398 Guillemets typographiques fermants. => ''P'' :    colle le contenu du buffer avant la ligne courante
398 Il manque un espace insécable. => ''P'' :    colle le contenu du buffer avant la ligne courante
398 Espace(s) surnuméraire(s) à supprimer. => ''P'' :    colle le contenu du buffer avant la ligne courante
398 Mot inconnu : buffer => ''P'' :    colle le contenu du buffer avant la ligne courante

402 Guillemets typographiques ouvrants. => ''gg'' :   va en haut de la page
402 Mot inconnu : gg => ''gg'' :   va en haut de la page
402 Guillemets typographiques fermants. => ''gg'' :   va en haut de la page
402 Il manque un espace insécable. => ''gg'' :   va en haut de la page
402 Espace(s) surnuméraire(s) à supprimer. => ''gg'' :   va en haut de la page

404 Guillemets typographiques ouvrants. => ''G'' :  va en bas de la page
404 Guillemets typographiques fermants. => ''G'' :  va en bas de la page
404 Il manque un espace insécable. => ''G'' :  va en bas de la page
404 Espace(s) surnuméraire(s) à supprimer. => ''G'' :  va en bas de la page

406 Guillemets typographiques fermants. => '':n'' :   positionne le curseur à la ligne n
406 Il manque un espace insécable. => '':n'' :   positionne le curseur à la ligne n
406 Espace(s) surnuméraire(s) à supprimer. => '':n'' :   positionne le curseur à la ligne n

408 Il manque un espace insécable. => '':$'' :   positionne le curseur à la fin de la ligne
408 Espace(s) surnuméraire(s) à supprimer. => '':$'' :   positionne le curseur à la fin de la ligne

410 Guillemets typographiques fermants. => ''^g'' :   affiche le numéro de la ligne
410 Il manque un espace insécable. => ''^g'' :   affiche le numéro de la ligne
410 Espace(s) surnuméraire(s) à supprimer. => ''^g'' :   affiche le numéro de la ligne

412 Guillemets typographiques ouvrants. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...
412 Il manque un espace. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...
412 Il manque un espace. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...
412 Guillemets typographiques fermants. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...
412 Il manque un espace insécable. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...
412 Il manque un espace insécable. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...
412 Typographie : points de suspension. Utilisez le caractère dédié. => ''h,j,k,l'' : respectivement gauche, bas, haut et droite ; les flèches de direction fonctionnent aussi...

416 Guillemets typographiques fermants. => ''/chaîne'': recherche "chaîne". ''n'' permet le passage à l'occurrence suivante. ''#'' permet de passage à l'occurrence précédente.
416 Guillemets typographiques ouvrants. => ''/chaîne'': recherche "chaîne". ''n'' permet le passage à l'occurrence suivante. ''#'' permet de passage à l'occurrence précédente.
416 Guillemets typographiques fermants. => ''/chaîne'': recherche "chaîne". ''n'' permet le passage à l'occurrence suivante. ''#'' permet de passage à l'occurrence précédente.
416 Guillemets typographiques ouvrants. => ''/chaîne'': recherche "chaîne". ''n'' permet le passage à l'occurrence suivante. ''#'' permet de passage à l'occurrence précédente.
416 Guillemets typographiques fermants. => ''/chaîne'': recherche "chaîne". ''n'' permet le passage à l'occurrence suivante. ''#'' permet de passage à l'occurrence précédente.

424 Mot inconnu : n1 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Il manque un espace. => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : n2 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : chaîne1 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : chaîne2 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Doublon. => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Il manque un espace insécable. => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Espace(s) surnuméraire(s) à supprimer. => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : chaîne1 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : chaîne2 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : n1 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : n2 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : lobal => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Espace(s) surnuméraire(s) à supprimer. => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : chaîne1 => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.
424 Mot inconnu : onfirm => '':n1,n2:s/chaîne1/chaîne2/[g][c]'' :      substitue chaîne1 pour chaîne2 sur les lignes n1 à n2. Si g est indiqué (**g**lobal),  toutes les références de chaîne1 sont remplacées, sinon seule la première référence est remplacée. Si c est indiqué (**c**onfirm), une confirmation sera demandée avant chaque modification.

426 Il manque un espace insécable. => ''^'' : méta-caractère de début de ligne

428 Guillemets typographiques fermants. => ''.'' : méta-caractère, vrai sur n'importe quel unique caractère sauf retour chariot
428 Il manque un espace insécable. => ''.'' : méta-caractère, vrai sur n'importe quel unique caractère sauf retour chariot

430 Il manque un espace insécable. => ''$'' : méta-caractère de fin de ligne

432 Guillemets typographiques ouvrants. => Ces caractères, tout comme les autres caractères spéciaux, peuvent être 'échappés' à l'aide du \ :
432 Guillemets typographiques fermants. => Ces caractères, tout comme les autres caractères spéciaux, peuvent être 'échappés' à l'aide du \ :
432 Il manque un espace insécable. => Ces caractères, tout comme les autres caractères spéciaux, peuvent être 'échappés' à l'aide du \ :

433 Mot inconnu : STRIM100 => c'est-à-dire pour capturer la chaîne de caractères "/usr/STRIM100/SOFT", il faut utiliser l'expression régulière "\/usr\/STRIM100\/SOFT" 
433 Guillemets typographiques fermants. => c'est-à-dire pour capturer la chaîne de caractères "/usr/STRIM100/SOFT", il faut utiliser l'expression régulière "\/usr\/STRIM100\/SOFT" 
433 Espace(s) en fin de ligne à supprimer. => c'est-à-dire pour capturer la chaîne de caractères "/usr/STRIM100/SOFT", il faut utiliser l'expression régulière "\/usr\/STRIM100\/SOFT" 

437 Il manque un espace insécable. => Exemples:

439 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   :1,$:s/chien/chat/g

441 Guillemets typographiques ouvrants. => Remplace 'chien' par 'chat', pour chaque occurrence du fichier - de la ligne 1 à la fin du fichier ($)
441 Guillemets typographiques fermants. => Remplace 'chien' par 'chat', pour chaque occurrence du fichier - de la ligne 1 à la fin du fichier ($)
441 Guillemets typographiques ouvrants. => Remplace 'chien' par 'chat', pour chaque occurrence du fichier - de la ligne 1 à la fin du fichier ($)
441 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Remplace 'chien' par 'chat', pour chaque occurrence du fichier - de la ligne 1 à la fin du fichier ($)

443 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   :23,25:s/chien/chat/

445 Guillemets typographiques ouvrants. => Remplace 'chien' par 'chat' des lignes 23 à 25. Une fois par ligne, dès la première apparition.
445 Guillemets typographiques fermants. => Remplace 'chien' par 'chat' des lignes 23 à 25. Une fois par ligne, dès la première apparition.
445 Guillemets typographiques ouvrants. => Remplace 'chien' par 'chat' des lignes 23 à 25. Une fois par ligne, dès la première apparition.
445 Guillemets typographiques fermants. => Remplace 'chien' par 'chat' des lignes 23 à 25. Une fois par ligne, dès la première apparition.

452 Espace(s) surnuméraire(s) à supprimer. => Appuyer sur  <ECHAP> pour sortir du mode édition

454 Guillemets typographiques fermants. => '':w'' :              enregistre le fichier (**W**rite)
454 Il manque un espace insécable. => '':w'' :              enregistre le fichier (**W**rite)
454 Espace(s) surnuméraire(s) à supprimer. => '':w'' :              enregistre le fichier (**W**rite)

456 Il manque un espace. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'
456 Guillemets typographiques fermants. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'
456 Il manque un espace insécable. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'
456 Espace(s) surnuméraire(s) à supprimer. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'
456 Guillemets typographiques ouvrants. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'
456 Il manque un espace. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'
456 Guillemets typographiques fermants. => '':w nouveau.fichier'' :       enregistre le fichier sous le nom 'nouveau.fichier'

458 Mot inconnu : wq => '':wq'' :              enregistre le fichier et quitte le programme
458 Guillemets typographiques fermants. => '':wq'' :              enregistre le fichier et quitte le programme
458 Il manque un espace insécable. => '':wq'' :              enregistre le fichier et quitte le programme
458 Espace(s) surnuméraire(s) à supprimer. => '':wq'' :              enregistre le fichier et quitte le programme

460 Guillemets typographiques fermants. => '':q'' :              quitte
460 Il manque un espace insécable. => '':q'' :              quitte
460 Espace(s) surnuméraire(s) à supprimer. => '':q'' :              quitte

462 Il manque un espace insécable. => '':q!''  :            quitte sans enregistrer les changements
462 Guillemets typographiques fermants. => '':q!''  :            quitte sans enregistrer les changements
462 Il manque un espace insécable. => '':q!''  :            quitte sans enregistrer les changements
462 Espace(s) surnuméraire(s) à supprimer. => '':q!''  :            quitte sans enregistrer les changements

464 Guillemets typographiques fermants. => '':e fichier'' :       ouvre 'fichier' pour l'édition
464 Il manque un espace insécable. => '':e fichier'' :       ouvre 'fichier' pour l'édition
464 Espace(s) surnuméraire(s) à supprimer. => '':e fichier'' :       ouvre 'fichier' pour l'édition
464 Guillemets typographiques ouvrants. => '':e fichier'' :       ouvre 'fichier' pour l'édition
464 Guillemets typographiques fermants. => '':e fichier'' :       ouvre 'fichier' pour l'édition

466 Mot inconnu : number => '':set number'' :      affiche les numéros de ligne
466 Guillemets typographiques fermants. => '':set number'' :      affiche les numéros de ligne
466 Il manque un espace insécable. => '':set number'' :      affiche les numéros de ligne
466 Espace(s) surnuméraire(s) à supprimer. => '':set number'' :      affiche les numéros de ligne

468 Mot inconnu : nonumber => '':set nonumber'' :    cache les numéros de ligne
468 Guillemets typographiques fermants. => '':set nonumber'' :    cache les numéros de ligne
468 Il manque un espace insécable. => '':set nonumber'' :    cache les numéros de ligne
468 Espace(s) surnuméraire(s) à supprimer. => '':set nonumber'' :    cache les numéros de ligne

470 Mot inconnu : noai => '':set noai'' :        désactive l'auto-indentation
470 Guillemets typographiques fermants. => '':set noai'' :        désactive l'auto-indentation
470 Il manque un espace insécable. => '':set noai'' :        désactive l'auto-indentation
470 Espace(s) surnuméraire(s) à supprimer. => '':set noai'' :        désactive l'auto-indentation

472 Mot inconnu : FAQs => ===== FAQs =====

481 Il manque un espace insécable. => Le document original a été rédigé à l'aide de Vim. Vim est la meilleure version du seul véritable éditeur de texte : vi (sans compter emacs, bien entendu ;-) )
481 Mot inconnu : vi => Le document original a été rédigé à l'aide de Vim. Vim est la meilleure version du seul véritable éditeur de texte : vi (sans compter emacs, bien entendu ;-) )
481 Mot inconnu : emacs => Le document original a été rédigé à l'aide de Vim. Vim est la meilleure version du seul véritable éditeur de texte : vi (sans compter emacs, bien entendu ;-) )
481 Il manque un espace insécable. => Le document original a été rédigé à l'aide de Vim. Vim est la meilleure version du seul véritable éditeur de texte : vi (sans compter emacs, bien entendu ;-) )
481 Pas d’espace avant ce signe. => Le document original a été rédigé à l'aide de Vim. Vim est la meilleure version du seul véritable éditeur de texte : vi (sans compter emacs, bien entendu ;-) )

483 Formatage des grands nombres. => Copyright (c)  2000,2001  C R Johnson
483 Espace(s) surnuméraire(s) à supprimer. => Copyright (c)  2000,2001  C R Johnson

484 Mot inconnu : License => Permission vous est donnée de copier, distribuer et/ou modifier ces documents selon les termes de la Licence GNU Free Documentation License, Version 1.1 ou ultérieure publiée par la Free Software Foundation ;  avec comme la préface section invariante, pas de couverture ni quatrième de couverture. Consultez la GNU Free Documentation License : [[http://www.gnu.org/licenses/fdl.html|GFDL]].
484 Mot inconnu : Foundation => Permission vous est donnée de copier, distribuer et/ou modifier ces documents selon les termes de la Licence GNU Free Documentation License, Version 1.1 ou ultérieure publiée par la Free Software Foundation ;  avec comme la préface section invariante, pas de couverture ni quatrième de couverture. Consultez la GNU Free Documentation License : [[http://www.gnu.org/licenses/fdl.html|GFDL]].
484 Il manque un espace insécable. => Permission vous est donnée de copier, distribuer et/ou modifier ces documents selon les termes de la Licence GNU Free Documentation License, Version 1.1 ou ultérieure publiée par la Free Software Foundation ;  avec comme la préface section invariante, pas de couverture ni quatrième de couverture. Consultez la GNU Free Documentation License : [[http://www.gnu.org/licenses/fdl.html|GFDL]].
484 Espace(s) surnuméraire(s) à supprimer. => Permission vous est donnée de copier, distribuer et/ou modifier ces documents selon les termes de la Licence GNU Free Documentation License, Version 1.1 ou ultérieure publiée par la Free Software Foundation ;  avec comme la préface section invariante, pas de couverture ni quatrième de couverture. Consultez la GNU Free Documentation License : [[http://www.gnu.org/licenses/fdl.html|GFDL]].
484 Mot inconnu : License => Permission vous est donnée de copier, distribuer et/ou modifier ces documents selon les termes de la Licence GNU Free Documentation License, Version 1.1 ou ultérieure publiée par la Free Software Foundation ;  avec comme la préface section invariante, pas de couverture ni quatrième de couverture. Consultez la GNU Free Documentation License : [[http://www.gnu.org/licenses/fdl.html|GFDL]].
484 Il manque un espace insécable. => Permission vous est donnée de copier, distribuer et/ou modifier ces documents selon les termes de la Licence GNU Free Documentation License, Version 1.1 ou ultérieure publiée par la Free Software Foundation ;  avec comme la préface section invariante, pas de couverture ni quatrième de couverture. Consultez la GNU Free Documentation License : [[http://www.gnu.org/licenses/fdl.html|GFDL]].
