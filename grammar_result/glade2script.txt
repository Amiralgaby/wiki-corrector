
4 Mot inconnu : Glade2script [[6:18]] => ======Glade2script====== <|> glade2script

6 Mot inconnu : pygtk-glade [[12:23]] => Surcouche **pygtk-glade** pour gestion interface graphique depuis un script **bash**, **python** ou autre. <|> pygtk-glade

12 Mot inconnu : glade [[27:32]] => L'interface sera créée via glade­3 (projet libglade), un script bash, python ou autre, portant le même nom que le glade, y sera associé. <|> glade
12 Mot inconnu : libglade [[43:51]] => L'interface sera créée via glade­3 (projet libglade), un script bash, python ou autre, portant le même nom que le glade, y sera associé. <|> libglade
12 Mot inconnu : glade [[114:119]] => L'interface sera créée via glade­3 (projet libglade), un script bash, python ou autre, portant le même nom que le glade, y sera associé. <|> glade

15 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[0:12]] => glade2script, écrit en python, sert de passerelle entre le script et l'interface GTK. Il est connecté au stdout du script (chaque echo), traduit et envoie les commandes à GTK. <|> glade2script => suggestions : ['Glade2script']
15 Mot inconnu : glade2script [[0:12]] => glade2script, écrit en python, sert de passerelle entre le script et l'interface GTK. Il est connecté au stdout du script (chaque echo), traduit et envoie les commandes à GTK. <|> glade2script
15 Mot inconnu : stdout [[105:111]] => glade2script, écrit en python, sert de passerelle entre le script et l'interface GTK. Il est connecté au stdout du script (chaque echo), traduit et envoie les commandes à GTK. <|> stdout
15 Mot inconnu : echo [[130:134]] => glade2script, écrit en python, sert de passerelle entre le script et l'interface GTK. Il est connecté au stdout du script (chaque echo), traduit et envoie les commandes à GTK. <|> echo
17 Mot inconnu : FIFO [[78:82]] => Pour envoyer des informations depuis GTK au script, il écrit dans un fichier (FIFO), sur lequel le script est connecté et en récupère les données pour les interpréter sous forme d'appel à des fonctions ou de variables chargées dans l'environnement. <|> fifo

19 Mot inconnu : callbacks [[66:75]] => Pour récupérer la valeur d'un widget, 2 solutions, soit via les **callbacks** (qui appellent nos fonctions avec arguments, à renseigner dans le **glade**) ou via les commandes **glade2script** qui agissent sur l'interface depuis notre script. <|> callbacks
19 Mot inconnu : glade [[146:151]] => Pour récupérer la valeur d'un widget, 2 solutions, soit via les **callbacks** (qui appellent nos fonctions avec arguments, à renseigner dans le **glade**) ou via les commandes **glade2script** qui agissent sur l'interface depuis notre script. <|> glade
19 Mot inconnu : glade2script [[178:190]] => Pour récupérer la valeur d'un widget, 2 solutions, soit via les **callbacks** (qui appellent nos fonctions avec arguments, à renseigner dans le **glade**) ou via les commandes **glade2script** qui agissent sur l'interface depuis notre script. <|> glade2script

21 Mot inconnu : __Les [[0:5]] => __Les commandes seront du type :__ <|> __les
21 Mot inconnu : __ [[32:34]] => __Les commandes seront du type :__ <|> __

33 Mot inconnu : glade2script [[27:39]] => Il y a 2 façons d'utiliser glade2script: <|> glade2script

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Dans le script principal, on appelle l'interface graphique et en sortie, on récupère les variables des différents <|>   => suggestions : ['']

38 Mot inconnu : zenity [[48:54]] => widgets référencés en argument (comme le fait **zenity** par exemple ) <|> zenity
38 Pas d’espace avant ce signe. [[68:70]] => widgets référencés en argument (comme le fait **zenity** par exemple ) <|>  ) => suggestions : [')']

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Des traitements seront réalisés en réaction à l'interface, ce code se trouvera dans le script associé au glade, l'interface ne devra pas être fermer pour pouvoir récupérer les données saisies. <|>   => suggestions : ['']
48 Mot inconnu : glade [[106:111]] =>  Des traitements seront réalisés en réaction à l'interface, ce code se trouvera dans le script associé au glade, l'interface ne devra pas être fermer pour pouvoir récupérer les données saisies. <|> glade
48 Après “être”, le verbe ne devrait pas être à l’infinitif. [[143:149]] =>  Des traitements seront réalisés en réaction à l'interface, ce code se trouvera dans le script associé au glade, l'interface ne devra pas être fermer pour pouvoir récupérer les données saisies. <|> fermer => suggestions : ['fermées', 'fermés', 'fermé', 'fermée']

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Pour lancer la machine, il suffit de créer un petit script où se trouve la commande glade2script. <|>   => suggestions : ['']
49 Mot inconnu : glade2script [[85:97]] =>  Pour lancer la machine, il suffit de créer un petit script où se trouve la commande glade2script. <|> glade2script

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  On peut mixer les deux, utilisation dynamique et récupération des variables en sortie quand même, selon les besoins. <|>   => suggestions : ['']

52 Mot inconnu : ca [[35:37]] => Cela peut paraître compliqué, mais ca ne l'est pas du tout à l'usage, le petit exemple ci-dessous vous le prouvera. <|> ca

56 Mot inconnu : glade [[48:53]] => Il faut d'abord créer la boite de dialogue dans glade. <|> glade

57 Mot inconnu : clicked [[56:63]] => Dans les signaux des boutons, renseigner pour le signal clicked => on_clicked <|> clicked
57 Mot inconnu : on_clicked [[67:77]] => Dans les signaux des boutons, renseigner pour le signal clicked => on_clicked <|> on_clicked

58 Mot inconnu : btn_ok [[42:48]] => Donner un nom explicite aux boutons, ici, btn_ok, btn_no <|> btn_ok
58 Mot inconnu : btn_no [[50:56]] => Donner un nom explicite aux boutons, ici, btn_ok, btn_no <|> btn_no

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Le script associé au glade et portant le même nom. <|>   => suggestions : ['']
61 Mot inconnu : glade [[22:27]] =>  Le script associé au glade et portant le même nom. <|> glade

120 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Les * combinés avec les commandes HIZO peuvent poser problèmes, elles seront interprétées dans le shell bash. <|>   => suggestions : ['']
120 Mot inconnu : HIZO [[37:41]] =>  - Les * combinés avec les commandes HIZO peuvent poser problèmes, elles seront interprétées dans le shell bash. <|> hizo

121 Il manque un espace à côté du tiret. [[24:26]] => Indiquer la commande set -f avant la boucle de fin pour y remedier, set +f pour inverser le comportement. <|>  - => suggestions : [' – ', ' — ']
121 Mot inconnu : remedier [[58:66]] => Indiquer la commande set -f avant la boucle de fin pour y remedier, set +f pour inverser le comportement. <|> remedier

123 Mot inconnu : Glade [[4:9]] => ====Glade:==== <|> glade

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Les widgets qui doivent être modifiés, ou dont les valeurs seront récupérées via le script associé, devront commencer par _ pour être référencés. <|>   => suggestions : ['']

125 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Les windows, statusbars, eventbox, treeviews et GtkAboutDialog n'ont pas besoin d'être référencés. <|>   => suggestions : ['']
125 Mot inconnu : statusbars [[16:26]] =>  - Les windows, statusbars, eventbox, treeviews et GtkAboutDialog n'ont pas besoin d'être référencés. <|> statusbars
125 Mot inconnu : eventbox [[28:36]] =>  - Les windows, statusbars, eventbox, treeviews et GtkAboutDialog n'ont pas besoin d'être référencés. <|> eventbox
125 Mot inconnu : treeviews [[38:47]] =>  - Les windows, statusbars, eventbox, treeviews et GtkAboutDialog n'ont pas besoin d'être référencés. <|> treeviews
125 Mot inconnu : GtkAboutDialog [[51:65]] =>  - Les windows, statusbars, eventbox, treeviews et GtkAboutDialog n'ont pas besoin d'être référencés. <|> gtkaboutdialog

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Par défaut, la visibilité d'une fenêtre est sur non, basculer cette option pour la voir au lancement de votre soft. <|>   => suggestions : ['']

129 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - AboutDialog: Il faut que le nom du logiciel soit le même que le nom de la fenêtre. <|>   => suggestions : ['']
129 Mot inconnu : AboutDialog [[3:14]] =>  - AboutDialog: Il faut que le nom du logiciel soit le même que le nom de la fenêtre. <|> aboutdialog

131 Mot inconnu : glade2script [[10:22]] => Commandes glade2script: <|> glade2script

132 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Les commandes GET@ et SET@ s'utilisent avec des commandes pygtk, c'est pour bien les différencier qu'elles n'ont qu'un seul @ <|>   => suggestions : ['']
132 Mot inconnu : GET [[17:20]] =>  - Les commandes GET@ et SET@ s'utilisent avec des commandes pygtk, c'est pour bien les différencier qu'elles n'ont qu'un seul @ <|> get
132 Mot inconnu : pygtk [[61:66]] =>  - Les commandes GET@ et SET@ s'utilisent avec des commandes pygtk, c'est pour bien les différencier qu'elles n'ont qu'un seul @ <|> pygtk

135 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Il faut utiliser l'unicode pour représenter le & <|>   => suggestions : ['']
135 Mot inconnu : unicode [[22:29]] =>  - Il faut utiliser l'unicode pour représenter le & <|> unicode

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Les sauts de ligne s'écrivent \\n s'ils sont encadrés par des " et \n s'ils sont encadrés par des ' <|>   => suggestions : ['']
136 Guillemets isolés. [[64:67]] =>  - Les sauts de ligne s'écrivent \\n s'ils sont encadrés par des " et \n s'ils sont encadrés par des ' <|>  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Tous les echo du script associé passeront par le script python qui gère GTK(glade2script), les @ ou les echo sans arguments feront planter le soft. <|>   => suggestions : ['']
137 Mot inconnu : echo [[12:16]] =>  - Tous les echo du script associé passeront par le script python qui gère GTK(glade2script), les @ ou les echo sans arguments feront planter le soft. <|> echo
137 Il manque un espace avant la parenthèse. [[78:79]] =>  - Tous les echo du script associé passeront par le script python qui gère GTK(glade2script), les @ ou les echo sans arguments feront planter le soft. <|> ( => suggestions : [' (']
137 Mot inconnu : glade2script [[79:91]] =>  - Tous les echo du script associé passeront par le script python qui gère GTK(glade2script), les @ ou les echo sans arguments feront planter le soft. <|> glade2script
137 Mot inconnu : echo [[107:111]] =>  - Tous les echo du script associé passeront par le script python qui gère GTK(glade2script), les @ ou les echo sans arguments feront planter le soft. <|> echo

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - En cas d'utilisation statique, chaque echo sera également évalué dans l'environnement, donc plantage assuré en cas d'eval :) <|>   => suggestions : ['']
138 Mot inconnu : echo [[41:45]] =>  - En cas d'utilisation statique, chaque echo sera également évalué dans l'environnement, donc plantage assuré en cas d'eval :) <|> echo
138 Mot inconnu : eval [[120:124]] =>  - En cas d'utilisation statique, chaque echo sera également évalué dans l'environnement, donc plantage assuré en cas d'eval :) <|> eval

139 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - En cas d'utilisation de sous-processus et la sortie via les callbacks gtk_widget_destroy, il faudra ajouter un echo après la boucle finale pour éviter le gel de l'application. <|>   => suggestions : ['']
139 Mot inconnu : callbacks [[63:72]] =>  - En cas d'utilisation de sous-processus et la sortie via les callbacks gtk_widget_destroy, il faudra ajouter un echo après la boucle finale pour éviter le gel de l'application. <|> callbacks
139 Mot inconnu : gtk_widget_destroy [[73:91]] =>  - En cas d'utilisation de sous-processus et la sortie via les callbacks gtk_widget_destroy, il faudra ajouter un echo après la boucle finale pour éviter le gel de l'application. <|> gtk_widget_destroy
139 Mot inconnu : echo [[114:118]] =>  - En cas d'utilisation de sous-processus et la sortie via les callbacks gtk_widget_destroy, il faudra ajouter un echo après la boucle finale pour éviter le gel de l'application. <|> echo

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  - Pour un affichage en console sans passer par le script python, il suffit de rediriger vers un autre fd. <|>   => suggestions : ['']
140 Mot inconnu : fd [[103:105]] =>  - Pour un affichage en console sans passer par le script python, il suffit de rediriger vers un autre fd. <|> fd

146 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[8:9]] => <note>**A savoir :** <|> a => suggestions : ['À']

147 Mot inconnu : PID [[3:6]] => Le PID de glade2script et du terminal sont accessibles via une commande GET@ <|> pid
147 Mot inconnu : glade2script [[10:22]] => Le PID de glade2script et du terminal sont accessibles via une commande GET@ <|> glade2script
147 Mot inconnu : GET [[72:75]] => Le PID de glade2script et du terminal sont accessibles via une commande GET@ <|> get

148 Mot inconnu : GET [[0:3]] => GET@glade2script_PID et GET@terminal_PID</note> <|> get
148 Mot inconnu : GET [[24:27]] => GET@glade2script_PID et GET@terminal_PID</note> <|> get
150 Mot inconnu : callback [[19:27]] => ====Signaux Gtk et callback==== <|> callback

152 Mot inconnu : glade [[10:15]] => **Dans le glade**, pour chaque widget auquel vous voulez associer une action, il faut renseigner un signal. Ce signal, auquel on aura assigné un callback, lancera une fonction du script associé correspondant au nom du widget, avec un argument. <|> glade
152 Mot inconnu : callback [[145:153]] => **Dans le glade**, pour chaque widget auquel vous voulez associer une action, il faut renseigner un signal. Ce signal, auquel on aura assigné un callback, lancera une fonction du script associé correspondant au nom du widget, avec un argument. <|> callback

154 Mot inconnu : callbacks [[9:18]] => Quelques callbacks n'ont pas de retour, ils agissent directement sur l'interface. <|> callbacks

156 Accord de genre erroné avec « utilisateurs ». [[37:44]] => Il peut être utile de renseigner les données utilisateurs. Le widget renseigné dans ces données, lancera le callback. <|> données => suggestions : ['donnés']
156 Accord de genre erroné entre « données » et « utilisateurs ». [[45:57]] => Il peut être utile de renseigner les données utilisateurs. Le widget renseigné dans ces données, lancera le callback. <|> utilisateurs => suggestions : ['utilisatrices']
156 Mot inconnu : callback [[108:116]] => Il peut être utile de renseigner les données utilisateurs. Le widget renseigné dans ces données, lancera le callback. <|> callback

157 Accord de genre erroné avec « utilisateur ». [[33:40]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> données => suggestions : ['donnés']
157 Accord de genre erroné avec « données ». [[41:52]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> utilisateur => suggestions : ['utilisatrice']
157 Mot inconnu : entry [[63:68]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> entry
157 Il manque un espace. [[95:101]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> signal => suggestions : [' signal']
157 Mot inconnu : clicked [[102:109]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> clicked
157 Mot inconnu : callback [[111:119]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> callback
157 Mot inconnu : on_entry [[120:128]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> on_entry
157 Mot inconnu : entry [[153:158]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> entry
157 Mot inconnu : entry [[277:282]] => Par exemple, si on renseigne, en données utilisateur un widget entry sur le signal d'un bouton,signal clicked, callback on_entry, c'est la fonction de l'entry qui sera lancée avec son contenu en argument lorsque le bouton sera enfoncé. En gros, le bouton se fait passer pour l'entry. <|> entry

158 Accord de genre erroné avec « utilisateurs ». [[4:11]] => Les données utilisateurs sont aussi nécessaire au fonctionnement des callbacks qui agissent directement sur l'interface. <|> données => suggestions : ['donnés']
158 Accord de genre erroné entre « données » et « utilisateurs ». [[12:24]] => Les données utilisateurs sont aussi nécessaire au fonctionnement des callbacks qui agissent directement sur l'interface. <|> utilisateurs => suggestions : ['utilisatrices']
158 Accord erroné : “données” et “nécessaire” ne sont pas accordés. Mettez au pluriel. [[36:46]] => Les données utilisateurs sont aussi nécessaire au fonctionnement des callbacks qui agissent directement sur l'interface. <|> nécessaire => suggestions : ['nécessaires']
158 Mot inconnu : callbacks [[69:78]] => Les données utilisateurs sont aussi nécessaire au fonctionnement des callbacks qui agissent directement sur l'interface. <|> callbacks

160 Mot inconnu : Callbacks [[3:12]] => ===Callbacks qui lancent une fonction avec argument:=== <|> callbacks

162 Mot inconnu : Callbacks [[3:12]] => ===Callbacks sans retour:(pour modifier interface directement)=== <|> callbacks

164 Mot inconnu : callback [[11:19]] => ===Détails callback=== <|> callback

165 Accord avec “sont”. [[20:22]] => Les signaux, lorsqu'il sont renseignés, ne sont là que pour l'exemple, d'autres peuvent être utilisés. <|> il => suggestions : ['ils']
165 Conjugaison erronée. Accord avec “il”. Le verbe devrait être à la 3ᵉ personne du singulier. [[23:27]] => Les signaux, lorsqu'il sont renseignés, ne sont là que pour l'exemple, d'autres peuvent être utilisés. <|> sont => suggestions : ['est']

168 Mot inconnu : pyGtk [[14:19]] => ====Commandes pyGtk==== <|> pygtk

169 Mot inconnu : pyGtk [[14:19]] => Les commandes pyGtk agissent sur un widget, modifient sa valeur, sa taille, etc,etc ... <|> pygtk
169 Il manque un espace. [[80:83]] => Les commandes pyGtk agissent sur un widget, modifient sa valeur, sa taille, etc,etc ... <|> etc => suggestions : [' etc']
169 Typographie : points de suspension. Utilisez le caractère dédié. [[84:87]] => Les commandes pyGtk agissent sur un widget, modifient sa valeur, sa taille, etc,etc ... <|> ... => suggestions : ['…']

170 Mot inconnu : pyGTK [[41:46]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> pygtk
170 Mot inconnu : devhelp [[53:60]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> devhelp
170 Mot inconnu : glade [[77:82]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> glade
170 Mot inconnu : Lucid [[88:93]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> lucid
170 Mot inconnu : The [[95:98]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> the
170 Mot inconnu : Class [[103:108]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> class
170 Mot inconnu : Reference [[109:118]] => Vous trouverez ces commandes dans la doc pyGTK (dans devhelp, installer avec glade sous Lucid, The gtk Class Reference). <|> reference

171 Mot inconnu : glade [[105:110]] => Une grande partie de ces commandes ne nous sont pas nécessaires/disponibles. Certaines sont réglées dans glade, d'autres serait trop compliquées à l'utilisation pour être implantées. Dans la section Gtk Widget Reference, sont rassemblés les principaux widget avec leurs commandes, callback et signaux les plus utilisés. <|> glade
171 Accord avec la forme verbale “serait” : “compliquées” devrait être au singulier. [[133:144]] => Une grande partie de ces commandes ne nous sont pas nécessaires/disponibles. Certaines sont réglées dans glade, d'autres serait trop compliquées à l'utilisation pour être implantées. Dans la section Gtk Widget Reference, sont rassemblés les principaux widget avec leurs commandes, callback et signaux les plus utilisés. <|> compliquées => suggestions : ['compliquée']
171 Mot inconnu : Reference [[210:219]] => Une grande partie de ces commandes ne nous sont pas nécessaires/disponibles. Certaines sont réglées dans glade, d'autres serait trop compliquées à l'utilisation pour être implantées. Dans la section Gtk Widget Reference, sont rassemblés les principaux widget avec leurs commandes, callback et signaux les plus utilisés. <|> reference
171 Accord de nombre erroné avec « les principaux » : « widget » devrait être au pluriel. [[252:258]] => Une grande partie de ces commandes ne nous sont pas nécessaires/disponibles. Certaines sont réglées dans glade, d'autres serait trop compliquées à l'utilisation pour être implantées. Dans la section Gtk Widget Reference, sont rassemblés les principaux widget avec leurs commandes, callback et signaux les plus utilisés. <|> widget => suggestions : ['widgets']
171 Mot inconnu : callback [[281:289]] => Une grande partie de ces commandes ne nous sont pas nécessaires/disponibles. Certaines sont réglées dans glade, d'autres serait trop compliquées à l'utilisation pour être implantées. Dans la section Gtk Widget Reference, sont rassemblés les principaux widget avec leurs commandes, callback et signaux les plus utilisés. <|> callback

173 Mot inconnu : pyGtk [[26:31]] => Pour lancer les commandes pyGtk depuis le script associé, il faut passer par des commandes glade2script. <|> pygtk
173 Mot inconnu : glade2script [[91:103]] => Pour lancer les commandes pyGtk depuis le script associé, il faut passer par des commandes glade2script. <|> glade2script

175 Mot inconnu : glade2script [[14:26]] => ====Commandes glade2script==== <|> glade2script
