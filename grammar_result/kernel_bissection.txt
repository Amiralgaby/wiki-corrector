

7 Typographie : points de suspension. Utilisez le caractère dédié. [[39:42]] => Cela provient de code qui a été modifié... et comme des milliers de ligne de code sont modifiées entre deux versions successives de noyau, la détermination des lignes incriminées n'est pas toujours évidente. <|> ... => suggestions : ['…']
7 Typographie : points de suspension. Utilisez le caractère dédié. [[39:42]] => Cela provient de code qui a été modifié... et comme des milliers de ligne de code sont modifiées entre deux versions successives de noyau, la détermination des lignes incriminées n'est pas toujours évidente. <|> ... => suggestions : ['…']
7 Avec « des milliers de… », mettre au pluriel “ligne” s’il y en a bien plusieurs. [[68:73]] => Cela provient de code qui a été modifié... et comme des milliers de ligne de code sont modifiées entre deux versions successives de noyau, la détermination des lignes incriminées n'est pas toujours évidente. <|> ligne => suggestions : ['lignes']
7 Avec « des milliers de… », mettre au pluriel “ligne” s’il y en a bien plusieurs. [[68:73]] => Cela provient de code qui a été modifié... et comme des milliers de ligne de code sont modifiées entre deux versions successives de noyau, la détermination des lignes incriminées n'est pas toujours évidente. <|> ligne => suggestions : ['lignes']


9 Guillemets typographiques ouvrants. [[49:50]] => Heureusement les développeurs proposent un outil "Git bisect" qui selon le principe d'une dichotomie permet de trouver les lignes de code responsables du problème. <|> " => suggestions : ['«\xa0', '“']
9 Mot inconnu : bisect [[54:60]] => Heureusement les développeurs proposent un outil "Git bisect" qui selon le principe d'une dichotomie permet de trouver les lignes de code responsables du problème. <|> bisect
9 Mot inconnu : bisect [[54:60]] => Heureusement les développeurs proposent un outil "Git bisect" qui selon le principe d'une dichotomie permet de trouver les lignes de code responsables du problème. <|> bisect
9 Guillemets typographiques fermants. [[60:61]] => Heureusement les développeurs proposent un outil "Git bisect" qui selon le principe d'une dichotomie permet de trouver les lignes de code responsables du problème. <|> " => suggestions : ['\xa0»', '”']


11 Mot inconnu : oeuvre [[25:31]] => ===== Exemple de mise en oeuvre ===== <|> oeuvre
11 Mot inconnu : oeuvre [[25:31]] => ===== Exemple de mise en oeuvre ===== <|> oeuvre


21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


27 Mot inconnu : RC [[42:44]] => Installer et tester la **dernière version RC fonctionnelle** du noyau mainline et la **première version RC non fonctionnelle** du noyau.\\ <|> rc
27 Mot inconnu : RC [[42:44]] => Installer et tester la **dernière version RC fonctionnelle** du noyau mainline et la **première version RC non fonctionnelle** du noyau.\\ <|> rc
27 Mot inconnu : mainline [[70:78]] => Installer et tester la **dernière version RC fonctionnelle** du noyau mainline et la **première version RC non fonctionnelle** du noyau.\\ <|> mainline
27 Mot inconnu : mainline [[70:78]] => Installer et tester la **dernière version RC fonctionnelle** du noyau mainline et la **première version RC non fonctionnelle** du noyau.\\ <|> mainline
27 Mot inconnu : RC [[104:106]] => Installer et tester la **dernière version RC fonctionnelle** du noyau mainline et la **première version RC non fonctionnelle** du noyau.\\ <|> rc
27 Mot inconnu : RC [[104:106]] => Installer et tester la **dernière version RC fonctionnelle** du noyau mainline et la **première version RC non fonctionnelle** du noyau.\\ <|> rc


28 Mot inconnu : v5 [[37:39]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> v5
28 Mot inconnu : v5 [[37:39]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> v5
28 Mot inconnu : rc7 [[42:45]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> rc7
28 Mot inconnu : rc7 [[42:45]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> rc7
28 Mot inconnu : v5 [[49:51]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> v5
28 Mot inconnu : v5 [[49:51]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> v5
28 Mot inconnu : rc1 [[54:57]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> rc1
28 Mot inconnu : rc1 [[54:57]] => Dans l'exemple qui suit il s'agit de v5.8-rc7 et v5.9-rc1. <|> rc1


30 Guillemets typographiques ouvrants. [[28:29]] => Déclarer ces versions comme "good" et "bad". <|> " => suggestions : ['«\xa0', '“']
30 Guillemets typographiques fermants. [[33:34]] => Déclarer ces versions comme "good" et "bad". <|> " => suggestions : ['\xa0»', '”']
30 Guillemets typographiques ouvrants. [[38:39]] => Déclarer ces versions comme "good" et "bad". <|> " => suggestions : ['«\xa0', '“']
30 Guillemets typographiques fermants. [[42:43]] => Déclarer ces versions comme "good" et "bad". <|> " => suggestions : ['\xa0»', '”']


56 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[0:1]] => A la fin on obtient une sortie du type <|> a => suggestions : ['À']
56 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[0:1]] => A la fin on obtient une sortie du type <|> a => suggestions : ['À']

