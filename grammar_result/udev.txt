
6 Mot inconnu : UDEV [[6:10]] => ======UDEV : Comment ça marche ?====== <|> udev

10 Mot inconnu : UDEV [[53:57]] => Comme vous l'aurez compris, ceci est un tutoriel sur UDEV. Il est très complet, il explique en détail le fonctionnement de la bête. Je vous conseille de ne pas le lire en diagonale: il contient beaucoup d'informations, toutes nécessaires pour faire fonctionner correctement vos règles. <|> udev
18 Mot inconnu : devfs [[18:23]] => ====Terminologie: devfs, sysfs, nodes, etc.==== <|> devfs
18 Mot inconnu : sysfs [[25:30]] => ====Terminologie: devfs, sysfs, nodes, etc.==== <|> sysfs
18 Mot inconnu : nodes [[32:37]] => ====Terminologie: devfs, sysfs, nodes, etc.==== <|> nodes

20 Espace(s) en fin de ligne à supprimer. [[31:32]] => Voici une introduction basique.  <|>   => suggestions : ['']

32 Mot inconnu : udev [[13:17]] => Les règles //udev// sont flexibles et très puissantes. Voici quelques exemples de ce que vous pouvez faire :  <|> udev
32 Espace(s) en fin de ligne à supprimer. [[108:109]] => Les règles //udev// sont flexibles et très puissantes. Voici quelques exemples de ce que vous pouvez faire :  <|>   => suggestions : ['']
44 Espace(s) en fin de ligne à supprimer. [[35:36]] =>   * renommer les interfaces réseaux  <|>   => suggestions : ['']

47 Guillemets typographiques ouvrants. [[86:87]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> " => suggestions : ['«\xa0', '“']
47 Mot inconnu : node [[87:91]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> node
47 Guillemets typographiques fermants. [[91:92]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> " => suggestions : ['\xa0»', '”']
47 Mot inconnu : udev [[157:161]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> udev
47 Guillemets typographiques ouvrants. [[189:190]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> " => suggestions : ['«\xa0', '“']
47 Mot inconnu : node [[190:194]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> node
47 Guillemets typographiques fermants. [[194:195]] => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau. <|> " => suggestions : ['\xa0»', '”']

53 Mot inconnu : Udev [[2:6]] => //Udev// fournit un nom persistant pour certains types de périphériques. C'est un dispositif très pratique, qui signifie que vous n'avez pas besoin d'écrire de règle pour ceux-ci. <|> udev

72 Mot inconnu : udev [[330:334]] => Un périphérique peut être contrôlé par plusieurs règles. Ceci peut être avantageux lorsque par exemple, nous écrivons deux règles pour un périphérique, qui donnent un nom différent pour le même périphérique. Les deux règles seront appliquées même si ces règles sont dans des fichiers séparés. Il est important de comprendre que //udev// ne s'interrompt pas quand il trouve une règle, il continue sa recherche et tente d'appliquer chaque règle trouvée. <|> udev

76 Espace(s) en fin de ligne à supprimer. [[518:519]] => Chaque règle est faite d'un ensemble de //clefs de correspondances// et de //clefs d'assignation//, séparées par des virgules. Les //clefs de correspondances// sont les conditions utilisées pour identifier le périphérique sur lequel la règle agit. **Quand toute la série de ces clefs de correspondance correspond bien au périphérique, alors la règle est appliquée et les actions des clefs d'assignation sont appliquées**. Chaque règle doit se composer d'au moins une clef de correspondance et d'une clef d'assignation.  <|>   => suggestions : ['']

108 Mot inconnu : sysfs [[21:26]] => ====Les attributs de sysfs==== <|> sysfs
110 Mot inconnu : vendor [[192:198]] => Les clefs introduites précédemment semblent avoir des possibilités limitées. Cependant, vous pouvez avoir besoin d'un contrôle plus précis : pour identifier un périphérique par le numéro du //vendor//, le nom exact du produit, le numéro de série, la capacité de stockage, le nombre de partitions, etc. <|> vendor

113 Mot inconnu : sysfs [[37:42]] => Voici plusieurs exemples utilisant //sysfs//, plus de détails par la suite. <|> sysfs

138 Espace(s) en fin de ligne à supprimer. [[234:235]] => On peut se demander quel est le véritable intérêt dans le cas de ces deux règles, car elles peuvent être utilisées sans aucun opérateur de substitution. Le véritable intérêt des substitutions va être expliqué dans la section suivante.  <|>   => suggestions : ['']

159 Mot inconnu : sysfs [[20:25]] => =====Utilisation de sysfs===== <|> sysfs

162 Mot inconnu : sysfs [[20:25]] => ====Organisation de sysfs==== <|> sysfs

164 Mot inconnu : sysfs [[19:24]] => L'utilisation de //sysfs// a été brièvement évoquée précédemment. Dans le but d'écrire des règles basées sur ces informations, il vous faut connaître le nom des attributs et leurs valeurs.  <|> sysfs
164 Espace(s) en fin de ligne à supprimer. [[188:189]] => L'utilisation de //sysfs// a été brièvement évoquée précédemment. Dans le but d'écrire des règles basées sur ces informations, il vous faut connaître le nom des attributs et leurs valeurs.  <|>   => suggestions : ['']

165 Mot inconnu : Sysfs [[2:7]] => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//.  <|> sysfs
165 Guillemets typographiques ouvrants. [[265:266]] => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//.  <|> " => suggestions : ['«\xa0', '“']
165 Guillemets typographiques fermants. [[273:274]] => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//.  <|> " => suggestions : ['\xa0»', '”']
165 Mot inconnu : sysfs [[277:282]] => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//.  <|> sysfs
165 Espace(s) en fin de ligne à supprimer. [[285:286]] => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//.  <|>   => suggestions : ['']

173 Mot inconnu : sysfs [[63:68]] => Quand vous écrivez des règles basées sur les informations de //sysfs//, vous devez simplement remplacer les attributs par ceux trouvés dans ces fichiers. Par exemple, on peut lire la taille du disque dur avec : <|> sysfs

180 Mot inconnu : sysfs [[64:69]] => Bien que cela serve d'introduction utile pour la structure du //sysfs// et pour comprendre le fonctionnement de //udev//, le changement avec //sysfs// est souvent une perte de temps qui n'est donc pas nécessaire. <|> sysfs
180 Mot inconnu : udev [[114:118]] => Bien que cela serve d'introduction utile pour la structure du //sysfs// et pour comprendre le fonctionnement de //udev//, le changement avec //sysfs// est souvent une perte de temps qui n'est donc pas nécessaire. <|> udev
180 Mot inconnu : sysfs [[143:148]] => Bien que cela serve d'introduction utile pour la structure du //sysfs// et pour comprendre le fonctionnement de //udev//, le changement avec //sysfs// est souvent une perte de temps qui n'est donc pas nécessaire. <|> sysfs

182 Mot inconnu : udevadm [[4:11]] => ====udevadm info==== <|> udevadm

184 Mot inconnu : udevadm [[2:9]] => //udevadm info// est probablement l'outil le plus puissant pour aider dans la construction des règles. Tout ce que vous devez connaître est la dénomination //sysfs// du périphérique en question. Par exemple : <|> udevadm
184 Mot inconnu : sysfs [[158:163]] => //udevadm info// est probablement l'outil le plus puissant pour aider dans la construction des règles. Tout ce que vous devez connaître est la dénomination //sysfs// du périphérique en question. Par exemple : <|> sysfs

244 Mot inconnu : Apparement [[0:10]] => Apparement, il y a beaucoup plus simple : <|> apparement

246 Pléonasme. [[0:10]] => voire même : <|> voire même => suggestions : ['voire', 'même']

323 Mot inconnu : Udev [[2:6]] => //Udev// vous permet de gérer dans vos règles les propriétés et les permissions de chaque périphérique. <|> udev

341 Mot inconnu : udev [[95:99]] => Dans certaines circonstances, vous pouvez avoir besoin de plus de flexibilité que les règles //udev// en donnent. Dans ce cas vous pouvez demander à //udev// de lancer un programme, afin d'utiliser ce qui est sorti par ce programme pour créer le nom de périphérique. <|> udev
341 Mot inconnu : udev [[151:155]] => Dans certaines circonstances, vous pouvez avoir besoin de plus de flexibilité que les règles //udev// en donnent. Dans ce cas vous pouvez demander à //udev// de lancer un programme, afin d'utiliser ce qui est sorti par ce programme pour créer le nom de périphérique. <|> udev

365 Mot inconnu : udev [[39:43]] => Une autre raison d'écrire des règles //udev// est de lancer un programme quand un périphérique est connecté ou déconnecté. Par exemple, vous voulez lancer un script qui va télécharger automatiquement les photos de votre appareil photo lorsque vous le connectez. <|> udev

369 Mot inconnu : udev [[198:202]] => La fonction introduite ici vous permet de lancer un programme après la mise en place du périphérique. Ce programme peut interagir avec le périphérique, cependant il doit s'exécuter rapidement car //udev// est mis en pause quand ces programmes sont lancés. Il ne faut donc pas négliger de s'assurer que le programme s'arrête de lui même. <|> udev
369 Il manque un trait d’union si “même” se rapporte à “lui”. [[327:335]] => La fonction introduite ici vous permet de lancer un programme après la mise en place du périphérique. Ce programme peut interagir avec le périphérique, cependant il doit s'exécuter rapidement car //udev// est mis en pause quand ces programmes sont lancés. Il ne faut donc pas négliger de s'assurer que le programme s'arrête de lui même. <|> lui même => suggestions : ['lui-même']

385 Mot inconnu : udev [[162:166]] => Dans le cas de la //recherche//, vous pouvez vous assurer que les règles se lancent seulement selon une variable d'environnement. Notez que l'environnement que //udev// voit ne sera pas le même que celui que l'utilisateur voit en console. Voici un exemple de règle : <|> udev
419 Espace(s) en fin de ligne à supprimer. [[51:52]] => On peut maintenant faire une règle comme celle-ci :  <|>   => suggestions : ['']

427 Espace(s) en fin de ligne à supprimer. [[238:239]] => Comme la plupart des appareils photo, mon appareil photo est identifié comme un disque dur externe branché en USB, utilisant le transport SCSI. Pour accéder à ses photos, on monte le périphérique et on copie les images sur son disque dur.  <|>   => suggestions : ['']
449 Espace(s) en fin de ligne à supprimer. [[20:21]] => Ma règle est alors :  <|>   => suggestions : ['']
462 Espace(s) en fin de ligne à supprimer. [[51:52]] => Cette règle crée des liens symboliques comme ceci :  <|>   => suggestions : ['']

470 Mot inconnu : CompactFlash [[29:41]] => Les Lecteurs de carte USB (//CompactFlash//, //SmartMedia//, etc.) sont encore un autre type de périphériques de stockage USB, avec un usage différent.  <|> compactflash
470 Mot inconnu : SmartMedia [[47:57]] => Les Lecteurs de carte USB (//CompactFlash//, //SmartMedia//, etc.) sont encore un autre type de périphériques de stockage USB, avec un usage différent.  <|> smartmedia
470 Espace(s) en fin de ligne à supprimer. [[151:152]] => Les Lecteurs de carte USB (//CompactFlash//, //SmartMedia//, etc.) sont encore un autre type de périphériques de stockage USB, avec un usage différent.  <|>   => suggestions : ['']

479 Mot inconnu : Palm [[4:8]] => ====Palm USB==== <|> palm

498 Mot inconnu : Etant [[0:5]] => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique. <|> etant
498 Accord de nombre erroné avec « noms ». [[22:26]] => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique. <|> leur => suggestions : ['leurs']
498 Accord de nombre erroné : « noms » devrait être au singulier. [[27:31]] => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique. <|> noms => suggestions : ['nom']
498 Guillemets typographiques ouvrants. [[92:93]] => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique. <|> " => suggestions : ['«\xa0', '“']
498 Mot inconnu : node [[93:97]] => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique. <|> node
498 Guillemets typographiques fermants. [[97:98]] => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique. <|> " => suggestions : ['\xa0»', '”']

500 Mot inconnu : udevadm [[196:203]] => Il est logique d'utiliser simplement l'adresse MAC de votre interface dans la règle, puisque celle-ci est unique. Cependant, soyez certain d'utiliser l'adresse MAC exacte, telle que montrée par //udevadm info//, sinon votre règle ne fonctionnera pas.  <|> udevadm
500 Espace(s) en fin de ligne à supprimer. [[250:251]] => Il est logique d'utiliser simplement l'adresse MAC de votre interface dans la règle, puisque celle-ci est unique. Cependant, soyez certain d'utiliser l'adresse MAC exacte, telle que montrée par //udevadm info//, sinon votre règle ne fonctionnera pas.  <|>   => suggestions : ['']

508 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

526 Mot inconnu : udev [[74:78]] => Si l'on souhaite avoir une adresse MAC fixe, on peut la configurer avec //udev// de la façon suivante : <|> udev

532 Espace(s) surnuméraire(s) à supprimer. [[23:25]] => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide. <|>    => suggestions : [' ']
532 Guillemets typographiques ouvrants. [[39:40]] => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide. <|> " => suggestions : ['«\xa0', '“']
532 Mot inconnu : forcedeth [[40:49]] => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide. <|> forcedeth
532 Guillemets typographiques fermants. [[49:50]] => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide. <|> " => suggestions : ['\xa0»', '”']

544 Mot inconnu : deboggage [[15:24]] => =====Essais et deboggage===== <|> deboggage

548 Mot inconnu : inotify [[44:51]] => Si vous êtes sur un noyau avec le support //inotify//, //udev// surveillera votre répertoire de règles et prendra en compte automatiquement les modifications faites dans vos règles. <|> inotify
548 Mot inconnu : udev [[57:61]] => Si vous êtes sur un noyau avec le support //inotify//, //udev// surveillera votre répertoire de règles et prendra en compte automatiquement les modifications faites dans vos règles. <|> udev

550 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[0:1]] => A l'encontre de ceci, **//udev// ne remontera pas automatiquement les périphériques, mais tentera d'appliquer les règles**. Par exemple, si vous écrivez une règle pour ajouter un lien symbolique pour votre appareil photo alors que celui-ci est déjà branché au PC, ne vous attendez pas à ce que le lien symbolique soit créé.  <|> a => suggestions : ['À']
550 Mot inconnu : udev [[26:30]] => A l'encontre de ceci, **//udev// ne remontera pas automatiquement les périphériques, mais tentera d'appliquer les règles**. Par exemple, si vous écrivez une règle pour ajouter un lien symbolique pour votre appareil photo alors que celui-ci est déjà branché au PC, ne vous attendez pas à ce que le lien symbolique soit créé.  <|> udev
550 Espace(s) en fin de ligne à supprimer. [[323:324]] => A l'encontre de ceci, **//udev// ne remontera pas automatiquement les périphériques, mais tentera d'appliquer les règles**. Par exemple, si vous écrivez une règle pour ajouter un lien symbolique pour votre appareil photo alors que celui-ci est déjà branché au PC, ne vous attendez pas à ce que le lien symbolique soit créé.  <|>   => suggestions : ['']

554 Mot inconnu : udevtest [[4:12]] => ====udevtest==== <|> udevtest

569 Mot inconnu : udevtest [[17:25]] => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) : <|> udevtest
569 Mot inconnu : udevadm [[86:93]] => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) : <|> udevadm
569 Mot inconnu : sdb [[184:187]] => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) : <|> sdb

577 Accord de genre erroné : « mailing » est masculin. [[48:50]] => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>.  <|> la => suggestions : ['le']
577 Mot inconnu : hotplug [[74:81]] => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>.  <|> hotplug
577 Espace(s) en fin de ligne à supprimer. [[128:129]] => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>.  <|>   => suggestions : ['']
