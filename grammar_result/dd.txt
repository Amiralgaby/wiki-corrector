
4 Mot inconnu : dd => ====== Commande “dd” ====== | dd

9 Mot inconnu : dd => La commande dd permet de copier tout ou partie d'un disque − **[[smartmontools| EN BON ÉTAT]]** − par blocs d'octets, indépendamment de la structure du contenu du disque en fichiers et en répertoires.  | dd
9 Mot inconnu : smartmontools => La commande dd permet de copier tout ou partie d'un disque − **[[smartmontools| EN BON ÉTAT]]** − par blocs d'octets, indépendamment de la structure du contenu du disque en fichiers et en répertoires.  | smartmontools
9 Espace(s) en fin de ligne à supprimer. => La commande dd permet de copier tout ou partie d'un disque − **[[smartmontools| EN BON ÉTAT]]** − par blocs d'octets, indépendamment de la structure du contenu du disque en fichiers et en répertoires.  |   => suggestions : ['']

12 Mot inconnu : console_commandes_de_base => Contrairement à la copie avec [[/tutoriel/console_commandes_de_base#cp|la commande cp]] ou la copie avec [[archivage|la commande tar]], la copie avec dd permet de reproduire des zones de disque qui ne font pas partie d'un système de fichier : secteur de démarrage (le MBR), tables de partition, traces laissées sur le disque par des fichiers effacés etc. L'un de ses emplois les plus importants est donc //la création d'une copie de sauvegarde exacte de votre partition système et sa récupération//, par l'entremise d'un //live-CD// ou //live-DVD// en cas de pépin. | console_commandes_de_base
12 Mot inconnu : cp => Contrairement à la copie avec [[/tutoriel/console_commandes_de_base#cp|la commande cp]] ou la copie avec [[archivage|la commande tar]], la copie avec dd permet de reproduire des zones de disque qui ne font pas partie d'un système de fichier : secteur de démarrage (le MBR), tables de partition, traces laissées sur le disque par des fichiers effacés etc. L'un de ses emplois les plus importants est donc //la création d'une copie de sauvegarde exacte de votre partition système et sa récupération//, par l'entremise d'un //live-CD// ou //live-DVD// en cas de pépin. | cp
12 Mot inconnu : tar => Contrairement à la copie avec [[/tutoriel/console_commandes_de_base#cp|la commande cp]] ou la copie avec [[archivage|la commande tar]], la copie avec dd permet de reproduire des zones de disque qui ne font pas partie d'un système de fichier : secteur de démarrage (le MBR), tables de partition, traces laissées sur le disque par des fichiers effacés etc. L'un de ses emplois les plus importants est donc //la création d'une copie de sauvegarde exacte de votre partition système et sa récupération//, par l'entremise d'un //live-CD// ou //live-DVD// en cas de pépin. | tar
12 Mot inconnu : dd => Contrairement à la copie avec [[/tutoriel/console_commandes_de_base#cp|la commande cp]] ou la copie avec [[archivage|la commande tar]], la copie avec dd permet de reproduire des zones de disque qui ne font pas partie d'un système de fichier : secteur de démarrage (le MBR), tables de partition, traces laissées sur le disque par des fichiers effacés etc. L'un de ses emplois les plus importants est donc //la création d'une copie de sauvegarde exacte de votre partition système et sa récupération//, par l'entremise d'un //live-CD// ou //live-DVD// en cas de pépin. | dd
12 Mot inconnu : MBR => Contrairement à la copie avec [[/tutoriel/console_commandes_de_base#cp|la commande cp]] ou la copie avec [[archivage|la commande tar]], la copie avec dd permet de reproduire des zones de disque qui ne font pas partie d'un système de fichier : secteur de démarrage (le MBR), tables de partition, traces laissées sur le disque par des fichiers effacés etc. L'un de ses emplois les plus importants est donc //la création d'une copie de sauvegarde exacte de votre partition système et sa récupération//, par l'entremise d'un //live-CD// ou //live-DVD// en cas de pépin. | mbr
12 Avant « etc. », il faut mettre une virgule. => Contrairement à la copie avec [[/tutoriel/console_commandes_de_base#cp|la commande cp]] ou la copie avec [[archivage|la commande tar]], la copie avec dd permet de reproduire des zones de disque qui ne font pas partie d'un système de fichier : secteur de démarrage (le MBR), tables de partition, traces laissées sur le disque par des fichiers effacés etc. L'un de ses emplois les plus importants est donc //la création d'une copie de sauvegarde exacte de votre partition système et sa récupération//, par l'entremise d'un //live-CD// ou //live-DVD// en cas de pépin. |  etc. => suggestions : [', etc.']
14 Mot inconnu : dd => D'autres fonctions que la copie au sens strict, un peu « spéciales » mais parfois utiles, sont également rendues disponibles grâce à dd, comme vous le verrez dans les sections qui suivent : recherche dans les fichiers effacés, recherche dans la mémoire vive, création de disque virtuel etc... | dd
14 Avant « etc. », il faut mettre une virgule. => D'autres fonctions que la copie au sens strict, un peu « spéciales » mais parfois utiles, sont également rendues disponibles grâce à dd, comme vous le verrez dans les sections qui suivent : recherche dans les fichiers effacés, recherche dans la mémoire vive, création de disque virtuel etc... |  etc. => suggestions : [', etc.']
14 Un seul point après « etc. » => D'autres fonctions que la copie au sens strict, un peu « spéciales » mais parfois utiles, sont également rendues disponibles grâce à dd, comme vous le verrez dans les sections qui suivent : recherche dans les fichiers effacés, recherche dans la mémoire vive, création de disque virtuel etc... | etc... => suggestions : ['etc.']

16 Mot inconnu : dd => <note warning>Attention, la commande //dd// permet de faire beaucoup de choses intéressantes, mais elle peut aussi être dangereuse, soyez prudent en l'utilisant : une manœuvre hâtive pourrait rendre votre système inutilisable !</note> | dd

18 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Vous trouverez un guide d'emploi de cette commande, raisonnablement clair, détaillé, bourré d'exemples - malheureusement en anglais - à la page [[http://www.linuxquestions.org/questions/showthread.php?t=362506|Learn the dd command]]. |  -  => suggestions : [' – ', ' — ', ' − ']
18 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Vous trouverez un guide d'emploi de cette commande, raisonnablement clair, détaillé, bourré d'exemples - malheureusement en anglais - à la page [[http://www.linuxquestions.org/questions/showthread.php?t=362506|Learn the dd command]]. |  -  => suggestions : [' – ', ' — ', ' − ']
18 Mot inconnu : Learn => Vous trouverez un guide d'emploi de cette commande, raisonnablement clair, détaillé, bourré d'exemples - malheureusement en anglais - à la page [[http://www.linuxquestions.org/questions/showthread.php?t=362506|Learn the dd command]]. | learn
18 Mot inconnu : the => Vous trouverez un guide d'emploi de cette commande, raisonnablement clair, détaillé, bourré d'exemples - malheureusement en anglais - à la page [[http://www.linuxquestions.org/questions/showthread.php?t=362506|Learn the dd command]]. | the
18 Mot inconnu : dd => Vous trouverez un guide d'emploi de cette commande, raisonnablement clair, détaillé, bourré d'exemples - malheureusement en anglais - à la page [[http://www.linuxquestions.org/questions/showthread.php?t=362506|Learn the dd command]]. | dd
18 Mot inconnu : command => Vous trouverez un guide d'emploi de cette commande, raisonnablement clair, détaillé, bourré d'exemples - malheureusement en anglais - à la page [[http://www.linuxquestions.org/questions/showthread.php?t=362506|Learn the dd command]]. | command
20 Mot inconnu : lebarhon => Le contenu d'une (petite !) partie de ce lien a été traduit en français, ci-dessous, par lebarhon et révisé/remanié avec le concours de ptyxs. | lebarhon
20 Mot inconnu : ptyxs => Le contenu d'une (petite !) partie de ce lien a été traduit en français, ci-dessous, par lebarhon et révisé/remanié avec le concours de ptyxs. | ptyxs

22 Mot inconnu : dd => Une autre page utile sur dd - hélas elle aussi en anglais - est : [[http://www.softpanorama.org/Tools/dd.shtml|Unix dd command]] | dd
22 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Une autre page utile sur dd - hélas elle aussi en anglais - est : [[http://www.softpanorama.org/Tools/dd.shtml|Unix dd command]] |  -  => suggestions : [' – ', ' — ', ' − ']
22 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Une autre page utile sur dd - hélas elle aussi en anglais - est : [[http://www.softpanorama.org/Tools/dd.shtml|Unix dd command]] |  -  => suggestions : [' – ', ' — ', ' − ']
22 Mot inconnu : dd => Une autre page utile sur dd - hélas elle aussi en anglais - est : [[http://www.softpanorama.org/Tools/dd.shtml|Unix dd command]] | dd
22 Mot inconnu : command => Une autre page utile sur dd - hélas elle aussi en anglais - est : [[http://www.softpanorama.org/Tools/dd.shtml|Unix dd command]] | command

24 Espace(s) en fin de ligne à supprimer. => Voir aussi   |    => suggestions : ['']

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[ssh#copier_des_fichiers_via_ssh|copier avec ssh]] |    => suggestions : ['']
25 Mot inconnu : ssh =>   * [[ssh#copier_des_fichiers_via_ssh|copier avec ssh]] | ssh
25 Mot inconnu : ssh =>   * [[ssh#copier_des_fichiers_via_ssh|copier avec ssh]] | ssh

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Pour la copie de sauvegarde ou de synchronisation, on pourra regarder, par exemple, ce que permet un logiciel comme [[Unison]], [[rsync]] et son pendant graphique [[grsync]], ou encore [[SuperFlexible]]. |    => suggestions : ['']
26 Mot inconnu : Unison =>   * Pour la copie de sauvegarde ou de synchronisation, on pourra regarder, par exemple, ce que permet un logiciel comme [[Unison]], [[rsync]] et son pendant graphique [[grsync]], ou encore [[SuperFlexible]]. | unison
26 Mot inconnu : rsync =>   * Pour la copie de sauvegarde ou de synchronisation, on pourra regarder, par exemple, ce que permet un logiciel comme [[Unison]], [[rsync]] et son pendant graphique [[grsync]], ou encore [[SuperFlexible]]. | rsync
26 Mot inconnu : grsync =>   * Pour la copie de sauvegarde ou de synchronisation, on pourra regarder, par exemple, ce que permet un logiciel comme [[Unison]], [[rsync]] et son pendant graphique [[grsync]], ou encore [[SuperFlexible]]. | grsync
26 Mot inconnu : SuperFlexible =>   * Pour la copie de sauvegarde ou de synchronisation, on pourra regarder, par exemple, ce que permet un logiciel comme [[Unison]], [[rsync]] et son pendant graphique [[grsync]], ou encore [[SuperFlexible]]. | superflexible

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  |    => suggestions : ['']
27 Guillemets typographiques ouvrants. =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | " => suggestions : ['«\xa0', '“']
27 Mot inconnu : dcfldd =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | dcfldd
27 Mot inconnu : of =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | of
27 Mot inconnu : conv =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | conv
27 Mot inconnu : notrunc =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | notrunc
27 Il manque un espace. =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | noerror => suggestions : [' noerror']
27 Mot inconnu : noerror =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | noerror
27 Guillemets typographiques fermants. =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  | " => suggestions : ['\xa0»', '”']
27 Espace(s) en fin de ligne à supprimer. =>   * Lorsque la copie porte sur un gros volume, on peut suivre l'évolution avec un autre logiciel "dcfldd if=/dev/sd(x) of=/dev/sd(x) conv=notrunc,noerror status=on"  |   => suggestions : ['']

29 Mot inconnu : dd => <note tip>Il existe une interface graphique à dd qui permet de créer des clés bootables d'Ubuntu : [[mkusb]].</note> | dd
29 Mot inconnu : bootables => <note tip>Il existe une interface graphique à dd qui permet de créer des clés bootables d'Ubuntu : [[mkusb]].</note> | bootables
29 Mot inconnu : mkusb => <note tip>Il existe une interface graphique à dd qui permet de créer des clés bootables d'Ubuntu : [[mkusb]].</note> | mkusb
35 Mot inconnu : nput => **source** représente les données à copier, **cible** est l'endroit où les copier ; ça se comprend : **if** correspond à l'**i**nput **f**ile et **of** correspond à l'**o**utput **f**ile. | nput
35 Mot inconnu : of => **source** représente les données à copier, **cible** est l'endroit où les copier ; ça se comprend : **if** correspond à l'**i**nput **f**ile et **of** correspond à l'**o**utput **f**ile. | of
35 Mot inconnu : utput => **source** représente les données à copier, **cible** est l'endroit où les copier ; ça se comprend : **if** correspond à l'**i**nput **f**ile et **of** correspond à l'**o**utput **f**ile. | utput

37 Mot inconnu : bs => **bs** (**b**lock **s**ize) est habituellement une puissance de 2, supérieure ou égale à 512, représentant un nombre d'octets (par exemple: 512, 1024, 2048, 4096, 8192, 16384, mais cela peut être tout nombre raisonnable).  | bs
37 Mot inconnu : lock => **bs** (**b**lock **s**ize) est habituellement une puissance de 2, supérieure ou égale à 512, représentant un nombre d'octets (par exemple: 512, 1024, 2048, 4096, 8192, 16384, mais cela peut être tout nombre raisonnable).  | lock
37 Mot inconnu : ize => **bs** (**b**lock **s**ize) est habituellement une puissance de 2, supérieure ou égale à 512, représentant un nombre d'octets (par exemple: 512, 1024, 2048, 4096, 8192, 16384, mais cela peut être tout nombre raisonnable).  | ize
37 Formatage des grands nombres. => **bs** (**b**lock **s**ize) est habituellement une puissance de 2, supérieure ou égale à 512, représentant un nombre d'octets (par exemple: 512, 1024, 2048, 4096, 8192, 16384, mais cela peut être tout nombre raisonnable).  | 16384 => suggestions : ['16\xa0384']
37 Espace(s) en fin de ligne à supprimer. => **bs** (**b**lock **s**ize) est habituellement une puissance de 2, supérieure ou égale à 512, représentant un nombre d'octets (par exemple: 512, 1024, 2048, 4096, 8192, 16384, mais cela peut être tout nombre raisonnable).  |   => suggestions : ['']
39 Mot inconnu : dd => <note warning>Attention !! Si vous inversez la **source** et la **cible**, vous pouvez perdre beaucoup de données. Cette caractéristique a inspiré le surnom de dd : le Destructeur de Données !!</note> | dd

40 Mot inconnu : bs => ====Le paramètre bs==== | bs

42 Mot inconnu : bs => Comment choisir bs ? (//**b**lock **s**ize// = taille des blocs) | bs
42 Mot inconnu : lock => Comment choisir bs ? (//**b**lock **s**ize// = taille des blocs) | lock
42 Mot inconnu : ize => Comment choisir bs ? (//**b**lock **s**ize// = taille des blocs) | ize

44 Mot inconnu : bs => Un paramètre **bs=** correctement choisi accroitra significativement la vitesse d'exécution. | bs

46 Avec une unité de mesure, mettez un espace insécable. => Sur du matériel moderne (moins de 5 ans) **bs=4096** est un bon pari. | 5 ans => suggestions : ['5\xa0ans']
46 Mot inconnu : bs => Sur du matériel moderne (moins de 5 ans) **bs=4096** est un bon pari. | bs
48 Mot inconnu : bs => On peut aussi avoir : **bs=16065b** qui peut être meilleur. **bs=32130b** encore meilleur. Ces deux dernières tailles de bloc correspondent à des nombres entiers de cylindres. | bs
48 Mot inconnu : bs => On peut aussi avoir : **bs=16065b** qui peut être meilleur. **bs=32130b** encore meilleur. Ces deux dernières tailles de bloc correspondent à des nombres entiers de cylindres. | bs
48 Accord de nombre erroné avec « 32130 b » : « meilleur » devrait être au pluriel. => On peut aussi avoir : **bs=16065b** qui peut être meilleur. **bs=32130b** encore meilleur. Ces deux dernières tailles de bloc correspondent à des nombres entiers de cylindres. | meilleur => suggestions : ['meilleurs']

50 Mot inconnu : LBA => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste = 16065 secteurs = 16065 x 512 octets = 16065b. Le **b** signifie **x512** (512 octets étant la taille d'un secteur). **32130b** représente un bloc de deux cylindres. Lorsque vous utilisez des tailles de blocs représentant des nombres entiers de cylindres, vous n'avez jamais à vous soucier de la copie de la dernière fraction de bloc car les partitions sont toujours faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir de cylindres partiels. Un cylindre comprend 8 225 280 octets. | lba
50 Formatage des grands nombres. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste = 16065 secteurs = 16065 x 512 octets = 16065b. Le **b** signifie **x512** (512 octets étant la taille d'un secteur). **32130b** représente un bloc de deux cylindres. Lorsque vous utilisez des tailles de blocs représentant des nombres entiers de cylindres, vous n'avez jamais à vous soucier de la copie de la dernière fraction de bloc car les partitions sont toujours faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir de cylindres partiels. Un cylindre comprend 8 225 280 octets. | 16065 => suggestions : ['16\xa0065']
50 Signe de multiplication typographique. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste = 16065 secteurs = 16065 x 512 octets = 16065b. Le **b** signifie **x512** (512 octets étant la taille d'un secteur). **32130b** représente un bloc de deux cylindres. Lorsque vous utilisez des tailles de blocs représentant des nombres entiers de cylindres, vous n'avez jamais à vous soucier de la copie de la dernière fraction de bloc car les partitions sont toujours faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir de cylindres partiels. Un cylindre comprend 8 225 280 octets. | 16065 x 512 => suggestions : ['16065\xa0×\xa0512']
50 Mot inconnu : x512 => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste = 16065 secteurs = 16065 x 512 octets = 16065b. Le **b** signifie **x512** (512 octets étant la taille d'un secteur). **32130b** représente un bloc de deux cylindres. Lorsque vous utilisez des tailles de blocs représentant des nombres entiers de cylindres, vous n'avez jamais à vous soucier de la copie de la dernière fraction de bloc car les partitions sont toujours faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir de cylindres partiels. Un cylindre comprend 8 225 280 octets. | x512
50 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste = 16065 secteurs = 16065 x 512 octets = 16065b. Le **b** signifie **x512** (512 octets étant la taille d'un secteur). **32130b** représente un bloc de deux cylindres. Lorsque vous utilisez des tailles de blocs représentant des nombres entiers de cylindres, vous n'avez jamais à vous soucier de la copie de la dernière fraction de bloc car les partitions sont toujours faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir de cylindres partiels. Un cylindre comprend 8 225 280 octets. |  car => suggestions : [', car']
50 Grands nombres : utilisez des espaces insécables. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste = 16065 secteurs = 16065 x 512 octets = 16065b. Le **b** signifie **x512** (512 octets étant la taille d'un secteur). **32130b** représente un bloc de deux cylindres. Lorsque vous utilisez des tailles de blocs représentant des nombres entiers de cylindres, vous n'avez jamais à vous soucier de la copie de la dernière fraction de bloc car les partitions sont toujours faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir de cylindres partiels. Un cylindre comprend 8 225 280 octets. | 8 225 280 => suggestions : ['8\xa0225\xa0280']

52 Mot inconnu : __ => <note>__**Histoires de têtes et de cylindres...**__ | __
52 Typographie : points de suspension. Utilisez le caractère dédié. => <note>__**Histoires de têtes et de cylindres...**__ | ... => suggestions : ['…']
52 Mot inconnu : __ => <note>__**Histoires de têtes et de cylindres...**__ | __
54 Espace(s) en fin de ligne à supprimer. => Pour bien comprendre les notions originelles de tête, cylindre et secteur, auxquelles l'auteur fait appel dans le paragraphe précédent, vous pourrez lire ces deux petites pages très éclairantes :  |   => suggestions : ['']

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * http://www.redhat.com/docs/manuals/enterprise/RHEL-4-Manual/fr/admin-guide/s1-storage-data-addr.html |    => suggestions : ['']

58 Mot inconnu : LBA => D'autre part, il faut bien comprendre que les notions de cylindre et de tête sous-jacentes au mode d'adressage LBA, sont «abstraites;» et déconnectées de la réalisation matérielle du disque (votre disque n'a sûrement pas 255 têtes réelles...). | lba
58 Typographie : points de suspension. Utilisez le caractère dédié. => D'autre part, il faut bien comprendre que les notions de cylindre et de tête sous-jacentes au mode d'adressage LBA, sont «abstraites;» et déconnectées de la réalisation matérielle du disque (votre disque n'a sûrement pas 255 têtes réelles...). | ... => suggestions : ['…']

62 Mot inconnu : LBA => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste (chaque tête lit une piste pour un cylindre donné) = 16 065 secteurs = 16 065 x 512 octets = **16065b**. Le **b** signifie  **x512**. | lba
62 Grands nombres : utilisez des espaces insécables. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste (chaque tête lit une piste pour un cylindre donné) = 16 065 secteurs = 16 065 x 512 octets = **16065b**. Le **b** signifie  **x512**. | 16 065 => suggestions : ['16\xa0065']
62 Grands nombres : utilisez des espaces insécables. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste (chaque tête lit une piste pour un cylindre donné) = 16 065 secteurs = 16 065 x 512 octets = **16065b**. Le **b** signifie  **x512**. | 16 065 => suggestions : ['16\xa0065']
62 Signe de multiplication typographique. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste (chaque tête lit une piste pour un cylindre donné) = 16 065 secteurs = 16 065 x 512 octets = **16065b**. Le **b** signifie  **x512**. | 065 x 512 => suggestions : ['065\xa0×\xa0512']
62 Espace(s) surnuméraire(s) à supprimer. => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste (chaque tête lit une piste pour un cylindre donné) = 16 065 secteurs = 16 065 x 512 octets = **16065b**. Le **b** signifie  **x512**. |    => suggestions : [' ']
62 Mot inconnu : x512 => //Un cylindre en mode LBA// = 255 têtes x 63 secteurs par piste (chaque tête lit une piste pour un cylindre donné) = 16 065 secteurs = 16 065 x 512 octets = **16065b**. Le **b** signifie  **x512**. | x512

66 Espace(s) surnuméraire(s) à supprimer. => Lorsqu'on utilise des blocs contenant un nombre entier de cylindres, on n'a jamais besoin de se préoccuper  du fait que la dernière partie d'un bloc ne soit pas copiée, car les partitions sont faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir des cylindres partiels. Un cylindre compte 8 225 280 octets.</note> |    => suggestions : [' ']
66 Grands nombres : utilisez des espaces insécables. => Lorsqu'on utilise des blocs contenant un nombre entier de cylindres, on n'a jamais besoin de se préoccuper  du fait que la dernière partie d'un bloc ne soit pas copiée, car les partitions sont faites d'un nombre entier de cylindres. Les partitions ne peuvent pas contenir des cylindres partiels. Un cylindre compte 8 225 280 octets.</note> | 8 225 280 => suggestions : ['8\xa0225\xa0280']
69 Mot inconnu : kB => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | kb
69 Mot inconnu : MB => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | mb
69 Signe de multiplication typographique. => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | 1000x1000 => suggestions : ['1000\xa0×\xa01000']
69 Mot inconnu : x1000 => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | x1000
69 Signe de multiplication typographique. => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | 1024x1024 => suggestions : ['1024\xa0×\xa01024']
69 Mot inconnu : x1024 => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | x1024
69 Mot inconnu : GB => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | gb
69 Signe de multiplication typographique. => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | 1000x1000 => suggestions : ['1000\xa0×\xa01000']
69 Mot inconnu : x1000x1000 => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | x1000x1000
69 Signe de multiplication typographique. => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | 1024x1024 => suggestions : ['1024\xa0×\xa01024']
69 Mot inconnu : x1024x1024 => Les blocs et les octets peuvent être suivis par les suffixes multiplicateurs suivants (les valeurs numériques représentent des nombres d'octets) : **c** = 1, **w** = 2, **b** = 512, **kB** = 1000, **k** = 1024, **MB** = 1000x1000, **M** = 1024x1024, **GB** = 1000x1000x1000, **G** = 1024x1024x1024 | x1024x1024

79 Mot inconnu : bs => **bs=4b** donnera à dd un bloc de taille de 4 secteurs de disque. 1 secteur = 512 octets. | bs
79 Mot inconnu : dd => **bs=4b** donnera à dd un bloc de taille de 4 secteurs de disque. 1 secteur = 512 octets. | dd

81 Mot inconnu : bs => **bs=4k** indiquera à dd d'utiliser un bloc de taille 4 kiloctets. J'ai trouvé que **bs=4k** est le plus rapide pour la copie de disques sur une machine moderne. | bs
81 Mot inconnu : dd => **bs=4k** indiquera à dd d'utiliser un bloc de taille 4 kiloctets. J'ai trouvé que **bs=4k** est le plus rapide pour la copie de disques sur une machine moderne. | dd
81 Mot inconnu : kiloctets => **bs=4k** indiquera à dd d'utiliser un bloc de taille 4 kiloctets. J'ai trouvé que **bs=4k** est le plus rapide pour la copie de disques sur une machine moderne. | kiloctets
81 Mot inconnu : bs => **bs=4k** indiquera à dd d'utiliser un bloc de taille 4 kiloctets. J'ai trouvé que **bs=4k** est le plus rapide pour la copie de disques sur une machine moderne. | bs

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * sda2 et sdb2 sont des partitions : pensez à mettre celles qui correspondent à vos besoins. Faites attention à l'ordre de **if=** et **of=**. Vous pouvez écrire une partition vierge sur une partition utilisée si vous êtes désordonné. |    => suggestions : ['']
90 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * sda2 et sdb2 sont des partitions : pensez à mettre celles qui correspondent à vos besoins. Faites attention à l'ordre de **if=** et **of=**. Vous pouvez écrire une partition vierge sur une partition utilisée si vous êtes désordonné. | sda2 => suggestions : ['Sda2']
90 Mot inconnu : sda2 =>   * sda2 et sdb2 sont des partitions : pensez à mettre celles qui correspondent à vos besoins. Faites attention à l'ordre de **if=** et **of=**. Vous pouvez écrire une partition vierge sur une partition utilisée si vous êtes désordonné. | sda2
90 Mot inconnu : sdb2 =>   * sda2 et sdb2 sont des partitions : pensez à mettre celles qui correspondent à vos besoins. Faites attention à l'ordre de **if=** et **of=**. Vous pouvez écrire une partition vierge sur une partition utilisée si vous êtes désordonné. | sdb2
90 Mot inconnu : of =>   * sda2 et sdb2 sont des partitions : pensez à mettre celles qui correspondent à vos besoins. Faites attention à l'ordre de **if=** et **of=**. Vous pouvez écrire une partition vierge sur une partition utilisée si vous êtes désordonné. | of

91 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Si sdb2 n'existe pas, dd commencera au début du disque et le créera |    => suggestions : ['']
91 Mot inconnu : sdb2 =>   * Si sdb2 n'existe pas, dd commencera au début du disque et le créera | sdb2
91 Mot inconnu : dd =>   * Si sdb2 n'existe pas, dd commencera au début du disque et le créera | dd

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * L'argument noerrror serait **risqué** puisqu'il ignore les erreurs de lecture |    => suggestions : ['']
92 Mot inconnu : noerrror =>   * L'argument noerrror serait **risqué** puisqu'il ignore les erreurs de lecture | noerrror

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La partition complète va être copiée : la partition de destination aura exactement la même taille et le même [[uuid_et_label|uuid]] qui est censé être unique. Cela peut être source de conflit. Vous pouvez toujours [[uuid_et_label#modifier_manuellement_l_uuid_d_un_systeme_de_fichiers|modifier cet uuid manuellement]], mais prenez garde que vous perdrez alors l'exactitude de copie. |    => suggestions : ['']
93 Mot inconnu : uuid_et_label =>   * La partition complète va être copiée : la partition de destination aura exactement la même taille et le même [[uuid_et_label|uuid]] qui est censé être unique. Cela peut être source de conflit. Vous pouvez toujours [[uuid_et_label#modifier_manuellement_l_uuid_d_un_systeme_de_fichiers|modifier cet uuid manuellement]], mais prenez garde que vous perdrez alors l'exactitude de copie. | uuid_et_label
93 Mot inconnu : uuid_et_label =>   * La partition complète va être copiée : la partition de destination aura exactement la même taille et le même [[uuid_et_label|uuid]] qui est censé être unique. Cela peut être source de conflit. Vous pouvez toujours [[uuid_et_label#modifier_manuellement_l_uuid_d_un_systeme_de_fichiers|modifier cet uuid manuellement]], mais prenez garde que vous perdrez alors l'exactitude de copie. | uuid_et_label
93 Après “prenez garde que”, ce verbe devrait être au subjonctif. =>   * La partition complète va être copiée : la partition de destination aura exactement la même taille et le même [[uuid_et_label|uuid]] qui est censé être unique. Cela peut être source de conflit. Vous pouvez toujours [[uuid_et_label#modifier_manuellement_l_uuid_d_un_systeme_de_fichiers|modifier cet uuid manuellement]], mais prenez garde que vous perdrez alors l'exactitude de copie. | perdrez => suggestions : ['perdissiez', 'perdiez']

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Veillez à ce que tout soit attaché après "conv=" |    => suggestions : ['']
97 Guillemets typographiques ouvrants. =>   * Veillez à ce que tout soit attaché après "conv=" | " => suggestions : ['«\xa0', '“']
97 Mot inconnu : conv =>   * Veillez à ce que tout soit attaché après "conv=" | conv

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * A priori l'argument conv=notrunc ne sert à rien : on copie une partition pas un fichier |    => suggestions : ['']
98 Mot inconnu : conv =>   * A priori l'argument conv=notrunc ne sert à rien : on copie une partition pas un fichier | conv
98 Mot inconnu : notrunc =>   * A priori l'argument conv=notrunc ne sert à rien : on copie une partition pas un fichier | notrunc

114 Mot inconnu : sda => Dans cet exemple, sda est la source. sdb est la cible. | sda
114 Mot inconnu : sdb => Dans cet exemple, sda est la source. sdb est la cible. | sdb

118 Mot inconnu : notrunc => **notrunc** signifie «ne pas tronquer le fichier en sortie». | notrunc

120 Mot inconnu : noerror => **noerror** signifie de continuer en cas d'erreur. Normalement, dd s'arrête en cas d'erreur. Si vous vous interrogez sur un disque dur, si vous vous demandez s'il fonctionne ou pas, vous pouvez tenter de l'utiliser, à titre de test, comme lecteur source de la commande dd. Vous devriez obtenir une erreur s'il ne fonctionne pas. Les lecteurs cibles en revanche doivent être vraiment en très mauvais état pour provoquer une erreur due à dd. | noerror
120 Mot inconnu : dd => **noerror** signifie de continuer en cas d'erreur. Normalement, dd s'arrête en cas d'erreur. Si vous vous interrogez sur un disque dur, si vous vous demandez s'il fonctionne ou pas, vous pouvez tenter de l'utiliser, à titre de test, comme lecteur source de la commande dd. Vous devriez obtenir une erreur s'il ne fonctionne pas. Les lecteurs cibles en revanche doivent être vraiment en très mauvais état pour provoquer une erreur due à dd. | dd
120 Mot inconnu : dd => **noerror** signifie de continuer en cas d'erreur. Normalement, dd s'arrête en cas d'erreur. Si vous vous interrogez sur un disque dur, si vous vous demandez s'il fonctionne ou pas, vous pouvez tenter de l'utiliser, à titre de test, comme lecteur source de la commande dd. Vous devriez obtenir une erreur s'il ne fonctionne pas. Les lecteurs cibles en revanche doivent être vraiment en très mauvais état pour provoquer une erreur due à dd. | dd
120 Mot inconnu : dd => **noerror** signifie de continuer en cas d'erreur. Normalement, dd s'arrête en cas d'erreur. Si vous vous interrogez sur un disque dur, si vous vous demandez s'il fonctionne ou pas, vous pouvez tenter de l'utiliser, à titre de test, comme lecteur source de la commande dd. Vous devriez obtenir une erreur s'il ne fonctionne pas. Les lecteurs cibles en revanche doivent être vraiment en très mauvais état pour provoquer une erreur due à dd. | dd

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Lire ici la procedure: [[https://korben.info/realiser-limage-dun-disque-dur-testdisk.html]] |    => suggestions : ['']
124 Mot inconnu : procedure =>   * Lire ici la procedure: [[https://korben.info/realiser-limage-dun-disque-dur-testdisk.html]] | procedure

125 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Utiliser de préférence l'application ddrescue adaptée aux disques en mauvais état. |    => suggestions : ['']
125 Mot inconnu : ddrescue =>   * Utiliser de préférence l'application ddrescue adaptée aux disques en mauvais état. | ddrescue

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Lire [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk|ici]] la procédure utilisant dd ou ddrescue, proposée par Testdisk [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk]] |    => suggestions : ['']
126 Mot inconnu : dd =>   * Lire [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk|ici]] la procédure utilisant dd ou ddrescue, proposée par Testdisk [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk]] | dd
126 Mot inconnu : ddrescue =>   * Lire [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk|ici]] la procédure utilisant dd ou ddrescue, proposée par Testdisk [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk]] | ddrescue
126 Mot inconnu : Testdisk =>   * Lire [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk|ici]] la procédure utilisant dd ou ddrescue, proposée par Testdisk [[https://www.cgsecurity.org/wiki/Damaged_Hard_Disk]] | testdisk

130 Mot inconnu : sda => La seule différence entre une grande partition et une petite partition, hormis la taille, est la table de partition. Si vous copiez sda vers sdb, un disque entier avec une seule partition, sdb étant plus petit que sda, alors vous devez faire : | sda
130 Mot inconnu : sdb => La seule différence entre une grande partition et une petite partition, hormis la taille, est la table de partition. Si vous copiez sda vers sdb, un disque entier avec une seule partition, sdb étant plus petit que sda, alors vous devez faire : | sdb
130 Mot inconnu : sdb => La seule différence entre une grande partition et une petite partition, hormis la taille, est la table de partition. Si vous copiez sda vers sdb, un disque entier avec une seule partition, sdb étant plus petit que sda, alors vous devez faire : | sdb
130 Mot inconnu : sda => La seule différence entre une grande partition et une petite partition, hormis la taille, est la table de partition. Si vous copiez sda vers sdb, un disque entier avec une seule partition, sdb étant plus petit que sda, alors vous devez faire : | sda

136 Mot inconnu : resize2fs => Une autre technique pour traiter ce genre de situation, est proposée à [[http://www.linuxquestions.org/questions/showthread.php?t=362506&page=20| la page 20 du fil en anglais]]. La technique proposée fait usage de commandes du type de resize2fs.  | resize2fs
136 Espace(s) en fin de ligne à supprimer. => Une autre technique pour traiter ce genre de situation, est proposée à [[http://www.linuxquestions.org/questions/showthread.php?t=362506&page=20| la page 20 du fil en anglais]]. La technique proposée fait usage de commandes du type de resize2fs.  |   => suggestions : ['']

138 Mot inconnu : skip => ===Les paramètres skip et seek=== | skip
138 Mot inconnu : seek => ===Les paramètres skip et seek=== | seek

140 Mot inconnu : skip => **skip** (voir ligne de commande précédente) saute des blocs d'entrée au début du média (sda). | skip
140 Mot inconnu : sda => **skip** (voir ligne de commande précédente) saute des blocs d'entrée au début du média (sda). | sda

142 Mot inconnu : seek => **seek** saute autant de blocs sur le média de sortie (sdb) avant d'écrire . En agissant ainsi, vous laissez intacts les 4 premiers Ko sur chaque disque : vous ne voulez pas dire à un lecteur qu'il est plus gros qu'il n'est en réalité en écrivant une table de partition depuis un lecteur plus gros vers un lecteur plus petit. | seek
142 Mot inconnu : sdb => **seek** saute autant de blocs sur le média de sortie (sdb) avant d'écrire . En agissant ainsi, vous laissez intacts les 4 premiers Ko sur chaque disque : vous ne voulez pas dire à un lecteur qu'il est plus gros qu'il n'est en réalité en écrivant une table de partition depuis un lecteur plus gros vers un lecteur plus petit. | sdb
142 Pas d’espace avant un point. => **seek** saute autant de blocs sur le média de sortie (sdb) avant d'écrire . En agissant ainsi, vous laissez intacts les 4 premiers Ko sur chaque disque : vous ne voulez pas dire à un lecteur qu'il est plus gros qu'il n'est en réalité en écrivant une table de partition depuis un lecteur plus gros vers un lecteur plus petit. |  . => suggestions : ['.']

144 Espace(s) surnuméraire(s) à supprimer. => ==== Copie  bit à bit d'un support : créer un fichier image parfait ==== |    => suggestions : [' ']

146 Mot inconnu : MBR => <note tip>Pour les partitions d'un disque dur, les 63 premiers secteurs d'un lecteur sont vides, sauf le secteur 1, le MBR. Si vous copiez une partition plus petite vers une plus grande, la plus grande partition affichera sa taille correcte avec : | mbr

156 Mot inconnu : fdisk => Cela parce que fdisk lit la table de partitions et df lit l'info de format.  | fdisk
156 Mot inconnu : df => Cela parce que fdisk lit la table de partitions et df lit l'info de format.  | df
156 Espace(s) en fin de ligne à supprimer. => Cela parce que fdisk lit la table de partitions et df lit l'info de format.  |   => suggestions : ['']

159 Mot inconnu : dd => Si vous copiez avec dd une petite partition vers une plus grande, la plus grande sera maintenant formatée de façon identique à la plus petite et il n'y aura contrairement à ce que vous attendez aucune place disponible sur le lecteur. Le reste de la partition étant ignoré par dd, de même que pour le système d'exploitation. Un gâchis en somme. | dd
159 Mot inconnu : dd => Si vous copiez avec dd une petite partition vers une plus grande, la plus grande sera maintenant formatée de façon identique à la plus petite et il n'y aura contrairement à ce que vous attendez aucune place disponible sur le lecteur. Le reste de la partition étant ignoré par dd, de même que pour le système d'exploitation. Un gâchis en somme. | dd

166 Mot inconnu : iso => <note important>Le choix de l'extension, iso dans notre cas n'est pas anodin et va modifier le format du fichier de sauvegarde.</note> | iso

168 Mot inconnu : dd => dd if=<support à sauvegarder> of=/home/user/<support sauvegardé>.iso **conv=noerror**,sync | dd
168 Mot inconnu : of => dd if=<support à sauvegarder> of=/home/user/<support sauvegardé>.iso **conv=noerror**,sync | of
168 Mot inconnu : iso => dd if=<support à sauvegarder> of=/home/user/<support sauvegardé>.iso **conv=noerror**,sync | iso
168 Mot inconnu : conv => dd if=<support à sauvegarder> of=/home/user/<support sauvegardé>.iso **conv=noerror**,sync | conv
168 Mot inconnu : noerror => dd if=<support à sauvegarder> of=/home/user/<support sauvegardé>.iso **conv=noerror**,sync | noerror
168 Mot inconnu : sync => dd if=<support à sauvegarder> of=/home/user/<support sauvegardé>.iso **conv=noerror**,sync | sync

169 Mot inconnu : sync => Dans ce cas, la copie bit à bit n'est pas possible, de même que dans le cas de l'utilisation des options sync, et  notrunc. | sync
169 Espace(s) surnuméraire(s) à supprimer. => Dans ce cas, la copie bit à bit n'est pas possible, de même que dans le cas de l'utilisation des options sync, et  notrunc. |    => suggestions : [' ']
169 Mot inconnu : notrunc => Dans ce cas, la copie bit à bit n'est pas possible, de même que dans le cas de l'utilisation des options sync, et  notrunc. | notrunc

170 Mot inconnu : sync => L'utilisation de sync permet aussi d'avoir un meilleur résultat notamment pour les vidéos. | sync

172 Mot inconnu : nautilus => Une fois fait, vous pourrez monter l'image dans un dossier et naviguer avec nautilus en utilisant la commande suivante : | nautilus

178 Mot inconnu : cp => Puis copier les données vers son nouveau support via une simple copie cp | cp

182 Mot inconnu : cp => La commande cp a un commutateur -a pour la copie récursive et garder les droits inchangés. | cp
182 Il manque un espace à côté du tiret. => La commande cp a un commutateur -a pour la copie récursive et garder les droits inchangés. |  - => suggestions : [' – ', ' — ']
184 Mot inconnu : dd => ===Alternative : Agrandir la partition après le dd === | dd

187 Espace(s) en fin de ligne à supprimer. => 1° Ne travailler que sur des partitions démontées  |   => suggestions : ['']

189 Mot inconnu : root => 2° Ouvrir une console root (ou travailler depuis un live CD) et taper  | root
189 Espace(s) en fin de ligne à supprimer. => 2° Ouvrir une console root (ou travailler depuis un live CD) et taper  |   => suggestions : ['']

193 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  | où => suggestions : ['Où']
193 Mot inconnu : xx => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  | xx
193 Il manque un espace à côté du tiret. => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  |  - => suggestions : [' – ', ' — ']
193 Guillemets typographiques ouvrants. => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  | " => suggestions : ['«\xa0', '“']
193 Mot inconnu : check => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  | check
193 Guillemets typographiques fermants. => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  | " => suggestions : ['\xa0»', '”']
193 Espace(s) en fin de ligne à supprimer. => où xx est évidemment le nom de la partition concernée, afin de vérifier l'intégrité du système de fichiers. Pour info, l'option -f force la vérification, sans se contenter d'un simple "check" du journal.  |   => suggestions : ['']

194 Doublon. => De toutes façons, si vous ne ne faites pas, la commande suivante vous l'exigera avant de s'exécuter.  | ne ne => suggestions : ['ne']
194 Espace(s) en fin de ligne à supprimer. => De toutes façons, si vous ne ne faites pas, la commande suivante vous l'exigera avant de s'exécuter.  |   => suggestions : ['']
196 Espace(s) en fin de ligne à supprimer. => 3° agrandir le système de fichiers :  |   => suggestions : ['']

201 Mot inconnu : dd => ====dd d'une grande partition vers une plus petite==== | dd

203 Mot inconnu : sda3 => Maintenant, si vous copiez sda3 vers sda2 (plus petit que sda3), c'est différent. Ce que vous désirez faire est alors cela : | sda3
203 Mot inconnu : sda2 => Maintenant, si vous copiez sda3 vers sda2 (plus petit que sda3), c'est différent. Ce que vous désirez faire est alors cela : | sda2
203 Mot inconnu : sda3 => Maintenant, si vous copiez sda3 vers sda2 (plus petit que sda3), c'est différent. Ce que vous désirez faire est alors cela : | sda3

213 Mot inconnu : sda2 => La toute fin d'un lecteur contient généralement des zéros. Ainsi, si vous avez de la place dans sda2 pour les données de sda3, les zéros de sda3 sont tronqués (les blocs contenant uniquement des zéros sont remplacés par des chaînés de cinq caractères astérisque). | sda2
213 Mot inconnu : sda3 => La toute fin d'un lecteur contient généralement des zéros. Ainsi, si vous avez de la place dans sda2 pour les données de sda3, les zéros de sda3 sont tronqués (les blocs contenant uniquement des zéros sont remplacés par des chaînés de cinq caractères astérisque). | sda3
213 Mot inconnu : sda3 => La toute fin d'un lecteur contient généralement des zéros. Ainsi, si vous avez de la place dans sda2 pour les données de sda3, les zéros de sda3 sont tronqués (les blocs contenant uniquement des zéros sont remplacés par des chaînés de cinq caractères astérisque). | sda3

215 Mot inconnu : conv => Dans ce cas, il ne faut pas utiliser **conv=notrunc**, qui copierait tous les blocs contenant uniquement des zéros tel quel, sans les tronquer. | conv
215 Mot inconnu : notrunc => Dans ce cas, il ne faut pas utiliser **conv=notrunc**, qui copierait tous les blocs contenant uniquement des zéros tel quel, sans les tronquer. | notrunc

226 Grands nombres : utilisez des espaces insécables. => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | 2 048 => suggestions : ['2\xa0048']
226 Guillemets typographiques ouvrants. => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | ' => suggestions : ['“', '‘', '‹']
226 Guillemets typographiques fermants. => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | ' => suggestions : ['”', '’', '›']
226 Mot inconnu : chmod => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | chmod
226 Mot inconnu : rwx => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | rwx
226 Mot inconnu : moncd => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | moncd
226 Mot inconnu : iso => Les secteurs de CD ont une taille de 2 048 octets, vous faites donc ainsi une copie secteur par secteur. Le résultat sera un 'fichier image du CD' sur le disque dur. Vous pouvez faire un **chmod a+rwx moncd.iso** pour permettre d'écrire dans l'image. | iso

238 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => dd ne peut pas écrire dans un CD. Pour cela vous devez avoir recours à un logiciel de gravure. | dd => suggestions : ['Dd']
238 Mot inconnu : dd => dd ne peut pas écrire dans un CD. Pour cela vous devez avoir recours à un logiciel de gravure. | dd

242 Guillemets typographiques ouvrants. => Si vous êtes inquiet au sujet d'espions avec des détecteurs supra-conducteurs à interférences quantiques, vous pouvez toujours ajouter une boucle 'for' pour effacer le disque d'un niveau de sécurité gouvernemental: copier coller les deux lignes suivantes dans un éditeur de texte : | ' => suggestions : ['“', '‘', '‹']
242 Guillemets typographiques fermants. => Si vous êtes inquiet au sujet d'espions avec des détecteurs supra-conducteurs à interférences quantiques, vous pouvez toujours ajouter une boucle 'for' pour effacer le disque d'un niveau de sécurité gouvernemental: copier coller les deux lignes suivantes dans un éditeur de texte : | ' => suggestions : ['”', '’', '›']

261 Mot inconnu : bootable => ====Créer une clé USB bootable==== | bootable
263 Élision de l’article devant un mot commençant par une voyelle. => <note warning>Note : méthode réservée aux utilisateurs avancés et concentrés, une simple erreur de lettre dans le of=/ peut détruire toutes les données du système sur lequel vous travaillez.</note> | le  => suggestions : ['l’']
263 Mot inconnu : of => <note warning>Note : méthode réservée aux utilisateurs avancés et concentrés, une simple erreur de lettre dans le of=/ peut détruire toutes les données du système sur lequel vous travaillez.</note> | of

273 Guillemets typographiques ouvrants. => Connectez la clé dans le port USB, puis faites à nouveau un ''sudo fdisk -l'' : cela permet de repérer le point de montage de la partition. | '' => suggestions : ['«\xa0', '“']
273 Mot inconnu : sudo => Connectez la clé dans le port USB, puis faites à nouveau un ''sudo fdisk -l'' : cela permet de repérer le point de montage de la partition. | sudo
273 Mot inconnu : fdisk => Connectez la clé dans le port USB, puis faites à nouveau un ''sudo fdisk -l'' : cela permet de repérer le point de montage de la partition. | fdisk
273 Il manque un espace à côté du tiret. => Connectez la clé dans le port USB, puis faites à nouveau un ''sudo fdisk -l'' : cela permet de repérer le point de montage de la partition. |  - => suggestions : [' – ', ' — ']
273 Guillemets typographiques fermants. => Connectez la clé dans le port USB, puis faites à nouveau un ''sudo fdisk -l'' : cela permet de repérer le point de montage de la partition. | '' => suggestions : ['\xa0»', '”']
275 Guillemets typographiques fermants. => Note : pour un point de montage du type ''/dev/sd**x**1'', on utilisera ''**/dev/sdx**'' dans la commande suivante. | '' => suggestions : ['\xa0»', '”']

284 Mot inconnu : bootable => ==== Créer un DVD bootable ==== | bootable

295 Mot inconnu : MBR => ====Copier seulement le MBR d'un disque dur==== | mbr
303 Mot inconnu : of => <note warning>ATTENTION : Si vous ne l'avez pas encore deviné, intervertir les arguments de **if=** et **of=**, dans la ligne de commande de dd intervertit le sens de l'écriture !</note> | of
303 Mot inconnu : dd => <note warning>ATTENTION : Si vous ne l'avez pas encore deviné, intervertir les arguments de **if=** et **of=**, dans la ligne de commande de dd intervertit le sens de l'écriture !</note> | dd

307 Mot inconnu : SATA => Pour ma part je travaille sur plusieurs machines, mais sur celle que j'utilise le plus j'ai deux disques durs SATA. Ils sont complètement identiques. Avant de faire quelque chose qui pourrait être dangereux, je démarre à partir d'un live-CD et je lance : | sata

311 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => et je copie ainsi mon lecteur système de travail courant sur le lecteur sdb. Si je casse mon installation sur sda,  je démarre avec le live CD et je fais : | et => suggestions : ['Et']
311 Mot inconnu : sdb => et je copie ainsi mon lecteur système de travail courant sur le lecteur sdb. Si je casse mon installation sur sda,  je démarre avec le live CD et je fais : | sdb
311 Mot inconnu : sda => et je copie ainsi mon lecteur système de travail courant sur le lecteur sdb. Si je casse mon installation sur sda,  je démarre avec le live CD et je fais : | sda
311 Espace(s) surnuméraire(s) à supprimer. => et je copie ainsi mon lecteur système de travail courant sur le lecteur sdb. Si je casse mon installation sur sda,  je démarre avec le live CD et je fais : |    => suggestions : [' ']

316 Mot inconnu : bs => Notez bien que **bs=4096** marche plus rapidement pour des machines ayant au moins 128Mo de RAM. dd utilise pas mal de tampons ('buffers'). Avec **bs=4096**, sur des machines modernes, la vitesse de transfert optimale pour les disques durs est atteinte. | bs
316 Mot inconnu : dd => Notez bien que **bs=4096** marche plus rapidement pour des machines ayant au moins 128Mo de RAM. dd utilise pas mal de tampons ('buffers'). Avec **bs=4096**, sur des machines modernes, la vitesse de transfert optimale pour les disques durs est atteinte. | dd
316 Mot inconnu : buffers => Notez bien que **bs=4096** marche plus rapidement pour des machines ayant au moins 128Mo de RAM. dd utilise pas mal de tampons ('buffers'). Avec **bs=4096**, sur des machines modernes, la vitesse de transfert optimale pour les disques durs est atteinte. | buffers
316 Mot inconnu : bs => Notez bien que **bs=4096** marche plus rapidement pour des machines ayant au moins 128Mo de RAM. dd utilise pas mal de tampons ('buffers'). Avec **bs=4096**, sur des machines modernes, la vitesse de transfert optimale pour les disques durs est atteinte. | bs

320 Mot inconnu : gzip => On génère d'abord le Master-image de notre support de stockage au format compressé gzip,  | gzip
320 Espace(s) en fin de ligne à supprimer. => On génère d'abord le Master-image de notre support de stockage au format compressé gzip,  |   => suggestions : ['']

329 Mot inconnu : MBR => Cette méthode maintient le MBR, les Flag... | mbr
329 Mot inconnu : Flag => Cette méthode maintient le MBR, les Flag... | flag
329 Typographie : points de suspension. Utilisez le caractère dédié. => Cette méthode maintient le MBR, les Flag... | ... => suggestions : ['…']

334 Mot inconnu : booter => Vous devrez booter depuis un CD pour cela,  | booter
334 Espace(s) en fin de ligne à supprimer. => Vous devrez booter depuis un CD pour cela,  |   => suggestions : ['']

335 Mot inconnu : boot => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | boot
335 Mot inconnu : boot => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | boot
335 Mot inconnu : helix => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | helix
335 Mot inconnu : DoD => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | dod
335 Mot inconnu : dd => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | dd
335 Mot inconnu : dcfldd => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | dcfldd
335 Mot inconnu : dd => http://www.e-fense.com/helix est un bon CD de boot (mais il y en a bien d'autres !). L'environnement de boot helix contient la version DoD de dd appelée dcfldd. Elle fonctionne de la même manière que dd, mais possède une barre de progression. | dd

341 Avant « etc. », il faut mettre une virgule. => Ceci est très utile pour rendre le lecteur presque comme neuf, cela permet de le débarrasser des virus, des chevaux de Troie etc... La plupart des lecteurs ont **0x0000ffh** écrit en usine dans chaque secteur. |  etc. => suggestions : [', etc.']
341 Un seul point après « etc. » => Ceci est très utile pour rendre le lecteur presque comme neuf, cela permet de le débarrasser des virus, des chevaux de Troie etc... La plupart des lecteurs ont **0x0000ffh** écrit en usine dans chaque secteur. | etc... => suggestions : ['etc.']
341 Mot inconnu : x0000ffh => Ceci est très utile pour rendre le lecteur presque comme neuf, cela permet de le débarrasser des virus, des chevaux de Troie etc... La plupart des lecteurs ont **0x0000ffh** écrit en usine dans chaque secteur. | x0000ffh

343 Il manque un trait d’union. => ====Écrire par dessus toute la place libre d'une partition==== | par dessus => suggestions : ['par-dessus']

345 Il manque les traits d’union. => C'est à dire rendre impossible la récupération des fichiers effacés.  | c'est à dire => suggestions : ['C’est-à-dire']
345 Espace(s) en fin de ligne à supprimer. => C'est à dire rendre impossible la récupération des fichiers effacés.  |   => suggestions : ['']

351 Mot inconnu : dd => Quand dd dit : « plus d'espace libre sur le périphérique », tout l'espace disponible a été réécrit avec des caractères aléatoires. Ensuite, effacez le gros fichier avec : | dd

357 Accord de nombre erroné : « geek » devrait être au pluriel. => =====Quelques trucs pour les geek===== | geek => suggestions : ['geeks']

365 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => utilisez PgUp, PgDn, flèche vers le haut, flèche vers le bas pour se déplacer dans les pages. less est mon éditeur préféré. Ou plutôt il le serait s'il permettait l'édition ! | utilisez => suggestions : ['Utilisez']
365 Mot inconnu : PgUp => utilisez PgUp, PgDn, flèche vers le haut, flèche vers le bas pour se déplacer dans les pages. less est mon éditeur préféré. Ou plutôt il le serait s'il permettait l'édition ! | pgup
365 Mot inconnu : PgDn => utilisez PgUp, PgDn, flèche vers le haut, flèche vers le bas pour se déplacer dans les pages. less est mon éditeur préféré. Ou plutôt il le serait s'il permettait l'édition ! | pgdn
365 Mot inconnu : less => utilisez PgUp, PgDn, flèche vers le haut, flèche vers le bas pour se déplacer dans les pages. less est mon éditeur préféré. Ou plutôt il le serait s'il permettait l'édition ! | less

397 Accentuez les majuscules. => ====Etat de la mémoire==== | etat => suggestions : ['État']
397 Mot inconnu : Etat => ====Etat de la mémoire==== | etat
406 Mot inconnu : dcfldd => <note important>Nota Bene : Dans les commandes qui suivent, **dcfldd** peut être remplacé par dd  (**dcfldd** est un programme qui ajoute aux fonctionnalités de dd l'affichage d'une barre de progression, il peut être utilisé depuis un live CD helix).</note> | dcfldd
406 Mot inconnu : dd => <note important>Nota Bene : Dans les commandes qui suivent, **dcfldd** peut être remplacé par dd  (**dcfldd** est un programme qui ajoute aux fonctionnalités de dd l'affichage d'une barre de progression, il peut être utilisé depuis un live CD helix).</note> | dd
406 Espace(s) surnuméraire(s) à supprimer. => <note important>Nota Bene : Dans les commandes qui suivent, **dcfldd** peut être remplacé par dd  (**dcfldd** est un programme qui ajoute aux fonctionnalités de dd l'affichage d'une barre de progression, il peut être utilisé depuis un live CD helix).</note> |    => suggestions : [' ']
406 Mot inconnu : dcfldd => <note important>Nota Bene : Dans les commandes qui suivent, **dcfldd** peut être remplacé par dd  (**dcfldd** est un programme qui ajoute aux fonctionnalités de dd l'affichage d'une barre de progression, il peut être utilisé depuis un live CD helix).</note> | dcfldd
406 Mot inconnu : dd => <note important>Nota Bene : Dans les commandes qui suivent, **dcfldd** peut être remplacé par dd  (**dcfldd** est un programme qui ajoute aux fonctionnalités de dd l'affichage d'une barre de progression, il peut être utilisé depuis un live CD helix).</note> | dd
406 Mot inconnu : helix => <note important>Nota Bene : Dans les commandes qui suivent, **dcfldd** peut être remplacé par dd  (**dcfldd** est un programme qui ajoute aux fonctionnalités de dd l'affichage d'une barre de progression, il peut être utilisé depuis un live CD helix).</note> | helix

414 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => et copie mon disque de travail en cours sda vers le disque sdb. Si je détruis l'installation sur sda, je n'ai qu'à booter avec le CD helix et : | et => suggestions : ['Et']
414 Mot inconnu : sda => et copie mon disque de travail en cours sda vers le disque sdb. Si je détruis l'installation sur sda, je n'ai qu'à booter avec le CD helix et : | sda
414 Mot inconnu : sdb => et copie mon disque de travail en cours sda vers le disque sdb. Si je détruis l'installation sur sda, je n'ai qu'à booter avec le CD helix et : | sdb
414 Mot inconnu : sda => et copie mon disque de travail en cours sda vers le disque sdb. Si je détruis l'installation sur sda, je n'ai qu'à booter avec le CD helix et : | sda
414 Mot inconnu : booter => et copie mon disque de travail en cours sda vers le disque sdb. Si je détruis l'installation sur sda, je n'ai qu'à booter avec le CD helix et : | booter
414 Mot inconnu : helix => et copie mon disque de travail en cours sda vers le disque sdb. Si je détruis l'installation sur sda, je n'ai qu'à booter avec le CD helix et : | helix

420 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => et je retrouve chaque chose exactement comme avant qu'un truc idiot que j'essayais de faire ne fonctionne pas. Vous pouvez vraiment, vraiment apprendre Linux de cette manière, car vous ne pouvez absolument pas casser ce dont vous avez une copie exacte.    | et => suggestions : ['Et']
420 Espace(s) en fin de ligne à supprimer. => et je retrouve chaque chose exactement comme avant qu'un truc idiot que j'essayais de faire ne fonctionne pas. Vous pouvez vraiment, vraiment apprendre Linux de cette manière, car vous ne pouvez absolument pas casser ce dont vous avez une copie exacte.    |     => suggestions : ['']

421 Mot inconnu : root => Vous pourriez aussi envisager de faire une partition root séparée de /home, et rendre /home assez grand pour contenir la partition root, Vous pouvez alors faire : | root
421 Mot inconnu : root => Vous pourriez aussi envisager de faire une partition root séparée de /home, et rendre /home assez grand pour contenir la partition root, Vous pouvez alors faire : | root

427 Mot inconnu : backup => pour réaliser un backup de root puis : | backup
427 Mot inconnu : root => pour réaliser un backup de root puis : | root

433 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => pour remettre l'image de root dans la partition root si vous avez semé la pagaille et ne pouvez plus lancer le serveur X, ou éditer /etc/fstab, et ne trouvez pas ce que vous avez fait de mal. Cela ne prend que quelques minutes pour restaurer une partition root de 15 Go depuis un fichier image. | pour => suggestions : ['Pour']
433 Mot inconnu : root => pour remettre l'image de root dans la partition root si vous avez semé la pagaille et ne pouvez plus lancer le serveur X, ou éditer /etc/fstab, et ne trouvez pas ce que vous avez fait de mal. Cela ne prend que quelques minutes pour restaurer une partition root de 15 Go depuis un fichier image. | root
433 Mot inconnu : root => pour remettre l'image de root dans la partition root si vous avez semé la pagaille et ne pouvez plus lancer le serveur X, ou éditer /etc/fstab, et ne trouvez pas ce que vous avez fait de mal. Cela ne prend que quelques minutes pour restaurer une partition root de 15 Go depuis un fichier image. | root
433 Mot inconnu : root => pour remettre l'image de root dans la partition root si vous avez semé la pagaille et ne pouvez plus lancer le serveur X, ou éditer /etc/fstab, et ne trouvez pas ce que vous avez fait de mal. Cela ne prend que quelques minutes pour restaurer une partition root de 15 Go depuis un fichier image. | root
433 Si “Go” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => pour remettre l'image de root dans la partition root si vous avez semé la pagaille et ne pouvez plus lancer le serveur X, ou éditer /etc/fstab, et ne trouvez pas ce que vous avez fait de mal. Cela ne prend que quelques minutes pour restaurer une partition root de 15 Go depuis un fichier image. | 15 go => suggestions : ['15\xa0Go']

442 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **urandom** est un générateur Linux de nombres aléatoires.     |    => suggestions : ['']
442 Mot inconnu : urandom =>   * **urandom** est un générateur Linux de nombres aléatoires.     | urandom
442 Espace(s) en fin de ligne à supprimer. =>   * **urandom** est un générateur Linux de nombres aléatoires.     |      => suggestions : ['']

443 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **mes_octets_aleatoires** est un fichier. |    => suggestions : ['']
443 Mot inconnu : mes_octets_aleatoires =>   * **mes_octets_aleatoires** est un fichier. | mes_octets_aleatoires

444 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La taille de bloc est égale à 1 octet (**bs=1**)  |    => suggestions : ['']
444 Mot inconnu : bs =>   * La taille de bloc est égale à 1 octet (**bs=1**)  | bs
444 Espace(s) en fin de ligne à supprimer. =>   * La taille de bloc est égale à 1 octet (**bs=1**)  |   => suggestions : ['']

445 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * et on envoie 100 blocs, donc au total 100 octets (**count=100**). |    => suggestions : ['']
445 Mot inconnu : count =>   * et on envoie 100 blocs, donc au total 100 octets (**count=100**). | count

447 Mot inconnu : gpg => **gpg** a besoin d'une graine ('seed') aléatoire pour créer des clés. Créer un fichier de, disons, 4096 octets aléatoires, qu'on peut passer à **gpg**, permettra d'avoir une graine vraiment aléatoire. | gpg
447 Mot inconnu : seed => **gpg** a besoin d'une graine ('seed') aléatoire pour créer des clés. Créer un fichier de, disons, 4096 octets aléatoires, qu'on peut passer à **gpg**, permettra d'avoir une graine vraiment aléatoire. | seed
447 Mot inconnu : gpg => **gpg** a besoin d'une graine ('seed') aléatoire pour créer des clés. Créer un fichier de, disons, 4096 octets aléatoires, qu'on peut passer à **gpg**, permettra d'avoir une graine vraiment aléatoire. | gpg

450 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => /dev/random génère autant de bits aléatoires que la réserve entropique peut en contenir. Cela produit des valeurs hautement aléatoires pour des clés de cryptographie. Si davantage d'octets aléatoires sont nécessaires, le processus s'arrête jusqu'à ce que la réserve entropique soit remplie de nouveau (bouger la souris aide). /dev/urandom n'a pas cette restriction. Si l'utilisateur exige plus de bits que de présents à ce moment dans la réserve entropique, ils sont produits en utilisant un générateur de nombres pseudo-aléatoires. | génère => suggestions : ['Génère']

452 Il manque un trait d’union. => ====Écrire des données aléatoires par dessus un fichier avant de l'effacer==== | par dessus => suggestions : ['par-dessus']

473 Il manque un trait d’union. => Ceci écrira des caractères aléatoires par dessus la totalité du fichier . | par dessus => suggestions : ['par-dessus']

475 Mot inconnu : dd => Ainsi même quelqu'un qui inspectera le contenu du disque avec dd ne retrouvera pas son contenu. | dd

485 Mot inconnu : sdb2 => Cela créera un fichier qui est l'exacte réplique de la partition sdb2. Vous pouvez remplacer par hdb, sda, hda ou toute autre désignation de votre disque. Ou : | sdb2
485 Mot inconnu : hdb => Cela créera un fichier qui est l'exacte réplique de la partition sdb2. Vous pouvez remplacer par hdb, sda, hda ou toute autre désignation de votre disque. Ou : | hdb
485 Mot inconnu : sda => Cela créera un fichier qui est l'exacte réplique de la partition sdb2. Vous pouvez remplacer par hdb, sda, hda ou toute autre désignation de votre disque. Ou : | sda
485 Mot inconnu : hda => Cela créera un fichier qui est l'exacte réplique de la partition sdb2. Vous pouvez remplacer par hdb, sda, hda ou toute autre désignation de votre disque. Ou : | hda
491 Espace(s) en fin de ligne à supprimer. => Ou si cela ne fonctionne pas, essayez :  |   => suggestions : ['']

497 Mot inconnu : gzip => Crée une archive gzip de la partition complète. Pour la restauration, utiliser : | gzip
503 Espace(s) en fin de ligne à supprimer. => <note tip>Si cela ne fonctionne pas, essayez :  |   => suggestions : ['']

509 Mot inconnu : bzip2 => Pour bzip2 (plus lent, plus petit), remplacer par bzip2 et bunzip2 | bzip2
509 Mot inconnu : bzip2 => Pour bzip2 (plus lent, plus petit), remplacer par bzip2 et bunzip2 | bzip2
509 Mot inconnu : bunzip2 => Pour bzip2 (plus lent, plus petit), remplacer par bzip2 et bunzip2 | bunzip2

517 Mot inconnu : root => De cette façon, vous pouvez avoir un grand disque dur et le partitionner, ainsi vous pouvez sauvegarder votre partition root. Si vous  | root
517 Espace(s) en fin de ligne à supprimer. => De cette façon, vous pouvez avoir un grand disque dur et le partitionner, ainsi vous pouvez sauvegarder votre partition root. Si vous  |   => suggestions : ['']

518 Mot inconnu : root => semez la pagaille dans votre partition root, vous n'avez qu'à booter depuis le CD helix (ou un live CD quelconque) et restaurer l'image. | root
518 Mot inconnu : booter => semez la pagaille dans votre partition root, vous n'avez qu'à booter depuis le CD helix (ou un live CD quelconque) et restaurer l'image. | booter
518 Mot inconnu : helix => semez la pagaille dans votre partition root, vous n'avez qu'à booter depuis le CD helix (ou un live CD quelconque) et restaurer l'image. | helix

541 Si “Mo” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => ce qui crée un disque virtuel de 16 Mo plein de zéros... | 16 mo => suggestions : ['16\xa0Mo']
541 Typographie : points de suspension. Utilisez le caractère dédié. => ce qui crée un disque virtuel de 16 Mo plein de zéros... | ... => suggestions : ['…']

556 Mot inconnu : hdparm => Vous pouvez êtes tenté de ne mesurer le débit qu'une fois. Mais, en fait, il vaut mieux lancer plusieurs fois **hdparm -t /dev/ram7**, car hdparm est un peu difficile avec les lecteurs virtuels. | hdparm
556 Mot inconnu : hdparm => Vous pouvez êtes tenté de ne mesurer le débit qu'une fois. Mais, en fait, il vaut mieux lancer plusieurs fois **hdparm -t /dev/ram7**, car hdparm est un peu difficile avec les lecteurs virtuels. | hdparm

565 Espace(s) surnuméraire(s) à supprimer. => Maintenant, vous pouvez utiliser le lecteur virtuel comme un lecteur matériel. Ceci est particulièrement remarquable pour travailler sur des gros documents ou en programmation. Vous pouvez copier le gros document ou le projet de programmation sur le lecteur virtuel,  lequel sur ma machine est au moins 27 fois aussi rapide que /dev/sda, et chaque fois que vous enregistrez l'énorme document, ou que vous avez besoin de compiler, c'est comme si votre machine carburait au nitrométhane. La seule chose est que le lecteur virtuel est volatile. Si vous perdez l'alimentation, ou éteignez, les données sur le lecteur virtuel sont perdues. Utilisez une machine fiable, par temps clair, si vous utilisez un lecteur virtuel. |    => suggestions : [' ']
565 Mot inconnu : nitrométhane => Maintenant, vous pouvez utiliser le lecteur virtuel comme un lecteur matériel. Ceci est particulièrement remarquable pour travailler sur des gros documents ou en programmation. Vous pouvez copier le gros document ou le projet de programmation sur le lecteur virtuel,  lequel sur ma machine est au moins 27 fois aussi rapide que /dev/sda, et chaque fois que vous enregistrez l'énorme document, ou que vous avez besoin de compiler, c'est comme si votre machine carburait au nitrométhane. La seule chose est que le lecteur virtuel est volatile. Si vous perdez l'alimentation, ou éteignez, les données sur le lecteur virtuel sont perdues. Utilisez une machine fiable, par temps clair, si vous utilisez un lecteur virtuel. | nitrométhane

579 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => est votre mémoire système. Vous pouvez en fait copier tout périphérique de type bloc ou caractère dans un fichier avec dd. | est => suggestions : ['Est']
579 Mot inconnu : dd => est votre mémoire système. Vous pouvez en fait copier tout périphérique de type bloc ou caractère dans un fichier avec dd. | dd

582 Mot inconnu : dd => Vous pouvez en fait copier tout périphérique de type bloc ou caractère dans un fichier avec dd. | dd

584 Mot inconnu : bs => La capture de la mémoire sur un système rapide, avec **bs=1024** prend environ 60 secondes, un disque dur de 120 Go environ une heure, un CD vers un disque dur environ 10 minutes, une disquette vers un disque dur environ 2 minutes.  | bs
584 Si “Go” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => La capture de la mémoire sur un système rapide, avec **bs=1024** prend environ 60 secondes, un disque dur de 120 Go environ une heure, un CD vers un disque dur environ 10 minutes, une disquette vers un disque dur environ 2 minutes.  | 120 go => suggestions : ['120\xa0Go']
584 Espace(s) en fin de ligne à supprimer. => La capture de la mémoire sur un système rapide, avec **bs=1024** prend environ 60 secondes, un disque dur de 120 Go environ une heure, un CD vers un disque dur environ 10 minutes, une disquette vers un disque dur environ 2 minutes.  |   => suggestions : ['']

586 Mot inconnu : dd => Avec dd, les images sur vos disquettes ne changeront pas du tout. Si vous avez une disquette DOS bootable, et que vous la sauvegardez sur votre disque dur sous forme de fichier image, quand vous restaurez cette image sur une autre disquette, elle sera bootable.  | dd
586 Mot inconnu : bootable => Avec dd, les images sur vos disquettes ne changeront pas du tout. Si vous avez une disquette DOS bootable, et que vous la sauvegardez sur votre disque dur sous forme de fichier image, quand vous restaurez cette image sur une autre disquette, elle sera bootable.  | bootable
586 Mot inconnu : bootable => Avec dd, les images sur vos disquettes ne changeront pas du tout. Si vous avez une disquette DOS bootable, et que vous la sauvegardez sur votre disque dur sous forme de fichier image, quand vous restaurez cette image sur une autre disquette, elle sera bootable.  | bootable
586 Espace(s) en fin de ligne à supprimer. => Avec dd, les images sur vos disquettes ne changeront pas du tout. Si vous avez une disquette DOS bootable, et que vous la sauvegardez sur votre disque dur sous forme de fichier image, quand vous restaurez cette image sur une autre disquette, elle sera bootable.  |   => suggestions : ['']

588 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => dd est un excellent outil pour créer une image d'un CD d'installation de MS Windows. Lorsque vous faites une copie d'un tel CD, il y a un secteur qui possède une taille non standard. C'est le dernier secteur. dd ne remplit pas ce secteur, créant ainsi une copie indistinguable de l'original. Si vous gravez le CD, avec cdrao, le disque résultant sera une copie absolument exacte de l'original. | dd => suggestions : ['Dd']
588 Mot inconnu : dd => dd est un excellent outil pour créer une image d'un CD d'installation de MS Windows. Lorsque vous faites une copie d'un tel CD, il y a un secteur qui possède une taille non standard. C'est le dernier secteur. dd ne remplit pas ce secteur, créant ainsi une copie indistinguable de l'original. Si vous gravez le CD, avec cdrao, le disque résultant sera une copie absolument exacte de l'original. | dd
588 Mot inconnu : dd => dd est un excellent outil pour créer une image d'un CD d'installation de MS Windows. Lorsque vous faites une copie d'un tel CD, il y a un secteur qui possède une taille non standard. C'est le dernier secteur. dd ne remplit pas ce secteur, créant ainsi une copie indistinguable de l'original. Si vous gravez le CD, avec cdrao, le disque résultant sera une copie absolument exacte de l'original. | dd
588 Mot inconnu : cdrao => dd est un excellent outil pour créer une image d'un CD d'installation de MS Windows. Lorsque vous faites une copie d'un tel CD, il y a un secteur qui possède une taille non standard. C'est le dernier secteur. dd ne remplit pas ce secteur, créant ainsi une copie indistinguable de l'original. Si vous gravez le CD, avec cdrao, le disque résultant sera une copie absolument exacte de l'original. | cdrao

590 Mot inconnu : dd => dd écrira sur la console si vous oubliez la partie **of=/dev/output** | dd
590 Mot inconnu : of => dd écrira sur la console si vous oubliez la partie **of=/dev/output** | of

596 Mot inconnu : monfichier => écrira le fichier monfichier dans la console. | monfichier

606 Il manque un trait d’union. => Si vous avez besoin d'effacer vos traces rapidement, placez la commande suivante dans un script pour écrire des zéros par dessus la mémoire système. N'essayez pas cela pour le plaisir. | par dessus => suggestions : ['par-dessus']

614 Il manque un trait d’union. => Cela écrira des zéros par dessus toute la mémoire non protégée, et gèlera la machine, vous aurez donc à rebooter (attention, cela empêche aussi le fonctionnement du journal du système de fichiers et pourrait corrompre le système de fichiers). | par dessus => suggestions : ['par-dessus']
614 Mot inconnu : rebooter => Cela écrira des zéros par dessus toute la mémoire non protégée, et gèlera la machine, vous aurez donc à rebooter (attention, cela empêche aussi le fonctionnement du journal du système de fichiers et pourrait corrompre le système de fichiers). | rebooter

618 Typographie : points de suspension. Utilisez le caractère dédié. => Si vous êtes curieux de savoir ce qu'il peut bien y avoir sur votre disque... | ... => suggestions : ['…']

619 Mot inconnu : MBR => ===Lire le MBR=== | mbr

621 Espace(s) surnuméraire(s) à supprimer. => Si vous voulez voir  à quoi ressemble un MBR, faites : |    => suggestions : [' ']
621 Mot inconnu : MBR => Si vous voulez voir  à quoi ressemble un MBR, faites : | mbr

626 Guillemets typographiques ouvrants. => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  | " => suggestions : ['«\xa0', '“']
626 Mot inconnu : dd => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  | dd
626 Typographie : un ou trois points ? => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  | .. => suggestions : ['…', '.']
626 Espace(s) en fin de ligne à supprimer. => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  |   => suggestions : ['']

628 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  | vous => suggestions : ['Vous']
628 Mot inconnu : MBR => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  | mbr
628 Mot inconnu : MS_DOS => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  | ms_dos
628 Mot inconnu : MBR => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  | mbr
628 Mot inconnu : MBR => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  | mbr
628 Mot inconnu : GPT => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  | gpt
628 Espace(s) en fin de ligne à supprimer. => vous montrera le secteur 0, ou MBR. Le code de l'amorce et la table des partitions MS_DOS sont dans le MBR ou le contenu d'un MBR protecteur si la table de partition est GPT.  |   => suggestions : ['']

630 Espace(s) surnuméraire(s) à supprimer. => ===Lire la description  GPT ===  |    => suggestions : [' ']
630 Mot inconnu : GPT => ===Lire la description  GPT ===  | gpt
630 Espace(s) en fin de ligne à supprimer. => ===Lire la description  GPT ===  |   => suggestions : ['']

631 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  Si vous voulez voir  à quoi ressemble une  table de partition[[https://fr.wikipedia.org/wiki/GUID_Partition_Table|GPT]] faites : |   => suggestions : ['']
631 Espace(s) surnuméraire(s) à supprimer. =>  Si vous voulez voir  à quoi ressemble une  table de partition[[https://fr.wikipedia.org/wiki/GUID_Partition_Table|GPT]] faites : |    => suggestions : [' ']
631 Espace(s) surnuméraire(s) à supprimer. =>  Si vous voulez voir  à quoi ressemble une  table de partition[[https://fr.wikipedia.org/wiki/GUID_Partition_Table|GPT]] faites : |    => suggestions : [' ']

635 Guillemets typographiques ouvrants. => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  | " => suggestions : ['«\xa0', '“']
635 Mot inconnu : dd => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  | dd
635 Typographie : un ou trois points ? => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  | .. => suggestions : ['…', '.']
635 Espace(s) en fin de ligne à supprimer. => ("2>/dev/null" pour supprimer les messages de dd dans la sortie écran..)  |   => suggestions : ['']

636 Espace(s) surnuméraire(s) à supprimer. => vous montrera le secteur 1  contenant  l'entête  et les 32 autres secteurs contenant la description des 128 partitions. |    => suggestions : [' ']
636 Espace(s) surnuméraire(s) à supprimer. => vous montrera le secteur 1  contenant  l'entête  et les 32 autres secteurs contenant la description des 128 partitions. |    => suggestions : [' ']
636 Espace(s) surnuméraire(s) à supprimer. => vous montrera le secteur 1  contenant  l'entête  et les 32 autres secteurs contenant la description des 128 partitions. |    => suggestions : [' ']

638 Mot inconnu : Sector => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | sector
638 Accord de genre erroné : « Maximum » est masculin, « Native » est féminin. => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | native => suggestions : ['Natif']
638 Mot inconnu : Address => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | address
638 Mot inconnu : MNA => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | mna
638 Mot inconnu : helix => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | helix
638 Mot inconnu : dd => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | dd
638 Mot inconnu : skip => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | skip
638 Mot inconnu : MNA => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | mna
638 Mot inconnu : SATA => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | sata
638 Si “Go” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => Pour voir la fin du disque vous devez connaitre le nombre total de secteurs dans le disque, et le disque doit être configuré avec le Maximum Adressable Sector (le secteur adressable maximum) identique au Maximum Native Address (= MNA, l'adresse native maximale). Le CD helix possède un utilitaire pour paramétrer cela correctement. Dans la commande dd votre valeur pour skip sera un de moins que la MNA du disque. Pour un disque Seagate SATA de 120 Go : | 120 go => suggestions : ['120\xa0Go']

644 Mot inconnu : monfichier => Ainsi cela lit secteur par secteur, et écrit le dernier secteur dans monfichier. Même avec l'adressage LBA, les disques sont lus «secrètement» en secteurs, cylindres et têtes. | monfichier
644 Mot inconnu : LBA => Ainsi cela lit secteur par secteur, et écrit le dernier secteur dans monfichier. Même avec l'adressage LBA, les disques sont lus «secrètement» en secteurs, cylindres et têtes. | lba
646 Espace(s) en fin de ligne à supprimer. => Pour un cylindre donné il y a 63 secteurs par tête, et on compte 255 têtes par cylindre. Chaque disque possède un nombre total bien déterminé de cylindres. Le nombre total d'octets par cylindre s'obtient donc par la multiplication suivante :  |   => suggestions : ['']

648 Signe de multiplication typographique. => 512x63x255= nombre d'octets par cylindre.  | 512x63 => suggestions : ['512\xa0×\xa063']
648 Mot inconnu : x63x255 => 512x63x255= nombre d'octets par cylindre.  | x63x255
648 Espace(s) en fin de ligne à supprimer. => 512x63x255= nombre d'octets par cylindre.  |   => suggestions : ['']

650 Signe de multiplication typographique. => 63x255= 16 065=nombre de secteurs par cylindre.  | 63x255 => suggestions : ['63\xa0×\xa0255']
650 Mot inconnu : x255 => 63x255= 16 065=nombre de secteurs par cylindre.  | x255
650 Grands nombres : utilisez des espaces insécables. => 63x255= 16 065=nombre de secteurs par cylindre.  | 16 065 => suggestions : ['16\xa0065']
650 Espace(s) en fin de ligne à supprimer. => 63x255= 16 065=nombre de secteurs par cylindre.  |   => suggestions : ['']

652 Espace(s) en fin de ligne à supprimer. => 512 est la taille en octets d'un secteur.  |   => suggestions : ['']

654 Grands nombres : utilisez des espaces insécables. => Avec 234 441 647 secteurs au total, et 16 065 secteurs par cylindre, vous obtenez 14 593.317584812 cylindres, un nombre qui n'est pas entier, et il y a alors quelques secteurs excédentaires qui ne constituent pas un cylindre entier. Ceci vous laisse avec 5 102 secteurs qui ne peuvent pas être partitionnés car une partition ne comprend que des cylindres entiers. C'est comme avoir une partie de personne, cela ne constitue pas vraiment une personne.  | 234 441 647 => suggestions : ['234\xa0441\xa0647']
654 Grands nombres : utilisez des espaces insécables. => Avec 234 441 647 secteurs au total, et 16 065 secteurs par cylindre, vous obtenez 14 593.317584812 cylindres, un nombre qui n'est pas entier, et il y a alors quelques secteurs excédentaires qui ne constituent pas un cylindre entier. Ceci vous laisse avec 5 102 secteurs qui ne peuvent pas être partitionnés car une partition ne comprend que des cylindres entiers. C'est comme avoir une partie de personne, cela ne constitue pas vraiment une personne.  | 16 065 => suggestions : ['16\xa0065']
654 Grands nombres : utilisez des espaces insécables. => Avec 234 441 647 secteurs au total, et 16 065 secteurs par cylindre, vous obtenez 14 593.317584812 cylindres, un nombre qui n'est pas entier, et il y a alors quelques secteurs excédentaires qui ne constituent pas un cylindre entier. Ceci vous laisse avec 5 102 secteurs qui ne peuvent pas être partitionnés car une partition ne comprend que des cylindres entiers. C'est comme avoir une partie de personne, cela ne constitue pas vraiment une personne.  | 14 593 => suggestions : ['14\xa0593']
654 Grands nombres : utilisez des espaces insécables. => Avec 234 441 647 secteurs au total, et 16 065 secteurs par cylindre, vous obtenez 14 593.317584812 cylindres, un nombre qui n'est pas entier, et il y a alors quelques secteurs excédentaires qui ne constituent pas un cylindre entier. Ceci vous laisse avec 5 102 secteurs qui ne peuvent pas être partitionnés car une partition ne comprend que des cylindres entiers. C'est comme avoir une partie de personne, cela ne constitue pas vraiment une personne.  | 5 102 => suggestions : ['5\xa0102']
654 Espace(s) en fin de ligne à supprimer. => Avec 234 441 647 secteurs au total, et 16 065 secteurs par cylindre, vous obtenez 14 593.317584812 cylindres, un nombre qui n'est pas entier, et il y a alors quelques secteurs excédentaires qui ne constituent pas un cylindre entier. Ceci vous laisse avec 5 102 secteurs qui ne peuvent pas être partitionnés car une partition ne comprend que des cylindres entiers. C'est comme avoir une partie de personne, cela ne constitue pas vraiment une personne.  |   => suggestions : ['']

656 Pour le “t” euphonique, il faut deux traits d’union. Pas d’apostrophe. Pas d’espace. => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. |  t- => suggestions : ['-t-']
656 Mot inconnu : dd => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. | dd
656 Si “Go” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. | 120 go => suggestions : ['120\xa0Go']
656 Grands nombres : utilisez des espaces insécables. => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. | 234 441 647 => suggestions : ['234\xa0441\xa0647']
656 Grands nombres : utilisez des espaces insécables. => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. | 5 102 => suggestions : ['5\xa0102']
656 Grands nombres : utilisez des espaces insécables. => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. | 234 436 545 => suggestions : ['234\xa0436\xa0545']
656 Mot inconnu : partitionables => Ainsi, qu'arrive t-il à ces secteurs ? Ils deviennent des **secteurs en surplus** après la dernière partition. Vous ne pouvez pas en principe les lire avec un système d'exploitation. Mais dd peut. C'est vraiment une bonne idée de vérifier ce qui peut être écrit dans les secteurs en surplus. Pour notre disque dur Seagate de 120 Go vous soustrayez du nombre total de secteurs (234 441 647) ceux en surplus (5 102) = 234 436 545 secteurs partitionables. | partitionables

658 Mot inconnu : oeil => Pour y voir plus clair sur ces histoires de têtes, cylindres et secteurs, jetez un coup d'oeil plus haut. | oeil

660 Grands nombres : utilisez des espaces insécables. => Ceci écrit les 5 102 derniers secteurs dans monfichier. : | 5 102 => suggestions : ['5\xa0102']
660 Mot inconnu : monfichier => Ceci écrit les 5 102 derniers secteurs dans monfichier. : | monfichier

665 Mot inconnu : Midnight => Lancez **Midnight Commander** (mc) pour voir le fichier. Si il y a quelque chose dedans, vous n'en avez pas besoin pour quoi que ce soit. Dans ce cas vous devriez écrire par dessus des caractères aléatoires. | midnight
665 Mot inconnu : mc => Lancez **Midnight Commander** (mc) pour voir le fichier. Si il y a quelque chose dedans, vous n'en avez pas besoin pour quoi que ce soit. Dans ce cas vous devriez écrire par dessus des caractères aléatoires. | mc
665 Il faut élider “si” et l’accoler au pronom. => Lancez **Midnight Commander** (mc) pour voir le fichier. Si il y a quelque chose dedans, vous n'en avez pas besoin pour quoi que ce soit. Dans ce cas vous devriez écrire par dessus des caractères aléatoires. | si  => suggestions : ['S’']
665 Il manque un trait d’union. => Lancez **Midnight Commander** (mc) pour voir le fichier. Si il y a quelque chose dedans, vous n'en avez pas besoin pour quoi que ce soit. Dans ce cas vous devriez écrire par dessus des caractères aléatoires. | par dessus => suggestions : ['par-dessus']

670 Mot inconnu : Ecrasera => Ecrasera les 5 102 secteurs en surplus sur notre notre disque dur Seagate de 120 Go | ecrasera
670 Grands nombres : utilisez des espaces insécables. => Ecrasera les 5 102 secteurs en surplus sur notre notre disque dur Seagate de 120 Go | 5 102 => suggestions : ['5\xa0102']
670 Doublon. => Ecrasera les 5 102 secteurs en surplus sur notre notre disque dur Seagate de 120 Go | notre notre => suggestions : ['notre']
670 Si “Go” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => Ecrasera les 5 102 secteurs en surplus sur notre notre disque dur Seagate de 120 Go | 120 go => suggestions : ['120\xa0Go']

679 Mot inconnu : monfichier => écrira dans **monfichier**, les 8 000 secteurs  qui suivent les 16 000 premiers secteurs du lecteur.  | monfichier
679 Grands nombres : utilisez des espaces insécables. => écrira dans **monfichier**, les 8 000 secteurs  qui suivent les 16 000 premiers secteurs du lecteur.  | 8 000 => suggestions : ['8\xa0000']
679 Espace(s) surnuméraire(s) à supprimer. => écrira dans **monfichier**, les 8 000 secteurs  qui suivent les 16 000 premiers secteurs du lecteur.  |    => suggestions : [' ']
679 Grands nombres : utilisez des espaces insécables. => écrira dans **monfichier**, les 8 000 secteurs  qui suivent les 16 000 premiers secteurs du lecteur.  | 16 000 => suggestions : ['16\xa0000']
679 Espace(s) en fin de ligne à supprimer. => écrira dans **monfichier**, les 8 000 secteurs  qui suivent les 16 000 premiers secteurs du lecteur.  |   => suggestions : ['']
681 Espace(s) surnuméraire(s) à supprimer. => Ben oui, quoi !!   On saute (**skip**) 4096 * 2000 =  8 192 000 octets, d'accord ?  |     => suggestions : [' ']
681 Mot inconnu : skip => Ben oui, quoi !!   On saute (**skip**) 4096 * 2000 =  8 192 000 octets, d'accord ?  | skip
681 Signe de multiplication typographique. => Ben oui, quoi !!   On saute (**skip**) 4096 * 2000 =  8 192 000 octets, d'accord ?  | 4096 * 2000 => suggestions : ['4096\xa0×\xa02000']
681 Grands nombres : utilisez des espaces insécables. => Ben oui, quoi !!   On saute (**skip**) 4096 * 2000 =  8 192 000 octets, d'accord ?  | 8 192 000 => suggestions : ['8\xa0192\xa0000']
681 Espace(s) en fin de ligne à supprimer. => Ben oui, quoi !!   On saute (**skip**) 4096 * 2000 =  8 192 000 octets, d'accord ?  |   => suggestions : ['']
683 Grands nombres : utilisez des espaces insécables. => Bon. Comme il y a 512 octets dans un secteur, on a sauté : 8 192 000/512 = 16 000 secteurs !! | 8 192 000 => suggestions : ['8\xa0192\xa0000']
683 Grands nombres : utilisez des espaces insécables. => Bon. Comme il y a 512 octets dans un secteur, on a sauté : 8 192 000/512 = 16 000 secteurs !! | 16 000 => suggestions : ['16\xa0000']

685 Mot inconnu : count => Et ensuite on a envoyé (**count=1000**) 1000 blocs de 4096 octets, soit 4 096 000 octets, ce qui fait finalement  4 096 000/512= 8 000 secteurs, vous voyez qu'on s'y retrouve !!!   | count
685 Grands nombres : utilisez des espaces insécables. => Et ensuite on a envoyé (**count=1000**) 1000 blocs de 4096 octets, soit 4 096 000 octets, ce qui fait finalement  4 096 000/512= 8 000 secteurs, vous voyez qu'on s'y retrouve !!!   | 4 096 000 => suggestions : ['4\xa0096\xa0000']
685 Espace(s) surnuméraire(s) à supprimer. => Et ensuite on a envoyé (**count=1000**) 1000 blocs de 4096 octets, soit 4 096 000 octets, ce qui fait finalement  4 096 000/512= 8 000 secteurs, vous voyez qu'on s'y retrouve !!!   |    => suggestions : [' ']
685 Grands nombres : utilisez des espaces insécables. => Et ensuite on a envoyé (**count=1000**) 1000 blocs de 4096 octets, soit 4 096 000 octets, ce qui fait finalement  4 096 000/512= 8 000 secteurs, vous voyez qu'on s'y retrouve !!!   | 4 096 000 => suggestions : ['4\xa0096\xa0000']
685 Grands nombres : utilisez des espaces insécables. => Et ensuite on a envoyé (**count=1000**) 1000 blocs de 4096 octets, soit 4 096 000 octets, ce qui fait finalement  4 096 000/512= 8 000 secteurs, vous voyez qu'on s'y retrouve !!!   | 8 000 => suggestions : ['8\xa0000']
685 Espace(s) en fin de ligne à supprimer. => Et ensuite on a envoyé (**count=1000**) 1000 blocs de 4096 octets, soit 4 096 000 octets, ce qui fait finalement  4 096 000/512= 8 000 secteurs, vous voyez qu'on s'y retrouve !!!   |    => suggestions : ['']

707 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 18b représente la taille en octets de 18 secteurs de 512 octets chacun, 80x multiplie par le nombre de cylindres, 2x multiplie par le nombre de têtes - au total 1474560 octets - . Cela paramètre une unique requête de lecture de 1474560 octets sur /dev/fd0 et une unique requête d'écriture sur /home/user/floppy.image. |  -  => suggestions : [' – ', ' — ', ' − ']
707 Formatage des grands nombres. => 18b représente la taille en octets de 18 secteurs de 512 octets chacun, 80x multiplie par le nombre de cylindres, 2x multiplie par le nombre de têtes - au total 1474560 octets - . Cela paramètre une unique requête de lecture de 1474560 octets sur /dev/fd0 et une unique requête d'écriture sur /home/user/floppy.image. | 1474560 => suggestions : ['1\xa0474\xa0560']
707 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 18b représente la taille en octets de 18 secteurs de 512 octets chacun, 80x multiplie par le nombre de cylindres, 2x multiplie par le nombre de têtes - au total 1474560 octets - . Cela paramètre une unique requête de lecture de 1474560 octets sur /dev/fd0 et une unique requête d'écriture sur /home/user/floppy.image. |  -  => suggestions : [' – ', ' — ', ' − ']
707 Pas d’espace avant un point. => 18b représente la taille en octets de 18 secteurs de 512 octets chacun, 80x multiplie par le nombre de cylindres, 2x multiplie par le nombre de têtes - au total 1474560 octets - . Cela paramètre une unique requête de lecture de 1474560 octets sur /dev/fd0 et une unique requête d'écriture sur /home/user/floppy.image. |  . => suggestions : ['.']
707 Formatage des grands nombres. => 18b représente la taille en octets de 18 secteurs de 512 octets chacun, 80x multiplie par le nombre de cylindres, 2x multiplie par le nombre de têtes - au total 1474560 octets - . Cela paramètre une unique requête de lecture de 1474560 octets sur /dev/fd0 et une unique requête d'écriture sur /home/user/floppy.image. | 1474560 => suggestions : ['1\xa0474\xa0560']
707 Confusion probable : “sur” est une préposition ou un adjectif signifiant acide ou aigre ; utilisez “sûr” pour certain, vrai ou sans danger. => 18b représente la taille en octets de 18 secteurs de 512 octets chacun, 80x multiplie par le nombre de cylindres, 2x multiplie par le nombre de têtes - au total 1474560 octets - . Cela paramètre une unique requête de lecture de 1474560 octets sur /dev/fd0 et une unique requête d'écriture sur /home/user/floppy.image. | sur => suggestions : ['sûr']

709 Typographie : points de suspension. Utilisez le caractère dédié. => Il faut comprendre que, dans le cas d'une disquette, pour chacun des 80 cylindres supposés, 2 têtes (fictives) lisent chacune une piste de 18 secteurs... Pour y voir plus clair en ce qui concerne têtes, cylindres et secteurs voir plus haut. | ... => suggestions : ['…']

711 Mot inconnu : boot => Cela crée une image de la disquette sur le disque dur, laissant intact l'info de boot. | boot

713 Mot inconnu : bs => Le second exemple utilise le **bs=** par défaut de 512, qui est la taille du secteur d'une disquette. | bs

723 Mot inconnu : boot => Vous pouvez créer une disquette de démarrage avec le fichier **boot.img**, qui est assez facile à obtenir. Vous avez seulement besoin d'un programme qui commencera l'écriture au secteur 1. | boot
723 Mot inconnu : img => Vous pouvez créer une disquette de démarrage avec le fichier **boot.img**, qui est assez facile à obtenir. Vous avez seulement besoin d'un programme qui commencera l'écriture au secteur 1. | img

729 Mot inconnu : bootable => Ceci crée une disquette bootable et vous pouvez ajouter des données dessus. | bootable

744 Mot inconnu : MBR => ===Ne copier que le MBR et le secteur de boot d'une disquette=== | mbr
744 Mot inconnu : boot => ===Ne copier que le MBR et le secteur de boot d'une disquette=== | boot

754 Mot inconnu : DRM => ===Réparer une disquette infectée par un cheval de Troie DRM=== | drm
760 Guillemets typographiques ouvrants. => Normalement, écrire des octets nuls sur les deux premiers secteurs d'une disquette rend la disquette complètement inutilisable. Elle ne peut même plus être formatée après un tel traitement ! Mais grâce à l'image d'une disquette neuve, inutilisée, que vous avez pris soin de faire plus haut (disons : 'floppy.image'), vous pouvez réécrire correctement les deux premiers secteurs. | ' => suggestions : ['“', '‘', '‹']
760 Mot inconnu : floppy => Normalement, écrire des octets nuls sur les deux premiers secteurs d'une disquette rend la disquette complètement inutilisable. Elle ne peut même plus être formatée après un tel traitement ! Mais grâce à l'image d'une disquette neuve, inutilisée, que vous avez pris soin de faire plus haut (disons : 'floppy.image'), vous pouvez réécrire correctement les deux premiers secteurs. | floppy
760 Il manque un espace. => Normalement, écrire des octets nuls sur les deux premiers secteurs d'une disquette rend la disquette complètement inutilisable. Elle ne peut même plus être formatée après un tel traitement ! Mais grâce à l'image d'une disquette neuve, inutilisée, que vous avez pris soin de faire plus haut (disons : 'floppy.image'), vous pouvez réécrire correctement les deux premiers secteurs. | image => suggestions : [' image']

764 Mot inconnu : helix => Faire démarrer les deux machines avec le CD helix, juste pour être absolument sûr.  | helix
764 Espace(s) en fin de ligne à supprimer. => Faire démarrer les deux machines avec le CD helix, juste pour être absolument sûr.  |   => suggestions : ['']
780 Mot inconnu : bs => Voici comment cette commande fonctionne : la taille du bloc correspond à un cylindre. bs=1065b équivaut à un cylindre sur un disque LBA. La commande dd est tubée vers netcat, qui prend pour arguments : | bs
780 Mot inconnu : LBA => Voici comment cette commande fonctionne : la taille du bloc correspond à un cylindre. bs=1065b équivaut à un cylindre sur un disque LBA. La commande dd est tubée vers netcat, qui prend pour arguments : | lba
780 Mot inconnu : dd => Voici comment cette commande fonctionne : la taille du bloc correspond à un cylindre. bs=1065b équivaut à un cylindre sur un disque LBA. La commande dd est tubée vers netcat, qui prend pour arguments : | dd
780 Mot inconnu : netcat => Voici comment cette commande fonctionne : la taille du bloc correspond à un cylindre. bs=1065b équivaut à un cylindre sur un disque LBA. La commande dd est tubée vers netcat, qui prend pour arguments : | netcat

781 Espace(s) en fin de ligne à supprimer. => 1/ L'adresse IP de la cible (comme 192.168.0.1 ou toute adresse avec un port ouvert)  |   => suggestions : ['']

787 Mot inconnu : Ghost => C'est un peu comme cela que Norton Ghost fonctionne pour copier l'image d'une partition sur une autre machine. | ghost

791 Mot inconnu : cybers => Supposons que vous souhaitiez trouver si votre petite amie vous trompe, a des cybers amants, ou se conduit mal avec son ordinateur. Même si l'ordinateur est protégé par un mot de passe, vous pouvez booter avec le CD: http://www.efense.com/helix ou un autre live-CD et chercher la chaine de caractères dans la partition entière, en utilisant la commande grep: | cybers
791 Mot inconnu : booter => Supposons que vous souhaitiez trouver si votre petite amie vous trompe, a des cybers amants, ou se conduit mal avec son ordinateur. Même si l'ordinateur est protégé par un mot de passe, vous pouvez booter avec le CD: http://www.efense.com/helix ou un autre live-CD et chercher la chaine de caractères dans la partition entière, en utilisant la commande grep: | booter
791 Mot inconnu : grep => Supposons que vous souhaitiez trouver si votre petite amie vous trompe, a des cybers amants, ou se conduit mal avec son ordinateur. Même si l'ordinateur est protégé par un mot de passe, vous pouvez booter avec le CD: http://www.efense.com/helix ou un autre live-CD et chercher la chaine de caractères dans la partition entière, en utilisant la commande grep: | grep

797 Mot inconnu : __pas => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | __pas
797 Mot inconnu : accents__ => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | accents__
797 Mot inconnu : grep => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | grep
797 Mot inconnu : grep => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | grep
797 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | -3 => suggestions : ['−3', '– 3', '— 3']
797 Guillemets typographiques ouvrants. => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | ' => suggestions : ['“', '‘', '‹']
797 Guillemets typographiques fermants. => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | ' => suggestions : ['”', '’', '›']
797 Mot inconnu : dd => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | dd
797 Mot inconnu : x020d0d90h => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | x020d0d90h
797 Formatage des grands nombres. => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  | 34409872 => suggestions : ['34\xa0409\xa0872']
797 Espace(s) en fin de ligne à supprimer. => Cherchera dans toute la partition la chaîne de caractères (__pas d'accents__) spécifiée entre les guillemets (utilisez éventuellement les options de grep: avec, disons, grep -3 'chaine' vous auriez un peu plus de contexte affiché pour chaque résultat de recherche). Chercher plusieurs fois dans une partition entière peut être fastidieux. Cette commande particulière sur les chaines de caractères imprime le résultat de la recherche sur l'écran, avec l'offset où il se trouve dans la partition. dd travaille en système décimal. L'offset des disques travaille en hexadécimal. Disons que vous trouvez la chaine de caractères dans votre partition à l'offset 0x020d0d90h. Vous convertissez cela en décimal avec l'une des nombreuses calculatrices trouvées sur Linux. Ceci est l'offset décimal 34409872. Divisé par 512 par secteur,  |   => suggestions : ['']

798 Formatage des grands nombres. => nous obtenons 67206,78125. | 67206 => suggestions : ['67\xa0206']

807 Mot inconnu : NTFS => Cette ligne de commande écrira à l'écran en évitant ainsi d'écrire accidentellement un fichier dans un espace libre du disque, qui peut contenir des fichiers effacés que vous désirez rechercher. Avec cette méthode, vous pouvez rechercher dans tous les fichiers effacés, toute activité de chat ou e-mails. Elle fonctionne quelle que soit la sécurité utilisée sur la machine. Elle fonctionne avec les partitions NTFS, ext2, ext3, reiserfs, swap, et FAT. | ntfs
807 Mot inconnu : ext2 => Cette ligne de commande écrira à l'écran en évitant ainsi d'écrire accidentellement un fichier dans un espace libre du disque, qui peut contenir des fichiers effacés que vous désirez rechercher. Avec cette méthode, vous pouvez rechercher dans tous les fichiers effacés, toute activité de chat ou e-mails. Elle fonctionne quelle que soit la sécurité utilisée sur la machine. Elle fonctionne avec les partitions NTFS, ext2, ext3, reiserfs, swap, et FAT. | ext2
807 Mot inconnu : ext3 => Cette ligne de commande écrira à l'écran en évitant ainsi d'écrire accidentellement un fichier dans un espace libre du disque, qui peut contenir des fichiers effacés que vous désirez rechercher. Avec cette méthode, vous pouvez rechercher dans tous les fichiers effacés, toute activité de chat ou e-mails. Elle fonctionne quelle que soit la sécurité utilisée sur la machine. Elle fonctionne avec les partitions NTFS, ext2, ext3, reiserfs, swap, et FAT. | ext3
807 Mot inconnu : reiserfs => Cette ligne de commande écrira à l'écran en évitant ainsi d'écrire accidentellement un fichier dans un espace libre du disque, qui peut contenir des fichiers effacés que vous désirez rechercher. Avec cette méthode, vous pouvez rechercher dans tous les fichiers effacés, toute activité de chat ou e-mails. Elle fonctionne quelle que soit la sécurité utilisée sur la machine. Elle fonctionne avec les partitions NTFS, ext2, ext3, reiserfs, swap, et FAT. | reiserfs

810 Mot inconnu : CD-RW => Notez tant qu'on y est que vous pouvez copier la mémoire du système sur un CD. Ceci est utile pour décrire le contenu de la mémoire sans contaminer le disque dur. Je recommande d'utiliser un CD-RW pour vous exercer un peu. Ceci ne concerne pas dd, mais c'est cool. \\ | cd-rw
810 Mot inconnu : dd => Notez tant qu'on y est que vous pouvez copier la mémoire du système sur un CD. Ceci est utile pour décrire le contenu de la mémoire sans contaminer le disque dur. Je recommande d'utiliser un CD-RW pour vous exercer un peu. Ceci ne concerne pas dd, mais c'est cool. \\ | dd

823 Mot inconnu : dd => dd ne copiera pas ou n'effacera pas une HPA (host protected area, zone hôte protégée de l'hôte). si correctement utilisée, dd effacera complètement un disque, mais pas aussi bien qu'en utilisant l'effacement matériel garanti, la commande d'effacement sécurisé. | dd
823 Mot inconnu : HPA => dd ne copiera pas ou n'effacera pas une HPA (host protected area, zone hôte protégée de l'hôte). si correctement utilisée, dd effacera complètement un disque, mais pas aussi bien qu'en utilisant l'effacement matériel garanti, la commande d'effacement sécurisé. | hpa
823 Mot inconnu : host => dd ne copiera pas ou n'effacera pas une HPA (host protected area, zone hôte protégée de l'hôte). si correctement utilisée, dd effacera complètement un disque, mais pas aussi bien qu'en utilisant l'effacement matériel garanti, la commande d'effacement sécurisé. | host
823 Mot inconnu : protected => dd ne copiera pas ou n'effacera pas une HPA (host protected area, zone hôte protégée de l'hôte). si correctement utilisée, dd effacera complètement un disque, mais pas aussi bien qu'en utilisant l'effacement matériel garanti, la commande d'effacement sécurisé. | protected
823 Mot inconnu : area => dd ne copiera pas ou n'effacera pas une HPA (host protected area, zone hôte protégée de l'hôte). si correctement utilisée, dd effacera complètement un disque, mais pas aussi bien qu'en utilisant l'effacement matériel garanti, la commande d'effacement sécurisé. | area
823 Mot inconnu : dd => dd ne copiera pas ou n'effacera pas une HPA (host protected area, zone hôte protégée de l'hôte). si correctement utilisée, dd effacera complètement un disque, mais pas aussi bien qu'en utilisant l'effacement matériel garanti, la commande d'effacement sécurisé. | dd

831 Mot inconnu : grep => On fera une recherche en s'aidant de grep : | grep
837 Guillemets typographiques ouvrants. => La chaîne de caractères entre guillemets est n'importe quelle séquence ASCII ou hexadécimale (doit être séparée avec un espace : '55 <espace>aa<espace>09' recherche la chaîne hexadécimale '55aa09').  | ' => suggestions : ['“', '‘', '‹']
837 Mot inconnu : aa => La chaîne de caractères entre guillemets est n'importe quelle séquence ASCII ou hexadécimale (doit être séparée avec un espace : '55 <espace>aa<espace>09' recherche la chaîne hexadécimale '55aa09').  | aa
837 Guillemets typographiques fermants. => La chaîne de caractères entre guillemets est n'importe quelle séquence ASCII ou hexadécimale (doit être séparée avec un espace : '55 <espace>aa<espace>09' recherche la chaîne hexadécimale '55aa09').  | ' => suggestions : ['”', '’', '›']
837 Guillemets typographiques ouvrants. => La chaîne de caractères entre guillemets est n'importe quelle séquence ASCII ou hexadécimale (doit être séparée avec un espace : '55 <espace>aa<espace>09' recherche la chaîne hexadécimale '55aa09').  | ' => suggestions : ['“', '‘', '‹']
837 Mot inconnu : aa09 => La chaîne de caractères entre guillemets est n'importe quelle séquence ASCII ou hexadécimale (doit être séparée avec un espace : '55 <espace>aa<espace>09' recherche la chaîne hexadécimale '55aa09').  | aa09
837 Espace(s) en fin de ligne à supprimer. => La chaîne de caractères entre guillemets est n'importe quelle séquence ASCII ou hexadécimale (doit être séparée avec un espace : '55 <espace>aa<espace>09' recherche la chaîne hexadécimale '55aa09').  |   => suggestions : ['']

839 Mot inconnu : grep => On peut utiliser pour cette recherche grep les classes de caractères POSIX : | grep
839 Mot inconnu : POSIX => On peut utiliser pour cette recherche grep les classes de caractères POSIX : | posix

896 Mot inconnu : of => === of=fichier === | of

899 Mot inconnu : ibs => === ibs=n === | ibs

902 Mot inconnu : obs => === obs=n === | obs

903 Espace(s) surnuméraire(s) à supprimer. => Spécifie que la taille des blocs de sortie est  n octets (512 par défaut). |    => suggestions : [' ']

905 Mot inconnu : bs => === bs=n === | bs

906 Mot inconnu : ibs => Spécifie la taille des blocs d'entrée et de sortie à n octets, en prenant le pas sur ibs= et obs= | ibs
906 Mot inconnu : obs => Spécifie la taille des blocs d'entrée et de sortie à n octets, en prenant le pas sur ibs= et obs= | obs
908 Mot inconnu : sync => Si aucune conversion autre que : sync, noerror et notrunc n'est spécifiée, chaque bloc d'entrée est copié dans la sortie en un seul bloc sans regroupement des petits blocs. | sync
908 Mot inconnu : noerror => Si aucune conversion autre que : sync, noerror et notrunc n'est spécifiée, chaque bloc d'entrée est copié dans la sortie en un seul bloc sans regroupement des petits blocs. | noerror
908 Mot inconnu : notrunc => Si aucune conversion autre que : sync, noerror et notrunc n'est spécifiée, chaque bloc d'entrée est copié dans la sortie en un seul bloc sans regroupement des petits blocs. | notrunc

910 Mot inconnu : cbs => === cbs=n === | cbs

911 Mot inconnu : block => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. | block
911 Espace(s) surnuméraire(s) à supprimer. => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. |    => suggestions : [' ']
911 Mot inconnu : unblock => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. | unblock
911 Mot inconnu : cbs => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. | cbs
911 Mot inconnu : block => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. | block
911 Mot inconnu : unblock => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. | unblock
911 Mot inconnu : EBCDIC => Spécifie la taille des blocs pour la conversion pour les opérandes block  et unblock, en nombre d'octets (0 par défaut). Si cbs est omis ou donné égal à 0, alors utiliser block ou unblock produit des résultats non spécifiés. Cette option n'est utilisée que si la conversion ASCII ou EBCDIC est spécifiée. | ebcdic

913 Mot inconnu : ascii => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ascii
913 Mot inconnu : asciib => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | asciib
913 Mot inconnu : unblock => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | unblock
913 Mot inconnu : SPACE => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | space
913 Mot inconnu : ebcdic => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ebcdic
913 Mot inconnu : ebcdicb => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ebcdicb
913 Mot inconnu : ibm => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ibm
913 Mot inconnu : ibmb => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ibmb
913 Mot inconnu : block => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | block
913 Mot inconnu : EBCDIC => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ebcdic
913 Mot inconnu : EBCDIC => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | ebcdic
913 Mot inconnu : SPACE => Pour les opérandes ascii et asciib, les données d'entrée sont traitées comme décrit pour l'opérande unblock si ce n'est que les caractères sont convertis en ASCII avant que les caractères SPACE de remplissage ne soient effacés. Pour les opérandes ebcdic, ebcdicb, ibm, et ibmb, les données d'entrée sont traitées comme décrit pour l'opérande block si ce n'est que les caractères sont convertis en EBCDIC ou en IBM EBCDIC après l'ajout des caractères SPACE de remplissage. | space

918 Mot inconnu : skip => === skip=n === | skip

919 Mot inconnu : bs => Saute n blocs d'entrée (en utilisant la taille de bloc d'entrée spécifiée par bs ou ibs ou la taille par défaut) avant de commencer la copie. | bs
919 Mot inconnu : ibs => Saute n blocs d'entrée (en utilisant la taille de bloc d'entrée spécifiée par bs ou ibs ou la taille par défaut) avant de commencer la copie. | ibs

921 Mot inconnu : pointables => Sur les fichiers pointables ('seekable files'),  l'implémentation lit les blocs ou pointe derrière eux. Sur les fichiers non pointables, les blocs sont lus et les données laissées de côté.  | pointables
921 Mot inconnu : seekable => Sur les fichiers pointables ('seekable files'),  l'implémentation lit les blocs ou pointe derrière eux. Sur les fichiers non pointables, les blocs sont lus et les données laissées de côté.  | seekable
921 Espace(s) surnuméraire(s) à supprimer. => Sur les fichiers pointables ('seekable files'),  l'implémentation lit les blocs ou pointe derrière eux. Sur les fichiers non pointables, les blocs sont lus et les données laissées de côté.  |    => suggestions : [' ']
921 Mot inconnu : pointables => Sur les fichiers pointables ('seekable files'),  l'implémentation lit les blocs ou pointe derrière eux. Sur les fichiers non pointables, les blocs sont lus et les données laissées de côté.  | pointables
921 Espace(s) en fin de ligne à supprimer. => Sur les fichiers pointables ('seekable files'),  l'implémentation lit les blocs ou pointe derrière eux. Sur les fichiers non pointables, les blocs sont lus et les données laissées de côté.  |   => suggestions : ['']

923 Mot inconnu : iseek => === iseek=n === | iseek

924 Mot inconnu : skip => Se positionne n blocs après le début du fichier d'entrée avant de copier (pertinent pour les fichiers disques, où skip peut être terriblement lent). | skip

926 Mot inconnu : oseek => === oseek=n === | oseek

929 Mot inconnu : seek => === seek=n === | seek

930 Mot inconnu : bs => Saute n blocs (en utilisant la taille de bloc de sortie spécifiée par bs ou obs ou la taille par défaut) après le début du fichier de sortie avant de commencer la copie. | bs
930 Mot inconnu : obs => Saute n blocs (en utilisant la taille de bloc de sortie spécifiée par bs ou obs ou la taille par défaut) après le début du fichier de sortie avant de commencer la copie. | obs

932 Mot inconnu : pointables => Sur les fichiers non pointables (non 'seekable files'), les blocs existants sont lus et l'espace compris entre l'actuel fin de fichier et l'offset spécifié, s'il existe, est rempli avec des octets nuls. Sur les fichiers pointables ('seekable files'), l'implémentation pointe sur l'offset spécifié ou lit les blocs comme décrit pour les fichiers non pointables. | pointables
932 Guillemets typographiques ouvrants. => Sur les fichiers non pointables (non 'seekable files'), les blocs existants sont lus et l'espace compris entre l'actuel fin de fichier et l'offset spécifié, s'il existe, est rempli avec des octets nuls. Sur les fichiers pointables ('seekable files'), l'implémentation pointe sur l'offset spécifié ou lit les blocs comme décrit pour les fichiers non pointables. | ' => suggestions : ['“', '‘', '‹']
932 Mot inconnu : seekable => Sur les fichiers non pointables (non 'seekable files'), les blocs existants sont lus et l'espace compris entre l'actuel fin de fichier et l'offset spécifié, s'il existe, est rempli avec des octets nuls. Sur les fichiers pointables ('seekable files'), l'implémentation pointe sur l'offset spécifié ou lit les blocs comme décrit pour les fichiers non pointables. | seekable
932 Mot inconnu : pointables => Sur les fichiers non pointables (non 'seekable files'), les blocs existants sont lus et l'espace compris entre l'actuel fin de fichier et l'offset spécifié, s'il existe, est rempli avec des octets nuls. Sur les fichiers pointables ('seekable files'), l'implémentation pointe sur l'offset spécifié ou lit les blocs comme décrit pour les fichiers non pointables. | pointables
932 Mot inconnu : seekable => Sur les fichiers non pointables (non 'seekable files'), les blocs existants sont lus et l'espace compris entre l'actuel fin de fichier et l'offset spécifié, s'il existe, est rempli avec des octets nuls. Sur les fichiers pointables ('seekable files'), l'implémentation pointe sur l'offset spécifié ou lit les blocs comme décrit pour les fichiers non pointables. | seekable
932 Mot inconnu : pointables => Sur les fichiers non pointables (non 'seekable files'), les blocs existants sont lus et l'espace compris entre l'actuel fin de fichier et l'offset spécifié, s'il existe, est rempli avec des octets nuls. Sur les fichiers pointables ('seekable files'), l'implémentation pointe sur l'offset spécifié ou lit les blocs comme décrit pour les fichiers non pointables. | pointables

934 Mot inconnu : count => === count=n === | count

937 Mot inconnu : conv => === conv=valeur[,valeur. . . ] === | conv
937 Pas d’espace avant un point. => === conv=valeur[,valeur. . . ] === |  . => suggestions : ['.']
937 Pas d’espace avant un point. => === conv=valeur[,valeur. . . ] === |  . => suggestions : ['.']
937 Pas d’espace avant ce signe. => === conv=valeur[,valeur. . . ] === |  ] => suggestions : [']']

938 Guillemets typographiques ouvrants. => Où les 'valeurs' sont des symboles séparés par des virgules, tirés de la liste suivante : | ' => suggestions : ['“', '‘', '‹']
938 Guillemets typographiques fermants. => Où les 'valeurs' sont des symboles séparés par des virgules, tirés de la liste suivante : | ' => suggestions : ['”', '’', '›']

939 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ascii : Convertit EBCDIC en ASCII. |    => suggestions : ['']
939 Mot inconnu : ascii =>   * ascii : Convertit EBCDIC en ASCII. | ascii
939 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * ascii : Convertit EBCDIC en ASCII. | convertit => suggestions : ['Convertis']
939 Mot inconnu : EBCDIC =>   * ascii : Convertit EBCDIC en ASCII. | ebcdic

940 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * asciib : Convertit EBCDIC en ASCII en utilisant les translations de caractères compatibles avec BSD. |    => suggestions : ['']
940 Mot inconnu : asciib =>   * asciib : Convertit EBCDIC en ASCII en utilisant les translations de caractères compatibles avec BSD. | asciib
940 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * asciib : Convertit EBCDIC en ASCII en utilisant les translations de caractères compatibles avec BSD. | convertit => suggestions : ['Convertis']
940 Mot inconnu : EBCDIC =>   * asciib : Convertit EBCDIC en ASCII en utilisant les translations de caractères compatibles avec BSD. | ebcdic

941 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. |    => suggestions : ['']
941 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdic => suggestions : ['Ebcdic']
941 Mot inconnu : ebcdic =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdic
941 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | convertit => suggestions : ['Convertis']
941 Mot inconnu : EBCDIC =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdic
941 Mot inconnu : NEWLINE =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | newline
941 Mot inconnu : dd =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | dd
941 Mot inconnu : conv =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | conv
941 Mot inconnu : unblock =>   * ebcdic : Convertit ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | unblock

942 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. |    => suggestions : ['']
942 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdicb => suggestions : ['Ebcdicb']
942 Mot inconnu : ebcdicb =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdicb
942 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | convertit => suggestions : ['Convertis']
942 Mot inconnu : EBCDIC =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdic
942 Mot inconnu : NEWLINE =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | newline
942 Mot inconnu : dd =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | dd
942 Mot inconnu : conv =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | conv
942 Mot inconnu : unblock =>   * ebcdicb : Convertit ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | unblock

943 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. |    => suggestions : ['']
943 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ibm => suggestions : ['Ibm']
943 Mot inconnu : ibm =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ibm
943 Mot inconnu : EBCDIC =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdic
943 Mot inconnu : NEWLINE =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | newline
943 Mot inconnu : dd =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | dd
943 Mot inconnu : conv =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | conv
943 Mot inconnu : unblock =>   * ibm : Conversion légèrement différente de ASCII en EBCDIC. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | unblock

944 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. |    => suggestions : ['']
944 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ibmb => suggestions : ['Ibmb']
944 Mot inconnu : ibmb =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ibmb
944 Mot inconnu : EBCDIC =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | ebcdic
944 Mot inconnu : NEWLINE =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | newline
944 Mot inconnu : dd =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | dd
944 Mot inconnu : conv =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | conv
944 Mot inconnu : unblock =>   * ibmb : Conversion légèrement différente de ASCII en EBCDIC en utilisant les translations de caractères compatibles avec BSD. Lors d'une conversion d'enregistrements ASCII de longueur fixe sans caractères NEWLINE (nouvelle ligne), commence par créer un tube avec : **dd conv<nowiki>=</nowiki>unblock**. | unblock

946 Mot inconnu : ascii => Les valeurs **ascii** (ou **asciib**), **ebcdic** (ou **ebcdicb**), et **ibm** (ou **ibmb**) sont mutuellement exclusives. | ascii
946 Mot inconnu : asciib => Les valeurs **ascii** (ou **asciib**), **ebcdic** (ou **ebcdicb**), et **ibm** (ou **ibmb**) sont mutuellement exclusives. | asciib
946 Mot inconnu : ebcdic => Les valeurs **ascii** (ou **asciib**), **ebcdic** (ou **ebcdicb**), et **ibm** (ou **ibmb**) sont mutuellement exclusives. | ebcdic
946 Mot inconnu : ebcdicb => Les valeurs **ascii** (ou **asciib**), **ebcdic** (ou **ebcdicb**), et **ibm** (ou **ibmb**) sont mutuellement exclusives. | ebcdicb
946 Mot inconnu : ibm => Les valeurs **ascii** (ou **asciib**), **ebcdic** (ou **ebcdicb**), et **ibm** (ou **ibmb**) sont mutuellement exclusives. | ibm
946 Mot inconnu : ibmb => Les valeurs **ascii** (ou **asciib**), **ebcdic** (ou **ebcdicb**), et **ibm** (ou **ibmb**) sont mutuellement exclusives. | ibmb

948 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. |    => suggestions : ['']
948 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | block => suggestions : ['Block']
948 Mot inconnu : block =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | block
948 Mot inconnu : NEWLINE =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | newline
948 Mot inconnu : EOF =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | eof
948 Espace(s) surnuméraire(s) à supprimer. =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. |    => suggestions : [' ']
948 Mot inconnu : cbs =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | cbs
948 Mot inconnu : NEWLINE =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | newline
948 Mot inconnu : SPACE =>   * block : Les données d'entrée sont considérées comme une suite d'enregistrements de longueur variable terminés par un caractère NEWLINE (fin de ligne) ou par un caractère EOF (fin de fichier), indépendamment des frontières entre blocs dans les données d'entrée.  Chaque enregistrement est ensuite converti en un enregistrement ayant une longueur fixe, spécifiée par la taille de bloc pour la conversion (voir **cbs=**). Tous les caractères NEWLINE sont effacés de la ligne d'entrée. Des caractères SPACE (espace) sont ajoutés aux lignes dont la taille est inférieure à celle de leur taille de bloc pour la conversion. Les lignes plus longues que la taille de bloc pour la conversion sont tronquées de façon à ce qu'elles contiennent le plus grand nombre possible de caractères pouvant tenir dans cette taille. Le nombre des lignes tronquées est signalé. | space

949 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   |    => suggestions : ['']
949 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | unblock => suggestions : ['Unblock']
949 Mot inconnu : unblock =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | unblock
949 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | convertit => suggestions : ['Convertis']
949 Accord de genre erroné : « la conversion » est féminin, « spécifié » est masculin. =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | spécifié => suggestions : ['spécifiée']
949 Mot inconnu : cbs =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | cbs
949 Mot inconnu : SPACE =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | space
949 Mot inconnu : NEWLINE =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   | newline
949 Espace(s) en fin de ligne à supprimer. =>   * unblock : Convertit les enregistrements de taille fixe en enregistrements de taille variable. Lit un nombre d'octets égal à la taille de bloc pour la conversion spécifié par **cbs=** (ou le nombre d'octets restant en entrée, s'il est inférieur à la taille de bloc pour la conversion), efface tous les caractères SPACE (espace) de remplissage en fin d'enregistrement et ajoute un caractère NEWLINE (fin de ligne).   |    => suggestions : ['']

951 Mot inconnu : block => Les valeurs **block** et **unblock** sont mutuellement exclusives. | block
951 Mot inconnu : unblock => Les valeurs **block** et **unblock** sont mutuellement exclusives. | unblock

953 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * lcase : Transforme les majuscules en minuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. |    => suggestions : ['']
953 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * lcase : Transforme les majuscules en minuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. | lcase => suggestions : ['Lcase']
953 Mot inconnu : lcase =>   * lcase : Transforme les majuscules en minuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. | lcase
953 Espace(s) surnuméraire(s) à supprimer. =>   * lcase : Transforme les majuscules en minuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. |    => suggestions : [' ']
953 Mot inconnu : LC_CTYPE =>   * lcase : Transforme les majuscules en minuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. | lc_ctype

954 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ucase : Transforme les minuscules en majuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. |    => suggestions : ['']
954 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * ucase : Transforme les minuscules en majuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. | ucase => suggestions : ['Ucase']
954 Mot inconnu : ucase =>   * ucase : Transforme les minuscules en majuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. | ucase
954 Espace(s) surnuméraire(s) à supprimer. =>   * ucase : Transforme les minuscules en majuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. |    => suggestions : [' ']
954 Mot inconnu : LC_CTYPE =>   * ucase : Transforme les minuscules en majuscules lorsque la locale définie par  LC_CTYPE le permet. Les caractères pour lesquels aucune correspondance majuscules/minuscules n'est spécifiée dans la locale ne sont pas modifiés par cette conversion. | lc_ctype

955 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * swab : Permute chaque paire d'octets d'entrée. Si l'enregistrement d'entrée en cours possède un nombre impair d'octets, le dernier octet de l'enregistrement d'entrée est ignoré. |    => suggestions : ['']
955 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * swab : Permute chaque paire d'octets d'entrée. Si l'enregistrement d'entrée en cours possède un nombre impair d'octets, le dernier octet de l'enregistrement d'entrée est ignoré. | swab => suggestions : ['Swab']
955 Mot inconnu : swab =>   * swab : Permute chaque paire d'octets d'entrée. Si l'enregistrement d'entrée en cours possède un nombre impair d'octets, le dernier octet de l'enregistrement d'entrée est ignoré. | swab

956 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). |    => suggestions : ['']
956 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | noerror => suggestions : ['Noerror']
956 Mot inconnu : noerror =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | noerror
956 Accord de nombre erroné : « bloc » devrait être au pluriel. =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | bloc => suggestions : ['blocs']
956 Mot inconnu : sync =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | sync
956 Mot inconnu : notrunc =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | notrunc
956 Mot inconnu : dd =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | dd
956 Mot inconnu : of =>   * noerror : N'arrête pas le processus en cas d'erreur d'entrée. Lorsque survient une erreur d'entrée, un message de diagnostic est envoyé vers la sortie d'erreur standard, suivi par le décompte en cours des bloc d'entrée et de sortie dans le même format que celui utilisé en complétion. Si la conversion **sync** est spécifiée, les données manquantes sont remplacées par des octets nuls qui sont traités normalement. Autrement, le bloc d'entrée sera omis de la sortie. **notrunc** ne tronque pas le fichier de sortie. Dans le fichier de sortie les blocs non explicitement écrits par cette invocation de dd seront préservés. (Voir aussi le précédent opérande : **of=file**). | of

957 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * notrunc : Le fichier de sortie ne subit pas de troncation (en son absence les blocs de données formés d'octets à zéro sont remplacés par une chaîne de cinq astérisques). |    => suggestions : ['']
957 Mot inconnu : notrunc =>   * notrunc : Le fichier de sortie ne subit pas de troncation (en son absence les blocs de données formés d'octets à zéro sont remplacés par une chaîne de cinq astérisques). | notrunc

958 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) |    => suggestions : ['']
958 Mot inconnu : sync =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) | sync
958 Mot inconnu : ibs =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) | ibs
958 Mot inconnu : block =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) | block
958 Mot inconnu : unblock =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) | unblock
958 Mot inconnu : specifié =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) | specifié
958 Mot inconnu : SPACE =>   * sync : Assemble chaque bloc d'entrée à la taille du tampon **ibs=**, ajoutant des octets nuls. (Si soit **block** soit **unblock** est aussi specifié, ajoute des caractères SPACE, à la place d'octets nuls.) | space

960 Mot inconnu : conv => Si des opérandes autres que **conv=** sont spécifiés plus d'une fois, le dernier **operande=valeur** spécifié est utilisé. | conv
960 Mot inconnu : operande => Si des opérandes autres que **conv=** sont spécifiés plus d'une fois, le dernier **operande=valeur** spécifié est utilisé. | operande

962 Mot inconnu : bs => Pour les opérandes **bs=**, **cbs=**, **ibs=**, et **obs=**, l'application doit fournir une expression qui spécifie une taille en octets. L'expression, **expr**, peut être : | bs
962 Mot inconnu : cbs => Pour les opérandes **bs=**, **cbs=**, **ibs=**, et **obs=**, l'application doit fournir une expression qui spécifie une taille en octets. L'expression, **expr**, peut être : | cbs
962 Mot inconnu : ibs => Pour les opérandes **bs=**, **cbs=**, **ibs=**, et **obs=**, l'application doit fournir une expression qui spécifie une taille en octets. L'expression, **expr**, peut être : | ibs
962 Mot inconnu : obs => Pour les opérandes **bs=**, **cbs=**, **ibs=**, et **obs=**, l'application doit fournir une expression qui spécifie une taille en octets. L'expression, **expr**, peut être : | obs
962 Mot inconnu : expr => Pour les opérandes **bs=**, **cbs=**, **ibs=**, et **obs=**, l'application doit fournir une expression qui spécifie une taille en octets. L'expression, **expr**, peut être : | expr

963 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un nombre décimal positif |    => suggestions : ['']

964 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un nombre décimal positif suivi de **k**, spécifiant ainsi une multiplication par 1024 |    => suggestions : ['']

965 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un nombre décimal positif suivi de **M**, spécifiant ainsi une multiplication par 1024*1024 |    => suggestions : ['']
965 Signe de multiplication typographique. =>   * un nombre décimal positif suivi de **M**, spécifiant ainsi une multiplication par 1024*1024 | 1024*1024 => suggestions : ['1024\xa0×\xa01024']

966 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un nombre décimal positif suivi de **b**, spécifiant ainsi une multiplication par 512 |    => suggestions : ['']

967 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * deux ou plusieurs nombres décimaux positifs (avec ou sans **k** ou **b**) séparés par **x**, spécifiant ainsi le produit des valeurs indiquées. |    => suggestions : ['']

971 Mot inconnu : dd => Les variables d'environnement suivantes affectent les messages et les messages d'erreur de dd : | dd

973 Mot inconnu : LANG => LANG | lang

975 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => Fournit une valeur par défaut pour les variables d'internationalisation qui sont non définies ou nulles. Si LANG est non défini ou nul, la valeur correspondante par défaut dépendante de l'implantation locale sera utilisée. Si chacune des variables d'internalisation contient une valeur non valide, l'utilitaire se comportera comme si aucune des variables n'avait été définie. | fournit => suggestions : ['Fournis']
975 Mot inconnu : LANG => Fournit une valeur par défaut pour les variables d'internationalisation qui sont non définies ou nulles. Si LANG est non défini ou nul, la valeur correspondante par défaut dépendante de l'implantation locale sera utilisée. Si chacune des variables d'internalisation contient une valeur non valide, l'utilitaire se comportera comme si aucune des variables n'avait été définie. | lang

977 Mot inconnu : LC_ALL => LC_ALL | lc_all

981 Mot inconnu : LC_CTYPE => LC_CTYPE | lc_ctype

983 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => Définit la locale utilisée pour l'interprétation comme caractères des séquences d'octets de données texte (par exemple, caractères à octet unique, par opposition aux caractères multi-octets dans les arguments ou les fichiers d'entrée), la classification des caractères en majuscules ou minuscules, et le mappage des caractères d'une casse à une autre. | définit => suggestions : ['Définis']

985 Mot inconnu : LC_MESSAGES => LC_MESSAGES | lc_messages

989 Mot inconnu : NLSPATH => NLSPATH | nlspath

991 Mot inconnu : LC_MESSAGES => Détermine l'endroit des catalogues de messages pour le traitement de LC_MESSAGES. | lc_messages

995 Mot inconnu : SIGUSR1 => Remarquer que l'envoi d'un signal SIGUSR1 à une commande dd en cours provoque l'écriture dans la sortie standard des erreurs du nombre d'enregistrements lus et écrits jusqu'à présent, puis la reprise de la copie. | sigusr1
995 Mot inconnu : dd => Remarquer que l'envoi d'un signal SIGUSR1 à une commande dd en cours provoque l'écriture dans la sortie standard des erreurs du nombre d'enregistrements lus et écrits jusqu'à présent, puis la reprise de la copie. | dd

1013 Mot inconnu : dd => Vous pouvez aussi utiliser des versions de **dd** affichant en temps réel la progression comme **[[dcfldd|dcfldd]]** | dd

1015 Mot inconnu : dcfldd => dcfldd est 100% compatible avec dd, mais supporte quelques commandes supplémentaires et affiche par défaut la progression de l'opération en cours. | dcfldd
1015 Avec une unité de mesure, mettez un espace insécable. => dcfldd est 100% compatible avec dd, mais supporte quelques commandes supplémentaires et affiche par défaut la progression de l'opération en cours. | 100% => suggestions : ['100\xa0%']
1015 Mot inconnu : dd => dcfldd est 100% compatible avec dd, mais supporte quelques commandes supplémentaires et affiche par défaut la progression de l'opération en cours. | dd

1017 Mot inconnu : dd => En cas d'oubli au départ, on peut également afficher l'état d'avancement de la commande **dd** en tapant **Ctrl+t** à tout moment au cours de son éxecution. \\ | dd
1017 Mot inconnu : éxecution => En cas d'oubli au départ, on peut également afficher l'état d'avancement de la commande **dd** en tapant **Ctrl+t** à tout moment au cours de son éxecution. \\ | éxecution

1025 Mot inconnu : dd => ===== Comparatif de vitesse dd/pv vs dcfldd vs dc3dd ===== | dd
1025 Mot inconnu : pv => ===== Comparatif de vitesse dd/pv vs dcfldd vs dc3dd ===== | pv
1025 Mot inconnu : dcfldd => ===== Comparatif de vitesse dd/pv vs dcfldd vs dc3dd ===== | dcfldd
1025 Mot inconnu : dc3dd => ===== Comparatif de vitesse dd/pv vs dcfldd vs dc3dd ===== | dc3dd

1027 Mot inconnu : GiB => Mes tests sont faits sur une partition de 97.88 GiB. | gib

1029 Mot inconnu : dc3dd => <note important>dc3dd n'est pas compatible avec toutes les options de la commande dd.</note> | dc3dd
1029 Mot inconnu : dd => <note important>dc3dd n'est pas compatible avec toutes les options de la commande dd.</note> | dd

1031 Mot inconnu : dc3dd => Avec dc3dd : | dc3dd

1055 Mot inconnu : dcfldd => Avec dcfldd : | dcfldd

1065 Mot inconnu : dd => Avec dd/pv : | dd
1065 Mot inconnu : pv => Avec dd/pv : | pv

1076 Mot inconnu : And => And the winner is ... : dd ! :-) | and
1076 Mot inconnu : the => And the winner is ... : dd ! :-) | the
1076 Mot inconnu : winner => And the winner is ... : dd ! :-) | winner
1076 Mot inconnu : is => And the winner is ... : dd ! :-) | is
1076 Typographie : points de suspension. Utilisez le caractère dédié. => And the winner is ... : dd ! :-) | ... => suggestions : ['…']
1076 Mot inconnu : dd => And the winner is ... : dd ! :-) | dd

1081 Mot inconnu : FIXME => FIXME  Gdiskdump n'est plus mis à jour depuis 2011 et ne se lance pas, surtout si la configuration comporte GPT et MBR ensemble. | fixme
1081 Espace(s) surnuméraire(s) à supprimer. => FIXME  Gdiskdump n'est plus mis à jour depuis 2011 et ne se lance pas, surtout si la configuration comporte GPT et MBR ensemble. |    => suggestions : [' ']
1081 Mot inconnu : Gdiskdump => FIXME  Gdiskdump n'est plus mis à jour depuis 2011 et ne se lance pas, surtout si la configuration comporte GPT et MBR ensemble. | gdiskdump
1081 Mot inconnu : GPT => FIXME  Gdiskdump n'est plus mis à jour depuis 2011 et ne se lance pas, surtout si la configuration comporte GPT et MBR ensemble. | gpt
1081 Mot inconnu : MBR => FIXME  Gdiskdump n'est plus mis à jour depuis 2011 et ne se lance pas, surtout si la configuration comporte GPT et MBR ensemble. | mbr

1086 Mot inconnu : dd => Il existe une variante de dd pour récupérer des données sur un média défectueux, tel qu'un disque dur avec des mauvais secteurs. Il est appelé dd_rescue. Il est disponible ici : http://www.garloff.de/kurt/linux/ddrescue/ | dd
1086 Mot inconnu : dd_rescue => Il existe une variante de dd pour récupérer des données sur un média défectueux, tel qu'un disque dur avec des mauvais secteurs. Il est appelé dd_rescue. Il est disponible ici : http://www.garloff.de/kurt/linux/ddrescue/ | dd_rescue

1090 Mot inconnu : dd => L'implémentation de dd pour le département de la défense est appelée dcfldd, et possède quelques caractéristiques comme une barre de progression, ainsi vous pouvez planifier vos pauses café : http://dcfldd.sourceforge.net/ | dd
1090 Mot inconnu : dcfldd => L'implémentation de dd pour le département de la défense est appelée dcfldd, et possède quelques caractéristiques comme une barre de progression, ainsi vous pouvez planifier vos pauses café : http://dcfldd.sourceforge.net/ | dcfldd

1092 Mot inconnu : Sdd => ====Sdd==== | sdd

1094 Mot inconnu : Sdd => Sdd est utile quand la taille des blocs d'entrée est différente de celle des blocs de sortie, et réussira dans des cas où dd échoue. | sdd
1094 Mot inconnu : dd => Sdd est utile quand la taille des blocs d'entrée est différente de celle des blocs de sortie, et réussira dans des cas où dd échoue. | dd

1099 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://wiki.debian-fr.xyz/La_commande_dd|La commande dd]] **(fr)** |    => suggestions : ['']
1099 Mot inconnu : dd =>   * [[https://wiki.debian-fr.xyz/La_commande_dd|La commande dd]] **(fr)** | dd

1100 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.softpanorama.org/Tools/dd.shtml|DD Command (guide extrêment complet)]] **(en)** |    => suggestions : ['']
1100 Mot inconnu : DD =>   * [[http://www.softpanorama.org/Tools/dd.shtml|DD Command (guide extrêment complet)]] **(en)** | dd
1100 Mot inconnu : Command =>   * [[http://www.softpanorama.org/Tools/dd.shtml|DD Command (guide extrêment complet)]] **(en)** | command
1100 Mot inconnu : extrêment =>   * [[http://www.softpanorama.org/Tools/dd.shtml|DD Command (guide extrêment complet)]] **(en)** | extrêment

1101 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://wiki.archlinux.org/title/Dd|DD (documentation Arch Linux)]] **(en)** |    => suggestions : ['']
1101 Mot inconnu : DD =>   * [[https://wiki.archlinux.org/title/Dd|DD (documentation Arch Linux)]] **(en)** | dd
1101 Mot inconnu : Arch =>   * [[https://wiki.archlinux.org/title/Dd|DD (documentation Arch Linux)]] **(en)** | arch
