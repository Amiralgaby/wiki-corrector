
4 Mot inconnu : PICkit2 => ====== PICkit2 ====== | pickit2

5 Mot inconnu : PICKit => Le PICKit 2 est un programmateur de PIC de chez [[http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1406&dDocName=en023805|Microchip]]. Ce tutoriel traite de la façon d'utiliser et de programmer avec un controleur 16f88. | pickit
5 Mot inconnu : controleur => Le PICKit 2 est un programmateur de PIC de chez [[http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1406&dDocName=en023805|Microchip]]. Ce tutoriel traite de la façon d'utiliser et de programmer avec un controleur 16f88. | controleur
5 Mot inconnu : f88 => Le PICKit 2 est un programmateur de PIC de chez [[http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1406&dDocName=en023805|Microchip]]. Ce tutoriel traite de la façon d'utiliser et de programmer avec un controleur 16f88. | f88

7 Mot inconnu : Pk2cmd => ===== Pk2cmd : le programme de communication ===== | pk2cmd

8 Mot inconnu : Pk2cmd => Pk2cmd est un programme open source pour communiquer avec le PICkit2. | pk2cmd
8 Mot inconnu : PICkit2 => Pk2cmd est un programme open source pour communiquer avec le PICkit2. | pickit2

10 Mot inconnu : Microchip => Il est disponible sur le site internet de Microchip à la page [[http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1406&dDocName=en023805]] | microchip

16 Mot inconnu : Microchip => Les sources étant disponibles depuis le site de Microchip, nous allons les télécharger, les compiler, puis les installer.\\ | microchip

26 Incohérence probable avec “ai” : “tester” n’est pas un participe passé. => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) | tester => suggestions : ['testé']
26 Confusion : « fonctionne » est un verbe. Exemples : sa jambe, ça vient. => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) | sa => suggestions : ['ça']
26 Mot inconnu : ARM => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) | arm
26 Mot inconnu : raspberry => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) | raspberry

28 Mot inconnu : PICkit2 => Branchez le PICkit2 sur le port USB pour tester s'il est bien détecté. | pickit2

39 Mot inconnu : program => Programmer le PIC avec le fichier program..hex: | program
39 Typographie : un ou trois points ? => Programmer le PIC avec le fichier program..hex: | .. => suggestions : ['…', '.']
39 Mot inconnu : hex => Programmer le PIC avec le fichier program..hex: | hex

42 Mot inconnu : Dwarf => =====  Dwarf : une interface graphique pour pk2cmd ===== | dwarf
42 Mot inconnu : pk2cmd => =====  Dwarf : une interface graphique pour pk2cmd ===== | pk2cmd

45 Mot inconnu : dwarf => Il suffit de décompresser l'archive **dwarf.tgz** dans le dossier de votre choix, et de lancer le script nommé **dwarf**. | dwarf
45 Mot inconnu : tgz => Il suffit de décompresser l'archive **dwarf.tgz** dans le dossier de votre choix, et de lancer le script nommé **dwarf**. | tgz
45 Mot inconnu : dwarf => Il suffit de décompresser l'archive **dwarf.tgz** dans le dossier de votre choix, et de lancer le script nommé **dwarf**. | dwarf

46 Mot inconnu : éxécutable => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" | éxécutable
46 Guillemets typographiques ouvrants. => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" | " => suggestions : ['«\xa0', '“']
46 Mot inconnu : dwarf => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" | dwarf
46 Guillemets typographiques fermants. => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" | " => suggestions : ['\xa0»', '”']

50 Mot inconnu : Gpasm => =====  Gpasm : le compilateur pour PIC ===== | gpasm

51 Mot inconnu : Gpasm => Gpasm est un compilateur pour générer du code pour notre PIC. Il prend en entrée un fichier assembleur et produit du code machine.\\ | gpasm

91 Mot inconnu : f88 => Programmer le 16f88 : | f88

95 Espace(s) surnuméraire(s) à supprimer. => Si tout se passe correctement  la LED câblée sur le PORTB 3 clignote. |    => suggestions : [' ']
95 Mot inconnu : PORTB => Si tout se passe correctement  la LED câblée sur le PORTB 3 clignote. | portb

98 Mot inconnu : bread => On utilise le contrôleur sur une bread board avec le câblage ci dessous: | bread
98 Mot inconnu : board => On utilise le contrôleur sur une bread board avec le câblage ci dessous: | board
98 Il manque un trait d’union. => On utilise le contrôleur sur une bread board avec le câblage ci dessous: | ci dessous => suggestions : ['ci-dessous']

100 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[piklab]] |    => suggestions : ['']
100 Mot inconnu : piklab =>   * [[piklab]] | piklab

101 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[conception_electronique]] |    => suggestions : ['']
101 Mot inconnu : conception_electronique =>   * [[conception_electronique]] | conception_electronique
104 Mot inconnu : FIXME => //Contributeurs: FIXME // | fixme
