
4 Mot inconnu : PICkit2 [[7:14]] => ====== PICkit2 ====== <|> pickit2

7 Mot inconnu : Pk2cmd [[6:12]] => ===== Pk2cmd : le programme de communication ===== <|> pk2cmd

8 Mot inconnu : Pk2cmd [[0:6]] => Pk2cmd est un programme open source pour communiquer avec le PICkit2. <|> pk2cmd
8 Mot inconnu : PICkit2 [[61:68]] => Pk2cmd est un programme open source pour communiquer avec le PICkit2. <|> pickit2

16 Mot inconnu : Microchip [[48:57]] => Les sources étant disponibles depuis le site de Microchip, nous allons les télécharger, les compiler, puis les installer.\\ <|> microchip

26 Incohérence probable avec “ai” : “tester” n’est pas un participe passé. [[5:11]] => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) <|> tester => suggestions : ['testé']
26 Confusion : « fonctionne » est un verbe. Exemples : sa jambe, ça vient. [[26:28]] => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) <|> sa => suggestions : ['ça']
26 Mot inconnu : ARM [[79:82]] => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) <|> arm
26 Mot inconnu : raspberry [[98:107]] => J'ai tester sur une 16.04 sa fonctionne bien même tester sur une configuration ARM en processeur (raspberry pi) <|> raspberry

28 Mot inconnu : PICkit2 [[12:19]] => Branchez le PICkit2 sur le port USB pour tester s'il est bien détecté. <|> pickit2

37 Mot inconnu : PK2DeviceFile [[45:58]] => il peut être nécessaire de copier le fichier PK2DeviceFile.dat vers le dossier ou se trouve l'executable pk2cmd : <|> pk2devicefile
37 Mot inconnu : dat [[59:62]] => il peut être nécessaire de copier le fichier PK2DeviceFile.dat vers le dossier ou se trouve l'executable pk2cmd : <|> dat
37 Mot inconnu : executable [[94:104]] => il peut être nécessaire de copier le fichier PK2DeviceFile.dat vers le dossier ou se trouve l'executable pk2cmd : <|> executable
37 Mot inconnu : pk2cmd [[105:111]] => il peut être nécessaire de copier le fichier PK2DeviceFile.dat vers le dossier ou se trouve l'executable pk2cmd : <|> pk2cmd

46 Mot inconnu : program [[34:41]] => Programmer le PIC avec le fichier program..hex: <|> program
46 Typographie : un ou trois points ? [[41:43]] => Programmer le PIC avec le fichier program..hex: <|> .. => suggestions : ['…', '.']
46 Mot inconnu : hex [[43:46]] => Programmer le PIC avec le fichier program..hex: <|> hex

49 Mot inconnu : Dwarf [[7:12]] => =====  Dwarf : une interface graphique pour pk2cmd ===== <|> dwarf
49 Mot inconnu : pk2cmd [[44:50]] => =====  Dwarf : une interface graphique pour pk2cmd ===== <|> pk2cmd

52 Mot inconnu : dwarf [[38:43]] => Il suffit de décompresser l'archive **dwarf.tgz** dans le dossier de votre choix, et de lancer le script nommé **dwarf**. <|> dwarf
52 Mot inconnu : tgz [[44:47]] => Il suffit de décompresser l'archive **dwarf.tgz** dans le dossier de votre choix, et de lancer le script nommé **dwarf**. <|> tgz
52 Mot inconnu : dwarf [[113:118]] => Il suffit de décompresser l'archive **dwarf.tgz** dans le dossier de votre choix, et de lancer le script nommé **dwarf**. <|> dwarf

53 Mot inconnu : éxécutable [[26:36]] => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" <|> éxécutable
53 Guillemets typographiques ouvrants. [[101:102]] => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" <|> " => suggestions : ['«\xa0', '“']
53 Mot inconnu : dwarf [[102:107]] => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" <|> dwarf
53 Guillemets typographiques fermants. [[114:115]] => Sur 16.04 penser à rendre éxécutable le script et le lancer dans une console ouverte dans le dossier "dwarf master" <|> " => suggestions : ['\xa0»', '”']

57 Mot inconnu : Gpasm [[7:12]] => =====  Gpasm : le compilateur pour PIC ===== <|> gpasm

58 Mot inconnu : Gpasm [[0:5]] => Gpasm est un compilateur pour générer du code pour notre PIC. Il prend en entrée un fichier assembleur et produit du code machine.\\ <|> gpasm

98 Mot inconnu : f88 [[16:19]] => Programmer le 16f88 : <|> f88

102 Espace(s) surnuméraire(s) à supprimer. [[29:31]] => Si tout se passe correctement  la LED câblée sur le PORTB 3 clignote. <|>    => suggestions : [' ']
102 Mot inconnu : PORTB [[52:57]] => Si tout se passe correctement  la LED câblée sur le PORTB 3 clignote. <|> portb

105 Mot inconnu : bread [[33:38]] => On utilise le contrôleur sur une bread board avec le câblage ci dessous: <|> bread
105 Mot inconnu : board [[39:44]] => On utilise le contrôleur sur une bread board avec le câblage ci dessous: <|> board
105 Il manque un trait d’union. [[61:71]] => On utilise le contrôleur sur une bread board avec le câblage ci dessous: <|> ci dessous => suggestions : ['ci-dessous']
