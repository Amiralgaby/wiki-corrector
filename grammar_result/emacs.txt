
6 Mot inconnu : Emacs [[7:12]] => ====== Emacs : le couteau Suisse du développeur ====== <|> emacs
6 S’il s’agit d’un adjectif, ne mettez pas de majuscule. [[26:32]] => ====== Emacs : le couteau Suisse du développeur ====== <|> suisse => suggestions : ['suisse']

10 Mot inconnu : Emacs [[75:80]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> emacs
10 Mot inconnu : LaTeX [[153:158]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> latex
10 Mot inconnu : auctex [[176:182]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> auctex
10 Mot inconnu : javascript [[192:202]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> javascript
10 Mot inconnu : html [[204:208]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> html
10 Typographie : points de suspension. Utilisez le caractère dédié. [[208:211]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> ... => suggestions : ['…']
10 Mot inconnu : IRC [[264:267]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> irc
10 Typographie : points de suspension. Utilisez le caractère dédié. [[285:288]] => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... <|> ... => suggestions : ['…']

15 Mot inconnu : emacs [[52:57]] => Selon vos besoins, deux possibilités pour installer emacs sont détaillées ci-dessous. <|> emacs

34 Mot inconnu : Shift [[16:21]] => En appuyant sur Shift puis en cliquant dans la fenêtre d'Emacs, vous avez la possibilité de grossir la taille de la police. <|> shift
34 Mot inconnu : Emacs [[57:62]] => En appuyant sur Shift puis en cliquant dans la fenêtre d'Emacs, vous avez la possibilité de grossir la taille de la police. <|> emacs

45 Espace(s) surnuméraire(s) à supprimer. [[24:26]] => Il est toujours possible  d'écrire du texte dans le ou les fichiers ouverts (contrairement à Vim). <|>    => suggestions : [' ']

50 Espace(s) surnuméraire(s) à supprimer. [[18:20]] => L'édition de texte  s'appuie sur les modes majeurs et mineurs : <|>    => suggestions : [' ']
52 Typographie : points de suspension. Utilisez le caractère dédié. [[201:204]] =>   * Les modes majeurs permettent de définir comment un type de fichier va être édité. Cela comprend la coloration syntaxique, la définition de commandes clavier, l'ajout de fonctionnalités spécifiques ... Il existe un mode majeur pour presque chaque langage de programmation. <|> ... => suggestions : ['…']

57 Mot inconnu : Emacs [[0:5]] => Emacs se contrôle principalement via des raccourcis / commandes clavier. <|> emacs
59 S’il s’agit d’un impératif, ajoutez un “s”. [[12:22]] => C-<lettre>: correspond à **Ctrl+<lettre>** <|> correspond => suggestions : ['corresponds']
61 S’il s’agit d’un impératif, ajoutez un “s”. [[12:22]] => M-<lettre>: correspond à  **Alt+<lettre>** <|> correspond => suggestions : ['corresponds']
61 Espace(s) surnuméraire(s) à supprimer. [[24:26]] => M-<lettre>: correspond à  **Alt+<lettre>** <|>    => suggestions : [' ']

68 Mot inconnu : Emacs [[0:5]] => Emacs propose un tutoriel pour apprendre à utiliser les commandes de base. Pour cela, une fois Emacs lancé tapez : <|> emacs
68 Mot inconnu : Emacs [[95:100]] => Emacs propose un tutoriel pour apprendre à utiliser les commandes de base. Pour cela, une fois Emacs lancé tapez : <|> emacs

79 Espace(s) surnuméraire(s) à supprimer. [[24:31]] => ^ commande ^      action       ^ <|>         => suggestions : [' ']

80 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-v    | Avance d'un écran | <|>      => suggestions : [' ']

81 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   M-v    | Recule d'un écran | <|>      => suggestions : [' ']

82 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-n    | Avance d'une ligne  | <|>      => suggestions : [' ']
82 Espace(s) surnuméraire(s) à supprimer. [[31:33]] => |   C-n    | Avance d'une ligne  | <|>    => suggestions : [' ']

83 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-p    | Recule d'une ligne    | <|>      => suggestions : [' ']
83 Espace(s) surnuméraire(s) à supprimer. [[31:35]] => |   C-p    | Recule d'une ligne    | <|>      => suggestions : [' ']

84 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-f    | Avance d'un caractère | <|>      => suggestions : [' ']

85 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-b    | Recule d'un caractère | <|>      => suggestions : [' ']

86 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   M-f    | Avance d'un mot | <|>      => suggestions : [' ']

87 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   M-b    | Recule d'un mot | <|>      => suggestions : [' ']

88 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-a    | Va au début de la ligne | <|>      => suggestions : [' ']

89 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   C-e    | Va à la fin de la ligne | <|>      => suggestions : [' ']

90 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   M-a    | Va au début de la phrase | <|>      => suggestions : [' ']

91 Espace(s) surnuméraire(s) à supprimer. [[7:11]] => |   M-e    | Va à la fin de la phrase | <|>      => suggestions : [' ']

92 Espace(s) surnuméraire(s) à supprimer. [[9:11]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|>    => suggestions : [' ']
92 Mot inconnu : Ctr [[13:16]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|> ctr
92 Espace(s) surnuméraire(s) à supprimer. [[28:30]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|>    => suggestions : [' ']
92 Espace(s) surnuméraire(s) à supprimer. [[33:35]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|>    => suggestions : [' ']
92 Espace(s) surnuméraire(s) à supprimer. [[36:38]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|>    => suggestions : [' ']
92 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. [[42:43]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|> a => suggestions : ['à']
92 Il manque un espace après la parenthèse. [[87:88]] => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | <|> ) => suggestions : [') ']

93 Espace(s) surnuméraire(s) à supprimer. [[9:11]] => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | <|>    => suggestions : [' ']
93 Mot inconnu : Ctr [[13:16]] => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | <|> ctr
93 Il manque un espace avant la parenthèse. [[38:39]] => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | <|> ( => suggestions : [' (']
93 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. [[44:45]] => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | <|> a => suggestions : ['à']

94 Espace(s) surnuméraire(s) à supprimer. [[9:11]] => |   C-s-w  | Lance la recherche du mot devant le curseur, suivi de C-s [C-r] permet de se déplacer au même mot suivant [précédent] | <|>    => suggestions : [' ']

95 Espace(s) surnuméraire(s) à supprimer. [[11:13]] => |   C-s-w-w  | Lance la recherche du mot en deux parties devant le curseur, suivit de C-s [C-r]...| <|>    => suggestions : [' ']
95 Typographie : points de suspension. Utilisez le caractère dédié. [[95:98]] => |   C-s-w-w  | Lance la recherche du mot en deux parties devant le curseur, suivit de C-s [C-r]...| <|> ... => suggestions : ['…']

99 Espace(s) surnuméraire(s) à supprimer. [[24:31]] => ^ commande ^      action       ^ <|>         => suggestions : [' ']

101 Espace(s) surnuméraire(s) à supprimer. [[8:12]] => |    C-d    | Efface le caractère suivant | <|>      => suggestions : [' ']

103 Espace(s) surnuméraire(s) à supprimer. [[7:12]] => |   M-d     | Supprime le mot suivant | <|>       => suggestions : [' ']

104 Espace(s) surnuméraire(s) à supprimer. [[7:12]] => |   C-k     | Supprime du curseur à la fin de la ligne | <|>       => suggestions : [' ']

105 Espace(s) surnuméraire(s) à supprimer. [[7:12]] => |   M-k     | Supprime jusqu'à la fin de la phrase courante | <|>       => suggestions : [' ']

106 Espace(s) surnuméraire(s) à supprimer. [[16:18]] => |   C-x u ou C-_  | Annuler la modification | <|>    => suggestions : [' ']

107 Espace(s) surnuméraire(s) à supprimer. [[11:15]] => |   C-x C-x    | Échange la position du curseur avec l'autre côté de la sélection | <|>      => suggestions : [' ']

109 Espace(s) surnuméraire(s) à supprimer. [[7:10]] => |   C-w   | Coupe la région sélectionnée | <|>     => suggestions : [' ']

110 Espace(s) surnuméraire(s) à supprimer. [[7:10]] => |   M-w   | Copie la région sélectionnée | <|>     => suggestions : [' ']

111 Espace(s) surnuméraire(s) à supprimer. [[7:9]] => |   C-y  [ou bien Shift+Insert] | Colle la copie précédente. Peut être suivi de M-y pour coller les anciennes sélections | <|>    => suggestions : [' ']
111 Mot inconnu : Shift [[18:23]] => |   C-y  [ou bien Shift+Insert] | Colle la copie précédente. Peut être suivi de M-y pour coller les anciennes sélections | <|> shift
111 Confusion probable. Pour dire “possiblement”, écrivez “peut-être”. [[61:70]] => |   C-y  [ou bien Shift+Insert] | Colle la copie précédente. Peut être suivi de M-y pour coller les anciennes sélections | <|> peut être => suggestions : ['Peut-être']

118 Espace(s) surnuméraire(s) à supprimer. [[9:11]] => | C-x C-s  | Sauvegarde un fichier. | <|>    => suggestions : [' ']

119 Espace(s) surnuméraire(s) à supprimer. [[9:11]] => | C-x C-b  | Liste des tampons. | <|>    => suggestions : [' ']

120 Espace(s) surnuméraire(s) à supprimer. [[9:11]] => | C-x C-c  | Quitte Emacs. | <|>    => suggestions : [' ']
120 Mot inconnu : Emacs [[20:25]] => | C-x C-c  | Quitte Emacs. | <|> emacs

122 Mot inconnu : META-x [[19:25]] => === Que faire avec META-x (Alt-x)=== <|> meta-x

123 Mot inconnu : Emacs [[141:146]] => En appuyant sur Alt et x on fait apparaître le curseur tout en bas de la fenêtre. On peut alors exécuter toutes les fonctions interactives d'Emacs. Pour voir la liste de ses fonctions, on peut taper sur Tabulation. D'une manière générale, Tabulation complète la fonction que l'on cherche à effectuer. La flèche du haut permet de reprendre les fonctions effectuées récemment. <|> emacs
125 Mot inconnu : got [[25:28]] => Par exemple, tapez : M-x got //Tabulation// li //Tabulation// //Entrée// 22 //Entrée// <|> got

130 Mot inconnu : ffap [[5:9]] => |M-x ffap| ouvre le fichier dont le nom est sur le curseur (FindFileAtPoint)| <|> ffap
130 Mot inconnu : FindFileAtPoint [[60:75]] => |M-x ffap| ouvre le fichier dont le nom est sur le curseur (FindFileAtPoint)| <|> findfileatpoint

131 Mot inconnu : goto-line [[5:14]] => |M-x goto-line 2| va a la ligne souhaitée | <|> goto-line
131 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. [[21:22]] => |M-x goto-line 2| va a la ligne souhaitée | <|> a => suggestions : ['à']

134 Mot inconnu : ediff-buffers [[5:18]] => |M-x ediff-buffers| lance la comparaison entre deux buffers (appuyer ensuite pipe [Alt Gr-touche 6] => vertical)| <|> ediff-buffers
134 Mot inconnu : buffers [[52:59]] => |M-x ediff-buffers| lance la comparaison entre deux buffers (appuyer ensuite pipe [Alt Gr-touche 6] => vertical)| <|> buffers

135 Mot inconnu : replace-regexp [[5:19]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> replace-regexp
135 Mot inconnu : tT [[21:23]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> tt
135 Mot inconnu : ata [[24:27]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> ata
135 Mot inconnu : sed [[72:75]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> sed
135 Guillemets typographiques ouvrants. [[76:77]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> ' => suggestions : ['“', '‘', '‹']
135 Mot inconnu : tT [[80:82]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> tt
135 Mot inconnu : ata [[83:86]] => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| <|> ata

137 Mot inconnu : flush-lines [[6:17]] => **M-x flush-lines ^$**    enlève les lignes vides (attention tapez deux fois sur le chapeau ^^ ). <|> flush-lines
137 Pas d’espace avant ce signe. [[94:96]] => **M-x flush-lines ^$**    enlève les lignes vides (attention tapez deux fois sur le chapeau ^^ ). <|>  ) => suggestions : [')']

139 Mot inconnu : _________________________________________________________________________________________ [[0:89]] => _________________________________________________________________________________________ <|> _________________________________________________________________________________________
150 Mot inconnu : ie [[68:70]] => Remarque générale : la séquence '  **C-a-k** //faire quelque chose (ie:cd..)// **C-y**  ' marche aussi dans n'importe quel shell. <|> ie
150 Il manque un espace. [[71:73]] => Remarque générale : la séquence '  **C-a-k** //faire quelque chose (ie:cd..)// **C-y**  ' marche aussi dans n'importe quel shell. <|> cd => suggestions : [' cd']
150 Typographie : un ou trois points ? [[73:75]] => Remarque générale : la séquence '  **C-a-k** //faire quelque chose (ie:cd..)// **C-y**  ' marche aussi dans n'importe quel shell. <|> .. => suggestions : ['…', '.']

155 Mot inconnu : Emacs [[36:41]] => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  <|> emacs
155 Guillemets typographiques ouvrants. [[95:96]] => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  <|> " => suggestions : ['«\xa0', '“']
155 Guillemets typographiques fermants. [[103:104]] => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  <|> " => suggestions : ['\xa0»', '”']
155 Mot inconnu : apt-get [[130:137]] => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  <|> apt-get
155 Mot inconnu : synaptic [[141:149]] => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  <|> synaptic
155 Espace(s) en fin de ligne à supprimer. [[459:460]] => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  <|>   => suggestions : ['']

167 Mot inconnu : TAB [[34:37]] => En fait, comme toujours, utilisez TAB pour voir la liste des commandes possibles. <|> tab
171 Mot inconnu : el [[12:14]] =>   * package.el : https://wikemacs.org/wiki/Package.el <|> el

178 Mot inconnu : add-to-list [[1:12]] => (add-to-list 'package-archives <|> add-to-list
178 Guillemets typographiques ouvrants. [[13:14]] => (add-to-list 'package-archives <|> ' => suggestions : ['“', '‘', '‹']

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Liens : <|>   => suggestions : ['']
185 Mot inconnu : MELPA [[4:9]] =>   * MELPA : https://wikemacs.org/wiki/MELPA <|> melpa
186 Mot inconnu : ELPA [[8:12]] =>   * GNU ELPA : https://wikemacs.org/wiki/ELPA <|> elpa

212 Mot inconnu : Emacs [[30:35]] => Org-mode est un mode majeur d'Emacs extrêmement populaire. C'est souvent une des raisons qui fait basculer des gens vers Emacs. Avant de compléter cette documentation, je vous invite à regarder le site: http://orgmode.org <|> emacs
212 Mot inconnu : Emacs [[121:126]] => Org-mode est un mode majeur d'Emacs extrêmement populaire. C'est souvent une des raisons qui fait basculer des gens vers Emacs. Avant de compléter cette documentation, je vous invite à regarder le site: http://orgmode.org <|> emacs

217 Mot inconnu : LaTeX [[16:21]] => ===== Écrire en LaTeX avec Emacs : exemple de configuration ===== <|> latex
217 Mot inconnu : Emacs [[27:32]] => ===== Écrire en LaTeX avec Emacs : exemple de configuration ===== <|> emacs

219 Mot inconnu : Emacs [[0:5]] => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : <|> emacs
219 Guillemets fermants. [[90:92]] => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : <|>  " => suggestions : ['\xa0»', '”']
219 Mot inconnu : emacs [[93:98]] => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : <|> emacs
219 Guillemets typographiques fermants. [[100:101]] => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : <|> " => suggestions : ['\xa0»', '”']
219 Mot inconnu : init [[167:171]] => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : <|> init
219 Mot inconnu : el [[172:174]] => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : <|> el

226 Mot inconnu : AucTeX [[28:34]] => Voici ici notre partie pour AucTeX : <|> auctex

228 Mot inconnu : AucTex-mode [[2:13]] => ==AucTex-mode :== <|> auctex-mode
232 Mot inconnu : auctex [[125:131]] => Tout d'abord, la documentation d'un paquet est rendue accessible grâce à la commande ** C-c ? **. Comme toutes les commandes auctex qui offrent un choix (ici le nom du paquet), on pourra écrire le début du nom recherché et compléter avec **Tabulation**. Ainsi, ** C-c ? Tabulation** affiche la liste de tous les paquets connus d'AucTeX. <|> auctex
232 Mot inconnu : AucTeX [[329:335]] => Tout d'abord, la documentation d'un paquet est rendue accessible grâce à la commande ** C-c ? **. Comme toutes les commandes auctex qui offrent un choix (ici le nom du paquet), on pourra écrire le début du nom recherché et compléter avec **Tabulation**. Ainsi, ** C-c ? Tabulation** affiche la liste de tous les paquets connus d'AucTeX. <|> auctex

234 Mot inconnu : Ret [[102:105]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> ret
234 Mot inconnu : AucTex [[158:164]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> auctex
234 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[228:231]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|>  -  => suggestions : [' – ', ' — ', ' − ']
234 Mot inconnu : itemize [[237:244]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> itemize
234 Mot inconnu : tabular [[246:253]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> tabular
234 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[259:262]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|>  -  => suggestions : [' – ', ' — ', ' − ']
234 Mot inconnu : tab [[312:315]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> tab
234 Guillemets typographiques fermants. [[355:356]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> " => suggestions : ['\xa0»', '”']
234 Mot inconnu : M-Ret [[365:370]] => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. <|> m-ret

236 Mot inconnu : AucTeX [[32:38]] => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). <|> auctex
236 Mot inconnu : BibTeX [[377:383]] => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). <|> bibtex
236 Une de ces ponctuations est superflue. [[383:386]] => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). <|> , . => suggestions : [',', '.']
236 Typographie : points de suspension. Utilisez le caractère dédié. [[385:388]] => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). <|> ... => suggestions : ['…']
236 Mot inconnu : View [[399:403]] => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). <|> view
236 Mot inconnu : All [[480:483]] => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). <|> all

241 Mot inconnu : Emacs [[27:32]] => ==== Avoir des thèmes pour Emacs ==== <|> emacs

243 Mot inconnu : Emacs [[31:36]] => Vous pouvez changer le thème d'Emacs, c'est-à-dire toutes les couleurs qui sont affichées. <|> emacs

249 Mot inconnu : Emacs [[9:14]] => Relancez Emacs s'il était déjà lancé. <|> emacs

253 Mot inconnu : email [[182:187]] => Vous avez alors toute la liste des thèmes. Pour voir ce que chacun donne, placez le curseur clignotant sur une des lignes et tapez ENTRÉE. Attention à ne pas cliquer sur une adresse email car cela vous ouvrirait l'éditeur d'email intégré à Emacs (C-x k ENTRÉE pour quitter au cas où ça serait déjà fait :-)). <|> email
253 Mot inconnu : email [[224:229]] => Vous avez alors toute la liste des thèmes. Pour voir ce que chacun donne, placez le curseur clignotant sur une des lignes et tapez ENTRÉE. Attention à ne pas cliquer sur une adresse email car cela vous ouvrirait l'éditeur d'email intégré à Emacs (C-x k ENTRÉE pour quitter au cas où ça serait déjà fait :-)). <|> email
253 Mot inconnu : Emacs [[240:245]] => Vous avez alors toute la liste des thèmes. Pour voir ce que chacun donne, placez le curseur clignotant sur une des lignes et tapez ENTRÉE. Attention à ne pas cliquer sur une adresse email car cela vous ouvrirait l'éditeur d'email intégré à Emacs (C-x k ENTRÉE pour quitter au cas où ça serait déjà fait :-)). <|> emacs
268 Espace(s) en fin de ligne à supprimer. [[15:16]] => ou comme ceci :  <|>   => suggestions : ['']

278 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. [[0:13]] => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) <|> copier/coller => suggestions : ['Copier-coller', 'Copié-collé', 'Copiée-collée', 'Copiés-collés', 'Copiées-collées']
278 Mot inconnu : Emacs [[55:60]] => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) <|> emacs
278 Avant « etc. », il faut mettre une virgule. [[93:98]] => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) <|>  etc. => suggestions : [', etc.']
278 Typographie : un ou trois points ? [[97:99]] => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) <|> .. => suggestions : ['…', '.']

279 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. [[1:14]] => (Copier/coller du type : surligner le texte=copier / bouton du milieu de la souris =coller. )  <|> copier/coller => suggestions : ['Copier-coller', 'Copié-collé', 'Copiée-collée', 'Copiés-collés', 'Copiées-collées']
279 Pas d’espace avant ce signe. [[91:93]] => (Copier/coller du type : surligner le texte=copier / bouton du milieu de la souris =coller. )  <|>  ) => suggestions : [')']
279 Espace(s) en fin de ligne à supprimer. [[93:94]] => (Copier/coller du type : surligner le texte=copier / bouton du milieu de la souris =coller. )  <|>   => suggestions : ['']

280 Mot inconnu : Metacity [[18:26]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> metacity
280 Guillemets typographiques ouvrants. [[87:88]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> ' => suggestions : ['“', '‘', '‹']
280 Mot inconnu : Primary [[88:95]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> primary
280 Mot inconnu : Selection [[96:105]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> selection
280 Guillemets typographiques fermants. [[105:106]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> ' => suggestions : ['”', '’', '›']
280 Mot inconnu : clipboard [[109:118]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> clipboard
280 Mot inconnu : middle [[135:141]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> middle
280 Mot inconnu : click [[142:147]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> click
280 Mot inconnu : parcellite [[210:220]] => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) <|> parcellite

297 Une de ces ponctuations est superflue. [[0:2]] => :!: gardez bien les 3 parenthèses :!: <|> :! => suggestions : [':', '!']
297 Une de ces ponctuations est superflue. [[34:36]] => :!: gardez bien les 3 parenthèses :!: <|> :! => suggestions : [':', '!']

299 Mot inconnu : Emacs [[15:20]] => ensuite lancez Emacs en tant que root et tapez dans le mini-buffer <|> emacs
299 Mot inconnu : root [[33:37]] => ensuite lancez Emacs en tant que root et tapez dans le mini-buffer <|> root
299 Mot inconnu : mini-buffer [[55:66]] => ensuite lancez Emacs en tant que root et tapez dans le mini-buffer <|> mini-buffer

303 Mot inconnu : lisp [[25:29]] => pour compiler le fichier lisp. <|> lisp

305 Mot inconnu : Emacs [[74:79]] => Maintenant, il faut copier le fichier compilé dans le bon dossier pour qu'Emacs l'utilise : <|> emacs
