
6 Mot inconnu : Emacs => ====== Emacs : le couteau Suisse du développeur ====== | emacs
6 S’il s’agit d’un adjectif, ne mettez pas de majuscule. => ====== Emacs : le couteau Suisse du développeur ====== | suisse => suggestions : ['suisse']

8 Mot inconnu : Emacs => **Emacs**, ou Editor MACroS, créé par Richard Stallman est un [[éditeur de texte]] très puissant, extensible et personnalisable. | emacs
8 Mot inconnu : Editor => **Emacs**, ou Editor MACroS, créé par Richard Stallman est un [[éditeur de texte]] très puissant, extensible et personnalisable. | editor
8 Mot inconnu : MACroS => **Emacs**, ou Editor MACroS, créé par Richard Stallman est un [[éditeur de texte]] très puissant, extensible et personnalisable. | macros

10 Mot inconnu : Emacs => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | emacs
10 Mot inconnu : LaTeX => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | latex
10 Mot inconnu : auctex => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | auctex
10 Mot inconnu : javascript => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | javascript
10 Mot inconnu : html => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | html
10 Typographie : points de suspension. Utilisez le caractère dédié. => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | ... => suggestions : ['…']
10 Mot inconnu : IRC => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | irc
10 Typographie : points de suspension. Utilisez le caractère dédié. => Bien que d'apparence austère de prime abord, avec un peu de prise en main, Emacs peut servir d'environnement de développement pour beaucoup de langages (LaTeX avec l'extension auctex, python, javascript, html...), de navigateur internet, de client mail, de client IRC, de psychanalyste... | ... => suggestions : ['…']

15 Mot inconnu : emacs => Selon vos besoins, deux possibilités pour installer emacs sont détaillées ci-dessous. | emacs

23 Guillemets typographiques ouvrants. => ==== Version ''snapshot'' depuis un dépôt non-officiel === | '' => suggestions : ['«\xa0', '“']
23 Mot inconnu : snapshot => ==== Version ''snapshot'' depuis un dépôt non-officiel === | snapshot
23 Guillemets typographiques fermants. => ==== Version ''snapshot'' depuis un dépôt non-officiel === | '' => suggestions : ['\xa0»', '”']

25 Mot inconnu : ubuntu-elisp => [[https://launchpad.net/~ubuntu-elisp|L'Ubuntu Emacs Lisp team]] fournit un dépôt [[ppa|PPA]] contenant un snapshot beaucoup plus récent que celui des dépôts d'Ubuntu et régulièrement mis à jour. | ubuntu-elisp
25 Mot inconnu : Emacs => [[https://launchpad.net/~ubuntu-elisp|L'Ubuntu Emacs Lisp team]] fournit un dépôt [[ppa|PPA]] contenant un snapshot beaucoup plus récent que celui des dépôts d'Ubuntu et régulièrement mis à jour. | emacs
25 Mot inconnu : team => [[https://launchpad.net/~ubuntu-elisp|L'Ubuntu Emacs Lisp team]] fournit un dépôt [[ppa|PPA]] contenant un snapshot beaucoup plus récent que celui des dépôts d'Ubuntu et régulièrement mis à jour. | team
25 Mot inconnu : snapshot => [[https://launchpad.net/~ubuntu-elisp|L'Ubuntu Emacs Lisp team]] fournit un dépôt [[ppa|PPA]] contenant un snapshot beaucoup plus récent que celui des dépôts d'Ubuntu et régulièrement mis à jour. | snapshot

32 Mot inconnu : Emacs => Vous pouvez maintenant lancer Emacs à partir du menu des applications (choisir la version GTK) ou du terminal en tapant simplement ''emacs''. | emacs
32 Guillemets typographiques ouvrants. => Vous pouvez maintenant lancer Emacs à partir du menu des applications (choisir la version GTK) ou du terminal en tapant simplement ''emacs''. | '' => suggestions : ['«\xa0', '“']
32 Mot inconnu : emacs => Vous pouvez maintenant lancer Emacs à partir du menu des applications (choisir la version GTK) ou du terminal en tapant simplement ''emacs''. | emacs
32 Guillemets typographiques fermants. => Vous pouvez maintenant lancer Emacs à partir du menu des applications (choisir la version GTK) ou du terminal en tapant simplement ''emacs''. | '' => suggestions : ['\xa0»', '”']

34 Mot inconnu : Shift => En appuyant sur Shift puis en cliquant dans la fenêtre d'Emacs, vous avez la possibilité de grossir la taille de la police. | shift
34 Mot inconnu : Emacs => En appuyant sur Shift puis en cliquant dans la fenêtre d'Emacs, vous avez la possibilité de grossir la taille de la police. | emacs

38 Espace(s) surnuméraire(s) à supprimer. => Le  :[[http://www.linux-france.org/article/appli/emacs/manuel/html/index.html|manuel en français]] |    => suggestions : [' ']

45 Espace(s) surnuméraire(s) à supprimer. => Il est toujours possible  d'écrire du texte dans le ou les fichiers ouverts (contrairement à Vim). |    => suggestions : [' ']

50 Espace(s) surnuméraire(s) à supprimer. => L'édition de texte  s'appuie sur les modes majeurs et mineurs : |    => suggestions : [' ']

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Les modes majeurs permettent de définir comment un type de fichier va être édité. Cela comprend la coloration syntaxique, la définition de commandes clavier, l'ajout de fonctionnalités spécifiques ... Il existe un mode majeur pour presque chaque langage de programmation. |    => suggestions : ['']
52 Typographie : points de suspension. Utilisez le caractère dédié. =>   * Les modes majeurs permettent de définir comment un type de fichier va être édité. Cela comprend la coloration syntaxique, la définition de commandes clavier, l'ajout de fonctionnalités spécifiques ... Il existe un mode majeur pour presque chaque langage de programmation. | ... => suggestions : ['…']

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Les modes mineurs permettent de modifier le comportement des modes majeurs. |    => suggestions : ['']

57 Mot inconnu : Emacs => Emacs se contrôle principalement via des raccourcis / commandes clavier. | emacs
59 S’il s’agit d’un impératif, ajoutez un “s”. => C-<lettre>: correspond à **Ctrl+<lettre>** | correspond => suggestions : ['corresponds']
61 S’il s’agit d’un impératif, ajoutez un “s”. => M-<lettre>: correspond à  **Alt+<lettre>** | correspond => suggestions : ['corresponds']
61 Espace(s) surnuméraire(s) à supprimer. => M-<lettre>: correspond à  **Alt+<lettre>** |    => suggestions : [' ']

63 Guillemets typographiques fermants. => <note tip>''M'' correspond à la touche **META** qui est généralement associée à la touche **ALT**</note> | '' => suggestions : ['\xa0»', '”']
63 Mot inconnu : META => <note tip>''M'' correspond à la touche **META** qui est généralement associée à la touche **ALT**</note> | meta

68 Mot inconnu : Emacs => Emacs propose un tutoriel pour apprendre à utiliser les commandes de base. Pour cela, une fois Emacs lancé tapez : | emacs
68 Mot inconnu : Emacs => Emacs propose un tutoriel pour apprendre à utiliser les commandes de base. Pour cela, une fois Emacs lancé tapez : | emacs

79 Espace(s) surnuméraire(s) à supprimer. => ^ commande ^      action       ^ |         => suggestions : [' ']

80 Espace(s) surnuméraire(s) à supprimer. => |   C-v    | Avance d'un écran | |      => suggestions : [' ']

81 Espace(s) surnuméraire(s) à supprimer. => |   M-v    | Recule d'un écran | |      => suggestions : [' ']

82 Espace(s) surnuméraire(s) à supprimer. => |   C-n    | Avance d'une ligne  | |      => suggestions : [' ']
82 Espace(s) surnuméraire(s) à supprimer. => |   C-n    | Avance d'une ligne  | |    => suggestions : [' ']

83 Espace(s) surnuméraire(s) à supprimer. => |   C-p    | Recule d'une ligne    | |      => suggestions : [' ']
83 Espace(s) surnuméraire(s) à supprimer. => |   C-p    | Recule d'une ligne    | |      => suggestions : [' ']

84 Espace(s) surnuméraire(s) à supprimer. => |   C-f    | Avance d'un caractère | |      => suggestions : [' ']

85 Espace(s) surnuméraire(s) à supprimer. => |   C-b    | Recule d'un caractère | |      => suggestions : [' ']

86 Espace(s) surnuméraire(s) à supprimer. => |   M-f    | Avance d'un mot | |      => suggestions : [' ']

87 Espace(s) surnuméraire(s) à supprimer. => |   M-b    | Recule d'un mot | |      => suggestions : [' ']

88 Espace(s) surnuméraire(s) à supprimer. => |   C-a    | Va au début de la ligne | |      => suggestions : [' ']

89 Espace(s) surnuméraire(s) à supprimer. => |   C-e    | Va à la fin de la ligne | |      => suggestions : [' ']

90 Espace(s) surnuméraire(s) à supprimer. => |   M-a    | Va au début de la phrase | |      => suggestions : [' ']

91 Espace(s) surnuméraire(s) à supprimer. => |   M-e    | Va à la fin de la phrase | |      => suggestions : [' ']

92 Espace(s) surnuméraire(s) à supprimer. => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | |    => suggestions : [' ']
92 Mot inconnu : Ctr => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | | ctr
92 Espace(s) surnuméraire(s) à supprimer. => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | |    => suggestions : [' ']
92 Espace(s) surnuméraire(s) à supprimer. => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | |    => suggestions : [' ']
92 Espace(s) surnuméraire(s) à supprimer. => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | |    => suggestions : [' ']
92 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | | a => suggestions : ['à']
92 Il manque un espace après la parenthèse. => |   C+M-f  | Ctr+Alt enfoncé  + f  :  (va a la fermeture de parenthèse correspondante**)_** | | ) => suggestions : [') ']

93 Espace(s) surnuméraire(s) à supprimer. => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | |    => suggestions : [' ']
93 Mot inconnu : Ctr => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | | ctr
93 Il manque un espace avant la parenthèse. => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | | ( => suggestions : [' (']
93 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. => |   C+M-b  | Ctr+Alt enfoncé + b : **_(**va a l'ouverture de parenthèse correspondante) | | a => suggestions : ['à']

94 Espace(s) surnuméraire(s) à supprimer. => |   C-s-w  | Lance la recherche du mot devant le curseur, suivi de C-s [C-r] permet de se déplacer au même mot suivant [précédent] | |    => suggestions : [' ']

95 Espace(s) surnuméraire(s) à supprimer. => |   C-s-w-w  | Lance la recherche du mot en deux parties devant le curseur, suivit de C-s [C-r]...| |    => suggestions : [' ']
95 Typographie : points de suspension. Utilisez le caractère dédié. => |   C-s-w-w  | Lance la recherche du mot en deux parties devant le curseur, suivit de C-s [C-r]...| | ... => suggestions : ['…']

99 Espace(s) surnuméraire(s) à supprimer. => ^ commande ^      action       ^ |         => suggestions : [' ']

101 Espace(s) surnuméraire(s) à supprimer. => |    C-d    | Efface le caractère suivant | |      => suggestions : [' ']

103 Espace(s) surnuméraire(s) à supprimer. => |   M-d     | Supprime le mot suivant | |       => suggestions : [' ']

104 Espace(s) surnuméraire(s) à supprimer. => |   C-k     | Supprime du curseur à la fin de la ligne | |       => suggestions : [' ']

105 Espace(s) surnuméraire(s) à supprimer. => |   M-k     | Supprime jusqu'à la fin de la phrase courante | |       => suggestions : [' ']

106 Espace(s) surnuméraire(s) à supprimer. => |   C-x u ou C-_  | Annuler la modification | |    => suggestions : [' ']

107 Espace(s) surnuméraire(s) à supprimer. => |   C-x C-x    | Échange la position du curseur avec l'autre côté de la sélection | |      => suggestions : [' ']

109 Espace(s) surnuméraire(s) à supprimer. => |   C-w   | Coupe la région sélectionnée | |     => suggestions : [' ']

110 Espace(s) surnuméraire(s) à supprimer. => |   M-w   | Copie la région sélectionnée | |     => suggestions : [' ']

111 Espace(s) surnuméraire(s) à supprimer. => |   C-y  [ou bien Shift+Insert] | Colle la copie précédente. Peut être suivi de M-y pour coller les anciennes sélections | |    => suggestions : [' ']
111 Mot inconnu : Shift => |   C-y  [ou bien Shift+Insert] | Colle la copie précédente. Peut être suivi de M-y pour coller les anciennes sélections | | shift
111 Confusion probable. Pour dire “possiblement”, écrivez “peut-être”. => |   C-y  [ou bien Shift+Insert] | Colle la copie précédente. Peut être suivi de M-y pour coller les anciennes sélections | | peut être => suggestions : ['Peut-être']

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

118 Espace(s) surnuméraire(s) à supprimer. => | C-x C-s  | Sauvegarde un fichier. | |    => suggestions : [' ']

119 Espace(s) surnuméraire(s) à supprimer. => | C-x C-b  | Liste des tampons. | |    => suggestions : [' ']

120 Espace(s) surnuméraire(s) à supprimer. => | C-x C-c  | Quitte Emacs. | |    => suggestions : [' ']
120 Mot inconnu : Emacs => | C-x C-c  | Quitte Emacs. | | emacs

122 Mot inconnu : META-x => === Que faire avec META-x (Alt-x)=== | meta-x

123 Mot inconnu : Emacs => En appuyant sur Alt et x on fait apparaître le curseur tout en bas de la fenêtre. On peut alors exécuter toutes les fonctions interactives d'Emacs. Pour voir la liste de ses fonctions, on peut taper sur Tabulation. D'une manière générale, Tabulation complète la fonction que l'on cherche à effectuer. La flèche du haut permet de reprendre les fonctions effectuées récemment. | emacs
125 Mot inconnu : got => Par exemple, tapez : M-x got //Tabulation// li //Tabulation// //Entrée// 22 //Entrée// | got

130 Mot inconnu : ffap => |M-x ffap| ouvre le fichier dont le nom est sur le curseur (FindFileAtPoint)| | ffap
130 Mot inconnu : FindFileAtPoint => |M-x ffap| ouvre le fichier dont le nom est sur le curseur (FindFileAtPoint)| | findfileatpoint

131 Mot inconnu : goto-line => |M-x goto-line 2| va a la ligne souhaitée | | goto-line
131 Confusion probable : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. => |M-x goto-line 2| va a la ligne souhaitée | | a => suggestions : ['à']

132 Mot inconnu : comment-region => |M-x comment-region| commente la zone sélectionnée => rajoute ''#'' ou ''REM'' ou '';'' selon| | comment-region
132 Guillemets typographiques ouvrants. => |M-x comment-region| commente la zone sélectionnée => rajoute ''#'' ou ''REM'' ou '';'' selon| | '' => suggestions : ['«\xa0', '“']
132 Guillemets typographiques fermants. => |M-x comment-region| commente la zone sélectionnée => rajoute ''#'' ou ''REM'' ou '';'' selon| | '' => suggestions : ['\xa0»', '”']
132 Guillemets fermants. => |M-x comment-region| commente la zone sélectionnée => rajoute ''#'' ou ''REM'' ou '';'' selon| |  '' => suggestions : ['\xa0»', '”']

133 Mot inconnu : un-comment-region => |M-x un-comment-region| dé-commente la région => enlève ''#'' ou ''REM'' ou '';'' selon| | un-comment-region
133 Guillemets typographiques ouvrants. => |M-x un-comment-region| dé-commente la région => enlève ''#'' ou ''REM'' ou '';'' selon| | '' => suggestions : ['«\xa0', '“']
133 Guillemets typographiques fermants. => |M-x un-comment-region| dé-commente la région => enlève ''#'' ou ''REM'' ou '';'' selon| | '' => suggestions : ['\xa0»', '”']
133 Guillemets fermants. => |M-x un-comment-region| dé-commente la région => enlève ''#'' ou ''REM'' ou '';'' selon| |  '' => suggestions : ['\xa0»', '”']

134 Mot inconnu : ediff-buffers => |M-x ediff-buffers| lance la comparaison entre deux buffers (appuyer ensuite pipe [Alt Gr-touche 6] => vertical)| | ediff-buffers
134 Mot inconnu : buffers => |M-x ediff-buffers| lance la comparaison entre deux buffers (appuyer ensuite pipe [Alt Gr-touche 6] => vertical)| | buffers

135 Mot inconnu : replace-regexp => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | replace-regexp
135 Mot inconnu : tT => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | tt
135 Mot inconnu : ata => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | ata
135 Mot inconnu : sed => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | sed
135 Guillemets typographiques ouvrants. => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | ' => suggestions : ['“', '‘', '‹']
135 Mot inconnu : tT => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | tt
135 Mot inconnu : ata => |M-x replace-regexp [tT]ata toto| remplace Tata ou tata par toto. Comme sed 's/[tT]ata/toto/'| | ata

137 Mot inconnu : flush-lines => **M-x flush-lines ^$**    enlève les lignes vides (attention tapez deux fois sur le chapeau ^^ ). | flush-lines
137 Pas d’espace avant ce signe. => **M-x flush-lines ^$**    enlève les lignes vides (attention tapez deux fois sur le chapeau ^^ ). |  ) => suggestions : [')']

139 Mot inconnu : _________________________________________________________________________________________ => _________________________________________________________________________________________ | _________________________________________________________________________________________
150 Mot inconnu : ie => Remarque générale : la séquence '  **C-a-k** //faire quelque chose (ie:cd..)// **C-y**  ' marche aussi dans n'importe quel shell. | ie
150 Il manque un espace. => Remarque générale : la séquence '  **C-a-k** //faire quelque chose (ie:cd..)// **C-y**  ' marche aussi dans n'importe quel shell. | cd => suggestions : [' cd']
150 Typographie : un ou trois points ? => Remarque générale : la séquence '  **C-a-k** //faire quelque chose (ie:cd..)// **C-y**  ' marche aussi dans n'importe quel shell. | .. => suggestions : ['…', '.']

155 Mot inconnu : Emacs => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  | emacs
155 Guillemets typographiques ouvrants. => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  | " => suggestions : ['«\xa0', '“']
155 Guillemets typographiques fermants. => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  | " => suggestions : ['\xa0»', '”']
155 Mot inconnu : apt-get => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  | apt-get
155 Mot inconnu : synaptic => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  | synaptic
155 Espace(s) en fin de ligne à supprimer. => Comme tout éditeur qui se respecte, Emacs propose un système d'extensions (ou bien de paquets, "package" en anglais). C'est comme apt-get ou synaptic pour Ubuntu. Cela permet d'obtenir de nouvelles fonctionnalités et de personnaliser son usage très facilement. Avant ce système d'extensions, on devait copier-coller les codes des extensions dans sa configuration… imaginez le bazar. Maintenant, même de petites fonctionnalités sont disponibles dans un paquet.  |   => suggestions : ['']

157 Guillemets typographiques ouvrants. => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | '' => suggestions : ['«\xa0', '“']
157 Mot inconnu : el => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | el
157 Guillemets typographiques fermants. => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | '' => suggestions : ['\xa0»', '”']
157 Guillemets typographiques ouvrants. => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | '' => suggestions : ['«\xa0', '“']
157 Mot inconnu : el-get => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | el-get
157 Guillemets typographiques fermants. => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | '' => suggestions : ['\xa0»', '”']
157 Guillemets typographiques ouvrants. => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | '' => suggestions : ['«\xa0', '“']
157 Mot inconnu : el => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | el
157 Guillemets typographiques fermants. => Le système d'extensions officiel est ''package.el''. En fait, avant son apparition on pouvait utiliser ''el-get''. Il fonctionne toujours et est complémentaire à ''package.el'', mais nous allons nous intéresser à ce dernier. | '' => suggestions : ['\xa0»', '”']

159 Guillemets typographiques ouvrants. => ''package.el'' est inclus de base dans Emacs (depuis la version 24). On a plusieurs commandes à disposition : | '' => suggestions : ['«\xa0', '“']
159 Mot inconnu : el => ''package.el'' est inclus de base dans Emacs (depuis la version 24). On a plusieurs commandes à disposition : | el
159 Guillemets typographiques fermants. => ''package.el'' est inclus de base dans Emacs (depuis la version 24). On a plusieurs commandes à disposition : | '' => suggestions : ['\xa0»', '”']
159 Mot inconnu : Emacs => ''package.el'' est inclus de base dans Emacs (depuis la version 24). On a plusieurs commandes à disposition : | emacs

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * lister les extensions disponibles :  ''M-x package-list-packages'' |    => suggestions : ['']
161 Espace(s) surnuméraire(s) à supprimer. =>   * lister les extensions disponibles :  ''M-x package-list-packages'' |    => suggestions : [' ']
161 Guillemets typographiques ouvrants. =>   * lister les extensions disponibles :  ''M-x package-list-packages'' | '' => suggestions : ['«\xa0', '“']
161 Mot inconnu : package-list-packages =>   * lister les extensions disponibles :  ''M-x package-list-packages'' | package-list-packages
161 Guillemets typographiques fermants. =>   * lister les extensions disponibles :  ''M-x package-list-packages'' | '' => suggestions : ['\xa0»', '”']

163 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  |    => suggestions : ['']
163 Guillemets typographiques ouvrants. =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  | '' => suggestions : ['«\xa0', '“']
163 Mot inconnu : package-install =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  | package-install
163 Mot inconnu : ENTREE =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  | entree
163 Mot inconnu : ENTREE =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  | entree
163 Guillemets typographiques fermants. =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  | '' => suggestions : ['\xa0»', '”']
163 Espace(s) en fin de ligne à supprimer. =>   * installer une extension : ''M-x package-install ENTREE un-paquet ENTREE''  |   => suggestions : ['']

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. |    => suggestions : ['']
165 Guillemets typographiques ouvrants. =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | " => suggestions : ['«\xa0', '“']
165 Mot inconnu : apt-get =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | apt-get
165 Mot inconnu : update =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | update
165 Guillemets typographiques fermants. =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | " => suggestions : ['\xa0»', '”']
165 Guillemets typographiques ouvrants. =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | '' => suggestions : ['«\xa0', '“']
165 Mot inconnu : package-initialize =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | package-initialize
165 Guillemets typographiques fermants. =>   * initialiser (comme "apt-get update") : ''M-x package-initialize''. | '' => suggestions : ['\xa0»', '”']

167 Mot inconnu : TAB => En fait, comme toujours, utilisez TAB pour voir la liste des commandes possibles. | tab

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * package.el : https://wikemacs.org/wiki/Package.el |    => suggestions : ['']
171 Mot inconnu : el =>   * package.el : https://wikemacs.org/wiki/Package.el | el

175 Mot inconnu : apt-get => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | apt-get
175 Mot inconnu : el => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | el
175 Mot inconnu : Elpa => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | elpa
175 Mot inconnu : emacs => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | emacs
175 Mot inconnu : lisp => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | lisp
175 Mot inconnu : MELPA => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | melpa
175 Mot inconnu : init => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | init
175 Mot inconnu : emacs => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | emacs
175 Mot inconnu : init => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | init
175 Mot inconnu : el => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | el
175 Guillemets typographiques fermants. => Comme Ubuntu et apt-get, package.el doit connaître des sources d'extensions. Il en a une par défaut, GNU Elpa (emacs lisp package archive). Cependant, ce dépôt ne contient pas les derniers paquets et les plus intéressants. On va donc ajouter MELPA avec ces quelques lignes dans votre configuration (votre init file, ''~/.emacs.d/init.el''): | '' => suggestions : ['\xa0»', '”']

178 Mot inconnu : add-to-list => (add-to-list 'package-archives | add-to-list
178 Guillemets typographiques ouvrants. => (add-to-list 'package-archives | ' => suggestions : ['“', '‘', '‹']

179 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>              '("melpa" . "https://stable.melpa.org/packages/") t)'' |               => suggestions : ['']
179 Guillemets typographiques ouvrants. =>              '("melpa" . "https://stable.melpa.org/packages/") t)'' | " => suggestions : ['«\xa0', '“']
179 Mot inconnu : melpa =>              '("melpa" . "https://stable.melpa.org/packages/") t)'' | melpa
179 Guillemets typographiques fermants. =>              '("melpa" . "https://stable.melpa.org/packages/") t)'' | " => suggestions : ['\xa0»', '”']
179 Pas d’espace avant un point. =>              '("melpa" . "https://stable.melpa.org/packages/") t)'' |  . => suggestions : ['.']
179 Guillemets typographiques ouvrants. =>              '("melpa" . "https://stable.melpa.org/packages/") t)'' | " => suggestions : ['«\xa0', '“']

180 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>               |               => suggestions : ['']

181 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! |   => suggestions : ['']
181 Mot inconnu : Emacs =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | emacs
181 Guillemets typographiques ouvrants. =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | '' => suggestions : ['«\xa0', '“']
181 Guillemets typographiques fermants. =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | '' => suggestions : ['\xa0»', '”']
181 Guillemets typographiques ouvrants. =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | '' => suggestions : ['«\xa0', '“']
181 Mot inconnu : eval-last-sexp =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | eval-last-sexp
181 Guillemets typographiques fermants. =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | '' => suggestions : ['\xa0»', '”']
181 Mot inconnu : Emacs =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | emacs
181 Guillemets typographiques ouvrants. =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | '' => suggestions : ['«\xa0', '“']
181 Mot inconnu : package-list-packages =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | package-list-packages
181 Guillemets typographiques fermants. =>  Pour prendre en compte ces quelques lignes, redémarrez Emacs, ou placez-vous après la dernière parenthèse fermante et exécutez ''C-x C-e'' (soit ''M-x eval-last-sexp''), qui permet d'évaluer dans l'environnement d'Emacs la dernière expression. Maintenant vous verrez plus de paquets disponibles avec ''M-x package-list-packages'' et on va pouvoir en installer des biens ! | '' => suggestions : ['\xa0»', '”']

182 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>               |               => suggestions : ['']

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  Liens : |   => suggestions : ['']

185 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * MELPA : https://wikemacs.org/wiki/MELPA |    => suggestions : ['']
185 Mot inconnu : MELPA =>   * MELPA : https://wikemacs.org/wiki/MELPA | melpa

186 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * GNU ELPA : https://wikemacs.org/wiki/ELPA |    => suggestions : ['']
186 Mot inconnu : ELPA =>   * GNU ELPA : https://wikemacs.org/wiki/ELPA | elpa

192 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[https://wikemacs.org/wiki/Smex | smex]] permet de lancer les commandes avec ''M-x'' plus rapidement, de manière interactive. Lorsqu'on commence à taper une commande on voit la liste des commandes qui correspondent. On voit celles qu'on utilise le plus souvent en premières. |     => suggestions : ['']
192 Mot inconnu : smex =>    * [[https://wikemacs.org/wiki/Smex | smex]] permet de lancer les commandes avec ''M-x'' plus rapidement, de manière interactive. Lorsqu'on commence à taper une commande on voit la liste des commandes qui correspondent. On voit celles qu'on utilise le plus souvent en premières. | smex
192 Guillemets typographiques ouvrants. =>    * [[https://wikemacs.org/wiki/Smex | smex]] permet de lancer les commandes avec ''M-x'' plus rapidement, de manière interactive. Lorsqu'on commence à taper une commande on voit la liste des commandes qui correspondent. On voit celles qu'on utilise le plus souvent en premières. | '' => suggestions : ['«\xa0', '“']
192 Guillemets typographiques fermants. =>    * [[https://wikemacs.org/wiki/Smex | smex]] permet de lancer les commandes avec ''M-x'' plus rapidement, de manière interactive. Lorsqu'on commence à taper une commande on voit la liste des commandes qui correspondent. On voit celles qu'on utilise le plus souvent en premières. | '' => suggestions : ['\xa0»', '”']

193 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[ https://github.com/bbatsov/projectile | projectile]] est une librairie de gestion de projets. Il permet beaucoup de choses, mais notamment de chercher récursivement des fichiers dans un projet (et toujours interactivement). |     => suggestions : ['']
193 Pas d’espace après ce signe. =>    * [[ https://github.com/bbatsov/projectile | projectile]] est une librairie de gestion de projets. Il permet beaucoup de choses, mais notamment de chercher récursivement des fichiers dans un projet (et toujours interactivement). | [  => suggestions : ['[']

194 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). |     => suggestions : ['']
194 Guillemets typographiques ouvrants. =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). | '' => suggestions : ['«\xa0', '“']
194 Guillemets typographiques fermants. =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). | '' => suggestions : ['\xa0»', '”']
194 Guillemets typographiques ouvrants. =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). | " => suggestions : ['«\xa0', '“']
194 Mot inconnu : Interactively =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). | interactively
194 Mot inconnu : things =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). | things
194 Guillemets typographiques fermants. =>    * ''ido'' veut dire "Interactively do things" et il porte bien son nom. Il offre un mini-prompt interactif pour presque toutes les commandes qui en ont besoin, ce qui permet de moins taper et d'aller plus vite (pour ouvrir des fichiers, pour répondre à des confirmations oui/non, etc). | " => suggestions : ['\xa0»', '”']

195 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[http://wikemacs.org/wiki/Magit | magit ]] pour utiliser git (le gestionnaire de versions) de manière visuelle, interactive et efficace, |     => suggestions : ['']
195 Mot inconnu : magit =>    * [[http://wikemacs.org/wiki/Magit | magit ]] pour utiliser git (le gestionnaire de versions) de manière visuelle, interactive et efficace, | magit
195 Pas d’espace avant ce signe. =>    * [[http://wikemacs.org/wiki/Magit | magit ]] pour utiliser git (le gestionnaire de versions) de manière visuelle, interactive et efficace, |  ] => suggestions : [']']

196 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). |     => suggestions : ['']
196 Mot inconnu : evil-mode =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | evil-mode
196 Mot inconnu : vim =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | vim
196 Il manque un trait d’union. =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | par dessus => suggestions : ['par-dessus']
196 Mot inconnu : Emacs =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | emacs
196 Mot inconnu : vim =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | vim
196 Guillemets typographiques ouvrants. =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | '' => suggestions : ['«\xa0', '“']
196 Mot inconnu : dd =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | dd
196 Guillemets typographiques fermants. =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | '' => suggestions : ['\xa0»', '”']
196 Mot inconnu : Emacs =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | emacs
196 Guillemets typographiques ouvrants. =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | '' => suggestions : ['«\xa0', '“']
196 Guillemets typographiques fermants. =>    * [[https://wikemacs.org/wiki/Evil | evil-mode]] est une émulation de vim par dessus Emacs. Eh oui, car certains trouvent l'édition modale plus pratique ! (En effet, dans vim on peut supprimer une ligne entière avec ''dd'' lorsqu'avec Emacs de base c'est ''C-a C-k C-k''). | '' => suggestions : ['\xa0»', '”']

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', |     => suggestions : ['']
197 Pas d’espace après ce signe. =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | [  => suggestions : ['[']
197 Mot inconnu : move-text =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | move-text
197 Pas d’espace avant ce signe. =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', |  ] => suggestions : [']']
197 Guillemets typographiques ouvrants. =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | '' => suggestions : ['«\xa0', '“']
197 Mot inconnu : M-up =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | m-up
197 Guillemets typographiques fermants. =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | '' => suggestions : ['\xa0»', '”']
197 Guillemets typographiques ouvrants. =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | '' => suggestions : ['«\xa0', '“']
197 Mot inconnu : M-down =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | m-down
197 Guillemets typographiques fermants. =>    * [[ http://melpa.org/#/move-text | move-text ]] pour déplacer la ligne ou la région sélectionnée avec ''M-up'' et ''M-down'', | '' => suggestions : ['\xa0»', '”']

198 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''elscreen'' pour avoir des onglets (mais pas un unique par fenêtre, cela ne vaut pas le coup lorsqu'on a des dizaines de buffers ouverts), |     => suggestions : ['']
198 Guillemets typographiques ouvrants. =>    * ''elscreen'' pour avoir des onglets (mais pas un unique par fenêtre, cela ne vaut pas le coup lorsqu'on a des dizaines de buffers ouverts), | '' => suggestions : ['«\xa0', '“']
198 Mot inconnu : elscreen =>    * ''elscreen'' pour avoir des onglets (mais pas un unique par fenêtre, cela ne vaut pas le coup lorsqu'on a des dizaines de buffers ouverts), | elscreen
198 Guillemets typographiques fermants. =>    * ''elscreen'' pour avoir des onglets (mais pas un unique par fenêtre, cela ne vaut pas le coup lorsqu'on a des dizaines de buffers ouverts), | '' => suggestions : ['\xa0»', '”']
198 Mot inconnu : buffers =>    * ''elscreen'' pour avoir des onglets (mais pas un unique par fenêtre, cela ne vaut pas le coup lorsqu'on a des dizaines de buffers ouverts), | buffers

199 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), |     => suggestions : ['']
199 Mot inconnu : Helm =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | helm
199 Mot inconnu : helm-swoop =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | helm-swoop
199 Guillemets typographiques ouvrants. =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | '' => suggestions : ['«\xa0', '“']
199 Mot inconnu : grep =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | grep
199 Guillemets typographiques fermants. =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | '' => suggestions : ['\xa0»', '”']
199 Mot inconnu : buffer =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | buffer
199 Mot inconnu : modifée =>    * Helm pour une interface interactive à tout (c'est un puits sans fond), dans lequel on trouve helm-swoop qui est une sorte de ''grep'' sur le buffer courant mais interactif (on voit la sélection modifée selon notre frappe), | modifée

200 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''mpg123'' ou emms pour un lecteur de musique et vidéo, |     => suggestions : ['']
200 Guillemets typographiques ouvrants. =>    * ''mpg123'' ou emms pour un lecteur de musique et vidéo, | '' => suggestions : ['«\xa0', '“']
200 Mot inconnu : mpg123 =>    * ''mpg123'' ou emms pour un lecteur de musique et vidéo, | mpg123
200 Guillemets typographiques fermants. =>    * ''mpg123'' ou emms pour un lecteur de musique et vidéo, | '' => suggestions : ['\xa0»', '”']
200 Mot inconnu : emms =>    * ''mpg123'' ou emms pour un lecteur de musique et vidéo, | emms

201 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[https://www.djcbsoftware.nl/code/mu/mu4e.html | mu4e ]] pour lire ses mails,  |     => suggestions : ['']
201 Mot inconnu : mu4e =>    * [[https://www.djcbsoftware.nl/code/mu/mu4e.html | mu4e ]] pour lire ses mails,  | mu4e
201 Pas d’espace avant ce signe. =>    * [[https://www.djcbsoftware.nl/code/mu/mu4e.html | mu4e ]] pour lire ses mails,  |  ] => suggestions : [']']
201 Espace(s) en fin de ligne à supprimer. =>    * [[https://www.djcbsoftware.nl/code/mu/mu4e.html | mu4e ]] pour lire ses mails,  |   => suggestions : ['']

202 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[https://melpa.org/#/flycheck-grammalecte|flycheck-grammalecte]] ajoute le correcteur grammatical dédié à la langue française Grammalecte, |     => suggestions : ['']

203 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * des extensions pour org-mode, pour le navigateur de fichiers Dired, pour des moteurs de blogs, pour skype, des jeux, etc. On peut tout programmer en emacs-lisp ! |     => suggestions : ['']
203 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>    * des extensions pour org-mode, pour le navigateur de fichiers Dired, pour des moteurs de blogs, pour skype, des jeux, etc. On peut tout programmer en emacs-lisp ! | des => suggestions : ['Des']
203 Mot inconnu : Dired =>    * des extensions pour org-mode, pour le navigateur de fichiers Dired, pour des moteurs de blogs, pour skype, des jeux, etc. On peut tout programmer en emacs-lisp ! | dired
203 Mot inconnu : skype =>    * des extensions pour org-mode, pour le navigateur de fichiers Dired, pour des moteurs de blogs, pour skype, des jeux, etc. On peut tout programmer en emacs-lisp ! | skype
203 Mot inconnu : emacs-lisp =>    * des extensions pour org-mode, pour le navigateur de fichiers Dired, pour des moteurs de blogs, pour skype, des jeux, etc. On peut tout programmer en emacs-lisp ! | emacs-lisp

206 Mot inconnu : Emacs => On admettra que, de base, Emacs peut sembler rêche, et que cela demande un peu de travail pour installer les extensions dont on a besoin pour travailler. Alors si vous débutez, vous devriez au moins essayer une configuration complète que d'autres ont faite pour vous (on dit des [[https://wikemacs.org/wiki/Starter_Kits | "starter kits"]]).  | emacs
206 Guillemets typographiques ouvrants. => On admettra que, de base, Emacs peut sembler rêche, et que cela demande un peu de travail pour installer les extensions dont on a besoin pour travailler. Alors si vous débutez, vous devriez au moins essayer une configuration complète que d'autres ont faite pour vous (on dit des [[https://wikemacs.org/wiki/Starter_Kits | "starter kits"]]).  | " => suggestions : ['«\xa0', '“']
206 Guillemets typographiques fermants. => On admettra que, de base, Emacs peut sembler rêche, et que cela demande un peu de travail pour installer les extensions dont on a besoin pour travailler. Alors si vous débutez, vous devriez au moins essayer une configuration complète que d'autres ont faite pour vous (on dit des [[https://wikemacs.org/wiki/Starter_Kits | "starter kits"]]).  | " => suggestions : ['\xa0»', '”']
206 Espace(s) en fin de ligne à supprimer. => On admettra que, de base, Emacs peut sembler rêche, et que cela demande un peu de travail pour installer les extensions dont on a besoin pour travailler. Alors si vous débutez, vous devriez au moins essayer une configuration complète que d'autres ont faite pour vous (on dit des [[https://wikemacs.org/wiki/Starter_Kits | "starter kits"]]).  |   => suggestions : ['']

208 Mot inconnu : emacs-prelude => Une configuration très populaire est [[https://github.com/bbatsov/prelude | emacs-prelude]]. Elle est construite par modules (pour tel language de programmation par exemple) qu'on peut activer et désactiver facilement. Si vous souhaitez construire vous même votre init file, vous pouvez vous en inspirer. | emacs-prelude
208 Mot inconnu : language => Une configuration très populaire est [[https://github.com/bbatsov/prelude | emacs-prelude]]. Elle est construite par modules (pour tel language de programmation par exemple) qu'on peut activer et désactiver facilement. Si vous souhaitez construire vous même votre init file, vous pouvez vous en inspirer. | language
208 Il manque un trait d’union si “même” se rapporte à “vous”. => Une configuration très populaire est [[https://github.com/bbatsov/prelude | emacs-prelude]]. Elle est construite par modules (pour tel language de programmation par exemple) qu'on peut activer et désactiver facilement. Si vous souhaitez construire vous même votre init file, vous pouvez vous en inspirer. | vous même => suggestions : ['vous-même']
208 Mot inconnu : init => Une configuration très populaire est [[https://github.com/bbatsov/prelude | emacs-prelude]]. Elle est construite par modules (pour tel language de programmation par exemple) qu'on peut activer et désactiver facilement. Si vous souhaitez construire vous même votre init file, vous pouvez vous en inspirer. | init

212 Mot inconnu : Emacs => Org-mode est un mode majeur d'Emacs extrêmement populaire. C'est souvent une des raisons qui fait basculer des gens vers Emacs. Avant de compléter cette documentation, je vous invite à regarder le site: http://orgmode.org | emacs
212 Mot inconnu : Emacs => Org-mode est un mode majeur d'Emacs extrêmement populaire. C'est souvent une des raisons qui fait basculer des gens vers Emacs. Avant de compléter cette documentation, je vous invite à regarder le site: http://orgmode.org | emacs

214 Guillemets fermants. => Il est possible de faire une myriade de choses, mais en fait son utilisation est très simple. Il suffit de créer un fichier avec l'extension ''.org'' (''C-x C-f un-test.org'') et de regarder le menu pour voir comment bouger le contenu, se déplacer, exporter le document en latex, html, txt, markdown ou autre, etc |  '' => suggestions : ['\xa0»', '”']
214 Guillemets typographiques fermants. => Il est possible de faire une myriade de choses, mais en fait son utilisation est très simple. Il suffit de créer un fichier avec l'extension ''.org'' (''C-x C-f un-test.org'') et de regarder le menu pour voir comment bouger le contenu, se déplacer, exporter le document en latex, html, txt, markdown ou autre, etc | '' => suggestions : ['\xa0»', '”']
214 Mot inconnu : html => Il est possible de faire une myriade de choses, mais en fait son utilisation est très simple. Il suffit de créer un fichier avec l'extension ''.org'' (''C-x C-f un-test.org'') et de regarder le menu pour voir comment bouger le contenu, se déplacer, exporter le document en latex, html, txt, markdown ou autre, etc | html
214 Mot inconnu : txt => Il est possible de faire une myriade de choses, mais en fait son utilisation est très simple. Il suffit de créer un fichier avec l'extension ''.org'' (''C-x C-f un-test.org'') et de regarder le menu pour voir comment bouger le contenu, se déplacer, exporter le document en latex, html, txt, markdown ou autre, etc | txt
214 Mot inconnu : markdown => Il est possible de faire une myriade de choses, mais en fait son utilisation est très simple. Il suffit de créer un fichier avec l'extension ''.org'' (''C-x C-f un-test.org'') et de regarder le menu pour voir comment bouger le contenu, se déplacer, exporter le document en latex, html, txt, markdown ou autre, etc | markdown

217 Mot inconnu : LaTeX => ===== Écrire en LaTeX avec Emacs : exemple de configuration ===== | latex
217 Mot inconnu : Emacs => ===== Écrire en LaTeX avec Emacs : exemple de configuration ===== | emacs

219 Mot inconnu : Emacs => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : | emacs
219 Avec une unité de mesure, mettez un espace insécable. => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : | 100% => suggestions : ['100\xa0%']
219 Guillemets fermants. => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : |  " => suggestions : ['\xa0»', '”']
219 Mot inconnu : emacs => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : | emacs
219 Guillemets typographiques fermants. => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : | " => suggestions : ['\xa0»', '”']
219 Mot inconnu : init => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : | init
219 Mot inconnu : el => Emacs est 100% configurable. Pour l'adapter à vos besoins, vous devrez créer un répertoire ".emacs.d" dans votre home si cela n'est pas déjà fait, et créer un fichier init.el dans ce répertoire : | el

221 Mot inconnu : gedit => gedit ~/.emacs.d/init.el</code> | gedit
221 Mot inconnu : emacs => gedit ~/.emacs.d/init.el</code> | emacs
221 Mot inconnu : init => gedit ~/.emacs.d/init.el</code> | init
221 Mot inconnu : el => gedit ~/.emacs.d/init.el</code> | el

222 Mot inconnu : init => Notez que le fichier init.el sert de fichier de configuration qui s'ouvre à chaque démarrage d'emacs. Pour plus de détails sur le sujet, référez-vous à [[https://www.emacswiki.org/emacs/InitFile|cette page]]. | init
222 Mot inconnu : el => Notez que le fichier init.el sert de fichier de configuration qui s'ouvre à chaque démarrage d'emacs. Pour plus de détails sur le sujet, référez-vous à [[https://www.emacswiki.org/emacs/InitFile|cette page]]. | el
222 Mot inconnu : emacs => Notez que le fichier init.el sert de fichier de configuration qui s'ouvre à chaque démarrage d'emacs. Pour plus de détails sur le sujet, référez-vous à [[https://www.emacswiki.org/emacs/InitFile|cette page]]. | emacs

226 Mot inconnu : AucTeX => Voici ici notre partie pour AucTeX : | auctex

228 Mot inconnu : AucTex-mode => ==AucTex-mode :== | auctex-mode

230 Mot inconnu : AucTeX => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. | auctex
230 Mot inconnu : quickstart-guide => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. | quickstart-guide
230 Pas d’espace avant ce signe. => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. |  ) => suggestions : [')']
230 Mot inconnu : LaTeX => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. | latex
230 Mot inconnu : LaTeX => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. | latex
230 Mot inconnu : Emacs => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. | emacs
230 Mot inconnu : Auctex => Le mode AucTeX est documenté en anglais principalement (voir le [[http://www.xemacs.org/Documentation/packages/html/auctex_4.html | quickstart-guide]] ). Ce mode permet bien sûr l'édition de fichiers Latex, avec des raccourcis, des listes de commandes connues, par exemple, ainsi qu'en facilitant l'accès à la documentation des paquets. Mais c'est aussi un environnement complet pour développer des codes Latex : il permet de compiler, de naviguer dans la sortie LaTeX, de déboguer son code ou même LaTeX. Les menus permettent de configurer les commandes basiques : indentation, source de noms de commandes connues, etc. Bien entendu, dans la même philosophie qu'Emacs, Auctex est totalement configurable (pour ceux qui ont le temps), et le système de menus permet de personnaliser de nombreux aspects. | auctex
232 Mot inconnu : auctex => Tout d'abord, la documentation d'un paquet est rendue accessible grâce à la commande ** C-c ? **. Comme toutes les commandes auctex qui offrent un choix (ici le nom du paquet), on pourra écrire le début du nom recherché et compléter avec **Tabulation**. Ainsi, ** C-c ? Tabulation** affiche la liste de tous les paquets connus d'AucTeX. | auctex
232 Mot inconnu : AucTeX => Tout d'abord, la documentation d'un paquet est rendue accessible grâce à la commande ** C-c ? **. Comme toutes les commandes auctex qui offrent un choix (ici le nom du paquet), on pourra écrire le début du nom recherché et compléter avec **Tabulation**. Ainsi, ** C-c ? Tabulation** affiche la liste de tous les paquets connus d'AucTeX. | auctex

234 Mot inconnu : Ret => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | ret
234 Mot inconnu : AucTex => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | auctex
234 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. |  -  => suggestions : [' – ', ' — ', ' − ']
234 Mot inconnu : itemize => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | itemize
234 Mot inconnu : tabular => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | tabular
234 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. |  -  => suggestions : [' – ', ' — ', ' − ']
234 Mot inconnu : tab => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | tab
234 Guillemets typographiques fermants. => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | " => suggestions : ['\xa0»', '”']
234 Mot inconnu : M-Ret => Au niveau de l'édition, **C-c C-s** permet d'introduire une (sous)-section, un paragraphe, etc. **C-c Ret Tabulation** renvoie toutes les commandes connues d'AucTex (une fois le mode installé). **C-c C-e** ouvre un environnement - comme itemize, tabular, etc. - dont il faut donner le nom (compléter à l'aide de tab). On peut alors créer des lignes "\item" avec ** M-Ret**. | m-ret

236 Mot inconnu : AucTeX => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). | auctex
236 Mot inconnu : BibTeX => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). | bibtex
236 Une de ces ponctuations est superflue. => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). | , . => suggestions : [',', '.']
236 Typographie : points de suspension. Utilisez le caractère dédié. => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). | ... => suggestions : ['…']
236 Mot inconnu : View => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). | view
236 Mot inconnu : All => L'interface de compilation sous AucTeX permet de compiler et gérer les fichiers de sortie, les messages, etc. La compilation peut se faire de différentes manières : document intégral, partie du document, etc. Une fois une commande de compilation lancée (**C-c C-c** pour tout le document, **C-c C-r** pour la région sélectionnée, etc.), on peut choisir de compiler avec Latex, BibTeX, ... ou encore View (pour visualiser), Clean (pour nettoyer les fichiers intermédiaires), Clean All (pour tout nettoyer, y compris les documents produits). La sortie de compilation est affichée avec **C-c C-l**, et on va à la prochaine erreur avec ** C-c C-`**. On pourra définir ce qui sera considéré comme erreur (notamment parmi les bad-boxes et warnings). | all

241 Mot inconnu : Emacs => ==== Avoir des thèmes pour Emacs ==== | emacs

243 Mot inconnu : Emacs => Vous pouvez changer le thème d'Emacs, c'est-à-dire toutes les couleurs qui sont affichées. | emacs
247 Mot inconnu : Gutsy => Pour Ubuntu « Gutsy Gibbon » 7.10 il suffit de [[apt://emacs-goodies-el|cliquer ici]]. | gutsy
247 Mot inconnu : emacs-goodies-el => Pour Ubuntu « Gutsy Gibbon » 7.10 il suffit de [[apt://emacs-goodies-el|cliquer ici]]. | emacs-goodies-el

249 Mot inconnu : Emacs => Relancez Emacs s'il était déjà lancé. | emacs

251 Mot inconnu : Emacs => Sous Emacs, tapez la commande ''M-x color-theme-select'' (M-x signifie sur un PC de laisser la touche ALT appuyée et d'appuyer sur la touche x. Tapez ensuite la commande color-theme-select, vous pouvez utiliser la touche de tabulation TAB pour compléter comme dans un terminal). | emacs
251 Guillemets typographiques ouvrants. => Sous Emacs, tapez la commande ''M-x color-theme-select'' (M-x signifie sur un PC de laisser la touche ALT appuyée et d'appuyer sur la touche x. Tapez ensuite la commande color-theme-select, vous pouvez utiliser la touche de tabulation TAB pour compléter comme dans un terminal). | '' => suggestions : ['«\xa0', '“']
251 Mot inconnu : color-theme-select => Sous Emacs, tapez la commande ''M-x color-theme-select'' (M-x signifie sur un PC de laisser la touche ALT appuyée et d'appuyer sur la touche x. Tapez ensuite la commande color-theme-select, vous pouvez utiliser la touche de tabulation TAB pour compléter comme dans un terminal). | color-theme-select
251 Guillemets typographiques fermants. => Sous Emacs, tapez la commande ''M-x color-theme-select'' (M-x signifie sur un PC de laisser la touche ALT appuyée et d'appuyer sur la touche x. Tapez ensuite la commande color-theme-select, vous pouvez utiliser la touche de tabulation TAB pour compléter comme dans un terminal). | '' => suggestions : ['\xa0»', '”']
251 Mot inconnu : color-theme-select => Sous Emacs, tapez la commande ''M-x color-theme-select'' (M-x signifie sur un PC de laisser la touche ALT appuyée et d'appuyer sur la touche x. Tapez ensuite la commande color-theme-select, vous pouvez utiliser la touche de tabulation TAB pour compléter comme dans un terminal). | color-theme-select
251 Mot inconnu : TAB => Sous Emacs, tapez la commande ''M-x color-theme-select'' (M-x signifie sur un PC de laisser la touche ALT appuyée et d'appuyer sur la touche x. Tapez ensuite la commande color-theme-select, vous pouvez utiliser la touche de tabulation TAB pour compléter comme dans un terminal). | tab

253 Mot inconnu : email => Vous avez alors toute la liste des thèmes. Pour voir ce que chacun donne, placez le curseur clignotant sur une des lignes et tapez ENTRÉE. Attention à ne pas cliquer sur une adresse email car cela vous ouvrirait l'éditeur d'email intégré à Emacs (C-x k ENTRÉE pour quitter au cas où ça serait déjà fait :-)). | email
253 Mot inconnu : email => Vous avez alors toute la liste des thèmes. Pour voir ce que chacun donne, placez le curseur clignotant sur une des lignes et tapez ENTRÉE. Attention à ne pas cliquer sur une adresse email car cela vous ouvrirait l'éditeur d'email intégré à Emacs (C-x k ENTRÉE pour quitter au cas où ça serait déjà fait :-)). | email
253 Mot inconnu : Emacs => Vous avez alors toute la liste des thèmes. Pour voir ce que chacun donne, placez le curseur clignotant sur une des lignes et tapez ENTRÉE. Attention à ne pas cliquer sur une adresse email car cela vous ouvrirait l'éditeur d'email intégré à Emacs (C-x k ENTRÉE pour quitter au cas où ça serait déjà fait :-)). | emacs

255 Mot inconnu : Emacs => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | emacs
255 Mot inconnu : emacs => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | emacs
255 Guillemets typographiques fermants. => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | '' => suggestions : ['\xa0»', '”']
255 Guillemets typographiques ouvrants. => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | '' => suggestions : ['«\xa0', '“']
255 Mot inconnu : color-theme-gnome2 => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | color-theme-gnome2
255 Guillemets typographiques fermants. => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | '' => suggestions : ['\xa0»', '”']
255 Guillemets typographiques ouvrants. => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | ' => suggestions : ['“', '‘', '‹']
255 Apostrophe incorrecte. => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | d'  => suggestions : ['d’']
255 Guillemets typographiques fermants. => Une fois que vous avez choisi votre thème Emacs préféré, ajoutez les lignes suivantes à la fin de votre fichier ''~/.emacs'' en remplaçant ''color-theme-gnome2'' par le thème que vous avez choisi. Le nom du thème à taper ici est affiché sur la deuxième ligne de la page qui s'affiche quand vous tapez 'd' à la place de taper ENTRÉE sur le thème. | ' => suggestions : ['”', '’', '›']

262 Mot inconnu : emacs22-gtk => <note tip>Si vous rencontrez une erreur avec emacs22-gtk au lancement, le fichier ''~/.emacs'' doit être configuré comme ceci :  | emacs22-gtk
262 Mot inconnu : emacs => <note tip>Si vous rencontrez une erreur avec emacs22-gtk au lancement, le fichier ''~/.emacs'' doit être configuré comme ceci :  | emacs
262 Guillemets typographiques fermants. => <note tip>Si vous rencontrez une erreur avec emacs22-gtk au lancement, le fichier ''~/.emacs'' doit être configuré comme ceci :  | '' => suggestions : ['\xa0»', '”']
262 Espace(s) en fin de ligne à supprimer. => <note tip>Si vous rencontrez une erreur avec emacs22-gtk au lancement, le fichier ''~/.emacs'' doit être configuré comme ceci :  |   => suggestions : ['']
268 Espace(s) en fin de ligne à supprimer. => ou comme ceci :  |   => suggestions : ['']

278 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) | copier/coller => suggestions : ['Copier-coller', 'Copié-collé', 'Copiée-collée', 'Copiés-collés', 'Copiées-collées']
278 Mot inconnu : Emacs => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) | emacs
278 Avant « etc. », il faut mettre une virgule. => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) |  etc. => suggestions : [', etc.']
278 Typographie : un ou trois points ? => Copier/Coller ne marche pas bien sous Ubuntu **entre** Emacs et les autres logiciels (Firefox etc..) | .. => suggestions : ['…', '.']

279 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. => (Copier/coller du type : surligner le texte=copier / bouton du milieu de la souris =coller. )  | copier/coller => suggestions : ['Copier-coller', 'Copié-collé', 'Copiée-collée', 'Copiés-collés', 'Copiées-collées']
279 Pas d’espace avant ce signe. => (Copier/coller du type : surligner le texte=copier / bouton du milieu de la souris =coller. )  |  ) => suggestions : [')']
279 Espace(s) en fin de ligne à supprimer. => (Copier/coller du type : surligner le texte=copier / bouton du milieu de la souris =coller. )  |   => suggestions : ['']

280 Mot inconnu : Metacity => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | metacity
280 Guillemets typographiques ouvrants. => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | ' => suggestions : ['“', '‘', '‹']
280 Mot inconnu : Primary => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | primary
280 Mot inconnu : Selection => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | selection
280 Guillemets typographiques fermants. => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | ' => suggestions : ['”', '’', '›']
280 Mot inconnu : clipboard => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | clipboard
280 Mot inconnu : middle => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | middle
280 Mot inconnu : click => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | click
280 Mot inconnu : parcellite => Il semblerait que Metacity (serveur graphique par défaut d'Ubuntu) n'implémente pas la 'Primary Selection' (~clipboard) ou bien que le middle click soit utilisé pour autre chose. Une solution est d'installer //parcellite//. (à débattre) | parcellite

281 Avec une unité de mesure, mettez un espace insécable. => ==== Utilisation à 100% du CPU ==== | 100% => suggestions : ['100\xa0%']

283 Mot inconnu : snapshot => Si vous utilisez la version '''snapshot''' d'Emacs et que votre CPU est utilisé à 100%, voici une solution : | snapshot
283 Mot inconnu : Emacs => Si vous utilisez la version '''snapshot''' d'Emacs et que votre CPU est utilisé à 100%, voici une solution : | emacs
283 Avec une unité de mesure, mettez un espace insécable. => Si vous utilisez la version '''snapshot''' d'Emacs et que votre CPU est utilisé à 100%, voici une solution : | 100% => suggestions : ['100\xa0%']

297 Une de ces ponctuations est superflue. => :!: gardez bien les 3 parenthèses :!: | :! => suggestions : [':', '!']
297 Une de ces ponctuations est superflue. => :!: gardez bien les 3 parenthèses :!: | :! => suggestions : [':', '!']

299 Mot inconnu : Emacs => ensuite lancez Emacs en tant que root et tapez dans le mini-buffer | emacs
299 Mot inconnu : root => ensuite lancez Emacs en tant que root et tapez dans le mini-buffer | root
299 Mot inconnu : mini-buffer => ensuite lancez Emacs en tant que root et tapez dans le mini-buffer | mini-buffer

303 Mot inconnu : lisp => pour compiler le fichier lisp. | lisp

305 Mot inconnu : Emacs => Maintenant, il faut copier le fichier compilé dans le bon dossier pour qu'Emacs l'utilise : | emacs

313 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://fr.wikibooks.org/wiki/Emacs|Le wikilivre sur emacs]], un projet de manuel collaboratif en Français sur Emacs. |    => suggestions : ['']
313 Mot inconnu : wikilivre =>   * [[https://fr.wikibooks.org/wiki/Emacs|Le wikilivre sur emacs]], un projet de manuel collaboratif en Français sur Emacs. | wikilivre
313 Mot inconnu : emacs =>   * [[https://fr.wikibooks.org/wiki/Emacs|Le wikilivre sur emacs]], un projet de manuel collaboratif en Français sur Emacs. | emacs
313 Si vous parlez de la langue, pas de majuscule. =>   * [[https://fr.wikibooks.org/wiki/Emacs|Le wikilivre sur emacs]], un projet de manuel collaboratif en Français sur Emacs. | français => suggestions : ['français']
313 Mot inconnu : Emacs =>   * [[https://fr.wikibooks.org/wiki/Emacs|Le wikilivre sur emacs]], un projet de manuel collaboratif en Français sur Emacs. | emacs

314 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://www.tuteurs.ens.fr/unix/editeurs/emacs.html|Tutoriel Emacs sur le site des informaticiens de l'ENS]] |    => suggestions : ['']
314 Mot inconnu : Emacs =>   * [[https://www.tuteurs.ens.fr/unix/editeurs/emacs.html|Tutoriel Emacs sur le site des informaticiens de l'ENS]] | emacs
314 Mot inconnu : ENS =>   * [[https://www.tuteurs.ens.fr/unix/editeurs/emacs.html|Tutoriel Emacs sur le site des informaticiens de l'ENS]] | ens

315 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.traduc.org/docs/HOWTO/vf/Emacs-Beginner-HOWTO.html|Débuter sous Emacs]] |    => suggestions : ['']
315 Mot inconnu : Emacs =>   * [[http://www.traduc.org/docs/HOWTO/vf/Emacs-Beginner-HOWTO.html|Débuter sous Emacs]] | emacs

316 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.gnu.org/software/emacs/|(en) Le site officiel]] |    => suggestions : ['']

317 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.emacswiki.org/cgi-bin/emacs-en|Le vieux wiki (multilingue)]] |    => suggestions : ['']

318 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://wikemacs.org/index.php/Main_Page | Le nouveau wiki (en anglais)]] |    => suggestions : ['']

319 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://peadrop.com/blog/2007/01/06/pretty-emacs/|(en) Procédure d'installation]] |    => suggestions : ['']

320 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] |    => suggestions : ['']
320 Mot inconnu : emacs =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] | emacs
320 Mot inconnu : emacs =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] | emacs
320 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] |  . => suggestions : ['. ', '.']
320 Mot inconnu : emacs =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] | emacs
320 Mot inconnu : init =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] | init
320 Mot inconnu : el =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] | el
320 Mot inconnu : jussieu =>   * [[http://www.math.jussieu.fr/~han/emacs/.emacs|Exemple de .emacs ou init.el sur le site de jussieu]] | jussieu

321 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://groups.google.fr/group/fr.comp.text.tex/browse_thread/thread/c3ad96f561ab0957/9fd0c3bb812fde2e?lnk=gst&q=emacs+template#9fd0c3bb812fde2e|Discussion utile sur google group à propos d'une utilisation d'Emacs et de LaTeX]] |    => suggestions : ['']
321 Mot inconnu : group =>   * [[http://groups.google.fr/group/fr.comp.text.tex/browse_thread/thread/c3ad96f561ab0957/9fd0c3bb812fde2e?lnk=gst&q=emacs+template#9fd0c3bb812fde2e|Discussion utile sur google group à propos d'une utilisation d'Emacs et de LaTeX]] | group
321 Mot inconnu : Emacs =>   * [[http://groups.google.fr/group/fr.comp.text.tex/browse_thread/thread/c3ad96f561ab0957/9fd0c3bb812fde2e?lnk=gst&q=emacs+template#9fd0c3bb812fde2e|Discussion utile sur google group à propos d'une utilisation d'Emacs et de LaTeX]] | emacs
321 Mot inconnu : LaTeX =>   * [[http://groups.google.fr/group/fr.comp.text.tex/browse_thread/thread/c3ad96f561ab0957/9fd0c3bb812fde2e?lnk=gst&q=emacs+template#9fd0c3bb812fde2e|Discussion utile sur google group à propos d'une utilisation d'Emacs et de LaTeX]] | latex

322 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://www.emacswiki.org/emacs/AUCTeX|Sur AucTeX]] |    => suggestions : ['']
322 Mot inconnu : AucTeX =>   * [[https://www.emacswiki.org/emacs/AUCTeX|Sur AucTeX]] | auctex

323 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[https://computerz.solutions/emacs-org-mode/|Installation & utilisation simple d'Emacs]] - Plusieurs tutoriels sont disponibles en fin de page. |    => suggestions : ['']
323 Mot inconnu : Emacs =>   * **(fr)** [[https://computerz.solutions/emacs-org-mode/|Installation & utilisation simple d'Emacs]] - Plusieurs tutoriels sont disponibles en fin de page. | emacs
323 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   * **(fr)** [[https://computerz.solutions/emacs-org-mode/|Installation & utilisation simple d'Emacs]] - Plusieurs tutoriels sont disponibles en fin de page. |  -  => suggestions : [' – ', ' — ', ' − ']
