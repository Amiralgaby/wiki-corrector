
7 Mot inconnu : GCC [[165:168]] => Un compilateur permet de traduire un code source (format compréhensible par un humain, type [[#ASCII]]) en code [[#binaire]] (langage machine), pour être exécuté. //GCC// est un compilateur [[#GNU]], qui est utilisé par la plupart des distributions [[#linux]]. <|> gcc

11 Il manque un espace. [[28:39]] => Voir le tutoriel [[tutoriel:compilation|Installer un logiciel ou une bibliothèque par compilation]]. <|> compilation => suggestions : [' compilation']
20 Mot inconnu : compilateur_intel [[78:95]] => Un compilateur C++ optimisé pour les processeurs Intel. Consultez la page : [[compilateur_intel]] <|> compilateur_intel

23 Mot inconnu : nasm [[44:48]] => ==== Installation du compilateur assembleur nasm ==== <|> nasm

27 Mot inconnu : masm [[44:48]] => ==== Installation du compilateur assembleur masm ==== <|> masm
28 Mot inconnu : masm [[28:32]] => Compilateur Microsoft [[apt>masm]] <|> masm
31 Mot inconnu : fasm [[10:14]] =>   * [[apt>fasm]] <|> fasm
32 Mot inconnu : tasm [[10:14]] =>   * [[apt>tasm]] <|> tasm
33 Mot inconnu : yasm [[10:14]] =>   * [[apt>yasm]] <|> yasm
37 Mot inconnu : Radare [[60:66]] => [[http://bokken.re|Bokken]],un framework en python basé sur Radare sous licence libre\\ <|> radare

38 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[0:6]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> permet => suggestions : ['Permet']
38 Mot inconnu : PE [[76:78]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> pe
38 Mot inconnu : Elf [[80:83]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> elf
38 Mot inconnu : mach0 [[87:92]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> mach0
38 Mot inconnu : ARM [[115:118]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> arm
38 Mot inconnu : i386 [[120:124]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> i386
38 Mot inconnu : x86-64 [[128:134]] => permet de faire de l'analyse de binaire. Il supporte les fichiers au format PE, Elf et mach0, et les architectures ARM, i386 et x86-64 <|> x86-64

41 Mot inconnu : gcj [[42:45]] => ==== Installation du compilateur Java GNU gcj ==== <|> gcj

49 Mot inconnu : OpenJDK [[38:45]] => ==== Installation du compilateur Java OpenJDK ==== <|> openjdk
51 Mot inconnu : openjdk-7-jdk [[28:41]] => Installer le paquet **[[apt>openjdk-7-jdk]]**. <|> openjdk-7-jdk

53 Mot inconnu : ex-Sun [[48:54]] => ==== Installation du compilateur Java d'Oracle (ex-Sun) ==== <|> ex-sun

65 Mot inconnu : fpc [[2:5]] => [[fpc]] - Compilateur Free Pascal, utilisé par l'IDE [[Lazarus]]. <|> fpc
65 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[7:10]] => [[fpc]] - Compilateur Free Pascal, utilisé par l'IDE [[Lazarus]]. <|>  -  => suggestions : [' – ', ' — ', ' − ']
65 Mot inconnu : Lazarus [[55:62]] => [[fpc]] - Compilateur Free Pascal, utilisé par l'IDE [[Lazarus]]. <|> lazarus
71 Mot inconnu : ocaml [[12:17]] =>   * **[[apt>ocaml]]** et **ocamlopt** - Compilateur bytecode et code natif. <|> ocaml
71 Mot inconnu : ocamlopt [[27:35]] =>   * **[[apt>ocaml]]** et **ocamlopt** - Compilateur bytecode et code natif. <|> ocamlopt
71 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[37:40]] =>   * **[[apt>ocaml]]** et **ocamlopt** - Compilateur bytecode et code natif. <|>  -  => suggestions : [' – ', ' — ', ' − ']
71 Mot inconnu : bytecode [[52:60]] =>   * **[[apt>ocaml]]** et **ocamlopt** - Compilateur bytecode et code natif. <|> bytecode
72 Mot inconnu : js_of_ocaml [[6:17]] =>   * **js_of_ocaml** - Compilateur vers JavaScript. <|> js_of_ocaml
72 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[19:22]] =>   * **js_of_ocaml** - Compilateur vers JavaScript. <|>  -  => suggestions : [' – ', ' — ', ' − ']

73 Mot inconnu : autotools [[34:43]] => ===== Installation des outils GNU autotools ===== <|> autotools
