
5 Mot inconnu : suPHP [[7:12]] => ====== suPHP ====== <|> suphp

11 Mot inconnu : suPHP [[19:24]] => Plus concrètement, suPHP permet de limiter l'action des scripts php lancés sur votre serveur en les exécutant avec les droits de leur propriétaire, au lieu des droits d'Apache. Ainsi un site ne peut pas avoir d'action sur les fichiers d'un autre site. Cela est particulièrement utile dans le cas d'installations d'outils vulnérables comme des forums ou des CMS. <|> suphp

13 Mot inconnu : hébérgement [[121:132]] => C'est également utile pour la gestion d'un grand nombre de sites différents si vous êtes l'administrateur d'un serveur d'hébérgement mutualisé. suPHP permet de lancer les scripts avec les droits du propriétaire des fichiers, même si celui-ci n'existe pas réellement. C'est-à-dire s'il ne s'agit pas d'un utilisateur système mais d'un utilisateur virtuel, avec un simple UID numérique par exemple. Cette solution peut être combinée avec un serveur ftp administré par une base de données. <|> hébérgement
13 Mot inconnu : suPHP [[144:149]] => C'est également utile pour la gestion d'un grand nombre de sites différents si vous êtes l'administrateur d'un serveur d'hébérgement mutualisé. suPHP permet de lancer les scripts avec les droits du propriétaire des fichiers, même si celui-ci n'existe pas réellement. C'est-à-dire s'il ne s'agit pas d'un utilisateur système mais d'un utilisateur virtuel, avec un simple UID numérique par exemple. Cette solution peut être combinée avec un serveur ftp administré par une base de données. <|> suphp
13 Mot inconnu : UID [[370:373]] => C'est également utile pour la gestion d'un grand nombre de sites différents si vous êtes l'administrateur d'un serveur d'hébérgement mutualisé. suPHP permet de lancer les scripts avec les droits du propriétaire des fichiers, même si celui-ci n'existe pas réellement. C'est-à-dire s'il ne s'agit pas d'un utilisateur système mais d'un utilisateur virtuel, avec un simple UID numérique par exemple. Cette solution peut être combinée avec un serveur ftp administré par une base de données. <|> uid

15 Mot inconnu : suPHP [[6:11]] => Enfin suPHP permet également de faire cohabiter plusieurs versions de php si vous souhaitez par exemple pouvoir exécuter php4 et php5 sur le même serveur facilement. <|> suphp
15 Mot inconnu : php4 [[121:125]] => Enfin suPHP permet également de faire cohabiter plusieurs versions de php si vous souhaitez par exemple pouvoir exécuter php4 et php5 sur le même serveur facilement. <|> php4
15 Mot inconnu : php5 [[129:133]] => Enfin suPHP permet également de faire cohabiter plusieurs versions de php si vous souhaitez par exemple pouvoir exécuter php4 et php5 sur le même serveur facilement. <|> php5

20 Mot inconnu : suPHP [[82:87]] => À l'heure où j'écris ces lignes, la version actuelle d'Apache est 2.2 et celle de suPHP et 0.6.3 et ces deux versions sont totalement compatibles l'une avec l'autre. <|> suphp

21 Espace(s) en fin de ligne à supprimer. [[6:7]] => </del>  <|>   => suggestions : ['']

22 Mot inconnu : suPHP [[65:70]] => Ces informations ont été mises à jour pour la version 0.7.1.1 de suPHP (pour Ubuntu à partir de la version 10.04), qui cohabite toujours aussi bien avec apache et qui corrige notamment une incompatibilité avec phpMyAdmin. <|> suphp
22 Mot inconnu : phpMyAdmin [[210:220]] => Ces informations ont été mises à jour pour la version 0.7.1.1 de suPHP (pour Ubuntu à partir de la version 10.04), qui cohabite toujours aussi bien avec apache et qui corrige notamment une incompatibilité avec phpMyAdmin. <|> phpmyadmin

24 Mot inconnu : suPHP [[19:24]] => Il faut savoir que suPHP nécessite d'utiliser php dans sa version CGI. Le mod_php restera néanmoins nécessaire pour exécuter les applications php installées dans le système, c'est-à-dire non lié à un utilisateur, telles que phpMyAdmin, car suPHP interdit par défaut l'exécution de scripts php par un utilisateur avec un uid inférieur à 100 (c'est le cas de l'utilisateur www-data utilisé par apache dans Ubuntu). <|> suphp
24 Mot inconnu : CGI [[66:69]] => Il faut savoir que suPHP nécessite d'utiliser php dans sa version CGI. Le mod_php restera néanmoins nécessaire pour exécuter les applications php installées dans le système, c'est-à-dire non lié à un utilisateur, telles que phpMyAdmin, car suPHP interdit par défaut l'exécution de scripts php par un utilisateur avec un uid inférieur à 100 (c'est le cas de l'utilisateur www-data utilisé par apache dans Ubuntu). <|> cgi
24 Mot inconnu : mod_php [[74:81]] => Il faut savoir que suPHP nécessite d'utiliser php dans sa version CGI. Le mod_php restera néanmoins nécessaire pour exécuter les applications php installées dans le système, c'est-à-dire non lié à un utilisateur, telles que phpMyAdmin, car suPHP interdit par défaut l'exécution de scripts php par un utilisateur avec un uid inférieur à 100 (c'est le cas de l'utilisateur www-data utilisé par apache dans Ubuntu). <|> mod_php
24 Mot inconnu : phpMyAdmin [[224:234]] => Il faut savoir que suPHP nécessite d'utiliser php dans sa version CGI. Le mod_php restera néanmoins nécessaire pour exécuter les applications php installées dans le système, c'est-à-dire non lié à un utilisateur, telles que phpMyAdmin, car suPHP interdit par défaut l'exécution de scripts php par un utilisateur avec un uid inférieur à 100 (c'est le cas de l'utilisateur www-data utilisé par apache dans Ubuntu). <|> phpmyadmin
24 Mot inconnu : suPHP [[240:245]] => Il faut savoir que suPHP nécessite d'utiliser php dans sa version CGI. Le mod_php restera néanmoins nécessaire pour exécuter les applications php installées dans le système, c'est-à-dire non lié à un utilisateur, telles que phpMyAdmin, car suPHP interdit par défaut l'exécution de scripts php par un utilisateur avec un uid inférieur à 100 (c'est le cas de l'utilisateur www-data utilisé par apache dans Ubuntu). <|> suphp
24 Mot inconnu : uid [[320:323]] => Il faut savoir que suPHP nécessite d'utiliser php dans sa version CGI. Le mod_php restera néanmoins nécessaire pour exécuter les applications php installées dans le système, c'est-à-dire non lié à un utilisateur, telles que phpMyAdmin, car suPHP interdit par défaut l'exécution de scripts php par un utilisateur avec un uid inférieur à 100 (c'est le cas de l'utilisateur www-data utilisé par apache dans Ubuntu). <|> uid

29 Mot inconnu : superutilisateur [[58:74]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|> superutilisateur
29 Mot inconnu : sudo [[137:141]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|> sudo
29 Guillemets typographiques ouvrants. [[154:155]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|> " => suggestions : ['«\xa0', '“']
29 Mot inconnu : sudo [[155:159]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|> sudo
29 Il manque un espace à côté du tiret. [[159:161]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|>  - => suggestions : [' – ', ' — ']
29 Guillemets typographiques fermants. [[162:163]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|> " => suggestions : ['\xa0»', '”']
29 Mettez “toute” au pluriel. Sous-entendu : une fois pour toutes les autres fois. [[184:189]] => Pour toutes les commandes qui vont suivre vous devez être superutilisateur root, donc vous pouvez soit faire précéder chaque commande de sudo, soit taper "sudo -s" une bonne fois pour toute. <|> toute => suggestions : ['toutes']

32 Mot inconnu : php5 [[21:25]] => ==== Installation de php5 ==== <|> php5

34 Mot inconnu : php4 [[59:63]] => Il ne sera pas traité ici de la manière de faire cohabiter php4 et php5 du fait que php4 est voué à disparaître progressivement et que tous les efforts devraient être mis en place pour ne plus utiliser que php5. <|> php4
34 Mot inconnu : php5 [[67:71]] => Il ne sera pas traité ici de la manière de faire cohabiter php4 et php5 du fait que php4 est voué à disparaître progressivement et que tous les efforts devraient être mis en place pour ne plus utiliser que php5. <|> php5
34 Mot inconnu : php4 [[84:88]] => Il ne sera pas traité ici de la manière de faire cohabiter php4 et php5 du fait que php4 est voué à disparaître progressivement et que tous les efforts devraient être mis en place pour ne plus utiliser que php5. <|> php4
34 Mot inconnu : php5 [[206:210]] => Il ne sera pas traité ici de la manière de faire cohabiter php4 et php5 du fait que php4 est voué à disparaître progressivement et que tous les efforts devraient être mis en place pour ne plus utiliser que php5. <|> php5
39 Mot inconnu : ini [[47:50]] => N'oubliez pas que php utilise des fichiers php.ini différents, lorsqu'il est utilisé en tant que module apache ou bien en tant que script cgi. Si vous avez effectués des modifications dans /etc/php5/apache2/php.ini, n'oubliez pas de les transposer dans le fichier /etc/php5/cgi/php.ini. <|> ini
39 Mot inconnu : cgi [[138:141]] => N'oubliez pas que php utilise des fichiers php.ini différents, lorsqu'il est utilisé en tant que module apache ou bien en tant que script cgi. Si vous avez effectués des modifications dans /etc/php5/apache2/php.ini, n'oubliez pas de les transposer dans le fichier /etc/php5/cgi/php.ini. <|> cgi
39 Ce verbe devrait être un participe passé au masculin singulier. [[156:165]] => N'oubliez pas que php utilise des fichiers php.ini différents, lorsqu'il est utilisé en tant que module apache ou bien en tant que script cgi. Si vous avez effectués des modifications dans /etc/php5/apache2/php.ini, n'oubliez pas de les transposer dans le fichier /etc/php5/cgi/php.ini. <|> effectués => suggestions : ['effectué']

42 Mot inconnu : suPHP [[21:26]] => ==== Installation de suPHP ==== <|> suphp

48 Mot inconnu : suPHP [[31:36]] => Après l'installation du paquet suPHP, il vous faudra apporter une modification à la configuration de suPHP et/ou mod php, selon votre version d'Ubuntu. En effet, la configuration installée par défaut rend inutilisable les applications php installées dans /usr/share, telles que la version de phpMyAdmin qui se trouve dans les paquets d'Ubuntu. En effet, les scripts php situés dans ces répertoires ne sont plus exécutés et votre navigateur vous proposera donc de les télécharger... <|> suphp
48 Mot inconnu : suPHP [[101:106]] => Après l'installation du paquet suPHP, il vous faudra apporter une modification à la configuration de suPHP et/ou mod php, selon votre version d'Ubuntu. En effet, la configuration installée par défaut rend inutilisable les applications php installées dans /usr/share, telles que la version de phpMyAdmin qui se trouve dans les paquets d'Ubuntu. En effet, les scripts php situés dans ces répertoires ne sont plus exécutés et votre navigateur vous proposera donc de les télécharger... <|> suphp
48 Mot inconnu : phpMyAdmin [[292:302]] => Après l'installation du paquet suPHP, il vous faudra apporter une modification à la configuration de suPHP et/ou mod php, selon votre version d'Ubuntu. En effet, la configuration installée par défaut rend inutilisable les applications php installées dans /usr/share, telles que la version de phpMyAdmin qui se trouve dans les paquets d'Ubuntu. En effet, les scripts php situés dans ces répertoires ne sont plus exécutés et votre navigateur vous proposera donc de les télécharger... <|> phpmyadmin
48 Typographie : points de suspension. Utilisez le caractère dédié. [[478:481]] => Après l'installation du paquet suPHP, il vous faudra apporter une modification à la configuration de suPHP et/ou mod php, selon votre version d'Ubuntu. En effet, la configuration installée par défaut rend inutilisable les applications php installées dans /usr/share, telles que la version de phpMyAdmin qui se trouve dans les paquets d'Ubuntu. En effet, les scripts php situés dans ces répertoires ne sont plus exécutés et votre navigateur vous proposera donc de les télécharger... <|> ... => suggestions : ['…']

56 Accord de nombre erroné : « fichiers » est au pluriel. [[50:52]] => La solution, pour ces versions, consiste à éditer le fichiers /etc/apache2/mods-available/php5.conf et à encadrer tout le contenu du fichier (qui doit normalement commencer par <IfModule mod_php5.c> et finir par </IfModule>) par les lignes : <|> le => suggestions : ['les']
56 Accord de nombre erroné : « fichiers » devrait être au singulier. [[53:61]] => La solution, pour ces versions, consiste à éditer le fichiers /etc/apache2/mods-available/php5.conf et à encadrer tout le contenu du fichier (qui doit normalement commencer par <IfModule mod_php5.c> et finir par </IfModule>) par les lignes : <|> fichiers => suggestions : ['fichier']
56 Il manque un espace. [[95:99]] => La solution, pour ces versions, consiste à éditer le fichiers /etc/apache2/mods-available/php5.conf et à encadrer tout le contenu du fichier (qui doit normalement commencer par <IfModule mod_php5.c> et finir par </IfModule>) par les lignes : <|> conf => suggestions : [' conf']

64 Mot inconnu : sudo [[92:96]] => Ces deux lignes doivent donc être la première et la dernière du fichier. Redémarrer apache (sudo /etc/init.d/apache2 restart), et tout doit alors être en place pour utiliser suPHP. <|> sudo
64 Mot inconnu : restart [[117:124]] => Ces deux lignes doivent donc être la première et la dernière du fichier. Redémarrer apache (sudo /etc/init.d/apache2 restart), et tout doit alors être en place pour utiliser suPHP. <|> restart
64 Mot inconnu : suPHP [[174:179]] => Ces deux lignes doivent donc être la première et la dernière du fichier. Redémarrer apache (sudo /etc/init.d/apache2 restart), et tout doit alors être en place pour utiliser suPHP. <|> suphp

70 Mot inconnu : libapache2-mod-suphp [[79:99]] => Ces modifications sont bien entendu à effectuer après avoir installé le paquet libapache2-mod-suphp. Elles ont pour but de permettre la cohabitation de mod_php, qui sera utilisé pour les scripts dans le dossier /usr/share, et php cgi, qui sera utilisé par suPHP pour les autres scripts. <|> libapache2-mod-suphp
70 Mot inconnu : mod_php [[152:159]] => Ces modifications sont bien entendu à effectuer après avoir installé le paquet libapache2-mod-suphp. Elles ont pour but de permettre la cohabitation de mod_php, qui sera utilisé pour les scripts dans le dossier /usr/share, et php cgi, qui sera utilisé par suPHP pour les autres scripts. <|> mod_php
70 Mot inconnu : cgi [[230:233]] => Ces modifications sont bien entendu à effectuer après avoir installé le paquet libapache2-mod-suphp. Elles ont pour but de permettre la cohabitation de mod_php, qui sera utilisé pour les scripts dans le dossier /usr/share, et php cgi, qui sera utilisé par suPHP pour les autres scripts. <|> cgi
70 Mot inconnu : suPHP [[256:261]] => Ces modifications sont bien entendu à effectuer après avoir installé le paquet libapache2-mod-suphp. Elles ont pour but de permettre la cohabitation de mod_php, qui sera utilisé pour les scripts dans le dossier /usr/share, et php cgi, qui sera utilisé par suPHP pour les autres scripts. <|> suphp

84 Il manque un espace. [[39:43]] => Dans /etc/apache2/mods-available/suphp.conf, remplacez : <|> conf => suggestions : [' conf']

98 Typographie : points de suspension. Utilisez le caractère dédié. [[100:103]] => Dans le même fichier, ajoutez les lignes suivantes à l'intérieur de la balise <IfModule mod_suphp.c>...</IfModule> (juste avant la ligne </IfModule>, par exemple) : <|> ... => suggestions : ['…']

108 Il manque un espace. [[56:60]] => Enfin, dans le fichier /etc/apache2/mods-available/php5.conf, encadrez tout le contenu du fichier (qui doit normalement commencer par <IfModule mod_php5.c> et finit par </IfModule>) par les lignes : <|> conf => suggestions : [' conf']

118 Mot inconnu : sudo [[19:23]] => Redémarrer apache (sudo /etc/init.d/apache2 restart), et tout doit alors être en place pour utiliser suPHP. <|> sudo
118 Mot inconnu : restart [[44:51]] => Redémarrer apache (sudo /etc/init.d/apache2 restart), et tout doit alors être en place pour utiliser suPHP. <|> restart
118 Mot inconnu : suPHP [[101:106]] => Redémarrer apache (sudo /etc/init.d/apache2 restart), et tout doit alors être en place pour utiliser suPHP. <|> suphp

123 Mot inconnu : suPHP [[90:95]] => La méthode donnée ci-après n'inclut pas la correction du problème d'incompatibilité entre suPHP et les applications php installées dans /usr/share, telles que phpMyAdmin lorsqu'il est installé par les paquets. Veuillez vous reporter aux messages et aux pages cités dans la partie précédente, qui concerne l'installation par les paquets. Si vous ne comprenez pas comment appliquer vous-même les modifications dans les fichiers de configuration, préférez l'installation par les paquets et l'application des modifications telles qu'elles sont décrites ci-dessus. <|> suphp
123 Mot inconnu : phpMyAdmin [[159:169]] => La méthode donnée ci-après n'inclut pas la correction du problème d'incompatibilité entre suPHP et les applications php installées dans /usr/share, telles que phpMyAdmin lorsqu'il est installé par les paquets. Veuillez vous reporter aux messages et aux pages cités dans la partie précédente, qui concerne l'installation par les paquets. Si vous ne comprenez pas comment appliquer vous-même les modifications dans les fichiers de configuration, préférez l'installation par les paquets et l'application des modifications telles qu'elles sont décrites ci-dessus. <|> phpmyadmin

126 Mot inconnu : suPHP [[40:45]] => Bien qu'il soit plus simple d'installer suPHP par apt, il est tout à fait possible de le compiler soi-même pour l'adapter à ses besoins. Cette procédure reste néanmoins un peu plus délicate et n'est conseillée que si vous savez ce que vous faites. Veuillez noter que, dans ce cas, la procédure décrite ici est surtout destinée à illustrer les différentes étapes nécessaires et demanderont probablement quelques ajustements de votre part. <|> suphp

128 Mot inconnu : apxs [[18:22]] => == Installation d'apxs == <|> apxs

130 Mot inconnu : mod_suphp [[38:47]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> mod_suphp
130 Mot inconnu : dynamically [[109:120]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> dynamically
130 Mot inconnu : loadable [[121:129]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> loadable
130 Mot inconnu : DSO [[140:143]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> dso
130 Mot inconnu : DSO [[209:212]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> dso
130 Guillemets typographiques ouvrants. [[220:221]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> " => suggestions : ['«\xa0', '“']
130 Mot inconnu : apxs [[221:225]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> apxs
130 Guillemets typographiques fermants. [[225:226]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> " => suggestions : ['\xa0»', '”']
130 Guillemets typographiques ouvrants. [[315:316]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> " => suggestions : ['«\xa0', '“']
130 Guillemets typographiques fermants. [[325:326]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> " => suggestions : ['\xa0»', '”']
130 Mot inconnu : mod_suphp [[334:343]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> mod_suphp
130 Il manque un espace avant la parenthèse. [[422:423]] => La manière la plus simple d'installer mod_suphp et de le compiler en tant que module chargé dynamiquement (//dynamically loadable module ou DSO//). Si votre version d'Apache a été compilée avec le support des DSO et que "apxs" est soit dans votre dossier, soit vous avez spécifié son dossier en lançant la commande "configure", alors mod_suphp sera automatiquement compilé par la suite et installé sur votre serveur apache((traduction approximative de la documentation officielle)). <|> ( => suggestions : [' (']

134 Mot inconnu : suPHP [[19:24]] => == Installation de suPHP == <|> suphp

147 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[0:1]] => A ce stade il faut maintenant configurer suPHP avec les options qui nous intéressent avant de le compiler. Je vous propose la configuration suivante : <|> a => suggestions : ['À']
147 Mot inconnu : suPHP [[41:46]] => A ce stade il faut maintenant configurer suPHP avec les options qui nous intéressent avant de le compiler. Je vous propose la configuration suivante : <|> suphp

155 Mot inconnu : suPHP [[110:115]] => mais vous pouvez également taper la commande suivante pour en savoir plus sur les options de configuration de suPHP : <|> suphp

161 Mot inconnu : suPHP [[24:29]] => Les différents modes de suPHP sont les suivants : <|> suphp

164 Mot inconnu : Execute [[10:17]] => | force | Execute les scripts avec l'UID/GID spécifié dans la configuration d'Apache (ex: www-data:www-data) | <|> execute
164 Mot inconnu : UID [[37:40]] => | force | Execute les scripts avec l'UID/GID spécifié dans la configuration d'Apache (ex: www-data:www-data) | <|> uid
164 Mot inconnu : GID [[41:44]] => | force | Execute les scripts avec l'UID/GID spécifié dans la configuration d'Apache (ex: www-data:www-data) | <|> gid
164 Il manque un espace. [[99:107]] => | force | Execute les scripts avec l'UID/GID spécifié dans la configuration d'Apache (ex: www-data:www-data) | <|> www-data => suggestions : [' www-data']

165 Mot inconnu : owner [[2:7]] => | owner | Execute les scripts avec l'UID/GID de leur propriétaire | <|> owner
165 Mot inconnu : Execute [[10:17]] => | owner | Execute les scripts avec l'UID/GID de leur propriétaire | <|> execute
165 Mot inconnu : UID [[37:40]] => | owner | Execute les scripts avec l'UID/GID de leur propriétaire | <|> uid
165 Mot inconnu : GID [[41:44]] => | owner | Execute les scripts avec l'UID/GID de leur propriétaire | <|> gid

166 Mot inconnu : paranoid [[2:10]] => | paranoid |Execute les scripts avec l'UID/GID de leur propriétaire mais vérifie également qu'ils correspondent à la valeur spécifiée dans la configuration d'Apache, modifiable pour chaque vhost par la directive  suPHP_UserGroup #UID #GID | <|> paranoid
166 Mot inconnu : Execute [[12:19]] => | paranoid |Execute les scripts avec l'UID/GID de leur propriétaire mais vérifie également qu'ils correspondent à la valeur spécifiée dans la configuration d'Apache, modifiable pour chaque vhost par la directive  suPHP_UserGroup #UID #GID | <|> execute
166 Mot inconnu : UID [[39:42]] => | paranoid |Execute les scripts avec l'UID/GID de leur propriétaire mais vérifie également qu'ils correspondent à la valeur spécifiée dans la configuration d'Apache, modifiable pour chaque vhost par la directive  suPHP_UserGroup #UID #GID | <|> uid
166 Mot inconnu : GID [[43:46]] => | paranoid |Execute les scripts avec l'UID/GID de leur propriétaire mais vérifie également qu'ils correspondent à la valeur spécifiée dans la configuration d'Apache, modifiable pour chaque vhost par la directive  suPHP_UserGroup #UID #GID | <|> gid
166 Mot inconnu : vhost [[189:194]] => | paranoid |Execute les scripts avec l'UID/GID de leur propriétaire mais vérifie également qu'ils correspondent à la valeur spécifiée dans la configuration d'Apache, modifiable pour chaque vhost par la directive  suPHP_UserGroup #UID #GID | <|> vhost
166 Mot inconnu : suPHP_UserGroup [[213:228]] => | paranoid |Execute les scripts avec l'UID/GID de leur propriétaire mais vérifie également qu'ils correspondent à la valeur spécifiée dans la configuration d'Apache, modifiable pour chaque vhost par la directive  suPHP_UserGroup #UID #GID | <|> suphp_usergroup

176 Mot inconnu : build-essential [[125:140]] => Sur une installation fraiche et minimaliste de Hardy, il manquait les outils de compilation. Il suffit d'installer le paquet build-essential pour les obtenir. <|> build-essential

181 Mot inconnu : suphp [[73:78]] => Ensuite, copiez le fichier de configuration d'exemple dans votre dossier suphp créé ci-dessus : <|> suphp

244 Mot inconnu : suphp [[70:75]] => Ou alors vous pouvez également mettre cette directive dans un fichier suphp.load dans le dossier /etc/apache2/mods-available et en faire un lien symbolique dans /etc/apache2/mods-enabled. Cette deuxième méthode est préférable car elle rend l'entretien d'Apache plus facile, en permettant notamment l'utilisation des utilitaires a2enmod et a2dismod pour activer et désactiver suPHP. <|> suphp
244 Mot inconnu : load [[76:80]] => Ou alors vous pouvez également mettre cette directive dans un fichier suphp.load dans le dossier /etc/apache2/mods-available et en faire un lien symbolique dans /etc/apache2/mods-enabled. Cette deuxième méthode est préférable car elle rend l'entretien d'Apache plus facile, en permettant notamment l'utilisation des utilitaires a2enmod et a2dismod pour activer et désactiver suPHP. <|> load
244 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[225:229]] => Ou alors vous pouvez également mettre cette directive dans un fichier suphp.load dans le dossier /etc/apache2/mods-available et en faire un lien symbolique dans /etc/apache2/mods-enabled. Cette deuxième méthode est préférable car elle rend l'entretien d'Apache plus facile, en permettant notamment l'utilisation des utilitaires a2enmod et a2dismod pour activer et désactiver suPHP. <|>  car => suggestions : [', car']
244 Mot inconnu : a2enmod [[328:335]] => Ou alors vous pouvez également mettre cette directive dans un fichier suphp.load dans le dossier /etc/apache2/mods-available et en faire un lien symbolique dans /etc/apache2/mods-enabled. Cette deuxième méthode est préférable car elle rend l'entretien d'Apache plus facile, en permettant notamment l'utilisation des utilitaires a2enmod et a2dismod pour activer et désactiver suPHP. <|> a2enmod
244 Mot inconnu : a2dismod [[339:347]] => Ou alors vous pouvez également mettre cette directive dans un fichier suphp.load dans le dossier /etc/apache2/mods-available et en faire un lien symbolique dans /etc/apache2/mods-enabled. Cette deuxième méthode est préférable car elle rend l'entretien d'Apache plus facile, en permettant notamment l'utilisation des utilitaires a2enmod et a2dismod pour activer et désactiver suPHP. <|> a2dismod
244 Mot inconnu : suPHP [[375:380]] => Ou alors vous pouvez également mettre cette directive dans un fichier suphp.load dans le dossier /etc/apache2/mods-available et en faire un lien symbolique dans /etc/apache2/mods-enabled. Cette deuxième méthode est préférable car elle rend l'entretien d'Apache plus facile, en permettant notamment l'utilisation des utilitaires a2enmod et a2dismod pour activer et désactiver suPHP. <|> suphp

250 Il manque un espace. [[72:76]] => De même, vous pouvez créer un fichier /etc/apache2/mods-available/suphp.conf et en faire un lien symoblique dans mods-enabled, contenant la configuration suivante : <|> conf => suggestions : [' conf']
250 Mot inconnu : symoblique [[97:107]] => De même, vous pouvez créer un fichier /etc/apache2/mods-available/suphp.conf et en faire un lien symoblique dans mods-enabled, contenant la configuration suivante : <|> symoblique
250 Mot inconnu : mods-enabled [[113:125]] => De même, vous pouvez créer un fichier /etc/apache2/mods-available/suphp.conf et en faire un lien symoblique dans mods-enabled, contenant la configuration suivante : <|> mods-enabled

282 Mot inconnu : suphp [[62:67]] => Par ailleurs, il faut savoir deux choses sur l'utilisation de suphp : <|> suphp

294 Mot inconnu : suPhp [[6:11]] => ===== suPhp et directives apache php_value ===== <|> suphp
294 Mot inconnu : php_value [[33:42]] => ===== suPhp et directives apache php_value ===== <|> php_value
295 Mot inconnu : php_value [[129:138]] => Afin de spécialiser l'interpréteur php pour chaque application hébergée, il est possible d'utiliser des directives de la forme : php_value, php_admin_value, php_flag, php_admin_flag. Ces directives permet de fixer par répertoire (et donc application), les principales valeurs de configuration de php. <|> php_value
295 Mot inconnu : php_admin_value [[140:155]] => Afin de spécialiser l'interpréteur php pour chaque application hébergée, il est possible d'utiliser des directives de la forme : php_value, php_admin_value, php_flag, php_admin_flag. Ces directives permet de fixer par répertoire (et donc application), les principales valeurs de configuration de php. <|> php_admin_value
295 Mot inconnu : php_flag [[157:165]] => Afin de spécialiser l'interpréteur php pour chaque application hébergée, il est possible d'utiliser des directives de la forme : php_value, php_admin_value, php_flag, php_admin_flag. Ces directives permet de fixer par répertoire (et donc application), les principales valeurs de configuration de php. <|> php_flag
295 Mot inconnu : php_admin_flag [[167:181]] => Afin de spécialiser l'interpréteur php pour chaque application hébergée, il est possible d'utiliser des directives de la forme : php_value, php_admin_value, php_flag, php_admin_flag. Ces directives permet de fixer par répertoire (et donc application), les principales valeurs de configuration de php. <|> php_admin_flag
295 Conjugaison erronée. Accord avec “Ces directives…”. Le verbe devrait être à la 3ᵉ personne du pluriel. [[198:204]] => Afin de spécialiser l'interpréteur php pour chaque application hébergée, il est possible d'utiliser des directives de la forme : php_value, php_admin_value, php_flag, php_admin_flag. Ces directives permet de fixer par répertoire (et donc application), les principales valeurs de configuration de php. <|> permet => suggestions : ['permettent']
