2 Mot inconnu : SFML [[7:11]] => ====== SFML : Simple and Fast Multimedia Library====== <|> sfml
2 Mot inconnu : and [[21:24]] => ====== SFML : Simple and Fast Multimedia Library====== <|> and
2 Mot inconnu : Fast [[25:29]] => ====== SFML : Simple and Fast Multimedia Library====== <|> fast
2 Mot inconnu : Multimedia [[30:40]] => ====== SFML : Simple and Fast Multimedia Library====== <|> multimedia
2 Mot inconnu : Library [[41:48]] => ====== SFML : Simple and Fast Multimedia Library====== <|> library

12 Mot inconnu : SFML [[3:7]] => La SFML est divisée en 5 modules : <|> sfml
13 Mot inconnu : System [[6:12]] =>   * **System** : base de la bibliothèque, et multi-threading <|> system
13 Mot inconnu : multi-threading [[45:60]] =>   * **System** : base de la bibliothèque, et multi-threading <|> multi-threading
14 Mot inconnu : Window [[6:12]] =>   * **Window** : fenêtrage <|> window
15 Mot inconnu : Graphics [[6:14]] =>   * **Graphics** : gestion de la 2D (sprites, chaînes de caractères affichables, effets…) <|> graphics
15 Nombre ordinal. Second : 2ᵈ. Seconde : 2ᵈᵉ. Seconds : 2ᵈˢ. Secondes : 2ᵈᵉˢ. [[33:35]] =>   * **Graphics** : gestion de la 2D (sprites, chaînes de caractères affichables, effets…) <|> 2d => suggestions : ['2ᵈ']
15 Mot inconnu : sprites [[37:44]] =>   * **Graphics** : gestion de la 2D (sprites, chaînes de caractères affichables, effets…) <|> sprites

23 Mot inconnu : SFML [[25:29]] => ===== Installation de la SFML ===== <|> sfml

26 Mot inconnu : SFML [[0:4]] => SFML est disponible dans les dépôts Ubuntu dans sa version 2.5.1, dans les paquets libsfml-*. <|> sfml
26 Mot inconnu : libsfml [[83:90]] => SFML est disponible dans les dépôts Ubuntu dans sa version 2.5.1, dans les paquets libsfml-*. <|> libsfml

36 Mot inconnu : SFML [[51:55]] => Tout d'abord, il vous faudra certains paquets, car SFML dépend de certaines bibliothèques. <|> sfml

40 Mot inconnu : SFML [[70:74]] => Ensuite, téléchargez les sources depuis la page de téléchargements de SFML, voici le lien direct vers les sources de la version 2.5.1 : <|> sfml
45 Mot inconnu : CMakeLists [[151:161]] => Une fois le code source téléchargé, dézippez l'archive dans votre dossier home (chemin : **/home/votreNom/**) par exemple. Vous devez avoir un fichier CMakeLists.txt accessible via le chemin **/home/votreNom/SFML-x.x/CMakeLists.txt** avec SFMLx.x votre version de SFML. <|> cmakelists
45 Mot inconnu : txt [[162:165]] => Une fois le code source téléchargé, dézippez l'archive dans votre dossier home (chemin : **/home/votreNom/**) par exemple. Vous devez avoir un fichier CMakeLists.txt accessible via le chemin **/home/votreNom/SFML-x.x/CMakeLists.txt** avec SFMLx.x votre version de SFML. <|> txt
45 Mot inconnu : SFMLx [[239:244]] => Une fois le code source téléchargé, dézippez l'archive dans votre dossier home (chemin : **/home/votreNom/**) par exemple. Vous devez avoir un fichier CMakeLists.txt accessible via le chemin **/home/votreNom/SFML-x.x/CMakeLists.txt** avec SFMLx.x votre version de SFML. <|> sfmlx
45 Mot inconnu : SFML [[264:268]] => Une fois le code source téléchargé, dézippez l'archive dans votre dossier home (chemin : **/home/votreNom/**) par exemple. Vous devez avoir un fichier CMakeLists.txt accessible via le chemin **/home/votreNom/SFML-x.x/CMakeLists.txt** avec SFMLx.x votre version de SFML. <|> sfml

50 Mot inconnu : cmake-gui [[19:28]] => Maintenant, lancez cmake-gui depuis un terminal ou de façon graphique, une fenêtre s'affiche : <|> cmake-gui

54 Mot inconnu : makefile [[211:219]] => Comme sur la capture d'écran, vous devez indiquer le chemin du dossier où sont les sources dans le premier champ, et vous devez indiquer le chemin vers un dossier dans lequel les sources seront compilées et les makefile générés (dans mon cas le dossier sfml-dev). Cliquez ensuite sur "Configure" en bas à gauche de la fenêtre. <|> makefile
54 Mot inconnu : sfml-dev [[253:261]] => Comme sur la capture d'écran, vous devez indiquer le chemin du dossier où sont les sources dans le premier champ, et vous devez indiquer le chemin vers un dossier dans lequel les sources seront compilées et les makefile générés (dans mon cas le dossier sfml-dev). Cliquez ensuite sur "Configure" en bas à gauche de la fenêtre. <|> sfml-dev
54 Guillemets typographiques ouvrants. [[284:285]] => Comme sur la capture d'écran, vous devez indiquer le chemin du dossier où sont les sources dans le premier champ, et vous devez indiquer le chemin vers un dossier dans lequel les sources seront compilées et les makefile générés (dans mon cas le dossier sfml-dev). Cliquez ensuite sur "Configure" en bas à gauche de la fenêtre. <|> " => suggestions : ['«\xa0', '“']
54 Guillemets typographiques fermants. [[294:295]] => Comme sur la capture d'écran, vous devez indiquer le chemin du dossier où sont les sources dans le premier champ, et vous devez indiquer le chemin vers un dossier dans lequel les sources seront compilées et les makefile générés (dans mon cas le dossier sfml-dev). Cliquez ensuite sur "Configure" en bas à gauche de la fenêtre. <|> " => suggestions : ['\xa0»', '”']

58 Mot inconnu : Cmake [[83:88]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|> cmake
58 Mot inconnu : SFML [[166:170]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|> sfml
58 Guillemets typographiques ouvrants. [[206:207]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|> " => suggestions : ['«\xa0', '“']
58 Mot inconnu : Configuratig [[207:219]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|> configuratig
58 Mot inconnu : done [[220:224]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|> done
58 Guillemets typographiques fermants. [[225:226]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|> " => suggestions : ['\xa0»', '”']
58 Espace(s) en fin de ligne à supprimer. [[342:343]] => Sur la fenêtre qui apparaît, laissez les options par défaut et cliquez sur Finish. Cmake vérifie que vous avez toutes les dépendances nécessaires à la compilation de SFML. Si tout se passe bien, le message "Configuratig done." s'affiche en bas de la fenêtre, et des lignes apparaissent sur fond rouge comme dans la capture d'écran ci-dessous.  <|>   => suggestions : ['']

64 Mot inconnu : SFML [[120:124]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> sfml
64 Mot inconnu : Recliquez [[126:135]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> recliquez
64 Guillemets typographiques ouvrants. [[140:141]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> " => suggestions : ['«\xa0', '“']
64 Guillemets typographiques fermants. [[150:151]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> " => suggestions : ['\xa0»', '”']
64 Mot inconnu : makefile [[211:219]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> makefile
64 Guillemets typographiques ouvrants. [[244:245]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> " => suggestions : ['«\xa0', '“']
64 Mot inconnu : Generate [[245:253]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> generate
64 Guillemets typographiques fermants. [[253:254]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> " => suggestions : ['\xa0»', '”']
64 Guillemets typographiques ouvrants. [[280:281]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> " => suggestions : ['«\xa0', '“']
64 Mot inconnu : Generating [[281:291]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> generating
64 Mot inconnu : done [[292:296]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> done
64 Guillemets typographiques fermants. [[296:297]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> " => suggestions : ['\xa0»', '”']
64 Mot inconnu : cmake-gui [[327:336]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> cmake-gui
64 Mot inconnu : makefile [[343:351]] => Pour ma part, j'ai laissé les options par défaut, vous avez les détails de ces options sur le tutoriel officiel du site SFML. Recliquez sur "Configure", le fond des lignes passe alors en blanc. Pour générer les makefile, cliquez maintenant sur "Generate". Une fois que le message "Generating done" apparaît, vous pouvez fermer cmake-gui : les makefile sont générés. <|> makefile

72 Mot inconnu : SFML [[13:17]] => Et voilà, la SFML est normalement installée !  <|> sfml
72 Espace(s) en fin de ligne à supprimer. [[45:46]] => Et voilà, la SFML est normalement installée !  <|>   => suggestions : ['']

74 Mot inconnu : SFML [[118:122]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> sfml
74 Guillemets typographiques ouvrants. [[188:189]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> " => suggestions : ['«\xa0', '“']
74 Mot inconnu : error [[189:194]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> error
74 Mot inconnu : while [[195:200]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> while
74 Mot inconnu : loading [[201:208]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> loading
74 Mot inconnu : shared [[209:215]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> shared
74 Mot inconnu : libraries [[216:225]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> libraries
74 Mot inconnu : libsfml-graphics [[227:243]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> libsfml-graphics
74 Mot inconnu : so [[244:246]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> so
74 Mot inconnu : cannot [[250:256]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> cannot
74 Mot inconnu : shared [[262:268]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> shared
74 Mot inconnu : object [[269:275]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> object
74 Mot inconnu : such [[285:289]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> such
74 Mot inconnu : directory [[298:307]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> directory
74 Guillemets typographiques fermants. [[307:308]] => <note important>Mais il reste encore une chose à faire dans certains cas. En effet, après avoir compilé mon programme SFML (ou essayé d'exécuter les exemples), j'ai eu l'erreur suivante : "error while loading shared libraries: libsfml-graphics.so.2: cannot open shared object file: No such file or directory" que ce soit sur système 32 ou 64 bits. <|> " => suggestions : ['\xa0»', '”']
75 Guillemets typographiques ouvrants. [[227:228]] => Pour résoudre ce problème (pour toute architecture 32 ou 64), il faut (en utilisateur root) éditer le fichier /etc/ld.so.conf et rajouter la ligne : "/usr/local/lib" (sans les guillemets). Enregistrez puis exécutez la commande "sudo ldconfig". Maintenant, votre programme devrait tourner ! <|> " => suggestions : ['«\xa0', '“']
75 Mot inconnu : sudo [[228:232]] => Pour résoudre ce problème (pour toute architecture 32 ou 64), il faut (en utilisateur root) éditer le fichier /etc/ld.so.conf et rajouter la ligne : "/usr/local/lib" (sans les guillemets). Enregistrez puis exécutez la commande "sudo ldconfig". Maintenant, votre programme devrait tourner ! <|> sudo
75 Mot inconnu : ldconfig [[233:241]] => Pour résoudre ce problème (pour toute architecture 32 ou 64), il faut (en utilisateur root) éditer le fichier /etc/ld.so.conf et rajouter la ligne : "/usr/local/lib" (sans les guillemets). Enregistrez puis exécutez la commande "sudo ldconfig". Maintenant, votre programme devrait tourner ! <|> ldconfig
75 Guillemets typographiques fermants. [[241:242]] => Pour résoudre ce problème (pour toute architecture 32 ou 64), il faut (en utilisateur root) éditer le fichier /etc/ld.so.conf et rajouter la ligne : "/usr/local/lib" (sans les guillemets). Enregistrez puis exécutez la commande "sudo ldconfig". Maintenant, votre programme devrait tourner ! <|> " => suggestions : ['\xa0»', '”']

80 Mot inconnu : ldconfig [[0:8]] => ldconfig</code></note> <|> ldconfig

82 Mot inconnu : Binding [[18:25]] => ==== Installez le Binding Python ==== <|> binding

91 Mot inconnu : cmake [[45:50]] => Ces deux entrées vous seront utiles pour que cmake parviennent a s'installer sans soucis. FIXME (à vérifier) <|> cmake
91 Confusion : “a” est une conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. [[63:64]] => Ces deux entrées vous seront utiles pour que cmake parviennent a s'installer sans soucis. FIXME (à vérifier) <|> a => suggestions : ['à']
