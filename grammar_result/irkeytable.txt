2 Mot inconnu : media_center => {{tag>Xenial télécommande multimédia matériel media_center}}

5 Mot inconnu : IR-Keytable => ====== Gérer sa télécommande avec IR-Keytable ======

7 Espace(s) surnuméraire(s) à supprimer. => De nombreuses télécommandes infrarouges sont compatibles sous Linux (mais pas toutes). Les fonctionnalités de  l'infrarouge (ir-core) sont désormais intégrées par défaut au [[:kernel|noyau]]. **IR-Keytable** est l'outil qui permet de faire fonctionner son récepteur IR et ses télécommandes.\\
7 Mot inconnu : ir-core => De nombreuses télécommandes infrarouges sont compatibles sous Linux (mais pas toutes). Les fonctionnalités de  l'infrarouge (ir-core) sont désormais intégrées par défaut au [[:kernel|noyau]]. **IR-Keytable** est l'outil qui permet de faire fonctionner son récepteur IR et ses télécommandes.\\
7 Mot inconnu : IR-Keytable => De nombreuses télécommandes infrarouges sont compatibles sous Linux (mais pas toutes). Les fonctionnalités de  l'infrarouge (ir-core) sont désormais intégrées par défaut au [[:kernel|noyau]]. **IR-Keytable** est l'outil qui permet de faire fonctionner son récepteur IR et ses télécommandes.\\
7 Mot inconnu : IR => De nombreuses télécommandes infrarouges sont compatibles sous Linux (mais pas toutes). Les fonctionnalités de  l'infrarouge (ir-core) sont désormais intégrées par défaut au [[:kernel|noyau]]. **IR-Keytable** est l'outil qui permet de faire fonctionner son récepteur IR et ses télécommandes.\\

8 Mot inconnu : utilliser => Cette méthode est à privilégiée lorsque votre matériel est reconnu nativement par le noyau. Sinon il est préférable d'utilliser [[:LIRC]] (Linux Infrared Remote Control) et ses modules.
8 Mot inconnu : Infrared => Cette méthode est à privilégiée lorsque votre matériel est reconnu nativement par le noyau. Sinon il est préférable d'utilliser [[:LIRC]] (Linux Infrared Remote Control) et ses modules.
8 Mot inconnu : Remote => Cette méthode est à privilégiée lorsque votre matériel est reconnu nativement par le noyau. Sinon il est préférable d'utilliser [[:LIRC]] (Linux Infrared Remote Control) et ses modules.
8 Mot inconnu : Control => Cette méthode est à privilégiée lorsque votre matériel est reconnu nativement par le noyau. Sinon il est préférable d'utilliser [[:LIRC]] (Linux Infrared Remote Control) et ses modules.

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer des [[:sudo|droits d'administration]].

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée.

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avoir désinstallé [[LIRC]] si vous l'aviez installé.
14 Mot inconnu : LIRC =>   * Avoir désinstallé [[LIRC]] si vous l'aviez installé.

17 Mot inconnu : IR-keytable => Avec IR-keytable, les touches de votre télécommande se comporteront comme des touches de clavier.

19 Il manque un espace. => [[:tutoriel:comment_installer_un_paquet|Installez le paquet]] **[[apt>ir-keytable]]**.
19 Mot inconnu : ir-keytable => [[:tutoriel:comment_installer_un_paquet|Installez le paquet]] **[[apt>ir-keytable]]**.

22 Il manque un espace insécable. => Pour savoir si votre récepteur est reconnu tapez dans un [[:terminal]] :

24 Il manque un espace insécable. => Si votre récepteur est reconnu vous obtenez quelque chose de la sorte : 
24 Espace(s) en fin de ligne à supprimer. => Si votre récepteur est reconnu vous obtenez quelque chose de la sorte : 

33 Espace(s) en fin de ligne à supprimer. => </code>    

34 Mot inconnu : rc2 => Dans cet exemple le récepteur est le rc2 et il gère les protocoles NEC, RC-5 et RC-6.
34 Mot inconnu : RC-5 => Dans cet exemple le récepteur est le rc2 et il gère les protocoles NEC, RC-5 et RC-6.
34 Mot inconnu : RC-6 => Dans cet exemple le récepteur est le rc2 et il gère les protocoles NEC, RC-5 et RC-6.

36 Il manque un espace insécable. => Si votre récepteur est reconnu, il faut maintenant vérifier que votre télécommande l'est aussi. Tapez :

38 Mot inconnu : rc2 => Remplacez rc2 par votre récepteur (rc0, rc1, ...).
38 Mot inconnu : rc0 => Remplacez rc2 par votre récepteur (rc0, rc1, ...).
38 Mot inconnu : rc1 => Remplacez rc2 par votre récepteur (rc0, rc1, ...).
38 Une de ces ponctuations est superflue. => Remplacez rc2 par votre récepteur (rc0, rc1, ...).
38 Typographie : points de suspension. Utilisez le caractère dédié. => Remplacez rc2 par votre récepteur (rc0, rc1, ...).

43 Il manque un espace insécable. => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>
43 Mot inconnu : event => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>
43 Mot inconnu : EV_MSC => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>
43 Il manque un espace avant la parenthèse. => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>
43 Mot inconnu : x04 => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>
43 Mot inconnu : scancode => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>
43 Mot inconnu : x0d => 1446572211.558001: event type EV_MSC(0x04): scancode = 0x0d</code>

45 Guillemets typographiques ouvrants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : scancode => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques fermants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques ouvrants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : keycode => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques fermants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques ouvrants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : scancode => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques fermants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : x1f32 => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques ouvrants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : keycode => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Guillemets typographiques fermants. => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : KEY_UP => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.
45 Mot inconnu : scancode => Chaque touche génère un ''scancode'' mais il est très probable que toutes les touches ne génèrent pas un ''keycode'' (un code clavier). Il faut donc y remédier en indiquant à Linux l’association à faire entre le ''scancode'' (ex. 0x1f32) et le ''keycode'' (ex. KEY_UP). Pour cela il est possible d'utiliser des fichiers de paramétrage existants ou bien de créer son propre fichier. Dans tous les cas, à ce stade, il est fortement recommandé de se faire un petit fichier permettant de connaître le scancode généré par chacune des touches de sa télécommande.

48 Guillemets typographiques ouvrants. => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Mot inconnu : keycode => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Guillemets typographiques fermants. => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Guillemets typographiques ouvrants. => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Mot inconnu : scancode => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Guillemets typographiques fermants. => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Il manque un trait d’union si “même” se rapporte à “vous”. => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\
48 Mot inconnu : materiel => Les fichiers de paramétrage associant ''keycode'' et ''scancode'' sont situés dans le dossier **/lib/udev/rc_keymaps** et contiennent déjà des paramètres prédéfinis pour quelques télécommandes (ce qui vous évitera de créer vous même votre fichier). Il faudra alors rechercher le fichier de configuration le plus proche de votre materiel.\\

49 Guillemets typographiques ouvrants. => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Mot inconnu : x0d => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Guillemets typographiques fermants. => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Guillemets typographiques ouvrants. => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Mot inconnu : scancode => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Guillemets typographiques fermants. => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Mot inconnu : telecommande => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Mot inconnu : scancode => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
49 Il manque un espace insécable. => Pour cela, en remplaçant ''0x0d'' par un ''scancode'' généré par une touche de votre telecommande, tapez la ligne ci-dessous qui affichera les fichiers contenant ce scancode :
50 Il manque un espace à côté du tiret. => <code>grep -iH 0x0d /lib/udev/rc_keymaps/*</code>

59 Typographie : points de suspension. Utilisez le caractère dédié. => ...</code>

60 Guillemets typographiques ouvrants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Mot inconnu : scancode => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Mot inconnu : x0d => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques fermants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques ouvrants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques fermants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques ouvrants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Mot inconnu : budget_ci_old => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques fermants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques ouvrants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Mot inconnu : scancode => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.
60 Guillemets typographiques fermants. => Dans cet exemple on obtenait le ''scancode 0x0d'' lorsqu'on appuyait sur le bouton "Couper le son" de la télécommande. Grâce à la commande précédente on peut se rendre compte que le fichier ''budget_ci_old'' contient le bon ''scancode''.

62 Mot inconnu : scancodes => Pour être sûr d'avoir le bon fichier, répéter l'opération avec différents scancodes. 
62 Espace(s) en fin de ligne à supprimer. => Pour être sûr d'avoir le bon fichier, répéter l'opération avec différents scancodes. 

68 Il manque un espace insécable. => La première ligne doit être la suivante : <file># table nomdevotretable, type: letypedelatélécommande</file>
68 Mot inconnu : nomdevotretable => La première ligne doit être la suivante : <file># table nomdevotretable, type: letypedelatélécommande</file>
68 Il manque un espace insécable. => La première ligne doit être la suivante : <file># table nomdevotretable, type: letypedelatélécommande</file>
68 Mot inconnu : letypedelatélécommande => La première ligne doit être la suivante : <file># table nomdevotretable, type: letypedelatélécommande</file>

69 Mot inconnu : RC5 => Le type de la télécommande correspond à RC5, RC6, NEC, UNKNOWN, ...
69 Mot inconnu : RC6 => Le type de la télécommande correspond à RC5, RC6, NEC, UNKNOWN, ...
69 Mot inconnu : UNKNOWN => Le type de la télécommande correspond à RC5, RC6, NEC, UNKNOWN, ...
69 Une de ces ponctuations est superflue. => Le type de la télécommande correspond à RC5, RC6, NEC, UNKNOWN, ...
69 Typographie : points de suspension. Utilisez le caractère dédié. => Le type de la télécommande correspond à RC5, RC6, NEC, UNKNOWN, ...

71 Il manque un espace insécable. => Et ensuite les affectations de touches sous la forme : <file>scancode keycode</file>
71 Mot inconnu : scancode => Et ensuite les affectations de touches sous la forme : <file>scancode keycode</file>
71 Mot inconnu : keycode => Et ensuite les affectations de touches sous la forme : <file>scancode keycode</file>

73 Il manque un espace insécable. => Exemple : <file># table telecommandetv, type: RC5
73 Mot inconnu : telecommandetv => Exemple : <file># table telecommandetv, type: RC5
73 Il manque un espace insécable. => Exemple : <file># table telecommandetv, type: RC5
73 Mot inconnu : RC5 => Exemple : <file># table telecommandetv, type: RC5

74 Mot inconnu : x00 => 0x00 KEY_SPACE
74 Mot inconnu : KEY_SPACE => 0x00 KEY_SPACE

75 Mot inconnu : x01 => 0x01 KEY_N
75 Mot inconnu : KEY_N => 0x01 KEY_N

76 Mot inconnu : x02 => 0x02 KEY_BRIGHTNESSUP
76 Mot inconnu : KEY_BRIGHTNESSUP => 0x02 KEY_BRIGHTNESSUP

77 Mot inconnu : x0d => 0x0d KEY_MUTE
77 Mot inconnu : KEY_MUTE => 0x0d KEY_MUTE

78 Typographie : points de suspension. Utilisez le caractère dédié. => ...</file>

80 Guillemets typographiques ouvrants. => Pour vous aider à la rédaction de ce fichier, vous trouverez une liste des "keycodes" multimedia avec leur signification [[https://linuxtv.org/wiki/index.php/Remote_Controllers|ici]].
80 Mot inconnu : keycodes => Pour vous aider à la rédaction de ce fichier, vous trouverez une liste des "keycodes" multimedia avec leur signification [[https://linuxtv.org/wiki/index.php/Remote_Controllers|ici]].
80 Guillemets typographiques fermants. => Pour vous aider à la rédaction de ce fichier, vous trouverez une liste des "keycodes" multimedia avec leur signification [[https://linuxtv.org/wiki/index.php/Remote_Controllers|ici]].
80 Mot inconnu : multimedia => Pour vous aider à la rédaction de ce fichier, vous trouverez une liste des "keycodes" multimedia avec leur signification [[https://linuxtv.org/wiki/index.php/Remote_Controllers|ici]].

82 Mot inconnu : IR => <note tip>Si vous avez plusieurs télécommandes reconnues par votre récepteur IR, vous pouvez créer plusieurs fichiers de paramétrage ou rassembler toutes ces tables de conversion dans un seul fichier.</note>

86 Il manque un espace insécable. => Finalement il faut associer le fichier à un récepteur. Tapez la commande ci-dessous : <code>sudo ir-keytable -c -w /lib/udev/rc_keymaps/budget_ci_old --sysdev rc2</code>
86 Il manque un espace à côté du tiret. => Finalement il faut associer le fichier à un récepteur. Tapez la commande ci-dessous : <code>sudo ir-keytable -c -w /lib/udev/rc_keymaps/budget_ci_old --sysdev rc2</code>

87 Guillemets typographiques ouvrants. => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).
87 Mot inconnu : budget_ci_old => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).
87 Guillemets typographiques fermants. => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).
87 Mot inconnu : rc2 => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).
87 Il manque un espace à côté du tiret. => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).
87 Mot inconnu : rc2 => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).
87 Il manque un espace à côté du tiret. => Dans cet exemple, on utilise le fichier ''budget_ci_old'' pour le récepteur rc2. (Dans la ligne le -c permet de nettoyer la table de rc2 et -w permet d'écrire la nouvelle table à partir du fichier sélectionné).

88 Il manque un espace insécable. => Une fois que vous aurez testé vos modifications, il suffira d'ajouter cette ligne de commande au fichier **/etc/rc.local** pour qu'elles soient prises en compte au prochain redémarrage :

109 Mot inconnu : VLC => Pour **VLC**, par exemple, vous pouvez associer dans //Outils --> Configuration --> Raccourcis// chaque touche de votre télécommande à une action (changer de chaîne, mettre en plein écran, pause, ...).
109 Une de ces ponctuations est superflue. => Pour **VLC**, par exemple, vous pouvez associer dans //Outils --> Configuration --> Raccourcis// chaque touche de votre télécommande à une action (changer de chaîne, mettre en plein écran, pause, ...).
109 Typographie : points de suspension. Utilisez le caractère dédié. => Pour **VLC**, par exemple, vous pouvez associer dans //Outils --> Configuration --> Raccourcis// chaque touche de votre télécommande à une action (changer de chaîne, mettre en plein écran, pause, ...).

111 Mot inconnu : daemon => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]
111 Guillemets typographiques ouvrants. => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]
111 Mot inconnu : InputLirc => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]
111 Guillemets typographiques fermants. => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]
111 Mot inconnu : agreablement => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]
111 Mot inconnu : Kodi => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]
111 Mot inconnu : XBMC => C'est peut-être suffisant, mais si vous avez besoin de différencier votre télécommande de votre clavier, vous pouvez aller plus loin en installant le daemon ''InputLirc''. C'est par exemple très utile pour utiliser agreablement [[:kodi|Kodi / XBMC]]

115 Mot inconnu : Audacious => Pour le lecteur **Audacious**, ouvrir le Menu "Sortie" puis -->Paramètres audio -->Greffons-->Raccourcis universels --> paramètres.
115 Guillemets typographiques ouvrants. => Pour le lecteur **Audacious**, ouvrir le Menu "Sortie" puis -->Paramètres audio -->Greffons-->Raccourcis universels --> paramètres.
115 Accord de genre erroné : « le Menu » est masculin, « Sortie » est féminin. => Pour le lecteur **Audacious**, ouvrir le Menu "Sortie" puis -->Paramètres audio -->Greffons-->Raccourcis universels --> paramètres.
115 Guillemets typographiques fermants. => Pour le lecteur **Audacious**, ouvrir le Menu "Sortie" puis -->Paramètres audio -->Greffons-->Raccourcis universels --> paramètres.

117 Guillemets typographiques ouvrants. => On y choisit une action, on clique dans le champ de droite "association de touches"  (par exemple LIRE = XF86AudioPlay) et on presse le bouton "Play" de sa télécommande.
117 Guillemets typographiques fermants. => On y choisit une action, on clique dans le champ de droite "association de touches"  (par exemple LIRE = XF86AudioPlay) et on presse le bouton "Play" de sa télécommande.
117 Mot inconnu : XF86AudioPlay => On y choisit une action, on clique dans le champ de droite "association de touches"  (par exemple LIRE = XF86AudioPlay) et on presse le bouton "Play" de sa télécommande.
117 Guillemets typographiques ouvrants. => On y choisit une action, on clique dans le champ de droite "association de touches"  (par exemple LIRE = XF86AudioPlay) et on presse le bouton "Play" de sa télécommande.
117 Mot inconnu : Play => On y choisit une action, on clique dans le champ de droite "association de touches"  (par exemple LIRE = XF86AudioPlay) et on presse le bouton "Play" de sa télécommande.
117 Guillemets typographiques fermants. => On y choisit une action, on clique dans le champ de droite "association de touches"  (par exemple LIRE = XF86AudioPlay) et on presse le bouton "Play" de sa télécommande.

119 Guillemets typographiques ouvrants. => On répète l'opération pour toutes les actions qu'on veut définir puis on clique sur le pavé "Définir" en bas à droite pour les enregistrer définitivement.
119 Guillemets typographiques fermants. => On répète l'opération pour toutes les actions qu'on veut définir puis on clique sur le pavé "Définir" en bas à droite pour les enregistrer définitivement.

122 Mot inconnu : InputLirc => ==== InputLirc ====

123 Guillemets typographiques ouvrants. => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
123 Mot inconnu : InputLirc => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
123 Guillemets typographiques fermants. => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
123 Mot inconnu : daemon => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
123 Mot inconnu : KeyCodes => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
123 Mot inconnu : Lirc => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
123 Espace(s) en fin de ligne à supprimer. => ''InputLirc'' est un daemon léger qui permet de ré-envoyer les KeyCodes générés par ''/dev/input/eventX'' aux clients Lirc.\\ 
124 Mot inconnu : inputlirc => Il faut donc installer **[[apt>inputlirc]]**.

126 Mot inconnu : ImputLirc => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : Lirc => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : Lirc => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : daemon => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : Lircd => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : Lirc => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Il manque un espace insécable. => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Accord de nombre erroné avec « aux questions » : « posée » devrait être au pluriel. => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Forme interrogative ? Mettez un trait d’union. => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : START_LIRCD => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Guillemets typographiques ouvrants. => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Mot inconnu : false => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Guillemets typographiques fermants. => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>
126 Il manque un espace. => <note warning>ImputLirc est incompatible avec Lirc. Pour que cette méthode fonctionne, il faut impérativement désinstaller Lirc ou s'assurer que le daemon Lircd n'est pas lancé. Pour cela, lors de l'installation de Lirc ou de sa re-configuration : <code>sudo dpkg-reconfigure lirc</code> il faut bien avoir répondu none aux questions posée. Assurez vous également que le paramètre START_LIRCD est bien configuré sur ''false'' dans **etc/lirc/hardware.conf**.</note>

128 Mot inconnu : EventX => Pour le configurer, il faut connaître le numéro du EventX correspondant à votre récepteur IR :
128 Mot inconnu : IR => Pour le configurer, il faut connaître le numéro du EventX correspondant à votre récepteur IR :
128 Il manque un espace insécable. => Pour le configurer, il faut connaître le numéro du EventX correspondant à votre récepteur IR :

132 Mot inconnu : Zbox => Par exemple, sur une Zbox nano, vous pourrez obtenir :
132 Mot inconnu : nano => Par exemple, sur une Zbox nano, vous pourrez obtenir :
132 Il manque un espace insécable. => Par exemple, sur une Zbox nano, vous pourrez obtenir :

142 Il manque un espace insécable. => B: MSC=10</code>
142 Mot inconnu : MSC => B: MSC=10</code>

143 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

144 Guillemets typographiques ouvrants. => Donc, ici les signaux de la télécommande sont transmis à travers ''/dev/input/event7'', ce qu'il faut indiquer à ''inputLirc'' en ajoutant au fichier ''/etc/default/inputlirc'' :
144 Mot inconnu : inputLirc => Donc, ici les signaux de la télécommande sont transmis à travers ''/dev/input/event7'', ce qu'il faut indiquer à ''inputLirc'' en ajoutant au fichier ''/etc/default/inputlirc'' :
144 Guillemets typographiques fermants. => Donc, ici les signaux de la télécommande sont transmis à travers ''/dev/input/event7'', ce qu'il faut indiquer à ''inputLirc'' en ajoutant au fichier ''/etc/default/inputlirc'' :
144 Il manque un espace insécable. => Donc, ici les signaux de la télécommande sont transmis à travers ''/dev/input/event7'', ce qu'il faut indiquer à ''inputLirc'' en ajoutant au fichier ''/etc/default/inputlirc'' :

145 Mot inconnu : EVENTS => <file>EVENTS="/dev/input/event7"

146 Il manque un espace à côté du tiret. => OPTIONS="-g -m 0 -c"</file>
146 Guillemets typographiques fermants. => OPTIONS="-g -m 0 -c"</file>

148 Il manque un espace insécable. => <note>[cas particulier ?]  Lorsque vous débranchez et rebrancher votre récepteur IR, le numero eventX  peut changer. Voir plus bas comment s'affranchir de cet inconvénient</note>
148 Mot inconnu : IR => <note>[cas particulier ?]  Lorsque vous débranchez et rebrancher votre récepteur IR, le numero eventX  peut changer. Voir plus bas comment s'affranchir de cet inconvénient</note>
148 Mot inconnu : numero => <note>[cas particulier ?]  Lorsque vous débranchez et rebrancher votre récepteur IR, le numero eventX  peut changer. Voir plus bas comment s'affranchir de cet inconvénient</note>
148 Mot inconnu : eventX => <note>[cas particulier ?]  Lorsque vous débranchez et rebrancher votre récepteur IR, le numero eventX  peut changer. Voir plus bas comment s'affranchir de cet inconvénient</note>
148 Espace(s) surnuméraire(s) à supprimer. => <note>[cas particulier ?]  Lorsque vous débranchez et rebrancher votre récepteur IR, le numero eventX  peut changer. Voir plus bas comment s'affranchir de cet inconvénient</note>

150 Mot inconnu : inputLirc => Il ne reste plus qu'à redémarrer inputLirc :
150 Il manque un espace insécable. => Il ne reste plus qu'à redémarrer inputLirc :

152 Mot inconnu : start => /etc/init.d/inputlirc start</code>

154 Mot inconnu : lirc => Et tester que maintenant, votre télécommande est bien reconnue et que l'appui de touche renvoie le bon code lirc :
154 Il manque un espace insécable. => Et tester que maintenant, votre télécommande est bien reconnue et que l'appui de touche renvoie le bon code lirc :

157 Mot inconnu : InputLirc => <note tip>Maintenant que InputLirc fonctionne, les scancodes générés par votre télécommande ne sont plus transformés en événements clavier KeyCode mais en événements télécommande. La commande <code>ir-keytable -t --sysdev rc2</code> ne ferait plus rien apparaître lors de l'appui des touches. C'est pour cela qu'il faut désormais utiliser la commande <code>irw</code> pour tester votre télécommande.</note>
157 Mot inconnu : scancodes => <note tip>Maintenant que InputLirc fonctionne, les scancodes générés par votre télécommande ne sont plus transformés en événements clavier KeyCode mais en événements télécommande. La commande <code>ir-keytable -t --sysdev rc2</code> ne ferait plus rien apparaître lors de l'appui des touches. C'est pour cela qu'il faut désormais utiliser la commande <code>irw</code> pour tester votre télécommande.</note>
157 Mot inconnu : KeyCode => <note tip>Maintenant que InputLirc fonctionne, les scancodes générés par votre télécommande ne sont plus transformés en événements clavier KeyCode mais en événements télécommande. La commande <code>ir-keytable -t --sysdev rc2</code> ne ferait plus rien apparaître lors de l'appui des touches. C'est pour cela qu'il faut désormais utiliser la commande <code>irw</code> pour tester votre télécommande.</note>
157 Mot inconnu : irw => <note tip>Maintenant que InputLirc fonctionne, les scancodes générés par votre télécommande ne sont plus transformés en événements clavier KeyCode mais en événements télécommande. La commande <code>ir-keytable -t --sysdev rc2</code> ne ferait plus rien apparaître lors de l'appui des touches. C'est pour cela qu'il faut désormais utiliser la commande <code>irw</code> pour tester votre télécommande.</note>

158 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Mot inconnu : irw => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Mot inconnu : Lirc => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Mot inconnu : InputLirc => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Mot inconnu : Lirc => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Forme interrogative ? Mettez un trait d’union. => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Mot inconnu : daemon => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Mot inconnu : Lircd => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>
158 Il manque un espace insécable. => <note warning>la commande irw fait partie du paquet Lirc qu'il faut donc installer pour l'utiliser. Rappelons que InputLirc et Lirc sont incompatibles. Assurez vous bien que le daemon Lircd n'est pas lancé !</note>

159 Mot inconnu : numero => ==== Cas où le numero EventX change de temps en temps ====
159 Mot inconnu : EventX => ==== Cas où le numero EventX change de temps en temps ====

160 Mot inconnu : numero => Il arrive que le numero EventX change parfois. Lors d'un redémarrage ou lorsque l'on débranche puis rebranche son récepteur IR USB. Il faut alors créer une règle permanente avec Udev.\\
160 Mot inconnu : EventX => Il arrive que le numero EventX change parfois. Lors d'un redémarrage ou lorsque l'on débranche puis rebranche son récepteur IR USB. Il faut alors créer une règle permanente avec Udev.\\
160 Mot inconnu : IR => Il arrive que le numero EventX change parfois. Lors d'un redémarrage ou lorsque l'on débranche puis rebranche son récepteur IR USB. Il faut alors créer une règle permanente avec Udev.\\
160 Mot inconnu : Udev => Il arrive que le numero EventX change parfois. Lors d'un redémarrage ou lorsque l'on débranche puis rebranche son récepteur IR USB. Il faut alors créer une règle permanente avec Udev.\\

161 Mot inconnu : IR => Commençons par rechercher un peu plus d'information sur votre récepteur IR en tapant (remplacer event8 par le numéro d'eventX correspondant dans cette cession à votre récepteur IR) :
161 Mot inconnu : event8 => Commençons par rechercher un peu plus d'information sur votre récepteur IR en tapant (remplacer event8 par le numéro d'eventX correspondant dans cette cession à votre récepteur IR) :
161 Mot inconnu : eventX => Commençons par rechercher un peu plus d'information sur votre récepteur IR en tapant (remplacer event8 par le numéro d'eventX correspondant dans cette cession à votre récepteur IR) :
161 Mot inconnu : IR => Commençons par rechercher un peu plus d'information sur votre récepteur IR en tapant (remplacer event8 par le numéro d'eventX correspondant dans cette cession à votre récepteur IR) :
161 Il manque un espace insécable. => Commençons par rechercher un peu plus d'information sur votre récepteur IR en tapant (remplacer event8 par le numéro d'eventX correspondant dans cette cession à votre récepteur IR) :
162 Il manque un espace à côté du tiret. => <code> udevadm info -a -p $(udevadm info -q path -n /dev/input/event8) </code>
162 Il manque un espace à côté du tiret. => <code> udevadm info -a -p $(udevadm info -q path -n /dev/input/event8) </code>
162 Il manque un espace à côté du tiret. => <code> udevadm info -a -p $(udevadm info -q path -n /dev/input/event8) </code>

164 Il manque un espace insécable. => On obtient alors par exemple :

200 Mot inconnu : ATTRS => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques ouvrants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Mot inconnu : ATTRS => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques ouvrants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Mot inconnu : NTN0530 => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques fermants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques ouvrants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Mot inconnu : MaTelecommande => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques fermants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques ouvrants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Mot inconnu : EventX => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
200 Guillemets typographiques fermants. => Il faut alors rechercher l'''ATTRS{id}'' correspondant à votre matériel (dans mon cas ''ATTRS{id}=="NTN0530"'') pour créer le lien symbolique ''MaTelecommande'' pointant toujours sur le bon ''EventX'':
202 Guillemets typographiques ouvrants. => <code>sudo echo 'KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"' > /etc/udev/rules.d/10-persistent-ir.rules </code>
202 Guillemets typographiques ouvrants. => <code>sudo echo 'KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"' > /etc/udev/rules.d/10-persistent-ir.rules </code>
202 Guillemets typographiques ouvrants. => <code>sudo echo 'KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"' > /etc/udev/rules.d/10-persistent-ir.rules </code>
202 Guillemets typographiques fermants. => <code>sudo echo 'KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"' > /etc/udev/rules.d/10-persistent-ir.rules </code>
202 Guillemets typographiques ouvrants. => <code>sudo echo 'KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"' > /etc/udev/rules.d/10-persistent-ir.rules </code>
202 Guillemets typographiques fermants. => <code>sudo echo 'KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"' > /etc/udev/rules.d/10-persistent-ir.rules </code>

204 Mot inconnu : pouver => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Guillemets typographiques fermants. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Il manque un espace insécable. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Mot inconnu : KERNEL => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Guillemets typographiques ouvrants. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Mot inconnu : event => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Mot inconnu : ATTRS => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Guillemets typographiques ouvrants. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Mot inconnu : NTN0530 => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Guillemets typographiques fermants. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Mot inconnu : SYMLINK => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Guillemets typographiques ouvrants. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Mot inconnu : MaTelecommande => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>
204 Guillemets typographiques fermants. => (vous pouver aussi modifier directement le fichier ''/etc/udev/rules.d/10-persistent-ir.rules''  en ajoutant la ligne : <file>''KERNEL=="event*",ATTRS{id}=="NTN0530",SYMLINK="input/MaTelecommande"''</file>

206 Mot inconnu : Redemarrez => Redemarrez Udev pour que les changements prennent effet :
206 Mot inconnu : Udev => Redemarrez Udev pour que les changements prennent effet :
206 Il manque un espace insécable. => Redemarrez Udev pour que les changements prennent effet :

208 Mot inconnu : sudo => sudo udevadm trigger</code>
208 Mot inconnu : udevadm => sudo udevadm trigger</code>
208 Mot inconnu : trigger => sudo udevadm trigger</code>

210 Espace(s) surnuméraire(s) à supprimer. => Vous devriez voir désormais apparaître le fichier spécial  ''/dev/input/MaTelecommande''\\

211 Mot inconnu : InputLirc => N'oubliez pas pour terminer de reconfigurer InputLirc :
211 Il manque un espace insécable. => N'oubliez pas pour terminer de reconfigurer InputLirc :

213 Mot inconnu : EVENTS => <file>EVENTS="/dev/input/MaTelecommande"

214 Il manque un espace à côté du tiret. => OPTIONS="-g -m 0 -c"</file>
214 Guillemets typographiques fermants. => OPTIONS="-g -m 0 -c"</file>

216 Mot inconnu : inputLirc => Et redémarrer inputLirc :
216 Il manque un espace insécable. => Et redémarrer inputLirc :

218 Mot inconnu : sudo => sudo /etc/init.d/inputlirc start</code>
218 Mot inconnu : start => sudo /etc/init.d/inputlirc start</code>

221 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

222 Il manque un espace. => Pour supprimer cette application, il suffit de [[:tutoriel:comment_supprimer_un_paquet|supprimer son paquet]]. Selon la méthode choisie, la configuration globale de l'application est conservée ou supprimée. Les journaux du système, et les fichiers de préférence des utilisateurs dans leurs dossiers personnels sont toujours conservés.

223 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://kodi.wiki/view/HOW-TO:Set_up_an_MCE_remote_control_in_Linux|Tuto en anglais sur lirc et IR-Keytable]].
226 Mot inconnu : Set_up_an_MCE_remote_control_in_Linux =>   * [[http://kodi.wiki/view/HOW-TO:Set_up_an_MCE_remote_control_in_Linux|Tuto en anglais sur lirc et IR-Keytable]].
226 Mot inconnu : lirc =>   * [[http://kodi.wiki/view/HOW-TO:Set_up_an_MCE_remote_control_in_Linux|Tuto en anglais sur lirc et IR-Keytable]].
226 Mot inconnu : IR-Keytable =>   * [[http://kodi.wiki/view/HOW-TO:Set_up_an_MCE_remote_control_in_Linux|Tuto en anglais sur lirc et IR-Keytable]].

227 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://forum.ubuntu-fr.org/viewtopic.php?id=2005215|Une installation, pas à pas, sur notre forum]].

229 Il manque un espace insécable. => //Contributeurs : [[utilisateurs:zarmu]]// , [[utilisateurs:Tout_seul]]
229 Il manque un espace. => //Contributeurs : [[utilisateurs:zarmu]]// , [[utilisateurs:Tout_seul]]
229 Pas d’espace avant une virgule. => //Contributeurs : [[utilisateurs:zarmu]]// , [[utilisateurs:Tout_seul]]
229 Il manque un espace. => //Contributeurs : [[utilisateurs:zarmu]]// , [[utilisateurs:Tout_seul]]
