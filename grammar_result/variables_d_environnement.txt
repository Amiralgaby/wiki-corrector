7 Mot inconnu : LANG [[156:160]] => Les variables d'environnement constituent un moyen d'influencer le comportement des logiciels sur votre système. Par exemple, la variable d'environnement « LANG » détermine la langue que les logiciels utilisent pour communiquer avec l'utilisateur. <|> lang
9 Mot inconnu : fr_FR [[150:155]] => Les variables sont constituées de **noms** auxquels on assigne des **valeurs**. Ainsi, le système d'un utilisateur français devrait avoir la valeur « fr_FR.UTF-8 » assignée à la variable « LANG ». <|> fr_fr
9 Mot inconnu : LANG [[189:193]] => Les variables sont constituées de **noms** auxquels on assigne des **valeurs**. Ainsi, le système d'un utilisateur français devrait avoir la valeur « fr_FR.UTF-8 » assignée à la variable « LANG ». <|> lang

18 Espace(s) en fin de ligne à supprimer. [[209:210]] => Bien que quelques applications de configuration en mode graphique manipulent en réalité des variables d'environnement, la ligne de commande offre un maximum de flexibilité pour créer et modifier ces variables.  <|>   => suggestions : ['']
20 Mot inconnu : Bourne [[100:106]] => <note>Les techniques expliquées ci-dessous s'appliquent à la famille d'interpréteurs de commandes « Bourne Shell », c'est à dire **sh**, **ksh**, et **bash**. Ce dernier est l'interpréteur de commande par défaut d'Ubuntu. Si vous utilisez un autre interpréteur de commande, comme **csh**, les commandes indiquées pourraient être différentes.</note> <|> bourne
20 Il manque les traits d’union. [[116:128]] => <note>Les techniques expliquées ci-dessous s'appliquent à la famille d'interpréteurs de commandes « Bourne Shell », c'est à dire **sh**, **ksh**, et **bash**. Ce dernier est l'interpréteur de commande par défaut d'Ubuntu. Si vous utilisez un autre interpréteur de commande, comme **csh**, les commandes indiquées pourraient être différentes.</note> <|> c'est à dire => suggestions : ['c’est-à-dire']
20 Mot inconnu : sh [[131:133]] => <note>Les techniques expliquées ci-dessous s'appliquent à la famille d'interpréteurs de commandes « Bourne Shell », c'est à dire **sh**, **ksh**, et **bash**. Ce dernier est l'interpréteur de commande par défaut d'Ubuntu. Si vous utilisez un autre interpréteur de commande, comme **csh**, les commandes indiquées pourraient être différentes.</note> <|> sh
20 Mot inconnu : ksh [[139:142]] => <note>Les techniques expliquées ci-dessous s'appliquent à la famille d'interpréteurs de commandes « Bourne Shell », c'est à dire **sh**, **ksh**, et **bash**. Ce dernier est l'interpréteur de commande par défaut d'Ubuntu. Si vous utilisez un autre interpréteur de commande, comme **csh**, les commandes indiquées pourraient être différentes.</note> <|> ksh
20 Mot inconnu : csh [[282:285]] => <note>Les techniques expliquées ci-dessous s'appliquent à la famille d'interpréteurs de commandes « Bourne Shell », c'est à dire **sh**, **ksh**, et **bash**. Ce dernier est l'interpréteur de commande par défaut d'Ubuntu. Si vous utilisez un autre interpréteur de commande, comme **csh**, les commandes indiquées pourraient être différentes.</note> <|> csh
24 Mot inconnu : fr_FR [[154:159]] => Pour affecter une valeur à une variable d'environnement **existante**, nous utilisons une expression d'affectation. Par exemple pour assigner la valeur « fr_FR.UTF-8 » à la variable « LANG », nous utilisons la commande suivante : <|> fr_fr
24 Mot inconnu : LANG [[184:188]] => Pour affecter une valeur à une variable d'environnement **existante**, nous utilisons une expression d'affectation. Par exemple pour assigner la valeur « fr_FR.UTF-8 » à la variable « LANG », nous utilisons la commande suivante : <|> lang
32 Mot inconnu : EDITOR [[156:162]] => Une variable de shell peut être exportée pour devenir une variable d'environnement grâce à la commande **export**. Pour créer la variable d'environnement « EDITOR » et lui assigner la valeur « nano », plusieurs méthodes peuvent être utilisée. Voici celle que nous proposons : <|> editor
32 Mot inconnu : nano [[193:197]] => Une variable de shell peut être exportée pour devenir une variable d'environnement grâce à la commande **export**. Pour créer la variable d'environnement « EDITOR » et lui assigner la valeur « nano », plusieurs méthodes peuvent être utilisée. Voici celle que nous proposons : <|> nano
32 Accord erroné : “méthodes” et “utilisée” ne sont pas accordés. Mettez au pluriel. [[233:241]] => Une variable de shell peut être exportée pour devenir une variable d'environnement grâce à la commande **export**. Pour créer la variable d'environnement « EDITOR » et lui assigner la valeur « nano », plusieurs méthodes peuvent être utilisée. Voici celle que nous proposons : <|> utilisée => suggestions : ['utilisées']

47 Mot inconnu : printenv [[14:22]] => La commande **printenv** affiche les noms et les valeurs de toutes les variables d'environnement définies : <|> printenv

53 Mot inconnu : printenv [[106:114]] => Pour examiner la valeur d'une variable en particulier, il suffit de spécifier son nom après la commande **printenv** : <|> printenv

71 Mot inconnu : Desktop [[216:223]] => Le signe dollar peut être utilisé pour récupérer la valeur des variables d'environnement dans les lignes de commandes. Par exemple, la commande suivante peut être utilisée pour lister les fichiers du bureau (dossier Desktop) de l'utilisateur courant : <|> desktop
79 Mot inconnu : POSIXLY_CORRECT [[180:195]] => Dans la plupart des cas, affecter une valeur vide à une variable d'environnement suffit à annuler son effet, comme dans l'exemple ci-dessous. Cependant certaines variables comme « POSIXLY_CORRECT » ont une influence sur les programmes du fait même de leur existence, et ce, même si leur valeur est vide. <|> posixly_correct

85 Mot inconnu : unset [[14:19]] => La commande **unset** peut être utilisée pour supprimer complètement une variable d'environnement : <|> unset

103 Il manque les traits d’union. [[212:224]] => Les variables d'environnement ont une portée locale. Ce qui signifie que leur valeur est spécifique au processus dans lequel ou pour lequel elles ont été définies. Ainsi si vous ouvrez deux terminaux différents, c'est à dire deux processus **bash** différents, et que vous changez la valeur d'une variable d'environnement dans un terminal, ce changement n'affectera pas l'autre terminal ni aucun autre programme. Ce changement est local, il affecte le processus dans lequel il a été effectué, sans aucune influence sur les autres processus externes. <|> c'est à dire => suggestions : ['c’est-à-dire']

107 Mot inconnu : gedit [[187:192]] => Lorsqu'un processus enfant est créé à partir d'un processus parent, le processus enfant hérite de toutes les variables du processus parent, avec leurs valeurs. Par exemple, si on lance **gedit** depuis un terminal, **bash** le processus parent, engendre le processus enfant **gedit**. <|> gedit
107 Mot inconnu : gedit [[276:281]] => Lorsqu'un processus enfant est créé à partir d'un processus parent, le processus enfant hérite de toutes les variables du processus parent, avec leurs valeurs. Par exemple, si on lance **gedit** depuis un terminal, **bash** le processus parent, engendre le processus enfant **gedit**. <|> gedit
109 Mot inconnu : LANG [[79:83]] => En conséquence, si nous définissons la valeur de la variable d'environnement « LANG » dans un terminal, et que nous lançons depuis le même terminal **gedit**, celui-ci héritera de la nouvelle valeur de la variable LANG, et s'affichera donc dans une langue différente du reste des applications du système. <|> lang
109 Mot inconnu : gedit [[150:155]] => En conséquence, si nous définissons la valeur de la variable d'environnement « LANG » dans un terminal, et que nous lançons depuis le même terminal **gedit**, celui-ci héritera de la nouvelle valeur de la variable LANG, et s'affichera donc dans une langue différente du reste des applications du système. <|> gedit
109 Mot inconnu : LANG [[214:218]] => En conséquence, si nous définissons la valeur de la variable d'environnement « LANG » dans un terminal, et que nous lançons depuis le même terminal **gedit**, celui-ci héritera de la nouvelle valeur de la variable LANG, et s'affichera donc dans une langue différente du reste des applications du système. <|> lang

111 Mot inconnu : gedit [[96:101]] => Notez bien que du fait de la portée des variables, expliquée plus haut, une fois le processus **gedit** lancé, les modifications de variables dans le processus parent ne seront pas répercutées sur le processus enfant et vice-versa. <|> gedit
114 Mot inconnu : éxecutant [[104:113]] => Dans l'environnement de bureau GNOME, « gnome-session » est le processus parent de tous les processus s'éxecutant dans cet environnement. Ceci constitue (avec le principe d'héritage) le point clé qui nous permet d'influencer le comportement de notre environnement de bureau grâce aux variables d'environnement. L'équivalent pour KDE est « kde-session ». <|> éxecutant
114 Mot inconnu : KDE [[329:332]] => Dans l'environnement de bureau GNOME, « gnome-session » est le processus parent de tous les processus s'éxecutant dans cet environnement. Ceci constitue (avec le principe d'héritage) le point clé qui nous permet d'influencer le comportement de notre environnement de bureau grâce aux variables d'environnement. L'équivalent pour KDE est « kde-session ». <|> kde
114 Mot inconnu : kde-session [[339:350]] => Dans l'environnement de bureau GNOME, « gnome-session » est le processus parent de tous les processus s'éxecutant dans cet environnement. Ceci constitue (avec le principe d'héritage) le point clé qui nous permet d'influencer le comportement de notre environnement de bureau grâce aux variables d'environnement. L'équivalent pour KDE est « kde-session ». <|> kde-session

119 Mot inconnu : LANG [[84:88]] => Le nom des variables d'environnement est sensible à la casse. Ce qui signifie que //LANG// n'est pas la même variable que //lang//, //Lang// ou encore //laNg//. <|> lang
119 Mot inconnu : lang [[124:128]] => Le nom des variables d'environnement est sensible à la casse. Ce qui signifie que //LANG// n'est pas la même variable que //lang//, //Lang// ou encore //laNg//. <|> lang
119 Mot inconnu : Lang [[134:138]] => Le nom des variables d'environnement est sensible à la casse. Ce qui signifie que //LANG// n'est pas la même variable que //lang//, //Lang// ou encore //laNg//. <|> lang
119 Mot inconnu : laNg [[153:157]] => Le nom des variables d'environnement est sensible à la casse. Ce qui signifie que //LANG// n'est pas la même variable que //lang//, //Lang// ou encore //laNg//. <|> lang
126 Mot inconnu : LANG [[201:205]] => L'interpréteur de commandes **bash** nous permet de définir une ou plusieurs variables d'environnement et de lancer un processus enfant en une seule commande. Par exemple, pour définir les variables « LANG » et « FOO », puis lancer **gedit**, nous pouvons utiliser la commande : <|> lang
126 Mot inconnu : FOO [[213:216]] => L'interpréteur de commandes **bash** nous permet de définir une ou plusieurs variables d'environnement et de lancer un processus enfant en une seule commande. Par exemple, pour définir les variables « LANG » et « FOO », puis lancer **gedit**, nous pouvons utiliser la commande : <|> foo
126 Mot inconnu : gedit [[234:239]] => L'interpréteur de commandes **bash** nous permet de définir une ou plusieurs variables d'environnement et de lancer un processus enfant en une seule commande. Par exemple, pour définir les variables « LANG » et « FOO », puis lancer **gedit**, nous pouvons utiliser la commande : <|> gedit
132 Mot inconnu : processsus [[91:101]] => Remarque : En utilisant cette commande, les nouvelles valeurs sont uniquement assignées au processsus enfant, ici **gedit**. Les variables du shell conservent leurs valeurs d'origine. Ainsi, dans cet exemple, la valeur de « LANG » restera inchangée (sans doute fr_FR.UTF-8 pour vous) pour les commandes suivantes dans le terminal. <|> processsus
132 Mot inconnu : gedit [[116:121]] => Remarque : En utilisant cette commande, les nouvelles valeurs sont uniquement assignées au processsus enfant, ici **gedit**. Les variables du shell conservent leurs valeurs d'origine. Ainsi, dans cet exemple, la valeur de « LANG » restera inchangée (sans doute fr_FR.UTF-8 pour vous) pour les commandes suivantes dans le terminal. <|> gedit
132 Mot inconnu : LANG [[224:228]] => Remarque : En utilisant cette commande, les nouvelles valeurs sont uniquement assignées au processsus enfant, ici **gedit**. Les variables du shell conservent leurs valeurs d'origine. Ainsi, dans cet exemple, la valeur de « LANG » restera inchangée (sans doute fr_FR.UTF-8 pour vous) pour les commandes suivantes dans le terminal. <|> lang
132 Mot inconnu : fr_FR [[261:266]] => Remarque : En utilisant cette commande, les nouvelles valeurs sont uniquement assignées au processsus enfant, ici **gedit**. Les variables du shell conservent leurs valeurs d'origine. Ainsi, dans cet exemple, la valeur de « LANG » restera inchangée (sans doute fr_FR.UTF-8 pour vous) pour les commandes suivantes dans le terminal. <|> fr_fr
143 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[18:21]] =>   * **~/.profile** - C'est probablement le meilleur endroit pour placer une définition de variable d'environnement. En effet, il est exécuté automatiquement par le gestionnaire de connexion lors du démarrage d'une session graphique, mais aussi lors du démarrage d'une session en mode console texte. <|>  -  => suggestions : [' – ', ' — ', ' − ']
145 Mot inconnu : bash_profile [[9:21]] =>   * **~/.bash_profile** ou **~/.bash_login** - Si l'un de ces fichiers existe, il sera exécuté par **Bash** préférentiellement à **~/.profile** lors d'une connexion sur une console. (Bash utilisera ~/.bash_profile de préférence à ~/.bash_login). Cependant, ces fichiers n'auront par défaut aucune influence sur une session en mode graphique. <|> bash_profile
145 Mot inconnu : bash_login [[32:42]] =>   * **~/.bash_profile** ou **~/.bash_login** - Si l'un de ces fichiers existe, il sera exécuté par **Bash** préférentiellement à **~/.profile** lors d'une connexion sur une console. (Bash utilisera ~/.bash_profile de préférence à ~/.bash_login). Cependant, ces fichiers n'auront par défaut aucune influence sur une session en mode graphique. <|> bash_login
145 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[44:47]] =>   * **~/.bash_profile** ou **~/.bash_login** - Si l'un de ces fichiers existe, il sera exécuté par **Bash** préférentiellement à **~/.profile** lors d'une connexion sur une console. (Bash utilisera ~/.bash_profile de préférence à ~/.bash_login). Cependant, ces fichiers n'auront par défaut aucune influence sur une session en mode graphique. <|>  -  => suggestions : [' – ', ' — ', ' − ']
145 Mot inconnu : bash_profile [[201:213]] =>   * **~/.bash_profile** ou **~/.bash_login** - Si l'un de ces fichiers existe, il sera exécuté par **Bash** préférentiellement à **~/.profile** lors d'une connexion sur une console. (Bash utilisera ~/.bash_profile de préférence à ~/.bash_login). Cependant, ces fichiers n'auront par défaut aucune influence sur une session en mode graphique. <|> bash_profile
145 Mot inconnu : bash_login [[233:243]] =>   * **~/.bash_profile** ou **~/.bash_login** - Si l'un de ces fichiers existe, il sera exécuté par **Bash** préférentiellement à **~/.profile** lors d'une connexion sur une console. (Bash utilisera ~/.bash_profile de préférence à ~/.bash_login). Cependant, ces fichiers n'auront par défaut aucune influence sur une session en mode graphique. <|> bash_login
147 Mot inconnu : bashrc [[9:15]] =>   * **~/.bashrc** - Du fait de la manière dont Ubuntu configure par défaut les divers fichiers de scripts, c'est sans doute l'endroit le plus facile pour définir des variables. La configuration par défaut garantit a peu près que ce fichier sera exécuté à chaque invocation de *bash* ainsi que lors de la connexion à l'environnement graphique. Cependant du point de vue des performances, ce n'est pas l'idéal car les variables seront inutilement redéfinies à chaque fois. (NdT : à chaque fois que vous ouvrez un terminal par exemple?) <|> bashrc
147 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[17:20]] =>   * **~/.bashrc** - Du fait de la manière dont Ubuntu configure par défaut les divers fichiers de scripts, c'est sans doute l'endroit le plus facile pour définir des variables. La configuration par défaut garantit a peu près que ce fichier sera exécuté à chaque invocation de *bash* ainsi que lors de la connexion à l'environnement graphique. Cependant du point de vue des performances, ce n'est pas l'idéal car les variables seront inutilement redéfinies à chaque fois. (NdT : à chaque fois que vous ouvrez un terminal par exemple?) <|>  -  => suggestions : [' – ', ' — ', ' − ']
147 Confusion. [[214:224]] =>   * **~/.bashrc** - Du fait de la manière dont Ubuntu configure par défaut les divers fichiers de scripts, c'est sans doute l'endroit le plus facile pour définir des variables. La configuration par défaut garantit a peu près que ce fichier sera exécuté à chaque invocation de *bash* ainsi que lors de la connexion à l'environnement graphique. Cependant du point de vue des performances, ce n'est pas l'idéal car les variables seront inutilement redéfinies à chaque fois. (NdT : à chaque fois que vous ouvrez un terminal par exemple?) <|> a peu près => suggestions : ['à peu près']
147 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[407:411]] =>   * **~/.bashrc** - Du fait de la manière dont Ubuntu configure par défaut les divers fichiers de scripts, c'est sans doute l'endroit le plus facile pour définir des variables. La configuration par défaut garantit a peu près que ce fichier sera exécuté à chaque invocation de *bash* ainsi que lors de la connexion à l'environnement graphique. Cependant du point de vue des performances, ce n'est pas l'idéal car les variables seront inutilement redéfinies à chaque fois. (NdT : à chaque fois que vous ouvrez un terminal par exemple?) <|>  car => suggestions : [', car']

151 Accord de genre erroné : « une session » est féminin, « utilisateur » est masculin. [[89:100]] => Les variables d'environnement qui affectent l'ensemble du système (plutôt qu'une session utilisateur particulière) peuvent être définies dans l'un des nombreux scripts au niveau système, qui s'exécutent lors du chargement du système ou de l'environnement graphique. Ces définitions peuvent être placées dans plusieurs fichiers sur Ubuntu : <|> utilisateur => suggestions : ['utilisatrice']
153 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[20:23]] =>   * **/etc/profile** - Ce fichier est exécuté quelle que soit la méthode de connexion utilisée : une console, une connexion distante ssh, ou une connexion en mode graphique. C'est probablement l'emplacement qui vous sera conseillé par les vieux routiers d'UNIX pour gérer vos variables d'environnement. Cependant sur Ubuntu ce script fait quelques vérifications puis invoque **/etc/bash.bashrc**. <|>  -  => suggestions : [' – ', ' — ', ' − ']
153 Mot inconnu : ssh [[133:136]] =>   * **/etc/profile** - Ce fichier est exécuté quelle que soit la méthode de connexion utilisée : une console, une connexion distante ssh, ou une connexion en mode graphique. C'est probablement l'emplacement qui vous sera conseillé par les vieux routiers d'UNIX pour gérer vos variables d'environnement. Cependant sur Ubuntu ce script fait quelques vérifications puis invoque **/etc/bash.bashrc**. <|> ssh
155 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[24:27]] =>   * **/etc/bash.bashrc** - C'est la version au niveau système du fichier utilisateur **~/.bashrc**. Par défaut Ubuntu est configuré pour exécuter ce fichier quelle que soit la méthode de connexion, sur une console ou en environnement graphique. <|>  -  => suggestions : [' – ', ' — ', ' − ']
155 Mot inconnu : bashrc [[90:96]] =>   * **/etc/bash.bashrc** - C'est la version au niveau système du fichier utilisateur **~/.bashrc**. Par défaut Ubuntu est configuré pour exécuter ce fichier quelle que soit la méthode de connexion, sur une console ou en environnement graphique. <|> bashrc
155 Accord erroné : “Ubuntu” et “configuré” ne sont pas accordés. Mettez au féminin pluriel. [[122:131]] =>   * **/etc/bash.bashrc** - C'est la version au niveau système du fichier utilisateur **~/.bashrc**. Par défaut Ubuntu est configuré pour exécuter ce fichier quelle que soit la méthode de connexion, sur une console ou en environnement graphique. <|> configuré => suggestions : ['configurée']
157 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[24:27]] =>   * **/etc/environment** - Ce fichier est spécialement conçu pour recevoir les définitions de variables d'environnement au niveau système. Ce n'est pas un fichier de script, mais plutôt un fichier de déclarations de variables, ligne par ligne. En particulier, il contient les définitions des variables de langue et de la variable **PATH** au niveau système. <|>  -  => suggestions : [' – ', ' — ', ' − ']
157 Mot inconnu : PATH [[332:336]] =>   * **/etc/environment** - Ce fichier est spécialement conçu pour recevoir les définitions de variables d'environnement au niveau système. Ce n'est pas un fichier de script, mais plutôt un fichier de déclarations de variables, ligne par ligne. En particulier, il contient les définitions des variables de langue et de la variable **PATH** au niveau système. <|> path

172 Accord de nombre erroné avec « Exemples ». [[2:10]] => ^ Variable ^ Exemples de valeur ^ Rôle ^ <|> variable => suggestions : ['Variables']
172 Accord de nombre erroné avec « Variable ». [[13:21]] => ^ Variable ^ Exemples de valeur ^ Rôle ^ <|> exemples => suggestions : ['Exemple']

173 Mot inconnu : PATH [[1:5]] => |PATH|/usr/sbin:/usr/bin:/sbin:/bin|Lorsque vous tapez une commande, le système la cherche dans les dossiers spécifiés par la variable PATH, dans l'ordre où ils sont indiqués.| <|> path
173 Mot inconnu : PATH [[135:139]] => |PATH|/usr/sbin:/usr/bin:/sbin:/bin|Lorsque vous tapez une commande, le système la cherche dans les dossiers spécifiés par la variable PATH, dans l'ordre où ils sont indiqués.| <|> path

174 Mot inconnu : MANPATH [[1:8]] => |MANPATH|/usr/share/man:/usr/local/man|Liste de dossiers où le système doit chercher les pages de manuel.| <|> manpath

175 Mot inconnu : LD_LIBRARY_PATH [[1:16]] => |LD_LIBRARY_PATH|/opt/app/oracle/lib|Liste de dossiers où le système doit chercher les bibliothèques d'exécution en plus de celles définies dans //ld// et ///etc/ld.so.conf//| <|> ld_library_path
175 Mot inconnu : ld [[147:149]] => |LD_LIBRARY_PATH|/opt/app/oracle/lib|Liste de dossiers où le système doit chercher les bibliothèques d'exécution en plus de celles définies dans //ld// et ///etc/ld.so.conf//| <|> ld

176 Mot inconnu : TMPDIR [[1:7]] => |TMPDIR|/var/tmp|Le dossier utilisé pour les fichiers temporaires créés par de nombreux programmes| <|> tmpdir

179 Espace(s) surnuméraire(s) à supprimer. [[38:40]] => ==== Variables de paramètres régionaux  ==== <|>    => suggestions : [' ']

183 Il manque un espace à côté du tiret. [[224:226]] => Les valeurs qui peuvent être assignées à ces variables d'environnement correspondent aux paramètres régionaux installés sur le système. Pour voir quels sont ces paramètres installés, vous pouvez utiliser la commande **locale -a**. les paramètres régionaux peuvent être générés par la commande **locale-gen**. Cependant, Ubuntu inclut des paramètres régionaux prédéfinis dans les paquets de langue (language-pack-xx) disponibles au travers du système de gestion de paquets <|>  - => suggestions : [' – ', ' — ']
183 Mot inconnu : locale-gen [[295:305]] => Les valeurs qui peuvent être assignées à ces variables d'environnement correspondent aux paramètres régionaux installés sur le système. Pour voir quels sont ces paramètres installés, vous pouvez utiliser la commande **locale -a**. les paramètres régionaux peuvent être générés par la commande **locale-gen**. Cependant, Ubuntu inclut des paramètres régionaux prédéfinis dans les paquets de langue (language-pack-xx) disponibles au travers du système de gestion de paquets <|> locale-gen
183 Mot inconnu : language-pack-xx [[398:414]] => Les valeurs qui peuvent être assignées à ces variables d'environnement correspondent aux paramètres régionaux installés sur le système. Pour voir quels sont ces paramètres installés, vous pouvez utiliser la commande **locale -a**. les paramètres régionaux peuvent être générés par la commande **locale-gen**. Cependant, Ubuntu inclut des paramètres régionaux prédéfinis dans les paquets de langue (language-pack-xx) disponibles au travers du système de gestion de paquets <|> language-pack-xx

187 Mot inconnu : LANG [[1:5]] => |LANG| Le paramètre linguistique de base utilisé par les applications du système, tant qu'il n'est pas contredit par une autre variable| <|> lang

188 Mot inconnu : LC_CTYPE [[1:9]] => |LC_CTYPE|Le jeu de caractères utilisé pour saisir et afficher du texte| <|> lc_ctype

189 Mot inconnu : LC_NUMERIC [[1:11]] => |LC_NUMERIC|Mise en forme des valeurs numériques non-monétaires| <|> lc_numeric

190 Mot inconnu : LC_TIME [[1:8]] => |LC_TIME|Format de la date et de l'heure| <|> lc_time

191 Mot inconnu : LC_COLLATE [[1:11]] => |LC_COLLATE|Comment trier diverses informations, définit par exemple l'ordre alphabétique afin que les éléments puissent être triés alphabétiquement en utilisant la commande **sort**| <|> lc_collate

192 Mot inconnu : LC_MONETARY [[1:12]] => |LC_MONETARY|Format des valeurs numériques monétaires| <|> lc_monetary

193 Mot inconnu : LC_MESSAGES [[1:12]] => |LC_MESSAGES|Langue utilisée pour afficher les messages à l'utilisateur| <|> lc_messages

194 Mot inconnu : LC_PAPER [[1:9]] => |LC_PAPER|Définitions des formats de papier standard| <|> lc_paper

195 Mot inconnu : LC_NAME [[1:8]] => |LC_NAME|Format des noms| <|> lc_name

196 Mot inconnu : LC_ADDRESS [[1:11]] => |LC_ADDRESS|Format des adresses| <|> lc_address

197 Mot inconnu : LC_TELEPHONE [[1:13]] => |LC_TELEPHONE|Structure des numéros de téléphone| <|> lc_telephone

198 Mot inconnu : LC_MEASUREMENT [[1:15]] => |LC_MEASUREMENT|Unités de mesure à utiliser| <|> lc_measurement

199 Mot inconnu : LC_IDENTIFICATION [[1:18]] => |LC_IDENTIFICATION|| <|> lc_identification

200 Mot inconnu : LC_ALL [[1:7]] => |LC_ALL|Cette variable a un rôle puissant pour écraser les autres paramètres régionaux. Lorsqu'une valeur lui est affectée, les applications utiliseront cette valeur quelle que soient les valeurs des autres variables| <|> lc_all
200 Accord avec “les valeurs”. Utilisez le pluriel. [[166:172]] => |LC_ALL|Cette variable a un rôle puissant pour écraser les autres paramètres régionaux. Lorsqu'une valeur lui est affectée, les applications utiliseront cette valeur quelle que soient les valeurs des autres variables| <|> quelle => suggestions : ['quelles']

202 Mot inconnu : US-English [[239:249]] => En utilisant diverses combinaisons pour ces variables de paramètres régionaux, vous pouvez obtenir des modifications intéressantes du comportement de votre système. Par exemple, votre système peut afficher les messages en anglo-américain (US-English), tout en utilisant les formats de date, nombres et unités de mesure les plus courants en Europe. <|> us-english

214 Accord de nombre erroné avec « propres ». [[102:106]] => En général, ces variables ne sont pas respectées par les applications en mode graphique qui intègrent leur propres éditeurs et afficheurs de texte. La plupart des environnements de bureau proposent en outre leur propre système de sélection des applications préférées. <|> leur => suggestions : ['leurs']
214 Accord de nombre erroné : « propres » devrait être au singulier. [[107:114]] => En général, ces variables ne sont pas respectées par les applications en mode graphique qui intègrent leur propres éditeurs et afficheurs de texte. La plupart des environnements de bureau proposent en outre leur propre système de sélection des applications préférées. <|> propres => suggestions : ['propre']

220 Mot inconnu : EDITOR [[1:7]] => |EDITOR|usr/bin/nano|Le nom de l'éditeur de texte préféré pour les utilisateurs. Il sera utilisé par des commandes telles que **mutt** ou **sudoedit**| <|> editor
220 Mot inconnu : usr [[8:11]] => |EDITOR|usr/bin/nano|Le nom de l'éditeur de texte préféré pour les utilisateurs. Il sera utilisé par des commandes telles que **mutt** ou **sudoedit**| <|> usr
220 Mot inconnu : mutt [[128:132]] => |EDITOR|usr/bin/nano|Le nom de l'éditeur de texte préféré pour les utilisateurs. Il sera utilisé par des commandes telles que **mutt** ou **sudoedit**| <|> mutt
220 Mot inconnu : sudoedit [[140:148]] => |EDITOR|usr/bin/nano|Le nom de l'éditeur de texte préféré pour les utilisateurs. Il sera utilisé par des commandes telles que **mutt** ou **sudoedit**| <|> sudoedit

221 Mot inconnu : VISUAL [[1:7]] => |VISUAL|/usr/bin/gedit|A le même rôle que la variable « EDITOR » mais est prioritaire. Si elle n'a pas de valeur « EDITOR » définie la valeur de l'application qui sera utilisée.| <|> visual
221 Mot inconnu : EDITOR [[56:62]] => |VISUAL|/usr/bin/gedit|A le même rôle que la variable « EDITOR » mais est prioritaire. Si elle n'a pas de valeur « EDITOR » définie la valeur de l'application qui sera utilisée.| <|> editor
221 Mot inconnu : EDITOR [[115:121]] => |VISUAL|/usr/bin/gedit|A le même rôle que la variable « EDITOR » mais est prioritaire. Si elle n'a pas de valeur « EDITOR » définie la valeur de l'application qui sera utilisée.| <|> editor

222 Mot inconnu : BROWSER [[1:8]] => |BROWSER|/usr/bin/lynx|Le nom du navigateur Web préféré pour les utilisateurs| <|> browser

228 Mot inconnu : DISPLAY [[1:8]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> display
228 Mot inconnu : localhost [[16:25]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> localhost
228 Il manque un espace. [[26:28]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> 10 => suggestions : [' 10']
228 Mot inconnu : terminal01 [[33:43]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> terminal01
228 Il manque un espace. [[44:45]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> 0 => suggestions : [' 0']
228 Mot inconnu : gdm [[928:931]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> gdm
228 Mot inconnu : ssh [[939:942]] => |DISPLAY|:0.0\\ localhost:10.0\\ terminal01:0.0|Cette variable est utilisée pour indiquer aux applications où afficher l'interface graphique utilisateur. Sa valeur est constituée de trois parties : un nom d'hôte suivi de deux-points (:), un numéro d'affichage suivi d'un point (.) et un numéro d'écran. Le nom d'hôte peut être utilisé pour déporter l'affichage sur une machine distante du réseau. Il peut être omis si l'affichage se fait sur la machine locale. Le numéro d'affichage permet de choisir un parmi plusieurs serveurs X tournant sur la même machine (Ubuntu utilise plusieurs serveurs X pour permettre plusieurs sessions graphiques simultanées). Le numéro d'écran permet de choisir parmi plusieurs moniteurs gérés par le même serveur X. Sa valeur est généralement 0, et il est rarement utile de la modifier manuellement car cela peut être réglé automatiquement et intelligemment par de nombreuses applications comme **gdm** ou **ssh** lorsque c'est nécessaire.| <|> ssh

229 Mot inconnu : XDG_DATA_HOME [[1:14]] => |XDG_DATA_HOME|~/.local/share|Indique aux applications conformes aux spécifications freedesktop.org, où placer les données de l'utilisateur. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications.| <|> xdg_data_home
229 Mot inconnu : share [[24:29]] => |XDG_DATA_HOME|~/.local/share|Indique aux applications conformes aux spécifications freedesktop.org, où placer les données de l'utilisateur. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications.| <|> share
229 Mot inconnu : freedesktop [[84:95]] => |XDG_DATA_HOME|~/.local/share|Indique aux applications conformes aux spécifications freedesktop.org, où placer les données de l'utilisateur. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications.| <|> freedesktop

230 Mot inconnu : XDG_CONFIG_HOME [[1:16]] => |XDG_CONFIG_HOME|~/.local/share|Indique aux applications conformes aux spécifications freedesktop.org, où placer les informations de configuration de l'utilisateur. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> xdg_config_home
230 Mot inconnu : share [[26:31]] => |XDG_CONFIG_HOME|~/.local/share|Indique aux applications conformes aux spécifications freedesktop.org, où placer les informations de configuration de l'utilisateur. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> share
230 Mot inconnu : freedesktop [[86:97]] => |XDG_CONFIG_HOME|~/.local/share|Indique aux applications conformes aux spécifications freedesktop.org, où placer les informations de configuration de l'utilisateur. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> freedesktop

231 Mot inconnu : XDG_DATA_DIRS [[1:14]] => |XDG_DATA_DIRS|/usr/local/share:/usr/share|Une liste de dossiers séparés par deux-points (similaire à **PATH**) indiquant aux applications conformes aux spécifications freedesktop.org, où chercher les données. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> xdg_data_dirs
231 Mot inconnu : PATH [[104:108]] => |XDG_DATA_DIRS|/usr/local/share:/usr/share|Une liste de dossiers séparés par deux-points (similaire à **PATH**) indiquant aux applications conformes aux spécifications freedesktop.org, où chercher les données. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> path
231 Mot inconnu : freedesktop [[168:179]] => |XDG_DATA_DIRS|/usr/local/share:/usr/share|Une liste de dossiers séparés par deux-points (similaire à **PATH**) indiquant aux applications conformes aux spécifications freedesktop.org, où chercher les données. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> freedesktop

232 Mot inconnu : XDG_CONFIG_DIRS [[1:16]] => |XDG_CONFIG_DIRS|/etc/xdg|Une liste de dossiers séparés par deux points (similaire à **PATH**) indiquant aux applications conformes aux spécifications freedesktop.org, où chercher les informations de configuration. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> xdg_config_dirs
232 Mot inconnu : PATH [[87:91]] => |XDG_CONFIG_DIRS|/etc/xdg|Une liste de dossiers séparés par deux points (similaire à **PATH**) indiquant aux applications conformes aux spécifications freedesktop.org, où chercher les informations de configuration. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> path
232 Mot inconnu : freedesktop [[151:162]] => |XDG_CONFIG_DIRS|/etc/xdg|Une liste de dossiers séparés par deux points (similaire à **PATH**) indiquant aux applications conformes aux spécifications freedesktop.org, où chercher les informations de configuration. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> freedesktop

233 Mot inconnu : XDG_CACHE_HOME [[1:15]] => |XDG_CACHE_HOME|~/.cache|un emplacement utilisé par les applications conformes aux spécifications freedesktop.org, pour mettre en cache les données temporaires. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> xdg_cache_home
233 Mot inconnu : freedesktop [[98:109]] => |XDG_CACHE_HOME|~/.cache|un emplacement utilisé par les applications conformes aux spécifications freedesktop.org, pour mettre en cache les données temporaires. En général cette variable n'est pas définie puisqu'une valeur de secours par défaut est implémentée dans les spécifications| <|> freedesktop

235 Mot inconnu : XDG_ [[14:18]] => Les variables XDG_* sont définies pour chaque utilisateur dans le fichier ~/.config/user-dirs.dirs. Leurs valeurs par défaut sont récupérés dans le fichier /etc/xdg/user-dirs.defaults. <|> xdg_
235 Mot inconnu : user-dirs [[84:93]] => Les variables XDG_* sont définies pour chaque utilisateur dans le fichier ~/.config/user-dirs.dirs. Leurs valeurs par défaut sont récupérés dans le fichier /etc/xdg/user-dirs.defaults. <|> user-dirs
235 Mot inconnu : dirs [[94:98]] => Les variables XDG_* sont définies pour chaque utilisateur dans le fichier ~/.config/user-dirs.dirs. Leurs valeurs par défaut sont récupérés dans le fichier /etc/xdg/user-dirs.defaults. <|> dirs
235 Accord erroné : “valeurs” et “récupérés” ne sont pas accordés. Mettez au féminin pluriel. [[130:139]] => Les variables XDG_* sont définies pour chaque utilisateur dans le fichier ~/.config/user-dirs.dirs. Leurs valeurs par défaut sont récupérés dans le fichier /etc/xdg/user-dirs.defaults. <|> récupérés => suggestions : ['récupérées']

241 Mot inconnu : DIR [[10:13]] => Remplacez DIR par un nom de variable présent dans /etc/xdg/user-dirs.defaults et path par le dossier de votre choix. <|> dir
241 Mot inconnu : path [[81:85]] => Remplacez DIR par un nom de variable présent dans /etc/xdg/user-dirs.defaults et path par le dossier de votre choix. <|> path

249 Mot inconnu : Desktop [[130:137]] => Si vous avez une ancienne installation d'Ubuntu que vous mettez à jour, il est probable que vous gardiez les anciens répertoires (Desktop pour le bureau, pas de répertoire Téléchargements, etc). <|> desktop

257 Mot inconnu : NAUTILUS_SCRIPT_SELECTED_FILE_PATHS [[1:36]] => |NAUTILUS_SCRIPT_SELECTED_FILE_PATHS|/home/ifireball/about.html|Cette variable d'environnement est définie par **nautilus**, le gestionnaire de fichiers de GNOME, lorsqu'un script est appelé à l'aide d'un clic droit. Elle consiste en une liste, ligne par ligne, des fichiers actuellement sélectionnés. Cette variable ne sera définie que s'il s'agit de fichiers locaux, ne provenant pas d'un partage réseau ou d'une connexion ssh.| <|> nautilus_script_selected_file_paths
257 Mot inconnu : nautilus [[113:121]] => |NAUTILUS_SCRIPT_SELECTED_FILE_PATHS|/home/ifireball/about.html|Cette variable d'environnement est définie par **nautilus**, le gestionnaire de fichiers de GNOME, lorsqu'un script est appelé à l'aide d'un clic droit. Elle consiste en une liste, ligne par ligne, des fichiers actuellement sélectionnés. Cette variable ne sera définie que s'il s'agit de fichiers locaux, ne provenant pas d'un partage réseau ou d'une connexion ssh.| <|> nautilus
257 Mot inconnu : ssh [[425:428]] => |NAUTILUS_SCRIPT_SELECTED_FILE_PATHS|/home/ifireball/about.html|Cette variable d'environnement est définie par **nautilus**, le gestionnaire de fichiers de GNOME, lorsqu'un script est appelé à l'aide d'un clic droit. Elle consiste en une liste, ligne par ligne, des fichiers actuellement sélectionnés. Cette variable ne sera définie que s'il s'agit de fichiers locaux, ne provenant pas d'un partage réseau ou d'une connexion ssh.| <|> ssh

258 Mot inconnu : NAUTILUS_SCRIPT_SELECTED_URIS [[1:30]] => |NAUTILUS_SCRIPT_SELECTED_URIS|file:/home/ifireball/about.html|Cette variable d'environnement est définie par **nautilus**, le gestionnaire de fichiers de GNOME, lorsqu'un script est appelé à l'aide d'un clic droit. Elle consiste en une liste, ligne par ligne, des adresses (URI) des fichiers actuellement sélectionnés.| <|> nautilus_script_selected_uris
258 Mot inconnu : nautilus [[112:120]] => |NAUTILUS_SCRIPT_SELECTED_URIS|file:/home/ifireball/about.html|Cette variable d'environnement est définie par **nautilus**, le gestionnaire de fichiers de GNOME, lorsqu'un script est appelé à l'aide d'un clic droit. Elle consiste en une liste, ligne par ligne, des adresses (URI) des fichiers actuellement sélectionnés.| <|> nautilus

259 Mot inconnu : NAUTILUS_SCRIPT_CURRENT_URI [[1:28]] => |NAUTILUS_SCRIPT_CURRENT_URI|file:/home/ifireball|Cette variable d’environnement contient l'adresse (URI) de l'emplacement actuellement affiché dans la fenêtre de **nautilus** lorsqu'un script est appelé à l'aide d'un clic droit.| <|> nautilus_script_current_uri
259 Mot inconnu : nautilus [[165:173]] => |NAUTILUS_SCRIPT_CURRENT_URI|file:/home/ifireball|Cette variable d’environnement contient l'adresse (URI) de l'emplacement actuellement affiché dans la fenêtre de **nautilus** lorsqu'un script est appelé à l'aide d'un clic droit.| <|> nautilus

260 Mot inconnu : NAUTILUS_SCRIPT_WINDOW_GEOMETRY [[1:32]] => |NAUTILUS_SCRIPT_WINDOW_GEOMETRY|828x511+251+342|Cette variable d'environnement contient la position à l'écran de la fenêtre de **nautilus** lorsqu'un script est appelé à l'aide d'un clic droit.| <|> nautilus_script_window_geometry
260 Signe de multiplication typographique. [[33:40]] => |NAUTILUS_SCRIPT_WINDOW_GEOMETRY|828x511+251+342|Cette variable d'environnement contient la position à l'écran de la fenêtre de **nautilus** lorsqu'un script est appelé à l'aide d'un clic droit.| <|> 828x511 => suggestions : ['828\xa0×\xa0511']
260 Mot inconnu : x511 [[36:40]] => |NAUTILUS_SCRIPT_WINDOW_GEOMETRY|828x511+251+342|Cette variable d'environnement contient la position à l'écran de la fenêtre de **nautilus** lorsqu'un script est appelé à l'aide d'un clic droit.| <|> x511
260 Mot inconnu : nautilus [[130:138]] => |NAUTILUS_SCRIPT_WINDOW_GEOMETRY|828x511+251+342|Cette variable d'environnement contient la position à l'écran de la fenêtre de **nautilus** lorsqu'un script est appelé à l'aide d'un clic droit.| <|> nautilus

269 Mot inconnu : LD_PRELOAD [[1:11]] => |LD_PRELOAD|/usr/lib/valgrind.so|Cette variable peut être utilisée pour injecter une bibliothèque dynamique personnalisée lors du chargement de l'application en mémoire. Cela peut servir à certaines choses, comme remplacer la bibliothèque d'allocation mémoire intégrée à l'application par une version de débogage, afin de détecter des fuites mémoire.| <|> ld_preload

275 Mot inconnu : gcc [[5:8]] => |CC| gcc | Le nom du compilateur C à utiliser | <|> gcc

276 Mot inconnu : CFLAGS [[1:7]] => |CFLAGS| -o out.o | Une liste d'arguments de débogage / optimisation à passer au compilateur C | <|> cflags

277 Mot inconnu : CXXFLAGS [[1:9]] => |CXXFLAGS| -Wall | Une liste d'arguments de débogage / optimisation à passer au compilateur C++ | <|> cxxflags

278 Mot inconnu : CPPFLAGS [[1:9]] => |CPPFLAGS| -DDEBUG | Une liste d'arguments à passer au préprocesseur / compilateur C/C++ | <|> cppflags
278 Mot inconnu : DDEBUG [[12:18]] => |CPPFLAGS| -DDEBUG | Une liste d'arguments à passer au préprocesseur / compilateur C/C++ | <|> ddebug

279 Mot inconnu : LIBRARY_PATH [[1:13]] => |LIBRARY_PATH| /usr/lib/firefox |Une liste de dossiers (séparés par deux-points) où chercher les fichiers de bibliothèques | <|> library_path

280 Mot inconnu : INCLUDE [[1:8]] => |INCLUDE| /opt/app/src/include | Une liste de dossiers (séparés par deux-points) où chercher les fichiers d'en-têtes | <|> include

281 Mot inconnu : CPATH [[1:6]] => |CPATH| ..:$HOME/include:/usr/local/include | Une liste de dossiers (séparés par deux-points) où chercher les fichiers d'en-têtes | <|> cpath
281 Typographie : un ou trois points ? [[8:10]] => |CPATH| ..:$HOME/include:/usr/local/include | Une liste de dossiers (séparés par deux-points) où chercher les fichiers d'en-têtes | <|> .. => suggestions : ['…', '.']
281 Mot inconnu : include [[17:24]] => |CPATH| ..:$HOME/include:/usr/local/include | Une liste de dossiers (séparés par deux-points) où chercher les fichiers d'en-têtes | <|> include

293 Mot inconnu : USERNAME [[1:9]] => |USERNAME|nom_utilisateur| Le nom de l'utilisateur actuellement connecté. Cette variable est définie par le système. Vous ne devriez certainement pas changer sa valeur manuellement.| <|> username
293 Mot inconnu : nom_utilisateur [[10:25]] => |USERNAME|nom_utilisateur| Le nom de l'utilisateur actuellement connecté. Cette variable est définie par le système. Vous ne devriez certainement pas changer sa valeur manuellement.| <|> nom_utilisateur

294 Mot inconnu : LOGNAME [[1:8]] => |LOGNAME|nom_utilisateur|Similaire à **USER**, certains programmes utilisent celle-ci de préférence à **USER** .| <|> logname
294 Mot inconnu : nom_utilisateur [[9:24]] => |LOGNAME|nom_utilisateur|Similaire à **USER**, certains programmes utilisent celle-ci de préférence à **USER** .| <|> nom_utilisateur

296 Mot inconnu : PWD [[1:4]] => |PWD|/home/utilisateur/Desktop|Le répertoire de travail courant de l'interpréteur de commande.| <|> pwd

297 Espace(s) surnuméraire(s) à supprimer. [[105:107]] => |SHELL|/bin/bash|L'interpréteur de commande préféré de l'utilisateur tel qu'il est défini dans le fichier  « /etc/passwd » .| <|>    => suggestions : [' ']

298 Mot inconnu : POSIXLY_CORRECT [[1:16]] => |POSIXLY_CORRECT|s.o.|L'existence même de cette variable d'environnement, indépendamment de sa valeur, oblige quelques utilitaires à se comporter de manière plus conforme au standard POSIX. Cela peut provoquer le dysfonctionnement de divers outils GNU qui facilitent la vie, mais c'est peut être justement ce qui est recherché pour faire fonctionner correctement de vieux scripts UNIX.| <|> posixly_correct
298 Sigle. Il est recommandé d’ôter les points pour les sigles. (S’il s’agit d’un prénom et d’un nom, mettez un espace.) [[17:21]] => |POSIXLY_CORRECT|s.o.|L'existence même de cette variable d'environnement, indépendamment de sa valeur, oblige quelques utilitaires à se comporter de manière plus conforme au standard POSIX. Cela peut provoquer le dysfonctionnement de divers outils GNU qui facilitent la vie, mais c'est peut être justement ce qui est recherché pour faire fonctionner correctement de vieux scripts UNIX.| <|> s.o. => suggestions : ['SO', 's.\u202fo.']
298 Mot inconnu : POSIX [[183:188]] => |POSIXLY_CORRECT|s.o.|L'existence même de cette variable d'environnement, indépendamment de sa valeur, oblige quelques utilitaires à se comporter de manière plus conforme au standard POSIX. Cela peut provoquer le dysfonctionnement de divers outils GNU qui facilitent la vie, mais c'est peut être justement ce qui est recherché pour faire fonctionner correctement de vieux scripts UNIX.| <|> posix

299 Mot inconnu : HOSTALIASES [[1:12]] => |HOSTALIASES|/etc/host.aliases|Le nom du fichier contenant les alias des noms d'hôtes pour utiliser avec divers logiciels réseau.| <|> hostaliases

300 Mot inconnu : TZDIR [[1:6]] => |TZDIR|/usr/share/zoneinfo|Le chemin du dossier contenant les fichiers d'informations sur les fuseaux horaires (TimeZoneDIRectory). Il est généralement inutile de la définir manuellement car les systèmes cherchent de tels fichiers dans /usr/share/zoneinfo, par défaut.| <|> tzdir
300 Mot inconnu : TimeZoneDIRectory [[112:129]] => |TZDIR|/usr/share/zoneinfo|Le chemin du dossier contenant les fichiers d'informations sur les fuseaux horaires (TimeZoneDIRectory). Il est généralement inutile de la définir manuellement car les systèmes cherchent de tels fichiers dans /usr/share/zoneinfo, par défaut.| <|> timezonedirectory
300 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[186:190]] => |TZDIR|/usr/share/zoneinfo|Le chemin du dossier contenant les fichiers d'informations sur les fuseaux horaires (TimeZoneDIRectory). Il est généralement inutile de la définir manuellement car les systèmes cherchent de tels fichiers dans /usr/share/zoneinfo, par défaut.| <|>  car => suggestions : [', car']

301 Mot inconnu : TZ [[1:3]] => |TZ|IST-2 \\ :Japan | Cette variable était utilisée par les anciens systèmes Unix pour spécifier le fuseau horaire du système. Cependant, Ubuntu et la plupart des systèmes récents utilisent pour cela le fichier /etc/localtime. Elle peut néanmoins être utilisée afin qu'une session utilisateur particulière affiche l'heure pour un fuseau horaire différent de celui du système. La valeur de cette variable peut être soit le nom et le décalage d'un fuseau horaire (premier exemple), soit le nom d'un fichier de zone situé dans /usr/share/zoneinfo (second exemple).| <|> tz
301 Mot inconnu : IST-2 [[4:9]] => |TZ|IST-2 \\ :Japan | Cette variable était utilisée par les anciens systèmes Unix pour spécifier le fuseau horaire du système. Cependant, Ubuntu et la plupart des systèmes récents utilisent pour cela le fichier /etc/localtime. Elle peut néanmoins être utilisée afin qu'une session utilisateur particulière affiche l'heure pour un fuseau horaire différent de celui du système. La valeur de cette variable peut être soit le nom et le décalage d'un fuseau horaire (premier exemple), soit le nom d'un fichier de zone situé dans /usr/share/zoneinfo (second exemple).| <|> ist-2
301 Mot inconnu : Japan [[14:19]] => |TZ|IST-2 \\ :Japan | Cette variable était utilisée par les anciens systèmes Unix pour spécifier le fuseau horaire du système. Cependant, Ubuntu et la plupart des systèmes récents utilisent pour cela le fichier /etc/localtime. Elle peut néanmoins être utilisée afin qu'une session utilisateur particulière affiche l'heure pour un fuseau horaire différent de celui du système. La valeur de cette variable peut être soit le nom et le décalage d'un fuseau horaire (premier exemple), soit le nom d'un fichier de zone situé dans /usr/share/zoneinfo (second exemple).| <|> japan
301 Accord de genre erroné : « une session » est féminin, « utilisateur » est masculin. [[281:292]] => |TZ|IST-2 \\ :Japan | Cette variable était utilisée par les anciens systèmes Unix pour spécifier le fuseau horaire du système. Cependant, Ubuntu et la plupart des systèmes récents utilisent pour cela le fichier /etc/localtime. Elle peut néanmoins être utilisée afin qu'une session utilisateur particulière affiche l'heure pour un fuseau horaire différent de celui du système. La valeur de cette variable peut être soit le nom et le décalage d'un fuseau horaire (premier exemple), soit le nom d'un fichier de zone situé dans /usr/share/zoneinfo (second exemple).| <|> utilisateur => suggestions : ['utilisatrice']

302 Mot inconnu : TERM [[1:5]] => |TERM|xterm|Le nom d'un fichier d'informations sur le terminal situé dans /lib/terminfo, ce fichier indique au programme en mode console comment effectuer certaines tâches telles que l'affichage des couleurs. Il peut être utile de jouer avec cette variable si vous essayez d'utiliser un programme d'émulation de terminal inhabituel, ou si vous essayez de connecter un émulateur de terminal matériel par le port série et que vous n'obtenez pas les résultats escomptés.| <|> term
302 Mot inconnu : xterm [[6:11]] => |TERM|xterm|Le nom d'un fichier d'informations sur le terminal situé dans /lib/terminfo, ce fichier indique au programme en mode console comment effectuer certaines tâches telles que l'affichage des couleurs. Il peut être utile de jouer avec cette variable si vous essayez d'utiliser un programme d'émulation de terminal inhabituel, ou si vous essayez de connecter un émulateur de terminal matériel par le port série et que vous n'obtenez pas les résultats escomptés.| <|> xterm

303 Mot inconnu : TERMCAP [[1:8]] => |TERMCAP| |Cette variable peut être utilisée à la place de "TERM" pour spécifier les informations sur le terminal manuellement, plutôt que d'avoir recours à un fichier.| <|> termcap
303 Guillemets typographiques ouvrants. [[59:60]] => |TERMCAP| |Cette variable peut être utilisée à la place de "TERM" pour spécifier les informations sur le terminal manuellement, plutôt que d'avoir recours à un fichier.| <|> " => suggestions : ['«\xa0', '“']
303 Mot inconnu : TERM [[60:64]] => |TERMCAP| |Cette variable peut être utilisée à la place de "TERM" pour spécifier les informations sur le terminal manuellement, plutôt que d'avoir recours à un fichier.| <|> term
303 Guillemets typographiques fermants. [[64:65]] => |TERMCAP| |Cette variable peut être utilisée à la place de "TERM" pour spécifier les informations sur le terminal manuellement, plutôt que d'avoir recours à un fichier.| <|> " => suggestions : ['\xa0»', '”']

304 Mot inconnu : COLUMNS [[1:8]] => |COLUMNS|80|Le nombre de colonnes sur la fenêtre de console. Essayez d'ajuster cette variable si les lignes semblent ne pas être coupées correctement sur la console.| <|> columns

305 Mot inconnu : LINES [[1:6]] => |LINES|25|Le nombre de lignes sur la fenêtre de console. Essayez d'ajuster cette variable si vous obtenez des résultats étranges lorsque vous faites défiler le texte.| <|> lines

306 Mot inconnu : http_proxy [[1:11]] => |http_proxy|http://user:passwd@proxy:port/|La variable pour utiliser un proxy, marche aussi avec HTTP_PROXY, ftp_proxy et FTP_proxy .| <|> http_proxy
306 Mot inconnu : passwd [[24:30]] => |http_proxy|http://user:passwd@proxy:port/|La variable pour utiliser un proxy, marche aussi avec HTTP_PROXY, ftp_proxy et FTP_proxy .| <|> passwd
306 Il manque un espace. [[37:41]] => |http_proxy|http://user:passwd@proxy:port/|La variable pour utiliser un proxy, marche aussi avec HTTP_PROXY, ftp_proxy et FTP_proxy .| <|> port => suggestions : [' port']
306 Mot inconnu : HTTP_PROXY [[97:107]] => |http_proxy|http://user:passwd@proxy:port/|La variable pour utiliser un proxy, marche aussi avec HTTP_PROXY, ftp_proxy et FTP_proxy .| <|> http_proxy
306 Mot inconnu : ftp_proxy [[109:118]] => |http_proxy|http://user:passwd@proxy:port/|La variable pour utiliser un proxy, marche aussi avec HTTP_PROXY, ftp_proxy et FTP_proxy .| <|> ftp_proxy
306 Mot inconnu : FTP_proxy [[122:131]] => |http_proxy|http://user:passwd@proxy:port/|La variable pour utiliser un proxy, marche aussi avec HTTP_PROXY, ftp_proxy et FTP_proxy .| <|> ftp_proxy
