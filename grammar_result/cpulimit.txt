
5 Mot inconnu : CPUlimit => ====== CPUlimit ====== <|> cpulimit

7 Mot inconnu : Cpulimit => **Cpulimit** permet de limiter l'utilisation du ou des processeur(s) par un processus déjà lancé ou qui le sera. Il suffit de connaitre le nom ou l'ID du processus à limiter, et de préciser le pourcentage d'utilisation maximal du processeur (à multiplier par le nombre de processeurs de votre ordinateur) <|> cpulimit
7 Écriture invariable. Utilisez un point médian. => **Cpulimit** permet de limiter l'utilisation du ou des processeur(s) par un processus déjà lancé ou qui le sera. Il suffit de connaitre le nom ou l'ID du processus à limiter, et de préciser le pourcentage d'utilisation maximal du processeur (à multiplier par le nombre de processeurs de votre ordinateur) <|> processeur(s) => suggestions : ['processeur·s']

10 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']
21 Mot inconnu : xx =>   * pour limiter à **xx %** le processus //NomDuProcessusALimiter// : <|> xx
21 Mot inconnu : NomDuProcessusALimiter =>   * pour limiter à **xx %** le processus //NomDuProcessusALimiter// : <|> nomduprocessusalimiter
25 Mot inconnu : xx =>   * pour limiter à **xx %** le processus numéro //nnnn// : <|> xx
25 Mot inconnu : nnnn =>   * pour limiter à **xx %** le processus numéro //nnnn// : <|> nnnn
29 Mot inconnu : path =>   * //−P// (attention, ici en majuscule) ou //−−path=chemin_absolu// peuvent être utilisés pour renseigner le chemin absolu du fichier exécutable à limiter. <|> path
29 Mot inconnu : chemin_absolu =>   * //−P// (attention, ici en majuscule) ou //−−path=chemin_absolu// peuvent être utilisés pour renseigner le chemin absolu du fichier exécutable à limiter. <|> chemin_absolu

31 Mot inconnu : possiblité => À ajouter la possiblité d'utiliser en sus les arguments suivants : <|> possiblité
32 Mot inconnu : verbose =>   * //−v// ou //−−verbose//  qui permet d'afficher les statistiques de limitation en temps réel <|> verbose
33 Mot inconnu : lazy =>   * //−z// ou //−−lazy// qui provoque la fermeture de cpulimit si le processus n'est pas trouvé ou s'il se termine. <|> lazy
33 Mot inconnu : cpulimit =>   * //−z// ou //−−lazy// qui provoque la fermeture de cpulimit si le processus n'est pas trouvé ou s'il se termine. <|> cpulimit

36 Mot inconnu : HOWTOW => Ces commandes peuvent être ajoutées au démarrage de votre machine pour une limitation permanente de certains processus (voir le [[https://ubuntuforums.org/showthread.php?t=992706|HOWTOW ici]], en anglais), ou dans un script de lancement de programme. <|> howtow

39 Mot inconnu : multi-core => Pour les heureux détenteurs de **processeurs multi-core, il faut multiplier votre pourcentage par le nombre de cores**. Ainsi, pour limiter à 20% l'utilisation d'un quadriprocesseur, mettez 20x4=80 après l'argument -l. <|> multi-core
39 Mot inconnu : cores => Pour les heureux détenteurs de **processeurs multi-core, il faut multiplier votre pourcentage par le nombre de cores**. Ainsi, pour limiter à 20% l'utilisation d'un quadriprocesseur, mettez 20x4=80 après l'argument -l. <|> cores
39 Mot inconnu : quadriprocesseur => Pour les heureux détenteurs de **processeurs multi-core, il faut multiplier votre pourcentage par le nombre de cores**. Ainsi, pour limiter à 20% l'utilisation d'un quadriprocesseur, mettez 20x4=80 après l'argument -l. <|> quadriprocesseur
39 Signe de multiplication typographique. => Pour les heureux détenteurs de **processeurs multi-core, il faut multiplier votre pourcentage par le nombre de cores**. Ainsi, pour limiter à 20% l'utilisation d'un quadriprocesseur, mettez 20x4=80 après l'argument -l. <|> 20x4 => suggestions : ['20\xa0×\xa04']
39 Mot inconnu : x4 => Pour les heureux détenteurs de **processeurs multi-core, il faut multiplier votre pourcentage par le nombre de cores**. Ainsi, pour limiter à 20% l'utilisation d'un quadriprocesseur, mettez 20x4=80 après l'argument -l. <|> x4
39 Il manque un espace à côté du tiret. => Pour les heureux détenteurs de **processeurs multi-core, il faut multiplier votre pourcentage par le nombre de cores**. Ainsi, pour limiter à 20% l'utilisation d'un quadriprocesseur, mettez 20x4=80 après l'argument -l. <|>  - => suggestions : [' – ', ' — ']
42 Mot inconnu : core =>   *  on ne peut mettre une limite supérieure à 100, soit 25% de limite haute possiblement réglable pour un quad core, 50% pour un dual core.  <|> core
42 Mot inconnu : core =>   *  on ne peut mettre une limite supérieure à 100, soit 25% de limite haute possiblement réglable pour un quad core, 50% pour un dual core.  <|> core
43 Mot inconnu : multi-core =>   *  une limite fixée à 100 induit une possibilité d'utilisation maximale, même pour les multi-core. <|> multi-core

45 Mot inconnu : FIXME => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> fixme
45 Mot inconnu : __ => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> __
45 Il manque un espace avant la parenthèse. => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> ( => suggestions : [' (']
45 Mot inconnu : svn => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> svn
45 Typographie : points de suspension. Utilisez le caractère dédié. => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> ... => suggestions : ['…']
45 Il manque un espace après la parenthèse. => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> ) => suggestions : [') ']
45 Mot inconnu : __ => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> __
45 Confusion probable : moi-même, toi-même, lui-même, elle-même, soi-même, elles-mêmes, eux-mêmes. => FIXME __(à confirmer quand j'aurais pigé comment fonctionne svn pour récupérer les sources...)__<sup>[Non neutre]</sup> La version de développement présente sur le site officiel, à compiler soit même, permet les valeurs de limite supérieures ou égales à 100.</note> <|> soit même => suggestions : ['soi-même']

53 Accord de genre erroné : « source » est féminin. => La compilation d'un source lance des dizaines de sous-processus en parallèle. Ces processus sont éphémères, et il n'est pas possible de les limiter un par un !  <|> un => suggestions : ['une']
53 Accord de genre erroné : « un » est un déterminant masculin. => La compilation d'un source lance des dizaines de sous-processus en parallèle. Ces processus sont éphémères, et il n'est pas possible de les limiter un par un !  <|> source => suggestions : ['sourcé']
