
7 Mot inconnu : Nginx => ====== Nginx : serveur Web asynchrone ====== <|> nginx

9 Mot inconnu : Nginx => **Nginx** (Engine X, prononcez [n-gèn-x]) est un serveur Web asynchrone écrit par Igor Sysoev pour les besoins d'un site russe à très fort trafic. Il peut être configuré pour faire office de serveur reverse proxy Web et de serveur proxy de messagerie électronique (IMAP/POP3). Une partie de la documentation a été traduite du russe vers l'anglais puis vers le français. Ses sources sont disponibles sous une licence de type BSD. <|> nginx
9 Mot inconnu : Engine => **Nginx** (Engine X, prononcez [n-gèn-x]) est un serveur Web asynchrone écrit par Igor Sysoev pour les besoins d'un site russe à très fort trafic. Il peut être configuré pour faire office de serveur reverse proxy Web et de serveur proxy de messagerie électronique (IMAP/POP3). Une partie de la documentation a été traduite du russe vers l'anglais puis vers le français. Ses sources sont disponibles sous une licence de type BSD. <|> engine
9 Mot inconnu : n-gèn-x => **Nginx** (Engine X, prononcez [n-gèn-x]) est un serveur Web asynchrone écrit par Igor Sysoev pour les besoins d'un site russe à très fort trafic. Il peut être configuré pour faire office de serveur reverse proxy Web et de serveur proxy de messagerie électronique (IMAP/POP3). Une partie de la documentation a été traduite du russe vers l'anglais puis vers le français. Ses sources sont disponibles sous une licence de type BSD. <|> n-gèn-x
9 Mot inconnu : Sysoev => **Nginx** (Engine X, prononcez [n-gèn-x]) est un serveur Web asynchrone écrit par Igor Sysoev pour les besoins d'un site russe à très fort trafic. Il peut être configuré pour faire office de serveur reverse proxy Web et de serveur proxy de messagerie électronique (IMAP/POP3). Une partie de la documentation a été traduite du russe vers l'anglais puis vers le français. Ses sources sont disponibles sous une licence de type BSD. <|> sysoev
9 Mot inconnu : POP3 => **Nginx** (Engine X, prononcez [n-gèn-x]) est un serveur Web asynchrone écrit par Igor Sysoev pour les besoins d'un site russe à très fort trafic. Il peut être configuré pour faire office de serveur reverse proxy Web et de serveur proxy de messagerie électronique (IMAP/POP3). Une partie de la documentation a été traduite du russe vers l'anglais puis vers le français. Ses sources sont disponibles sous une licence de type BSD. <|> pop3

16 Mot inconnu : Nginx => Vous pouvez aussi choisir le packaging de votre Nginx. En effet, Nginx est proposé en 3 packagings offrants des lots de fonctionnalités différents. Dans le doute, choisissez le paquet **Nginx**. <|> nginx
16 Mot inconnu : Nginx => Vous pouvez aussi choisir le packaging de votre Nginx. En effet, Nginx est proposé en 3 packagings offrants des lots de fonctionnalités différents. Dans le doute, choisissez le paquet **Nginx**. <|> nginx
16 Mot inconnu : Nginx => Vous pouvez aussi choisir le packaging de votre Nginx. En effet, Nginx est proposé en 3 packagings offrants des lots de fonctionnalités différents. Dans le doute, choisissez le paquet **Nginx**. <|> nginx

17 Incohérence : espace et tabulation. => ^ 																^ nginx-extras	^ nginx-full	^ nginx-light	^ <|>  	 => suggestions : [' ', '\t']
17 Mot inconnu : nginx-extras => ^ 																^ nginx-extras	^ nginx-full	^ nginx-light	^ <|> nginx-extras
17 Mot inconnu : nginx-full => ^ 																^ nginx-extras	^ nginx-full	^ nginx-light	^ <|> nginx-full
17 Mot inconnu : nginx-light => ^ 																^ nginx-extras	^ nginx-full	^ nginx-light	^ <|> nginx-light

18 Mot inconnu : Core => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> core
18 Mot inconnu : Access => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> access
18 Mot inconnu : Auth => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> auth
18 Mot inconnu : Charset => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> charset
18 Mot inconnu : Empty => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> empty
18 Mot inconnu : FastCGI => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> fastcgi
18 Mot inconnu : Gzip => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> gzip
18 Mot inconnu : Headers => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> headers
18 Mot inconnu : Map => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> map
18 Mot inconnu : Upstream => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|> upstream
18 Incohérence : espace et tabulation. => | Core, Access, Auth Basic, Auto Index, Charset, Empty GIF, FastCGI, Gzip, Headers, Index, Log, Map, Proxy, Rewrite, Upstream	| 	X	|	X	|	X	| <|>  	 => suggestions : [' ', '\t']

19 Mot inconnu : UWSGI => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> uwsgi
19 Mot inconnu : Browser => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> browser
19 Mot inconnu : Geo => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> geo
19 Mot inconnu : Limit => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> limit
19 Mot inconnu : Requests => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> requests
19 Mot inconnu : Limit => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> limit
19 Mot inconnu : Memcached => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> memcached
19 Mot inconnu : Referer => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> referer
19 Mot inconnu : SCGI => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|> scgi
19 Incohérence : espace et tabulation. => | User ID, UWSGI, Browser, Geo, Limit Requests, Limit Zone, Memcached, Referer, SCGI, Split Clients, SSI			| 	X	|	X	|		|  <|>  	 => suggestions : [' ', '\t']

20 Mot inconnu : Gzip => | Gzip Precompression, IPv6, SSL, Stub Status											|  	X	|	X	|	X	| <|> gzip
20 Mot inconnu : Precompression => | Gzip Precompression, IPv6, SSL, Stub Status											|  	X	|	X	|	X	| <|> precompression
20 Mot inconnu : IPv6 => | Gzip Precompression, IPv6, SSL, Stub Status											|  	X	|	X	|	X	| <|> ipv6
20 Mot inconnu : SSL => | Gzip Precompression, IPv6, SSL, Stub Status											|  	X	|	X	|	X	| <|> ssl
20 Mot inconnu : Stub => | Gzip Precompression, IPv6, SSL, Stub Status											|  	X	|	X	|	X	| <|> stub
20 Incohérence : espace et tabulation. => | Gzip Precompression, IPv6, SSL, Stub Status											|  	X	|	X	|	X	| <|>  	 => suggestions : [' ', '\t']

21 Mot inconnu : WebDAV => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|> webdav
21 Mot inconnu : XSLT => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|> xslt
21 Mot inconnu : Debug => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|> debug
21 Mot inconnu : GeoIP => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|> geoip
21 Mot inconnu : Filter => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|> filter
21 Mot inconnu : Real => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|> real
21 Incohérence : espace et tabulation. => | Substitution, WebDAV, XSLT, Addition, Debug, GeoIP, Image Filter, Real IP							|  	X	|	X	|		| <|>  	 => suggestions : [' ', '\t']

22 Mot inconnu : Sub => | HTTP Sub															|  		|	X	|		| <|> sub
22 Incohérence : espace et tabulation. => | HTTP Sub															|  		|	X	|		| <|>  	 => suggestions : [' ', '\t']

23 Mot inconnu : Embedded => | Embedded Perl, FLV, MP4, Random Index, Secure Link										|  	X	|		|		| <|> embedded
23 Mot inconnu : FLV => | Embedded Perl, FLV, MP4, Random Index, Secure Link										|  	X	|		|		| <|> flv
23 Mot inconnu : MP4 => | Embedded Perl, FLV, MP4, Random Index, Secure Link										|  	X	|		|		| <|> mp4
23 Mot inconnu : Secure => | Embedded Perl, FLV, MP4, Random Index, Secure Link										|  	X	|		|		| <|> secure
23 Mot inconnu : Link => | Embedded Perl, FLV, MP4, Random Index, Secure Link										|  	X	|		|		| <|> link
23 Incohérence : espace et tabulation. => | Embedded Perl, FLV, MP4, Random Index, Secure Link										|  	X	|		|		| <|>  	 => suggestions : [' ', '\t']

24 Mot inconnu : Core => | Mail Core, IMAP, POP3, SMTP, SSL												|  	X	|	X	|		| <|> core
24 Mot inconnu : POP3 => | Mail Core, IMAP, POP3, SMTP, SSL												|  	X	|	X	|		| <|> pop3
24 Mot inconnu : SSL => | Mail Core, IMAP, POP3, SMTP, SSL												|  	X	|	X	|		| <|> ssl
24 Incohérence : espace et tabulation. => | Mail Core, IMAP, POP3, SMTP, SSL												|  	X	|	X	|		| <|>  	 => suggestions : [' ', '\t']

25 Mot inconnu : Echo => | Echo																|  	X	|	X	|	X	| <|> echo
25 Incohérence : espace et tabulation. => | Echo																|  	X	|	X	|	X	| <|>  	 => suggestions : [' ', '\t']

26 Mot inconnu : Upstream => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|> upstream
26 Mot inconnu : Fair => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|> fair
26 Mot inconnu : Auth => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|> auth
26 Mot inconnu : PAM => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|> pam
26 Mot inconnu : DAV => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|> dav
26 Mot inconnu : Ext => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|> ext
26 Incohérence : espace et tabulation. => | Upstream Fair Queue, Auth PAM, DAV Ext											|  	X	|	X	|		| <|>  	 => suggestions : [' ', '\t']

27 Mot inconnu : Embedded => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> embedded
27 Mot inconnu : Lua => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> lua
27 Mot inconnu : HttpHeadersMore => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> httpheadersmore
27 Mot inconnu : push => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> push
27 Mot inconnu : Nginx => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> nginx
27 Mot inconnu : Development => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> development
27 Mot inconnu : Upload => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> upload
27 Mot inconnu : Upload => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> upload
27 Mot inconnu : Progress => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> progress
27 Mot inconnu : Chunkin => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|> chunkin
27 Incohérence : espace et tabulation. => | Embedded Lua, HttpHeadersMore, http push, Nginx Development Kit, Upload module, Upload Progress, Chunkin			|  	X	|		|		| <|>  	 => suggestions : [' ', '\t']

35 Mot inconnu : Nginx => ==== Configuration de Nginx ==== <|> nginx
37 Mot inconnu : nginx =>   * **nginx.conf:** Le fichier de configuration globale du **serveur**. Les paramètres qui s'y trouvent doivent impacter l'ensemble du serveur ; vous n'y toucherez normalement pas. <|> nginx
37 Il manque un espace. =>   * **nginx.conf:** Le fichier de configuration globale du **serveur**. Les paramètres qui s'y trouvent doivent impacter l'ensemble du serveur ; vous n'y toucherez normalement pas. <|> conf => suggestions : [' conf']
38 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * **mime.types:** La liste des types MIME résolus par les extensions de fichiers. Cette liste indique la nature des fichiers renvoyés par le serveur (ex: ceci est une page web ou ceci est une vidéo ogg). <|> mime => suggestions : ['Mime']
38 Il manque un espace. =>   * **mime.types:** La liste des types MIME résolus par les extensions de fichiers. Cette liste indique la nature des fichiers renvoyés par le serveur (ex: ceci est une page web ou ceci est une vidéo ogg). <|> types => suggestions : [' types']
39 Mot inconnu : sites-available =>   * **sites-available:** Contient les fichiers de configurations de vos sites ou services (un fichier par pré-occupation/site/service). Ce dossier est un //dépôt// ; les fichiers de configuration qui y sont ne sont pas pris en compte. <|> sites-available
40 Mot inconnu : sites-enabled =>   * **sites-enabled:** Doit contenir des [[lien_physique_et_symbolique#exemple_de_lien_symbolique|liens symboliques]] vers les fichiers de **site-available** que vous souhaitez activer. <|> sites-enabled
40 Mot inconnu : lien_physique_et_symbolique =>   * **sites-enabled:** Doit contenir des [[lien_physique_et_symbolique#exemple_de_lien_symbolique|liens symboliques]] vers les fichiers de **site-available** que vous souhaitez activer. <|> lien_physique_et_symbolique
40 Mot inconnu : site-available =>   * **sites-enabled:** Doit contenir des [[lien_physique_et_symbolique#exemple_de_lien_symbolique|liens symboliques]] vers les fichiers de **site-available** que vous souhaitez activer. <|> site-available
41 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|> conf => suggestions : ['Conf']
41 Mot inconnu : site-available =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|> site-available
41 Guillemets fermants. =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|>  " => suggestions : ['\xa0»', '”']
41 Guillemets typographiques fermants. =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|> " => suggestions : ['\xa0»', '”']
41 Guillemets fermants. =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|>  " => suggestions : ['\xa0»', '”']
41 Mot inconnu : disabled =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|> disabled
41 Guillemets typographiques fermants. =>   * **conf.d:**  Emplacement pour appliquer les paramètres communs à tous les sites. Peut également servir de la même façon que **site-available** (renommer ses fichiers ".conf" en ".disabled" pour désactiver les sites). <|> " => suggestions : ['\xa0»', '”']

45 Mot inconnu : nginx => ==== Le nginx.conf par défaut ==== <|> nginx
45 Il manque un espace. => ==== Le nginx.conf par défaut ==== <|> conf => suggestions : [' conf']

47 Mot inconnu : nginx => Le fichier **nginx.conf** est l'élément névralgique de votre serveur Nginx. Nous allons voir à quoi ressemble un fichier **nginx.conf** par défaut sous Ubuntu (avec une petite traduction en Français). <|> nginx
47 Il manque un espace. => Le fichier **nginx.conf** est l'élément névralgique de votre serveur Nginx. Nous allons voir à quoi ressemble un fichier **nginx.conf** par défaut sous Ubuntu (avec une petite traduction en Français). <|> conf => suggestions : [' conf']
47 Mot inconnu : Nginx => Le fichier **nginx.conf** est l'élément névralgique de votre serveur Nginx. Nous allons voir à quoi ressemble un fichier **nginx.conf** par défaut sous Ubuntu (avec une petite traduction en Français). <|> nginx
47 Mot inconnu : nginx => Le fichier **nginx.conf** est l'élément névralgique de votre serveur Nginx. Nous allons voir à quoi ressemble un fichier **nginx.conf** par défaut sous Ubuntu (avec une petite traduction en Français). <|> nginx
47 Il manque un espace. => Le fichier **nginx.conf** est l'élément névralgique de votre serveur Nginx. Nous allons voir à quoi ressemble un fichier **nginx.conf** par défaut sous Ubuntu (avec une petite traduction en Français). <|> conf => suggestions : [' conf']
47 Si vous parlez de la langue, pas de majuscule. => Le fichier **nginx.conf** est l'élément névralgique de votre serveur Nginx. Nous allons voir à quoi ressemble un fichier **nginx.conf** par défaut sous Ubuntu (avec une petite traduction en Français). <|> français => suggestions : ['français']


95 Mot inconnu : Nginx => ==== Nginx et les hôtes virtuels ==== <|> nginx

97 Mot inconnu : Nginx => Nginx inclut un exemple de configuration d'un hôte virtuel((aussi appelé //virtual host// ou //vhost//)) que vous pouvez trouver dans « /etc/nginx/sites-available/default ». <|> nginx
97 Il manque un espace avant la parenthèse. => Nginx inclut un exemple de configuration d'un hôte virtuel((aussi appelé //virtual host// ou //vhost//)) que vous pouvez trouver dans « /etc/nginx/sites-available/default ». <|> ( => suggestions : [' (']
97 Mot inconnu : virtual => Nginx inclut un exemple de configuration d'un hôte virtuel((aussi appelé //virtual host// ou //vhost//)) que vous pouvez trouver dans « /etc/nginx/sites-available/default ». <|> virtual
97 Mot inconnu : host => Nginx inclut un exemple de configuration d'un hôte virtuel((aussi appelé //virtual host// ou //vhost//)) que vous pouvez trouver dans « /etc/nginx/sites-available/default ». <|> host
97 Mot inconnu : vhost => Nginx inclut un exemple de configuration d'un hôte virtuel((aussi appelé //virtual host// ou //vhost//)) que vous pouvez trouver dans « /etc/nginx/sites-available/default ». <|> vhost

101 Mot inconnu : vhost => Pour configurer votre nom de domaine (vhost), vous pouvez copier la configuration par défaut du vhost « default » puis y apporter vos modifications. Exemple : <|> vhost
101 Mot inconnu : vhost => Pour configurer votre nom de domaine (vhost), vous pouvez copier la configuration par défaut du vhost « default » puis y apporter vos modifications. Exemple : <|> vhost
101 Mot inconnu : default => Pour configurer votre nom de domaine (vhost), vous pouvez copier la configuration par défaut du vhost « default » puis y apporter vos modifications. Exemple : <|> default

107 Mot inconnu : sites-available => Le sous-répertoire « sites-available » stocke les vhosts mais pour que Nginx les prenne en considération, vous devez les activer en créant un lien symbolique dans « /etc/nginx/sites-enabled ». Par exemple : <|> sites-available
107 Mot inconnu : vhosts => Le sous-répertoire « sites-available » stocke les vhosts mais pour que Nginx les prenne en considération, vous devez les activer en créant un lien symbolique dans « /etc/nginx/sites-enabled ». Par exemple : <|> vhosts
107 Mot inconnu : Nginx => Le sous-répertoire « sites-available » stocke les vhosts mais pour que Nginx les prenne en considération, vous devez les activer en créant un lien symbolique dans « /etc/nginx/sites-enabled ». Par exemple : <|> nginx

111 Mot inconnu : Nginx => Il ne reste qu'à redémarrer Nginx : <|> nginx

117 Incohérence avec “du” : “reverse” est un verbe. => ===== Configuration  du reverse proxy et du cache Web ===== <|> reverse => suggestions : ['reversée', 'reversées', 'reversé', 'reversés']

118 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

119 Incohérence avec “d’un” : “reverse” est une forme verbale conjuguée. => ==== Configuration d'un reverse proxy et du cache avec Nginx === <|> reverse => suggestions : ['reversée', 'reversées', 'reversé', 'reversés']
119 Mot inconnu : Nginx => ==== Configuration d'un reverse proxy et du cache avec Nginx === <|> nginx

121 Mot inconnu : nginx => Ce tutoriel montre la configuration de nginx en tant que reverse proxy cache. <|> nginx
121 Confusion probable. Après « en tant que », il faut un substantif, pas un verbe. Exemples : en tant que femme, en tant que patron, en tant que trentenaire… => Ce tutoriel montre la configuration de nginx en tant que reverse proxy cache. <|> reverse => suggestions : ['reversait', 'reverser', 'reversaient', 'reversais', 'reverse', 'reversez']
133 Incohérence avec “d’un” : “reverse” est une forme verbale conjuguée. =>   * Comprendre la fonction d'un reverse proxy ou un proxy inverse [[https://fr.wikipedia.org/wiki/Reverse_proxy|Article wikipedia]]. <|> reverse => suggestions : ['reversée', 'reversées', 'reversé', 'reversés']
133 Mot inconnu : wikipedia =>   * Comprendre la fonction d'un reverse proxy ou un proxy inverse [[https://fr.wikipedia.org/wiki/Reverse_proxy|Article wikipedia]]. <|> wikipedia

138 Guillemets typographiques ouvrants. => Certains termes présents dans cet article ne sont pas très "académiques" n'hésitez pas à les modifier si vous les connaissez. <|> " => suggestions : ['«\xa0', '“']
138 Guillemets typographiques fermants. => Certains termes présents dans cet article ne sont pas très "académiques" n'hésitez pas à les modifier si vous les connaissez. <|> " => suggestions : ['\xa0»', '”']
144 Mot inconnu : nginx =>   * Le paramétrage global du serveur nginx. <|> nginx
145 Incohérence avec “de” : “reverse” est une forme verbale conjuguée. =>   * Le paramétrage des fonctions de reverse proxy et de cache. <|> reverse => suggestions : ['reversée', 'reversées', 'reversé', 'reversés']

155 Mot inconnu : nginx => Cette séparation a pour but d'ajouter de la clarté dans la configuration car tous les fichiers de configuration sont inclus dans le fichier nginx.conf. <|> nginx
155 Il manque un espace. => Cette séparation a pour but d'ajouter de la clarté dans la configuration car tous les fichiers de configuration sont inclus dans le fichier nginx.conf. <|> conf => suggestions : [' conf']

157 Mot inconnu : nginx => === Configuration du nginx.conf avec proxy === <|> nginx
157 Il manque un espace. => === Configuration du nginx.conf avec proxy === <|> conf => suggestions : [' conf']


217 Mot inconnu : group => | user www-data; ##**Syntaxe:** **user** **user** **[group]**    | Définit l'utilisateur et le groupe avec lequel le daemon Nginx sera lancé. Si le groupe est omis, un groupe dont le nom correspond à celui de l'utilisateur sera utilisé. | <|> group
217 Mot inconnu : daemon => | user www-data; ##**Syntaxe:** **user** **user** **[group]**    | Définit l'utilisateur et le groupe avec lequel le daemon Nginx sera lancé. Si le groupe est omis, un groupe dont le nom correspond à celui de l'utilisateur sera utilisé. | <|> daemon
217 Mot inconnu : Nginx => | user www-data; ##**Syntaxe:** **user** **user** **[group]**    | Définit l'utilisateur et le groupe avec lequel le daemon Nginx sera lancé. Si le groupe est omis, un groupe dont le nom correspond à celui de l'utilisateur sera utilisé. | <|> nginx

218 Mot inconnu : worker_processes => | worker_processes 1; ##**Syntaxe:** worker_processes **nombre** **auto**; | La valeur optimale dépend de nombreux facteurs.. y compris (mais non limité à) au nombre de CPU que vous disposez; le nombre de disques durs.. etc :-). Si vous avez un doute sur la valeur à indiquer, veuillez prendre comme référence le nombre de CPU que vous disposez, vous pouvez aussi utiliser **auto**. | <|> worker_processes
218 Mot inconnu : worker_processes => | worker_processes 1; ##**Syntaxe:** worker_processes **nombre** **auto**; | La valeur optimale dépend de nombreux facteurs.. y compris (mais non limité à) au nombre de CPU que vous disposez; le nombre de disques durs.. etc :-). Si vous avez un doute sur la valeur à indiquer, veuillez prendre comme référence le nombre de CPU que vous disposez, vous pouvez aussi utiliser **auto**. | <|> worker_processes
218 Typographie : un ou trois points ? => | worker_processes 1; ##**Syntaxe:** worker_processes **nombre** **auto**; | La valeur optimale dépend de nombreux facteurs.. y compris (mais non limité à) au nombre de CPU que vous disposez; le nombre de disques durs.. etc :-). Si vous avez un doute sur la valeur à indiquer, veuillez prendre comme référence le nombre de CPU que vous disposez, vous pouvez aussi utiliser **auto**. | <|> .. => suggestions : ['…', '.']
218 Typographie : un ou trois points ? => | worker_processes 1; ##**Syntaxe:** worker_processes **nombre** **auto**; | La valeur optimale dépend de nombreux facteurs.. y compris (mais non limité à) au nombre de CPU que vous disposez; le nombre de disques durs.. etc :-). Si vous avez un doute sur la valeur à indiquer, veuillez prendre comme référence le nombre de CPU que vous disposez, vous pouvez aussi utiliser **auto**. | <|> .. => suggestions : ['…', '.']

219 Mot inconnu : worker_connections => | worker_connections; ##**Syntaxe:** ? | fixer ce paramètre en fonction du calcul ci dessous (valable que sur un reverse proxy)    max_clients = worker_processes * worker_connections/4         | <|> worker_connections
219 Il manque un trait d’union. => | worker_connections; ##**Syntaxe:** ? | fixer ce paramètre en fonction du calcul ci dessous (valable que sur un reverse proxy)    max_clients = worker_processes * worker_connections/4         | <|> ci dessous => suggestions : ['ci-dessous']
219 Mot inconnu : max_clients => | worker_connections; ##**Syntaxe:** ? | fixer ce paramètre en fonction du calcul ci dessous (valable que sur un reverse proxy)    max_clients = worker_processes * worker_connections/4         | <|> max_clients
219 Mot inconnu : worker_processes => | worker_connections; ##**Syntaxe:** ? | fixer ce paramètre en fonction du calcul ci dessous (valable que sur un reverse proxy)    max_clients = worker_processes * worker_connections/4         | <|> worker_processes
219 Mot inconnu : worker_connections => | worker_connections; ##**Syntaxe:** ? | fixer ce paramètre en fonction du calcul ci dessous (valable que sur un reverse proxy)    max_clients = worker_processes * worker_connections/4         | <|> worker_connections

220 Mot inconnu : access_log => |access_log  | Vous retrouverez dans votre fichier **access.log** les **GET'S/POST'S** de chaque visiteur visitant votre site.| <|> access_log
220 Mot inconnu : access => |access_log  | Vous retrouverez dans votre fichier **access.log** les **GET'S/POST'S** de chaque visiteur visitant votre site.| <|> access
220 Il manque un espace. => |access_log  | Vous retrouverez dans votre fichier **access.log** les **GET'S/POST'S** de chaque visiteur visitant votre site.| <|> log => suggestions : [' log']
220 Mot inconnu : GET'S => |access_log  | Vous retrouverez dans votre fichier **access.log** les **GET'S/POST'S** de chaque visiteur visitant votre site.| <|> get's
220 Mot inconnu : POST'S => |access_log  | Vous retrouverez dans votre fichier **access.log** les **GET'S/POST'S** de chaque visiteur visitant votre site.| <|> post's

221 Mot inconnu : error_log => |error_log | Ici à contrario vous retrouverez dans votre fichier **error.log** les erreurs **403, 404, 500, 503**, venant de vos visiteurs (par exemple):-). | <|> error_log
221 Mot inconnu : error => |error_log | Ici à contrario vous retrouverez dans votre fichier **error.log** les erreurs **403, 404, 500, 503**, venant de vos visiteurs (par exemple):-). | <|> error
221 Il manque un espace. => |error_log | Ici à contrario vous retrouverez dans votre fichier **error.log** les erreurs **403, 404, 500, 503**, venant de vos visiteurs (par exemple):-). | <|> log => suggestions : [' log']

222 Mot inconnu : default_type => | default_type application/octet-stream; ##**Syntaxe:** default_type **mime-type**; | Définit le [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]]  par défaut d'une requête ACK. Un mappage sur l'extension de [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]] peut être configuré avec le module [[http://nginx.org/en/docs/http/ngx_http_core_module.html#types|type]]. | <|> default_type
222 Mot inconnu : octet-stream => | default_type application/octet-stream; ##**Syntaxe:** default_type **mime-type**; | Définit le [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]]  par défaut d'une requête ACK. Un mappage sur l'extension de [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]] peut être configuré avec le module [[http://nginx.org/en/docs/http/ngx_http_core_module.html#types|type]]. | <|> octet-stream
222 Mot inconnu : default_type => | default_type application/octet-stream; ##**Syntaxe:** default_type **mime-type**; | Définit le [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]]  par défaut d'une requête ACK. Un mappage sur l'extension de [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]] peut être configuré avec le module [[http://nginx.org/en/docs/http/ngx_http_core_module.html#types|type]]. | <|> default_type
222 Mot inconnu : ACK => | default_type application/octet-stream; ##**Syntaxe:** default_type **mime-type**; | Définit le [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]]  par défaut d'une requête ACK. Un mappage sur l'extension de [[https://fr.wikipedia.org/wiki/Type_MIME|Type MIME]] peut être configuré avec le module [[http://nginx.org/en/docs/http/ngx_http_core_module.html#types|type]]. | <|> ack

223 Mot inconnu : server_tokens => |server_tokens off; ##**Syntaxe:** server_tokens **on** **off** | Active ou désactive l'émission de votre [[https://ubuntu-fr.org/.ht|version]] Nginx.| <|> server_tokens
223 Mot inconnu : server_tokens => |server_tokens off; ##**Syntaxe:** server_tokens **on** **off** | Active ou désactive l'émission de votre [[https://ubuntu-fr.org/.ht|version]] Nginx.| <|> server_tokens
223 Confusion probable : “avoir” à la 3ᵉ personne du pluriel du présent s’écrit “ont”. => |server_tokens off; ##**Syntaxe:** server_tokens **on** **off** | Active ou désactive l'émission de votre [[https://ubuntu-fr.org/.ht|version]] Nginx.| <|> on => suggestions : ['ont']
223 Incohérence avec “on” : “off” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => |server_tokens off; ##**Syntaxe:** server_tokens **on** **off** | Active ou désactive l'émission de votre [[https://ubuntu-fr.org/.ht|version]] Nginx.| <|> off => suggestions : []
223 Mot inconnu : Nginx => |server_tokens off; ##**Syntaxe:** server_tokens **on** **off** | Active ou désactive l'émission de votre [[https://ubuntu-fr.org/.ht|version]] Nginx.| <|> nginx

224 Mot inconnu : client_body_buffer_size => |client_body_buffer_size ##**Syntaxe:** ? | définit la taille au delà de laquelle la requête sera enregistrée dans un fichier | <|> client_body_buffer_size
224 Il manque un trait d’union. => |client_body_buffer_size ##**Syntaxe:** ? | définit la taille au delà de laquelle la requête sera enregistrée dans un fichier | <|> au delà => suggestions : ['au-delà']

225 Mot inconnu : client_max_body_size => |client_max_body_size ##**Syntaxe:** ? | taille max des données envoyées par un client  | <|> client_max_body_size

226 Mot inconnu : large_client_header_buffers => | large_client_header_buffers ##**Syntaxe:** ?| définit le nombre de buffer ainsi que leurs tailles, la taille max de la requête URI est donc la multiplication de ces deux chiffres | <|> large_client_header_buffers
226 Mot inconnu : buffer => | large_client_header_buffers ##**Syntaxe:** ?| définit le nombre de buffer ainsi que leurs tailles, la taille max de la requête URI est donc la multiplication de ces deux chiffres | <|> buffer

227 Mot inconnu : client_body_timeout => | client_body_timeout ##**Syntaxe:** ? | si le client n'envoie pas la totalité de sa requête en 5 sec c'est mort ! | <|> client_body_timeout
227 Accord de nombre erroné avec « 5 » : « sec » devrait être au pluriel. => | client_body_timeout ##**Syntaxe:** ? | si le client n'envoie pas la totalité de sa requête en 5 sec c'est mort ! | <|> sec => suggestions : ['secs']

228 Mot inconnu : client_header_timeout => | client_header_timeout  ##**Syntaxe:** ? | si le client n'envoie pas l'entête de sa requête même traitement| <|> client_header_timeout

229 Mot inconnu : keepalive_timeout => | keepalive_timeout 5 5 ##**Syntaxe:** ?| premier chiffre temps max d'une connexion keepalive, deuxième chiffre indication de cette valeur dans le champ timeout de l'entête de la réponse | <|> keepalive_timeout
229 Mot inconnu : keepalive => | keepalive_timeout 5 5 ##**Syntaxe:** ?| premier chiffre temps max d'une connexion keepalive, deuxième chiffre indication de cette valeur dans le champ timeout de l'entête de la réponse | <|> keepalive
229 Mot inconnu : timeout => | keepalive_timeout 5 5 ##**Syntaxe:** ?| premier chiffre temps max d'une connexion keepalive, deuxième chiffre indication de cette valeur dans le champ timeout de l'entête de la réponse | <|> timeout

230 Mot inconnu : keepalive_requests => | keepalive_requests 100  ##**Syntaxe:** ? | nombre de requêtes keepalive sur une connexion | <|> keepalive_requests
230 Mot inconnu : keepalive => | keepalive_requests 100  ##**Syntaxe:** ? | nombre de requêtes keepalive sur une connexion | <|> keepalive

231 Mot inconnu : send_timeout => | send_timeout ##**Syntaxe:** ? | temps maximum de latence lors d'un envoi | <|> send_timeout

232 Mot inconnu : ignore_invalid_headers => | ignore_invalid_headers ##**Syntaxe:** ?| supprime les requêtes malformées | <|> ignore_invalid_headers

233 Mot inconnu : server_name_in_redirect => | server_name_in_redirect  ##**Syntaxe:** ?| désactive la réécriture du nom de serveur, protection contre les scans | <|> server_name_in_redirect

234 Mot inconnu : gzip => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> gzip
234 Mot inconnu : gzip => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> gzip
234 Confusion probable : “avoir” à la 3ᵉ personne du pluriel du présent s’écrit “ont”. => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> on => suggestions : ['ont']
234 Incohérence avec “on” : “off” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> off => suggestions : []
234 Mot inconnu : ngx_http_gzip_module => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> ngx_http_gzip_module
234 Mot inconnu : ACK => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> ack
234 Mot inconnu : gzip => | gzip ""; ##**Syntaxe:**gzip **on** **off**;| **ngx_http_gzip_module** est un filtre qui compresse les requêtes de type ACK à l'aide de la méthode « gzip ». Souvent, ça permet de réduire la taille des données transmises.  Nous pouvons via ce module, réduire de moitié les données transmises, voir même plus :-). | <|> gzip

235 Mot inconnu : gzip_comp_level => |gzip_comp_level ##**Syntaxe:** ?  | niveau de compression (peut aller jusqu'à 9) | <|> gzip_comp_level

236 Mot inconnu : gzip_proxied => | gzip_proxied any ##**Syntaxe:** ?  | activer la compression pour la réponse du serveur web derrière le reverse proxy | <|> gzip_proxied
236 Mot inconnu : any => | gzip_proxied any ##**Syntaxe:** ?  | activer la compression pour la réponse du serveur web derrière le reverse proxy | <|> any

237 Mot inconnu : gzip_vary => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> gzip_vary
237 Mot inconnu : gzip_vary => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> gzip_vary
237 Confusion probable : “avoir” à la 3ᵉ personne du pluriel du présent s’écrit “ont”. => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> on => suggestions : ['ont']
237 Incohérence avec “on” : “off” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> off => suggestions : []
237 Mot inconnu : Vary => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> vary
237 Mot inconnu : Accept-Encoding => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> accept-encoding
237 Mot inconnu : header => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> header
237 Mot inconnu : ACK => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> ack
237 Mot inconnu : gzip => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> gzip
237 Mot inconnu : gzip_static => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> gzip_static
237 Mot inconnu : gunzip => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> gunzip
237 Accord avec la forme verbale “sont” : “actif” devrait être au pluriel. => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> actif => suggestions : ['actifs']
237 Mot inconnu : ubuntu-fr => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> ubuntu-fr
237 Mot inconnu : gzip_vary => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> gzip_vary
237 Mot inconnu : header => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> header
237 Typographie : un ou trois points ? => | gzip_vary on; ##**Syntaxe:** gzip_vary **on**  **off**; | Active ou désactive l'insertion de **Vary: Accept-Encoding** dans le header de votre requête ACK. Seulement si un des modules **gzip**, gzip_static ou gunzip sont actif. Dans le cas du site ubuntu-fr.org le module **gzip_vary** est sur **off**((https://stackoverflow.com/questions/7848796/what-does-varyaccept-encoding-mean)), la compression de notre header ne semble donc pas active.. .(( <|> .. => suggestions : ['…', '.']

239 Mot inconnu : Server => Server: nginx <|> server
239 Mot inconnu : nginx => Server: nginx <|> nginx
240 Mot inconnu : text => Content-Type: text/html; charset=utf-8 <|> text
240 Mot inconnu : html => Content-Type: text/html; charset=utf-8 <|> html
240 Mot inconnu : charset => Content-Type: text/html; charset=utf-8 <|> charset
240 Mot inconnu : utf-8 => Content-Type: text/html; charset=utf-8 <|> utf-8

241 S’il s’agit d’un impératif, pas de “s”. => Expires: Sun, 19 Nov 1978 05:00:00 GMT <|> expires => suggestions : ['Expire']
241 Mot inconnu : Sun => Expires: Sun, 19 Nov 1978 05:00:00 GMT <|> sun

242 Mot inconnu : Last-Modified => Last-Modified: Wed, 12 Aug 2015 21:43:15 +0000 <|> last-modified
242 Mot inconnu : Wed => Last-Modified: Wed, 12 Aug 2015 21:43:15 +0000 <|> wed
242 Mot inconnu : Aug => Last-Modified: Wed, 12 Aug 2015 21:43:15 +0000 <|> aug

243 Mot inconnu : ETag => ETag: "1439415795" <|> etag
243 Guillemets typographiques ouvrants. => ETag: "1439415795" <|> " => suggestions : ['«\xa0', '“']
243 Formatage des grands nombres. => ETag: "1439415795" <|> 1439415795 => suggestions : ['1\xa0439\xa0415\xa0795', '1439\xa0415-795']
243 Guillemets typographiques fermants. => ETag: "1439415795" <|> " => suggestions : ['\xa0»', '”']

244 Mot inconnu : Content-Language => Content-Language: en <|> content-language

245 Mot inconnu : X-Generator => X-Generator: Drupal 7 (http://drupal.org) <|> x-generator
245 Mot inconnu : Drupal => X-Generator: Drupal 7 (http://drupal.org) <|> drupal

246 Mot inconnu : Link => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> link
246 Guillemets typographiques ouvrants. => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> " => suggestions : ['«\xa0', '“']
246 Guillemets typographiques fermants. => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> " => suggestions : ['\xa0»', '”']
246 Mot inconnu : node => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> node
246 Guillemets typographiques ouvrants. => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> " => suggestions : ['«\xa0', '“']
246 Mot inconnu : shortlink => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> shortlink
246 Guillemets typographiques fermants. => Link: </intro>; rel="canonical",</node/17>; rel="shortlink" <|> " => suggestions : ['\xa0»', '”']

247 Mot inconnu : Content-Encoding => **Content-Encoding: gzip** <|> content-encoding
247 Mot inconnu : gzip => **Content-Encoding: gzip** <|> gzip

248 Mot inconnu : Accept-Ranges => Accept-Ranges: bytes <|> accept-ranges
249 Mot inconnu : Wed => Date: Wed, 12 Aug 2015 21:43:15 GMT <|> wed
249 Mot inconnu : Aug => Date: Wed, 12 Aug 2015 21:43:15 GMT <|> aug

251 Mot inconnu : Connection => Connection: keep-alive <|> connection
251 Mot inconnu : keep-alive => Connection: keep-alive <|> keep-alive

252 Mot inconnu : Cache-Control => Cache-Control: no-cache, must-revalidate, max-age=0 <|> cache-control
252 Mot inconnu : must-revalidate => Cache-Control: no-cache, must-revalidate, max-age=0 <|> must-revalidate

253 Mot inconnu : Pragma => Pragma: no-cache))  | <|> pragma

254 Mot inconnu : gzip_types => | gzip_types ##**Syntaxe:** ?  | les types de fichier qui seront compréssés | <|> gzip_types
254 Mot inconnu : compréssés => | gzip_types ##**Syntaxe:** ?  | les types de fichier qui seront compréssés | <|> compréssés

255 Mot inconnu : gzip_disable => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> gzip_disable
255 Guillemets typographiques ouvrants. => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> " => suggestions : ['«\xa0', '“']
255 Mot inconnu : msie6 => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> msie6
255 Guillemets typographiques fermants. => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> " => suggestions : ['\xa0»', '”']
255 Mot inconnu : gzip_disable => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> gzip_disable
255 Mot inconnu : regex => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> regex
255 Typographie : points de suspension. Utilisez le caractère dédié. => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> ... => suggestions : ['…']
255 Mot inconnu : regexp => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> regexp
255 Mot inconnu : gzipping => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> gzipping
255 Mot inconnu : header => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> header
255 Il manque un espace avant la parenthèse. => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> ( => suggestions : [' (']
255 Pas d’espace après ce signe. => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> (  => suggestions : ['(']
255 Mot inconnu : GET => | gzip_disable "msie6"; ##**Syntaxe:** gzip_disable **regex** ...; | Désactive via une regexp gzipping. Le module utilisera encore une fois le header(( GET / HTTP/1.1 <|> get

256 Mot inconnu : curl => **User-Agent:** curl/7.35.0 <|> curl

257 Mot inconnu : Host => Host: ubuntu-fr.org <|> host
257 Mot inconnu : ubuntu-fr => Host: ubuntu-fr.org <|> ubuntu-fr

259 Mot inconnu : limit_zone => |limit_zone gulag $binary_remote_addr 1m ##**Syntaxe:** ? | crée une zone de stockage nommée « gulag » utilisant  moins de 1 mo de RAM, contenant l'état des connexions classé par adresse ip | <|> limit_zone
259 Mot inconnu : gulag => |limit_zone gulag $binary_remote_addr 1m ##**Syntaxe:** ? | crée une zone de stockage nommée « gulag » utilisant  moins de 1 mo de RAM, contenant l'état des connexions classé par adresse ip | <|> gulag
259 Mot inconnu : binary_remote_addr => |limit_zone gulag $binary_remote_addr 1m ##**Syntaxe:** ? | crée une zone de stockage nommée « gulag » utilisant  moins de 1 mo de RAM, contenant l'état des connexions classé par adresse ip | <|> binary_remote_addr
259 Mot inconnu : gulag => |limit_zone gulag $binary_remote_addr 1m ##**Syntaxe:** ? | crée une zone de stockage nommée « gulag » utilisant  moins de 1 mo de RAM, contenant l'état des connexions classé par adresse ip | <|> gulag
259 Mot inconnu : mo => |limit_zone gulag $binary_remote_addr 1m ##**Syntaxe:** ? | crée une zone de stockage nommée « gulag » utilisant  moins de 1 mo de RAM, contenant l'état des connexions classé par adresse ip | <|> mo
259 Mot inconnu : ip => |limit_zone gulag $binary_remote_addr 1m ##**Syntaxe:** ? | crée une zone de stockage nommée « gulag » utilisant  moins de 1 mo de RAM, contenant l'état des connexions classé par adresse ip | <|> ip

260 Mot inconnu : limit_conn => | limit_conn gulag 50 ##**Syntaxe:** ? | limite le nombre de demande de connexions parallèles à 50 par client |  <|> limit_conn
260 Mot inconnu : gulag => | limit_conn gulag 50 ##**Syntaxe:** ? | limite le nombre de demande de connexions parallèles à 50 par client |  <|> gulag

261 Mot inconnu : include => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> include
261 Typographie : un ou trois points ? => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> .. => suggestions : ['…', '.']
261 Mot inconnu : Nginx => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> nginx
261 Guillemets typographiques ouvrants. => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> " => suggestions : ['«\xa0', '“']
261 Guillemets typographiques fermants. => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> " => suggestions : ['\xa0»', '”']
261 Mot inconnu : html => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> html
261 Il manque un espace. => | include /etc/nginx/mime.types; ##La liste des types MIME résolu par les extensions de fichiers. | Cette liste indique la nature des fichiers renvoyées par le serveur (ex: ceci est une page web http://votrendd.tld/hello.html ou ceci est une vidéo ogg ..  http://votrendd.tld/mavideo.ogg pour que Nginx "comprenne" que c'est un format **.html** ou un format **.ogg** il lui faut un fichier mime.types). | <|> types => suggestions : [' types']

267 Incohérence avec “du” : “reverse” est un verbe. => Les paramètres du reverse proxy et du cache seront consignés dans le fichier /etc/nginx/conf.d/proxy.conf pour plus de clarté. <|> reverse => suggestions : ['reversée', 'reversées', 'reversé', 'reversés']



289 Mot inconnu : proxy_redirect => | proxy_redirect          off | permet une réécriture de l'adresse, inutile quand le serveur web ne se trouve pas sur la même machine physique | <|> proxy_redirect

290 Mot inconnu : proxy_set_header => | proxy_set_header | permet de modifier les entêtes  | <|> proxy_set_header

291 Mot inconnu : proxy_hide_header => | proxy_hide_header | permet de cacher certains entêtes | <|> proxy_hide_header

292 Mot inconnu : proxy_intercept_errors => | proxy_intercept_errors on | permet de contrôler les retours de code d'erreur du serveur web et de les modifier à la volé| <|> proxy_intercept_errors
292 Accord de genre erroné : « volé » est masculin. => | proxy_intercept_errors on | permet de contrôler les retours de code d'erreur du serveur web et de les modifier à la volé| <|> la => suggestions : ['le']
292 Erreur probable. Après le pronom “à”, le verbe devrait être à l’infinitif. => | proxy_intercept_errors on | permet de contrôler les retours de code d'erreur du serveur web et de les modifier à la volé| <|> volé => suggestions : ['voler']

293 Mot inconnu : proxy_buffering => | proxy_buffering on | Si l'on désactive cette option le serveur arrière doit attendre que les données soient envoyées au client pour fermer sa connexion avec nginx | <|> proxy_buffering
293 Mot inconnu : nginx => | proxy_buffering on | Si l'on désactive cette option le serveur arrière doit attendre que les données soient envoyées au client pour fermer sa connexion avec nginx | <|> nginx

294 Mot inconnu : proxy_cache_min_uses => | proxy_cache_min_uses       3   | La ressource devra être demandée 3 fois avant d'être mise en cache | <|> proxy_cache_min_uses

295 Mot inconnu : proxy_cache_key => | proxy_cache_key | clé permettant de stocker des fichiers de plusieurs sites différents dans le même cache. Les noms de fichiers seront le md5 de cette combinaison | <|> proxy_cache_key
295 Mot inconnu : md5 => | proxy_cache_key | clé permettant de stocker des fichiers de plusieurs sites différents dans le même cache. Les noms de fichiers seront le md5 de cette combinaison | <|> md5

296 Mot inconnu : proxy_cache_path => | proxy_cache_path | indique le chemin vers le dossier de cache, organisation des dossiers  ( Si quelqu'un a plus d'information sur cette directive, sa participation est la bienvenue) \\ level 1:2 indique l'organisation des dossiers,\\ keys_zone définit le nom de cette zone, inactive définit le temps de conservation maximum d'un élément sans qu'il soit demandé par un client. Si le temps imparti est épuisé l'élément est supprimé, \\ max_size indique la taille maximale du cache| <|> proxy_cache_path
296 Pas d’espace après ce signe. => | proxy_cache_path | indique le chemin vers le dossier de cache, organisation des dossiers  ( Si quelqu'un a plus d'information sur cette directive, sa participation est la bienvenue) \\ level 1:2 indique l'organisation des dossiers,\\ keys_zone définit le nom de cette zone, inactive définit le temps de conservation maximum d'un élément sans qu'il soit demandé par un client. Si le temps imparti est épuisé l'élément est supprimé, \\ max_size indique la taille maximale du cache| <|> (  => suggestions : ['(']
296 Mot inconnu : level => | proxy_cache_path | indique le chemin vers le dossier de cache, organisation des dossiers  ( Si quelqu'un a plus d'information sur cette directive, sa participation est la bienvenue) \\ level 1:2 indique l'organisation des dossiers,\\ keys_zone définit le nom de cette zone, inactive définit le temps de conservation maximum d'un élément sans qu'il soit demandé par un client. Si le temps imparti est épuisé l'élément est supprimé, \\ max_size indique la taille maximale du cache| <|> level
296 Mot inconnu : keys_zone => | proxy_cache_path | indique le chemin vers le dossier de cache, organisation des dossiers  ( Si quelqu'un a plus d'information sur cette directive, sa participation est la bienvenue) \\ level 1:2 indique l'organisation des dossiers,\\ keys_zone définit le nom de cette zone, inactive définit le temps de conservation maximum d'un élément sans qu'il soit demandé par un client. Si le temps imparti est épuisé l'élément est supprimé, \\ max_size indique la taille maximale du cache| <|> keys_zone
296 Mot inconnu : max_size => | proxy_cache_path | indique le chemin vers le dossier de cache, organisation des dossiers  ( Si quelqu'un a plus d'information sur cette directive, sa participation est la bienvenue) \\ level 1:2 indique l'organisation des dossiers,\\ keys_zone définit le nom de cette zone, inactive définit le temps de conservation maximum d'un élément sans qu'il soit demandé par un client. Si le temps imparti est épuisé l'élément est supprimé, \\ max_size indique la taille maximale du cache| <|> max_size

301 Mot inconnu : trucbidule => Nous allons créer le fichier trucbidule dans le répertoire /etc/nginx/sites-available/. <|> trucbidule

313 Mot inconnu : trucbidule => Contenu du fichier trucbidule: <|> trucbidule


361 Mot inconnu : listen => | listen   ##**Syntaxe:** ?      | adresse et port d'écoute, ici il écoute sur toutes les adresses | <|> listen

362 Mot inconnu : server_name => | server_name ##**Syntaxe:** ?| nom de domaine du serveur arrière, possibilité d'en spécifier plusieurs| <|> server_name

363 Mot inconnu : error_page => | error_page ##**Syntaxe:** ? | redirection des erreurs suivantes vers le chemin indiqué | <|> error_page

364 Mot inconnu : proxy_pass => | proxy_pass  ##**Syntaxe:** ?| indique l'adresse du serveur web arrière | <|> proxy_pass

365 Mot inconnu : proxy_cache_valid => | proxy_cache_valid 12h ##**Syntaxe:** ? | toutes les pages retournant avec un code 200 301 et 302 seront stockées en cache pendant 12 heures. Il est possible de spécifier les codes html pour lesquels les fichiers doivent être mis en cache| <|> proxy_cache_valid
365 Grands nombres : utilisez des espaces insécables. => | proxy_cache_valid 12h ##**Syntaxe:** ? | toutes les pages retournant avec un code 200 301 et 302 seront stockées en cache pendant 12 heures. Il est possible de spécifier les codes html pour lesquels les fichiers doivent être mis en cache| <|> 200 301 => suggestions : ['200\xa0301']
365 Mot inconnu : html => | proxy_cache_valid 12h ##**Syntaxe:** ? | toutes les pages retournant avec un code 200 301 et 302 seront stockées en cache pendant 12 heures. Il est possible de spécifier les codes html pour lesquels les fichiers doivent être mis en cache| <|> html

366 Mot inconnu : proxy_cache => | proxy_cache ##**Syntaxe:** ? | indique la zone de stockage pour le cache | <|> proxy_cache

367 Mot inconnu : proxy_cache_use_stale => | proxy_cache_use_stale ##**Syntaxe:** ? | Si le serveur arrière renvoi ces erreurs error timeout invalid_header updating nginx servira les fichiers qu'il possède en cache| <|> proxy_cache_use_stale
367 Mot inconnu : error => | proxy_cache_use_stale ##**Syntaxe:** ? | Si le serveur arrière renvoi ces erreurs error timeout invalid_header updating nginx servira les fichiers qu'il possède en cache| <|> error
367 Mot inconnu : timeout => | proxy_cache_use_stale ##**Syntaxe:** ? | Si le serveur arrière renvoi ces erreurs error timeout invalid_header updating nginx servira les fichiers qu'il possède en cache| <|> timeout
367 Mot inconnu : invalid_header => | proxy_cache_use_stale ##**Syntaxe:** ? | Si le serveur arrière renvoi ces erreurs error timeout invalid_header updating nginx servira les fichiers qu'il possède en cache| <|> invalid_header
367 Mot inconnu : updating => | proxy_cache_use_stale ##**Syntaxe:** ? | Si le serveur arrière renvoi ces erreurs error timeout invalid_header updating nginx servira les fichiers qu'il possède en cache| <|> updating
367 Mot inconnu : nginx => | proxy_cache_use_stale ##**Syntaxe:** ? | Si le serveur arrière renvoi ces erreurs error timeout invalid_header updating nginx servira les fichiers qu'il possède en cache| <|> nginx

368 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => | expires max ##**Syntaxe:** ?| donne une date d'expiration maximale pour que le client puisse mettre les fichiers statiques en cache| <|> expires => suggestions : ['expire']

370 Il manque un “s” à « quelque » ou « explications » doit être au singulier. => Quelque explications sur notre configuration. Comme vous l'avez vu toutes les requêtes ne sont pas traitées de la même manière. Différentes règles ont été créées pour séparer les contenus. <|> quelque => suggestions : ['Quelques']

386 Pas d’espace avant un point. => Vous avez peut-être remarqué dans le fichier de configuration une petite étoile après la vague ~* . Cela indique que la règle n'est pas sensible a la casse. <|>  . => suggestions : ['.']

387 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   <|>   => suggestions : ['']

392 Mot inconnu : Load => ==== Load balancing ==== <|> load
392 Mot inconnu : balancing => ==== Load balancing ==== <|> balancing

394 Mot inconnu : load => Il est possible de faire du load balancing avec nginx d'une manière assez simple. Il suffit de déclarer un groupe de serveurs et d'envoyer les requêtes vers ce groupe d'hôtes avec la directive //proxy_pass//. La documentation officielle détaillant la procédure ainsi que toutes les options possibles est disponible [[http://wiki.nginx.org/NginxHttpUpstreamModule|ici]]. <|> load
394 Mot inconnu : balancing => Il est possible de faire du load balancing avec nginx d'une manière assez simple. Il suffit de déclarer un groupe de serveurs et d'envoyer les requêtes vers ce groupe d'hôtes avec la directive //proxy_pass//. La documentation officielle détaillant la procédure ainsi que toutes les options possibles est disponible [[http://wiki.nginx.org/NginxHttpUpstreamModule|ici]]. <|> balancing
394 Mot inconnu : nginx => Il est possible de faire du load balancing avec nginx d'une manière assez simple. Il suffit de déclarer un groupe de serveurs et d'envoyer les requêtes vers ce groupe d'hôtes avec la directive //proxy_pass//. La documentation officielle détaillant la procédure ainsi que toutes les options possibles est disponible [[http://wiki.nginx.org/NginxHttpUpstreamModule|ici]]. <|> nginx
394 Mot inconnu : proxy_pass => Il est possible de faire du load balancing avec nginx d'une manière assez simple. Il suffit de déclarer un groupe de serveurs et d'envoyer les requêtes vers ce groupe d'hôtes avec la directive //proxy_pass//. La documentation officielle détaillant la procédure ainsi que toutes les options possibles est disponible [[http://wiki.nginx.org/NginxHttpUpstreamModule|ici]]. <|> proxy_pass

414 Mot inconnu : Nginx => ===== Autres configurations de Nginx ===== <|> nginx
416 Mot inconnu : Nginx =>   * [[http://www.howtoforge.com/installing-php-5.3-nginx-and-php-fpm-on-ubuntu-debian|Installation de Nginx et PHP-FPM sur Debian/Ubuntu]] via HowToForge <|> nginx
416 Mot inconnu : PHP-FPM =>   * [[http://www.howtoforge.com/installing-php-5.3-nginx-and-php-fpm-on-ubuntu-debian|Installation de Nginx et PHP-FPM sur Debian/Ubuntu]] via HowToForge <|> php-fpm
416 Mot inconnu : HowToForge =>   * [[http://www.howtoforge.com/installing-php-5.3-nginx-and-php-fpm-on-ubuntu-debian|Installation de Nginx et PHP-FPM sur Debian/Ubuntu]] via HowToForge <|> howtoforge
417 Mot inconnu : Nginx =>   * [[http://www.howtoforge.net/installing-nginx-with-php-5.3-and-php-fpm-on-ubuntu-lucid-lynx-10.04|Installation de Nginx et PHP-FPM sur Ubuntu 10.04]] <|> nginx
417 Mot inconnu : PHP-FPM =>   * [[http://www.howtoforge.net/installing-nginx-with-php-5.3-and-php-fpm-on-ubuntu-lucid-lynx-10.04|Installation de Nginx et PHP-FPM sur Ubuntu 10.04]] <|> php-fpm
418 Mot inconnu : nginxconfig =>   * configurateur en ligne [[https://www.digitalocean.com/community/tools/nginx#?]] (précédemment nginxconfig.io) <|> nginxconfig
418 Mot inconnu : io =>   * configurateur en ligne [[https://www.digitalocean.com/community/tools/nginx#?]] (précédemment nginxconfig.io) <|> io
419 Mot inconnu : Nginx =>   * Nginx et PHP tournant en FastCGI : FIXME à compléter <|> nginx
419 Mot inconnu : FastCGI =>   * Nginx et PHP tournant en FastCGI : FIXME à compléter <|> fastcgi
419 Mot inconnu : FIXME =>   * Nginx et PHP tournant en FastCGI : FIXME à compléter <|> fixme
424 Mot inconnu : Nginx =>   * [[https://nginx.org/|Site officiel de Nginx]] <|> nginx
425 Il manque un espace. =>   * [[wp>fr:Nginx|Nginx sur Wikipédia]] <|> nginx => suggestions : [' Nginx']
425 Mot inconnu : Nginx =>   * [[wp>fr:Nginx|Nginx sur Wikipédia]] <|> nginx
425 Mot inconnu : Nginx =>   * [[wp>fr:Nginx|Nginx sur Wikipédia]] <|> nginx
