
2 Mot inconnu : Grub2 => ====== Sécuriser Grub2 de manière avancée ====== | grub2
4 Espace(s) en fin de ligne à supprimer. => Ce tutoriel s'adresse à des utilisateurs confirmés en utilisation de la ligne de commande et en dépannage de démarrage. Sinon, vous allez droit vers la réinstallation pure et simple !  |   => suggestions : ['']

8 Avec une unité de mesure, mettez un espace insécable. => Il faut savoir que votre ordinateur ne sera pas forcément protégé à 100% (puisqu'il reste la possibilité de démarrer sur une clé live), mais avec un mot de passe bios et le chiffrement des données sensibles, il y a de quoi retenir (ou dégoûter) un potentiel attaquant. | 100% => suggestions : ['100\xa0%']
8 Accord de nombre erroné avec « mot » : « bios » devrait être au singulier. => Il faut savoir que votre ordinateur ne sera pas forcément protégé à 100% (puisqu'il reste la possibilité de démarrer sur une clé live), mais avec un mot de passe bios et le chiffrement des données sensibles, il y a de quoi retenir (ou dégoûter) un potentiel attaquant. | bios => suggestions : ['bio']

12 Mot inconnu : grub => <note warning>Les manipulations qui suivent peuvent vous faire complétement perdre l'accès à votre système. Aussi, pensez à faire une sauvegarde du fichier grub.cfg grâce à cette ligne: | grub
12 Mot inconnu : cfg => <note warning>Les manipulations qui suivent peuvent vous faire complétement perdre l'accès à votre système. Aussi, pensez à faire une sauvegarde du fichier grub.cfg grâce à cette ligne: | cfg
14 Il manque un espace à côté du tiret. => <code bash>sudo cp -p /boot/grub/grub.cfg /boot/grub/grub.cfg.$(date --rfc-3339=date)</code> |  - => suggestions : [' – ', ' — ']

16 Mot inconnu : grub => La sauvegarde du fichier grub.cfg sera suffixé par la date de la sauvegarde, ce qui permettra de le retrouver plus facilement en cas de multiples sauvegardes. | grub
16 Mot inconnu : cfg => La sauvegarde du fichier grub.cfg sera suffixé par la date de la sauvegarde, ce qui permettra de le retrouver plus facilement en cas de multiples sauvegardes. | cfg
22 Il manque un espace à côté du tiret. => <code bash>sudo cp -p mnt/boot/grub/grub.cfg.DATE mnt/boot/grub/grub.cfg</code> |  - => suggestions : [' – ', ' — ']

24 Mot inconnu : mnt => si la racine de votre système est montée sur mnt.  | mnt
24 Espace(s) en fin de ligne à supprimer. => si la racine de votre système est montée sur mnt.  |   => suggestions : ['']

27 Mot inconnu : grub => Il est également possible de modifier directement le grub.cfg pour pouvoir rebooter (mais il faut savoir ce qu'on fait). | grub
27 Mot inconnu : cfg => Il est également possible de modifier directement le grub.cfg pour pouvoir rebooter (mais il faut savoir ce qu'on fait). | cfg
27 Mot inconnu : rebooter => Il est également possible de modifier directement le grub.cfg pour pouvoir rebooter (mais il faut savoir ce qu'on fait). | rebooter

36 Mot inconnu : _security_header => Normalement à ce stade vous devriez posséder un fichier **00_security_header** ressemblant à celui ci: | _security_header
36 Il manque un trait d’union. => Normalement à ce stade vous devriez posséder un fichier **00_security_header** ressemblant à celui ci: | celui ci => suggestions : ['celui-ci']

49 Mot inconnu : superusers => Le mot de passe n'est pas identique, mais c'est normal. Ce qui compte, c'est que le script fasse son travail. En particulier, que le superusers toto soit créé et fonctionne.  | superusers
49 Espace(s) en fin de ligne à supprimer. => Le mot de passe n'est pas identique, mais c'est normal. Ce qui compte, c'est que le script fasse son travail. En particulier, que le superusers toto soit créé et fonctionne.  |   => suggestions : ['']

51 Mot inconnu : _security_header => ===== Modifier le script 00_security_header ===== | _security_header

53 Guillemets typographiques ouvrants. => Nous allons maintenant effacer la ligne "EOF" rajouter au script les lignes suivantes: | " => suggestions : ['«\xa0', '“']
53 Mot inconnu : EOF => Nous allons maintenant effacer la ligne "EOF" rajouter au script les lignes suivantes: | eof
53 Guillemets typographiques fermants. => Nous allons maintenant effacer la ligne "EOF" rajouter au script les lignes suivantes: | " => suggestions : ['\xa0»', '”']

63 Mot inconnu : Grub => Nous utilisons une variable pour déterminer les utilisateurs autorisés à faire quelque chose (nous définirons le quelque chose plus tard) Les commandes **export** permettent de changer la portée des variables afin qu'elles soient valables dans les autres fichiers de configuration de Grub.  | grub
63 Espace(s) en fin de ligne à supprimer. => Nous utilisons une variable pour déterminer les utilisateurs autorisés à faire quelque chose (nous définirons le quelque chose plus tard) Les commandes **export** permettent de changer la portée des variables afin qu'elles soient valables dans les autres fichiers de configuration de Grub.  |   => suggestions : ['']

65 Mot inconnu : _security_header => Voilà maintenant à quoi ressemble **00_security_header** | _security_header

82 Mot inconnu : _linux => ===== Modifier le script 10_linux ===== | _linux

86 Mot inconnu : Grub => Pour restreindre les parties de Grub que nous voulons, il va falloir "verrouiller" les entrées au niveau du script **10_linux** qui les génèrent. | grub
86 Guillemets typographiques ouvrants. => Pour restreindre les parties de Grub que nous voulons, il va falloir "verrouiller" les entrées au niveau du script **10_linux** qui les génèrent. | " => suggestions : ['«\xa0', '“']
86 Guillemets typographiques fermants. => Pour restreindre les parties de Grub que nous voulons, il va falloir "verrouiller" les entrées au niveau du script **10_linux** qui les génèrent. | " => suggestions : ['\xa0»', '”']
86 Mot inconnu : _linux => Pour restreindre les parties de Grub que nous voulons, il va falloir "verrouiller" les entrées au niveau du script **10_linux** qui les génèrent. | _linux

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avec votre éditeur favori, allez à la ligne 132. Vous voyez normalement cette ligne: |    => suggestions : ['']

94 Accord de nombre erroné : « sous » est au pluriel. => C'est la ligne qui définit toutes les entrées des noyaux dans le sous menu "Options avancées".  | le => suggestions : ['les']
94 Accord de nombre erroné : « sous » devrait être au singulier. => C'est la ligne qui définit toutes les entrées des noyaux dans le sous menu "Options avancées".  | sous => suggestions : ['sou']
94 Guillemets typographiques ouvrants. => C'est la ligne qui définit toutes les entrées des noyaux dans le sous menu "Options avancées".  | " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. => C'est la ligne qui définit toutes les entrées des noyaux dans le sous menu "Options avancées".  | " => suggestions : ['\xa0»', '”']
94 Espace(s) en fin de ligne à supprimer. => C'est la ligne qui définit toutes les entrées des noyaux dans le sous menu "Options avancées".  |   => suggestions : ['']

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * Nous allons écrire **\$restricted** afin d'inclure le contenu de la variable restricted dans la ligne d'entrée ci dessus et enlever la variable **\$menuentry_id_option**, qui annulerait ce qu'on vient d'écrire. Cela donne: |     => suggestions : ['']
96 Mot inconnu : restricted =>    * Nous allons écrire **\$restricted** afin d'inclure le contenu de la variable restricted dans la ligne d'entrée ci dessus et enlever la variable **\$menuentry_id_option**, qui annulerait ce qu'on vient d'écrire. Cela donne: | restricted
96 Mot inconnu : restricted =>    * Nous allons écrire **\$restricted** afin d'inclure le contenu de la variable restricted dans la ligne d'entrée ci dessus et enlever la variable **\$menuentry_id_option**, qui annulerait ce qu'on vient d'écrire. Cela donne: | restricted
96 Il manque un trait d’union. =>    * Nous allons écrire **\$restricted** afin d'inclure le contenu de la variable restricted dans la ligne d'entrée ci dessus et enlever la variable **\$menuentry_id_option**, qui annulerait ce qu'on vient d'écrire. Cela donne: | ci dessus => suggestions : ['ci-dessus']
96 Mot inconnu : menuentry_id_option =>    * Nous allons écrire **\$restricted** afin d'inclure le contenu de la variable restricted dans la ligne d'entrée ci dessus et enlever la variable **\$menuentry_id_option**, qui annulerait ce qu'on vient d'écrire. Cela donne: | menuentry_id_option

102 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Faites maintenant: |    => suggestions : ['']

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Redémarrez votre ordinateur afin de vous assurer de la prise en compte correcte des options. Normalement, en allant dans le menu "Options Avancées", il est désormais impossible de démarrer un noyau sans entrer le mot de passe renseigné dans 00_security_header. Néanmoins, depuis le menu principal, il est possible de démarrer le dernier noyau. |    => suggestions : ['']
106 Guillemets typographiques ouvrants. =>   * Redémarrez votre ordinateur afin de vous assurer de la prise en compte correcte des options. Normalement, en allant dans le menu "Options Avancées", il est désormais impossible de démarrer un noyau sans entrer le mot de passe renseigné dans 00_security_header. Néanmoins, depuis le menu principal, il est possible de démarrer le dernier noyau. | " => suggestions : ['«\xa0', '“']
106 Guillemets typographiques fermants. =>   * Redémarrez votre ordinateur afin de vous assurer de la prise en compte correcte des options. Normalement, en allant dans le menu "Options Avancées", il est désormais impossible de démarrer un noyau sans entrer le mot de passe renseigné dans 00_security_header. Néanmoins, depuis le menu principal, il est possible de démarrer le dernier noyau. | " => suggestions : ['\xa0»', '”']
106 Mot inconnu : _security_header =>   * Redémarrez votre ordinateur afin de vous assurer de la prise en compte correcte des options. Normalement, en allant dans le menu "Options Avancées", il est désormais impossible de démarrer un noyau sans entrer le mot de passe renseigné dans 00_security_header. Néanmoins, depuis le menu principal, il est possible de démarrer le dernier noyau. | _security_header

108 Guillemets typographiques ouvrants. => <note warning>Pour sortir du menu "Options Avancées" sans avoir entré le mot de passe auparavant, il faut saisir le mot de passe!</note> | " => suggestions : ['«\xa0', '“']
108 Guillemets typographiques fermants. => <note warning>Pour sortir du menu "Options Avancées" sans avoir entré le mot de passe auparavant, il faut saisir le mot de passe!</note> | " => suggestions : ['\xa0»', '”']

110 Mot inconnu : dual-boot => ===== En cas de dual-boot avec un autre Système type Debian ===== | dual-boot

112 Mot inconnu : dual-boot => Si vous êtes en dual-boot avec un autre système fonctionnant de la même manière (avec un sous menu "Options Avancées"), les manipulations ci haut sont à faire sur le grub maître (celui qui se lance).  | dual-boot
112 Guillemets typographiques ouvrants. => Si vous êtes en dual-boot avec un autre système fonctionnant de la même manière (avec un sous menu "Options Avancées"), les manipulations ci haut sont à faire sur le grub maître (celui qui se lance).  | " => suggestions : ['«\xa0', '“']
112 Guillemets typographiques fermants. => Si vous êtes en dual-boot avec un autre système fonctionnant de la même manière (avec un sous menu "Options Avancées"), les manipulations ci haut sont à faire sur le grub maître (celui qui se lance).  | " => suggestions : ['\xa0»', '”']
112 Mot inconnu : grub => Si vous êtes en dual-boot avec un autre système fonctionnant de la même manière (avec un sous menu "Options Avancées"), les manipulations ci haut sont à faire sur le grub maître (celui qui se lance).  | grub
112 Espace(s) en fin de ligne à supprimer. => Si vous êtes en dual-boot avec un autre système fonctionnant de la même manière (avec un sous menu "Options Avancées"), les manipulations ci haut sont à faire sur le grub maître (celui qui se lance).  |   => suggestions : ['']

114 Mot inconnu : _os-prober => De plus, de manière personnelle, pour limiter les entrées répétitives, je désactive le script **30_os-prober** pour tout les grub non maître:  | _os-prober
114 Mot inconnu : grub => De plus, de manière personnelle, pour limiter les entrées répétitives, je désactive le script **30_os-prober** pour tout les grub non maître:  | grub
114 Espace(s) en fin de ligne à supprimer. => De plus, de manière personnelle, pour limiter les entrées répétitives, je désactive le script **30_os-prober** pour tout les grub non maître:  |   => suggestions : ['']
116 Il manque un espace à côté du tiret. => <code bash>sudo chmod -x /etc/grub.d/30_os-prober</code> |  - => suggestions : [' – ', ' — ']

118 Guillemets typographiques ouvrants. => Sinon, le problème est bien pire. Les entrées de l'OS maître se retrouvent dans le menu "Options avancées" des autres OS, et cela détruit tout nos efforts précédents. | " => suggestions : ['«\xa0', '“']
118 Guillemets typographiques fermants. => Sinon, le problème est bien pire. Les entrées de l'OS maître se retrouvent dans le menu "Options avancées" des autres OS, et cela détruit tout nos efforts précédents. | " => suggestions : ['\xa0»', '”']
118 Erreur d’accord probable avec « nos ». => Sinon, le problème est bien pire. Les entrées de l'OS maître se retrouvent dans le menu "Options avancées" des autres OS, et cela détruit tout nos efforts précédents. | tout => suggestions : ['tous']

120 Guillemets typographiques ouvrants. => Il reste à sécuriser le menu "Options Avancées" de l'autre OS (pour ses propres noyaux). Il faut le faire depuis le grub maître. | " => suggestions : ['«\xa0', '“']
120 Guillemets typographiques fermants. => Il reste à sécuriser le menu "Options Avancées" de l'autre OS (pour ses propres noyaux). Il faut le faire depuis le grub maître. | " => suggestions : ['\xa0»', '”']
120 Mot inconnu : grub => Il reste à sécuriser le menu "Options Avancées" de l'autre OS (pour ses propres noyaux). Il faut le faire depuis le grub maître. | grub

122 Mot inconnu : _os-prober => ==== Modification de 30_os-prober ==== | _os-prober

124 Mot inconnu : _os-prober => Le fichier **30_os-prober** génère le menu grub pour les autres systèmes détectés par os-prober. Il suffit de trouver la ligne concernant le menu "Options Avancées" et de faire la même manipulation que dans la partie précédente.  | _os-prober
124 Mot inconnu : grub => Le fichier **30_os-prober** génère le menu grub pour les autres systèmes détectés par os-prober. Il suffit de trouver la ligne concernant le menu "Options Avancées" et de faire la même manipulation que dans la partie précédente.  | grub
124 Guillemets typographiques ouvrants. => Le fichier **30_os-prober** génère le menu grub pour les autres systèmes détectés par os-prober. Il suffit de trouver la ligne concernant le menu "Options Avancées" et de faire la même manipulation que dans la partie précédente.  | " => suggestions : ['«\xa0', '“']
124 Guillemets typographiques fermants. => Le fichier **30_os-prober** génère le menu grub pour les autres systèmes détectés par os-prober. Il suffit de trouver la ligne concernant le menu "Options Avancées" et de faire la même manipulation que dans la partie précédente.  | " => suggestions : ['\xa0»', '”']
124 Espace(s) en fin de ligne à supprimer. => Le fichier **30_os-prober** génère le menu grub pour les autres systèmes détectés par os-prober. Il suffit de trouver la ligne concernant le menu "Options Avancées" et de faire la même manipulation que dans la partie précédente.  |   => suggestions : ['']

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ligne 292, vous avez: |    => suggestions : ['']
128 Guillemets typographiques ouvrants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['«\xa0', '“']
128 Guillemets typographiques ouvrants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['«\xa0', '“']
128 Il manque un espace. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | s => suggestions : [' s']
128 Guillemets typographiques fermants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['\xa0»', '”']
128 Guillemets typographiques fermants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['\xa0»', '”']
128 Guillemets typographiques ouvrants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | ' => suggestions : ['“', '‘', '‹']
128 Guillemets typographiques fermants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$menuentry_id_option 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | ' => suggestions : ['”', '’', '›']

130 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Il faut remplacer **\$menuentry_id_option** par **\$restricted**, ce qui donne: |    => suggestions : ['']
130 Mot inconnu : menuentry_id_option =>   * Il faut remplacer **\$menuentry_id_option** par **\$restricted**, ce qui donne: | menuentry_id_option
130 Mot inconnu : restricted =>   * Il faut remplacer **\$menuentry_id_option** par **\$restricted**, ce qui donne: | restricted
132 Guillemets typographiques ouvrants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['«\xa0', '“']
132 Guillemets typographiques ouvrants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['«\xa0', '“']
132 Il manque un espace. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | s => suggestions : [' s']
132 Guillemets typographiques fermants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['\xa0»', '”']
132 Guillemets typographiques fermants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | " => suggestions : ['\xa0»', '”']
132 Guillemets typographiques ouvrants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | ' => suggestions : ['“', '‘', '‹']
132 Guillemets typographiques fermants. => <code bash>echo "submenu '$gettext_printf "Advanced options for %s" "${OS} $onstr" | grub_quote)' \$restricted 'osprober-gnulinux-advanced-$boot_device_id' {"</code> | ' => suggestions : ['”', '’', '›']

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Puis, dans le terminal: |    => suggestions : ['']

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Redémarrer pour vérifier. Cette fois, dès l'appui sur le menu "Options Avancées" de l'autre OS, le mot de passe est demandé. |    => suggestions : ['']
138 Guillemets typographiques ouvrants. =>   * Redémarrer pour vérifier. Cette fois, dès l'appui sur le menu "Options Avancées" de l'autre OS, le mot de passe est demandé. | " => suggestions : ['«\xa0', '“']
138 Guillemets typographiques fermants. =>   * Redémarrer pour vérifier. Cette fois, dès l'appui sur le menu "Options Avancées" de l'autre OS, le mot de passe est demandé. | " => suggestions : ['\xa0»', '”']

142 Mot inconnu : grub => Vous avez désormais un menu grub somme toute assez robuste, ce qui n'empêche pas des précautions élémentaires (ne pas laisser son ordinateur portable sans surveillance par exemple). | grub
