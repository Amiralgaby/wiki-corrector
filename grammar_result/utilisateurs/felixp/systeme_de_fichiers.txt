
7 Typographie : points de suspension. Utilisez le caractère dédié. => Les systèmes de fichiers, il en existe de multiples, gèrent l'organisation des informations mémorisées sur les périphériques de l'ordinateur. Chacun offre des avantages pour certains types d'utilisation... et des désavantages pour d'autres. Connaître leurs principales caractéristiques est nécessaire pour la bonne utilisation d'un équipement. | ... => suggestions : ['…']

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un bit est un 1 ou un 0 |    => suggestions : ['']

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un octet (//byte// en anglais) est composé de huit bits |    => suggestions : ['']

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un KibiOctet est un groupe de 1024 octets (2^10), à ne pas confondre avec : |    => suggestions : ['']
14 Mot inconnu : KibiOctet =>   * Un KibiOctet est un groupe de 1024 octets (2^10), à ne pas confondre avec : | kibioctet

15 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un KiloOctet, qui lui ne contient que 1000 octets, comme un kilomètre contient 1000 mètres. |    => suggestions : ['']
15 Mot inconnu : KiloOctet =>   * Un KiloOctet, qui lui ne contient que 1000 octets, comme un kilomètre contient 1000 mètres. | kilooctet

17 Guillemets typographiques ouvrants. => En fait, chaque bit d'information est un bâtonnet dont l'orientation est soit "Nord" soit "Sud" sur le disque dur, et une tête de lecture va lire/écrire sur chaque bâtonnet. | " => suggestions : ['«\xa0', '“']
17 Guillemets typographiques fermants. => En fait, chaque bit d'information est un bâtonnet dont l'orientation est soit "Nord" soit "Sud" sur le disque dur, et une tête de lecture va lire/écrire sur chaque bâtonnet. | " => suggestions : ['\xa0»', '”']
17 Guillemets typographiques ouvrants. => En fait, chaque bit d'information est un bâtonnet dont l'orientation est soit "Nord" soit "Sud" sur le disque dur, et une tête de lecture va lire/écrire sur chaque bâtonnet. | " => suggestions : ['«\xa0', '“']
17 Guillemets typographiques fermants. => En fait, chaque bit d'information est un bâtonnet dont l'orientation est soit "Nord" soit "Sud" sur le disque dur, et une tête de lecture va lire/écrire sur chaque bâtonnet. | " => suggestions : ['\xa0»', '”']

19 Guillemets typographiques ouvrants. => Il faut donc une "table des matières" à chaque partition d'un disque, qui serait chaque "section" d'une gigantesque bibliothèque.\\ | " => suggestions : ['«\xa0', '“']
19 Guillemets typographiques fermants. => Il faut donc une "table des matières" à chaque partition d'un disque, qui serait chaque "section" d'une gigantesque bibliothèque.\\ | " => suggestions : ['\xa0»', '”']
19 Guillemets typographiques ouvrants. => Il faut donc une "table des matières" à chaque partition d'un disque, qui serait chaque "section" d'une gigantesque bibliothèque.\\ | " => suggestions : ['«\xa0', '“']
19 Guillemets typographiques fermants. => Il faut donc une "table des matières" à chaque partition d'un disque, qui serait chaque "section" d'une gigantesque bibliothèque.\\ | " => suggestions : ['\xa0»', '”']

20 Mot inconnu : Dewey => Une bibliothèque va classer ses livres, souvent selon le Système Dewey, qui attribue un numéro à chaque section, puis sous-section (des dossiers), etc.\\ | dewey

22 Mot inconnu : NTFS => Microsoft(r) Windows(r) ne sait lire que le Fat et le NTFS, mais Linux utilise la plupart du temps d'autres systèmes de fichiers, qui existent par dizaines : Ext, BtrFS, ReiserFS, JFS, XFS, etc. | ntfs
22 Mot inconnu : Ext => Microsoft(r) Windows(r) ne sait lire que le Fat et le NTFS, mais Linux utilise la plupart du temps d'autres systèmes de fichiers, qui existent par dizaines : Ext, BtrFS, ReiserFS, JFS, XFS, etc. | ext
22 Mot inconnu : BtrFS => Microsoft(r) Windows(r) ne sait lire que le Fat et le NTFS, mais Linux utilise la plupart du temps d'autres systèmes de fichiers, qui existent par dizaines : Ext, BtrFS, ReiserFS, JFS, XFS, etc. | btrfs
22 Mot inconnu : ReiserFS => Microsoft(r) Windows(r) ne sait lire que le Fat et le NTFS, mais Linux utilise la plupart du temps d'autres systèmes de fichiers, qui existent par dizaines : Ext, BtrFS, ReiserFS, JFS, XFS, etc. | reiserfs
22 Mot inconnu : JFS => Microsoft(r) Windows(r) ne sait lire que le Fat et le NTFS, mais Linux utilise la plupart du temps d'autres systèmes de fichiers, qui existent par dizaines : Ext, BtrFS, ReiserFS, JFS, XFS, etc. | jfs
22 Mot inconnu : XFS => Microsoft(r) Windows(r) ne sait lire que le Fat et le NTFS, mais Linux utilise la plupart du temps d'autres systèmes de fichiers, qui existent par dizaines : Ext, BtrFS, ReiserFS, JFS, XFS, etc. | xfs

30 Mot inconnu : Fat32 => Par exemple, le Fat32 limite les fichiers à 4Go, ce qui est problématique pour des films en HD par exemple. Les ficihers trop grands ne sont pas enregistrés totalement, on ne peut récupérer que le début. | fat32
30 Mot inconnu : ficihers => Par exemple, le Fat32 limite les fichiers à 4Go, ce qui est problématique pour des films en HD par exemple. Les ficihers trop grands ne sont pas enregistrés totalement, on ne peut récupérer que le début. | ficihers

33 Mot inconnu : Fat16 => Par exemple, le Fat16 (plus utilisé, heureusement) est limité à 4Go. On peut dire que ce n'est plus un facteur limitant aujourd'hui. | fat16
40 Guillemets typographiques ouvrants. => En effet, lorsqu'on enregistre sur le disque, que se passe-t-il si l'écriture est interrompue avant son terme ? (Par exemple dans le cas de coupure de courant ou de débranchement "sauvage")\\ | " => suggestions : ['«\xa0', '“']
40 Guillemets typographiques fermants. => En effet, lorsqu'on enregistre sur le disque, que se passe-t-il si l'écriture est interrompue avant son terme ? (Par exemple dans le cas de coupure de courant ou de débranchement "sauvage")\\ | " => suggestions : ['\xa0»', '”']

43 Guillemets typographiques ouvrants. => La journalisation prévient ce genre d'accident en conservant les anciennes données pendant l'enregistrement, puis en "déplaçant" le fichier là où la sauvegarde a été écrite. Ainsi, en cas de problème l'ancien fichier existe toujours. | " => suggestions : ['«\xa0', '“']
43 Guillemets typographiques fermants. => La journalisation prévient ce genre d'accident en conservant les anciennes données pendant l'enregistrement, puis en "déplaçant" le fichier là où la sauvegarde a été écrite. Ainsi, en cas de problème l'ancien fichier existe toujours. | " => suggestions : ['\xa0»', '”']

45 Mot inconnu : FIXME => FIXME : Je n'ai compris ni l'explication d'origine, ni Wikipedia… Je ne suis donc pas vraiment sûr de ce que j'ai écrit. | fixme
45 Mot inconnu : Wikipedia => FIXME : Je n'ai compris ni l'explication d'origine, ni Wikipedia… Je ne suis donc pas vraiment sûr de ce que j'ai écrit. | wikipedia

47 Mot inconnu : __totalement__ => La journalisation entraîne une (faible, mais parfois visible) diminution des performances, et est **//__totalement__//** incompatible avec les SSD. (Lien vers la page de doc !) | __totalement__

48 Mot inconnu : Usb => C'est aussi peu utile pour les périphériques de stockage Usb. | usb
50 Mot inconnu : inode => === Particularité des systèmes de fichiers Unix/Linux : inode === | inode

51 Typographie : points de suspension. Utilisez le caractère dédié. => Les utilisateurs habitués de Microsoft Windows savent qu'il n'est normalement pas possible de modifier les propriétés d'un fichier (renommer, déplacer, supprimer...) quand celui-ci est ouvert par un programme ; cette restriction n'existe pas sur les systèmes de fichiers de type Unix/Linux.\\ | ... => suggestions : ['…']

52 Mot inconnu : inode => La raison est que sur les systèmes de fichiers Linux, les fichiers sont indexés selon un numéro, appelé //inode//, et que chaque inode possède de nombreux attributs associés à lui, tels les droits d'accès, le nom du fichier, etc.\\ | inode
52 Mot inconnu : inode => La raison est que sur les systèmes de fichiers Linux, les fichiers sont indexés selon un numéro, appelé //inode//, et que chaque inode possède de nombreux attributs associés à lui, tels les droits d'accès, le nom du fichier, etc.\\ | inode

53 Mot inconnu : inode => Lorsque vous supprimez un fichier, l'inode est « délié » du système de fichiers (c'est-à-dire qu'il n'est plus indexé). Mais si des programmes ont un lien avec l'inode (par exemple, si un document texte est ouvert dans un éditeur de texte, il a un lien avec cet éditeur de texte), le fichier continue d'exister dans le système d'exploitation et continue d'être mis à jour.\\ | inode
53 Mot inconnu : inode => Lorsque vous supprimez un fichier, l'inode est « délié » du système de fichiers (c'est-à-dire qu'il n'est plus indexé). Mais si des programmes ont un lien avec l'inode (par exemple, si un document texte est ouvert dans un éditeur de texte, il a un lien avec cet éditeur de texte), le fichier continue d'exister dans le système d'exploitation et continue d'être mis à jour.\\ | inode

54 Mot inconnu : inode => Un fichier n'est réellement effacé que lorsque tous les liens avec son inode ont été coupés. Ce que tout ceci signifie est que vous pouvez supprimer des programmes alors qu'ils sont en fonctionnement sans faire planter votre système d'exploitation, renommer ou déplacer des fichiers avant qu'ils aient fini d'être téléchargés sans les corrompre et supprimer un fichier alors qu'il est encore ouvert dans un logiciel. | inode

59 Espace(s) surnuméraire(s) à supprimer. => ^   Nom du système de fichiers   ^   Taille maximale d'un fichier   ^   Taille maximale d'une partition   ^   Journalisée ou non ?  ^  Gestion des droits d'accès?  ^   Notes   ^ |     => suggestions : [' ']
59 Espace(s) surnuméraire(s) à supprimer. => ^   Nom du système de fichiers   ^   Taille maximale d'un fichier   ^   Taille maximale d'une partition   ^   Journalisée ou non ?  ^  Gestion des droits d'accès?  ^   Notes   ^ |     => suggestions : [' ']
59 Espace(s) surnuméraire(s) à supprimer. => ^   Nom du système de fichiers   ^   Taille maximale d'un fichier   ^   Taille maximale d'une partition   ^   Journalisée ou non ?  ^  Gestion des droits d'accès?  ^   Notes   ^ |     => suggestions : [' ']
59 Espace(s) surnuméraire(s) à supprimer. => ^   Nom du système de fichiers   ^   Taille maximale d'un fichier   ^   Taille maximale d'une partition   ^   Journalisée ou non ?  ^  Gestion des droits d'accès?  ^   Notes   ^ |    => suggestions : [' ']
59 Espace(s) surnuméraire(s) à supprimer. => ^   Nom du système de fichiers   ^   Taille maximale d'un fichier   ^   Taille maximale d'une partition   ^   Journalisée ou non ?  ^  Gestion des droits d'accès?  ^   Notes   ^ |    => suggestions : [' ']
59 Espace(s) surnuméraire(s) à supprimer. => ^   Nom du système de fichiers   ^   Taille maximale d'un fichier   ^   Taille maximale d'une partition   ^   Journalisée ou non ?  ^  Gestion des droits d'accès?  ^   Notes   ^ |     => suggestions : [' ']

60 Guillemets typographiques ouvrants. => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | '' => suggestions : ['«\xa0', '“']
60 Mot inconnu : Ext2 => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | ext2
60 Guillemets typographiques fermants. => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | '' => suggestions : ['\xa0»', '”']
60 Mot inconnu : Extended => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | extended
60 Mot inconnu : System => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | system
60 Mot inconnu : TiB => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | tib
60 Mot inconnu : TiB => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | | tib
60 Espace(s) surnuméraire(s) à supprimer. => |  ''Ext2'' (Extended File System)  | 2 TiB | 4 TiB | Non | Oui | Système de fichiers natif de Linux.  Désuet, car non journalisé. | |    => suggestions : [' ']

61 Guillemets typographiques ouvrants. => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | '' => suggestions : ['«\xa0', '“']
61 Mot inconnu : Ext3 => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | ext3
61 Guillemets typographiques fermants. => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | '' => suggestions : ['\xa0»', '”']
61 Mot inconnu : TiB => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | tib
61 Mot inconnu : TiB => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | tib
61 Mot inconnu : Ext3 => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | ext3
61 Mot inconnu : Ext2 => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | ext2
61 Espace(s) surnuméraire(s) à supprimer. => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | |    => suggestions : [' ']
61 Mot inconnu : ext2 => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | ext2
61 Mot inconnu : ext3 => |  ''Ext3''  | 2 TiB | 4 TiB | Oui | Oui | Ext3 est essentiellement Ext2 avec la gestion de la journalisation.  Il est possible de [[http://qliu.free.fr/Linux/ext3.html#s4|passer une partition ext2 vers ext3]] sans formatage. | | ext3

62 Guillemets typographiques ouvrants. => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | '' => suggestions : ['«\xa0', '“']
62 Mot inconnu : Ext4 => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | ext4
62 Guillemets typographiques fermants. => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | '' => suggestions : ['\xa0»', '”']
62 Mot inconnu : TiB => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | tib
62 Mot inconnu : EiB => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | eib
62 Mot inconnu : Ext4 => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | ext4
62 Mot inconnu : Ext3 => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | ext3
62 Mot inconnu : Btrfs => |  ''Ext4''  | 16 TiB | 1 EiB | Oui | Oui | Ext4 est le successeur de l'Ext3. Il est cependant considéré par ses propres concepteurs comme une solution intermédiaire en attendant le vrai système de nouvelle génération que sera Btrfs| | btrfs

63 Guillemets typographiques ouvrants. => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | '' => suggestions : ['«\xa0', '“']
63 Mot inconnu : ReiserFS => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | reiserfs
63 Guillemets typographiques fermants. => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | '' => suggestions : ['\xa0»', '”']
63 Mot inconnu : TiB => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | tib
63 Mot inconnu : TiB => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | tib
63 Mot inconnu : Reiser => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | reiser
63 Mot inconnu : Namesys => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | namesys
63 Mot inconnu : ReiserFS => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | reiserfs
63 Si “ko” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | 4 ko => suggestions : ['4\xa0ko']
63 Espace(s) surnuméraire(s) à supprimer. => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | |    => suggestions : [' ']
63 Mot inconnu : ReiserFS => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | reiserfs
63 Mot inconnu : ext3 => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | ext3
63 Mot inconnu : ReiserFS => |  ''ReiserFS''  | 8 TiB | 16 TiB | Oui | Oui | Développé par Hans Reiser et la société Namesys, ReiserFS est reconnu particulièrement pour bien gérer les fichiers de moins de 4 ko.  Un avantage du ReiserFS, par rapport à ext3, est qu'il ne nécessite pas une hiérarchisation aussi poussée: il s'avère intéressant pour le stockage de plusieurs fichiers temporaires provenant d'Internet.\\Par contre, ReiserFS n'est pas recommandé pour les ordinateurs portables, car le disque dur tourne en permanence, ce qui consomme beaucoup d'énergie. | | reiserfs

64 Guillemets typographiques ouvrants. => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | '' => suggestions : ['«\xa0', '“']
64 Mot inconnu : BtrFS => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | btrfs
64 Guillemets typographiques fermants. => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | '' => suggestions : ['\xa0»', '”']
64 Mot inconnu : EiB => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | eib
64 Mot inconnu : EiB => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | eib
64 Mot inconnu : Red => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | red
64 Mot inconnu : Hat => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | hat
64 Mot inconnu : Ext4 => |  ''BtrFS''  | 16 EiB | 16 EiB | Oui | Oui | Développé conjointement par Oracle, Red Hat, considéré comme encore instable mais déjà utilisé par beaucoup, il est considéré comme le successeur du Ext4. | | ext4

65 Guillemets typographiques ouvrants. => |  ''Fat''\\ (File Allocation Table)  | 2 GiB | 2 GiB | Non | Non* | Développé par Microsoft, ce système de fichiers est désuet. Il reste néanmoins nécessaire pour les disquettes 3½. | | '' => suggestions : ['«\xa0', '“']
65 Guillemets typographiques fermants. => |  ''Fat''\\ (File Allocation Table)  | 2 GiB | 2 GiB | Non | Non* | Développé par Microsoft, ce système de fichiers est désuet. Il reste néanmoins nécessaire pour les disquettes 3½. | | '' => suggestions : ['\xa0»', '”']
65 Mot inconnu : GiB => |  ''Fat''\\ (File Allocation Table)  | 2 GiB | 2 GiB | Non | Non* | Développé par Microsoft, ce système de fichiers est désuet. Il reste néanmoins nécessaire pour les disquettes 3½. | | gib
65 Mot inconnu : GiB => |  ''Fat''\\ (File Allocation Table)  | 2 GiB | 2 GiB | Non | Non* | Développé par Microsoft, ce système de fichiers est désuet. Il reste néanmoins nécessaire pour les disquettes 3½. | | gib
65 Mot inconnu : ½ => |  ''Fat''\\ (File Allocation Table)  | 2 GiB | 2 GiB | Non | Non* | Développé par Microsoft, ce système de fichiers est désuet. Il reste néanmoins nécessaire pour les disquettes 3½. | | ½

66 Guillemets typographiques ouvrants. => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | '' => suggestions : ['«\xa0', '“']
66 Mot inconnu : Fat32 => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | fat32
66 Guillemets typographiques fermants. => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | '' => suggestions : ['\xa0»', '”']
66 Mot inconnu : GiB => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | gib
66 Mot inconnu : TiB => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | tib
66 Mot inconnu : Usb => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | usb
66 Mot inconnu : Ntfs => |  ''Fat32''  | 4 GiB | 8 TiB | Non | Non* | C'est l'évolution du Fat. Très utilisé aujourd'hui pour les clés Usb, car seul lisible par Windows autre que Ntfs dont l'index prend trop de place. | | ntfs

67 Guillemets typographiques ouvrants. => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | '' => suggestions : ['«\xa0', '“']
67 Mot inconnu : Ntfs => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | ntfs
67 Guillemets typographiques fermants. => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | '' => suggestions : ['\xa0»', '”']
67 Mot inconnu : Technology => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | technology
67 Mot inconnu : System => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | system
67 Mot inconnu : TiB => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | tib
67 Mot inconnu : TiB => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | tib
67 Guillemets typographiques ouvrants. => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | '' => suggestions : ['«\xa0', '“']
67 Mot inconnu : ntfs-3g => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | ntfs-3g
67 Guillemets typographiques fermants. => |  ''Ntfs''\\(New Technology File System)  | 16 TiB | 256 TiB | Oui | Oui* | Ce système de fichiers a aussi été développé par Microsoft, et il reste très peu documenté. L'écriture depuis Linux sur ce système de fichiers est stable à l'aide du pilote ''ntfs-3g'', installé de base sur Ubuntu. | | '' => suggestions : ['\xa0»', '”']

72 Mot inconnu : FAT32 => ==== * Systèmes de fichiers FAT32 et NTFS ==== | fat32
72 Mot inconnu : NTFS => ==== * Systèmes de fichiers FAT32 et NTFS ==== | ntfs

73 Mot inconnu : Fat16 => Le Fat16/32 et le Ntfs sont les seuls systèmes de fichiers sur lesquels on ne peut pas installer Linux, notamment car ils ne gèrent ni les liens logiques ni les droits d'accès UNIX/Linux. | fat16
73 Mot inconnu : Ntfs => Le Fat16/32 et le Ntfs sont les seuls systèmes de fichiers sur lesquels on ne peut pas installer Linux, notamment car ils ne gèrent ni les liens logiques ni les droits d'accès UNIX/Linux. | ntfs
73 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Le Fat16/32 et le Ntfs sont les seuls systèmes de fichiers sur lesquels on ne peut pas installer Linux, notamment car ils ne gèrent ni les liens logiques ni les droits d'accès UNIX/Linux. |  car => suggestions : [', car']

76 Mot inconnu : FIXME => FIXME Un lien de la doc pour un tutoriel ? | fixme

81 Mot inconnu : Ntfs => Le choix le plus judicieux est le Ntfs : C'est le seul système de fichiers moderne supporté par Windows, et il est supporté par Ubuntu.\\ | ntfs

82 Mot inconnu : ntfs-3g => Le désavantage est la non-prise en charge des droits d'accès, et la lenteur due au pilote ntfs-3g. | ntfs-3g

87 Espace(s) en fin de ligne à supprimer. => Afficher le système de fichier d'une partition  |   => suggestions : ['']

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * partition montée |     => suggestions : ['']

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        df -h |         => suggestions : ['']
90 Mot inconnu : df =>        df -h | df
90 Il manque un espace à côté du tiret. =>        df -h |  - => suggestions : [' – ', ' — ']

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * partition quelconque (nécessite que le paquet **parted** soit installé et que le disque /dev/sda existe) |     => suggestions : ['']
92 Mot inconnu : parted =>    * partition quelconque (nécessite que le paquet **parted** soit installé et que le disque /dev/sda existe) | parted

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>        sudo parted /dev/sda print all   |         => suggestions : ['']
94 Mot inconnu : sudo =>        sudo parted /dev/sda print all   | sudo
94 Mot inconnu : parted =>        sudo parted /dev/sda print all   | parted
94 Mot inconnu : print =>        sudo parted /dev/sda print all   | print
94 Mot inconnu : all =>        sudo parted /dev/sda print all   | all
94 Espace(s) en fin de ligne à supprimer. =>        sudo parted /dev/sda print all   |    => suggestions : ['']

99 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[wp>Comparison_of_file_systems|Wikipedia : Comparison of File Systems]] (en) |    => suggestions : ['']
99 Mot inconnu : Comparison_of_file_systems =>   * [[wp>Comparison_of_file_systems|Wikipedia : Comparison of File Systems]] (en) | comparison_of_file_systems
99 Mot inconnu : Wikipedia =>   * [[wp>Comparison_of_file_systems|Wikipedia : Comparison of File Systems]] (en) | wikipedia
99 Mot inconnu : Comparison =>   * [[wp>Comparison_of_file_systems|Wikipedia : Comparison of File Systems]] (en) | comparison
99 Mot inconnu : of =>   * [[wp>Comparison_of_file_systems|Wikipedia : Comparison of File Systems]] (en) | of
99 Mot inconnu : Systems =>   * [[wp>Comparison_of_file_systems|Wikipedia : Comparison of File Systems]] (en) | systems

102 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://linuxgazette.net/122/TWDT.html#piszcz| Comparaison de performance]] (en) |    => suggestions : ['']

103 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.opendedup.org/|OpenDedup]] (SDFS) : système de fichier supportant la déduplication. |    => suggestions : ['']
103 Mot inconnu : SDFS =>   * [[http://www.opendedup.org/|OpenDedup]] (SDFS) : système de fichier supportant la déduplication. | sdfs
106 Il manque un espace. => //Contributeurs: [[utilisateurs:AlexandreP]],[[utilisateurs:fnx]] \\ | alexandrep => suggestions : [' AlexandreP']
106 Il manque un espace. => //Contributeurs: [[utilisateurs:AlexandreP]],[[utilisateurs:fnx]] \\ | fnx => suggestions : [' fnx']

107 Mot inconnu : Filesystems => Basé sur [[https://wiki.ubuntu.com/LinuxFilesystemsExplained|Linux Filesystems Explained]]// | filesystems
107 Mot inconnu : Explained => Basé sur [[https://wiki.ubuntu.com/LinuxFilesystemsExplained|Linux Filesystems Explained]]// | explained
