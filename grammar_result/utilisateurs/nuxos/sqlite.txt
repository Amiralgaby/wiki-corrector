
4 Mot inconnu : SQLite [[7:13]] => ====== SQLite sous Ubuntu ====== <|> sqlite

6 Mot inconnu : SQLite [[96:102]] => <note help>Cette page est un brouillon destiné à initier une page collaborative sur le thème de SQLite.\\ <|> sqlite

7 Mot inconnu : SQLite [[96:102]] => Elle permettra d'utiliser les logiciels que l'on trouve sur Ubuntu afin d'administrer des bases SQLite. La partie présentée ci-dessous concerne, pour le moment, l'utilisation la plus élémentaire de SQlite en lignes de commande via le terminal. S'y ajouteront différentes interfaces graphiques ainsi que l'utilisation de SQLite à l'aide de scripts python, perl, bash etc... </note> <|> sqlite
7 Mot inconnu : SQlite [[198:204]] => Elle permettra d'utiliser les logiciels que l'on trouve sur Ubuntu afin d'administrer des bases SQLite. La partie présentée ci-dessous concerne, pour le moment, l'utilisation la plus élémentaire de SQlite en lignes de commande via le terminal. S'y ajouteront différentes interfaces graphiques ainsi que l'utilisation de SQLite à l'aide de scripts python, perl, bash etc... </note> <|> sqlite
7 Mot inconnu : SQLite [[320:326]] => Elle permettra d'utiliser les logiciels que l'on trouve sur Ubuntu afin d'administrer des bases SQLite. La partie présentée ci-dessous concerne, pour le moment, l'utilisation la plus élémentaire de SQlite en lignes de commande via le terminal. S'y ajouteront différentes interfaces graphiques ainsi que l'utilisation de SQLite à l'aide de scripts python, perl, bash etc... </note> <|> sqlite
7 Mot inconnu : perl [[355:359]] => Elle permettra d'utiliser les logiciels que l'on trouve sur Ubuntu afin d'administrer des bases SQLite. La partie présentée ci-dessous concerne, pour le moment, l'utilisation la plus élémentaire de SQlite en lignes de commande via le terminal. S'y ajouteront différentes interfaces graphiques ainsi que l'utilisation de SQLite à l'aide de scripts python, perl, bash etc... </note> <|> perl
7 Avant « etc. », il faut mettre une virgule. [[365:370]] => Elle permettra d'utiliser les logiciels que l'on trouve sur Ubuntu afin d'administrer des bases SQLite. La partie présentée ci-dessous concerne, pour le moment, l'utilisation la plus élémentaire de SQlite en lignes de commande via le terminal. S'y ajouteront différentes interfaces graphiques ainsi que l'utilisation de SQLite à l'aide de scripts python, perl, bash etc... </note> <|>  etc. => suggestions : [', etc.']
7 Un seul point après « etc. » [[366:372]] => Elle permettra d'utiliser les logiciels que l'on trouve sur Ubuntu afin d'administrer des bases SQLite. La partie présentée ci-dessous concerne, pour le moment, l'utilisation la plus élémentaire de SQlite en lignes de commande via le terminal. S'y ajouteront différentes interfaces graphiques ainsi que l'utilisation de SQLite à l'aide de scripts python, perl, bash etc... </note> <|> etc... => suggestions : ['etc.']

10 Mot inconnu : SQLite3 [[0:7]] => SQLite3 présente l'avantage de n'avoir rien à configurer, rien à maintenir ou à administrer. C'est aussi son objectif. En contrepartie, certaines fonctionnalités sont absentes, comme la gestion des utilisateurs ou la possibilité de se connecter à distance à la base (en TCP/IP par exemple). <|> sqlite3

12 Guillemets typographiques ouvrants. [[33:34]] => //Cette description est tirée de "C en action" 2ième édition de Yves METTIER.// <|> " => suggestions : ['«\xa0', '“']
12 Guillemets typographiques fermants. [[45:46]] => //Cette description est tirée de "C en action" 2ième édition de Yves METTIER.// <|> " => suggestions : ['\xa0»', '”']
12 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[47:52]] => //Cette description est tirée de "C en action" 2ième édition de Yves METTIER.// <|> 2ième => suggestions : ['2ᵉ']
12 Mot inconnu : METTIER [[69:76]] => //Cette description est tirée de "C en action" 2ième édition de Yves METTIER.// <|> mettier

22 Mot inconnu : SQLite [[24:30]] => ==== Lancer le terminal SQLite ==== <|> sqlite

27 Guillemets typographiques ouvrants. [[52:53]] => Le curseur indique que vous êtes maintenant dans le "terminal" SQlite comme ici: <|> " => suggestions : ['«\xa0', '“']
27 Guillemets typographiques fermants. [[61:62]] => Le curseur indique que vous êtes maintenant dans le "terminal" SQlite comme ici: <|> " => suggestions : ['\xa0»', '”']
27 Mot inconnu : SQlite [[63:69]] => Le curseur indique que vous êtes maintenant dans le "terminal" SQlite comme ici: <|> sqlite

35 Mot inconnu : SQLite [[17:23]] => //Toute commande SQLite sera précédée de son curseur afin de bien distinguer les commandes SQLite des autres commandes.// <|> sqlite
35 Mot inconnu : SQLite [[91:97]] => //Toute commande SQLite sera précédée de son curseur afin de bien distinguer les commandes SQLite des autres commandes.// <|> sqlite

38 Mot inconnu : SQLite [[25:31]] => ==== Quitter le terminal SQLite ==== <|> sqlite

41 Mot inconnu : SQLite [[26:32]] => ==== Lister les commandes SQLite ==== <|> sqlite
105 Accord de nombre erroné : « résultat » devrait être au pluriel. [[23:31]] =>   * Pour présenter les résultat d'une requête sous forme de tableau dans le terminal on utilisera: <|> résultat => suggestions : ['résultats']
134 Mot inconnu : list [[59:63]] =>   * Il est possible de modifier le séparateur dans le mode list: <|> list

237 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[18:21]] => === Créer une base - ouvrir une base === <|>  -  => suggestions : [' – ', ' — ', ' − ']

296 Mot inconnu : sqlite [[0:6]] => sqlite> sqlite> select * from bandedessinée limit 2;</code><code> <|> sqlite
296 Mot inconnu : sqlite [[8:14]] => sqlite> sqlite> select * from bandedessinée limit 2;</code><code> <|> sqlite
296 Mot inconnu : from [[25:29]] => sqlite> sqlite> select * from bandedessinée limit 2;</code><code> <|> from
296 Mot inconnu : bandedessinée [[30:43]] => sqlite> sqlite> select * from bandedessinée limit 2;</code><code> <|> bandedessinée
296 Mot inconnu : limit [[44:49]] => sqlite> sqlite> select * from bandedessinée limit 2;</code><code> <|> limit

297 Mot inconnu : congo [[12:17]] => 1|tintin au congo|hergé|Tintin est au congo.|5.0||casterman <|> congo
297 Mot inconnu : hergé [[18:23]] => 1|tintin au congo|hergé|Tintin est au congo.|5.0||casterman <|> hergé
297 Mot inconnu : congo [[38:43]] => 1|tintin au congo|hergé|Tintin est au congo.|5.0||casterman <|> congo
297 Mot inconnu : casterman [[50:59]] => 1|tintin au congo|hergé|Tintin est au congo.|5.0||casterman <|> casterman

301 Mot inconnu : sqlite [[0:6]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> sqlite
301 Mot inconnu : from [[21:25]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> from
301 Mot inconnu : bandedessinée [[26:39]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> bandedessinée
301 Mot inconnu : where [[40:45]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> where
301 Mot inconnu : strftime [[46:54]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> strftime
301 Il manque un espace avant la parenthèse. [[54:55]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> ( => suggestions : [' (']
301 Il manque un espace. [[57:58]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> m => suggestions : [' m']
301 Mot inconnu : date_creation [[61:74]] => sqlite> select titre from bandedessinée where strftime('%m', date_creation)='02';</code><code> <|> date_creation

302 Mot inconnu : marsupilamis [[11:23]] => le nid des marsupilamis <|> marsupilamis

338 Mot inconnu : Dumper [[4:10]] => === Dumper une table depuis SQLite en format SQL pour sauvegarder la structure et les données sur un disque === <|> dumper
338 Mot inconnu : SQLite [[28:34]] => === Dumper une table depuis SQLite en format SQL pour sauvegarder la structure et les données sur un disque === <|> sqlite

340 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[34:36]] => == Voir le résultat de la commande .dump == <|>  . => suggestions : ['. ', '.']
340 Mot inconnu : dump [[36:40]] => == Voir le résultat de la commande .dump == <|> dump

353 Mot inconnu : dumper [[44:50]] => == Rediriger la sortie vers un fichier puis dumper la table depuis SQLite == <|> dumper
353 Mot inconnu : SQLite [[67:73]] => == Rediriger la sortie vers un fichier puis dumper la table depuis SQLite == <|> sqlite

365 Mot inconnu : dumpé [[31:36]] => == Lire directement un fichier dumpé depuis sqlite == <|> dumpé
365 Mot inconnu : sqlite [[44:50]] => == Lire directement un fichier dumpé depuis sqlite == <|> sqlite

367 Conjugaison erronée. Accord avec « tout ». Le verbe devrait être à la 3ᵉ personne du singulier. [[13:20]] => Tout d'abord effacez la table de la base: <|> effacez => suggestions : ['efface']

385 Mot inconnu : Dumper [[4:10]] => === Dumper une base en format SQL pour sauvegarder sa structure, ses tables et ses données === <|> dumper

387 Mot inconnu : Dumper [[3:9]] => == Dumper la base == <|> dumper

392 Mot inconnu : dumpé [[24:29]] => == Récupérer un fichier dumpé pour recréer la base == <|> dumpé

418 Mot inconnu : Sqlite [[15:21]] => ===== Utiliser Sqlite avec Python ===== <|> sqlite

420 Mot inconnu : SQLite [[25:31]] => Exemple d'utilisation de SQLite avec un script python.\\ <|> sqlite

428 Mot inconnu : coding [[5:11]] => #-*- coding: utf-8 -*- <|> coding
428 Mot inconnu : utf-8 [[13:18]] => #-*- coding: utf-8 -*- <|> utf-8

430 Mot inconnu : sqlite3 [[7:14]] => import sqlite3 <|> sqlite3

432 Mot inconnu : class [[0:5]] => class Mabase(): <|> class
432 Mot inconnu : Mabase [[6:12]] => class Mabase(): <|> mabase
434 Mot inconnu : __init__ [[5:13]] => 	def __init__(self): <|> __init__
434 Il manque un espace avant la parenthèse. [[13:14]] => 	def __init__(self): <|> ( => suggestions : [' (']

436 Mot inconnu : conn [[7:11]] => 		self.conn = sqlite3.connect('mabase.db') <|> conn
436 Mot inconnu : sqlite3 [[14:21]] => 		self.conn = sqlite3.connect('mabase.db') <|> sqlite3
436 Mot inconnu : connect [[22:29]] => 		self.conn = sqlite3.connect('mabase.db') <|> connect
436 Il manque un espace avant la parenthèse. [[29:30]] => 		self.conn = sqlite3.connect('mabase.db') <|> ( => suggestions : [' (']
436 Mot inconnu : mabase [[31:37]] => 		self.conn = sqlite3.connect('mabase.db') <|> mabase
436 Mot inconnu : db [[38:40]] => 		self.conn = sqlite3.connect('mabase.db') <|> db
438 Mot inconnu : creer [[5:10]] => 	def creer(self): <|> creer
438 Il manque un espace avant la parenthèse. [[10:11]] => 	def creer(self): <|> ( => suggestions : [' (']

440 Mot inconnu : True [[10:14]] => 			Renvoi True si reussie, False si déjà créée. """ <|> true
440 Mot inconnu : reussie [[18:25]] => 			Renvoi True si reussie, False si déjà créée. """ <|> reussie
440 Mot inconnu : False [[27:32]] => 			Renvoi True si reussie, False si déjà créée. """ <|> false

446 Mot inconnu : try [[2:5]] => 		try: <|> try

447 Mot inconnu : execute [[5:12]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> execute
447 Il manque un espace avant la parenthèse. [[12:13]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> ( => suggestions : [' (']
447 Mot inconnu : create [[14:20]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> create
447 Mot inconnu : INTEGER [[39:46]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> integer
447 Mot inconnu : PRIMARY [[47:54]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> primary
447 Mot inconnu : KEY [[55:58]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> key
447 Il manque un espace. [[59:68]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> signature => suggestions : [' signature']
447 Mot inconnu : VARCHAR [[69:76]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> varchar
447 Mot inconnu : INTEGER [[91:98]] => 			c.execute('create table comptes (id INTEGER PRIMARY KEY,signature VARCHAR(50), compteur INTEGER)') <|> integer

448 Mot inconnu : Inserer [[5:12]] => 			# Inserer deux lignes de données <|> inserer

449 Mot inconnu : execute [[5:12]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> execute
449 Il manque un espace avant la parenthèse. [[12:13]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> ( => suggestions : [' (']
449 Mot inconnu : into [[21:25]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> into
449 Mot inconnu : null [[42:46]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> null
449 Guillemets typographiques ouvrants. [[47:48]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> " => suggestions : ['«\xa0', '“']
449 Mot inconnu : gffgdfgd [[48:56]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> gffgdfgd
449 Guillemets typographiques fermants. [[56:57]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> " => suggestions : ['\xa0»', '”']
449 Guillemets typographiques ouvrants. [[58:59]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> " => suggestions : ['«\xa0', '“']
449 Guillemets typographiques fermants. [[60:61]] => 			c.execute('insert into comptes values (null,"gffgdfgd","0")') <|> " => suggestions : ['\xa0»', '”']

450 Mot inconnu : execute [[5:12]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> execute
450 Il manque un espace avant la parenthèse. [[12:13]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> ( => suggestions : [' (']
450 Mot inconnu : into [[21:25]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> into
450 Mot inconnu : null [[42:46]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> null
450 Guillemets typographiques ouvrants. [[47:48]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> " => suggestions : ['«\xa0', '“']
450 Guillemets typographiques fermants. [[54:55]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> " => suggestions : ['\xa0»', '”']
450 Guillemets typographiques ouvrants. [[56:57]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> " => suggestions : ['«\xa0', '“']
450 Guillemets typographiques fermants. [[58:59]] => 			c.execute('insert into comptes values (null,"Martin","1")') <|> " => suggestions : ['\xa0»', '”']

456 Il manque un espace. [[5:10]] => 			c.close() <|> close => suggestions : [' close']

457 Mot inconnu : print [[3:8]] => 			print "Création de la base réussie." <|> print
457 Guillemets typographiques ouvrants. [[9:10]] => 			print "Création de la base réussie." <|> " => suggestions : ['«\xa0', '“']
457 Guillemets typographiques fermants. [[38:39]] => 			print "Création de la base réussie." <|> " => suggestions : ['\xa0»', '”']

458 Mot inconnu : return [[3:9]] => 			return True <|> return
458 Mot inconnu : True [[10:14]] => 			return True <|> true

460 Mot inconnu : except [[2:8]] => 		except: <|> except

462 Il manque un espace. [[5:10]] => 			c.close() <|> close => suggestions : [' close']

463 Mot inconnu : return [[3:9]] => 			return False <|> return
463 Mot inconnu : False [[10:15]] => 			return False <|> false
465 Il manque un espace avant la parenthèse. [[9:10]] => 	def lire(self): <|> ( => suggestions : [' (']

468 Mot inconnu : execute [[4:11]] => 		c.execute("SELECT * FROM comptes") <|> execute
468 Il manque un espace avant la parenthèse. [[11:12]] => 		c.execute("SELECT * FROM comptes") <|> ( => suggestions : [' (']
468 Guillemets typographiques ouvrants. [[12:13]] => 		c.execute("SELECT * FROM comptes") <|> " => suggestions : ['«\xa0', '“']
468 Mot inconnu : FROM [[22:26]] => 		c.execute("SELECT * FROM comptes") <|> from
468 Guillemets typographiques fermants. [[34:35]] => 		c.execute("SELECT * FROM comptes") <|> " => suggestions : ['\xa0»', '”']

469 Mot inconnu : row [[6:9]] => 		for row in c: <|> row
469 Confusion possible : pour le déterminant désignant quelque chose, écrivez “un”. [[10:12]] => 		for row in c: <|> in => suggestions : ['un']

470 Mot inconnu : print [[3:8]] => 			print row <|> print
470 Mot inconnu : row [[9:12]] => 			print row <|> row

471 Il manque un espace. [[4:9]] => 		c.close() <|> close => suggestions : [' close']

474 Mot inconnu : mabase [[0:6]] => mabase = Mabase() <|> mabase
474 Mot inconnu : Mabase [[9:15]] => mabase = Mabase() <|> mabase

475 Mot inconnu : not [[3:6]] => if not mabase.creer():	# Si la méthode creer() renvoi False, lire la base <|> not
475 Mot inconnu : mabase [[7:13]] => if not mabase.creer():	# Si la méthode creer() renvoi False, lire la base <|> mabase
475 Mot inconnu : creer [[14:19]] => if not mabase.creer():	# Si la méthode creer() renvoi False, lire la base <|> creer
475 Mot inconnu : creer [[39:44]] => if not mabase.creer():	# Si la méthode creer() renvoi False, lire la base <|> creer
475 Mot inconnu : False [[54:59]] => if not mabase.creer():	# Si la méthode creer() renvoi False, lire la base <|> false

476 Mot inconnu : mabase [[1:7]] => 	mabase.lire() <|> mabase
476 Il manque un espace. [[8:12]] => 	mabase.lire() <|> lire => suggestions : [' lire']
