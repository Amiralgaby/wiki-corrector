1 Mot inconnu : lirc => Fonctionnement de lirc : http://mmed.roulleau.net/?p=7&cpage=1#comment-58 | lirc

5 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cat /proc/bus/input/devices |    => suggestions : ['']
5 Mot inconnu : cat =>   cat /proc/bus/input/devices | cat
5 Mot inconnu : proc =>   cat /proc/bus/input/devices | proc
5 Mot inconnu : ices =>   cat /proc/bus/input/devices | ices

6 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tail /var/log/Xorg.0.log |    => suggestions : ['']
6 Mot inconnu : tail =>   tail /var/log/Xorg.0.log | tail

8 Mot inconnu : lirc => Lancer lirc manuellement pour observer les sortis consoles :  | lirc
8 Espace(s) en fin de ligne à supprimer. => Lancer lirc manuellement pour observer les sortis consoles :  |   => suggestions : ['']

9 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   lircd -H devinput -d "periph" -n |    => suggestions : ['']
9 Mot inconnu : lircd =>   lircd -H devinput -d "periph" -n | lircd
9 Il manque un espace à côté du tiret. =>   lircd -H devinput -d "periph" -n |  - => suggestions : [' – ', ' — ']
9 Mot inconnu : devinput =>   lircd -H devinput -d "periph" -n | devinput
9 Il manque un espace à côté du tiret. =>   lircd -H devinput -d "periph" -n |  - => suggestions : [' – ', ' — ']
9 Guillemets typographiques ouvrants. =>   lircd -H devinput -d "periph" -n | " => suggestions : ['«\xa0', '“']
9 Mot inconnu : periph =>   lircd -H devinput -d "periph" -n | periph
9 Guillemets typographiques fermants. =>   lircd -H devinput -d "periph" -n | " => suggestions : ['\xa0»', '”']

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   irw |    => suggestions : ['']
11 Mot inconnu : irw =>   irw | irw

15 Mot inconnu : chanque => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | chanque
15 Mot inconnu : lirc => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | lirc
15 Mot inconnu : name => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | name
15 Mot inconnu : cx88 => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | cx88
15 Il manque un espace. => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | ir => suggestions : [' IR']
15 Mot inconnu : IR => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | ir
15 Il manque un espace. => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | hauppauge => suggestions : [' Hauppauge']
15 Mot inconnu : Hauppauge => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | hauppauge
15 Il manque un espace. => pour chanque commande lirc on peut remplacer le nom trouver ici par name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\? | nova-s-plus => suggestions : [' Nova-S-Plus']

16 Espace(s) en fin de ligne à supprimer. => trouvé grâce à  |   => suggestions : ['']

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cat /proc/bus/input/devices  |    => suggestions : ['']
17 Mot inconnu : cat =>   cat /proc/bus/input/devices  | cat
17 Mot inconnu : proc =>   cat /proc/bus/input/devices  | proc
17 Mot inconnu : ices =>   cat /proc/bus/input/devices  | ices
17 Espace(s) en fin de ligne à supprimer. =>   cat /proc/bus/input/devices  |   => suggestions : ['']
18 Espace(s) en fin de ligne à supprimer. => par exemple :  |   => suggestions : ['']

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" |    => suggestions : ['']
19 Mot inconnu : LIRC_DEVICE =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | lirc_device
19 Guillemets typographiques ouvrants. =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | " => suggestions : ['«\xa0', '“']
19 Mot inconnu : name =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | name
19 Mot inconnu : cx88 =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | cx88
19 Il manque un espace. =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | ir => suggestions : [' IR']
19 Mot inconnu : IR =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | ir
19 Il manque un espace. =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | hauppauge => suggestions : [' Hauppauge']
19 Mot inconnu : Hauppauge =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | hauppauge
19 Il manque un espace. =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | nova-s-plus => suggestions : [' Nova-S-Plus']
19 Guillemets typographiques fermants. =>   LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?" | " => suggestions : ['\xa0»', '”']

21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ?? |    => suggestions : ['']
24 Espace(s) en fin de ligne à supprimer. => Trouver le périphérique correspondant a la télécommande :  |   => suggestions : ['']
25 Espace(s) en fin de ligne à supprimer. => le mieux est d'aller voir ici :  |   => suggestions : ['']

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ls -l /dev/input/by-path |    => suggestions : ['']
26 Mot inconnu : ls =>   ls -l /dev/input/by-path | ls
26 Il manque un espace à côté du tiret. =>   ls -l /dev/input/by-path |  - => suggestions : [' – ', ' — ']

27 Mot inconnu : ir => On repère la ligne qui contient ir (infra rouge). Si vous avez un doute, débranchez et rebranchez votre clé tnt, pour voir quel ligne apparait. | ir
27 Mot inconnu : tnt => On repère la ligne qui contient ir (infra rouge). Si vous avez un doute, débranchez et rebranchez votre clé tnt, pour voir quel ligne apparait. | tnt
27 Accord de genre erroné : « ligne » est féminin. => On repère la ligne qui contient ir (infra rouge). Si vous avez un doute, débranchez et rebranchez votre clé tnt, pour voir quel ligne apparait. | quel => suggestions : ['quelle']
27 Accord de genre erroné : « quel » est masculin. => On repère la ligne qui contient ir (infra rouge). Si vous avez un doute, débranchez et rebranchez votre clé tnt, pour voir quel ligne apparait. | ligne => suggestions : ['ligné']

33 Mot inconnu : xorg => ==== Gestion de la télécommande par le xorg ==== | xorg
35 Espace(s) surnuméraire(s) à supprimer. => === Voir ce qu'il se passe :  === |    => suggestions : [' ']

37 Mot inconnu : xorg => Si le périphérique est considéré comme un clavier par xorg :  | xorg
37 Espace(s) en fin de ligne à supprimer. => Si le périphérique est considéré comme un clavier par xorg :  |   => suggestions : ['']

38 Guillemets typographiques ouvrants. => On peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) gràce à  | " => suggestions : ['«\xa0', '“']
38 Guillemets typographiques fermants. => On peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) gràce à  | " => suggestions : ['\xa0»', '”']
38 Mot inconnu : xorg => On peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) gràce à  | xorg
38 Mot inconnu : gràce => On peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) gràce à  | gràce
38 Espace(s) en fin de ligne à supprimer. => On peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) gràce à  |   => suggestions : ['']

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo evtest votre_periph |    => suggestions : ['']
39 Mot inconnu : sudo =>   sudo evtest votre_periph | sudo
39 Mot inconnu : evtest =>   sudo evtest votre_periph | evtest
39 Mot inconnu : votre_periph =>   sudo evtest votre_periph | votre_periph

41 Mot inconnu : xorg => === Faire que xorg ignore la télécommande : === | xorg

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   Section "InputClass" |    => suggestions : ['']
42 Guillemets typographiques ouvrants. =>   Section "InputClass" | " => suggestions : ['«\xa0', '“']
42 Mot inconnu : InputClass =>   Section "InputClass" | inputclass
42 Guillemets typographiques fermants. =>   Section "InputClass" | " => suggestions : ['\xa0»', '”']

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      Identifier     "Télécommande Nova-T 500" |       => suggestions : ['']
43 Espace(s) surnuméraire(s) à supprimer. =>      Identifier     "Télécommande Nova-T 500" |       => suggestions : [' ']
43 Guillemets typographiques ouvrants. =>      Identifier     "Télécommande Nova-T 500" | " => suggestions : ['«\xa0', '“']
43 Guillemets typographiques fermants. =>      Identifier     "Télécommande Nova-T 500" | " => suggestions : ['\xa0»', '”']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      ## Eventuellement, rajouter la ligne ci-dessous non commentée |       => suggestions : ['']
44 Mot inconnu : Eventuellement =>      ## Eventuellement, rajouter la ligne ci-dessous non commentée | eventuellement

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      #  MatchIsKeyboard  "on" |       => suggestions : ['']
45 Mot inconnu : MatchIsKeyboard =>      #  MatchIsKeyboard  "on" | matchiskeyboard
45 Espace(s) surnuméraire(s) à supprimer. =>      #  MatchIsKeyboard  "on" |    => suggestions : [' ']
45 Guillemets typographiques ouvrants. =>      #  MatchIsKeyboard  "on" | " => suggestions : ['«\xa0', '“']
45 Guillemets typographiques fermants. =>      #  MatchIsKeyboard  "on" | " => suggestions : ['\xa0»', '”']

46 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      MatchProduct   "<la description trouvée dans Xorg.0.log>" |       => suggestions : ['']
46 Mot inconnu : MatchProduct =>      MatchProduct   "<la description trouvée dans Xorg.0.log>" | matchproduct
46 Espace(s) surnuméraire(s) à supprimer. =>      MatchProduct   "<la description trouvée dans Xorg.0.log>" |     => suggestions : [' ']

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      Option         "Ignore" "on" |       => suggestions : ['']
47 Espace(s) surnuméraire(s) à supprimer. =>      Option         "Ignore" "on" |           => suggestions : [' ']
47 Guillemets typographiques ouvrants. =>      Option         "Ignore" "on" | " => suggestions : ['«\xa0', '“']
47 Guillemets typographiques fermants. =>      Option         "Ignore" "on" | " => suggestions : ['\xa0»', '”']
47 Guillemets typographiques ouvrants. =>      Option         "Ignore" "on" | " => suggestions : ['«\xa0', '“']
47 Guillemets typographiques fermants. =>      Option         "Ignore" "on" | " => suggestions : ['\xa0»', '”']

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   EndSection |    => suggestions : ['']
48 Mot inconnu : EndSection =>   EndSection | endsection

49 Espace(s) surnuméraire(s) à supprimer. => ici  dans /usr/share/X11/xorg.conf.d/60-remote.conf |    => suggestions : [' ']
51 Espace(s) en fin de ligne à supprimer. => Informations :  |   => suggestions : ['']
