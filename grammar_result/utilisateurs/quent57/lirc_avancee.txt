1 Mot inconnu : LIRC [[7:11]] => ====== LIRC, dans le vif du sujet  ! ====== <|> lirc
1 Espace(s) surnuméraire(s) à supprimer. [[33:35]] => ====== LIRC, dans le vif du sujet  ! ====== <|>    => suggestions : [' ']

3 Mot inconnu : Maverick [[19:27]] => <note>Valable pour Maverick</note> <|> maverick

5 Mot inconnu : LIRC [[64:68]] => <note>Attention, vous êtes sur une page qui traite en détail de LIRC, pour une page plus accessible aux débutant, rendez-vous sur [[http://doc.ubuntu-fr.org/lirc|http://doc.ubuntu-fr.org/lirc]].FIXME page à refaire !</note> <|> lirc
5 Accord de nombre erroné : « débutant » est au singulier. [[100:103]] => <note>Attention, vous êtes sur une page qui traite en détail de LIRC, pour une page plus accessible aux débutant, rendez-vous sur [[http://doc.ubuntu-fr.org/lirc|http://doc.ubuntu-fr.org/lirc]].FIXME page à refaire !</note> <|> aux => suggestions : ['au']
5 Accord de nombre erroné : « débutant » devrait être au pluriel. [[104:112]] => <note>Attention, vous êtes sur une page qui traite en détail de LIRC, pour une page plus accessible aux débutant, rendez-vous sur [[http://doc.ubuntu-fr.org/lirc|http://doc.ubuntu-fr.org/lirc]].FIXME page à refaire !</note> <|> débutant => suggestions : ['débutants']

10 Mot inconnu : LIRC [[0:4]] => LIRC est une excellente suite logicielle visant à utiliser des télécommandes avec GNU/Linux. Sa compatibilité avec tout et n’importe quoi et sa versatilité en font un incontournable de tout PC orienté Home Cinema. <|> lirc
10 Mot inconnu : Cinema [[206:212]] => LIRC est une excellente suite logicielle visant à utiliser des télécommandes avec GNU/Linux. Sa compatibilité avec tout et n’importe quoi et sa versatilité en font un incontournable de tout PC orienté Home Cinema. <|> cinema

11 Espace(s) surnuméraire(s) à supprimer. [[94:96]] => Concrètement, et c’est souvent ce qu’on a du mal à comprendre la première fois qu’on y touche,  LIRC est un mot fourre-tout pour ce qui est à la fois une paquet exécutables  (sous forme de démon ou non), un framework (utilisable par les application tierces), et un ensemble de modules noyaux (pour piloter le hardware de vos récepteurs). <|>    => suggestions : [' ']
11 Mot inconnu : LIRC [[96:100]] => Concrètement, et c’est souvent ce qu’on a du mal à comprendre la première fois qu’on y touche,  LIRC est un mot fourre-tout pour ce qui est à la fois une paquet exécutables  (sous forme de démon ou non), un framework (utilisable par les application tierces), et un ensemble de modules noyaux (pour piloter le hardware de vos récepteurs). <|> lirc
11 Accord de genre erroné : « paquet » est masculin. [[150:153]] => Concrètement, et c’est souvent ce qu’on a du mal à comprendre la première fois qu’on y touche,  LIRC est un mot fourre-tout pour ce qui est à la fois une paquet exécutables  (sous forme de démon ou non), un framework (utilisable par les application tierces), et un ensemble de modules noyaux (pour piloter le hardware de vos récepteurs). <|> une => suggestions : ['un']
11 Accord de nombre erroné avec « une paquet » : « exécutables » devrait être au singulier. [[161:172]] => Concrètement, et c’est souvent ce qu’on a du mal à comprendre la première fois qu’on y touche,  LIRC est un mot fourre-tout pour ce qui est à la fois une paquet exécutables  (sous forme de démon ou non), un framework (utilisable par les application tierces), et un ensemble de modules noyaux (pour piloter le hardware de vos récepteurs). <|> exécutables => suggestions : ['exécutable']
11 Espace(s) surnuméraire(s) à supprimer. [[172:174]] => Concrètement, et c’est souvent ce qu’on a du mal à comprendre la première fois qu’on y touche,  LIRC est un mot fourre-tout pour ce qui est à la fois une paquet exécutables  (sous forme de démon ou non), un framework (utilisable par les application tierces), et un ensemble de modules noyaux (pour piloter le hardware de vos récepteurs). <|>    => suggestions : [' ']
11 Accord de nombre erroné : « application » devrait être au pluriel. [[237:248]] => Concrètement, et c’est souvent ce qu’on a du mal à comprendre la première fois qu’on y touche,  LIRC est un mot fourre-tout pour ce qui est à la fois une paquet exécutables  (sous forme de démon ou non), un framework (utilisable par les application tierces), et un ensemble de modules noyaux (pour piloter le hardware de vos récepteurs). <|> application => suggestions : ['applications']

14 Mot inconnu : LIRC [[0:4]] => LIRC permet d'utiliser une télécommande infrarouge. Presque toutes (mais pas toutes) sont compatibles. <|> lirc

16 Mot inconnu : LIRC [[44:48]] => Par défaut, Les scripts d'initialisation de LIRC sont correctement configurés pour la gestion d'un seul appareil, mais en réalité les scripts du pilote peuvent en gérer plusieurs. Si vous cherchez à configurer un transmetteur infrarouge et un récepteur, plusieurs transmetteurs, ou plusieurs récepteurs, commencez d'abord par configurer un seul appareil et vérifiez son bon fonctionnement. Après cela seulement, vous pourrez vous intéresser à la section traitant la configuration de multiples appareils.  <|> lirc
16 Espace(s) en fin de ligne à supprimer. [[503:504]] => Par défaut, Les scripts d'initialisation de LIRC sont correctement configurés pour la gestion d'un seul appareil, mais en réalité les scripts du pilote peuvent en gérer plusieurs. Si vous cherchez à configurer un transmetteur infrarouge et un récepteur, plusieurs transmetteurs, ou plusieurs récepteurs, commencez d'abord par configurer un seul appareil et vérifiez son bon fonctionnement. Après cela seulement, vous pourrez vous intéresser à la section traitant la configuration de multiples appareils.  <|>   => suggestions : ['']

33 Accord erroné : “télécommande” et “reconnu” ne sont pas accordés. Mettez au féminin singulier. [[42:49]] => Cela signifie que votre télécommande sera reconnu comme un clavier par Xorg (kdb = keyboard = clavier). <|> reconnu => suggestions : ['reconnue']
33 Mot inconnu : Xorg [[71:75]] => Cela signifie que votre télécommande sera reconnu comme un clavier par Xorg (kdb = keyboard = clavier). <|> xorg
33 Mot inconnu : kdb [[77:80]] => Cela signifie que votre télécommande sera reconnu comme un clavier par Xorg (kdb = keyboard = clavier). <|> kdb
33 Mot inconnu : keyboard [[83:91]] => Cela signifie que votre télécommande sera reconnu comme un clavier par Xorg (kdb = keyboard = clavier). <|> keyboard

35 Mot inconnu : Xorg [[16:20]] => ==== Journal de Xorg ==== <|> xorg
37 Espace(s) en fin de ligne à supprimer. [[33:34]] => Brancher le récepteur et lancer :  <|>   => suggestions : ['']
42 Espace(s) en fin de ligne à supprimer. [[33:34]] => Brancher le récepteur et lancer :  <|>   => suggestions : ['']

50 Mot inconnu : ir [[32:34]] => On repère la ligne qui contient ir (infra rouge). Si vous avez un doute, débranchez et rebranchez votre récepteur infrarouge, pour voir quelle ligne apparait. <|> ir

52 Tournure familière. Utilisez “être allé” plutôt que “avoir été”. [[92:106]] => On remarque qu'il s'agit juste d'un lien symbolique sur un évènement, et cet évènement nous avais déjà été renseigner par les commandes ci-dessus. <|> avais déjà été => suggestions : []
52 Incohérence. Après “avoir été”, il faut un participe passé (à moins que “avoir été” signifie ici “être allé”). [[107:117]] => On remarque qu'il s'agit juste d'un lien symbolique sur un évènement, et cet évènement nous avais déjà été renseigner par les commandes ci-dessus. <|> renseigner => suggestions : ['renseignés', 'renseigné', 'renseignée', 'renseignées']

53 Mot inconnu : Udev [[0:4]] => Udev peut décider d'attribuer à votre périphérique un fichier ///dev/input/eventx// différent à chaque démarrage, d'où l'intérêt de ce chemin qui ne bougera jamais (cela évite de créer une règle udev qui fixe un ///dev/input/eventx// particulier). <|> udev
53 Mot inconnu : udev [[195:199]] => Udev peut décider d'attribuer à votre périphérique un fichier ///dev/input/eventx// différent à chaque démarrage, d'où l'intérêt de ce chemin qui ne bougera jamais (cela évite de créer une règle udev qui fixe un ///dev/input/eventx// particulier). <|> udev

55 Mot inconnu : xxx [[75:78]] => Vous devez donc retenir un chemin de la forme "///dev/input/by-path/xxx//" xxx variant suivant votre modèle. <|> xxx

61 Mot inconnu : Xorg [[25:29]] => === Signaux attrapés par Xorg : === <|> xorg

62 Mot inconnu : xorg [[3:7]] => Si xorg arrive à attraper les signaux de la télécommande, cette commande affichera les touches appuyés :  <|> xorg
62 Accord de genre erroné avec « appuyés ». [[87:94]] => Si xorg arrive à attraper les signaux de la télécommande, cette commande affichera les touches appuyés :  <|> touches => suggestions : ['touchés']
62 Accord de genre erroné entre « touches » et « appuyés ». [[95:102]] => Si xorg arrive à attraper les signaux de la télécommande, cette commande affichera les touches appuyés :  <|> appuyés => suggestions : ['appuyées']
62 Espace(s) en fin de ligne à supprimer. [[104:105]] => Si xorg arrive à attraper les signaux de la télécommande, cette commande affichera les touches appuyés :  <|>   => suggestions : ['']

64 Mot inconnu : xorg [[54:58]] => Si le périphérique est considéré comme un clavier par xorg,  <|> xorg
64 Espace(s) en fin de ligne à supprimer. [[59:60]] => Si le périphérique est considéré comme un clavier par xorg,  <|>   => suggestions : ['']

65 Guillemets typographiques ouvrants. [[67:68]] => on peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) grâce à  <|> " => suggestions : ['«\xa0', '“']
65 Guillemets typographiques fermants. [[76:77]] => on peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) grâce à  <|> " => suggestions : ['\xa0»', '”']
65 Mot inconnu : xorg [[85:89]] => on peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) grâce à  <|> xorg
65 Espace(s) en fin de ligne à supprimer. [[98:99]] => on peut savoir ce qui sa passe sur ce périphérique (les évènements "attrapés" par le xorg) grâce à  <|>   => suggestions : ['']

67 Mot inconnu : votre_periph [[2:14]] => //votre_periph// correspondant au chemin trouvé plus haut. <|> votre_periph

69 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. [[7:8]] => Penser a installer le paquet [[apt://evtest]] si nécessaire. <|> a => suggestions : ['à']
69 Incohérence probable avec “a” : “installer” n’est pas un participe passé. [[9:18]] => Penser a installer le paquet [[apt://evtest]] si nécessaire. <|> installer => suggestions : ['installé']
69 Mot inconnu : evtest [[37:43]] => Penser a installer le paquet [[apt://evtest]] si nécessaire. <|> evtest

72 Mot inconnu : LIRC [[25:29]] => === Signaux attrapés par LIRC === <|> lirc

73 Mot inconnu : LIRC [[19:23]] => Il faut configurer LIRC avec le fichier /etc/lirc/hardware.conf et /etc/lirc/lircd.conf (voir plus bas). <|> lirc

74 Espace(s) en fin de ligne à supprimer. [[27:28]] => Ensuite il suffit de lancer  <|>   => suggestions : ['']

76 Conjugaison erronée. Accord avec “cela”. Le verbe devrait être à la 3ᵉ personne du singulier. [[81:85]] => Puis appuyez sur les touches de la télécommande, si des lignes s'affichent, cela veux dire que LIRC attrape bien les événement de la télécommande. <|> veux => suggestions : ['veut']
76 Mot inconnu : LIRC [[95:99]] => Puis appuyez sur les touches de la télécommande, si des lignes s'affichent, cela veux dire que LIRC attrape bien les événement de la télécommande. <|> lirc
76 Accord de nombre erroné : « événement » devrait être au pluriel. [[117:126]] => Puis appuyez sur les touches de la télécommande, si des lignes s'affichent, cela veux dire que LIRC attrape bien les événement de la télécommande. <|> événement => suggestions : ['événements']

80 Mot inconnu : xorg [[29:33]] => ==== Garder juste la gestion xorg ==== <|> xorg

81 Mot inconnu : xmodmap [[9:16]] => Utiliser xmodmap pour assigner les touches a des actions : http://doc.ubuntu-fr.org/clavier_multimedia#les_keysyms_de_x . <|> xmodmap

82 Mot inconnu : LIRC [[35:39]] => Cependant c'est moins puissant que LIRC. <|> lirc

84 Mot inconnu : LIRC [[14:18]] => ==== Utiliser LIRC ==== <|> lirc

87 Mot inconnu : LIRC [[17:21]] => ===== Configurer LIRC ===== <|> lirc
90 Accord de nombre erroné : « bon » devrait être au pluriel. [[17:20]] => FIXME donner les bon paramètres a l'installation fait gagner du temps. <|> bon => suggestions : ['bons']

94 Espace(s) en fin de ligne à supprimer. [[36:37]] => C’est ici qu’est défini le matériel.  <|>   => suggestions : ['']

95 Mot inconnu : LIRC [[39:43]] => Par contre, **il ne fait pas partie de LIRC** ! Ce fichier de configuration est une aide, laissée par les packageurs de votre distribution (Ubuntu dans notre cas) afin de simplifier l’utilisation des démons contrôlant LIRC. Il est donc nécessaire de faire attention à ce que vous lisez sur Internet, car en fonction de votre distribution les paramètres peuvent drastiquement changer. Le fichier peut même être totalement inutile. (Pour l’anecdote, je l’ai appris à mes dépends en perdant quelques heures lors d’une migration Ubuntu vers Debian) <|> lirc
95 Mot inconnu : LIRC [[218:222]] => Par contre, **il ne fait pas partie de LIRC** ! Ce fichier de configuration est une aide, laissée par les packageurs de votre distribution (Ubuntu dans notre cas) afin de simplifier l’utilisation des démons contrôlant LIRC. Il est donc nécessaire de faire attention à ce que vous lisez sur Internet, car en fonction de votre distribution les paramètres peuvent drastiquement changer. Le fichier peut même être totalement inutile. (Pour l’anecdote, je l’ai appris à mes dépends en perdant quelques heures lors d’une migration Ubuntu vers Debian) <|> lirc
95 Après “faire attention à ce que”, le verbe doit être au subjonctif. [[280:285]] => Par contre, **il ne fait pas partie de LIRC** ! Ce fichier de configuration est une aide, laissée par les packageurs de votre distribution (Ubuntu dans notre cas) afin de simplifier l’utilisation des démons contrôlant LIRC. Il est donc nécessaire de faire attention à ce que vous lisez sur Internet, car en fonction de votre distribution les paramètres peuvent drastiquement changer. Le fichier peut même être totalement inutile. (Pour l’anecdote, je l’ai appris à mes dépends en perdant quelques heures lors d’une migration Ubuntu vers Debian) <|> lisez => suggestions : ['lussiez', 'lisiez']
95 Locution « à mes/tes/ses/nos/vos/leurs dépens ». [[463:476]] => Par contre, **il ne fait pas partie de LIRC** ! Ce fichier de configuration est une aide, laissée par les packageurs de votre distribution (Ubuntu dans notre cas) afin de simplifier l’utilisation des démons contrôlant LIRC. Il est donc nécessaire de faire attention à ce que vous lisez sur Internet, car en fonction de votre distribution les paramètres peuvent drastiquement changer. Le fichier peut même être totalement inutile. (Pour l’anecdote, je l’ai appris à mes dépends en perdant quelques heures lors d’une migration Ubuntu vers Debian) <|> à mes dépends => suggestions : ['à mes dépens']
95 Incohérence avec « mes » : « dépends » est un verbe. [[469:476]] => Par contre, **il ne fait pas partie de LIRC** ! Ce fichier de configuration est une aide, laissée par les packageurs de votre distribution (Ubuntu dans notre cas) afin de simplifier l’utilisation des démons contrôlant LIRC. Il est donc nécessaire de faire attention à ce que vous lisez sur Internet, car en fonction de votre distribution les paramètres peuvent drastiquement changer. Le fichier peut même être totalement inutile. (Pour l’anecdote, je l’ai appris à mes dépends en perdant quelques heures lors d’une migration Ubuntu vers Debian) <|> dépends => suggestions : ['dépens']

96 Mot inconnu : LIRC [[62:66]] => Concrètement, ce fichier est lu par le script de démarrage de LIRC (/etc/init.d/lirc,  dont le contenu change selon les distributions). Celui-ci  prépare l’environnement et construit la ligne de commande adéquate pour lancer le démon LIRC. <|> lirc
96 Espace(s) surnuméraire(s) à supprimer. [[85:87]] => Concrètement, ce fichier est lu par le script de démarrage de LIRC (/etc/init.d/lirc,  dont le contenu change selon les distributions). Celui-ci  prépare l’environnement et construit la ligne de commande adéquate pour lancer le démon LIRC. <|>    => suggestions : [' ']
96 Espace(s) surnuméraire(s) à supprimer. [[144:146]] => Concrètement, ce fichier est lu par le script de démarrage de LIRC (/etc/init.d/lirc,  dont le contenu change selon les distributions). Celui-ci  prépare l’environnement et construit la ligne de commande adéquate pour lancer le démon LIRC. <|>    => suggestions : [' ']
96 Mot inconnu : LIRC [[234:238]] => Concrètement, ce fichier est lu par le script de démarrage de LIRC (/etc/init.d/lirc,  dont le contenu change selon les distributions). Celui-ci  prépare l’environnement et construit la ligne de commande adéquate pour lancer le démon LIRC. <|> lirc

98 Accord de nombre erroné : « paramètre » devrait être au pluriel. [[17:26]] => Il y a plusieurs paramètre a regler dans ce fichier :  <|> paramètre => suggestions : ['paramètres']
98 Mot inconnu : regler [[29:35]] => Il y a plusieurs paramètre a regler dans ce fichier :  <|> regler
98 Espace(s) en fin de ligne à supprimer. [[53:54]] => Il y a plusieurs paramètre a regler dans ce fichier :  <|>   => suggestions : ['']

99 Mot inconnu : REMOTE [[4:10]] => === REMOTE === <|> remote

102 Mot inconnu : REMOTE_DRIVER [[4:17]] => === REMOTE_DRIVER === <|> remote_driver

104 Mot inconnu : LIRC [[15:19]] => Ceci indique à LIRC quel pilote utiliser pour dialoguer. Cette notion de pilote est fois interne à LIRC  : Il ne s’agit pas de périphérique noyau mais juste de définir comment LIRC va dialoguer avec votre périphérique /dev/machin. La subtilité, c’est que LIRC peut très bien avoir été compilé sans le support du périphérique que vous voulez utiliser.  <|> lirc
104 Mot inconnu : LIRC [[99:103]] => Ceci indique à LIRC quel pilote utiliser pour dialoguer. Cette notion de pilote est fois interne à LIRC  : Il ne s’agit pas de périphérique noyau mais juste de définir comment LIRC va dialoguer avec votre périphérique /dev/machin. La subtilité, c’est que LIRC peut très bien avoir été compilé sans le support du périphérique que vous voulez utiliser.  <|> lirc
104 Espace(s) surnuméraire(s) à supprimer. [[103:105]] => Ceci indique à LIRC quel pilote utiliser pour dialoguer. Cette notion de pilote est fois interne à LIRC  : Il ne s’agit pas de périphérique noyau mais juste de définir comment LIRC va dialoguer avec votre périphérique /dev/machin. La subtilité, c’est que LIRC peut très bien avoir été compilé sans le support du périphérique que vous voulez utiliser.  <|>    => suggestions : [' ']
104 Mot inconnu : LIRC [[176:180]] => Ceci indique à LIRC quel pilote utiliser pour dialoguer. Cette notion de pilote est fois interne à LIRC  : Il ne s’agit pas de périphérique noyau mais juste de définir comment LIRC va dialoguer avec votre périphérique /dev/machin. La subtilité, c’est que LIRC peut très bien avoir été compilé sans le support du périphérique que vous voulez utiliser.  <|> lirc
104 Mot inconnu : LIRC [[255:259]] => Ceci indique à LIRC quel pilote utiliser pour dialoguer. Cette notion de pilote est fois interne à LIRC  : Il ne s’agit pas de périphérique noyau mais juste de définir comment LIRC va dialoguer avec votre périphérique /dev/machin. La subtilité, c’est que LIRC peut très bien avoir été compilé sans le support du périphérique que vous voulez utiliser.  <|> lirc
104 Espace(s) en fin de ligne à supprimer. [[350:351]] => Ceci indique à LIRC quel pilote utiliser pour dialoguer. Cette notion de pilote est fois interne à LIRC  : Il ne s’agit pas de périphérique noyau mais juste de définir comment LIRC va dialoguer avec votre périphérique /dev/machin. La subtilité, c’est que LIRC peut très bien avoir été compilé sans le support du périphérique que vous voulez utiliser.  <|>   => suggestions : ['']
105 Espace(s) en fin de ligne à supprimer. [[54:55]] => Vous aurez la liste des drivers supportés en lançant :  <|>   => suggestions : ['']

108 Mot inconnu : IR [[18:20]] => Si vote récepteur IR est reconnu comme clavier, vous pouvez utiliser **devinput**. <|> ir
108 Mot inconnu : devinput [[71:79]] => Si vote récepteur IR est reconnu comme clavier, vous pouvez utiliser **devinput**. <|> devinput

110 Mot inconnu : REMOTE_DEVICE [[4:17]] => === REMOTE_DEVICE === <|> remote_device

111 Mot inconnu : LIRC [[109:113]] => C’est le fichier périphérique qui a été créé par le module noyau que vous avez chargé. Ceci indique au démon LIRC avec qui il va devoir dialoguer. <|> lirc

113 Mot inconnu : IR [[34:36]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> ir
113 Mot inconnu : LIRC_DEVICE [[85:96]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> lirc_device
113 Guillemets typographiques ouvrants. [[97:98]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> " => suggestions : ['«\xa0', '“']
113 Mot inconnu : name [[98:102]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> name
113 Mot inconnu : cx88 [[103:107]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> cx88
113 Il manque un espace. [[109:111]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> ir => suggestions : [' IR']
113 Mot inconnu : IR [[109:111]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> ir
113 Il manque un espace. [[115:124]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> hauppauge => suggestions : [' Hauppauge']
113 Mot inconnu : Hauppauge [[115:124]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> hauppauge
113 Il manque un espace. [[126:137]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> nova-s-plus => suggestions : [' Nova-S-Plus']
113 Guillemets typographiques fermants. [[139:140]] => Entrer ici le chemin du récepteur IR trouvé plus haut ou quelque chose de la forme : LIRC_DEVICE="name=cx88\?IR\?\?Hauppauge\?Nova-S-Plus\?". <|> " => suggestions : ['\xa0»', '”']

115 Mot inconnu : REMOTE_LIRCD_CONF [[4:21]] => === REMOTE_LIRCD_CONF === <|> remote_lircd_conf

120 Mot inconnu : lircd [[73:78]] => Comme décrit plus haut, ces informations servent juste à lancer le démon lircd. <|> lircd
121 Espace(s) en fin de ligne à supprimer. [[81:82]] => Une fois ces informations en main, vous pouvez donc le lancer manuellement avec :  <|>   => suggestions : ['']

123 Conjugaison erronée. Accord avec “Les options…”. Le verbe devrait être à la 3ᵉ personne du pluriel. [[19:22]] => Les autres options vus plus haut étant facultative, je ne ne les ai pas écrite, reportez vous a la documentation pour les ajouter. <|> vus => suggestions : ['voyaient', 'voient', 'virent']
123 Doublon. [[55:60]] => Les autres options vus plus haut étant facultative, je ne ne les ai pas écrite, reportez vous a la documentation pour les ajouter. <|> ne ne => suggestions : ['ne']
123 Accord avec le COD « les » : Le participe passé « écrite » devrait être au pluriel (et accordé en genre). [[72:78]] => Les autres options vus plus haut étant facultative, je ne ne les ai pas écrite, reportez vous a la documentation pour les ajouter. <|> écrite => suggestions : ['écrites']
123 Forme interrogative ? Mettez un trait d’union. [[80:93]] => Les autres options vus plus haut étant facultative, je ne ne les ai pas écrite, reportez vous a la documentation pour les ajouter. <|> reportez vous => suggestions : ['reportez-vous']

125 Dialogues et énumérations : il faut tiret cadratin [1] ou demi-cadratin [2] suivi d’un espace insécable. [[0:1]] => -n permet de lancer le programme en tant que démon, en tache de fond, ne pas le mettre si vous voulez voir les retours du programme :  <|> - => suggestions : ['—\xa0', '–\xa0']
125 Espace(s) en fin de ligne à supprimer. [[133:134]] => -n permet de lancer le programme en tant que démon, en tache de fond, ne pas le mettre si vous voulez voir les retours du programme :  <|>   => suggestions : ['']

127 Mot inconnu : irw [[37:40]] => Vous pouvez ensuite tenter de lancer irw dans un autre terminal, et voir ce qu'il se passe. <|> irw

130 Mot inconnu : USBuirt [[27:34]] => Un exemple pour le boitier USBuirt : un passage de /etc/init.d/lirc start me donne maintenant un démon lancé comme ça: <|> usbuirt
130 Mot inconnu : start [[68:73]] => Un exemple pour le boitier USBuirt : un passage de /etc/init.d/lirc start me donne maintenant un démon lancé comme ça: <|> start

135 Mot inconnu : LIRC [[54:58]] => Mais au moins, maintenant, à chaque fois que je lance LIRC par le script d’initialisation j’obtiens : des modules chargés, un périphérique bloc /dev/ttyUSB0 monté, un joli démon lancé sur ma machine pour dialoguer avec ce /dev/ttyUSB0 selon le langage « usb_uirt_raw », et ce même démon me crée une jolie socket unix /dev/lircd pour mes logiciels favoris (voir plus bas le rôle de cette socket). <|> lirc
135 Mot inconnu : usb_uirt_raw [[254:266]] => Mais au moins, maintenant, à chaque fois que je lance LIRC par le script d’initialisation j’obtiens : des modules chargés, un périphérique bloc /dev/ttyUSB0 monté, un joli démon lancé sur ma machine pour dialoguer avec ce /dev/ttyUSB0 selon le langage « usb_uirt_raw », et ce même démon me crée une jolie socket unix /dev/lircd pour mes logiciels favoris (voir plus bas le rôle de cette socket). <|> usb_uirt_raw
135 Accord de genre erroné : « une jolie » est féminin, « socket » est masculin. [[305:311]] => Mais au moins, maintenant, à chaque fois que je lance LIRC par le script d’initialisation j’obtiens : des modules chargés, un périphérique bloc /dev/ttyUSB0 monté, un joli démon lancé sur ma machine pour dialoguer avec ce /dev/ttyUSB0 selon le langage « usb_uirt_raw », et ce même démon me crée une jolie socket unix /dev/lircd pour mes logiciels favoris (voir plus bas le rôle de cette socket). <|> socket => suggestions : []
135 Mot inconnu : unix [[312:316]] => Mais au moins, maintenant, à chaque fois que je lance LIRC par le script d’initialisation j’obtiens : des modules chargés, un périphérique bloc /dev/ttyUSB0 monté, un joli démon lancé sur ma machine pour dialoguer avec ce /dev/ttyUSB0 selon le langage « usb_uirt_raw », et ce même démon me crée une jolie socket unix /dev/lircd pour mes logiciels favoris (voir plus bas le rôle de cette socket). <|> unix
135 Accord de genre erroné : « socket » est masculin. [[381:386]] => Mais au moins, maintenant, à chaque fois que je lance LIRC par le script d’initialisation j’obtiens : des modules chargés, un périphérique bloc /dev/ttyUSB0 monté, un joli démon lancé sur ma machine pour dialoguer avec ce /dev/ttyUSB0 selon le langage « usb_uirt_raw », et ce même démon me crée une jolie socket unix /dev/lircd pour mes logiciels favoris (voir plus bas le rôle de cette socket). <|> cette => suggestions : ['ce']

140 Mot inconnu : lircd [[19:24]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> lircd
140 S’il s’agit d’une interrogation, il manque un trait d’union. [[203:209]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> est ce => suggestions : ['est-ce']
140 S’il s’agit d’une interrogation, il manque un trait d’union. [[234:240]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> est ce => suggestions : ['est-ce']
140 Mot inconnu : lircd [[270:275]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> lircd
140 Il manque un espace. [[276:280]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> conf => suggestions : [' conf']
140 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[350:351]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> a => suggestions : ['À']
140 Mot inconnu : user-friendly [[486:499]] => Jusqu’ici le démon lircd que vous pouvez maintenant lancer sait comment dialoguer avec votre périphérique émetteur ou récepteur. Mais il ne sait pas vraiment ce qu’il va trouver pendant son dialogue, qu’est ce qu’il doit garder et qu’est ce qu’il doit jeter. Ce fichier lircd.conf est là pour ça : c’est une sorte de « carte » de votre télécommande. A l’intérieur, des listes de télécommande (si vous en utilisez plusieurs) et pour chaque télécommande des touches avec des jolis noms « user-friendly » et les codes infrarouges correspondant. <|> user-friendly
142 Espace(s) en fin de ligne à supprimer. [[31:32]] => Deux cas peuvent se présenter :  <|>   => suggestions : ['']

144 Mot inconnu : devinput [[28:36]] => === Vous utilisez le driver devinput === <|> devinput

146 Mot inconnu : XOrg [[41:45]] => Les codes seront directement envoyés par XOrg (je trompe-je ??). <|> xorg
146 Euphonie. Pour les verbes finissant par “e” à l’interrogatif à la 1ʳᵉ personne du singulier, mettez un accent aigu ou grave sur le “e” final. Exemple : “pensé-je” (présent), à ne pas confondre avec “pensais-je” (imparfait). [[50:59]] => Les codes seront directement envoyés par XOrg (je trompe-je ??). <|> trompe-je => suggestions : ['trompé-je', 'trompè-je']

147 Espace(s) en fin de ligne à supprimer. [[76:77]] => Ils suivent une norme, le fichier est donc universel, vous pouvez le trouver  <|>   => suggestions : ['']

153 Accord de nombre erroné : « correspondance » devrait être au pluriel. [[40:54]] => Attention, ce fichier contient donc les correspondance de toute les touches que peuvent reconnaitre Xorg, il contient donc de touches que votre télécommande ne possède pas, je ne sais pas si cela a une influence. <|> correspondance => suggestions : ['correspondances']
153 Erreur d’accord probable avec “les”. [[58:63]] => Attention, ce fichier contient donc les correspondance de toute les touches que peuvent reconnaitre Xorg, il contient donc de touches que votre télécommande ne possède pas, je ne sais pas si cela a une influence. <|> toute => suggestions : ['toutes']
153 Mot inconnu : Xorg [[100:104]] => Attention, ce fichier contient donc les correspondance de toute les touches que peuvent reconnaitre Xorg, il contient donc de touches que votre télécommande ne possède pas, je ne sais pas si cela a une influence. <|> xorg

155 Mot inconnu : devinput [[30:38]] => === Vous n'utilisez le driver devinput === <|> devinput

159 Il faut élider “si” et l’accoler au pronom. [[5:8]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> si  => suggestions : ['s’']
159 Il manque un trait d’union si “même” se rapporte à “vous”. [[51:60]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> vous même => suggestions : ['vous-même']
159 Mot inconnu : irrecord [[89:97]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> irrecord
159 Mot inconnu : LIRC [[152:156]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> lirc
159 Accord de nombre erroné : « même » devrait être au pluriel. [[183:187]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> même => suggestions : ['mêmes']
159 Mot inconnu : lircd [[214:219]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> lircd
159 Il manque un espace. [[284:288]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> conf => suggestions : [' conf']
159 Il manque un trait d’union. [[296:304]] => Mais si il ne s’y trouve pas, vous pouvez le faire vous même. Vous allez devoir utiliser irrecord pour ça. C’est un exécutable livré ordinairement avec LIRC. Il prend grosso modo les même paramètres que le démon « lircd », donc si vous êtes capables de configurer le fichier hardware.conf et que celui ci vous génère à chaque lancement de /etc/init.d/lirc une belle ligne de commande, alors le plus gros du travail est fait. <|> celui ci => suggestions : ['celui-ci']

164 Mot inconnu : irrecord [[6:14]] => Comme irrecord dialogue directement avec le bloc périphérique, comme lircd, il ne faut pas que ce dernier soit lancé (ils sont exclusifs et très jaloux). <|> irrecord
164 Mot inconnu : lircd [[69:74]] => Comme irrecord dialogue directement avec le bloc périphérique, comme lircd, il ne faut pas que ce dernier soit lancé (ils sont exclusifs et très jaloux). <|> lircd

168 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[0:1]] => A ajouter : Une partie des fichier est déjà présent par défaut, pour les visualiser naviguer dans ces fichiers :  <|> a => suggestions : ['À']
168 Accord de nombre erroné : « fichier » devrait être au pluriel. [[27:34]] => A ajouter : Une partie des fichier est déjà présent par défaut, pour les visualiser naviguer dans ces fichiers :  <|> fichier => suggestions : ['fichiers']
168 Espace(s) en fin de ligne à supprimer. [[112:113]] => A ajouter : Une partie des fichier est déjà présent par défaut, pour les visualiser naviguer dans ces fichiers :  <|>   => suggestions : ['']
170 Mot inconnu : include [[22:29]] => Pour les inclure : ?? include ~/émetteur/lircd.conf <|> include
170 Mot inconnu : lircd [[41:46]] => Pour les inclure : ?? include ~/émetteur/lircd.conf <|> lircd
170 Il manque un espace. [[47:51]] => Pour les inclure : ?? include ~/émetteur/lircd.conf <|> conf => suggestions : [' conf']

173 Mot inconnu : LIRC [[57:61]] => //Mais alors, comment mes applications savent jouer avec LIRC ?// <|> lirc

175 Accord de genre erroné : « socket » est masculin. [[36:38]] => C’est simple, vous vous souvenez de la socket unix dont je parlais plus haut, celle qui est préparée par le démon LIRC? Et bien les applications  se connectent à celle-ci  et écoutent toutes les touches que vous pouvez taper. <|> la => suggestions : ['le']
175 Mot inconnu : unix [[46:50]] => C’est simple, vous vous souvenez de la socket unix dont je parlais plus haut, celle qui est préparée par le démon LIRC? Et bien les applications  se connectent à celle-ci  et écoutent toutes les touches que vous pouvez taper. <|> unix
175 Mot inconnu : LIRC [[114:118]] => C’est simple, vous vous souvenez de la socket unix dont je parlais plus haut, celle qui est préparée par le démon LIRC? Et bien les applications  se connectent à celle-ci  et écoutent toutes les touches que vous pouvez taper. <|> lirc
175 Confusion probable. [[120:127]] => C’est simple, vous vous souvenez de la socket unix dont je parlais plus haut, celle qui est préparée par le démon LIRC? Et bien les applications  se connectent à celle-ci  et écoutent toutes les touches que vous pouvez taper. <|> et bien => suggestions : ['Eh bien', 'Hé bien']
175 Espace(s) surnuméraire(s) à supprimer. [[144:146]] => C’est simple, vous vous souvenez de la socket unix dont je parlais plus haut, celle qui est préparée par le démon LIRC? Et bien les applications  se connectent à celle-ci  et écoutent toutes les touches que vous pouvez taper. <|>    => suggestions : [' ']
175 Espace(s) surnuméraire(s) à supprimer. [[170:172]] => C’est simple, vous vous souvenez de la socket unix dont je parlais plus haut, celle qui est préparée par le démon LIRC? Et bien les applications  se connectent à celle-ci  et écoutent toutes les touches que vous pouvez taper. <|>    => suggestions : [' ']

176 Accord de genre erroné : « socket » est masculin. [[0:5]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|> cette => suggestions : ['Ce']
176 Il manque un trait d’union si “même” se rapporte à “vous”. [[88:97]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|> vous même => suggestions : ['vous-même']
176 Il manque un espace à côté du tiret. [[169:171]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|>  – => suggestions : [' – ', ' — ']
176 Mot inconnu : lircd [[187:192]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|> lircd
176 Accord de nombre erroné : « application » devrait être au pluriel. [[209:220]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|> application => suggestions : ['applications']
176 Mot inconnu : mythtv [[388:394]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|> mythtv
176 Mot inconnu : frontend [[456:464]] => Cette socket est nommée /dev/lircd le plus souvent. Si vous souhaitez donner son chemin vous même (par exemple si vous en avez plusieurs), il est défini par le paramètre –output du démon lircd. La plupart des application vont se connecter à /dev/lircd, mais certaines d’entre elles peuvent être configurées pour se connecter au chemin de votre choix (c’est le cas par exemple de mon cher mythtv qui possède ce paramètre dans un coin de la configuration du frontend). Je vous conseille de tout laisser par défaut, c’est suffisant pour 90% des cas. <|> frontend
178 Mot inconnu : LIRC [[97:101]] => Vous l’avez compris, mais je me permets de le rappeler : pour qu’une application fonctionne avec LIRC, il faut qu’elle se branche sur la socket unix, et donc qu’elle ait été codée pour çà ! Cela semble évident au premier abord mais c’est pourtant loin d’être automatique si l’on se réfère aux questions qu’on trouve souvent sur les forums. <|> lirc
178 Accord de genre erroné : « socket » est masculin. [[134:136]] => Vous l’avez compris, mais je me permets de le rappeler : pour qu’une application fonctionne avec LIRC, il faut qu’elle se branche sur la socket unix, et donc qu’elle ait été codée pour çà ! Cela semble évident au premier abord mais c’est pourtant loin d’être automatique si l’on se réfère aux questions qu’on trouve souvent sur les forums. <|> la => suggestions : ['le']
178 Mot inconnu : unix [[144:148]] => Vous l’avez compris, mais je me permets de le rappeler : pour qu’une application fonctionne avec LIRC, il faut qu’elle se branche sur la socket unix, et donc qu’elle ait été codée pour çà ! Cela semble évident au premier abord mais c’est pourtant loin d’être automatique si l’on se réfère aux questions qu’on trouve souvent sur les forums. <|> unix
178 Confusion : « çà » ne s’emploie plus guère que dans l’expression « çà et là ». [[185:187]] => Vous l’avez compris, mais je me permets de le rappeler : pour qu’une application fonctionne avec LIRC, il faut qu’elle se branche sur la socket unix, et donc qu’elle ait été codée pour çà ! Cela semble évident au premier abord mais c’est pourtant loin d’être automatique si l’on se réfère aux questions qu’on trouve souvent sur les forums. <|> çà => suggestions : ['ça']

182 Mot inconnu : lircrc [[19:25]] => ==== /home/<user>/.lircrc ====  <|> lircrc
182 Espace(s) en fin de ligne à supprimer. [[30:31]] => ==== /home/<user>/.lircrc ====  <|>   => suggestions : ['']

186 Accord de genre erroné : « socket » est masculin. [[33:35]] => Les applications se connectent à la socket lircd, OK. Mais comment l’application sait quoi faire selon la touche pressée? C’est ici qu’intervient le fichier .lircrc. <|> la => suggestions : ['le']
186 Mot inconnu : lircd [[43:48]] => Les applications se connectent à la socket lircd, OK. Mais comment l’application sait quoi faire selon la touche pressée? C’est ici qu’intervient le fichier .lircrc. <|> lircd
186 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[156:158]] => Les applications se connectent à la socket lircd, OK. Mais comment l’application sait quoi faire selon la touche pressée? C’est ici qu’intervient le fichier .lircrc. <|>  . => suggestions : ['. ', '.']
186 Mot inconnu : lircrc [[158:164]] => Les applications se connectent à la socket lircd, OK. Mais comment l’application sait quoi faire selon la touche pressée? C’est ici qu’intervient le fichier .lircrc. <|> lircrc

187 Mot inconnu : LIRC [[97:101]] => Contrairement à une autre idée fréquemment répandue, ce n’est pas un fichier de configuration de LIRC. C’est un fichier de configuration de vos applications finales ! <|> lirc

188 Il manque un trait d’union. [[10:19]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|> celles ci => suggestions : ['celles-ci']
188 Mot inconnu : lircrc [[61:67]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|> lircrc
188 Mot inconnu : include [[124:131]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|> include
188 Guillemets isolés. [[194:197]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|>  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']
188 Mot inconnu : prog [[197:201]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|> prog
188 Guillemets isolés. [[201:204]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|>  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']
188 Pas d’espace avant ce signe. [[203:205]] => En effet, celles ci parcourent immanquablement le fichier ~/.lircrc (et les éventuels sous fichier inclus avec la directive include), y repèrent leur propre marqueur (c’est le rôle de l’attribut " prog " ), et enregistre la carte des événements déclenchés en fonction des touches appuyées. Exemple : <|>  ) => suggestions : [')']
197 Mot inconnu : Play [[23:27]] => L’appui de la touche « Play » (touche nommée ainsi dans le fichier /etc/lirc/lircd.conf qui établit la correspondance nom <–> code infrarouge), provoque l’événement « pause » dans l’application mplayer. <|> play
197 Mot inconnu : mplayer [[194:201]] => L’appui de la touche « Play » (touche nommée ainsi dans le fichier /etc/lirc/lircd.conf qui établit la correspondance nom <–> code infrarouge), provoque l’événement « pause » dans l’application mplayer. <|> mplayer
200 Accord de nombre erroné : « application » devrait être au pluriel. [[71:82]] => Plusieurs possibilités : des gens distribuent leur propre fichier, les application peuvent proposer leurs fichiers, ... <|> application => suggestions : ['applications']
200 Une de ces ponctuations est superflue. [[114:117]] => Plusieurs possibilités : des gens distribuent leur propre fichier, les application peuvent proposer leurs fichiers, ... <|> , . => suggestions : [',', '.']
200 Typographie : points de suspension. Utilisez le caractère dédié. [[116:119]] => Plusieurs possibilités : des gens distribuent leur propre fichier, les application peuvent proposer leurs fichiers, ... <|> ... => suggestions : ['…']

202 Accord de nombre erroné : « programme » devrait être au pluriel. [[10:19]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> programme => suggestions : ['programmes']
202 Mot inconnu : éssayer [[28:35]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> éssayer
202 Il manque un trait d’union. [[57:65]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> celui ci => suggestions : ['celui-ci']
202 Mot inconnu : mythbuntu-lircrc-generator [[76:102]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> mythbuntu-lircrc-generator
202 Mot inconnu : mythtv [[142:148]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> mythtv
202 Mot inconnu : mplayer [[150:157]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> mplayer
202 Mot inconnu : xine [[159:163]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> xine
202 Mot inconnu : vlc [[165:168]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> vlc
202 Mot inconnu : elisa [[170:175]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> elisa
202 Mot inconnu : moovida [[177:184]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> moovida
202 Mot inconnu : xmess [[187:192]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> xmess
202 Mot inconnu : xmame [[197:202]] => Sinon des programme peuvent éssayer de les générés comme celui ci : [[apt://mythbuntu-lircrc-generator]] qui permet de gérer les applications mythtv, mplayer, xine, vlc, elisa (moovida), xmess, et xmame. <|> xmame

204 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. [[4:5]] => === A savoir pour le faire soi-même === <|> a => suggestions : ['À']

222 Mot inconnu : lircrc [[5:11]] => Un [[lircrc|tutoriel spécifique]] existe pour la création des fichiers lircrc (fichiers définissant l'interprétation des commandes IR par les logiciels). <|> lircrc
222 Mot inconnu : lircrc [[71:77]] => Un [[lircrc|tutoriel spécifique]] existe pour la création des fichiers lircrc (fichiers définissant l'interprétation des commandes IR par les logiciels). <|> lircrc
222 Mot inconnu : IR [[131:133]] => Un [[lircrc|tutoriel spécifique]] existe pour la création des fichiers lircrc (fichiers définissant l'interprétation des commandes IR par les logiciels). <|> ir

226 Mot inconnu : lirc [[140:144]] => Pour des informations plus détaillées sur ce fichier, consultez [[http://www.lirc.org/html/configure.html#lircrc_format|la documentation de lirc sur son site]] (en anglais). <|> lirc

229 Mot inconnu : IRexec [[3:9]] => == IRexec == <|> irexec

231 Mot inconnu : IRexec [[0:6]] => IRexec permet de lancer une application sur la pression d'une touche. La syntaxe est la suivante : <|> irexec

233 Mot inconnu : begin [[0:5]] => begin <|> begin

237 Mot inconnu : end [[0:3]] => end <|> end

241 Mot inconnu : IRKick [[3:9]] => == IRKick == <|> irkick

242 Mot inconnu : kde [[5:8]] => Pour kde.FIXME <|> kde

244 Mot inconnu : LIRC [[13:17]] => ===== Lancer LIRC ===== <|> lirc

248 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[0:5]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> lircd => suggestions : ['Lircd']
248 Mot inconnu : lircd [[0:5]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> lircd
248 Mot inconnu : LIRC [[150:154]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> lirc
248 Mot inconnu : LIRC [[214:218]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> lirc
248 Mot inconnu : lircd [[233:238]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> lircd
248 Il manque un trait d’union. [[250:258]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> celui ci => suggestions : ['celui-ci']
248 Accord de genre erroné : « socket » est masculin. [[484:487]] => lircd est un démon qui s’interface avec un périphérique /dev/machinX (donc le fichier bloc est créé par un module noyau appartenant parfois au projet LIRC) selon un protocole de communication appelé « driver » par LIRC. Une fois que lircd est lancé, celui ci va à son tour lire un fichier de conf (/etc/lirc/lircd.conf par défaut). Ce fichier décrit les codes infrarouges susceptibles d’être échangés avec le périphérique (les codes sont regroupés en appareil). Le démon créé ensuite une socket de type /dev/lircdX avec lequel les programmes peuvent s’interfacer facilement. <|> une => suggestions : ['un']

249 Accord de genre erroné : « cette belle » est féminin, « socket » est masculin. [[43:49]] => Les programmes se connectent à cette belle socket, lisent un fichier de conf .lircrc dans le home de l’utilisateur, repèrent le mappage touche <–> événement à déclencher, et VOUS POUVEZ ENFIN REGARDER DES VIDEOS DEPUIS VOTRE CANAPE. <|> socket => suggestions : []
249 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[76:78]] => Les programmes se connectent à cette belle socket, lisent un fichier de conf .lircrc dans le home de l’utilisateur, repèrent le mappage touche <–> événement à déclencher, et VOUS POUVEZ ENFIN REGARDER DES VIDEOS DEPUIS VOTRE CANAPE. <|>  . => suggestions : ['. ', '.']
249 Mot inconnu : lircrc [[78:84]] => Les programmes se connectent à cette belle socket, lisent un fichier de conf .lircrc dans le home de l’utilisateur, repèrent le mappage touche <–> événement à déclencher, et VOUS POUVEZ ENFIN REGARDER DES VIDEOS DEPUIS VOTRE CANAPE. <|> lircrc
249 Mot inconnu : VIDEOS [[205:211]] => Les programmes se connectent à cette belle socket, lisent un fichier de conf .lircrc dans le home de l’utilisateur, repèrent le mappage touche <–> événement à déclencher, et VOUS POUVEZ ENFIN REGARDER DES VIDEOS DEPUIS VOTRE CANAPE. <|> videos
249 Mot inconnu : CANAPE [[225:231]] => Les programmes se connectent à cette belle socket, lisent un fichier de conf .lircrc dans le home de l’utilisateur, repèrent le mappage touche <–> événement à déclencher, et VOUS POUVEZ ENFIN REGARDER DES VIDEOS DEPUIS VOTRE CANAPE. <|> canape

252 Mot inconnu : LIRC [[35:39]] => ==== Lancer / redémarrer / arrêter LIRC (enfin !) : ==== <|> lirc
254 Espace(s) en fin de ligne à supprimer. [[37:38]] => Voici les commandes correspondantes :  <|>   => suggestions : ['']

261 Accord de nombre erroné : « clics » devrait être au singulier. [[12:17]] => ==== Chaque clics est interprétés 2 foix ==== <|> clics => suggestions : ['clic']
261 Accord avec la forme verbale “est” : “interprétés” devrait être au singulier. [[22:33]] => ==== Chaque clics est interprétés 2 foix ==== <|> interprétés => suggestions : ['interprété']
261 Mot inconnu : foix [[36:40]] => ==== Chaque clics est interprétés 2 foix ==== <|> foix

262 Accord de nombre erroné : « clics » devrait être au singulier. [[7:12]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> clics => suggestions : ['clic']
262 Accord avec la forme verbale “est” : “interprétés” devrait être au singulier. [[17:28]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> interprétés => suggestions : ['interprété']
262 Mot inconnu : foix [[31:35]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> foix
262 Mot inconnu : foix [[42:46]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> foix
262 Mot inconnu : xorg [[54:58]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> xorg
262 Mot inconnu : foix [[67:71]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> foix
262 Mot inconnu : LIRC [[76:80]] => Chaque clics est interprétés 2 foix : une foix par le xorg, et une foix par LIRC (ce n'est pas pratique pour un bouton comme mute, car l'action est effectué 2 fois.). <|> lirc

264 Mot inconnu : Xorg [[14:18]] => Pour empêcher Xorg d'interpréter les touches de la télécommande,  créer et éditer ce fichier : /usr/share/X11/xorg.conf.d/60-remote.conf  <|> xorg
264 Espace(s) surnuméraire(s) à supprimer. [[64:66]] => Pour empêcher Xorg d'interpréter les touches de la télécommande,  créer et éditer ce fichier : /usr/share/X11/xorg.conf.d/60-remote.conf  <|>    => suggestions : [' ']
264 Espace(s) en fin de ligne à supprimer. [[136:137]] => Pour empêcher Xorg d'interpréter les touches de la télécommande,  créer et éditer ce fichier : /usr/share/X11/xorg.conf.d/60-remote.conf  <|>   => suggestions : ['']

265 Espace(s) en fin de ligne à supprimer. [[11:12]] => et inscrire  <|>   => suggestions : ['']

276 Incohérence avec “de” : “fonctionne” est une forme verbale conjuguée. [[22:32]] => Si la transmission de fonctionne pas immédiatement, la meilleure méthode pour commencer un diagnostic est d'utiliser un appareil photo numérique. Allumez l'appareil photo et regardez la DÉL infrarouge de laquelle vous essayez de transmettre à travers l'objectif. Vous devriez voir des flashs violets venant de la DÉL infrarouge quand vous essayez de transmettre. Si vous ne voyez rien, votre appareil ne transmet rien. <|> fonctionne => suggestions : []
276 Mot inconnu : DÉL [[186:189]] => Si la transmission de fonctionne pas immédiatement, la meilleure méthode pour commencer un diagnostic est d'utiliser un appareil photo numérique. Allumez l'appareil photo et regardez la DÉL infrarouge de laquelle vous essayez de transmettre à travers l'objectif. Vous devriez voir des flashs violets venant de la DÉL infrarouge quand vous essayez de transmettre. Si vous ne voyez rien, votre appareil ne transmet rien. <|> dél
276 Mot inconnu : DÉL [[313:316]] => Si la transmission de fonctionne pas immédiatement, la meilleure méthode pour commencer un diagnostic est d'utiliser un appareil photo numérique. Allumez l'appareil photo et regardez la DÉL infrarouge de laquelle vous essayez de transmettre à travers l'objectif. Vous devriez voir des flashs violets venant de la DÉL infrarouge quand vous essayez de transmettre. Si vous ne voyez rien, votre appareil ne transmet rien. <|> dél

278 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

281 Confusion : “a” est la conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. [[39:40]] => <note important>Cette section est-elle a jours ?? c'est une copie d'une ancienne page</note> <|> a => suggestions : ['à']
285 Mot inconnu : LIRC [[181:185]] =>   * Assurez-vous que tous vos modules figurent sur la ligne MODULES="", séparés par des espaces. Prenez garde à l'ordre dans lequel vous les mentionnez. Ce sera l'ordre dans lequel LIRC reconnaîtra les appareils. C'est donc important si vous voulez faire une différence entre ceux-ci. <|> lirc
286 Mot inconnu : LIRCD_ARGS [[35:45]] =>   * Modifiez les lignes du côté de LIRCD_ARGS="" pour faire correspondre le tout à <|> lircd_args

316 Mot inconnu : LIRC [[9:13]] => Démarrez LIRC : <|> lirc

319 Mot inconnu : lircd [[24:29]] => Vous devriez avoir deux lircd actifs. Tout processus lirc qui tentera d'interagir avec lircd devra se faire spécifier un paramètre lui indiquant à quelle instance il s'adresse. <|> lircd
319 Mot inconnu : lirc [[53:57]] => Vous devriez avoir deux lircd actifs. Tout processus lirc qui tentera d'interagir avec lircd devra se faire spécifier un paramètre lui indiquant à quelle instance il s'adresse. <|> lirc
319 Mot inconnu : lircd [[87:92]] => Vous devriez avoir deux lircd actifs. Tout processus lirc qui tentera d'interagir avec lircd devra se faire spécifier un paramètre lui indiquant à quelle instance il s'adresse. <|> lircd
330 Mot inconnu : LIRCDPROCESS [[5:17]] =>   * $LIRCDPROCESS représente l'appareil lircd de /dev/ utilisé pour la transmission ; <|> lircdprocess
330 Mot inconnu : lircd [[40:45]] =>   * $LIRCDPROCESS représente l'appareil lircd de /dev/ utilisé pour la transmission ; <|> lircd
331 Mot inconnu : REMOTE [[5:11]] =>   * $REMOTE représente le nom de la télécommande, comme écrit dans le fichier /etc/lirc/lircd.conf ; <|> remote
332 Mot inconnu : BUTTON [[5:11]] =>   * $BUTTON représente le bouton que vous essayez de transmettre. <|> button
338 Mot inconnu : my_favourite_remote [[63:82]] => Ceci va transmettre le bouton de marche pour la télécommande « my_favourite_remote » en utilisant le processus lircd primaire.  <|> my_favourite_remote
338 Mot inconnu : lircd [[111:116]] => Ceci va transmettre le bouton de marche pour la télécommande « my_favourite_remote » en utilisant le processus lircd primaire.  <|> lircd
338 Espace(s) en fin de ligne à supprimer. [[126:127]] => Ceci va transmettre le bouton de marche pour la télécommande « my_favourite_remote » en utilisant le processus lircd primaire.  <|>   => suggestions : ['']

340 Mot inconnu : Generic [[19:26]] => ==== Mon récepteur Generic Mceusb ne marche pas ==== <|> generic
340 Mot inconnu : Mceusb [[27:33]] => ==== Mon récepteur Generic Mceusb ne marche pas ==== <|> mceusb

342 Écrivez “là” et non “la”. [[3:11]] => et celui la : [[http://mythtv-fr.tuxfamily.org/forums/viewtopic.php?id=1523&p=3 | Poste 2]]. <|> celui la => suggestions : ['celui-là']

348 Mot inconnu : lircrc [[16:22]] => Pour le fichier lircrc : voir  <|> lircrc
348 Espace(s) en fin de ligne à supprimer. [[29:30]] => Pour le fichier lircrc : voir  <|>   => suggestions : ['']
355 Espace(s) en fin de ligne à supprimer. [[9:10]] => Sources :  <|>   => suggestions : ['']
356 Mot inconnu : Roulleau [[20:28]] =>   * Merci à Gwendal Roulleau, http://mmed.roulleau.net/?p=7 <|> roulleau
361 Espace(s) en fin de ligne à supprimer. [[15:16]] => Documentation :  <|>   => suggestions : ['']
362 Mot inconnu : lircrc [[35:41]] =>   * Quelques aides pour le fichier lircrc : http://www.mythtv.org/docs/mythtv-HOWTO-8.html <|> lircrc
365 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[3:5]] =>   * .lircrc avec la notation devinput pour mythTV : http://www.mythtv.org/wiki/Soundgraph_iMON_Antec_Veris_Mythbuntu_10.10#Step_2_-_Button_Configuration <|>  . => suggestions : ['. ', '.']
365 Mot inconnu : lircrc [[5:11]] =>   * .lircrc avec la notation devinput pour mythTV : http://www.mythtv.org/wiki/Soundgraph_iMON_Antec_Veris_Mythbuntu_10.10#Step_2_-_Button_Configuration <|> lircrc
365 Mot inconnu : devinput [[29:37]] =>   * .lircrc avec la notation devinput pour mythTV : http://www.mythtv.org/wiki/Soundgraph_iMON_Antec_Veris_Mythbuntu_10.10#Step_2_-_Button_Configuration <|> devinput
365 Mot inconnu : mythTV [[43:49]] =>   * .lircrc avec la notation devinput pour mythTV : http://www.mythtv.org/wiki/Soundgraph_iMON_Antec_Veris_Mythbuntu_10.10#Step_2_-_Button_Configuration <|> mythtv
366 Mot inconnu : lirc [[44:48]] =>   * [[http://www.lirc.org/|site officiel de lirc]] <|> lirc
367 Mot inconnu : télécomande [[73:84]] =>   * [[http://lirc.sourceforge.net/remotes/|Fichier de configuration pour télécomande]] <|> télécomande

371 Accord de nombre erroné avec « intéressantes ». [[0:10]] => Discussion intéressantes :  <|> discussion => suggestions : ['Discussions']
371 Accord de nombre erroné avec « Discussion ». [[11:24]] => Discussion intéressantes :  <|> intéressantes => suggestions : ['intéressante']
371 Espace(s) en fin de ligne à supprimer. [[26:27]] => Discussion intéressantes :  <|>   => suggestions : ['']
376 Espace(s) en fin de ligne à supprimer. [[14:15]] => Contributeur :  <|>   => suggestions : ['']
377 Mot inconnu : Quent57 [[4:11]] =>   * Quent57 <|> quent57
