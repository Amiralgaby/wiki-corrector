1 Accord de nombre erroné : « lentilles » devrait être au singulier. => ====== Création d'une lentilles (lens) pour unity ====== | lentilles => suggestions : ['lentille']
1 Mot inconnu : lens => ====== Création d'une lentilles (lens) pour unity ====== | lens
1 Mot inconnu : unity => ====== Création d'une lentilles (lens) pour unity ====== | unity

2 Accord de nombre erroné : « pages » devrait être au singulier. => Il est conseillé de déjà consulter ce tutoriel, pour acquérir les bases, cette pages expliquera comment utiliser plus en profondeur la librairie singlet | pages => suggestions : ['page', 'pagée']

4 Mot inconnu : lense => L'idée d'ici est de créer une lense et un scope qui montrent toutes les possibilités à disposition par les lens et scope unity, et au passage de comprendre comment utiliser et comment fonctionne singlet. | lense
4 Mot inconnu : scope => L'idée d'ici est de créer une lense et un scope qui montrent toutes les possibilités à disposition par les lens et scope unity, et au passage de comprendre comment utiliser et comment fonctionne singlet. | scope
4 Mot inconnu : lens => L'idée d'ici est de créer une lense et un scope qui montrent toutes les possibilités à disposition par les lens et scope unity, et au passage de comprendre comment utiliser et comment fonctionne singlet. | lens
4 Mot inconnu : scope => L'idée d'ici est de créer une lense et un scope qui montrent toutes les possibilités à disposition par les lens et scope unity, et au passage de comprendre comment utiliser et comment fonctionne singlet. | scope
4 Mot inconnu : unity => L'idée d'ici est de créer une lense et un scope qui montrent toutes les possibilités à disposition par les lens et scope unity, et au passage de comprendre comment utiliser et comment fonctionne singlet. | unity

6 Mot inconnu : lenses => Le projet sera facilement compilable pour pouvoir réellement visualiser et tester toutes les possibilités de des lenses unity.  | lenses
6 Mot inconnu : unity => Le projet sera facilement compilable pour pouvoir réellement visualiser et tester toutes les possibilités de des lenses unity.  | unity
6 Espace(s) en fin de ligne à supprimer. => Le projet sera facilement compilable pour pouvoir réellement visualiser et tester toutes les possibilités de des lenses unity.  |   => suggestions : ['']

7 Incohérence. Ceci est un verbe à la 1ʳᵉ personne du singulier. Sujet (“je” ou “moi qui”) introuvable. => Ce tutoriel ne contiendra pas d'images qui risquerai de rapidement devenirs obsolètes. | risquerai => suggestions : ['risquera']

9 Mot inconnu : lens => Nous nous appuierons sur singlet, une librairie que permet de créer plus facilement des lens et scope unity. | lens
9 Mot inconnu : scope => Nous nous appuierons sur singlet, une librairie que permet de créer plus facilement des lens et scope unity. | scope
9 Mot inconnu : unity => Nous nous appuierons sur singlet, une librairie que permet de créer plus facilement des lens et scope unity. | unity

17 Mot inconnu : lens => Maintenant utilisons cette nouvelle lens :  | lens
17 Espace(s) en fin de ligne à supprimer. => Maintenant utilisons cette nouvelle lens :  |   => suggestions : ['']

23 Mot inconnu : Dash => Et aller voir dans le Tableau de Bord (Dash) | dash

27 Accord de genre erroné : « seul » est masculin. => Nous avons actuellement une seul catégorie d'affichée. | une => suggestions : ['un']
27 Accord de genre erroné : « une » est un déterminant féminin. => Nous avons actuellement une seul catégorie d'affichée. | seul => suggestions : ['seule']
27 Le verbe devrait être à l’infinitif. => Nous avons actuellement une seul catégorie d'affichée. | affichée => suggestions : ['afficher']

29 Espace(s) en fin de ligne à supprimer. => Ouvrir le fichier  |   => suggestions : ['']

30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tutorial/__init__.py |    => suggestions : ['']
30 Mot inconnu : tutorial =>   tutorial/__init__.py | tutorial
30 Mot inconnu : __init__ =>   tutorial/__init__.py | __init__
30 Mot inconnu : py =>   tutorial/__init__.py | py

32 Espace(s) en fin de ligne à supprimer. => On observe dans ce fichier  |   => suggestions : ['']

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   example_category = ListViewCategory("Examples", 'help') |    => suggestions : ['']
33 Mot inconnu : example_category =>   example_category = ListViewCategory("Examples", 'help') | example_category
33 Mot inconnu : ListViewCategory =>   example_category = ListViewCategory("Examples", 'help') | listviewcategory
33 Il manque un espace avant la parenthèse. =>   example_category = ListViewCategory("Examples", 'help') | ( => suggestions : [' (']
33 Guillemets typographiques ouvrants. =>   example_category = ListViewCategory("Examples", 'help') | " => suggestions : ['«\xa0', '“']
33 Mot inconnu : Examples =>   example_category = ListViewCategory("Examples", 'help') | examples
33 Guillemets typographiques fermants. =>   example_category = ListViewCategory("Examples", 'help') | " => suggestions : ['\xa0»', '”']
33 Guillemets typographiques ouvrants. =>   example_category = ListViewCategory("Examples", 'help') | ' => suggestions : ['“', '‘', '‹']
33 Mot inconnu : help =>   example_category = ListViewCategory("Examples", 'help') | help

38 Accord de nombre erroné : « type » devrait être au pluriel. => La doc officielle des type de catégories ((http://developer.ubuntu.com/api/ubuntu-12.04/python/Unity-5.0.html#Unity.CategoryRenderer)) nous propose 4 types :  | type => suggestions : ['types']
38 Espace(s) en fin de ligne à supprimer. => La doc officielle des type de catégories ((http://developer.ubuntu.com/api/ubuntu-12.04/python/Unity-5.0.html#Unity.CategoryRenderer)) nous propose 4 types :  |   => suggestions : ['']

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * VERTICAL_TILE |    => suggestions : ['']
39 Mot inconnu : VERTICAL_TILE =>   * VERTICAL_TILE | vertical_tile

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * HORIZONTAL_TILE |    => suggestions : ['']
40 Mot inconnu : HORIZONTAL_TILE =>   * HORIZONTAL_TILE | horizontal_tile

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * LIST_TILE |    => suggestions : ['']
41 Mot inconnu : LIST_TILE =>   * LIST_TILE | list_tile

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * FLOW |    => suggestions : ['']
42 Mot inconnu : FLOW =>   * FLOW | flow
43 Espace(s) en fin de ligne à supprimer. => Mais singlet que 2 :  |   => suggestions : ['']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * IconViewCategory  (VERTICAL_TILE)  |    => suggestions : ['']
44 Mot inconnu : IconViewCategory =>   * IconViewCategory  (VERTICAL_TILE)  | iconviewcategory
44 Espace(s) surnuméraire(s) à supprimer. =>   * IconViewCategory  (VERTICAL_TILE)  |    => suggestions : [' ']
44 Mot inconnu : VERTICAL_TILE =>   * IconViewCategory  (VERTICAL_TILE)  | vertical_tile
44 Espace(s) en fin de ligne à supprimer. =>   * IconViewCategory  (VERTICAL_TILE)  |   => suggestions : ['']

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ListViewCategory (HORIZONTAL_TILE) |    => suggestions : ['']
45 Mot inconnu : ListViewCategory =>   * ListViewCategory (HORIZONTAL_TILE) | listviewcategory
45 Mot inconnu : HORIZONTAL_TILE =>   * ListViewCategory (HORIZONTAL_TILE) | horizontal_tile
47 Espace(s) en fin de ligne à supprimer. => remplacer cette ligne par ce code, la méthode permet de peupler une catégorie :  |   => suggestions : ['']

71 Mot inconnu : search => Remplaçons le contenu de la méthode search par :  | search
71 Espace(s) en fin de ligne à supprimer. => Remplaçons le contenu de la méthode search par :  |   => suggestions : ['']

77 Mot inconnu : utf-8 => Et comme on parle français et qu'on a envie de pouvoir mettre des accents utf-8, ajouter un première ligne du fichier :  | utf-8
77 Accord de genre erroné : « première » est féminin. => Et comme on parle français et qu'on a envie de pouvoir mettre des accents utf-8, ajouter un première ligne du fichier :  | un => suggestions : ['une']
77 Accord de genre erroné : « un » est un déterminant masculin. => Et comme on parle français et qu'on a envie de pouvoir mettre des accents utf-8, ajouter un première ligne du fichier :  | première => suggestions : ['premier']
77 Espace(s) en fin de ligne à supprimer. => Et comme on parle français et qu'on a envie de pouvoir mettre des accents utf-8, ajouter un première ligne du fichier :  |   => suggestions : ['']

84 Mot inconnu : ok => Alors ok, ça fonctionne et on observe 2 types de catégorie, essayons quand même les autres (singlet nous le permet, et c'est tant mieux !)  !  | ok
84 Espace(s) en fin de ligne à supprimer. => Alors ok, ça fonctionne et on observe 2 types de catégorie, essayons quand même les autres (singlet nous le permet, et c'est tant mieux !)  !  |   => suggestions : ['']
95 Espace(s) en fin de ligne à supprimer. => Nous ajouterons aussi les 2 imports suivants :  |   => suggestions : ['']

103 Mot inconnu : ok => Bon, ok on comprend pourquoi il n'étaient pas inclus par défaut, je ne vois pas de différence avec IconViewCategory, mais ça valais le coup de tester. | ok
103 Accord avec “étaient”. => Bon, ok on comprend pourquoi il n'étaient pas inclus par défaut, je ne vois pas de différence avec IconViewCategory, mais ça valais le coup de tester. | il => suggestions : ['ils']
103 Conjugaison erronée. Accord avec “il”. Le verbe devrait être à la 3ᵉ personne du singulier. => Bon, ok on comprend pourquoi il n'étaient pas inclus par défaut, je ne vois pas de différence avec IconViewCategory, mais ça valais le coup de tester. | étaient => suggestions : ['était', 'étaye']
103 Mot inconnu : IconViewCategory => Bon, ok on comprend pourquoi il n'étaient pas inclus par défaut, je ne vois pas de différence avec IconViewCategory, mais ça valais le coup de tester. | iconviewcategory
103 Conjugaison erronée. Accord avec “ça”. Le verbe devrait être à la 3ᵉ personne du singulier. => Bon, ok on comprend pourquoi il n'étaient pas inclus par défaut, je ne vois pas de différence avec IconViewCategory, mais ça valais le coup de tester. | valais => suggestions : ['valait']

106 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => <note help>Comment fait singlet pour connaître les catégories a afficher | a => suggestions : ['à']
106 Incohérence probable avec “a” : “afficher” n’est pas un participe passé. => <note help>Comment fait singlet pour connaître les catégories a afficher | afficher => suggestions : ['affiché']

108 Accord de nombre erroné : « membre » devrait être au pluriel. => En effet, ce sont juste des membre de notre classe ! </note> | membre => suggestions : ['membres']

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

110 Il manque un espace. => Il utilise pour cela l'introspection ((singlet/lens.base.py)) :  | base => suggestions : [' base']
110 Espace(s) en fin de ligne à supprimer. => Il utilise pour cela l'introspection ((singlet/lens.base.py)) :  |   => suggestions : ['']

133 Conjugaison erronée. Accord avec “On”. Le verbe devrait être à la 3ᵉ personne du singulier. => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | vois => suggestions : ['voit']
133 Mot inconnu : elif => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | elif
133 Mot inconnu : isinstance => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | isinstance
133 Il manque un espace avant la parenthèse. => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | ( => suggestions : [' (']
133 Mot inconnu : Unity => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | unity
133 Mot inconnu : Category => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | category
133 Erreur d’accord probable avec “les”. => On vois ici que elif isinstance(a, Unity.Category): trouve toute les catégories de notre classe :) | toute => suggestions : ['toutes']

135 Il manque un trait d’union. => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | ci dessus => suggestions : ['ci-dessus']
135 Mot inconnu : class => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | class
135 Mot inconnu : object => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | object
135 Mot inconnu : categorie => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | categorie
135 Il manque un trait d’union. => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | ci dessus => suggestions : ['ci-dessus']
135 Accord avec la forme verbale “sont” : “accessible” devrait être au pluriel. => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | accessible => suggestions : ['accessibles']
135 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. => Le code ci dessus montre aussi pourquoi nous avons accès aux variables de class dans notre object (self.categorie), en réalité ces membres sont injectés dans l'objet (cf code ci dessus), et ce sont uniquement les id des catégories qui sont accessible a travers ces membres ! | a => suggestions : ['à']

138 Conjugaison erronée. Accord avec “on”. Le verbe devrait être à la 3ᵉ personne du singulier. => On voit aussi un autre détail, on peux définir une certaine variable category_order . | peux => suggestions : ['peut']
138 Mot inconnu : category_order => On voit aussi un autre détail, on peux définir une certaine variable category_order . | category_order

139 Conjugaison erronée. Accord avec “On”. Le verbe devrait être à la 3ᵉ personne du singulier. => On vas donc essayer de la définir pour afficher nos catégories dans le meme ordre que ci dessus, car ce n'est pas le cas. | vas => suggestions : ['va']
139 Mot inconnu : meme => On vas donc essayer de la définir pour afficher nos catégories dans le meme ordre que ci dessus, car ce n'est pas le cas. | meme
139 Il manque un trait d’union. => On vas donc essayer de la définir pour afficher nos catégories dans le meme ordre que ci dessus, car ce n'est pas le cas. | ci dessus => suggestions : ['ci-dessus']

141 Mot inconnu : Meta => Pour cela, ajouter dans la classe Meta :  | meta
141 Espace(s) en fin de ligne à supprimer. => Pour cela, ajouter dans la classe Meta :  |   => suggestions : ['']

145 Mot inconnu : lens => Réinstaller la lens, la lancer, on a bien nos catégories dans le bon ordre :) | lens

146 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

149 Conjugaison erronée. Accord avec “On”. Le verbe devrait être à la 3ᵉ personne du singulier. => On vois ci dessus que l'on peux aussi définir des filtres | vois => suggestions : ['voit']
149 Il manque un trait d’union. => On vois ci dessus que l'on peux aussi définir des filtres | ci dessus => suggestions : ['ci-dessus']
149 Conjugaison erronée. Accord avec “on”. Le verbe devrait être à la 3ᵉ personne du singulier. => On vois ci dessus que l'on peux aussi définir des filtres | peux => suggestions : ['peut']
151 Espace(s) en fin de ligne à supprimer. => Suivant la doc, voici l'arborescence des classes :  |   => suggestions : ['']

152 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Unity.Filter |    => suggestions : ['']
152 Mot inconnu : Unity =>   * Unity.Filter | unity
152 Mot inconnu : Filter =>   * Unity.Filter | filter

153 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Unity.RatingsFilter |      => suggestions : ['']
153 Mot inconnu : Unity =>     * Unity.RatingsFilter | unity
153 Mot inconnu : RatingsFilter =>     * Unity.RatingsFilter | ratingsfilter

154 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     * Unity.OptionsFilter |      => suggestions : ['']
154 Mot inconnu : Unity =>     * Unity.OptionsFilter | unity
154 Mot inconnu : OptionsFilter =>     * Unity.OptionsFilter | optionsfilter

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * Unity.RadioOptionFilter |        => suggestions : ['']
155 Mot inconnu : Unity =>       * Unity.RadioOptionFilter | unity
155 Mot inconnu : RadioOptionFilter =>       * Unity.RadioOptionFilter | radiooptionfilter

156 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * Unity.CheckOptionFilterCompact |        => suggestions : ['']
156 Mot inconnu : Unity =>       * Unity.CheckOptionFilterCompact | unity
156 Mot inconnu : CheckOptionFilterCompact =>       * Unity.CheckOptionFilterCompact | checkoptionfiltercompact

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * Unity.CheckOptionFilter |        => suggestions : ['']
157 Mot inconnu : Unity =>       * Unity.CheckOptionFilter | unity
157 Mot inconnu : CheckOptionFilter =>       * Unity.CheckOptionFilter | checkoptionfilter

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * Unity.MultiRangeFilter |        => suggestions : ['']
158 Mot inconnu : Unity =>       * Unity.MultiRangeFilter | unity
158 Mot inconnu : MultiRangeFilter =>       * Unity.MultiRangeFilter | multirangefilter
162 Espace(s) en fin de ligne à supprimer. => On ajoutera aussi l'import :  |   => suggestions : ['']

167 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => Alors, quelques éléments a savoir a propos des filtres, je n'ai aucune référence pour ces affirmations a pars mes propres essais : | a => suggestions : ['à']
167 Ce verbe devrait être un participe passé au masculin singulier. => Alors, quelques éléments a savoir a propos des filtres, je n'ai aucune référence pour ces affirmations a pars mes propres essais : | savoir => suggestions : ['su']
167 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. => Alors, quelques éléments a savoir a propos des filtres, je n'ai aucune référence pour ces affirmations a pars mes propres essais : | a => suggestions : ['à']

168 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On ne peux pas ajouter d'entré a un filtre après l'avoir ajouté en tant que filtre !  |    => suggestions : ['']
168 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On ne peux pas ajouter d'entré a un filtre après l'avoir ajouté en tant que filtre !  |  -  => suggestions : [' – ', ' — ', ' − ']
168 Conjugaison erronée. Accord avec “On”. Le verbe devrait être à la 3ᵉ personne du singulier. =>   - On ne peux pas ajouter d'entré a un filtre après l'avoir ajouté en tant que filtre !  | peux => suggestions : ['peut']
168 Le verbe devrait être à l’infinitif. =>   - On ne peux pas ajouter d'entré a un filtre après l'avoir ajouté en tant que filtre !  | entré => suggestions : ['entrer']
168 Espace(s) en fin de ligne à supprimer. =>   - On ne peux pas ajouter d'entré a un filtre après l'avoir ajouté en tant que filtre !  |   => suggestions : ['']

170 Mot inconnu : déja => C'est très important car cela signifie que si on ajoute ces filtres en tant que membre de la classe, il *faut* qu'ils aient déja tous leur éléments ! | déja
170 Accord de nombre erroné avec « éléments ». => C'est très important car cela signifie que si on ajoute ces filtres en tant que membre de la classe, il *faut* qu'ils aient déja tous leur éléments ! | leur => suggestions : ['leurs']
170 Accord de nombre erroné : « éléments » devrait être au singulier. => C'est très important car cela signifie que si on ajoute ces filtres en tant que membre de la classe, il *faut* qu'ils aient déja tous leur éléments ! | éléments => suggestions : ['élément']

172 Confusion. => Donc je propose d'ajouter cette fonction *en dessus* de la classe :  | en dessus => suggestions : ['en dessous', 'au-dessus']
172 Espace(s) en fin de ligne à supprimer. => Donc je propose d'ajouter cette fonction *en dessus* de la classe :  |   => suggestions : ['']
180 Espace(s) en fin de ligne à supprimer. => ensuite, ajouter en dessous des catégories non filtres :  |   => suggestions : ['']

209 Mot inconnu : Ok => Ok, on peux observer les différence :) | ok
209 Conjugaison erronée. Accord avec “on”. Le verbe devrait être à la 3ᵉ personne du singulier. => Ok, on peux observer les différence :) | peux => suggestions : ['peut']
209 Accord de nombre erroné : « différence » devrait être au pluriel. => Ok, on peux observer les différence :) | différence => suggestions : ['différences']

211 Mot inconnu : pres => Pour récupérer les valeurs des filtres et pour en ajouter a posteriori, singlet n'est pas encore pres, nous allons donc devoir attendre un peu. | pres
