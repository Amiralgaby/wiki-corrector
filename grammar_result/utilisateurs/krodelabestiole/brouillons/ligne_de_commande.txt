17 Espace(s) surnuméraire(s) à supprimer. => Le titre est un peu compliqué, mais le principe est simple : un fichier peut être référencé de manière **relative**, par rapport au répertoire courant, ou de manière **absolue** par rapport à la racine.  Le premier caractère de la référence permet d'effectuer la distinction : les références absolues commencent toujours par le caractère **/**, alors que les références relatives commencent par tout autre caractère valide pour un nom de fichier.\\ |    => suggestions : [' ']

18 Mot inconnu : MonFichier => Ainsi, les deux commandes ci-dessous sont équivalentes et peuvent être utilisées l'une comme l'autre pour renommer le fichier MonFichier localisé dans le répertoire personnel de l'utilisateur (/home/user) : | monfichier

20 Mot inconnu : mv => user@mulet:~$ mv MonFichier NouveauNomDuFichier | mv
20 Mot inconnu : MonFichier => user@mulet:~$ mv MonFichier NouveauNomDuFichier | monfichier
20 Mot inconnu : NouveauNomDuFichier => user@mulet:~$ mv MonFichier NouveauNomDuFichier | nouveaunomdufichier

23 Mot inconnu : srv => user@mulet:/srv $ mv /home/user/MonFichier /home/user/NouveauNomDuFichier | srv
23 Mot inconnu : mv => user@mulet:/srv $ mv /home/user/MonFichier /home/user/NouveauNomDuFichier | mv
25 Mot inconnu : srv => Dans le premier exemple, l'invite système (user@mulet:~$) montre que le répertoire courant est le répertoire personnel de l'utilisateur ("~", caractère spécial équivalent /home/user) ; la référence au fichier à renommer est exprimée de manière relative par rapport à ce répertoire. Dans le second exemple, l'invite système montre que le répertoire courant est /srv ; pour désigner le même fichier, il faut donc utiliser une référence absolue : /home/user/MonFichier (qui aurait tout aussi bien pu être exprimée par ~/MonFichier). | srv
25 Mot inconnu : MonFichier => Dans le premier exemple, l'invite système (user@mulet:~$) montre que le répertoire courant est le répertoire personnel de l'utilisateur ("~", caractère spécial équivalent /home/user) ; la référence au fichier à renommer est exprimée de manière relative par rapport à ce répertoire. Dans le second exemple, l'invite système montre que le répertoire courant est /srv ; pour désigner le même fichier, il faut donc utiliser une référence absolue : /home/user/MonFichier (qui aurait tout aussi bien pu être exprimée par ~/MonFichier). | monfichier

27 Mot inconnu : srv => user@mulet:/srv $ mv /home/user/MonFichier '/home/user/Nouveau NomDuFichier' | srv
27 Mot inconnu : mv => user@mulet:/srv $ mv /home/user/MonFichier '/home/user/Nouveau NomDuFichier' | mv
27 Mot inconnu : NomDuFichier => user@mulet:/srv $ mv /home/user/MonFichier '/home/user/Nouveau NomDuFichier' | nomdufichier
27 Guillemets typographiques fermants. => user@mulet:/srv $ mv /home/user/MonFichier '/home/user/Nouveau NomDuFichier' | ' => suggestions : ['”', '’', '›']

32 Espace(s) surnuméraire(s) à supprimer. => Les caractères spéciaux **~**,  **.** et **..** correspondent respectivement au répertoire personnel de l'utilisateur, au répertoire courant et au répertoire parent. Ils permettent tous les trois de simplifier l'expression de références absolues. \\ |    => suggestions : [' ']
32 Typographie : un ou trois points ? => Les caractères spéciaux **~**,  **.** et **..** correspondent respectivement au répertoire personnel de l'utilisateur, au répertoire courant et au répertoire parent. Ils permettent tous les trois de simplifier l'expression de références absolues. \\ | .. => suggestions : ['…', '.']

33 Mot inconnu : UnRep => Ainsi pour déplacer le fichier **/UnRep/MonFichier** respectivement dans le répertoire de l'utilisateur (/home/user), le répertoire courant (/rep1/sousrep2) ou le sous-répertoire toto du répertoire parent (/rep1/toto), on pourra utiliser les commandes ci-dessous : | unrep
33 Mot inconnu : MonFichier => Ainsi pour déplacer le fichier **/UnRep/MonFichier** respectivement dans le répertoire de l'utilisateur (/home/user), le répertoire courant (/rep1/sousrep2) ou le sous-répertoire toto du répertoire parent (/rep1/toto), on pourra utiliser les commandes ci-dessous : | monfichier
33 Mot inconnu : rep1 => Ainsi pour déplacer le fichier **/UnRep/MonFichier** respectivement dans le répertoire de l'utilisateur (/home/user), le répertoire courant (/rep1/sousrep2) ou le sous-répertoire toto du répertoire parent (/rep1/toto), on pourra utiliser les commandes ci-dessous : | rep1
33 Mot inconnu : sousrep2 => Ainsi pour déplacer le fichier **/UnRep/MonFichier** respectivement dans le répertoire de l'utilisateur (/home/user), le répertoire courant (/rep1/sousrep2) ou le sous-répertoire toto du répertoire parent (/rep1/toto), on pourra utiliser les commandes ci-dessous : | sousrep2
33 Mot inconnu : rep1 => Ainsi pour déplacer le fichier **/UnRep/MonFichier** respectivement dans le répertoire de l'utilisateur (/home/user), le répertoire courant (/rep1/sousrep2) ou le sous-répertoire toto du répertoire parent (/rep1/toto), on pourra utiliser les commandes ci-dessous : | rep1

35 Mot inconnu : rep1 => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ~ | rep1
35 Mot inconnu : sousrep2 => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ~ | sousrep2
35 Mot inconnu : mv => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ~ | mv
35 Mot inconnu : UnRep => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ~ | unrep
35 Mot inconnu : MonFichier => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ~ | monfichier

38 Mot inconnu : rep1 => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier . | rep1
38 Mot inconnu : sousrep2 => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier . | sousrep2
38 Mot inconnu : mv => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier . | mv
38 Mot inconnu : UnRep => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier . | unrep
38 Mot inconnu : MonFichier => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier . | monfichier

41 Mot inconnu : rep1 => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ../toto/ | rep1
41 Mot inconnu : sousrep2 => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ../toto/ | sousrep2
41 Mot inconnu : mv => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ../toto/ | mv
41 Mot inconnu : UnRep => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ../toto/ | unrep
41 Mot inconnu : MonFichier => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ../toto/ | monfichier
41 Typographie : un ou trois points ? => user@mulet:/rep1/sousrep2 $ mv /UnRep/MonFichier ../toto/ | .. => suggestions : ['…', '.']

62 Mot inconnu : ls => ==== ls ==== | ls

80 Mot inconnu : dir => Il existe également une commande **dir** quasi identique à la commande **ls**. Elle s'utilise de la même façon, avec les mêmes options, et les pages man (manuel) les 2 commandes sont d'ailleurs identiques. | dir
80 Mot inconnu : ls => Il existe également une commande **dir** quasi identique à la commande **ls**. Elle s'utilise de la même façon, avec les mêmes options, et les pages man (manuel) les 2 commandes sont d'ailleurs identiques. | ls

81 Mot inconnu : dir => Seul l'affichage par défaut de la sortie est différent avec **dir** :  | dir
81 Espace(s) en fin de ligne à supprimer. => Seul l'affichage par défaut de la sortie est différent avec **dir** :  |   => suggestions : ['']

84 Mot inconnu : ls => La commande << **ls -C -b** >> produira une sortie identique à la commande **dir** employée sans options. | ls
84 Il manque un espace à côté du tiret. => La commande << **ls -C -b** >> produira une sortie identique à la commande **dir** employée sans options. |  - => suggestions : [' – ', ' — ']
84 Mot inconnu : dir => La commande << **ls -C -b** >> produira une sortie identique à la commande **dir** employée sans options. | dir

98 Mot inconnu : mv => ==== mv ==== | mv

112 Mot inconnu : cp => ==== cp ==== | cp

129 Mot inconnu : rm => ==== rm ==== | rm

145 Mot inconnu : mkdir => ==== mkdir ==== | mkdir

156 Mot inconnu : rmdir => ==== rmdir ==== | rmdir

182 Mot inconnu : pwd => ==== pwd ==== | pwd

202 Mot inconnu : find => ==== find ==== | find

243 Mot inconnu : grep => ==== grep ==== | grep

260 Mot inconnu : locate => ==== locate ==== | locate

262 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Son utilisation - très simple - est détaillée ici : |  -  => suggestions : [' – ', ' — ', ' − ']
262 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Son utilisation - très simple - est détaillée ici : |  -  => suggestions : [' – ', ' — ', ' − ']

265 Mot inconnu : cat => ==== cat ==== | cat

289 Mot inconnu : less => ==== less ==== | less

306 Accord de genre erroné entre « informations » et « utilisateur ». => La commande **id** affiche les informations utilisateur et de groupe pour un utilisateur spécifié, ou si aucun utilisateur n'est spécifié, elle affiche les informations sur l'utilisateur courant | utilisateur => suggestions : ['utilisatrices']

314 Mot inconnu : chmod => ==== chmod ==== | chmod

341 Mot inconnu : chown => ==== chown ==== | chown

352 Mot inconnu : chgrp => ==== chgrp ==== | chgrp

364 Mot inconnu : free => ==== free ==== | free

380 Mot inconnu : mount => ==== mount ==== | mount

410 Mot inconnu : umount => ==== umount ==== | umount

425 Mot inconnu : sudo => ==== sudo ==== | sudo

453 Mot inconnu : grep => <note tip>pensez à utiliser avec grep pour limiter la liste : ps -aux | grep tuxpaint ne vous retournera que les processus contenant tuxpaint </note> | grep
453 Il manque un espace à côté du tiret. => <note tip>pensez à utiliser avec grep pour limiter la liste : ps -aux | grep tuxpaint ne vous retournera que les processus contenant tuxpaint </note> |  - => suggestions : [' – ', ' — ']
453 Mot inconnu : grep => <note tip>pensez à utiliser avec grep pour limiter la liste : ps -aux | grep tuxpaint ne vous retournera que les processus contenant tuxpaint </note> | grep
453 Mot inconnu : tuxpaint => <note tip>pensez à utiliser avec grep pour limiter la liste : ps -aux | grep tuxpaint ne vous retournera que les processus contenant tuxpaint </note> | tuxpaint
453 Mot inconnu : tuxpaint => <note tip>pensez à utiliser avec grep pour limiter la liste : ps -aux | grep tuxpaint ne vous retournera que les processus contenant tuxpaint </note> | tuxpaint

455 Mot inconnu : kill => ==== kill / killall ==== | kill

476 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

477 Mot inconnu : shutdown => ==== shutdown ==== | shutdown

494 Mot inconnu : shutdown => <note tip>Il semblerait que shutdown now ne fonctionne plus, ni sur Ubuntu, ni sur OpenBSD (du moins sur les miens). Cependant, la commande **shutdown -P now** fonctionne.</note> | shutdown
494 Mot inconnu : now => <note tip>Il semblerait que shutdown now ne fonctionne plus, ni sur Ubuntu, ni sur OpenBSD (du moins sur les miens). Cependant, la commande **shutdown -P now** fonctionne.</note> | now
494 Mot inconnu : shutdown => <note tip>Il semblerait que shutdown now ne fonctionne plus, ni sur Ubuntu, ni sur OpenBSD (du moins sur les miens). Cependant, la commande **shutdown -P now** fonctionne.</note> | shutdown
494 Il manque un espace à côté du tiret. => <note tip>Il semblerait que shutdown now ne fonctionne plus, ni sur Ubuntu, ni sur OpenBSD (du moins sur les miens). Cependant, la commande **shutdown -P now** fonctionne.</note> |  - => suggestions : [' – ', ' — ']
494 Mot inconnu : now => <note tip>Il semblerait que shutdown now ne fonctionne plus, ni sur Ubuntu, ni sur OpenBSD (du moins sur les miens). Cependant, la commande **shutdown -P now** fonctionne.</note> | now

496 Guillemets typographiques ouvrants. => <note tip>En effet, il suffit de remplacer "now" par "0" soit 0 minutes et le tour est joué.</note> | " => suggestions : ['«\xa0', '“']
496 Mot inconnu : now => <note tip>En effet, il suffit de remplacer "now" par "0" soit 0 minutes et le tour est joué.</note> | now
496 Guillemets typographiques fermants. => <note tip>En effet, il suffit de remplacer "now" par "0" soit 0 minutes et le tour est joué.</note> | " => suggestions : ['\xa0»', '”']
496 Guillemets typographiques ouvrants. => <note tip>En effet, il suffit de remplacer "now" par "0" soit 0 minutes et le tour est joué.</note> | " => suggestions : ['«\xa0', '“']
496 Guillemets typographiques fermants. => <note tip>En effet, il suffit de remplacer "now" par "0" soit 0 minutes et le tour est joué.</note> | " => suggestions : ['\xa0»', '”']

498 Mot inconnu : passwd => ==== passwd ==== | passwd

507 Mot inconnu : groups => ==== groups ==== | groups

515 Mot inconnu : adduser => ==== adduser ==== | adduser

534 Mot inconnu : deluser => ==== deluser ==== | deluser

546 Mot inconnu : usermod => ==== usermod ==== | usermod

558 Mot inconnu : df => ==== df ==== | df

573 Mot inconnu : fdisk => ==== fdisk ==== | fdisk

600 Mot inconnu : uptime => ==== uptime ==== | uptime

607 Mot inconnu : lspci => ==== lspci ==== | lspci

616 Mot inconnu : lsusb => ==== lsusb ==== | lsusb

625 Mot inconnu : uname => ==== uname ==== | uname

640 Mot inconnu : apt-get => ==== apt-get ==== | apt-get

671 Mot inconnu : apt-cache => ==== apt-cache ==== | apt-cache
703 Mot inconnu : MerguezGrillé => Pour accéder aux merguez de Linux la commande : /MerguezGrillé est très utilisée | merguezgrillé

717 Espace(s) en fin de ligne à supprimer. => ==== Liens ====  |   => suggestions : ['']
