1 Espace(s) surnuméraire(s) à supprimer. => script pour aider à la résolution de problème d'imprimante ou de scanner  amis qui utilise yad <|>    => suggestions : [' ']
1 Mot inconnu : yad => script pour aider à la résolution de problème d'imprimante ou de scanner  amis qui utilise yad <|> yad

6 Guillemets typographiques ouvrants. => version="version 2020-03-08" #utilisation de yad  <|> " => suggestions : ['«\xa0', '“']
6 Guillemets typographiques fermants. => version="version 2020-03-08" #utilisation de yad  <|> " => suggestions : ['\xa0»', '”']
6 Élision de l’article devant un mot commençant par une voyelle. => version="version 2020-03-08" #utilisation de yad  <|> de  => suggestions : ['d’']
6 Mot inconnu : yad => version="version 2020-03-08" #utilisation de yad  <|> yad
8 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" <|> a => suggestions : ['À']
8 Mot inconnu : PROBLEME => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" <|> probleme
8 Guillemets typographiques fermants. => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" <|> " => suggestions : ['\xa0»', '”']

10 Mot inconnu : echo => echo $titre <|> echo
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` <|> y- => suggestions : [' Y-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` <|> m- => suggestions : [' m-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` <|> d => suggestions : [' d']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` <|> h- => suggestions : [' H-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` <|> m- => suggestions : [' M-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` <|> s => suggestions : [' S']

14 Mot inconnu : fich => fich="ImpScan-$num.txt" <|> fich
14 Guillemets typographiques ouvrants. => fich="ImpScan-$num.txt" <|> " => suggestions : ['«\xa0', '“']
14 Mot inconnu : ImpScan => fich="ImpScan-$num.txt" <|> impscan
14 Mot inconnu : txt => fich="ImpScan-$num.txt" <|> txt
14 Guillemets typographiques fermants. => fich="ImpScan-$num.txt" <|> " => suggestions : ['\xa0»', '”']

16 Mot inconnu : echo => echo "" >$fich                   #vide le fichier par précaution <|> echo
16 Mot inconnu : fich => echo "" >$fich                   #vide le fichier par précaution <|> fich
16 Espace(s) surnuméraire(s) à supprimer. => echo "" >$fich                   #vide le fichier par précaution <|>                     => suggestions : [' ']

18 Mot inconnu : sep1 => sep1="[code]" <|> sep1

20 Mot inconnu : sep2 => sep2="[/code]" <|> sep2

22 Mot inconnu : function => function l-c {                   # c'est ce qui lance la commande <|> function

30 Mot inconnu : function => function resultat { <|> function
30 Mot inconnu : resultat => function resultat { <|> resultat

32 Mot inconnu : echo => echo "fichier enregistré le $num" >> $fich <|> echo
32 Guillemets typographiques ouvrants. => echo "fichier enregistré le $num" >> $fich <|> " => suggestions : ['«\xa0', '“']
32 Guillemets typographiques fermants. => echo "fichier enregistré le $num" >> $fich <|> " => suggestions : ['\xa0»', '”']
32 Mot inconnu : fich => echo "fichier enregistré le $num" >> $fich <|> fich

34 Mot inconnu : echo => echo " <|> echo
34 Guillemets fermants. => echo " <|>  " => suggestions : ['\xa0»', '”']

46 Mot inconnu : function => function imprimante { <|> function

54 Mot inconnu : function => function scanner { <|> function

64 Mot inconnu : function => function information { <|> function

71 Mot inconnu : function => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan <|> function
71 Mot inconnu : ImpScan => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan <|> impscan
71 Mot inconnu : Imp => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan <|> imp
71 Accord de nombre erroné avec « 2 » : « Scan » devrait être au pluriel. => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan <|> scan => suggestions : ['Scans']

103 Mot inconnu : function => function choix { <|> function

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  # en 2ème ligne il faut lire tiret tiret texte="$0 et non 1.- texte="$0 <|>   => suggestions : ['']
104 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… =>  # en 2ème ligne il faut lire tiret tiret texte="$0 et non 1.- texte="$0 <|> 2ème => suggestions : ['2ᵉ']
104 Doublon. =>  # en 2ème ligne il faut lire tiret tiret texte="$0 et non 1.- texte="$0 <|> tiret tiret => suggestions : ['tiret']

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  res=$(yad   --title="$titre" --center \ <|>   => suggestions : ['']
106 Mot inconnu : res =>  res=$(yad   --title="$titre" --center \ <|> res
106 Mot inconnu : yad =>  res=$(yad   --title="$titre" --center \ <|> yad
106 Espace(s) surnuméraire(s) à supprimer. =>  res=$(yad   --title="$titre" --center \ <|>     => suggestions : [' ']
106 Mot inconnu : title =>  res=$(yad   --title="$titre" --center \ <|> title
106 Guillemets typographiques fermants. =>  res=$(yad   --title="$titre" --center \ <|> " => suggestions : ['\xa0»', '”']

131 Mot inconnu : ImpScan => ImpScan "$imp" "$scan" <|> impscan
131 Mot inconnu : imp => ImpScan "$imp" "$scan" <|> imp
131 Guillemets typographiques fermants. => ImpScan "$imp" "$scan" <|> " => suggestions : ['\xa0»', '”']
131 Guillemets typographiques fermants. => ImpScan "$imp" "$scan" <|> " => suggestions : ['\xa0»', '”']

133 Pas d’espace après ce signe. => if [[ -e "$fich" ]]  <|> [  => suggestions : ['[']
133 Mot inconnu : fich => if [[ -e "$fich" ]]  <|> fich
133 Guillemets typographiques fermants. => if [[ -e "$fich" ]]  <|> " => suggestions : ['\xa0»', '”']
133 Pas d’espace avant ce signe. => if [[ -e "$fich" ]]  <|>  ] => suggestions : [']']

137 Incohérence : espace et tabulation. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> 	  => suggestions : [' ', '\t']
137 Guillemets typographiques ouvrants. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> " => suggestions : ['«\xa0', '“']
137 Guillemets typographiques fermants. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> " => suggestions : ['\xa0»', '”']
137 Pas d’espace avant ce signe. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|>  ) => suggestions : [')']
137 Mot inconnu : xdg-open => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> xdg-open
137 Guillemets fermants. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|>  " => suggestions : ['\xa0»', '”']
137 Mot inconnu : fich => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> fich
137 Guillemets typographiques fermants. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> " => suggestions : ['\xa0»', '”']
137 Incohérence : espace et tabulation. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|>  	 => suggestions : [' ', '\t']
137 Une de ces ponctuations est superflue. => 	    "OUI"   )	xdg-open "./$fich" 	;; <|> ;; => suggestions : [';', ';']

138 Incohérence : espace et tabulation. => 	    "NON"	)	exit 63       	;; <|> 	  => suggestions : [' ', '\t']
138 Guillemets typographiques ouvrants. => 	    "NON"	)	exit 63       	;; <|> " => suggestions : ['«\xa0', '“']
138 Guillemets typographiques fermants. => 	    "NON"	)	exit 63       	;; <|> " => suggestions : ['\xa0»', '”']
138 Espace(s) surnuméraire(s) à supprimer. => 	    "NON"	)	exit 63       	;; <|>         => suggestions : [' ']
138 Incohérence : espace et tabulation. => 	    "NON"	)	exit 63       	;; <|>  	 => suggestions : [' ', '\t']
138 Une de ces ponctuations est superflue. => 	    "NON"	)	exit 63       	;; <|> ;; => suggestions : [';', ';']

139 Mot inconnu : esac => 	esac <|> esac
