1 Espace(s) surnuméraire(s) à supprimer. => script pour aider à la résolution de problème d'imprimante ou de scanner  amis qui utilise yad |    => suggestions : [' ']
1 Mot inconnu : yad => script pour aider à la résolution de problème d'imprimante ou de scanner  amis qui utilise yad | yad
2 Espace(s) en fin de ligne à supprimer. => il manque plein de retour chariot !!!!!!  |   => suggestions : ['']

6 Guillemets typographiques ouvrants. => version="version 2020-03-08" #utilisation de yad  | " => suggestions : ['«\xa0', '“']
6 Guillemets typographiques fermants. => version="version 2020-03-08" #utilisation de yad  | " => suggestions : ['\xa0»', '”']
6 Élision de l’article devant un mot commençant par une voyelle. => version="version 2020-03-08" #utilisation de yad  | de  => suggestions : ['d’']
6 Mot inconnu : yad => version="version 2020-03-08" #utilisation de yad  | yad
6 Espace(s) en fin de ligne à supprimer. => version="version 2020-03-08" #utilisation de yad  |   => suggestions : ['']

8 Mot inconnu : BASH => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" | bash
8 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" | a => suggestions : ['À']
8 Mot inconnu : PROBLEME => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" | probleme
8 Guillemets typographiques fermants. => titre=" BASH A UTILISER EN CAS DE PROBLEME D'IMPRIMANTE OU DE SCANNER" | " => suggestions : ['\xa0»', '”']

10 Mot inconnu : echo => echo $titre | echo
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` | y- => suggestions : [' Y-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` | m- => suggestions : [' m-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` | d => suggestions : [' d']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` | h- => suggestions : [' H-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` | m- => suggestions : [' M-']
12 Il manque un espace. => num=`date +%Y-%m-%d:%H-%M-%S` | s => suggestions : [' S']

14 Mot inconnu : fich => fich="ImpScan-$num.txt" | fich
14 Guillemets typographiques ouvrants. => fich="ImpScan-$num.txt" | " => suggestions : ['«\xa0', '“']
14 Mot inconnu : ImpScan => fich="ImpScan-$num.txt" | impscan
14 Mot inconnu : txt => fich="ImpScan-$num.txt" | txt
14 Guillemets typographiques fermants. => fich="ImpScan-$num.txt" | " => suggestions : ['\xa0»', '”']

16 Mot inconnu : echo => echo "" >$fich                   #vide le fichier par précaution | echo
16 Mot inconnu : fich => echo "" >$fich                   #vide le fichier par précaution | fich
16 Espace(s) surnuméraire(s) à supprimer. => echo "" >$fich                   #vide le fichier par précaution |                     => suggestions : [' ']

18 Mot inconnu : sep1 => sep1="[code]" | sep1

20 Mot inconnu : sep2 => sep2="[/code]" | sep2

22 Mot inconnu : function => function l-c {                   # c'est ce qui lance la commande | function

23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo $sep1                    >> "$fich" |      => suggestions : ['']
23 Mot inconnu : echo =>     echo $sep1                    >> "$fich" | echo
23 Mot inconnu : sep1 =>     echo $sep1                    >> "$fich" | sep1
23 Espace(s) surnuméraire(s) à supprimer. =>     echo $sep1                    >> "$fich" |                      => suggestions : [' ']
23 Mot inconnu : fich =>     echo $sep1                    >> "$fich" | fich
23 Guillemets typographiques fermants. =>     echo $sep1                    >> "$fich" | " => suggestions : ['\xa0»', '”']

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo $1                       >> "$fich" |      => suggestions : ['']
24 Mot inconnu : echo =>     echo $1                       >> "$fich" | echo
24 Espace(s) surnuméraire(s) à supprimer. =>     echo $1                       >> "$fich" |                         => suggestions : [' ']
24 Mot inconnu : fich =>     echo $1                       >> "$fich" | fich
24 Guillemets typographiques fermants. =>     echo $1                       >> "$fich" | " => suggestions : ['\xa0»', '”']

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     eval "$1"                     >> "$fich" |      => suggestions : ['']
25 Mot inconnu : eval =>     eval "$1"                     >> "$fich" | eval
25 Guillemets typographiques fermants. =>     eval "$1"                     >> "$fich" | " => suggestions : ['\xa0»', '”']
25 Mot inconnu : fich =>     eval "$1"                     >> "$fich" | fich
25 Guillemets typographiques fermants. =>     eval "$1"                     >> "$fich" | " => suggestions : ['\xa0»', '”']

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo $sep2                    >> "$fich" |      => suggestions : ['']
26 Mot inconnu : echo =>     echo $sep2                    >> "$fich" | echo
26 Mot inconnu : sep2 =>     echo $sep2                    >> "$fich" | sep2
26 Espace(s) surnuméraire(s) à supprimer. =>     echo $sep2                    >> "$fich" |                      => suggestions : [' ']
26 Mot inconnu : fich =>     echo $sep2                    >> "$fich" | fich
26 Guillemets typographiques fermants. =>     echo $sep2                    >> "$fich" | " => suggestions : ['\xa0»', '”']

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo                          >> "$fich" |      => suggestions : ['']
27 Mot inconnu : echo =>     echo                          >> "$fich" | echo
27 Espace(s) surnuméraire(s) à supprimer. =>     echo                          >> "$fich" |                            => suggestions : [' ']
27 Mot inconnu : fich =>     echo                          >> "$fich" | fich
27 Guillemets typographiques fermants. =>     echo                          >> "$fich" | " => suggestions : ['\xa0»', '”']

28 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    } |     => suggestions : ['']

30 Mot inconnu : function => function resultat { | function
30 Mot inconnu : resultat => function resultat { | resultat

32 Mot inconnu : echo => echo "fichier enregistré le $num" >> $fich | echo
32 Guillemets typographiques ouvrants. => echo "fichier enregistré le $num" >> $fich | " => suggestions : ['«\xa0', '“']
32 Guillemets typographiques fermants. => echo "fichier enregistré le $num" >> $fich | " => suggestions : ['\xa0»', '”']
32 Mot inconnu : fich => echo "fichier enregistré le $num" >> $fich | fich

34 Mot inconnu : echo => echo " | echo
34 Guillemets fermants. => echo " |  " => suggestions : ['\xa0»', '”']

36 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            Vous pouvez récupérer le fichier  |             => suggestions : ['']
36 Espace(s) en fin de ligne à supprimer. =>            Vous pouvez récupérer le fichier  |   => suggestions : ['']

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       $fich |        => suggestions : ['']
37 Mot inconnu : fich =>       $fich | fich

38 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            pour le transmettre au forum  |             => suggestions : ['']
38 Espace(s) en fin de ligne à supprimer. =>            pour le transmettre au forum  |   => suggestions : ['']

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            tel quel (par copier-coller) |             => suggestions : ['']

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            car les balises sont incluses |             => suggestions : ['']

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            méthode : quand le fichier est ouvert |             => suggestions : ['']

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             Ctrl A   puis Ctrl C  |              => suggestions : ['']
42 Espace(s) surnuméraire(s) à supprimer. =>             Ctrl A   puis Ctrl C  |     => suggestions : [' ']
42 Espace(s) en fin de ligne à supprimer. =>             Ctrl A   puis Ctrl C  |   => suggestions : ['']

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             et dans un post du forum Ctrl V " |              => suggestions : ['']
43 Guillemets fermants. =>             et dans un post du forum Ctrl V " |  " => suggestions : ['\xa0»', '”']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    } |     => suggestions : ['']

46 Mot inconnu : function => function imprimante { | function

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  |      => suggestions : ['']
47 Mot inconnu : cmd =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | cmd
47 Guillemets typographiques ouvrants. =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | " => suggestions : ['«\xa0', '“']
47 Mot inconnu : dpkg =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | dpkg
47 Il manque un espace à côté du tiret. =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  |  - => suggestions : [' – ', ' — ']
47 Mot inconnu : grep =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | grep
47 Mot inconnu : cups =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | cups
47 Guillemets typographiques fermants. =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
47 Mot inconnu : cmd =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | cmd
47 Guillemets typographiques fermants. =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
47 Espace(s) en fin de ligne à supprimer. =>     cmd="dpkg -l | grep cups"                   ; l-c "$cmd"  |   => suggestions : ['']

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="lpstat -t"                             ; l-c "$cmd"  |      => suggestions : ['']
48 Mot inconnu : cmd =>     cmd="lpstat -t"                             ; l-c "$cmd"  | cmd
48 Guillemets typographiques ouvrants. =>     cmd="lpstat -t"                             ; l-c "$cmd"  | " => suggestions : ['«\xa0', '“']
48 Mot inconnu : lpstat =>     cmd="lpstat -t"                             ; l-c "$cmd"  | lpstat
48 Guillemets typographiques fermants. =>     cmd="lpstat -t"                             ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
48 Mot inconnu : cmd =>     cmd="lpstat -t"                             ; l-c "$cmd"  | cmd
48 Guillemets typographiques fermants. =>     cmd="lpstat -t"                             ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
48 Espace(s) en fin de ligne à supprimer. =>     cmd="lpstat -t"                             ; l-c "$cmd"  |   => suggestions : ['']

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  |      => suggestions : ['']
49 Mot inconnu : cmd =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  | cmd
49 Il manque un espace à côté du tiret. =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  |  - => suggestions : [' – ', ' — ']
49 Guillemets typographiques fermants. =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
49 Mot inconnu : cmd =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  | cmd
49 Guillemets typographiques fermants. =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
49 Espace(s) en fin de ligne à supprimer. =>     cmd="/usr/sbin/lpinfo -v"                   ; l-c "$cmd"  |   => suggestions : ['']

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  |      => suggestions : ['']
50 Mot inconnu : cmd =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  | cmd
50 Guillemets typographiques ouvrants. =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  | " => suggestions : ['«\xa0', '“']
50 Mot inconnu : cat =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  | cat
50 Mot inconnu : cmd =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  | cmd
50 Guillemets typographiques fermants. =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
50 Espace(s) en fin de ligne à supprimer. =>     cmd="cat /var/log/cups/error_log"           ; l-c "$cmd"  |   => suggestions : ['']

51 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  |      => suggestions : ['']
51 Mot inconnu : cmd =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | cmd
51 Guillemets typographiques ouvrants. =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | " => suggestions : ['«\xa0', '“']
51 Mot inconnu : dpkg =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | dpkg
51 Il manque un espace à côté du tiret. =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  |  - => suggestions : [' – ', ' — ']
51 Mot inconnu : grep =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | grep
51 Il manque un espace à côté du tiret. =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  |  - => suggestions : [' – ', ' — ']
51 Mot inconnu : ii =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | ii
51 Guillemets typographiques fermants. =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
51 Mot inconnu : cmd =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | cmd
51 Guillemets typographiques fermants. =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
51 Espace(s) en fin de ligne à supprimer. =>     cmd="dpkg -l | grep -v ^ii"                 ; l-c "$cmd"  |   => suggestions : ['']

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     } |      => suggestions : ['']

54 Mot inconnu : function => function scanner { | function

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="echo SCANNER"                          ; l-c "$cmd" |      => suggestions : ['']
55 Mot inconnu : cmd =>     cmd="echo SCANNER"                          ; l-c "$cmd" | cmd
55 Guillemets typographiques ouvrants. =>     cmd="echo SCANNER"                          ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
55 Mot inconnu : echo =>     cmd="echo SCANNER"                          ; l-c "$cmd" | echo
55 Guillemets typographiques fermants. =>     cmd="echo SCANNER"                          ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
55 Mot inconnu : cmd =>     cmd="echo SCANNER"                          ; l-c "$cmd" | cmd
55 Guillemets typographiques fermants. =>     cmd="echo SCANNER"                          ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" |      => suggestions : ['']
56 Mot inconnu : cmd =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | cmd
56 Guillemets typographiques ouvrants. =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
56 Mot inconnu : dpkg =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | dpkg
56 Il manque un espace à côté du tiret. =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" |  - => suggestions : [' – ', ' — ']
56 Mot inconnu : grep =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | grep
56 Mot inconnu : sane =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | sane
56 Guillemets typographiques fermants. =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
56 Mot inconnu : cmd =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | cmd
56 Guillemets typographiques fermants. =>     cmd="dpkg -l | grep sane"                   ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

57 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" |      => suggestions : ['']
57 Mot inconnu : cmd =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | cmd
57 Guillemets typographiques ouvrants. =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
57 Mot inconnu : sudo =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | sudo
57 Mot inconnu : sane-find-scanner =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | sane-find-scanner
57 Il manque un espace à côté du tiret. =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" |  - => suggestions : [' – ', ' — ']
57 Guillemets typographiques fermants. =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
57 Mot inconnu : cmd =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | cmd
57 Guillemets typographiques fermants. =>     cmd="sudo sane-find-scanner -q"             ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="scanimage -L"                          ; l-c "$cmd"  |      => suggestions : ['']
58 Mot inconnu : cmd =>     cmd="scanimage -L"                          ; l-c "$cmd"  | cmd
58 Guillemets typographiques ouvrants. =>     cmd="scanimage -L"                          ; l-c "$cmd"  | " => suggestions : ['«\xa0', '“']
58 Mot inconnu : scanimage =>     cmd="scanimage -L"                          ; l-c "$cmd"  | scanimage
58 Il manque un espace à côté du tiret. =>     cmd="scanimage -L"                          ; l-c "$cmd"  |  - => suggestions : [' – ', ' — ']
58 Guillemets typographiques fermants. =>     cmd="scanimage -L"                          ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
58 Mot inconnu : cmd =>     cmd="scanimage -L"                          ; l-c "$cmd"  | cmd
58 Guillemets typographiques fermants. =>     cmd="scanimage -L"                          ; l-c "$cmd"  | " => suggestions : ['\xa0»', '”']
58 Espace(s) en fin de ligne à supprimer. =>     cmd="scanimage -L"                          ; l-c "$cmd"  |   => suggestions : ['']

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" |      => suggestions : ['']
59 Mot inconnu : cmd =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" | cmd
59 Guillemets typographiques ouvrants. =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
59 Mot inconnu : ls =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" | ls
59 Guillemets isolés. =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" |  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']
59 Mot inconnu : cmd =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" | cmd
59 Guillemets typographiques fermants. =>     cmd="ls /etc/sane.d/ "                      ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="cat /etc/sane.d/dll.conf"              ; l-c "$cmd" |      => suggestions : ['']
60 Mot inconnu : cmd =>     cmd="cat /etc/sane.d/dll.conf"              ; l-c "$cmd" | cmd
60 Guillemets typographiques ouvrants. =>     cmd="cat /etc/sane.d/dll.conf"              ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
60 Mot inconnu : cat =>     cmd="cat /etc/sane.d/dll.conf"              ; l-c "$cmd" | cat
60 Mot inconnu : cmd =>     cmd="cat /etc/sane.d/dll.conf"              ; l-c "$cmd" | cmd
60 Guillemets typographiques fermants. =>     cmd="cat /etc/sane.d/dll.conf"              ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" |      => suggestions : ['']
61 Mot inconnu : cmd =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | cmd
61 Guillemets typographiques ouvrants. =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
61 Mot inconnu : ls =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | ls
61 Espace(s) surnuméraire(s) à supprimer. =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" |    => suggestions : [' ']
61 Mot inconnu : grep =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | grep
61 Mot inconnu : libsane =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | libsane
61 Guillemets typographiques fermants. =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
61 Mot inconnu : cmd =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | cmd
61 Guillemets typographiques fermants. =>     cmd="ls  /lib/udev/rules.d | grep libsane"  ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     } |      => suggestions : ['']

64 Mot inconnu : function => function information { | function

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" |      => suggestions : ['']
65 Mot inconnu : cmd =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" | cmd
65 Guillemets typographiques ouvrants. =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
65 Mot inconnu : cat =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" | cat
65 Guillemets typographiques fermants. =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
65 Mot inconnu : cmd =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" | cmd
65 Guillemets typographiques fermants. =>     cmd="cat /etc/lsb-release"                  ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="uname -i"                              ; l-c "$cmd" |      => suggestions : ['']
66 Mot inconnu : cmd =>     cmd="uname -i"                              ; l-c "$cmd" | cmd
66 Guillemets typographiques ouvrants. =>     cmd="uname -i"                              ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
66 Mot inconnu : uname =>     cmd="uname -i"                              ; l-c "$cmd" | uname
66 Il manque un espace à côté du tiret. =>     cmd="uname -i"                              ; l-c "$cmd" |  - => suggestions : [' – ', ' — ']
66 Guillemets typographiques fermants. =>     cmd="uname -i"                              ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
66 Mot inconnu : cmd =>     cmd="uname -i"                              ; l-c "$cmd" | cmd
66 Guillemets typographiques fermants. =>     cmd="uname -i"                              ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="groups"                                ; l-c "$cmd" |      => suggestions : ['']
67 Mot inconnu : cmd =>     cmd="groups"                                ; l-c "$cmd" | cmd
67 Guillemets typographiques ouvrants. =>     cmd="groups"                                ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
67 Mot inconnu : groups =>     cmd="groups"                                ; l-c "$cmd" | groups
67 Guillemets typographiques fermants. =>     cmd="groups"                                ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
67 Mot inconnu : cmd =>     cmd="groups"                                ; l-c "$cmd" | cmd
67 Guillemets typographiques fermants. =>     cmd="groups"                                ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cmd="lsusb"                                 ; l-c "$cmd" |      => suggestions : ['']
68 Mot inconnu : cmd =>     cmd="lsusb"                                 ; l-c "$cmd" | cmd
68 Guillemets typographiques ouvrants. =>     cmd="lsusb"                                 ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
68 Mot inconnu : lsusb =>     cmd="lsusb"                                 ; l-c "$cmd" | lsusb
68 Guillemets typographiques fermants. =>     cmd="lsusb"                                 ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
68 Mot inconnu : cmd =>     cmd="lsusb"                                 ; l-c "$cmd" | cmd
68 Guillemets typographiques fermants. =>     cmd="lsusb"                                 ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   } |    => suggestions : ['']

71 Mot inconnu : function => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan | function
71 Mot inconnu : ImpScan => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan | impscan
71 Mot inconnu : Imp => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan | imp
71 Accord de nombre erroné avec « 2 » : « Scan » devrait être au pluriel. => function ImpScan { # reçoit deux paramètres : $1 Imp et $2 Scan | scan => suggestions : ['Scans']

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre |                     => suggestions : ['']
72 Il manque un espace. =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | brother => suggestions : [' BROTHER']
72 Mot inconnu : BROTHER =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | brother
72 Il manque un espace. =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | epson => suggestions : [' EPSON']
72 Mot inconnu : EPSON =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | epson
72 Il manque un espace. =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | canon => suggestions : [' CANON']
72 Il manque un espace. =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | hp => suggestions : [' HP']
72 Mot inconnu : HP =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | hp
72 Il manque un espace. =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | samsung => suggestions : [' SAMSUNG']
72 Il manque un espace. =>                    # $1 NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre | autre => suggestions : [' Autre']

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                    # $2 NON!OUI |                     => suggestions : ['']
73 Il manque un espace. =>                    # $2 NON!OUI | oui => suggestions : [' OUI']

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      case "$1" in |       => suggestions : ['']
74 Guillemets typographiques fermants. =>      case "$1" in | " => suggestions : ['\xa0»', '”']

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "NON"     )     :                                                   ;; |              => suggestions : ['']
75 Guillemets typographiques ouvrants. =>             "NON"     )     :                                                   ;; | " => suggestions : ['«\xa0', '“']
75 Guillemets typographiques fermants. =>             "NON"     )     :                                                   ;; | " => suggestions : ['\xa0»', '”']
75 Pas d’espace avant ce signe. =>             "NON"     )     :                                                   ;; |  ) => suggestions : [')']
75 Espace(s) surnuméraire(s) à supprimer. =>             "NON"     )     :                                                   ;; |                                                     => suggestions : [' ']
75 Une de ces ponctuations est superflue. =>             "NON"     )     :                                                   ;; | ;; => suggestions : [';', ';']

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" |              => suggestions : ['']
76 Guillemets typographiques ouvrants. =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
76 Mot inconnu : BROTHER =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | brother
76 Guillemets typographiques fermants. =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
76 Pas d’espace avant ce signe. =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" |  ) => suggestions : [')']
76 Mot inconnu : cmd =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | cmd
76 Guillemets typographiques ouvrants. =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
76 Mot inconnu : echo =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | echo
76 Guillemets typographiques ouvrants. =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | ' => suggestions : ['“', '‘', '‹']
76 Mot inconnu : BROTHER =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | brother
76 Mot inconnu : cmd =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | cmd
76 Guillemets typographiques fermants. =>             "BROTHER" )     cmd="echo 'IMPRIMANTE BROTHER'"    ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; |                              => suggestions : ['']
77 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | cmd
77 Guillemets typographiques ouvrants. =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | " => suggestions : ['«\xa0', '“']
77 Mot inconnu : dpkg =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | dpkg
77 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; |  - => suggestions : [' – ', ' — ']
77 Mot inconnu : grep =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | grep
77 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; |  - => suggestions : [' – ', ' — ']
77 Mot inconnu : brother =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | brother
77 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
77 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | cmd
77 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
77 Une de ces ponctuations est superflue. =>                             cmd="dpkg -l | grep -i brother"    ; l-c "$cmd"     ;; | ;; => suggestions : [';', ';']

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" |              => suggestions : ['']
78 Guillemets typographiques ouvrants. =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
78 Mot inconnu : EPSON =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | epson
78 Guillemets typographiques fermants. =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
78 Pas d’espace avant ce signe. =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" |  ) => suggestions : [')']
78 Mot inconnu : cmd =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | cmd
78 Guillemets typographiques ouvrants. =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
78 Mot inconnu : echo =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | echo
78 Guillemets typographiques ouvrants. =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | ' => suggestions : ['“', '‘', '‹']
78 Mot inconnu : EPSON =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | epson
78 Mot inconnu : cmd =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | cmd
78 Guillemets typographiques fermants. =>             "EPSON"   )     cmd="echo 'IMPRIMANTE EPSON'"      ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; |                              => suggestions : ['']
79 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | cmd
79 Guillemets typographiques ouvrants. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | " => suggestions : ['«\xa0', '“']
79 Mot inconnu : dpkg =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | dpkg
79 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; |  - => suggestions : [' – ', ' — ']
79 Mot inconnu : grep =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | grep
79 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; |  - => suggestions : [' – ', ' — ']
79 Mot inconnu : epson =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | epson
79 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | " => suggestions : ['\xa0»', '”']
79 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | cmd
79 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | " => suggestions : ['\xa0»', '”']
79 Incohérence : espace et tabulation. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; |  	 => suggestions : [' ', '\t']
79 Une de ces ponctuations est superflue. =>                             cmd="dpkg -l | grep -i epson"      ; l-c "$cmd" 	;; | ;; => suggestions : [';', ';']

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" |              => suggestions : ['']
80 Guillemets typographiques ouvrants. =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
80 Guillemets typographiques fermants. =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
80 Pas d’espace avant ce signe. =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" |  ) => suggestions : [')']
80 Mot inconnu : cmd =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | cmd
80 Guillemets typographiques ouvrants. =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
80 Mot inconnu : echo =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | echo
80 Guillemets typographiques ouvrants. =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | ' => suggestions : ['“', '‘', '‹']
80 Mot inconnu : cmd =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | cmd
80 Guillemets typographiques fermants. =>             "CANON"   )     cmd="echo 'IMPRIMANTE CANON'"      ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" |                              => suggestions : ['']
81 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | cmd
81 Guillemets typographiques ouvrants. =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
81 Mot inconnu : dpkg =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | dpkg
81 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" |  - => suggestions : [' – ', ' — ']
81 Mot inconnu : grep =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | grep
81 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" |  - => suggestions : [' – ', ' — ']
81 Mot inconnu : cnijfilter =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | cnijfilter
81 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
81 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | cmd
81 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i cnijfilter" ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; |                              => suggestions : ['']
82 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | cmd
82 Guillemets typographiques ouvrants. =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | " => suggestions : ['«\xa0', '“']
82 Mot inconnu : dpkg =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | dpkg
82 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; |  - => suggestions : [' – ', ' — ']
82 Mot inconnu : grep =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | grep
82 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; |  - => suggestions : [' – ', ' — ']
82 Mot inconnu : cndrvcups =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | cndrvcups
82 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
82 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | cmd
82 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
82 Une de ces ponctuations est superflue. =>                             cmd="dpkg -l | grep -i cndrvcups"  ; l-c "$cmd"     ;; | ;; => suggestions : [';', ';']

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" |              => suggestions : ['']
83 Guillemets typographiques ouvrants. =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : HP =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | hp
83 Guillemets typographiques fermants. =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
83 Pas d’espace avant ce signe. =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" |  ) => suggestions : [')']
83 Mot inconnu : cmd =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | cmd
83 Guillemets typographiques ouvrants. =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
83 Mot inconnu : echo =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | echo
83 Guillemets typographiques ouvrants. =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | ' => suggestions : ['“', '‘', '‹']
83 Mot inconnu : HP =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | hp
83 Mot inconnu : cmd =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | cmd
83 Guillemets typographiques fermants. =>             "HP"      )     cmd="echo 'IMPRIMANTE HP'"         ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       |                              => suggestions : ['']
84 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | cmd
84 Guillemets typographiques ouvrants. =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | " => suggestions : ['«\xa0', '“']
84 Mot inconnu : dpkg =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | dpkg
84 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       |  - => suggestions : [' – ', ' — ']
84 Mot inconnu : grep =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | grep
84 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       |  - => suggestions : [' – ', ' — ']
84 Mot inconnu : hplip =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | hplip
84 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | " => suggestions : ['\xa0»', '”']
84 Mot inconnu : cmd =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | cmd
84 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       | " => suggestions : ['\xa0»', '”']
84 Espace(s) en fin de ligne à supprimer. =>                             cmd="dpkg -l | grep -i hplip"      ; l-c "$cmd"       |        => suggestions : ['']

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; |                              => suggestions : ['']
85 Mot inconnu : cmd =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | cmd
85 Guillemets typographiques ouvrants. =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | " => suggestions : ['«\xa0', '“']
85 Mot inconnu : hp-check =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | hp-check
85 Guillemets typographiques fermants. =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
85 Mot inconnu : cmd =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | cmd
85 Guillemets typographiques fermants. =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
85 Une de ces ponctuations est superflue. =>                             cmd="hp-check"                     ; l-c "$cmd"     ;; | ;; => suggestions : [';', ';']

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" |              => suggestions : ['']
86 Guillemets typographiques ouvrants. =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
86 Guillemets typographiques fermants. =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
86 Pas d’espace avant ce signe. =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" |  ) => suggestions : [')']
86 Mot inconnu : cmd =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | cmd
86 Guillemets typographiques ouvrants. =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
86 Mot inconnu : echo =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | echo
86 Guillemets typographiques ouvrants. =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | ' => suggestions : ['“', '‘', '‹']
86 Mot inconnu : cmd =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | cmd
86 Guillemets typographiques fermants. =>             "SAMSUNG" )     cmd="echo 'IMPRIMANTE Samsung'"    ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" |                              => suggestions : ['']
87 Mot inconnu : cmd =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | cmd
87 Guillemets typographiques ouvrants. =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | " => suggestions : ['«\xa0', '“']
87 Mot inconnu : dpkg =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | dpkg
87 Il manque un espace à côté du tiret. =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" |  - => suggestions : [' – ', ' — ']
87 Mot inconnu : grep =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | grep
87 Mot inconnu : suld =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | suld
87 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']
87 Mot inconnu : cmd =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | cmd
87 Guillemets typographiques fermants. =>                             cmd="dpkg -l | grep suld"          ; l-c "$cmd" | " => suggestions : ['\xa0»', '”']

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             cmd="find /etc/apt -name '*.list' / |                              => suggestions : ['']
88 Mot inconnu : cmd =>                             cmd="find /etc/apt -name '*.list' / | cmd
88 Guillemets typographiques ouvrants. =>                             cmd="find /etc/apt -name '*.list' / | " => suggestions : ['«\xa0', '“']
88 Mot inconnu : find =>                             cmd="find /etc/apt -name '*.list' / | find
88 Il manque un espace à côté du tiret. =>                             cmd="find /etc/apt -name '*.list' / |  - => suggestions : [' – ', ' — ']
88 Mot inconnu : name =>                             cmd="find /etc/apt -name '*.list' / | name
88 Mot inconnu : list =>                             cmd="find /etc/apt -name '*.list' / | list
88 Guillemets typographiques fermants. =>                             cmd="find /etc/apt -name '*.list' / | ' => suggestions : ['”', '’', '›']

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" |                              => suggestions : ['']
89 Mot inconnu : exec =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" | exec
89 Mot inconnu : bash =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" | bash
89 Il manque un espace à côté du tiret. =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" |  - => suggestions : [' – ', ' — ']
89 Guillemets typographiques ouvrants. =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" | ' => suggestions : ['“', '‘', '‹']
89 Mot inconnu : echo =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" | echo
89 Il manque un espace à côté du tiret. =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" |  - => suggestions : [' – ', ' — ']
89 Il manque un espace à côté du tiret. =>                             -exec bash -c 'echo -e \"\n\$1\n\"; nl -ba \"\$1\"' _ '{}' \;" |  - => suggestions : [' – ', ' — ']

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                             l-c "$cmd"                                          ;; |                              => suggestions : ['']
90 Mot inconnu : cmd =>                             l-c "$cmd"                                          ;; | cmd
90 Guillemets typographiques fermants. =>                             l-c "$cmd"                                          ;; | " => suggestions : ['\xa0»', '”']
90 Une de ces ponctuations est superflue. =>                             l-c "$cmd"                                          ;; | ;; => suggestions : [';', ';']

91 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; |              => suggestions : ['']
91 Guillemets typographiques ouvrants. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | " => suggestions : ['«\xa0', '“']
91 Guillemets typographiques fermants. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
91 Pas d’espace avant ce signe. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; |  ) => suggestions : [')']
91 Mot inconnu : cmd =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | cmd
91 Guillemets typographiques ouvrants. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | " => suggestions : ['«\xa0', '“']
91 Mot inconnu : echo =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | echo
91 Guillemets typographiques ouvrants. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | ' => suggestions : ['“', '‘', '‹']
91 Mot inconnu : cmd =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | cmd
91 Guillemets typographiques fermants. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | " => suggestions : ['\xa0»', '”']
91 Une de ces ponctuations est superflue. =>             "Autre"   )     cmd="echo 'IMPRIMANTE Autre'"      ; l-c "$cmd"     ;; | ;; => suggestions : [';', ';']

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      esac |       => suggestions : ['']
92 Mot inconnu : esac =>      esac | esac

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      case "$1" in |       => suggestions : ['']
93 Guillemets typographiques fermants. =>      case "$1" in | " => suggestions : ['\xa0»', '”']

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            "NON" ) :          ;; |             => suggestions : ['']
94 Guillemets typographiques ouvrants. =>            "NON" ) :          ;; | " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. =>            "NON" ) :          ;; | " => suggestions : ['\xa0»', '”']
94 Pas d’espace avant ce signe. =>            "NON" ) :          ;; |  ) => suggestions : [')']
94 Espace(s) surnuméraire(s) à supprimer. =>            "NON" ) :          ;; |            => suggestions : [' ']
94 Une de ces ponctuations est superflue. =>            "NON" ) :          ;; | ;; => suggestions : [';', ';']

95 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>            *     ) imprimante ;; |             => suggestions : ['']
95 Pas d’espace avant ce signe. =>            *     ) imprimante ;; |  ) => suggestions : [')']
95 Une de ces ponctuations est superflue. =>            *     ) imprimante ;; | ;; => suggestions : [';', ';']

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      esac |       => suggestions : ['']
96 Mot inconnu : esac =>      esac | esac

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      case "$2" in |       => suggestions : ['']
97 Guillemets typographiques fermants. =>      case "$2" in | " => suggestions : ['\xa0»', '”']

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; |              => suggestions : ['']
98 Guillemets typographiques ouvrants. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | " => suggestions : ['«\xa0', '“']
98 Guillemets typographiques fermants. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | " => suggestions : ['\xa0»', '”']
98 Pas d’espace avant ce signe. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; |  ) => suggestions : [')']
98 Pas d’espace après ce signe. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | [  => suggestions : ['[']
98 Guillemets typographiques fermants. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | " => suggestions : ['\xa0»', '”']
98 Guillemets typographiques ouvrants. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | " => suggestions : ['«\xa0', '“']
98 Guillemets typographiques fermants. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | " => suggestions : ['\xa0»', '”']
98 Pas d’espace avant ce signe. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; |  ] => suggestions : [']']
98 Mot inconnu : then =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | then
98 Mot inconnu : rm =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | rm
98 Mot inconnu : fich =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | fich
98 Espace(s) surnuméraire(s) à supprimer. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; |         => suggestions : [' ']
98 Une de ces ponctuations est superflue. =>             "NON"     )     if [[ "$1" = "NON" ]] ; then rm $fich ; fi       ;; | ;; => suggestions : [';', ';']

99 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             "OUI"     )     scanner ;; |              => suggestions : ['']
99 Guillemets typographiques ouvrants. =>             "OUI"     )     scanner ;; | " => suggestions : ['«\xa0', '“']
99 Guillemets typographiques fermants. =>             "OUI"     )     scanner ;; | " => suggestions : ['\xa0»', '”']
99 Pas d’espace avant ce signe. =>             "OUI"     )     scanner ;; |  ) => suggestions : [')']
99 Une de ces ponctuations est superflue. =>             "OUI"     )     scanner ;; | ;; => suggestions : [';', ';']

100 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      esac      |       => suggestions : ['']
100 Mot inconnu : esac =>      esac      | esac
100 Espace(s) en fin de ligne à supprimer. =>      esac      |       => suggestions : ['']

101 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>      } |       => suggestions : ['']

103 Mot inconnu : function => function choix { | function

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  # en 2ème ligne il faut lire tiret tiret texte="$0 et non 1.- texte="$0 |   => suggestions : ['']
104 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… =>  # en 2ème ligne il faut lire tiret tiret texte="$0 et non 1.- texte="$0 | 2ème => suggestions : ['2ᵉ']
104 Doublon. =>  # en 2ème ligne il faut lire tiret tiret texte="$0 et non 1.- texte="$0 | tiret tiret => suggestions : ['tiret']

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  res=$(yad   --title="$titre" --center \ |   => suggestions : ['']
106 Mot inconnu : res =>  res=$(yad   --title="$titre" --center \ | res
106 Mot inconnu : yad =>  res=$(yad   --title="$titre" --center \ | yad
106 Espace(s) surnuméraire(s) à supprimer. =>  res=$(yad   --title="$titre" --center \ |     => suggestions : [' ']
106 Mot inconnu : title =>  res=$(yad   --title="$titre" --center \ | title
106 Guillemets typographiques fermants. =>  res=$(yad   --title="$titre" --center \ | " => suggestions : ['\xa0»', '”']

107 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --text="$0 |          => suggestions : ['']
107 Mot inconnu : text =>         --text="$0 | text

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                 IMPRIMANTE : Si l'Imprimante est concernée ou non ,  choisissez sa marque si oui |                  => suggestions : ['']
108 Pas d’espace avant une virgule. =>                 IMPRIMANTE : Si l'Imprimante est concernée ou non ,  choisissez sa marque si oui |  , => suggestions : [',']
108 Espace(s) surnuméraire(s) à supprimer. =>                 IMPRIMANTE : Si l'Imprimante est concernée ou non ,  choisissez sa marque si oui |    => suggestions : [' ']

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                 SCANNER    : Indiquez s'il est concerné (oui/non) (si oui le mot de passe administrateur sera demandé)  |                  => suggestions : ['']
109 Espace(s) surnuméraire(s) à supprimer. =>                 SCANNER    : Indiquez s'il est concerné (oui/non) (si oui le mot de passe administrateur sera demandé)  |      => suggestions : [' ']
109 Espace(s) en fin de ligne à supprimer. =>                 SCANNER    : Indiquez s'il est concerné (oui/non) (si oui le mot de passe administrateur sera demandé)  |   => suggestions : ['']

111 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                 et si vous voulez visualiser le fichier résultat laissez l'option visualisation sur OUI |                  => suggestions : ['']

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                 ce qui permettra de transmettre plus facilement  le résultat sur le forum |                  => suggestions : ['']
112 Espace(s) surnuméraire(s) à supprimer. =>                 ce qui permettra de transmettre plus facilement  le résultat sur le forum |    => suggestions : [' ']

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                                                       "                             \ |                                                        => suggestions : ['']
113 Guillemets isolés. =>                                                       "                             \ |  "  => suggestions : [' «\xa0', '\xa0» ', ' “', '” ']

114 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --form                                                                      \ |          => suggestions : ['']
114 Mot inconnu : form =>         --form                                                                      \ | form
114 Espace(s) surnuméraire(s) à supprimer. =>         --form                                                                      \ |                                                                        => suggestions : [' ']

115 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ |          => suggestions : ['']
115 Mot inconnu : field =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | field
115 Guillemets typographiques ouvrants. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | " => suggestions : ['«\xa0', '“']
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | cb => suggestions : [' CB']
115 Mot inconnu : CB =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | cb
115 Guillemets typographiques fermants. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | " => suggestions : ['\xa0»', '”']
115 Guillemets typographiques ouvrants. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | ' => suggestions : ['“', '‘', '‹']
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | brother => suggestions : [' BROTHER']
115 Mot inconnu : BROTHER =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | brother
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | epson => suggestions : [' EPSON']
115 Mot inconnu : EPSON =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | epson
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | canon => suggestions : [' CANON']
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | hp => suggestions : [' HP']
115 Mot inconnu : HP =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | hp
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | samsung => suggestions : [' SAMSUNG']
115 Il manque un espace. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | autre => suggestions : [' Autre']
115 Guillemets typographiques fermants. =>         --field="Imprimante:CB"        'NON!BROTHER!EPSON!CANON!HP!SAMSUNG!Autre'   \ | ' => suggestions : ['”', '’', '›']

116 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --field="Scanner:CB"           'NON!OUI'                                    \ |          => suggestions : ['']
116 Mot inconnu : field =>         --field="Scanner:CB"           'NON!OUI'                                    \ | field
116 Guillemets typographiques ouvrants. =>         --field="Scanner:CB"           'NON!OUI'                                    \ | " => suggestions : ['«\xa0', '“']
116 Il manque un espace. =>         --field="Scanner:CB"           'NON!OUI'                                    \ | cb => suggestions : [' CB']
116 Mot inconnu : CB =>         --field="Scanner:CB"           'NON!OUI'                                    \ | cb
116 Guillemets typographiques fermants. =>         --field="Scanner:CB"           'NON!OUI'                                    \ | " => suggestions : ['\xa0»', '”']
116 Guillemets typographiques ouvrants. =>         --field="Scanner:CB"           'NON!OUI'                                    \ | ' => suggestions : ['“', '‘', '‹']
116 Il manque un espace. =>         --field="Scanner:CB"           'NON!OUI'                                    \ | oui => suggestions : [' OUI']
116 Guillemets typographiques fermants. =>         --field="Scanner:CB"           'NON!OUI'                                    \ | ' => suggestions : ['”', '’', '›']

117 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ |          => suggestions : ['']
117 Mot inconnu : field =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | field
117 Guillemets typographiques ouvrants. =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | " => suggestions : ['«\xa0', '“']
117 Mot inconnu : CB =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | cb
117 Guillemets typographiques fermants. =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | " => suggestions : ['\xa0»', '”']
117 Guillemets typographiques ouvrants. =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | ' => suggestions : ['“', '‘', '‹']
117 Il manque un espace. =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | non => suggestions : [' NON']
117 Guillemets typographiques fermants. =>         --field="Visualisation du résultat :CB"   'OUI!NON'                         \ | ' => suggestions : ['”', '’', '›']

118 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --button="gtk-close:1"                                                      \ |          => suggestions : ['']
118 Mot inconnu : button =>         --button="gtk-close:1"                                                      \ | button
118 Guillemets typographiques ouvrants. =>         --button="gtk-close:1"                                                      \ | " => suggestions : ['«\xa0', '“']
118 Mot inconnu : gtk-close =>         --button="gtk-close:1"                                                      \ | gtk-close
118 Il manque un espace. =>         --button="gtk-close:1"                                                      \ | 1 => suggestions : [' 1']
118 Guillemets typographiques fermants. =>         --button="gtk-close:1"                                                      \ | " => suggestions : ['\xa0»', '”']

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         --button="gtk-ok:0"                                                         \      |          => suggestions : ['']
119 Mot inconnu : button =>         --button="gtk-ok:0"                                                         \      | button
119 Guillemets typographiques ouvrants. =>         --button="gtk-ok:0"                                                         \      | " => suggestions : ['«\xa0', '“']
119 Mot inconnu : gtk-ok =>         --button="gtk-ok:0"                                                         \      | gtk-ok
119 Il manque un espace. =>         --button="gtk-ok:0"                                                         \      | 0 => suggestions : [' 0']
119 Guillemets typographiques fermants. =>         --button="gtk-ok:0"                                                         \      | " => suggestions : ['\xa0»', '”']
119 Espace(s) en fin de ligne à supprimer. =>         --button="gtk-ok:0"                                                         \      |       => suggestions : ['']

120 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         ) |          => suggestions : ['']
120 Pas d’espace avant ce signe. =>         ) |  ) => suggestions : [')']

121 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   [[ $? -eq 1 ]] && exit 0  # sort si on clic sur fermer |    => suggestions : ['']
121 Pas d’espace après ce signe. =>   [[ $? -eq 1 ]] && exit 0  # sort si on clic sur fermer | [  => suggestions : ['[']
121 Mot inconnu : eq =>   [[ $? -eq 1 ]] && exit 0  # sort si on clic sur fermer | eq
121 Pas d’espace avant ce signe. =>   [[ $? -eq 1 ]] && exit 0  # sort si on clic sur fermer |  ] => suggestions : [']']
121 Espace(s) surnuméraire(s) à supprimer. =>   [[ $? -eq 1 ]] && exit 0  # sort si on clic sur fermer |    => suggestions : [' ']
121 Incohérence avec “on” : “clic” devrait être un verbe, un pronom objet, un adverbe de négation, etc. =>   [[ $? -eq 1 ]] && exit 0  # sort si on clic sur fermer | clic => suggestions : ['clique']

122 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    imp=$(awk -F'|' '{print $1}' <<< $res) |     => suggestions : ['']
122 Mot inconnu : imp =>    imp=$(awk -F'|' '{print $1}' <<< $res) | imp
122 Mot inconnu : awk =>    imp=$(awk -F'|' '{print $1}' <<< $res) | awk
122 Il manque un espace à côté du tiret. =>    imp=$(awk -F'|' '{print $1}' <<< $res) |  - => suggestions : [' – ', ' — ']
122 Mot inconnu : print =>    imp=$(awk -F'|' '{print $1}' <<< $res) | print
122 Mot inconnu : res =>    imp=$(awk -F'|' '{print $1}' <<< $res) | res

123 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   scan=$(awk -F'|' '{print $2}' <<< $res) |    => suggestions : ['']
123 Mot inconnu : awk =>   scan=$(awk -F'|' '{print $2}' <<< $res) | awk
123 Il manque un espace à côté du tiret. =>   scan=$(awk -F'|' '{print $2}' <<< $res) |  - => suggestions : [' – ', ' — ']
123 Mot inconnu : print =>   scan=$(awk -F'|' '{print $2}' <<< $res) | print
123 Mot inconnu : res =>   scan=$(awk -F'|' '{print $2}' <<< $res) | res

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   visu=$(awk -F'|' '{print $3}' <<< $res) |    => suggestions : ['']
124 Mot inconnu : awk =>   visu=$(awk -F'|' '{print $3}' <<< $res) | awk
124 Il manque un espace à côté du tiret. =>   visu=$(awk -F'|' '{print $3}' <<< $res) |  - => suggestions : [' – ', ' — ']
124 Mot inconnu : print =>   visu=$(awk -F'|' '{print $3}' <<< $res) | print
124 Mot inconnu : res =>   visu=$(awk -F'|' '{print $3}' <<< $res) | res

131 Mot inconnu : ImpScan => ImpScan "$imp" "$scan" | impscan
131 Mot inconnu : imp => ImpScan "$imp" "$scan" | imp
131 Guillemets typographiques fermants. => ImpScan "$imp" "$scan" | " => suggestions : ['\xa0»', '”']
131 Guillemets typographiques fermants. => ImpScan "$imp" "$scan" | " => suggestions : ['\xa0»', '”']

133 Pas d’espace après ce signe. => if [[ -e "$fich" ]]  | [  => suggestions : ['[']
133 Mot inconnu : fich => if [[ -e "$fich" ]]  | fich
133 Guillemets typographiques fermants. => if [[ -e "$fich" ]]  | " => suggestions : ['\xa0»', '”']
133 Pas d’espace avant ce signe. => if [[ -e "$fich" ]]  |  ] => suggestions : [']']
133 Espace(s) en fin de ligne à supprimer. => if [[ -e "$fich" ]]  |   => suggestions : ['']

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   then |    => suggestions : ['']
134 Mot inconnu : then =>   then | then

135 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     resultat |      => suggestions : ['']
135 Mot inconnu : resultat =>     resultat | resultat

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     case $visu in |      => suggestions : ['']

137 Incohérence : espace et tabulation. => 	    "OUI"   )	xdg-open "./$fich" 	;; | 	  => suggestions : [' ', '\t']
137 Guillemets typographiques ouvrants. => 	    "OUI"   )	xdg-open "./$fich" 	;; | " => suggestions : ['«\xa0', '“']
137 Guillemets typographiques fermants. => 	    "OUI"   )	xdg-open "./$fich" 	;; | " => suggestions : ['\xa0»', '”']
137 Pas d’espace avant ce signe. => 	    "OUI"   )	xdg-open "./$fich" 	;; |  ) => suggestions : [')']
137 Mot inconnu : xdg-open => 	    "OUI"   )	xdg-open "./$fich" 	;; | xdg-open
137 Guillemets fermants. => 	    "OUI"   )	xdg-open "./$fich" 	;; |  " => suggestions : ['\xa0»', '”']
137 Mot inconnu : fich => 	    "OUI"   )	xdg-open "./$fich" 	;; | fich
137 Guillemets typographiques fermants. => 	    "OUI"   )	xdg-open "./$fich" 	;; | " => suggestions : ['\xa0»', '”']
137 Incohérence : espace et tabulation. => 	    "OUI"   )	xdg-open "./$fich" 	;; |  	 => suggestions : [' ', '\t']
137 Une de ces ponctuations est superflue. => 	    "OUI"   )	xdg-open "./$fich" 	;; | ;; => suggestions : [';', ';']

138 Incohérence : espace et tabulation. => 	    "NON"	)	exit 63       	;; | 	  => suggestions : [' ', '\t']
138 Guillemets typographiques ouvrants. => 	    "NON"	)	exit 63       	;; | " => suggestions : ['«\xa0', '“']
138 Guillemets typographiques fermants. => 	    "NON"	)	exit 63       	;; | " => suggestions : ['\xa0»', '”']
138 Espace(s) surnuméraire(s) à supprimer. => 	    "NON"	)	exit 63       	;; |         => suggestions : [' ']
138 Incohérence : espace et tabulation. => 	    "NON"	)	exit 63       	;; |  	 => suggestions : [' ', '\t']
138 Une de ces ponctuations est superflue. => 	    "NON"	)	exit 63       	;; | ;; => suggestions : [';', ';']

139 Mot inconnu : esac => 	esac | esac
