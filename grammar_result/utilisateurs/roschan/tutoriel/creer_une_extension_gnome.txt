
12 Guillemets typographiques ouvrants. [[35:36]] => J'ai appris à faire des extensions "en autodidacte" et mes conseils sont sans aucun doute perfectibles, je ne suis en aucun cas une autorité en la matière.</note> <|> " => suggestions : ['«\xa0', '“']
12 Guillemets typographiques fermants. [[50:51]] => J'ai appris à faire des extensions "en autodidacte" et mes conseils sont sans aucun doute perfectibles, je ne suis en aucun cas une autorité en la matière.</note> <|> " => suggestions : ['\xa0»', '”']
19 Mot inconnu : xx [[100:102]] => Tous les 6 mois, aux alentours de l'équinoxe, une version stable de GNOME est diffusée, numérotée 3.xx, où xx est un numéro pair. Les distributeurs (les personnes qui mettent à disposition les paquets des distributions) mettent alors quelques jours à quelques mois avant de proposer ces paquets aux utilisateurs. <|> xx
19 Mot inconnu : xx [[107:109]] => Tous les 6 mois, aux alentours de l'équinoxe, une version stable de GNOME est diffusée, numérotée 3.xx, où xx est un numéro pair. Les distributeurs (les personnes qui mettent à disposition les paquets des distributions) mettent alors quelques jours à quelques mois avant de proposer ces paquets aux utilisateurs. <|> xx

26 Mot inconnu : javascript [[59:69]] => L'interface GNOME Shell a la particularité d'être codée en javascript. Ce code est ensuite interprété par un moteur de rendu nommé **Gjs** (basé sur le moteur de rendu javascript de Firefox). <|> javascript
26 Mot inconnu : Gjs [[133:136]] => L'interface GNOME Shell a la particularité d'être codée en javascript. Ce code est ensuite interprété par un moteur de rendu nommé **Gjs** (basé sur le moteur de rendu javascript de Firefox). <|> gjs
26 Mot inconnu : javascript [[168:178]] => L'interface GNOME Shell a la particularité d'être codée en javascript. Ce code est ensuite interprété par un moteur de rendu nommé **Gjs** (basé sur le moteur de rendu javascript de Firefox). <|> javascript

28 Mot inconnu : javascript [[25:35]] => Vous le savez peut-être, javascript a la particularité d'autoriser le //monkeypatching//, c'est-à-dire qu'une fonction du code peut être réécrite à un autre endroit du code, dynamiquement. On peut donc modifier l'aspect et le comportement de la quasi-totalité des composants de l'interface GNOME Shell ! <|> javascript
28 Mot inconnu : monkeypatching [[72:86]] => Vous le savez peut-être, javascript a la particularité d'autoriser le //monkeypatching//, c'est-à-dire qu'une fonction du code peut être réécrite à un autre endroit du code, dynamiquement. On peut donc modifier l'aspect et le comportement de la quasi-totalité des composants de l'interface GNOME Shell ! <|> monkeypatching

36 Mot inconnu : Javascript [[5:15]] => ==== Javascript ==== <|> javascript

38 Mot inconnu : javascript [[38:48]] => Ce tutoriel n'est pas un cours sur le javascript, il est conseillé de se familiariser préalablement avec ce langage, qui n'est heureusement pas le plus compliqué en ce monde. <|> javascript

45 Guillemets typographiques ouvrants. [[10:11]] => On va ici "jouer" avec GNOME Shell lui-même. Il est très très probable qu'on le fasse crasher à un moment ou à un autre, et il va donc falloir sérieusement améliorer la résilience aux crashs de votre installation. <|> " => suggestions : ['«\xa0', '“']
45 Guillemets typographiques fermants. [[16:17]] => On va ici "jouer" avec GNOME Shell lui-même. Il est très très probable qu'on le fasse crasher à un moment ou à un autre, et il va donc falloir sérieusement améliorer la résilience aux crashs de votre installation. <|> " => suggestions : ['\xa0»', '”']

57 Guillemets typographiques ouvrants. [[54:55]] => Utilisez des applications avec des boutons de fenêtre "CSD", de manière à ce que vous ne perdiez pas totalement le contrôle sur vos fenêtres en cas de disparition des barres de fenêtres. <|> " => suggestions : ['«\xa0', '“']
57 Mot inconnu : CSD [[55:58]] => Utilisez des applications avec des boutons de fenêtre "CSD", de manière à ce que vous ne perdiez pas totalement le contrôle sur vos fenêtres en cas de disparition des barres de fenêtres. <|> csd
57 Guillemets typographiques fermants. [[58:59]] => Utilisez des applications avec des boutons de fenêtre "CSD", de manière à ce que vous ne perdiez pas totalement le contrôle sur vos fenêtres en cas de disparition des barres de fenêtres. <|> " => suggestions : ['\xa0»', '”']

68 Il manque un espace à côté du tiret. [[11:13]] => gnome-shell -r <|>  - => suggestions : [' – ', ' — ']

71 Guillemets typographiques ouvrants. [[74:75]] => Vous pouvez maintenant entièrement recharger GNOME Shell à partir du menu "clic-droit" fournit par Nautilus sur les fichiers, et donc notamment sur le bureau. <|> " => suggestions : ['«\xa0', '“']
71 Guillemets typographiques fermants. [[85:86]] => Vous pouvez maintenant entièrement recharger GNOME Shell à partir du menu "clic-droit" fournit par Nautilus sur les fichiers, et donc notamment sur le bureau. <|> " => suggestions : ['\xa0»', '”']

80 Mot inconnu : débugguer [[15:24]] => ==== Tester et débugguer ==== <|> débugguer

81 Mot inconnu : débuggage [[51:60]] => <note help>J'admets ne pas être un grand expert en débuggage, il existe probablement mieux que ce que je suggère ici.</note> <|> débuggage

93 Mot inconnu : Looking [[4:11]] => === Looking Glass === <|> looking

96 Guillemets typographiques ouvrants. [[18:19]] => === Voir les logs "en direct" === <|> " => suggestions : ['«\xa0', '“']
96 Guillemets typographiques fermants. [[28:29]] => === Voir les logs "en direct" === <|> " => suggestions : ['\xa0»', '”']

101 Mot inconnu : Caffeine [[124:132]] => Vous pouvez désactiver le verrouillage de l'écran dans //Paramètres -> Confidentialité//, ou encore installer l'extension **Caffeine** (activez-la __tout le temps__ que durera la manipulation ci-dessous). <|> caffeine
101 Mot inconnu : __tout [[147:153]] => Vous pouvez désactiver le verrouillage de l'écran dans //Paramètres -> Confidentialité//, ou encore installer l'extension **Caffeine** (activez-la __tout le temps__ que durera la manipulation ci-dessous). <|> __tout
101 Mot inconnu : temps__ [[157:164]] => Vous pouvez désactiver le verrouillage de l'écran dans //Paramètres -> Confidentialité//, ou encore installer l'extension **Caffeine** (activez-la __tout le temps__ que durera la manipulation ci-dessous). <|> temps__

105 Espace(s) en fin de ligne à supprimer. [[115:116]] => Pour voir en direct les logs, et ainsi tester le fonctionnement de l'extension, entrez dans un terminal la commande  <|>   => suggestions : ['']

107 Guillemets typographiques ouvrants. [[20:21]] => C'est beaucoup plus "violent" que de simplement recharger GNOME Shell, et donc plus long. Toutes les erreurs émises entre autres par les extensions, mais aussi les messages ou les avertissements relatifs à d'autres librairies, apparaissent maintenant dans le terminal. <|> " => suggestions : ['«\xa0', '“']
107 Guillemets typographiques fermants. [[28:29]] => C'est beaucoup plus "violent" que de simplement recharger GNOME Shell, et donc plus long. Toutes les erreurs émises entre autres par les extensions, mais aussi les messages ou les avertissements relatifs à d'autres librairies, apparaissent maintenant dans le terminal. <|> " => suggestions : ['\xa0»', '”']

112 Guillemets typographiques ouvrants. [[143:144]] => On peut créer une extension en partant de zéro ou en //forkant// une extension existante, mais pour commencer, nous allons utiliser la méthode "classique" en lançant la commande <|> " => suggestions : ['«\xa0', '“']
112 Guillemets typographiques fermants. [[153:154]] => On peut créer une extension en partant de zéro ou en //forkant// une extension existante, mais pour commencer, nous allons utiliser la méthode "classique" en lançant la commande <|> " => suggestions : ['\xa0»', '”']

119 Mot inconnu : metadata [[5:13]] => ==== metadata.json ==== <|> metadata
119 Mot inconnu : json [[14:18]] => ==== metadata.json ==== <|> json

131 Mot inconnu : stylesheet [[5:15]] => ==== stylesheet.css ==== <|> stylesheet
131 Mot inconnu : css [[16:19]] => ==== stylesheet.css ==== <|> css

135 Mot inconnu : js [[15:17]] => ==== extension.js ==== <|> js

141 Mot inconnu : const [[0:5]] => const St = imports.gi.St; <|> const

143 Mot inconnu : Toolkit [[10:17]] => St (Shell Toolkit) fournit un certain nombre de composants graphiques très utiles (des entrées de texte, des labels, des icônes, des boutons, ...). <|> toolkit
143 Une de ces ponctuations est superflue. [[140:143]] => St (Shell Toolkit) fournit un certain nombre de composants graphiques très utiles (des entrées de texte, des labels, des icônes, des boutons, ...). <|> , . => suggestions : [',', '.']
143 Typographie : points de suspension. Utilisez le caractère dédié. [[142:145]] => St (Shell Toolkit) fournit un certain nombre de composants graphiques très utiles (des entrées de texte, des labels, des icônes, des boutons, ...). <|> ... => suggestions : ['…']

147 Mot inconnu : const [[0:5]] => const Main = imports.ui.main; <|> const

148 Mot inconnu : const [[0:5]] => const Tweener = imports.ui.tweener; <|> const
148 Mot inconnu : Tweener [[6:13]] => const Tweener = imports.ui.tweener; <|> tweener

151 Mot inconnu : text [[4:8]] => let text, button; <|> text
151 Mot inconnu : button [[10:16]] => let text, button; <|> button

153 Mot inconnu : function [[0:8]] => function init() { <|> function
153 Mot inconnu : init [[9:13]] => function init() { <|> init

162 Mot inconnu : function [[0:8]] => function enable() { <|> function
162 Mot inconnu : enable [[9:15]] => function enable() { <|> enable

166 Mot inconnu : function [[0:8]] => function disable() { <|> function
166 Mot inconnu : disable [[9:16]] => function disable() { <|> disable

174 Mot inconnu : function [[0:8]] => function _showHello() { <|> function
174 Mot inconnu : _showHello [[9:19]] => function _showHello() { <|> _showhello

187 Guillemets typographiques ouvrants. [[30:31]] => <note help>St est en fait une "surcouche" qui permet de rendre Clutter plus facile d'utilisation pour les usages courants de GNOME Shell, et d'uniformiser la manière d'y appliquer des thèmes.</note> <|> " => suggestions : ['«\xa0', '“']
187 Guillemets typographiques fermants. [[40:41]] => <note help>St est en fait une "surcouche" qui permet de rendre Clutter plus facile d'utilisation pour les usages courants de GNOME Shell, et d'uniformiser la manière d'y appliquer des thèmes.</note> <|> " => suggestions : ['\xa0»', '”']
187 Mot inconnu : Clutter [[63:70]] => <note help>St est en fait une "surcouche" qui permet de rendre Clutter plus facile d'utilisation pour les usages courants de GNOME Shell, et d'uniformiser la manière d'y appliquer des thèmes.</note> <|> clutter

196 Mot inconnu : function [[0:8]] => function _hideHello() { <|> function
196 Mot inconnu : _hideHello [[9:19]] => function _hideHello() { <|> _hidehello

202 Guillemets typographiques ouvrants. [[46:47]] => C'était donc le fonctionnement de l'extension "Hello, World". Maintenant, on va chercher à faire une extension utile. <|> " => suggestions : ['«\xa0', '“']
202 Mot inconnu : World [[54:59]] => C'était donc le fonctionnement de l'extension "Hello, World". Maintenant, on va chercher à faire une extension utile. <|> world
202 Guillemets typographiques fermants. [[59:60]] => C'était donc le fonctionnement de l'extension "Hello, World". Maintenant, on va chercher à faire une extension utile. <|> " => suggestions : ['\xa0»', '”']
211 Mot inconnu : Clipboard [[67:76]] =>   * Pas envie d'un logiciel tiers pour gérer le presse-papier ? -> Clipboard Indicator <|> clipboard
211 Mot inconnu : Indicator [[77:86]] =>   * Pas envie d'un logiciel tiers pour gérer le presse-papier ? -> Clipboard Indicator <|> indicator
212 Mot inconnu : Gno-menu [[168:176]] =>   * Pas envie d'utiliser la recherche ni de parcourir la liste des applications ? -> des extensions proposant des menus avec les applications par catégories (Arc Menu, Gno-menu, etc.) <|> gno-menu
213 Mot inconnu : appfolders [[63:73]] =>   * Pas envie de passer par la logithèque pour organiser vos //appfolders// ? -> Appfolders Management Extension <|> appfolders
213 Mot inconnu : Appfolders [[81:91]] =>   * Pas envie de passer par la logithèque pour organiser vos //appfolders// ? -> Appfolders Management Extension <|> appfolders

217 Guillemets typographiques ouvrants. [[46:47]] => C'est vrai ça, impossible de bouger la petite "fenêtre" qui indique le changement du niveau de son ou de luminosité, donc chaque changement de volume ou de luminosité interrompt donc la compréhension de mon épisode passionnant de //Quan Zhi Gao Shou// ou toute autre chinoiserie dont j'aimerais pouvoir lire les sous-titres (à défaut de comprendre les acteurs de la version originale). <|> " => suggestions : ['«\xa0', '“']
217 Guillemets typographiques fermants. [[54:55]] => C'est vrai ça, impossible de bouger la petite "fenêtre" qui indique le changement du niveau de son ou de luminosité, donc chaque changement de volume ou de luminosité interrompt donc la compréhension de mon épisode passionnant de //Quan Zhi Gao Shou// ou toute autre chinoiserie dont j'aimerais pouvoir lire les sous-titres (à défaut de comprendre les acteurs de la version originale). <|> " => suggestions : ['\xa0»', '”']
217 Mot inconnu : Quan [[232:236]] => C'est vrai ça, impossible de bouger la petite "fenêtre" qui indique le changement du niveau de son ou de luminosité, donc chaque changement de volume ou de luminosité interrompt donc la compréhension de mon épisode passionnant de //Quan Zhi Gao Shou// ou toute autre chinoiserie dont j'aimerais pouvoir lire les sous-titres (à défaut de comprendre les acteurs de la version originale). <|> quan
217 Mot inconnu : Zhi [[237:240]] => C'est vrai ça, impossible de bouger la petite "fenêtre" qui indique le changement du niveau de son ou de luminosité, donc chaque changement de volume ou de luminosité interrompt donc la compréhension de mon épisode passionnant de //Quan Zhi Gao Shou// ou toute autre chinoiserie dont j'aimerais pouvoir lire les sous-titres (à défaut de comprendre les acteurs de la version originale). <|> zhi
217 Mot inconnu : Gao [[241:244]] => C'est vrai ça, impossible de bouger la petite "fenêtre" qui indique le changement du niveau de son ou de luminosité, donc chaque changement de volume ou de luminosité interrompt donc la compréhension de mon épisode passionnant de //Quan Zhi Gao Shou// ou toute autre chinoiserie dont j'aimerais pouvoir lire les sous-titres (à défaut de comprendre les acteurs de la version originale). <|> gao

224 Mot inconnu : metadata [[18:26]] => Voici son fichier metadata.json : <|> metadata
224 Mot inconnu : json [[27:31]] => Voici son fichier metadata.json : <|> json

248 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. [[20:24]] => Commençons avec une 1ère ébauche du code d'extension.js \\ <|> 1ère => suggestions : ['1ʳᵉ']
248 Mot inconnu : js [[53:55]] => Commençons avec une 1ère ébauche du code d'extension.js \\ <|> js

251 Mot inconnu : const [[0:5]] => const Main = imports.ui.main; <|> const

252 Mot inconnu : const [[0:5]] => const OsdWindow = imports.ui.osdWindow; <|> const
252 Mot inconnu : OsdWindow [[6:15]] => const OsdWindow = imports.ui.osdWindow; <|> osdwindow

256 Mot inconnu : function [[0:8]] => function init() { } <|> function
256 Mot inconnu : init [[9:13]] => function init() { } <|> init

258 Guillemets typographiques ouvrants. [[60:61]] => La fonction d'initialisation est vide, on fera tout dans le "enable". <|> " => suggestions : ['«\xa0', '“']
258 Mot inconnu : enable [[61:67]] => La fonction d'initialisation est vide, on fera tout dans le "enable". <|> enable
258 Guillemets typographiques fermants. [[67:68]] => La fonction d'initialisation est vide, on fera tout dans le "enable". <|> " => suggestions : ['\xa0»', '”']

260 Mot inconnu : array [[31:36]] => Avant tout, on va définir un //array// vide et deux fonctions : <|> array

264 Mot inconnu : function [[0:8]] => function injectToFunction(parent, name, func) { <|> function
264 Mot inconnu : injectToFunction [[9:25]] => function injectToFunction(parent, name, func) { <|> injecttofunction
264 Il manque un espace avant la parenthèse. [[25:26]] => function injectToFunction(parent, name, func) { <|> ( => suggestions : [' (']
264 Mot inconnu : name [[34:38]] => function injectToFunction(parent, name, func) { <|> name
264 Mot inconnu : func [[40:44]] => function injectToFunction(parent, name, func) { <|> func

265 Mot inconnu : origin [[5:11]] => 	let origin = parent[name]; <|> origin
265 Mot inconnu : name [[21:25]] => 	let origin = parent[name]; <|> name

266 Mot inconnu : name [[8:12]] => 	parent[name] = function() { <|> name
266 Mot inconnu : function [[16:24]] => 	parent[name] = function() { <|> function

267 Mot inconnu : ret [[6:9]] => 		let ret; <|> ret

268 Mot inconnu : ret [[2:5]] => 		ret = origin.apply(this, arguments); <|> ret
268 Mot inconnu : origin [[8:14]] => 		ret = origin.apply(this, arguments); <|> origin
268 Mot inconnu : apply [[15:20]] => 		ret = origin.apply(this, arguments); <|> apply
268 Il manque un espace avant la parenthèse. [[20:21]] => 		ret = origin.apply(this, arguments); <|> ( => suggestions : [' (']
268 Mot inconnu : this [[21:25]] => 		ret = origin.apply(this, arguments); <|> this

269 Mot inconnu : ret [[7:10]] => 			if (ret === undefined) <|> ret
269 Mot inconnu : undefined [[15:24]] => 			if (ret === undefined) <|> undefined

270 Mot inconnu : ret [[4:7]] => 				ret = func.apply(this, arguments); <|> ret
270 Mot inconnu : func [[10:14]] => 				ret = func.apply(this, arguments); <|> func
270 Mot inconnu : apply [[15:20]] => 				ret = func.apply(this, arguments); <|> apply
270 Il manque un espace avant la parenthèse. [[20:21]] => 				ret = func.apply(this, arguments); <|> ( => suggestions : [' (']
270 Mot inconnu : this [[21:25]] => 				ret = func.apply(this, arguments); <|> this

271 Mot inconnu : return [[3:9]] => 			return ret; <|> return
271 Mot inconnu : ret [[10:13]] => 			return ret; <|> ret

273 Mot inconnu : return [[1:7]] => 	return origin; <|> return
273 Mot inconnu : origin [[8:14]] => 	return origin; <|> origin

276 Mot inconnu : function [[0:8]] => function removeInjection(object, injection, name) { <|> function
276 Mot inconnu : removeInjection [[9:24]] => function removeInjection(object, injection, name) { <|> removeinjection
276 Il manque un espace avant la parenthèse. [[24:25]] => function removeInjection(object, injection, name) { <|> ( => suggestions : [' (']
276 Mot inconnu : object [[25:31]] => function removeInjection(object, injection, name) { <|> object
276 Mot inconnu : name [[44:48]] => function removeInjection(object, injection, name) { <|> name

277 Mot inconnu : name [[15:19]] => 	if (injection[name] === undefined) <|> name
277 Mot inconnu : undefined [[25:34]] => 	if (injection[name] === undefined) <|> undefined

278 Mot inconnu : delete [[2:8]] => 		delete object[name]; <|> delete
278 Mot inconnu : object [[9:15]] => 		delete object[name]; <|> object
278 Mot inconnu : name [[16:20]] => 		delete object[name]; <|> name

279 Mot inconnu : else [[1:5]] => 	else <|> else

280 Mot inconnu : object [[2:8]] => 		object[name] = injection[name]; <|> object
280 Mot inconnu : name [[9:13]] => 		object[name] = injection[name]; <|> name
280 Mot inconnu : name [[27:31]] => 		object[name] = injection[name]; <|> name

287 Mot inconnu : function [[0:8]] => function enable() { <|> function
287 Mot inconnu : enable [[9:15]] => function enable() { <|> enable

288 Mot inconnu : injectToFunction [[22:38]] => 	injections['show'] = injectToFunction(OsdWindow.OsdWindow.prototype, 'show',  function(){ <|> injecttofunction
288 Il manque un espace avant la parenthèse. [[38:39]] => 	injections['show'] = injectToFunction(OsdWindow.OsdWindow.prototype, 'show',  function(){ <|> ( => suggestions : [' (']
288 Guillemets typographiques ouvrants. [[70:71]] => 	injections['show'] = injectToFunction(OsdWindow.OsdWindow.prototype, 'show',  function(){ <|> ' => suggestions : ['“', '‘', '‹']
288 Espace(s) surnuméraire(s) à supprimer. [[77:79]] => 	injections['show'] = injectToFunction(OsdWindow.OsdWindow.prototype, 'show',  function(){ <|>    => suggestions : [' ']
288 Mot inconnu : function [[79:87]] => 	injections['show'] = injectToFunction(OsdWindow.OsdWindow.prototype, 'show',  function(){ <|> function

289 Mot inconnu : this [[44:48]] => 		let monitor = Main.layoutManager.monitors[this._monitorIndex]; <|> this
289 Mot inconnu : _monitorIndex [[49:62]] => 		let monitor = Main.layoutManager.monitors[this._monitorIndex]; <|> _monitorindex

290 Mot inconnu : h_percent [[6:15]] => 		let h_percent = 40; <|> h_percent

291 Mot inconnu : v_percent [[6:15]] => 		let v_percent = -30; <|> v_percent
291 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. [[18:21]] => 		let v_percent = -30; <|> -30 => suggestions : ['−30', '– 30', '— 30']

293 Mot inconnu : h_percent [[28:37]] => 		this._box.translation_x = h_percent * monitor.width / 100; <|> h_percent
293 Mot inconnu : width [[48:53]] => 		this._box.translation_x = h_percent * monitor.width / 100; <|> width

294 Mot inconnu : v_percent [[28:37]] => 		this._box.translation_y = v_percent * monitor.height / 100; <|> v_percent
294 Mot inconnu : height [[48:54]] => 		this._box.translation_y = v_percent * monitor.height / 100; <|> height

306 Mot inconnu : function [[0:8]] => function disable() { <|> function
306 Mot inconnu : disable [[9:16]] => function disable() { <|> disable

307 Mot inconnu : arrayOSD [[5:13]] => 	let arrayOSD = Main.osdWindowManager._osdWindows; <|> arrayosd
308 Mot inconnu : arrayOSD [[21:29]] => 	for (let i = 0; i < arrayOSD.length; i++) { <|> arrayosd
308 Mot inconnu : length [[30:36]] => 	for (let i = 0; i < arrayOSD.length; i++) { <|> length

309 Mot inconnu : arrayOSD [[2:10]] => 		arrayOSD[i]._relayout(); <|> arrayosd
309 Mot inconnu : _relayout [[14:23]] => 		arrayOSD[i]._relayout(); <|> _relayout

310 Mot inconnu : arrayOSD [[2:10]] => 		arrayOSD[i]._box.translation_x = 0; <|> arrayosd
310 Mot inconnu : _box [[14:18]] => 		arrayOSD[i]._box.translation_x = 0; <|> _box
310 Mot inconnu : translation_x [[19:32]] => 		arrayOSD[i]._box.translation_x = 0; <|> translation_x

313 Mot inconnu : removeInjection [[1:16]] => 	removeInjection(OsdWindow.OsdWindow.prototype, injections, 'show'); <|> removeinjection
313 Il manque un espace avant la parenthèse. [[16:17]] => 	removeInjection(OsdWindow.OsdWindow.prototype, injections, 'show'); <|> ( => suggestions : [' (']
313 Guillemets typographiques ouvrants. [[60:61]] => 	removeInjection(OsdWindow.OsdWindow.prototype, injections, 'show'); <|> ' => suggestions : ['“', '‘', '‹']

326 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. [[6:10]] => Cette 1ère ébauche ne fait que déplacer le problème : l'utilisateur préférerait sans doute, quitte à s'encombrer d'une extension pour bouger la fenêtre, pouvoir choisir où il la bouge ! <|> 1ère => suggestions : ['1ʳᵉ']
338 Mot inconnu : TODO [[43:47]] => Ce fichier contient les lignes suivantes : TODO <|> todo
348 Guillemets typographiques ouvrants. [[4:5]] =>   * "s", une chaîne de caractères  <|> " => suggestions : ['«\xa0', '“']
348 Guillemets typographiques fermants. [[6:7]] =>   * "s", une chaîne de caractères  <|> " => suggestions : ['\xa0»', '”']
348 Espace(s) en fin de ligne à supprimer. [[33:34]] =>   * "s", une chaîne de caractères  <|>   => suggestions : ['']
349 Guillemets typographiques ouvrants. [[4:5]] =>   * "as", un tableau de chaînes de caractères <|> " => suggestions : ['«\xa0', '“']
349 Guillemets typographiques fermants. [[7:8]] =>   * "as", un tableau de chaînes de caractères <|> " => suggestions : ['\xa0»', '”']
350 Guillemets typographiques ouvrants. [[4:5]] =>   * "b", un booléen (true/false) <|> " => suggestions : ['«\xa0', '“']
350 Guillemets typographiques fermants. [[6:7]] =>   * "b", un booléen (true/false) <|> " => suggestions : ['\xa0»', '”']
350 Mot inconnu : true [[21:25]] =>   * "b", un booléen (true/false) <|> true
350 Mot inconnu : false [[26:31]] =>   * "b", un booléen (true/false) <|> false
351 Guillemets typographiques ouvrants. [[4:5]] =>   * "i", un entier <|> " => suggestions : ['«\xa0', '“']
351 Guillemets typographiques fermants. [[6:7]] =>   * "i", un entier <|> " => suggestions : ['\xa0»', '”']
352 Guillemets typographiques ouvrants. [[4:5]] =>   * "ai", un tableau d'entiers <|> " => suggestions : ['«\xa0', '“']
352 S’il s’agit d’un impératif, écrivez “aie”. [[5:7]] =>   * "ai", un tableau d'entiers <|> ai => suggestions : ['aie']
352 Guillemets typographiques fermants. [[7:8]] =>   * "ai", un tableau d'entiers <|> " => suggestions : ['\xa0»', '”']
353 Typographie : points de suspension. Utilisez le caractère dédié. [[4:7]] =>   * ... <|> ... => suggestions : ['…']

359 Guillemets typographiques ouvrants. [[11:12]] => <note help>"Je suis nul en anglais, pourquoi ne pas avoir fait directement en français ?", direz-vous. Même si vous n'êtes pas polyglotte, je suggère quand même de faire l'extension en anglais puis de traduire en français, pour que des contributeurs débutants puissent ensuite traduire dans leur propre langue en prenant appui sur les fichiers adéquats proposés pour le français.</note> <|> " => suggestions : ['«\xa0', '“']
359 Guillemets typographiques fermants. [[88:89]] => <note help>"Je suis nul en anglais, pourquoi ne pas avoir fait directement en français ?", direz-vous. Même si vous n'êtes pas polyglotte, je suggère quand même de faire l'extension en anglais puis de traduire en français, pour que des contributeurs débutants puissent ensuite traduire dans leur propre langue en prenant appui sur les fichiers adéquats proposés pour le français.</note> <|> " => suggestions : ['\xa0»', '”']

367 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  Pour gérer facilement les langues et les clés dconf, on va modifier le code ainsi : <|>   => suggestions : ['']
367 Mot inconnu : dconf [[47:52]] =>  Pour gérer facilement les langues et les clés dconf, on va modifier le code ainsi : <|> dconf
369 Mot inconnu : get [[7:10]] =>   * le get truc <|> get

373 Mot inconnu : prefs [[5:10]] => ==== prefs.js ==== <|> prefs
373 Mot inconnu : js [[11:13]] => ==== prefs.js ==== <|> js

375 Mot inconnu : Javascript [[28:38]] => Jusqu'à présent, notre code Javascript modifiait GNOME Shell, les erreurs ou avertissements apparaissaient dans la console si besoin, et il fallait tout recharger pour voir les modifications. <|> javascript
377 Guillemets typographiques ouvrants. [[145:146]] => Ici, nous allons faire une fenêtre avec des éléments graphiques GTK+ 3, dont le code sera rechargé à chaque fois que vous cliquerez sur le petit "engrenage" en face du nom de l'extension dans l'Outil de personnalisation GNOME. Les seules erreurs qu'on verra sont celles qui bloqueront le chargement initial de la fenêtre, et on ne les verra pas dans la console, mais à la place du contenu de la fenêtre. <|> " => suggestions : ['«\xa0', '“']
377 Guillemets typographiques fermants. [[155:156]] => Ici, nous allons faire une fenêtre avec des éléments graphiques GTK+ 3, dont le code sera rechargé à chaque fois que vous cliquerez sur le petit "engrenage" en face du nom de l'extension dans l'Outil de personnalisation GNOME. Les seules erreurs qu'on verra sont celles qui bloqueront le chargement initial de la fenêtre, et on ne les verra pas dans la console, mais à la place du contenu de la fenêtre. <|> " => suggestions : ['\xa0»', '”']

389 Il manque un espace avant la parenthèse. [[207:208]] => N'hésitez pas à lire les codes d'autres extensions, pour les comprendre, s'en inspirer, voire copier ou adapter des petits bouts de code (citez leurs auteurs quand même hein) si la licence utilisée le permet((pas de souci normalement, les extensions de extensions.gnome.org sont toutes compatibles GPLv2)). \\ <|> ( => suggestions : [' (']
389 Mot inconnu : GPLv2 [[298:303]] => N'hésitez pas à lire les codes d'autres extensions, pour les comprendre, s'en inspirer, voire copier ou adapter des petits bouts de code (citez leurs auteurs quand même hein) si la licence utilisée le permet((pas de souci normalement, les extensions de extensions.gnome.org sont toutes compatibles GPLv2)). \\ <|> gplv2

396 Il manque un trait d’union. [[161:173]] => Parce que je préfère ne parler que de ce que je comprends, j'ai très peu abordé certains aspects du développement d'extensions pourtant très puissants. En voici quelques uns : <|> quelques uns => suggestions : ['quelques-uns']

397 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  TODO <|>   => suggestions : ['']
397 Mot inconnu : TODO [[1:5]] =>  TODO <|> todo

398 Mot inconnu : Clutter [[5:12]] => ==== Clutter ==== <|> clutter

399 Mot inconnu : Tweener [[5:12]] => ==== Tweener ==== <|> tweener

400 Mot inconnu : DBus [[5:9]] => ==== DBus ==== <|> dbus

409 Mot inconnu : GitHub [[9:15]] => Le dépôt GitHub peut faire office de page de présentation de votre extension, l'onglet "Issues" permet de discuter des bugs ou des idées d'amélioration avec les utilisateurs de votre extension, et il est probable que des //pull requests// contenant notamment des traductions soient soumises à votre approbation. <|> github
409 Guillemets typographiques ouvrants. [[87:88]] => Le dépôt GitHub peut faire office de page de présentation de votre extension, l'onglet "Issues" permet de discuter des bugs ou des idées d'amélioration avec les utilisateurs de votre extension, et il est probable que des //pull requests// contenant notamment des traductions soient soumises à votre approbation. <|> " => suggestions : ['«\xa0', '“']
409 Accord de genre erroné entre “onglet” et “Issues”. [[88:94]] => Le dépôt GitHub peut faire office de page de présentation de votre extension, l'onglet "Issues" permet de discuter des bugs ou des idées d'amélioration avec les utilisateurs de votre extension, et il est probable que des //pull requests// contenant notamment des traductions soient soumises à votre approbation. <|> issues => suggestions : ['Issu']
409 Guillemets typographiques fermants. [[94:95]] => Le dépôt GitHub peut faire office de page de présentation de votre extension, l'onglet "Issues" permet de discuter des bugs ou des idées d'amélioration avec les utilisateurs de votre extension, et il est probable que des //pull requests// contenant notamment des traductions soient soumises à votre approbation. <|> " => suggestions : ['\xa0»', '”']
409 Mot inconnu : requests [[228:236]] => Le dépôt GitHub peut faire office de page de présentation de votre extension, l'onglet "Issues" permet de discuter des bugs ou des idées d'amélioration avec les utilisateurs de votre extension, et il est probable que des //pull requests// contenant notamment des traductions soient soumises à votre approbation. <|> requests

413 Mot inconnu : GitHub [[64:70]] => Quelques passionnés découvriront sans doute votre extension sur GitHub à un moment donné, mais pour que tous les utilisateurs trouvent votre extension si ils en ont besoin, il vous sera nécessaire de vous inscrire sur extensions.gnome.org et de cliquer sur "Add yours". <|> github
413 Il faut élider “si” et l’accoler au pronom. [[151:154]] => Quelques passionnés découvriront sans doute votre extension sur GitHub à un moment donné, mais pour que tous les utilisateurs trouvent votre extension si ils en ont besoin, il vous sera nécessaire de vous inscrire sur extensions.gnome.org et de cliquer sur "Add yours". <|> si  => suggestions : ['s’']
413 Guillemets typographiques ouvrants. [[257:258]] => Quelques passionnés découvriront sans doute votre extension sur GitHub à un moment donné, mais pour que tous les utilisateurs trouvent votre extension si ils en ont besoin, il vous sera nécessaire de vous inscrire sur extensions.gnome.org et de cliquer sur "Add yours". <|> " => suggestions : ['«\xa0', '“']
413 Mot inconnu : Add [[258:261]] => Quelques passionnés découvriront sans doute votre extension sur GitHub à un moment donné, mais pour que tous les utilisateurs trouvent votre extension si ils en ont besoin, il vous sera nécessaire de vous inscrire sur extensions.gnome.org et de cliquer sur "Add yours". <|> add
413 Mot inconnu : yours [[262:267]] => Quelques passionnés découvriront sans doute votre extension sur GitHub à un moment donné, mais pour que tous les utilisateurs trouvent votre extension si ils en ont besoin, il vous sera nécessaire de vous inscrire sur extensions.gnome.org et de cliquer sur "Add yours". <|> yours
413 Guillemets typographiques fermants. [[267:268]] => Quelques passionnés découvriront sans doute votre extension sur GitHub à un moment donné, mais pour que tous les utilisateurs trouvent votre extension si ils en ont besoin, il vous sera nécessaire de vous inscrire sur extensions.gnome.org et de cliquer sur "Add yours". <|> " => suggestions : ['\xa0»', '”']
