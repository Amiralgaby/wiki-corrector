
12 Espace(s) en fin de ligne à supprimer. => Cela présente également l'avantage que si plusieurs personnes utilisent le même ordinateur, il n'y a pas de risque que l'un modifie les fichiers de l'autre, soit par action délibérée, soit par effet de bord, par exemple si suite à un bug quelconque l'un des logiciels utilisés essaie d'écrire là où il ne devrait pas.  |   => suggestions : ['']

18 Accord de genre erroné : « commande » est féminin. => Prenons l'exemple de l'utilisateur //toto// qui va exécuter un commande de type ''sudo application''. Il faut bien comprendre que l'application est lancée en tant qu'utilisateur //root// avec l'environnement de l'utilisateur //toto//. En particulier avec ''HOME=/home/toto'' et toutes les autres variables d'environnement propres à toto. En conséquence si l'application écrit dans des fichiers d'historique, de configuration, etc, toto va se retrouver avec ces fichiers dans son répertoire ''/home/toto'' qui appartiendront désormais à l'utilisateur //root//. La prochaine fois qu'il lancera l'application il risque donc d'avoir un message d'erreur indiquant qu'il est impossible de lire/charger telle ou telle ressource. | un => suggestions : ['une']
18 Accord de genre erroné : « un » est un déterminant masculin. => Prenons l'exemple de l'utilisateur //toto// qui va exécuter un commande de type ''sudo application''. Il faut bien comprendre que l'application est lancée en tant qu'utilisateur //root// avec l'environnement de l'utilisateur //toto//. En particulier avec ''HOME=/home/toto'' et toutes les autres variables d'environnement propres à toto. En conséquence si l'application écrit dans des fichiers d'historique, de configuration, etc, toto va se retrouver avec ces fichiers dans son répertoire ''/home/toto'' qui appartiendront désormais à l'utilisateur //root//. La prochaine fois qu'il lancera l'application il risque donc d'avoir un message d'erreur indiquant qu'il est impossible de lire/charger telle ou telle ressource. | commande => suggestions : ['commandé']
18 Guillemets typographiques ouvrants. => Prenons l'exemple de l'utilisateur //toto// qui va exécuter un commande de type ''sudo application''. Il faut bien comprendre que l'application est lancée en tant qu'utilisateur //root// avec l'environnement de l'utilisateur //toto//. En particulier avec ''HOME=/home/toto'' et toutes les autres variables d'environnement propres à toto. En conséquence si l'application écrit dans des fichiers d'historique, de configuration, etc, toto va se retrouver avec ces fichiers dans son répertoire ''/home/toto'' qui appartiendront désormais à l'utilisateur //root//. La prochaine fois qu'il lancera l'application il risque donc d'avoir un message d'erreur indiquant qu'il est impossible de lire/charger telle ou telle ressource. | '' => suggestions : ['«\xa0', '“']
18 Mot inconnu : sudo => Prenons l'exemple de l'utilisateur //toto// qui va exécuter un commande de type ''sudo application''. Il faut bien comprendre que l'application est lancée en tant qu'utilisateur //root// avec l'environnement de l'utilisateur //toto//. En particulier avec ''HOME=/home/toto'' et toutes les autres variables d'environnement propres à toto. En conséquence si l'application écrit dans des fichiers d'historique, de configuration, etc, toto va se retrouver avec ces fichiers dans son répertoire ''/home/toto'' qui appartiendront désormais à l'utilisateur //root//. La prochaine fois qu'il lancera l'application il risque donc d'avoir un message d'erreur indiquant qu'il est impossible de lire/charger telle ou telle ressource. | sudo
18 Guillemets typographiques fermants. => Prenons l'exemple de l'utilisateur //toto// qui va exécuter un commande de type ''sudo application''. Il faut bien comprendre que l'application est lancée en tant qu'utilisateur //root// avec l'environnement de l'utilisateur //toto//. En particulier avec ''HOME=/home/toto'' et toutes les autres variables d'environnement propres à toto. En conséquence si l'application écrit dans des fichiers d'historique, de configuration, etc, toto va se retrouver avec ces fichiers dans son répertoire ''/home/toto'' qui appartiendront désormais à l'utilisateur //root//. La prochaine fois qu'il lancera l'application il risque donc d'avoir un message d'erreur indiquant qu'il est impossible de lire/charger telle ou telle ressource. | '' => suggestions : ['\xa0»', '”']
18 Guillemets typographiques ouvrants. => Prenons l'exemple de l'utilisateur //toto// qui va exécuter un commande de type ''sudo application''. Il faut bien comprendre que l'application est lancée en tant qu'utilisateur //root// avec l'environnement de l'utilisateur //toto//. En particulier avec ''HOME=/home/toto'' et toutes les autres variables d'environnement propres à toto. En conséquence si l'application écrit dans des fichiers d'historique, de configuration, etc, toto va se retrouver avec ces fichiers dans son répertoire ''/home/toto'' qui appartiendront désormais à l'utilisateur //root//. La prochaine fois qu'il lancera l'application il risque donc d'avoir un message d'erreur indiquant qu'il est impossible de lire/charger telle ou telle ressource. | '' => suggestions : ['«\xa0', '“']

20 Mot inconnu : Xauthority => Cela peut aller jusqu'à l'impossibilité d'ouvrir une session lorsque le fichier ~/.Xauthority devient la propriété de root. Et ce n'est pas un problème rare, le forum regorge de cas d'utilisateurs qui ont étourdiment utilisé //sudo// pour lancer une application graphique qui n'avait pas été prévue pour. | xauthority
20 Mot inconnu : root => Cela peut aller jusqu'à l'impossibilité d'ouvrir une session lorsque le fichier ~/.Xauthority devient la propriété de root. Et ce n'est pas un problème rare, le forum regorge de cas d'utilisateurs qui ont étourdiment utilisé //sudo// pour lancer une application graphique qui n'avait pas été prévue pour. | root
20 Mot inconnu : sudo => Cela peut aller jusqu'à l'impossibilité d'ouvrir une session lorsque le fichier ~/.Xauthority devient la propriété de root. Et ce n'est pas un problème rare, le forum regorge de cas d'utilisateurs qui ont étourdiment utilisé //sudo// pour lancer une application graphique qui n'avait pas été prévue pour. | sudo

32 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    sudo nano /chemin/absolu/vers/fichier |     => suggestions : ['']
32 Mot inconnu : sudo =>    sudo nano /chemin/absolu/vers/fichier | sudo
32 Mot inconnu : nano =>    sudo nano /chemin/absolu/vers/fichier | nano

34 Mot inconnu : nano => Cela peut paraitre rebutant de prime abord pour un débutant, mais nano est un éditeur très simple et très facile à prendre en main, et le fait de ne pas recourir un un logiciel graphique simplifie énormément le processus. | nano
34 S’il s’agit d’un seul mot, il manque un trait d’union. => Cela peut paraitre rebutant de prime abord pour un débutant, mais nano est un éditeur très simple et très facile à prendre en main, et le fait de ne pas recourir un un logiciel graphique simplifie énormément le processus. | nano est => suggestions : ['nano-est']
34 Doublon. => Cela peut paraitre rebutant de prime abord pour un débutant, mais nano est un éditeur très simple et très facile à prendre en main, et le fait de ne pas recourir un un logiciel graphique simplifie énormément le processus. | un un => suggestions : ['un']

37 Il manque un espace. => Se reporter au tutoriel [[tutoriel:comment_modifier_un_fichier|Comment modifier un fichier]]. Un exemple: | comment_modifier_un_fichier => suggestions : [' comment_modifier_un_fichier']
37 Mot inconnu : comment_modifier_un_fichier => Se reporter au tutoriel [[tutoriel:comment_modifier_un_fichier|Comment modifier un fichier]]. Un exemple: | comment_modifier_un_fichier

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    gedit admin:///chemin/absolu/vers/fichier |     => suggestions : ['']
39 Mot inconnu : gedit =>    gedit admin:///chemin/absolu/vers/fichier | gedit

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''sudo gedit /chemin/vers/fichier'' (déconseillé de même que toute utilisation de sudo pour lancer une application graphique) |    => suggestions : ['']
44 Guillemets typographiques ouvrants. =>   * ''sudo gedit /chemin/vers/fichier'' (déconseillé de même que toute utilisation de sudo pour lancer une application graphique) | '' => suggestions : ['«\xa0', '“']
44 Mot inconnu : sudo =>   * ''sudo gedit /chemin/vers/fichier'' (déconseillé de même que toute utilisation de sudo pour lancer une application graphique) | sudo
44 Mot inconnu : gedit =>   * ''sudo gedit /chemin/vers/fichier'' (déconseillé de même que toute utilisation de sudo pour lancer une application graphique) | gedit
44 Guillemets typographiques fermants. =>   * ''sudo gedit /chemin/vers/fichier'' (déconseillé de même que toute utilisation de sudo pour lancer une application graphique) | '' => suggestions : ['\xa0»', '”']
44 Mot inconnu : sudo =>   * ''sudo gedit /chemin/vers/fichier'' (déconseillé de même que toute utilisation de sudo pour lancer une application graphique) | sudo

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) |    => suggestions : ['']
45 Guillemets typographiques ouvrants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['«\xa0', '“']
45 Mot inconnu : sudo =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | sudo
45 Il manque un espace à côté du tiret. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) |  - => suggestions : [' – ', ' — ']
45 Guillemets typographiques fermants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['«\xa0', '“']
45 Mot inconnu : sudo =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | sudo
45 Il manque un espace à côté du tiret. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) |  - => suggestions : [' – ', ' — ']
45 Guillemets typographiques fermants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['«\xa0', '“']
45 Mot inconnu : sudo =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | sudo
45 Il manque un espace à côté du tiret. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) |  - => suggestions : [' – ', ' — ']
45 Guillemets typographiques fermants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['\xa0»', '”']
45 Mot inconnu : root =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | root
45 Guillemets typographiques ouvrants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['«\xa0', '“']
45 Mot inconnu : gedit =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | gedit
45 Guillemets typographiques fermants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['\xa0»', '”']
45 Guillemets typographiques ouvrants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['«\xa0', '“']
45 Mot inconnu : sudo =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | sudo
45 Mot inconnu : gedit =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | gedit
45 Guillemets typographiques fermants. =>   * ''sudo -H'', ''sudo -s'' ou ''sudo -i'' (le moins mauvaise des trois) pour passer en utilisateur root, suivit de ''gedit /chemin/vers/fichier'' (cette méthode est moins mauvaise que ''sudo gedit'' mais elle ne résout pas tous les problèmes) | '' => suggestions : ['\xa0»', '”']

46 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) |    => suggestions : ['']
46 Guillemets typographiques ouvrants. =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | '' => suggestions : ['«\xa0', '“']
46 Mot inconnu : pkexec =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | pkexec
46 Mot inconnu : DISPLAY =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | display
46 Mot inconnu : DISPLAY =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | display
46 Mot inconnu : XAUTHORITY =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | xauthority
46 Mot inconnu : XAUTHORITY =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | xauthority
46 Mot inconnu : gedit =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | gedit
46 Guillemets typographiques fermants. =>   * ''pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY gedit'' (techniquement valide si ce n'est que c'est identique à la méthode canonique, en plus compliqué) | '' => suggestions : ['\xa0»', '”']

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * méthode basée sur ''xhost'' (techniquement valide, mais inutilement complexe) |    => suggestions : ['']
48 Guillemets typographiques ouvrants. =>   * méthode basée sur ''xhost'' (techniquement valide, mais inutilement complexe) | '' => suggestions : ['«\xa0', '“']
48 Mot inconnu : xhost =>   * méthode basée sur ''xhost'' (techniquement valide, mais inutilement complexe) | xhost
48 Guillemets typographiques fermants. =>   * méthode basée sur ''xhost'' (techniquement valide, mais inutilement complexe) | '' => suggestions : ['\xa0»', '”']

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Lancez un éditeur de texte et ouvrez le fichier à modifier en lecture seule, puis enregistrez-en une copie quelque part, par exemple dans ''/tmp'' et faites-y les modifications souhaitées. |    => suggestions : ['']
58 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Lancez un éditeur de texte et ouvrez le fichier à modifier en lecture seule, puis enregistrez-en une copie quelque part, par exemple dans ''/tmp'' et faites-y les modifications souhaitées. |  -  => suggestions : [' – ', ' — ', ' − ']

61 Mot inconnu : gedit => Par exemple supposant que vous souhaitiez modifier le fichier ''/etc/apt/sources.list'', vous lancez gedit, vous enregistrez une copie dans ''/tmp/sources.list'', vous faites vos modifications, et enfin vous déplacez le résultat obtenu via ''sudo cp /tmp/sources.list /etc/apt/sources.list'' | gedit
61 Guillemets typographiques ouvrants. => Par exemple supposant que vous souhaitiez modifier le fichier ''/etc/apt/sources.list'', vous lancez gedit, vous enregistrez une copie dans ''/tmp/sources.list'', vous faites vos modifications, et enfin vous déplacez le résultat obtenu via ''sudo cp /tmp/sources.list /etc/apt/sources.list'' | '' => suggestions : ['«\xa0', '“']
61 Mot inconnu : sudo => Par exemple supposant que vous souhaitiez modifier le fichier ''/etc/apt/sources.list'', vous lancez gedit, vous enregistrez une copie dans ''/tmp/sources.list'', vous faites vos modifications, et enfin vous déplacez le résultat obtenu via ''sudo cp /tmp/sources.list /etc/apt/sources.list'' | sudo
61 Mot inconnu : cp => Par exemple supposant que vous souhaitiez modifier le fichier ''/etc/apt/sources.list'', vous lancez gedit, vous enregistrez une copie dans ''/tmp/sources.list'', vous faites vos modifications, et enfin vous déplacez le résultat obtenu via ''sudo cp /tmp/sources.list /etc/apt/sources.list'' | cp

65 Mot inconnu : sudo => Pour les indécrottables du //sudo gedit//. Attention à bien suivre toutes les étapes car le moindre oubli peut être fatal. | sudo
65 Mot inconnu : gedit => Pour les indécrottables du //sudo gedit//. Attention à bien suivre toutes les étapes car le moindre oubli peut être fatal. | gedit
65 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Pour les indécrottables du //sudo gedit//. Attention à bien suivre toutes les étapes car le moindre oubli peut être fatal. |  car => suggestions : [', car']

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  |    => suggestions : ['']
66 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  |  -  => suggestions : [' – ', ' — ', ' − ']
66 Il manque un espace après la parenthèse. =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | ) => suggestions : [') ']
66 Mot inconnu : wayand =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | wayand
66 Guillemets typographiques ouvrants. =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | '' => suggestions : ['«\xa0', '“']
66 Mot inconnu : xhost =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | xhost
66 Il manque un espace. =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | localuser => suggestions : [' localuser']
66 Mot inconnu : localuser =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | localuser
66 Mot inconnu : root =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | root
66 Guillemets typographiques fermants. =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  | '' => suggestions : ['\xa0»', '”']
66 Espace(s) en fin de ligne à supprimer. =>   - (In)Sécurisation de la session graphique en autorisant des utilisateurs tiers à accéder à votre session wayand: ''xhost +si:localuser:root''  |   => suggestions : ['']

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' |    => suggestions : ['']
67 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' |  -  => suggestions : [' – ', ' — ', ' − ']
67 Mot inconnu : root =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' | root
67 Guillemets typographiques ouvrants. =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' | '' => suggestions : ['«\xa0', '“']
67 Mot inconnu : sudo =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' | sudo
67 Il manque un espace à côté du tiret. =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' |  - => suggestions : [' – ', ' — ']
67 Guillemets typographiques fermants. =>   - Passage en utilisateur root, mais en protégeant votre répertoire //HOME//: ''sudo -H'' | '' => suggestions : ['\xa0»', '”']

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Lancement de votre application graphique (en root donc, attention à ce que vous faites!): ''gedit /chemin/vers/fichier'' |    => suggestions : ['']
68 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Lancement de votre application graphique (en root donc, attention à ce que vous faites!): ''gedit /chemin/vers/fichier'' |  -  => suggestions : [' – ', ' — ', ' − ']
68 Mot inconnu : root =>   - Lancement de votre application graphique (en root donc, attention à ce que vous faites!): ''gedit /chemin/vers/fichier'' | root
68 Guillemets typographiques ouvrants. =>   - Lancement de votre application graphique (en root donc, attention à ce que vous faites!): ''gedit /chemin/vers/fichier'' | '' => suggestions : ['«\xa0', '“']
68 Mot inconnu : gedit =>   - Lancement de votre application graphique (en root donc, attention à ce que vous faites!): ''gedit /chemin/vers/fichier'' | gedit
68 Guillemets typographiques fermants. =>   - Lancement de votre application graphique (en root donc, attention à ce que vous faites!): ''gedit /chemin/vers/fichier'' | '' => suggestions : ['\xa0»', '”']

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Fermeture de votre application graphique lorsque vous avez terminé votre manip |    => suggestions : ['']
69 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Fermeture de votre application graphique lorsque vous avez terminé votre manip |  -  => suggestions : [' – ', ' — ', ' − ']

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Retour à votre user nominal dans le terminal: ''exit'' |    => suggestions : ['']
70 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Retour à votre user nominal dans le terminal: ''exit'' |  -  => suggestions : [' – ', ' — ', ' − ']
70 Guillemets typographiques ouvrants. =>   - Retour à votre user nominal dans le terminal: ''exit'' | '' => suggestions : ['«\xa0', '“']
70 Guillemets typographiques fermants. =>   - Retour à votre user nominal dans le terminal: ''exit'' | '' => suggestions : ['\xa0»', '”']

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' |    => suggestions : ['']
71 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' |  -  => suggestions : [' – ', ' — ', ' − ']
71 Guillemets typographiques ouvrants. =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' | '' => suggestions : ['«\xa0', '“']
71 Mot inconnu : xhost =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' | xhost
71 Il manque un espace à côté du tiret. =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' |  - => suggestions : [' – ', ' — ']
71 Il manque un espace. =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' | localuser => suggestions : [' localuser']
71 Mot inconnu : localuser =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' | localuser
71 Mot inconnu : root =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' | root
71 Guillemets typographiques fermants. =>   - Rétablissement de la session graphique originale: ''xhost -si:localuser:root'' | '' => suggestions : ['\xa0»', '”']

73 Guillemets typographiques ouvrants. => <note>Si l'utilisation de ''sudo -H'' vous permet de protéger votre //HOME//, l'implication est que c'est le //HOME// de l'utilisateur //root// qui sera affecté par d'éventuels effets de bord. </note> | '' => suggestions : ['«\xa0', '“']
73 Mot inconnu : sudo => <note>Si l'utilisation de ''sudo -H'' vous permet de protéger votre //HOME//, l'implication est que c'est le //HOME// de l'utilisateur //root// qui sera affecté par d'éventuels effets de bord. </note> | sudo
73 Il manque un espace à côté du tiret. => <note>Si l'utilisation de ''sudo -H'' vous permet de protéger votre //HOME//, l'implication est que c'est le //HOME// de l'utilisateur //root// qui sera affecté par d'éventuels effets de bord. </note> |  - => suggestions : [' – ', ' — ']
73 Guillemets typographiques fermants. => <note>Si l'utilisation de ''sudo -H'' vous permet de protéger votre //HOME//, l'implication est que c'est le //HOME// de l'utilisateur //root// qui sera affecté par d'éventuels effets de bord. </note> | '' => suggestions : ['\xa0»', '”']

77 Mot inconnu : sudo => Normalement vous devriez avoir compris pourquoi il est dangereux de se risquer à utiliser le mot clé //sudo// pour lancer une application graphique, et quels sont les risques afférents. Il est bien compréhensible que vous souhaitiez éviter au maximum l'usage de la ligne de commande sur une distribution grand public comme Ubuntu. Cependant dans le cas particulier de l'administration du système en général, et de l'édition des fichiers de configuration en particulier, la manière dont le système est conçu fait qu'il sera toujours plus simple et moins risqué de procéder en ligne de commande plutôt que de se compliquer (énormément) la vie pour réussir à faire graphiquement en se donnant beaucoup de mal une opération qui est simplissime dans le terminal. | sudo

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://forum.ubuntu-fr.org/viewtopic.php?pid=22021343#p22021343|Discussion relative à cette problématiqe]] sur le forum ubuntu-fr |    => suggestions : ['']
81 Mot inconnu : problématiqe =>   * [[https://forum.ubuntu-fr.org/viewtopic.php?pid=22021343#p22021343|Discussion relative à cette problématiqe]] sur le forum ubuntu-fr | problématiqe
81 Mot inconnu : ubuntu-fr =>   * [[https://forum.ubuntu-fr.org/viewtopic.php?pid=22021343#p22021343|Discussion relative à cette problématiqe]] sur le forum ubuntu-fr | ubuntu-fr

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) |    => suggestions : ['']
82 Mot inconnu : Why =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | why
82 Mot inconnu : don't =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | don't
82 Mot inconnu : gksu =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | gksu
82 Mot inconnu : gksudo =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | gksudo
82 Mot inconnu : launching =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | launching
82 Mot inconnu : graphical =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | graphical
82 Mot inconnu : with =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | with
82 Mot inconnu : sudo =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | sudo
82 Mot inconnu : work =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | work
82 Mot inconnu : with =>   * [[https://askubuntu.com/questions/961967/why-dont-gksu-gksudo-or-launching-a-graphical-application-with-sudo-work-with-w|Why don't gksu/gksudo or launching a graphical application with sudo work with Wayland?]] (en) | with
