
3 Mot inconnu : GDL => ====== GDL : GNU Data Language ====== | gdl
3 Mot inconnu : Language => ====== GDL : GNU Data Language ====== | language

4 Mot inconnu : GDL => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | gdl
4 Mot inconnu : linux => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | linux
4 Mot inconnu : IDL => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | idl
4 Mot inconnu : GDL => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | gdl
4 Mot inconnu : Language => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | language
4 Mot inconnu : GDL => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | gdl
4 Mot inconnu : synaptics => <note>**GDL**, c'est l'équivalent libre sous **GNU/linux** d'**IDL**. J'ai au début suivi des tutoriels pour compiler à la main les paquets et dépendances avant de me rendre compte qu'on pouvait l'installer directement. Il faut juste savoir que **GDL**, ça veut dire **GNU Data Language**, et que par conséquent, rechercher **GDL** dans synaptics ne renvoie pas de résultats alors que le programme s'y trouve. | synaptics

6 Pas de majuscule sur les mois. => La version actuelle stable est la *0.9.5* (au 15 Mai 2015). | mai => suggestions : ['mai']

8 Incohérence avec “Il” : “deux” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => Il y deux façons d'installer GDL sous Ubuntu : via les paquets ou via une compilation à la main. Une fois réalisé que le paquet s'appelle  | deux => suggestions : []
8 Mot inconnu : GDL => Il y deux façons d'installer GDL sous Ubuntu : via les paquets ou via une compilation à la main. Une fois réalisé que le paquet s'appelle  | gdl
8 Espace(s) en fin de ligne à supprimer. => Il y deux façons d'installer GDL sous Ubuntu : via les paquets ou via une compilation à la main. Une fois réalisé que le paquet s'appelle  |   => suggestions : ['']
9 Mot inconnu : gdl => **[[apt://gnudatalanguage|gnudatalanguage]]** et non pas **gdl**, l'installation par paquet ne pose pas de vrais problèmes, sauf qu'il faut bien penser à ajouter le driver X11 dans plplot (aujourd'hui en version [[apt://plplot12-driver-xwin]]). L'inconvénient des paquets est qu'ils sont en décalage par rapport aux avancées constantes  | gdl
9 Mot inconnu : plplot => **[[apt://gnudatalanguage|gnudatalanguage]]** et non pas **gdl**, l'installation par paquet ne pose pas de vrais problèmes, sauf qu'il faut bien penser à ajouter le driver X11 dans plplot (aujourd'hui en version [[apt://plplot12-driver-xwin]]). L'inconvénient des paquets est qu'ils sont en décalage par rapport aux avancées constantes  | plplot
9 Mot inconnu : plplot12-driver-xwin => **[[apt://gnudatalanguage|gnudatalanguage]]** et non pas **gdl**, l'installation par paquet ne pose pas de vrais problèmes, sauf qu'il faut bien penser à ajouter le driver X11 dans plplot (aujourd'hui en version [[apt://plplot12-driver-xwin]]). L'inconvénient des paquets est qu'ils sont en décalage par rapport aux avancées constantes  | plplot12-driver-xwin
9 Espace(s) en fin de ligne à supprimer. => **[[apt://gnudatalanguage|gnudatalanguage]]** et non pas **gdl**, l'installation par paquet ne pose pas de vrais problèmes, sauf qu'il faut bien penser à ajouter le driver X11 dans plplot (aujourd'hui en version [[apt://plplot12-driver-xwin]]). L'inconvénient des paquets est qu'ils sont en décalage par rapport aux avancées constantes  |   => suggestions : ['']
10 Typographie : points de suspension. Utilisez le caractère dédié. => du développement du logiciel : nouvelles fonctionnalités et corrections de bugs ... Comme de gros efforts ont été fait pour faciliter la compilation depuis le source | ... => suggestions : ['…']
10 Accord avec la forme verbale “ont” : “fait” devrait être au pluriel. => du développement du logiciel : nouvelles fonctionnalités et corrections de bugs ... Comme de gros efforts ont été fait pour faciliter la compilation depuis le source | fait => suggestions : ['faits']
10 Accord de genre erroné : « source » est féminin. => du développement du logiciel : nouvelles fonctionnalités et corrections de bugs ... Comme de gros efforts ont été fait pour faciliter la compilation depuis le source | le => suggestions : ['la']
10 Accord de genre erroné : « le » est un déterminant masculin. => du développement du logiciel : nouvelles fonctionnalités et corrections de bugs ... Comme de gros efforts ont été fait pour faciliter la compilation depuis le source | source => suggestions : ['sourcé']

11 Confusion : “quelque” est un déterminant. => quelque soit la version d'Ubuntu depuis 10.04, il est vivement recommander d'utiliser les sources et de faire un petit effort. | quelque soit => suggestions : ['quel que soit', 'quelle que soit', 'quels que soient', 'quelles que soient']
11 Après “être”, le verbe ne devrait pas être à l’infinitif. => quelque soit la version d'Ubuntu depuis 10.04, il est vivement recommander d'utiliser les sources et de faire un petit effort. | recommander => suggestions : ['recommandé', 'recommandées', 'recommandée', 'recommandés']

18 Mot inconnu : plplot => Un paquet optionnel mais généralement indispensable est le driver plplot d'affichage X11 ( pour pouvoir afficher les courbes dans une fenêtre [sic]) :  **[[apt://plplot9-driver-xwin|plplot9-driver-xwin]]** (vieux Ubuntu) ou  **[[apt://plplot12-driver-xwin|plplot12-driver-xwin]]** (par exemple en 14.04). | plplot
18 Pas d’espace après ce signe. => Un paquet optionnel mais généralement indispensable est le driver plplot d'affichage X11 ( pour pouvoir afficher les courbes dans une fenêtre [sic]) :  **[[apt://plplot9-driver-xwin|plplot9-driver-xwin]]** (vieux Ubuntu) ou  **[[apt://plplot12-driver-xwin|plplot12-driver-xwin]]** (par exemple en 14.04). | (  => suggestions : ['(']
18 Espace(s) surnuméraire(s) à supprimer. => Un paquet optionnel mais généralement indispensable est le driver plplot d'affichage X11 ( pour pouvoir afficher les courbes dans une fenêtre [sic]) :  **[[apt://plplot9-driver-xwin|plplot9-driver-xwin]]** (vieux Ubuntu) ou  **[[apt://plplot12-driver-xwin|plplot12-driver-xwin]]** (par exemple en 14.04). |    => suggestions : [' ']
18 Espace(s) surnuméraire(s) à supprimer. => Un paquet optionnel mais généralement indispensable est le driver plplot d'affichage X11 ( pour pouvoir afficher les courbes dans une fenêtre [sic]) :  **[[apt://plplot9-driver-xwin|plplot9-driver-xwin]]** (vieux Ubuntu) ou  **[[apt://plplot12-driver-xwin|plplot12-driver-xwin]]** (par exemple en 14.04). |    => suggestions : [' ']
20 Espace(s) en fin de ligne à supprimer. => Vous pouvez aussi voir ici:  |   => suggestions : ['']

21 Mot inconnu : GDL => [[https://packages.ubuntu.com/utopic/interpreters/gnudatalanguage|les dépendances de GDL]] pour 14.10. | gdl

25 Mot inconnu : root => Tout se passe sans être root, et le //make install// est superflu. Il faut juste pouvoir installer des paquets "officiels" pour gagner du temps. | root
25 Mot inconnu : make => Tout se passe sans être root, et le //make install// est superflu. Il faut juste pouvoir installer des paquets "officiels" pour gagner du temps. | make
25 Mot inconnu : install => Tout se passe sans être root, et le //make install// est superflu. Il faut juste pouvoir installer des paquets "officiels" pour gagner du temps. | install
25 Guillemets typographiques ouvrants. => Tout se passe sans être root, et le //make install// est superflu. Il faut juste pouvoir installer des paquets "officiels" pour gagner du temps. | " => suggestions : ['«\xa0', '“']
25 Guillemets typographiques fermants. => Tout se passe sans être root, et le //make install// est superflu. Il faut juste pouvoir installer des paquets "officiels" pour gagner du temps. | " => suggestions : ['\xa0»', '”']

49 Mot inconnu : CVS => ===== Compilation de la version 0.9.5 CVS ===== | cvs

51 Mot inconnu : vanilla => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | vanilla
51 Accord de nombre erroné avec « 5 » : « installée » devrait être au pluriel. => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | installée => suggestions : ['installées']
51 Mot inconnu : CVS => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | cvs
51 Mot inconnu : CVS => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | cvs
51 Mot inconnu : apt-get => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | apt-get
51 Mot inconnu : install => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | install
51 Mot inconnu : libwxbase2 => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | libwxbase2
51 Mot inconnu : dev => Une fois la version vanilla 0.9.5 installée, il devient trivial de récupérer le CVS et de le compiler. Un des très grands intérêts du CVS actuel tient dans les progrès très significatifs pour les Widgets (//apt-get install libwxbase2.8-dev// si nécessaire !) | dev

55 Mot inconnu : GDL => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | gdl
55 Mot inconnu : GDL => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | gdl
55 Mot inconnu : OSX => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | osx
55 Mot inconnu : MSwin => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | mswin
55 Mot inconnu : Mandriva => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | mandriva
55 Mot inconnu : Suse10 => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | suse10
55 Mot inconnu : FFTw => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | fftw
55 Mot inconnu : FFT => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | fft
55 Mot inconnu : imisations => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | imisations
55 Mot inconnu : Eigen3 => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | eigen3
55 Mot inconnu : GDL => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | gdl
55 Pour évoquer des dépenses, écrivez “frais” (pluriel). => Un petit script automatisé permet de compiler a minima GDL, ce qui permet de tester les fonctionnalités centrales de GDL (interpréteur, affichage). Ce script a été écrit dans l'esprit d'être aussi robuste que possible, même sous OSX ou MSwin ou de très vieux GNU/Linux (e.g. Mandriva 2009 ou Suse10). De nombreuses //options// (usage de FFTw pour le FFT) ou //optimisations// (usage de Eigen3 pour les opérations matricielles) de GDL y sont désactivés mais cela permet de tester à moindre frais la version récente de l'interpréteur pour des utilisateurs dubitatifs. | à moindre frais => suggestions : ['à moindres frais']

57 Il manque un espace à côté du tiret. => Il n'y a eu à ce jour aucun retour négatif sous Ubuntu (à partir de 10.04 inclus) et Debian (sauf ajout de quelques paquets -dev-, cf tuto) |  - => suggestions : [' – ', ' — ']
57 Mot inconnu : dev => Il n'y a eu à ce jour aucun retour négatif sous Ubuntu (à partir de 10.04 inclus) et Debian (sauf ajout de quelques paquets -dev-, cf tuto) | dev

61 Mot inconnu : make => Toute version antérieure à 0.9.5 est considérée comme obsolète. De plus, la voie //configure & make// a été retirée depuis 0.9.5, remplacée par la voie //cmake & make//. (On ne garde ces explications juste au cas - ou (il y a parfois des ruses par rapport à certains cas pointus ... GDL est utilisé sur certains vieux OS | make
61 Mot inconnu : cmake => Toute version antérieure à 0.9.5 est considérée comme obsolète. De plus, la voie //configure & make// a été retirée depuis 0.9.5, remplacée par la voie //cmake & make//. (On ne garde ces explications juste au cas - ou (il y a parfois des ruses par rapport à certains cas pointus ... GDL est utilisé sur certains vieux OS | cmake
61 Mot inconnu : make => Toute version antérieure à 0.9.5 est considérée comme obsolète. De plus, la voie //configure & make// a été retirée depuis 0.9.5, remplacée par la voie //cmake & make//. (On ne garde ces explications juste au cas - ou (il y a parfois des ruses par rapport à certains cas pointus ... GDL est utilisé sur certains vieux OS | make
61 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Toute version antérieure à 0.9.5 est considérée comme obsolète. De plus, la voie //configure & make// a été retirée depuis 0.9.5, remplacée par la voie //cmake & make//. (On ne garde ces explications juste au cas - ou (il y a parfois des ruses par rapport à certains cas pointus ... GDL est utilisé sur certains vieux OS |  -  => suggestions : [' – ', ' — ', ' − ']
61 Typographie : points de suspension. Utilisez le caractère dédié. => Toute version antérieure à 0.9.5 est considérée comme obsolète. De plus, la voie //configure & make// a été retirée depuis 0.9.5, remplacée par la voie //cmake & make//. (On ne garde ces explications juste au cas - ou (il y a parfois des ruses par rapport à certains cas pointus ... GDL est utilisé sur certains vieux OS | ... => suggestions : ['…']
61 Mot inconnu : GDL => Toute version antérieure à 0.9.5 est considérée comme obsolète. De plus, la voie //configure & make// a été retirée depuis 0.9.5, remplacée par la voie //cmake & make//. (On ne garde ces explications juste au cas - ou (il y a parfois des ruses par rapport à certains cas pointus ... GDL est utilisé sur certains vieux OS | gdl

62 Typographie : points de suspension. Utilisez le caractère dédié. => pour faire tourner des pipelines extensivement testés et on peut vouloir rejouer cela ...)) | ... => suggestions : ['…']

64 Mot inconnu : GDL => Compilation en utilisant la version GDL : gdl-0.9.3 et plplot 5.9.5 (préalablement déjà compiler et installer.) | gdl
64 Mot inconnu : gdl-0 => Compilation en utilisant la version GDL : gdl-0.9.3 et plplot 5.9.5 (préalablement déjà compiler et installer.) | gdl-0
64 Mot inconnu : plplot => Compilation en utilisant la version GDL : gdl-0.9.3 et plplot 5.9.5 (préalablement déjà compiler et installer.) | plplot

77 Mot inconnu : GDL => Ceci est évidemment transposable aux autres versions de GDL | gdl

79 Mot inconnu : make => Je considère que //make install// est facultatif: il est tout a fait possible de compiler le projet puis de vivre en local. Une autre solution est d'utiliser un répertoire local, ce qui permet de faire co-exister la version | make
79 Mot inconnu : install => Je considère que //make install// est facultatif: il est tout a fait possible de compiler le projet puis de vivre en local. Une autre solution est d'utiliser un répertoire local, ce qui permet de faire co-exister la version | install
79 Confusion : “a” est une forme conjuguée de “avoir”. Pour la préposition, écrivez “à”. => Je considère que //make install// est facultatif: il est tout a fait possible de compiler le projet puis de vivre en local. Une autre solution est d'utiliser un répertoire local, ce qui permet de faire co-exister la version | a => suggestions : ['à']
79 Mot inconnu : co-exister => Je considère que //make install// est facultatif: il est tout a fait possible de compiler le projet puis de vivre en local. Une autre solution est d'utiliser un répertoire local, ce qui permet de faire co-exister la version | co-exister

80 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => packagee pour Ubuntu et sa version compilee soi-meme. Il suffit de faire: | packagee => suggestions : ['Packagee']
80 Mot inconnu : packagee => packagee pour Ubuntu et sa version compilee soi-meme. Il suffit de faire: | packagee
80 Mot inconnu : compilee => packagee pour Ubuntu et sa version compilee soi-meme. Il suffit de faire: | compilee
80 Mot inconnu : soi-meme => packagee pour Ubuntu et sa version compilee soi-meme. Il suffit de faire: | soi-meme

87 Mot inconnu : plplot => Supposons que vous ayez la version 5.9.5 de plplot, compilée à la main, dans une arborescence locale, ainsi qu'une version ad-hoc de la GSL, il suffira de faire: | plplot
87 Mot inconnu : GSL => Supposons que vous ayez la version 5.9.5 de plplot, compilée à la main, dans une arborescence locale, ainsi qu'une version ad-hoc de la GSL, il suffira de faire: | gsl

102 Espace(s) en fin de ligne à supprimer. => Si, par hasard la partie graphique ne démarrait pas convenablement, il peut être utile d'ajouter  |   => suggestions : ['']

106 Mot inconnu : qlq1 => (si qlq1 pouvait expliquer, et me dire comment corriger cela dans le code, j'en serais ravi !) | qlq1

107 Espace(s) en fin de ligne à supprimer. => Attention, il ne faut pas confondre ce problème-ci avec le manque du package  |   => suggestions : ['']

111 Mot inconnu : gdl-0 => ===== Compilation de gdl-0.9rc4 sous Ubuntu 10.04 LTS ===== | gdl-0
111 Mot inconnu : rc4 => ===== Compilation de gdl-0.9rc4 sous Ubuntu 10.04 LTS ===== | rc4
111 Mot inconnu : LTS => ===== Compilation de gdl-0.9rc4 sous Ubuntu 10.04 LTS ===== | lts

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

113 Mot inconnu : GDL => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | gdl
113 Mot inconnu : readline => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | readline
113 Mot inconnu : gsl => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | gsl
113 Mot inconnu : plplot => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | plplot
113 Mot inconnu : fftw => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | fftw
113 Mot inconnu : FFT => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | fft
113 Mot inconnu : GSL => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | gsl
113 Mot inconnu : ImageMagick => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | imagemagick
113 Si « mais » est la conjonction de coordination, une virgule est souhaitable si elle introduit une nouvelle proposition. => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) |  mais => suggestions : [', mais']
113 Mot inconnu : HDF => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | hdf
113 Mot inconnu : NetCDF => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | netcdf
113 Mot inconnu : ca => Il ne faut pas oublier que la compilation de GDL nécessite les paquets suivants: //readline, gsl, plplot// en version //dev//. Le paquet facultatif //fftw// est recommandé pour avoir une version efficace des FFT, meilleure que le code dans la GSL. Le paquet ImageMagick est facultatif mais il est vivement recommandé. Pour de simples tests, HDF et NetCDF ne sont pas vraiment indispensables ! (Si vous ne connaissez pas, passez ! En prime, ca gagnera du temps à la compilation ;-) | ca

115 Forme interrogative ? Mettez un trait d’union. => Assurez vous bien d'avoir installé avant le //configure// les versions pour développement des paquets précités (//lib...-dev//), sinon vous rencontrerez des difficultés lors de la compilation, et des messages parfois déconcertants.. | assurez vous => suggestions : ['Assurez-vous']
115 Typographie : points de suspension. Utilisez le caractère dédié. => Assurez vous bien d'avoir installé avant le //configure// les versions pour développement des paquets précités (//lib...-dev//), sinon vous rencontrerez des difficultés lors de la compilation, et des messages parfois déconcertants.. | ... => suggestions : ['…']
115 Mot inconnu : dev => Assurez vous bien d'avoir installé avant le //configure// les versions pour développement des paquets précités (//lib...-dev//), sinon vous rencontrerez des difficultés lors de la compilation, et des messages parfois déconcertants.. | dev
115 Typographie : un ou trois points ? => Assurez vous bien d'avoir installé avant le //configure// les versions pour développement des paquets précités (//lib...-dev//), sinon vous rencontrerez des difficultés lors de la compilation, et des messages parfois déconcertants.. | .. => suggestions : ['…', '.']

117 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A noter que les étapes //autoconf, ...// ne sont plus (ne devraient plus être) nécessaires en 0.9rc4 et CVS. | a => suggestions : ['À']
117 Mot inconnu : autoconf => A noter que les étapes //autoconf, ...// ne sont plus (ne devraient plus être) nécessaires en 0.9rc4 et CVS. | autoconf
117 Une de ces ponctuations est superflue. => A noter que les étapes //autoconf, ...// ne sont plus (ne devraient plus être) nécessaires en 0.9rc4 et CVS. | , . => suggestions : [',', '.']
117 Typographie : points de suspension. Utilisez le caractère dédié. => A noter que les étapes //autoconf, ...// ne sont plus (ne devraient plus être) nécessaires en 0.9rc4 et CVS. | ... => suggestions : ['…']
117 Mot inconnu : rc4 => A noter que les étapes //autoconf, ...// ne sont plus (ne devraient plus être) nécessaires en 0.9rc4 et CVS. | rc4
117 Mot inconnu : CVS => A noter que les étapes //autoconf, ...// ne sont plus (ne devraient plus être) nécessaires en 0.9rc4 et CVS. | cvs

119 Mot inconnu : release => ==== Compilation de la version release. ==== | release

121 Mot inconnu : gdl-0 => Récupérez l'archive gdl-0.9rc4.tar.gz à l'adresse suivante : https://sourceforge.net/projects/gnudatalanguage/ . | gdl-0

123 Mot inconnu : tar => Une fois l'archive téléchargée, la décompresser à l'aide de tar puis se placer dans le répertoire créé. | tar

165 Mot inconnu : plplot => Selon la version de votre compilateur ou de plplot, vous pouvez avoir des messages d'erreurs. | plplot

169 Mot inconnu : openmp => Si votre compilateur ne supporte pas openmp. Vous pouvez ajouter l'option suivante en lançant //./configure//. | openmp

174 Mot inconnu : gcc => Je compile avec une version 4.4.3 de gcc et openMp est supporté. | gcc
174 Mot inconnu : openMp => Je compile avec une version 4.4.3 de gcc et openMp est supporté. | openmp

176 Mot inconnu : gcc => Pour vérification de votre version de gcc :  | gcc
176 Espace(s) en fin de ligne à supprimer. => Pour vérification de votre version de gcc :  |   => suggestions : ['']

181 Mot inconnu : plplot => Si vous avez une ancienne version de plplot ( antérieure à 5.9.0 ) , il vous faudra ajouter cette option. | plplot
181 Pas d’espace après ce signe. => Si vous avez une ancienne version de plplot ( antérieure à 5.9.0 ) , il vous faudra ajouter cette option. | (  => suggestions : ['(']
181 Pas d’espace avant ce signe. => Si vous avez une ancienne version de plplot ( antérieure à 5.9.0 ) , il vous faudra ajouter cette option. |  ) => suggestions : [')']
181 Pas d’espace avant une virgule. => Si vous avez une ancienne version de plplot ( antérieure à 5.9.0 ) , il vous faudra ajouter cette option. |  , => suggestions : [',']

185 Espace(s) en fin de ligne à supprimer. => Et enfin  |   => suggestions : ['']

191 Espace(s) surnuméraire(s) à supprimer. => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: |    => suggestions : [' ']
191 Mot inconnu : FAIL => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: | fail
191 Mot inconnu : make => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: | make
191 Mot inconnu : check => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: | check
191 Mot inconnu : FAIL => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: | fail
191 Mot inconnu : test_angles => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: | test_angles
191 Il manque un espace. => Il est //normal// d'avoir plusieurs  FAIL dans le //make check// (FAIL: test_angles.pro et ainsi de suite). Pas grave: | pro => suggestions : [' pro']

192 Mot inconnu : CVS => on va mettre à jour avec la version CVS, plus avancée. | cvs

194 Mot inconnu : gdl => Une fois que ces étapes ont été réalisées (avec succès) vous pouvez lancer gdl, un exécutable se trouve dans le répertoire src (sh ./qui). | gdl
194 Mot inconnu : src => Une fois que ces étapes ont été réalisées (avec succès) vous pouvez lancer gdl, un exécutable se trouve dans le répertoire src (sh ./qui). | src
194 Mot inconnu : sh => Une fois que ces étapes ont été réalisées (avec succès) vous pouvez lancer gdl, un exécutable se trouve dans le répertoire src (sh ./qui). | sh

213 Mot inconnu : CVS => ==== Compilation de la version CVS. ==== | cvs

215 Mot inconnu : CVS => Pour la version CVS, la démarche est similaire. La seule différence est la récupération du code source. | cvs

217 Pas d’espace après ce signe. => Si vous voulez récupérer les sources pour la première fois ( ou dans un tout nouveau répertoire ) ,  | (  => suggestions : ['(']
217 Pas d’espace avant ce signe. => Si vous voulez récupérer les sources pour la première fois ( ou dans un tout nouveau répertoire ) ,  |  ) => suggestions : [')']
217 Pas d’espace avant une virgule. => Si vous voulez récupérer les sources pour la première fois ( ou dans un tout nouveau répertoire ) ,  |  , => suggestions : [',']
217 Espace(s) en fin de ligne à supprimer. => Si vous voulez récupérer les sources pour la première fois ( ou dans un tout nouveau répertoire ) ,  |   => suggestions : ['']

218 Mot inconnu : gdl => saisissez la commande suivante, elle va créer un répertoire gdl ou se trouvera les sources. | gdl

223 Mot inconnu : CVS => Ou encore pour mettre à jour votre version CVS, vous vous placez dans le répertoire gdl puis la commande suivante | cvs
223 Mot inconnu : gdl => Ou encore pour mettre à jour votre version CVS, vous vous placez dans le répertoire gdl puis la commande suivante | gdl

230 Mot inconnu : release => Les étapes suivantes sont à peu près les mêmes que pour la version release, à savoir : | release

231 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * mkdir |    => suggestions : ['']
231 Mot inconnu : mkdir =>   * mkdir | mkdir

232 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * autoreconf |    => suggestions : ['']
232 Mot inconnu : autoreconf =>   * autoreconf | autoreconf

233 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * configure |    => suggestions : ['']

234 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * make |    => suggestions : ['']
234 Mot inconnu : make =>   * make | make

235 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * make check  |    => suggestions : ['']
235 Mot inconnu : make =>   * make check  | make
235 Mot inconnu : check =>   * make check  | check
235 Espace(s) en fin de ligne à supprimer. =>   * make check  |   => suggestions : ['']

280 Pléonasme. => Au jour d'aujourd'hui, il y a 3 FAIL: l'un est anecdotique, l'autre remonte apparemment | au jour d'aujourd'hui => suggestions : ['Aujourd’hui']
280 Mot inconnu : FAIL => Au jour d'aujourd'hui, il y a 3 FAIL: l'un est anecdotique, l'autre remonte apparemment | fail

281 Mot inconnu : CentOS => une erreur d'arrondi qui n'avait pas été constatée par ailleurs (CentOS ou OSX). Le dernier FAIL est | centos
281 Mot inconnu : OSX => une erreur d'arrondi qui n'avait pas été constatée par ailleurs (CentOS ou OSX). Le dernier FAIL est | osx
281 Mot inconnu : FAIL => une erreur d'arrondi qui n'avait pas été constatée par ailleurs (CentOS ou OSX). Le dernier FAIL est | fail

282 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => plus subtil, étant lié à la représentation des ULONG64 sur des machines 32 et 64 bits. Ne pas s'en soucier. | plus => suggestions : ['Plus']
282 Mot inconnu : ULONG64 => plus subtil, étant lié à la représentation des ULONG64 sur des machines 32 et 64 bits. Ne pas s'en soucier. | ulong64

285 Mot inconnu : gcc => Pour les problèmes dus aux anciennes versions de gcc et de plplot ne pas oublier les options  | gcc
285 Mot inconnu : plplot => Pour les problèmes dus aux anciennes versions de gcc et de plplot ne pas oublier les options  | plplot
285 Espace(s) en fin de ligne à supprimer. => Pour les problèmes dus aux anciennes versions de gcc et de plplot ne pas oublier les options  |   => suggestions : ['']

286 Incohérence : “à” est une préposition. “configure” est un verbe conjugué. => à passer à configure. ( [[gdl#compilation_de_la_version_release|voir compilation de la version release]] ) | configure => suggestions : []
286 Pas d’espace après ce signe. => à passer à configure. ( [[gdl#compilation_de_la_version_release|voir compilation de la version release]] ) | (  => suggestions : ['(']
286 Mot inconnu : gdl => à passer à configure. ( [[gdl#compilation_de_la_version_release|voir compilation de la version release]] ) | gdl
286 Mot inconnu : release => à passer à configure. ( [[gdl#compilation_de_la_version_release|voir compilation de la version release]] ) | release
286 Pas d’espace avant ce signe. => à passer à configure. ( [[gdl#compilation_de_la_version_release|voir compilation de la version release]] ) |  ) => suggestions : [')']

292 Mot inconnu : gdl-0 => ===== Compilation de gdl-0.9rc3 sous 9.04 ===== | gdl-0
292 Mot inconnu : rc3 => ===== Compilation de gdl-0.9rc3 sous 9.04 ===== | rc3

294 Mot inconnu : fftw => Faisons l'hypothèse que la version pré-compilée a déjà été installée. Ceci évitera de devoir ajouter une a une les librairies (fftw, gsl, ...). | fftw
294 Mot inconnu : gsl => Faisons l'hypothèse que la version pré-compilée a déjà été installée. Ceci évitera de devoir ajouter une a une les librairies (fftw, gsl, ...). | gsl
294 Une de ces ponctuations est superflue. => Faisons l'hypothèse que la version pré-compilée a déjà été installée. Ceci évitera de devoir ajouter une a une les librairies (fftw, gsl, ...). | , . => suggestions : [',', '.']
294 Typographie : points de suspension. Utilisez le caractère dédié. => Faisons l'hypothèse que la version pré-compilée a déjà été installée. Ceci évitera de devoir ajouter une a une les librairies (fftw, gsl, ...). | ... => suggestions : ['…']

296 Mot inconnu : TGZ => On récupère le TGZ de la 0.9rc3 sur Sourceforge ... | tgz
296 Mot inconnu : rc3 => On récupère le TGZ de la 0.9rc3 sur Sourceforge ... | rc3
296 Mot inconnu : Sourceforge => On récupère le TGZ de la 0.9rc3 sur Sourceforge ... | sourceforge
296 Typographie : points de suspension. Utilisez le caractère dédié. => On récupère le TGZ de la 0.9rc3 sur Sourceforge ... | ... => suggestions : ['…']

298 Mot inconnu : general => En general, la ligne directe doit suffire ... | general
298 Typographie : points de suspension. Utilisez le caractère dédié. => En general, la ligne directe doit suffire ... | ... => suggestions : ['…']

305 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. => Cependant, il semble (du moins sur mon U 9.04 a moi) que le configure de GDL manque les FFTw, rangées sous /usr. | a => suggestions : ['à']
305 Mot inconnu : GDL => Cependant, il semble (du moins sur mon U 9.04 a moi) que le configure de GDL manque les FFTw, rangées sous /usr. | gdl
305 Mot inconnu : FFTw => Cependant, il semble (du moins sur mon U 9.04 a moi) que le configure de GDL manque les FFTw, rangées sous /usr. | fftw

314 Incohérence avec “du” : “configure” est un verbe. => Dans ce cas, a la fin du configure, quelques lignes donnent des informations importantes sur les librairies effectivement utilisées: | configure => suggestions : ['configurées', 'configurée', 'configuré', 'configurés']

357 Mot inconnu : GDL => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | gdl
357 Mot inconnu : GDL_PATH => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | gdl_path
357 Mot inconnu : GDL_STARTUP => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | gdl_startup
357 Mot inconnu : IDL => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | idl
357 Mot inconnu : GDL => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | gdl
357 Mot inconnu : IDL_PATH => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | idl_path
357 Mot inconnu : IDL_STARTUP => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  | idl_startup
357 Espace(s) en fin de ligne à supprimer. => Ensuite, il faut définir les variables d'environnements de GDL. Il y a deux variables GDL_PATH et GDL_STARTUP. Pour des raisons de compatibilité avec le langage IDL, si ces variables ne sont pas fournies, GDL va aussi considérer IDL_PATH et IDL_STARTUP.  |   => suggestions : ['']

359 Mot inconnu : GDL_PATH => GDL_PATH indique les chemins vers les programmes (fichiers ASCII généralement de suffixe .pro).  | gdl_path
359 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => GDL_PATH indique les chemins vers les programmes (fichiers ASCII généralement de suffixe .pro).  |  . => suggestions : ['. ', '.']
359 Espace(s) en fin de ligne à supprimer. => GDL_PATH indique les chemins vers les programmes (fichiers ASCII généralement de suffixe .pro).  |   => suggestions : ['']

364 Typographie : points de suspension. Utilisez le caractère dédié. => Le petit "+" veut dire qu'on va considérer récursivement tous les sous-répertoires ... | ... => suggestions : ['…']

366 Mot inconnu : Astron => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | astron
366 Mot inconnu : SolarSoft => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | solarsoft
366 Mot inconnu : craigm => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | craigm
366 Mot inconnu : idl => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | idl
366 Mot inconnu : fitting => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | fitting
366 Mot inconnu : html => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | html
366 Mot inconnu : IDL => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | idl
366 Mot inconnu : GDL => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | gdl
366 Mot inconnu : pre => Ces programmes peuvent former de vastes bibliothèques, telles [[https://idlastro.gsfc.nasa.gov/| Astron]] ou SolarSoft, ou de petits outils très connus [[http://cow.physics.wisc.edu/~craigm/idl/fitting.html|MPFIT]]. Ces programmes, écris en syntaxe IDL, sont plus ou moins bien gérés par GDL. Depuis les versions 0.9pre, la plupart des problèmes ont été réglés. | pre

374 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  J'ai mis du temps à comprendre et trouver comment il fallait faire, ma méthode n'est en aucun cas la meilleure vu qu'apparemment je définis à chaque démarrage d'une console les variables au lieu qu'elles soient créées une bonne fois pour toute, mais ça a le mérite de marcher. |   => suggestions : ['']
374 Mettez “toute” au pluriel. Sous-entendu : une fois pour toutes les autres fois. =>  J'ai mis du temps à comprendre et trouver comment il fallait faire, ma méthode n'est en aucun cas la meilleure vu qu'apparemment je définis à chaque démarrage d'une console les variables au lieu qu'elles soient créées une bonne fois pour toute, mais ça a le mérite de marcher. | toute => suggestions : ['toutes']

390 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://gnudatalanguage.sourceforge.net|Site officiel]]  |    => suggestions : ['']
390 Espace(s) en fin de ligne à supprimer. =>   * **(en)** [[http://gnudatalanguage.sourceforge.net|Site officiel]]  |   => suggestions : ['']

391 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://linuxfr.org/2005/10/19/19756.html| une dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.8.11 de GDL |    => suggestions : ['']
391 Mot inconnu : LinuxFr =>   * **(fr)** [[http://linuxfr.org/2005/10/19/19756.html| une dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.8.11 de GDL | linuxfr
391 Mot inconnu : GDL =>   * **(fr)** [[http://linuxfr.org/2005/10/19/19756.html| une dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.8.11 de GDL | gdl

392 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://linuxfr.org/2007/07/10/22715.html| une autre dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.9pre5 de GDL |    => suggestions : ['']
392 Mot inconnu : LinuxFr =>   * **(fr)** [[http://linuxfr.org/2007/07/10/22715.html| une autre dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.9pre5 de GDL | linuxfr
392 Mot inconnu : pre5 =>   * **(fr)** [[http://linuxfr.org/2007/07/10/22715.html| une autre dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.9pre5 de GDL | pre5
392 Mot inconnu : GDL =>   * **(fr)** [[http://linuxfr.org/2007/07/10/22715.html| une autre dépêche]] sur [[http://linuxfr.org| LinuxFr.org]] à l'occasion de la version 0.9pre5 de GDL | gdl

393 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/memo_GDL.html| comment réussir à installer GDL]] sous [[Linux]] ou Mac OS X |    => suggestions : ['']
393 Mot inconnu : IDL_et_GDL =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/memo_GDL.html| comment réussir à installer GDL]] sous [[Linux]] ou Mac OS X | idl_et_gdl
393 Mot inconnu : memo_GDL =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/memo_GDL.html| comment réussir à installer GDL]] sous [[Linux]] ou Mac OS X | memo_gdl
393 Mot inconnu : html =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/memo_GDL.html| comment réussir à installer GDL]] sous [[Linux]] ou Mac OS X | html
393 Mot inconnu : GDL =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/memo_GDL.html| comment réussir à installer GDL]] sous [[Linux]] ou Mac OS X | gdl

394 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://www.sgeier.net/tools/GDL-intro.pdf| un tutoriel des commandes de base]] |    => suggestions : ['']

395 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... |    => suggestions : ['']
395 Mot inconnu : IDL_et_GDL =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... | idl_et_gdl
395 Mot inconnu : Matrice_IDLvsGDL_intrinsic =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... | matrice_idlvsgdl_intrinsic
395 Mot inconnu : html =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... | html
395 Mot inconnu : IDL =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... | idl
395 Mot inconnu : GDL =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... | gdl
395 Typographie : points de suspension. Utilisez le caractère dédié. =>   * **(fr)** [[http://aramis.obspm.fr/~coulais/IDL_et_GDL/Matrice_IDLvsGDL_intrinsic.html| une liste des fonctions intrinsèques]] d'IDL disponibles dans GDL. Attention, certains mots-clef peuvent, il peut rester des bugs ... | ... => suggestions : ['…']

396 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://packages.ubuntu.com/fr/hardy/interpreters/gnudatalanguage|les dépendances de GDL]] |    => suggestions : ['']
396 Mot inconnu : GDL =>   * **(en)** [[https://packages.ubuntu.com/fr/hardy/interpreters/gnudatalanguage|les dépendances de GDL]] | gdl
