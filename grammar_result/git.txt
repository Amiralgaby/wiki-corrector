
9 Espace(s) en fin de ligne à supprimer. => **Git** est un logiciel de gestion de versions décentralisé. Il est conçu pour être efficace tant avec les petits projets, que les plus importants.  <|>   => suggestions : ['']

11 Mot inconnu : linux => Git a spécialement été créé pour le développement du noyau linux.  <|> linux
11 Espace(s) en fin de ligne à supprimer. => Git a spécialement été créé pour le développement du noyau linux.  <|>   => suggestions : ['']

13 Mot inconnu : Torvalds => Ce projet a débuté en 2005, Linus Torvalds voulait créer une alternative au logiciel propriétaire BitKeeper. Depuis, Git a beaucoup évolué et est utilisé par de nombreux projets. <|> torvalds
13 Mot inconnu : BitKeeper => Ce projet a débuté en 2005, Linus Torvalds voulait créer une alternative au logiciel propriétaire BitKeeper. Depuis, Git a beaucoup évolué et est utilisé par de nombreux projets. <|> bitkeeper

15 Mot inconnu : SVN => Contrairement à des outils comme SVN ou CVS, Git fonctionne de façon décentralisée, c'est-à-dire que le développement ne se fait pas sur un serveur centralisé, mais chaque personne peut développer sur son propre dépôt. Git facilite ensuite la fusion (//merge//) des différents dépôts. <|> svn
15 Mot inconnu : CVS => Contrairement à des outils comme SVN ou CVS, Git fonctionne de façon décentralisée, c'est-à-dire que le développement ne se fait pas sur un serveur centralisé, mais chaque personne peut développer sur son propre dépôt. Git facilite ensuite la fusion (//merge//) des différents dépôts. <|> cvs
15 Mot inconnu : merge => Contrairement à des outils comme SVN ou CVS, Git fonctionne de façon décentralisée, c'est-à-dire que le développement ne se fait pas sur un serveur centralisé, mais chaque personne peut développer sur son propre dépôt. Git facilite ensuite la fusion (//merge//) des différents dépôts. <|> merge
22 Mot inconnu : git-lfs =>   * [[apt>git-lfs]] : Gestion des //gros// fichiers, notamment binaires (large file storage) ([[https://github.com/git-lfs/git-lfs/wiki/Tutorial|tuto (en)]]) <|> git-lfs
22 Mot inconnu : storage =>   * [[apt>git-lfs]] : Gestion des //gros// fichiers, notamment binaires (large file storage) ([[https://github.com/git-lfs/git-lfs/wiki/Tutorial|tuto (en)]]) <|> storage

29 Espace(s) en fin de ligne à supprimer. => <file bash> [user]  <|>   => suggestions : ['']

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  [alias]  <|>   => suggestions : ['']
33 Espace(s) en fin de ligne à supprimer. =>  [alias]  <|>   => suggestions : ['']

40 Incohérence avec “de” : “git” est une forme verbale conjuguée. => Avec les récentes versions de git (notamment la v2.25), les messages retournés par git sont assez bien traduits. Mais pour remonter des problèmes sur des forums ou dépôts en anglais, ça peut-être bien de pouvoir les avoir en anglais.\\ <|> git => suggestions : ['gisant']
40 Incohérence avec “par” : “git” est une forme verbale conjuguée. => Avec les récentes versions de git (notamment la v2.25), les messages retournés par git sont assez bien traduits. Mais pour remonter des problèmes sur des forums ou dépôts en anglais, ça peut-être bien de pouvoir les avoir en anglais.\\ <|> git => suggestions : ['gisant']

42 Mot inconnu : bash_aliases => dans votre fichier //~/.bash_aliases//, ajouter, par exemple, la ligne :\\ <|> bash_aliases

46 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => ainsi, **git** continue a retourner des commentaires en français, et **giten** les retournent en anglais. <|> a => suggestions : ['à']
46 Incohérence probable avec “a” : “retourner” n’est pas un participe passé. => ainsi, **git** continue a retourner des commentaires en français, et **giten** les retournent en anglais. <|> retourner => suggestions : ['retourné']
46 Mot inconnu : giten => ainsi, **git** continue a retourner des commentaires en français, et **giten** les retournent en anglais. <|> giten

51 Espace(s) en fin de ligne à supprimer. => Avant de commencer à utiliser Git, il faut lui demander de créer un nouveau dépôt.  <|>   => suggestions : ['']

80 S’il s’agit d’un impératif, mettez un trait d’union. => Liste les //commits// effectués dans le dépôt. Vous pourrez ainsi voir les modifications qui ont été faites. <|> liste les => suggestions : ['Liste-les']

86 Guillemets typographiques ouvrants. => Cette commande indique à Git que le fichier (ou dossier) nommé "nom_fichier_ou_dossier" devra être versionné. <|> " => suggestions : ['«\xa0', '“']
86 Mot inconnu : nom_fichier_ou_dossier => Cette commande indique à Git que le fichier (ou dossier) nommé "nom_fichier_ou_dossier" devra être versionné. <|> nom_fichier_ou_dossier
86 Guillemets typographiques fermants. => Cette commande indique à Git que le fichier (ou dossier) nommé "nom_fichier_ou_dossier" devra être versionné. <|> " => suggestions : ['\xa0»', '”']

104 Il manque un trait d’union. => Met à jour votre dépôt local (à faire avant de commencer à modifier des fichiers pour être sûr de travailler sur leurs dernières versions et avant tout //commit// pour éviter les éventuels conflits avec des modifications effectuées par d'autres utilisateurs entre temps). <|> entre temps => suggestions : ['entre-temps']

119 S’il s’agit d’un impératif, mettez un trait d’union. => Envoie le //commit// dans la branche principale "master" du dépôt "origin". <|> envoie le => suggestions : ['Envoie-le']
119 Guillemets typographiques ouvrants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin". <|> " => suggestions : ['«\xa0', '“']
119 Guillemets typographiques fermants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin". <|> " => suggestions : ['\xa0»', '”']
119 Guillemets typographiques ouvrants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin". <|> " => suggestions : ['«\xa0', '“']
119 Mot inconnu : origin => Envoie le //commit// dans la branche principale "master" du dépôt "origin". <|> origin
119 Guillemets typographiques fermants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin". <|> " => suggestions : ['\xa0»', '”']

124 Espace(s) surnuméraire(s) à supprimer. => ^ Commande                                                               ^ Effet                                                                                     ^ <|>                                                                 => suggestions : [' ']
124 Espace(s) surnuméraire(s) à supprimer. => ^ Commande                                                               ^ Effet                                                                                     ^ <|>                                                                                       => suggestions : [' ']

134 Mot inconnu : github => Ici, nous supposerons qu'on travaille avec deux dépôts Git distincts nommés respectivement moi et bob. Le dépôt moi est votre dépôt, bob est celui d'une autre personne, admettons qu'il est situé à l'adresse [[git://github.com/bob]] <|> github

138 Mot inconnu : merges => Git permet une gestion efficace des branches, et des //merges// (fusion de branches). Les branches permettent d'avoir simultanément plusieurs versions de votre programme dans votre dépôt Git. C'est très utile, par exemple pour développer une nouvelle fonctionnalité, tout en gardant la branche principale intacte. Ainsi, vous pouvez toujours faire des changements dans la branche principale (corrections de bugs par exemple), tout en développant en parallèle une nouvelle fonctionnalité. <|> merges

142 Guillemets typographiques ouvrants. => Crée une nouvelle branche nommée "test". <|> " => suggestions : ['«\xa0', '“']
142 Guillemets typographiques fermants. => Crée une nouvelle branche nommée "test". <|> " => suggestions : ['\xa0»', '”']

150 Guillemets typographiques ouvrants. => Change de branche. Après cette commande, vous aurez alors accès aux fichiers présents dans la branche nommée "nom_branche". <|> " => suggestions : ['«\xa0', '“']
150 Mot inconnu : nom_branche => Change de branche. Après cette commande, vous aurez alors accès aux fichiers présents dans la branche nommée "nom_branche". <|> nom_branche
150 Guillemets typographiques fermants. => Change de branche. Après cette commande, vous aurez alors accès aux fichiers présents dans la branche nommée "nom_branche". <|> " => suggestions : ['\xa0»', '”']

155 Guillemets typographiques ouvrants. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//.  <|> " => suggestions : ['«\xa0', '“']
155 Mot inconnu : nom_branche => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//.  <|> nom_branche
155 Guillemets typographiques fermants. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//.  <|> " => suggestions : ['\xa0»', '”']
155 Il faut élider “si” et l’accoler au pronom. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//.  <|> si  => suggestions : ['S’']
155 Mot inconnu : merge => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//.  <|> merge
155 Espace(s) en fin de ligne à supprimer. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//.  <|>   => suggestions : ['']
179 Mot inconnu : blame =>   * **(en)** [[https://github.com/krig/git-age|git-age]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/5_trouver_les_probl%25C3%25A8mes_-_git_blame.html|git blame]] (PyGTK) <|> blame
179 Mot inconnu : PyGTK =>   * **(en)** [[https://github.com/krig/git-age|git-age]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/5_trouver_les_probl%25C3%25A8mes_-_git_blame.html|git blame]] (PyGTK) <|> pygtk
183 Mot inconnu : gitg =>   * [[apt>gitg]] (GTK+) <|> gitg
184 Mot inconnu : gitk =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git <|> gitk
184 Mot inconnu : Tcl =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git <|> tcl
184 Mot inconnu : Tk =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git <|> tk
185 Mot inconnu : qgit =>   * [[apt>qgit]] (Qt) <|> qgit
190 Mot inconnu : Team =>   * **(en)** [[http://www.devslashzero.com/teamgit|Team Git]] (Qt) <|> team
198 Mot inconnu : Gitolite =>   * **(fr)** [[https://gogs.io/|Gogs]]: serveur de gestion de dépôts comme Gitolite avec interface http(s) inclus par défaut. <|> gitolite
198 Écriture invariable. Utilisez un point médian. =>   * **(fr)** [[https://gogs.io/|Gogs]]: serveur de gestion de dépôts comme Gitolite avec interface http(s) inclus par défaut. <|> http(s) => suggestions : ['http·s']
210 Incohérence avec “de” : “git” est une forme verbale conjuguée. =>   * **(en)** [[https://git-scm.com/|Le site officiel de git maintenu par Scott Chacon]] ; <|> git => suggestions : ['gisant']
210 Mot inconnu : Chacon =>   * **(en)** [[https://git-scm.com/|Le site officiel de git maintenu par Scott Chacon]] ; <|> chacon
212 Incohérence avec “de” : “git” est une forme verbale conjuguée. =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ; <|> git => suggestions : ['gisant']
212 Mot inconnu : Petr =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ; <|> petr
212 Mot inconnu : Baudis =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ; <|> baudis
215 Si vous parlez de la langue, pas de majuscule. =>   * **(fr)** [[http://gitimmersion.fr|Git immersion en français]], un des guides références anglais traduit en Français <|> français => suggestions : ['français']
218 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * [[http://github.com|GitHub]] : très bon dépôt gratuit. Une bonne gestion du travail en équipe, avec la possibilité de forker un dépôt, pour contribuer au développement sur son propre dépôt, tout en gardant un contact étroit avec le dépôt original. Appartient à microsoft depuis 2018. <|> appartient => suggestions : ['Appartiens']
218 Mot inconnu : microsoft =>   * [[http://github.com|GitHub]] : très bon dépôt gratuit. Une bonne gestion du travail en équipe, avec la possibilité de forker un dépôt, pour contribuer au développement sur son propre dépôt, tout en gardant un contact étroit avec le dépôt original. Appartient à microsoft depuis 2018. <|> microsoft
219 S’il s’agit de la préposition « à », il faut accentuer la majuscule. =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches. <|> a => suggestions : ['À']
219 Mot inconnu : gitorious =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches. <|> gitorious
219 Mot inconnu : GitHub =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches. <|> github
220 Mot inconnu : Github =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction). <|> github
220 Mot inconnu : __dépôts =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction). <|> __dépôts
220 Mot inconnu : privés__ =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction). <|> privés__
220 Confusion : “a” est une forme conjuguée de “avoir”. Pour la préposition, écrivez “à”. =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction). <|> a => suggestions : ['à']
221 Il manque un espace. =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]]. <|> comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail => suggestions : [' comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail']
221 Mot inconnu : comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]]. <|> comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail
221 Mot inconnu : Gitlab-ce =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]]. <|> gitlab-ce
223 Mot inconnu : GitLab =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub. <|> gitlab
223 Mot inconnu : FramaSoft =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub. <|> framasoft
223 Mot inconnu : GitHub =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub. <|> github
226 Mot inconnu : bzr =>   * **(fr)** Discussion [[https://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr. <|> bzr
226 Mot inconnu : ubuntu-fr =>   * **(fr)** Discussion [[https://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr. <|> ubuntu-fr
229 Mot inconnu : developpement =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]] <|> developpement
229 Il manque un espace. =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]] <|> start => suggestions : [' start']
229 Mot inconnu : start =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]] <|> start
