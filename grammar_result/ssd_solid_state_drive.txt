36 Mot inconnu : OCZ [[161:164]] =>   * une technologie qui a moins fait ses preuves par rapports aux disques durs qui sont massivement produits et utilisés depuis les années 80 (nombre de disques OCZ notamment ont eu de gros problèmes de fiabilité à long terme non liés à l'usure) ; <|> ocz
37 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[4:7]] =>   * une durée de vie limitée par le nombre de cycles lecture/écriture auxquels sont soumises les puces mémoire.\\ **C'est ce problème que nous allons réduire au maximum en utilisant au mieux Ubuntu.** <|> une => suggestions : Une

40 Guillemets typographiques ouvrants. [[0:1]] => "un SSD, ce n'est pas plus « fragile » qu'un disque mécanique. Certaines études tendraient même à montrer l'inverse." ** <|> " => suggestions : « “
40 Guillemets typographiques fermants. [[116:117]] => "un SSD, ce n'est pas plus « fragile » qu'un disque mécanique. Certaines études tendraient même à montrer l'inverse." ** <|> " => suggestions :  »”

44 Guillemets typographiques ouvrants. [[21:22]] => === Ramasse-miettes ("Garbage collector") === <|> " => suggestions : « “
44 Mot inconnu : Garbage [[22:29]] => === Ramasse-miettes ("Garbage collector") === <|> garbage
44 Guillemets typographiques fermants. [[39:40]] => === Ramasse-miettes ("Garbage collector") === <|> " => suggestions :  »”

49 Guillemets typographiques ouvrants. [[28:29]] => === Égalisation de l'usure ("Wear levelling") === <|> " => suggestions : « “
49 Mot inconnu : Wear [[29:33]] => === Égalisation de l'usure ("Wear levelling") === <|> wear
49 Mot inconnu : levelling [[34:43]] => === Égalisation de l'usure ("Wear levelling") === <|> levelling
49 Guillemets typographiques fermants. [[43:44]] => === Égalisation de l'usure ("Wear levelling") === <|> " => suggestions :  »”

51 Accord de nombre erroné : « même » devrait être au pluriel. [[160:164]] => C'est un procédé utilisé par les contrôleurs de disques SSD. Elle consiste à répartir l'usure des puces mémoires en écrivant le moins souvent possible dans les même cellules, et en profitant ainsi au maximum du nombre de cycles de lecture-écriture de chacune des cellules. De ce fait, avec un bon algorithme d'égalisation de l'usure, on arrive à faire en sorte qu'un disque électronique ait une durée de vie de l'ordre de plusieurs années. <|> même => suggestions : mêmes

55 Mot inconnu : TRIM [[12:16]] => La commande TRIM que nous verrons plus tard, permet d'augmenter la quantité de cellules considérés comme vides par le disque électronique et donc d'améliorer cette opération. Si la prise en charge de la commande TRIM est active : plus le disque électronique contient d'espace vide, plus l'usure sera gérée de manière optimale. <|> trim
55 Mot inconnu : TRIM [[212:216]] => La commande TRIM que nous verrons plus tard, permet d'augmenter la quantité de cellules considérés comme vides par le disque électronique et donc d'améliorer cette opération. Si la prise en charge de la commande TRIM est active : plus le disque électronique contient d'espace vide, plus l'usure sera gérée de manière optimale. <|> trim

65 Mot inconnu : TRIM [[16:20]] => === La commande TRIM === <|> trim

67 Si “Kio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[48:53]] => Les disques électroniques écrivent par blocs de 4 Kio, mais effacent par blocs de 128 ou 512 Kio, ce qui impose alors de nombreuses lectures ou de nombreux déplacements pour effacer des blocs, et donc une baisse énorme des performances du disque. <|> 4 kio => suggestions : 4 Kio
67 Si “Kio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[89:96]] => Les disques électroniques écrivent par blocs de 4 Kio, mais effacent par blocs de 128 ou 512 Kio, ce qui impose alors de nombreuses lectures ou de nombreux déplacements pour effacer des blocs, et donc une baisse énorme des performances du disque. <|> 512 kio => suggestions : 512 Kio

68 Mot inconnu : TRIM [[12:16]] => La commande TRIM tend à réduire, voire à supprimer, cette baisse de performance grâce au travail en commun du système d'exploitation et du disque électronique. <|> trim
70 Mot inconnu : SATA [[25:29]] =>   * Presque tous les SSD SATA le prennent en charge, même les plus anciens. <|> sata
71 Mot inconnu : GFS2 [[88:92]] =>   * Linux le prend en charge totalement à partir du noyau 2.6.33 avec ext4, Btrfs, FAT, GFS2, XFS, etc. <|> gfs2
71 Mot inconnu : XFS [[94:97]] =>   * Linux le prend en charge totalement à partir du noyau 2.6.33 avec ext4, Btrfs, FAT, GFS2, XFS, etc. <|> xfs

74 Mot inconnu : TRIM [[18:22]] => ===== La commande TRIM : activation et utilisation ===== <|> trim

77 Mot inconnu : TRIM [[12:16]] => La commande TRIM à la volée est **activées-trim-ssd-drives** <|> trim
77 Mot inconnu : activées-trim-ssd-drives [[34:58]] => La commande TRIM à la volée est **activées-trim-ssd-drives** <|> activées-trim-ssd-drives

80 Guillemets typographiques ouvrants. [[60:61]] => **Contrairement à ce qui est souvent dit, tous les SSD sont "TRIMé" par défaut à partir de 14.04 LTS.** <|> " => suggestions : « “
80 Mot inconnu : TRIMé [[61:66]] => **Contrairement à ce qui est souvent dit, tous les SSD sont "TRIMé" par défaut à partir de 14.04 LTS.** <|> trimé
80 Guillemets typographiques fermants. [[66:67]] => **Contrairement à ce qui est souvent dit, tous les SSD sont "TRIMé" par défaut à partir de 14.04 LTS.** <|> " => suggestions :  »”

81 Si “Seul” se réfère au substantif “rares”, il faut le mettre au pluriel. [[0:4]] => Seul quelques rares SSD ont été blacklistés à cause de bugs de firmware les concernant (On peut souvent lire que seuls les Intel et Samsung ont le TRIM à la volée actif par défaut, ce qui n'était le cas que pour une version de développement d'Ubuntu 14.04, la restriction a été retirée après des tests supplémentaires dans la version finale). <|> seul => suggestions : Seuls
81 Mot inconnu : TRIM [[147:151]] => Seul quelques rares SSD ont été blacklistés à cause de bugs de firmware les concernant (On peut souvent lire que seuls les Intel et Samsung ont le TRIM à la volée actif par défaut, ce qui n'était le cas que pour une version de développement d'Ubuntu 14.04, la restriction a été retirée après des tests supplémentaires dans la version finale). <|> trim

83 Mot inconnu : TRIM [[55:59]] => Vous pouvez vérifier la prise en charge de la commande TRIM par votre SSD par la commande suivante où vous remplacez **/dev/sda** par l'identifiant de votre disque : <|> trim

87 Mot inconnu : TRIM [[40:44]] => Une sortie vide indique que la commande TRIM n'est **PAS** prise en charge par votre disque électronique. <|> trim

88 Mot inconnu : TRIM [[76:80]] => Sinon, une ligne doit clairement indiquer la prise en charge de la commande TRIM. <|> trim

94 Mot inconnu : TRIM [[17:21]] => ==== La commande TRIM à la volée du côté kernel ==== <|> trim
96 Mot inconnu : TRIM [[65:69]] => Notez encore une fois que **depuis Ubuntu 14.04 LTS, la commande TRIM est activée par défaut**((Source : https://www.leaseweblabs.com/2013/12/ubuntu-14-04-lts-supports-trim-ssd-drives/)). L'usage de la méthode décrite ici n'est pas recommandée actuellement par Ubuntu. <|> trim

105 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[0:7]] => devient : <|> devient => suggestions : deviens

110 Mot inconnu : TRIM [[39:43]] => Dès le prochain démarrage, la commande TRIM sera activée de façon entièrement transparente. <|> trim
115 Mot inconnu : TRIM [[199:203]] => Justification : Si le disque électronique est constamment réécrit, il peut rapidement venir à bout de blocs vierges et donc les performances reviendront au même à ce qu'elles seraient si la commande TRIM n'était pas exécutée avec la méthode du script ...  \\ FIXME : C'est pourtant la méthode qui semble actuellement implémentée et conseillée par ubuntu et d'autres distributions (modulo le fait que le cron est hebdomadaire). <|> trim
115 Typographie : points de suspension. Utilisez le caractère dédié. [[251:254]] => Justification : Si le disque électronique est constamment réécrit, il peut rapidement venir à bout de blocs vierges et donc les performances reviendront au même à ce qu'elles seraient si la commande TRIM n'était pas exécutée avec la méthode du script ...  \\ FIXME : C'est pourtant la méthode qui semble actuellement implémentée et conseillée par ubuntu et d'autres distributions (modulo le fait que le cron est hebdomadaire). <|> ... => suggestions : …
115 Espace(s) surnuméraire(s) à supprimer. [[254:256]] => Justification : Si le disque électronique est constamment réécrit, il peut rapidement venir à bout de blocs vierges et donc les performances reviendront au même à ce qu'elles seraient si la commande TRIM n'était pas exécutée avec la méthode du script ...  \\ FIXME : C'est pourtant la méthode qui semble actuellement implémentée et conseillée par ubuntu et d'autres distributions (modulo le fait que le cron est hebdomadaire). <|>    => suggestions :  

118 Mot inconnu : TRIM [[16:20]] => ==== Activer le TRIM avec fstrim ==== <|> trim
118 Mot inconnu : fstrim [[26:32]] => ==== Activer le TRIM avec fstrim ==== <|> fstrim

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>  

120 Mot inconnu : discard [[74:81]] => Il n'est pas recommandé le montage des fichiers systèmes avec l'option "**discard**", car cela se traduira probablement par une baisse des performances en utilisation normale. Cependant, vous pouvez utiliser TRIM en exécutant la commande **fstrim** occasionnellement ou de créer votre propre tâche cron qui exécute fstrim via un calendrier. <|> discard
120 Mot inconnu : TRIM [[208:212]] => Il n'est pas recommandé le montage des fichiers systèmes avec l'option "**discard**", car cela se traduira probablement par une baisse des performances en utilisation normale. Cependant, vous pouvez utiliser TRIM en exécutant la commande **fstrim** occasionnellement ou de créer votre propre tâche cron qui exécute fstrim via un calendrier. <|> trim
120 Mot inconnu : fstrim [[240:246]] => Il n'est pas recommandé le montage des fichiers systèmes avec l'option "**discard**", car cela se traduira probablement par une baisse des performances en utilisation normale. Cependant, vous pouvez utiliser TRIM en exécutant la commande **fstrim** occasionnellement ou de créer votre propre tâche cron qui exécute fstrim via un calendrier. <|> fstrim
120 Mot inconnu : fstrim [[315:321]] => Il n'est pas recommandé le montage des fichiers systèmes avec l'option "**discard**", car cela se traduira probablement par une baisse des performances en utilisation normale. Cependant, vous pouvez utiliser TRIM en exécutant la commande **fstrim** occasionnellement ou de créer votre propre tâche cron qui exécute fstrim via un calendrier. <|> fstrim

122 Mot inconnu : TRIM [[16:20]] => Pour activer le TRIM de votre SSD sur Ubuntu, il suffit d'ouvrir un terminal et exécutez la commande suivante : <|> trim

130 Mot inconnu : TRIM [[187:191]] => Cela dépend de combien de fois des fichiers sont supprimés à partir de votre SSD. Vous verrez une erreur si vous essayez d'exécuter la commande avec un lecteur qui ne prend pas en charge TRIM. <|> trim

132 Mot inconnu : TRIM [[27:31]] => Si vous souhaitez exécuter TRIM régulièrement, vous pouvez simplement créer une tâche cron qui exécute la commande fstrim pour vous. <|> trim
132 Mot inconnu : fstrim [[115:121]] => Si vous souhaitez exécuter TRIM régulièrement, vous pouvez simplement créer une tâche cron qui exécute la commande fstrim pour vous. <|> fstrim

150 Mot inconnu : fstrim [[30:36]] => Ubuntu va maintenant lancer **fstrim** via un calendrier, comme il le fait pour d'autres tâches de maintenance du système. <|> fstrim
150 Confusion probable. Une tâche est un travail à accomplir. Pour une salissure, une altération, une marque, une coloration… employez “tache”. [[89:95]] => Ubuntu va maintenant lancer **fstrim** via un calendrier, comme il le fait pour d'autres tâches de maintenance du système. <|> tâches => suggestions : taches

154 Mot inconnu : TRIM [[17:21]] => ==== La commande TRIM manuelle ==== <|> trim

157 Mot inconnu : TRIM [[40:44]] => Il est conseillé d'exécuter la commande TRIM manuellement environ une fois par mois pour une utilisation normale du disque électronique. <|> trim

158 Mot inconnu : TRIM [[34:38]] => On ne peut pas lancer la commande TRIM manuellement sur une partition utilisée. Il faudra donc amorcer le système d'une clef USB autonome ou d'un disque dur externe. <|> trim

160 Mot inconnu : wiper [[33:38]] => Nous allons utiliser le script **wiper.sh** qui est fourni avec le paquet **hdparm**. Il faut la version 9.28 ou une plus récente de hdparm. On peut vérifier la version dans un terminal : <|> wiper
160 Mot inconnu : sh [[39:41]] => Nous allons utiliser le script **wiper.sh** qui est fourni avec le paquet **hdparm**. Il faut la version 9.28 ou une plus récente de hdparm. On peut vérifier la version dans un terminal : <|> sh
160 Mot inconnu : hdparm [[76:82]] => Nous allons utiliser le script **wiper.sh** qui est fourni avec le paquet **hdparm**. Il faut la version 9.28 ou une plus récente de hdparm. On peut vérifier la version dans un terminal : <|> hdparm
160 Mot inconnu : hdparm [[133:139]] => Nous allons utiliser le script **wiper.sh** qui est fourni avec le paquet **hdparm**. Il faut la version 9.28 ou une plus récente de hdparm. On peut vérifier la version dans un terminal : <|> hdparm

165 Mot inconnu : hdparm [[71:77]] => Il est fortement conseillé d'utiliser les sources les plus récentes de hdparm (pour moins de risques d'incompatibilité…) ; ce qui implique de télécharger et de recompiler les sources du paquet hdparm. Vous serez guidés : <|> hdparm
165 Mot inconnu : hdparm [[193:199]] => Il est fortement conseillé d'utiliser les sources les plus récentes de hdparm (pour moins de risques d'incompatibilité…) ; ce qui implique de télécharger et de recompiler les sources du paquet hdparm. Vous serez guidés : <|> hdparm

182 Mot inconnu : hdparm [[50:56]] => Il faut malheureusement recompiler et réinstaller hdparm à chaque démarrage sur la clef USB (à moins d'avoir une clef USB en mode persistant). <|> hdparm

186 Mot inconnu : TRIM [[17:21]] => ==== La commande TRIM d'un volume NTFS ==== <|> trim

201 Mot inconnu : TRIM [[89:93]] => Si tout se passe bien pendant la simulation, vous pouvez exécuter réellement la commande TRIM : <|> trim
218 Mot inconnu : HFS [[214:217]] => Il faut malgré tout préciser que les disques électroniques ont été conçus pour être utilisés sur des systèmes d'exploitations modernes, utilisant tous des systèmes de fichiers journalisés, comme NTFS sous Windows, HFS+ sous Mac OS X, et Ext4 sous GNU-Linux. <|> hfs
225 Mot inconnu : ReiserFS [[376:384]] => Néanmoins, ce qui ressort des discussions sur la toile et des déclarations des fabricants autant que des sites spécialisés est que l'égalisation de l'usure permet de s'affranchir de ce problème, en gérant directement au niveau du contrôleur (un petit processeur en interne dans le disque électronique) l'usure des puces mémoire. L'utilisation des systèmes de fichiers Ext4 ou ReiserFS ne devrait donc poser aucun problème sur les disques électroniques assez récents (à partir de 2016 ???), qui incorporent une bonne gestion de l'égalisation de l'usure. <|> reiserfs

228 Mot inconnu : TRIM [[73:77]] => Sur les disques électroniques actuels, la prise en charge de la commande TRIM a une conséquence bien plus bénéfique sur leur durée de vie que l’absence de journalisation. <|> trim

236 S’il s’agit d’une action que le sujet veut accomplir, le verbe devrait être à l’infinitif. [[23:29]] => Si vous le voulez vous pouvez donc désactiver la journalisation de Ext4. <|> pouvez => suggestions : pouvoir

249 Mot inconnu : POSIX [[13:18]] => Les systèmes POSIX ont l'intérêt d'identifier clairement **/var** comme le dossier système dont les fichiers sont modifiés le plus fréquemment. <|> posix

250 Si “tours/minute” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[278:295]] => Ainsi, si l'on monte **/var** et **/home** sur les partitions d'un disque mécanique, l'usure du SSD sur lequel est monté la racine du système est grandement réduite. Par ailleurs, si le disque mécanique ne contient que **/var** et **/home**, il peut tourner à faible vitesse (< 6000 tours/minute) pour réduire la consommation, le bruit et l'usure mécanique. <|> 6000 tours/minute => suggestions : 6 000 tours/minute

252 Espace(s) surnuméraire(s) à supprimer. [[75:77]] => <note warning>Les SSD ont, en 2022, une taille importante et /home contient  de plus en plus en plus de logiciels... Il est devenu inutile de mettre le répertoire home dans une partition dédiée surtout dans un disque dur. </note><note warning>N'y a-t-il pas contradiction  en disant que le répertoire /var peut être  installé dans un disque mécanique tournant à faible vitesse alors   qu'il serait le répertoire le plus sollicité??? </note> <|>    => suggestions :  
252 Typographie : points de suspension. Utilisez le caractère dédié. [[113:116]] => <note warning>Les SSD ont, en 2022, une taille importante et /home contient  de plus en plus en plus de logiciels... Il est devenu inutile de mettre le répertoire home dans une partition dédiée surtout dans un disque dur. </note><note warning>N'y a-t-il pas contradiction  en disant que le répertoire /var peut être  installé dans un disque mécanique tournant à faible vitesse alors   qu'il serait le répertoire le plus sollicité??? </note> <|> ... => suggestions : …
252 Espace(s) surnuméraire(s) à supprimer. [[271:273]] => <note warning>Les SSD ont, en 2022, une taille importante et /home contient  de plus en plus en plus de logiciels... Il est devenu inutile de mettre le répertoire home dans une partition dédiée surtout dans un disque dur. </note><note warning>N'y a-t-il pas contradiction  en disant que le répertoire /var peut être  installé dans un disque mécanique tournant à faible vitesse alors   qu'il serait le répertoire le plus sollicité??? </note> <|>    => suggestions :  
252 Espace(s) surnuméraire(s) à supprimer. [[315:317]] => <note warning>Les SSD ont, en 2022, une taille importante et /home contient  de plus en plus en plus de logiciels... Il est devenu inutile de mettre le répertoire home dans une partition dédiée surtout dans un disque dur. </note><note warning>N'y a-t-il pas contradiction  en disant que le répertoire /var peut être  installé dans un disque mécanique tournant à faible vitesse alors   qu'il serait le répertoire le plus sollicité??? </note> <|>    => suggestions :  
252 Espace(s) surnuméraire(s) à supprimer. [[382:385]] => <note warning>Les SSD ont, en 2022, une taille importante et /home contient  de plus en plus en plus de logiciels... Il est devenu inutile de mettre le répertoire home dans une partition dédiée surtout dans un disque dur. </note><note warning>N'y a-t-il pas contradiction  en disant que le répertoire /var peut être  installé dans un disque mécanique tournant à faible vitesse alors   qu'il serait le répertoire le plus sollicité??? </note> <|>     => suggestions :  
264 Espace(s) surnuméraire(s) à supprimer. [[40:42]] => === Mettre « /var/log/ » en mémoire vive  === <|>    => suggestions :  

286 Mot inconnu : __précédentes__ [[67:82]] => Vu l'utilité **considérable**, en dépannage, des logs des sessions __précédentes__, mettre /var/log en mémoire vive est un choix très **contestable**, sinon aberrant.\\ À chacun de choisir entre **léger** gain de rapidité et **fiabilité**.\\ \\ Nota : on peut aussi mettre /var/log sur le __disque classique__ (ou, à défaut car c'est un peu moins rapide et moins durable, sur une __carte mémoire__). <|> __précédentes__
286 Mot inconnu : __disque [[289:297]] => Vu l'utilité **considérable**, en dépannage, des logs des sessions __précédentes__, mettre /var/log en mémoire vive est un choix très **contestable**, sinon aberrant.\\ À chacun de choisir entre **léger** gain de rapidité et **fiabilité**.\\ \\ Nota : on peut aussi mettre /var/log sur le __disque classique__ (ou, à défaut car c'est un peu moins rapide et moins durable, sur une __carte mémoire__). <|> __disque
286 Mot inconnu : classique__ [[298:309]] => Vu l'utilité **considérable**, en dépannage, des logs des sessions __précédentes__, mettre /var/log en mémoire vive est un choix très **contestable**, sinon aberrant.\\ À chacun de choisir entre **léger** gain de rapidité et **fiabilité**.\\ \\ Nota : on peut aussi mettre /var/log sur le __disque classique__ (ou, à défaut car c'est un peu moins rapide et moins durable, sur une __carte mémoire__). <|> classique__
286 Mot inconnu : __carte [[380:387]] => Vu l'utilité **considérable**, en dépannage, des logs des sessions __précédentes__, mettre /var/log en mémoire vive est un choix très **contestable**, sinon aberrant.\\ À chacun de choisir entre **léger** gain de rapidité et **fiabilité**.\\ \\ Nota : on peut aussi mettre /var/log sur le __disque classique__ (ou, à défaut car c'est un peu moins rapide et moins durable, sur une __carte mémoire__). <|> __carte
286 Mot inconnu : mémoire__ [[388:397]] => Vu l'utilité **considérable**, en dépannage, des logs des sessions __précédentes__, mettre /var/log en mémoire vive est un choix très **contestable**, sinon aberrant.\\ À chacun de choisir entre **léger** gain de rapidité et **fiabilité**.\\ \\ Nota : on peut aussi mettre /var/log sur le __disque classique__ (ou, à défaut car c'est un peu moins rapide et moins durable, sur une __carte mémoire__). <|> mémoire__

291 Si “Gio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[95:100]] => Même technique que précédemment, mais il est toutefois conseillé d'être équipé d'un minimum de 6 Gio de mémoire vive pour cette opération. <|> 6 gio => suggestions : 6 Gio
305 Mot inconnu : run [[80:83]] =>   * Les dossiers /var/run et /var/lock sont maintenant des liens pointant vers /run lui-même monté en tmpfs par le système au démarrage, les mettre dans le fstab est donc redondant. <|> run
305 Mot inconnu : tmpfs [[102:107]] =>   * Les dossiers /var/run et /var/lock sont maintenant des liens pointant vers /run lui-même monté en tmpfs par le système au démarrage, les mettre dans le fstab est donc redondant. <|> tmpfs

319 Guillemets typographiques ouvrants. [[87:88]] => Même technique que pour ci-dessus, il suffit de remplacer le chemin /tmp par /home/nomd'utilisateur/.cache, ce qui donne : <|> ' => suggestions : ‘“‹

329 Mettez des guillemets fermants plutôt qu’ouvrants. [[59:61]] => Avant l'opération, pensez à supprimer le contenu du dossier « .cache » de votre dossier personnel. <|>  « => suggestions :  »”
329 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[61:63]] => Avant l'opération, pensez à supprimer le contenu du dossier « .cache » de votre dossier personnel. <|>  . => suggestions : .. 
366 Mot inconnu : relatime [[50:58]] => **De nos jours ubuntu utilise par défaut l'option relatime qui est une variante de noatime, vous n'avez donc rien à faire si vous utilisez Ubuntu 12.04 LTS ou une version plus récente.** <|> relatime
366 Mot inconnu : noatime [[83:90]] => **De nos jours ubuntu utilise par défaut l'option relatime qui est une variante de noatime, vous n'avez donc rien à faire si vous utilisez Ubuntu 12.04 LTS ou une version plus récente.** <|> noatime

368 Pas d’espace avant une virgule. Un espace après. [[8:10]] => en 20.04 ,dans fstab une partition sans l'option  ...time <|>  , => suggestions : , 
368 Espace(s) surnuméraire(s) à supprimer. [[48:50]] => en 20.04 ,dans fstab une partition sans l'option  ...time <|>    => suggestions :  
368 Typographie : points de suspension. Utilisez le caractère dédié. [[50:53]] => en 20.04 ,dans fstab une partition sans l'option  ...time <|> ... => suggestions : …
368 Mot inconnu : time [[53:57]] => en 20.04 ,dans fstab une partition sans l'option  ...time <|> time

372 Mot inconnu : relatime [[16:24]] => est montée avec relatime <|> relatime

389 Mot inconnu : Eviter [[5:11]] => ==== Eviter d'écrire en double exemplaire les traces du fonctionnement du logiciel ==== <|> eviter

390 Espace(s) surnuméraire(s) à supprimer. [[79:81]] => Depuis quelques années, le logiciel écrit ses traces de fonctionnement de façon  standard dans le répertoires **/var/log/journal.** Pour raison de compatibilité avec le passé, il duplique dans les fichiers **/var/log/syslog** et **/var/log/kern**. <|>    => suggestions :  
390 Accord de nombre erroné : « répertoires » est au pluriel. [[95:97]] => Depuis quelques années, le logiciel écrit ses traces de fonctionnement de façon  standard dans le répertoires **/var/log/journal.** Pour raison de compatibilité avec le passé, il duplique dans les fichiers **/var/log/syslog** et **/var/log/kern**. <|> le => suggestions : les
390 Accord de nombre erroné : « répertoires » devrait être au singulier. [[98:109]] => Depuis quelques années, le logiciel écrit ses traces de fonctionnement de façon  standard dans le répertoires **/var/log/journal.** Pour raison de compatibilité avec le passé, il duplique dans les fichiers **/var/log/syslog** et **/var/log/kern**. <|> répertoires => suggestions : répertoire

448 Guillemets typographiques ouvrants. [[61:62]] => Vous pouvez alors vérifier que le début de chaque partition ("XXXX") est un multiple de 2048 (secteurs). Comme un secteur fait 512 octets, et que 2048 × 512 = 1 Mio, votre disque électronique est aligné =) <|> " => suggestions : « “
448 Mot inconnu : XXXX [[62:66]] => Vous pouvez alors vérifier que le début de chaque partition ("XXXX") est un multiple de 2048 (secteurs). Comme un secteur fait 512 octets, et que 2048 × 512 = 1 Mio, votre disque électronique est aligné =) <|> xxxx
448 Guillemets typographiques fermants. [[66:67]] => Vous pouvez alors vérifier que le début de chaque partition ("XXXX") est un multiple de 2048 (secteurs). Comme un secteur fait 512 octets, et que 2048 × 512 = 1 Mio, votre disque électronique est aligné =) <|> " => suggestions :  »”
448 Si “Mio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[159:164]] => Vous pouvez alors vérifier que le début de chaque partition ("XXXX") est un multiple de 2048 (secteurs). Comme un secteur fait 512 octets, et que 2048 × 512 = 1 Mio, votre disque électronique est aligné =) <|> 1 mio => suggestions : 1 Mio

449 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[0:1]] => A partir de 2018 (et surement avant aussi), fdisk fait cette vérification pour vous. Si le disque n'est pas aligné, vous verrez le message suivant : "La partition X ne démarre pas sur une limite de secteur physique." <|> a => suggestions : À
449 Mot inconnu : fdisk [[44:49]] => A partir de 2018 (et surement avant aussi), fdisk fait cette vérification pour vous. Si le disque n'est pas aligné, vous verrez le message suivant : "La partition X ne démarre pas sur une limite de secteur physique." <|> fdisk
449 Guillemets typographiques ouvrants. [[149:150]] => A partir de 2018 (et surement avant aussi), fdisk fait cette vérification pour vous. Si le disque n'est pas aligné, vous verrez le message suivant : "La partition X ne démarre pas sur une limite de secteur physique." <|> " => suggestions : « “
449 Guillemets typographiques fermants. [[215:216]] => A partir de 2018 (et surement avant aussi), fdisk fait cette vérification pour vous. Si le disque n'est pas aligné, vous verrez le message suivant : "La partition X ne démarre pas sur une limite de secteur physique." <|> " => suggestions :  »”
451 Confusion. La conjonction “ou” signale une alternative. Pour évoquer un lieu, un temps ou une situation, écrivez “où”. [[58:60]] => <note>FIXME Pour que tout le monde comprenne, expliquer d'ou vient le chiffre 2048 (secteurs). Expliquer aussi si chaque début de partition doit être un multiple de 2048 ou un multiple de 1 Mio</note> <|> ou => suggestions : où
451 Si “Mio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[188:193]] => <note>FIXME Pour que tout le monde comprenne, expliquer d'ou vient le chiffre 2048 (secteurs). Expliquer aussi si chaque début de partition doit être un multiple de 2048 ou un multiple de 1 Mio</note> <|> 1 mio => suggestions : 1 Mio

469 Mot inconnu : OCZ-Vertex [[58:68]] => <note warning> La procédure d'origine était faite pour un OCZ-Vertex avec une taille de bloc de 128 Kio, ce qui n'est plus le cas sur les disques électroniques récents (> 2010). Par conséquent, la documentation a été réécrite pour une taille de bloc de 1024 Kio qui permet de garantir un alignement avec tous ses sous-multiples (512, 256, 128, etc.). Vous perdez 1 Mio sur l'ensemble du disque ce qui est négligeable et cela assure une compatibilité et un alignement parfait avec tous les disques électroniques. Le fichier de calcul a également été mis à jour en conséquence.</note> <|> ocz-vertex
469 Si “Kio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[96:103]] => <note warning> La procédure d'origine était faite pour un OCZ-Vertex avec une taille de bloc de 128 Kio, ce qui n'est plus le cas sur les disques électroniques récents (> 2010). Par conséquent, la documentation a été réécrite pour une taille de bloc de 1024 Kio qui permet de garantir un alignement avec tous ses sous-multiples (512, 256, 128, etc.). Vous perdez 1 Mio sur l'ensemble du disque ce qui est négligeable et cela assure une compatibilité et un alignement parfait avec tous les disques électroniques. Le fichier de calcul a également été mis à jour en conséquence.</note> <|> 128 kio => suggestions : 128 Kio
469 Si “Kio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[253:261]] => <note warning> La procédure d'origine était faite pour un OCZ-Vertex avec une taille de bloc de 128 Kio, ce qui n'est plus le cas sur les disques électroniques récents (> 2010). Par conséquent, la documentation a été réécrite pour une taille de bloc de 1024 Kio qui permet de garantir un alignement avec tous ses sous-multiples (512, 256, 128, etc.). Vous perdez 1 Mio sur l'ensemble du disque ce qui est négligeable et cela assure une compatibilité et un alignement parfait avec tous les disques électroniques. Le fichier de calcul a également été mis à jour en conséquence.</note> <|> 1024 kio => suggestions : 1 024 Kio
469 Si “Mio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[363:368]] => <note warning> La procédure d'origine était faite pour un OCZ-Vertex avec une taille de bloc de 128 Kio, ce qui n'est plus le cas sur les disques électroniques récents (> 2010). Par conséquent, la documentation a été réécrite pour une taille de bloc de 1024 Kio qui permet de garantir un alignement avec tous ses sous-multiples (512, 256, 128, etc.). Vous perdez 1 Mio sur l'ensemble du disque ce qui est négligeable et cela assure une compatibilité et un alignement parfait avec tous les disques électroniques. Le fichier de calcul a également été mis à jour en conséquence.</note> <|> 1 mio => suggestions : 1 Mio

472 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[36:39]] => === Découper son disque électronique - Méthode avec la table de partitions classique === <|>  -  => suggestions :  –  —  − 

487 Si “Kio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[44:52]] => La taille d'un bloc, étant d'un multiple de 1024 Kio, et un secteur représentant 512 octets, on en déduit que chaque bloc est composé de 2048 secteurs (1024 Kio ÷ 512 octets). On va donc aligner les partitions en comptant le nombre de secteurs, de manière que chaque début de partition tombe sur un multiple de 2048, soit un début de bloc. D'autre part, afin de tenir compte du premier secteur réservé par le MBR, on va volontairement décaler la première partition jusqu'au premier secteur multiple de 2048. Cela ne gâche qu'un seul Mio et permet de rester aligné quoi qu'il arrive. <|> 1024 kio => suggestions : 1 024 Kio
487 Si “Kio” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[152:160]] => La taille d'un bloc, étant d'un multiple de 1024 Kio, et un secteur représentant 512 octets, on en déduit que chaque bloc est composé de 2048 secteurs (1024 Kio ÷ 512 octets). On va donc aligner les partitions en comptant le nombre de secteurs, de manière que chaque début de partition tombe sur un multiple de 2048, soit un début de bloc. D'autre part, afin de tenir compte du premier secteur réservé par le MBR, on va volontairement décaler la première partition jusqu'au premier secteur multiple de 2048. Cela ne gâche qu'un seul Mio et permet de rester aligné quoi qu'il arrive. <|> 1024 kio => suggestions : 1 024 Kio

491 Espace(s) surnuméraire(s) à supprimer. [[2:4]] => Si  parted vous répond : <|>    => suggestions :  
491 Mot inconnu : parted [[4:10]] => Si  parted vous répond : <|> parted
492 Mot inconnu : unrecognised [[18:30]] => >Error: /dev/sda: unrecognised disk label <|> unrecognised
492 Mot inconnu : disk [[31:35]] => >Error: /dev/sda: unrecognised disk label <|> disk

508 Signe de multiplication typographique. [[68:79]] => Taille de la partition en secteurs = taille de la partition en Mo * 1024 * 1024 / 512. <|> 1024 * 1024 => suggestions : 1024 × 1024

509 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” s’il s’agit d’une soustraction [3] ou de représenter un nombre négatif [4].) [[154:157]] => Une partition est donc définie par son secteur de début et son secteur de fin, ce dernier étant le secteur de début + la taille de la partition en secteur - 1 (on retranche 1 pour tenir compte du secteur du début). La partition suivante commence au secteur suivant qui sera forcément, grâce à la méthode de calcul, un multiple de 2048. <|>  -  => suggestions :  –  —  − − 
513 Formatage des grands nombres. [[37:45]] => | /dev/sda1  | /  |  2048 |  8400 |  17205247 | <|> 17205247 => suggestions : 17 205 247
514 Formatage des grands nombres. [[24:32]] => | /dev/sda2  | swap  |  17205248 |  256 |  17729535 | <|> 17205248 => suggestions : 17 205 248
514 Formatage des grands nombres. [[43:51]] => | /dev/sda2  | swap  |  17205248 |  256 |  17729535 | <|> 17729535 => suggestions : 17 729 535
515 Formatage des grands nombres. [[25:33]] => | /dev/sda3  | /home  |  17729536 |  29500 |  78145535 | <|> 17729536 => suggestions : 17 729 536
515 Formatage des grands nombres. [[37:42]] => | /dev/sda3  | /home  |  17729536 |  29500 |  78145535 | <|> 29500 => suggestions : 29 500
515 Formatage des grands nombres. [[46:54]] => | /dev/sda3  | /home  |  17729536 |  29500 |  78145535 | <|> 78145535 => suggestions : 78 145 535

517 Mot inconnu : parted [[12:18]] => Alors, dans parted, il devient très simple de créer ses partitions à partir des infos calculées : <|> parted

549 Guillemets typographiques ouvrants. [[42:43]] => Il ne reste plus qu'à placer le drapeau //"boot"// sur la première partition pour s'assurer du bon fonctionnement du //gestionnaire d'amorçage// et du chargement du futur SE : <|> " => suggestions : « “
549 Guillemets typographiques fermants. [[47:48]] => Il ne reste plus qu'à placer le drapeau //"boot"// sur la première partition pour s'assurer du bon fonctionnement du //gestionnaire d'amorçage// et du chargement du futur SE : <|> " => suggestions :  »”
566 Mot inconnu : noatime [[116:123]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> noatime
566 Si “Ko” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[342:346]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> 4 ko => suggestions : 4 Ko
566 Si “o” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[348:354]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> 4096 o => suggestions : 4 096 o
566 Guillemets typographiques ouvrants. [[363:364]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> " => suggestions : « “
566 Mot inconnu : stride [[364:370]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> stride
566 Guillemets typographiques fermants. [[370:371]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> " => suggestions :  »”
566 Si “Ko” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[464:468]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> 4 ko => suggestions : 4 Ko
566 Si “Ko” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[507:513]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> 128 ko => suggestions : 128 Ko
566 Guillemets typographiques ouvrants. [[531:532]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> " => suggestions : « “
566 Mot inconnu : stride [[532:538]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> stride
566 Guillemets typographiques fermants. [[538:539]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> " => suggestions :  »”
566 Si “Ko” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[547:553]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> 128 ko => suggestions : 128 Ko
566 Si “Ko” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. [[556:560]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> 4 ko => suggestions : 4 Ko
566 Guillemets typographiques ouvrants. [[581:582]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> " => suggestions : « “
566 Mot inconnu : stride [[582:588]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> stride
566 Guillemets typographiques fermants. [[588:589]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> " => suggestions :  »”
566 Accord de genre erroné entre « partitions » et « adéquats ». [[758:766]] => Il faut maintenant créer les systèmes de fichiers. Ici, on passera par Ext4, que l'on montera ensuite avec l'option noatime pour ne pas provoquer d'écriture lors d'une simple lecture. Là encore, on se sert des options de formatage du système de fichiers Ext4 pour aligner la partition. Il faut aligner la partition avec des blocs logiques de 4 Ko (4096 o), et un "stride" respectant l'alignement des blocs physiques du disque électronique. Les blocs logiques font 4 Ko, on sait que les blocs physiques font 128 Ko, on aura donc un "stride" de 32 (128 Ko / 4 Ko). Cette histoire de "stride" n'est pas claire, mais l'utilisation de ces deux valeurs permet visiblement de tout aligner correctement. On crée donc les systèmes de fichiers ext4 sur les partitions adéquats : <|> adéquats => suggestions : adéquates

575 Mot inconnu : ReiserFS [[27:35]] => Si vous souhaitez utiliser ReiserFS, il est possible de formater vos partitions en forçant  la taille des blocs logiques, mais pas le "stride". Ne sachant pas quelle est l'influence de ce paramètre, je ne sais pas si cela va réellement dégrader les performances ou pas, mais a priori, cela reste négligeable voire inexistant : <|> reiserfs
575 Espace(s) surnuméraire(s) à supprimer. [[90:92]] => Si vous souhaitez utiliser ReiserFS, il est possible de formater vos partitions en forçant  la taille des blocs logiques, mais pas le "stride". Ne sachant pas quelle est l'influence de ce paramètre, je ne sais pas si cela va réellement dégrader les performances ou pas, mais a priori, cela reste négligeable voire inexistant : <|>    => suggestions :  
575 Guillemets typographiques ouvrants. [[134:135]] => Si vous souhaitez utiliser ReiserFS, il est possible de formater vos partitions en forçant  la taille des blocs logiques, mais pas le "stride". Ne sachant pas quelle est l'influence de ce paramètre, je ne sais pas si cela va réellement dégrader les performances ou pas, mais a priori, cela reste négligeable voire inexistant : <|> " => suggestions : « “
575 Mot inconnu : stride [[135:141]] => Si vous souhaitez utiliser ReiserFS, il est possible de formater vos partitions en forçant  la taille des blocs logiques, mais pas le "stride". Ne sachant pas quelle est l'influence de ce paramètre, je ne sais pas si cela va réellement dégrader les performances ou pas, mais a priori, cela reste négligeable voire inexistant : <|> stride
575 Guillemets typographiques fermants. [[141:142]] => Si vous souhaitez utiliser ReiserFS, il est possible de formater vos partitions en forçant  la taille des blocs logiques, mais pas le "stride". Ne sachant pas quelle est l'influence de ce paramètre, je ne sais pas si cela va réellement dégrader les performances ou pas, mais a priori, cela reste négligeable voire inexistant : <|> " => suggestions :  »”

581 Confusion probable : “point” est une forme verbale conjuguée. Si “les” est un déterminant, il faut placer un nom après. [[282:287]] => Même si, en fin de compte, on ne monte pas forcément cette partition (ou alors on en minimise l'accès), Ubuntu impose d'avoir une partition d'échange au moment de l'installation, donc autant que cette dernière soit également alignée. Ensuite, lors de l'installation, on définit les point de montage, mais on ne les formate pas. Ils le sont déjà, et un nouveau formatage ne réutiliserait pas forcément les valeurs de bloc et de "stride" que l'on a utilisées, ruinant alors l'alignement. <|> point => suggestions : poingspoints
581 Guillemets typographiques ouvrants. [[427:428]] => Même si, en fin de compte, on ne monte pas forcément cette partition (ou alors on en minimise l'accès), Ubuntu impose d'avoir une partition d'échange au moment de l'installation, donc autant que cette dernière soit également alignée. Ensuite, lors de l'installation, on définit les point de montage, mais on ne les formate pas. Ils le sont déjà, et un nouveau formatage ne réutiliserait pas forcément les valeurs de bloc et de "stride" que l'on a utilisées, ruinant alors l'alignement. <|> " => suggestions : « “
581 Mot inconnu : stride [[428:434]] => Même si, en fin de compte, on ne monte pas forcément cette partition (ou alors on en minimise l'accès), Ubuntu impose d'avoir une partition d'échange au moment de l'installation, donc autant que cette dernière soit également alignée. Ensuite, lors de l'installation, on définit les point de montage, mais on ne les formate pas. Ils le sont déjà, et un nouveau formatage ne réutiliserait pas forcément les valeurs de bloc et de "stride" que l'on a utilisées, ruinant alors l'alignement. <|> stride
581 Guillemets typographiques fermants. [[434:435]] => Même si, en fin de compte, on ne monte pas forcément cette partition (ou alors on en minimise l'accès), Ubuntu impose d'avoir une partition d'échange au moment de l'installation, donc autant que cette dernière soit également alignée. Ensuite, lors de l'installation, on définit les point de montage, mais on ne les formate pas. Ils le sont déjà, et un nouveau formatage ne réutiliserait pas forcément les valeurs de bloc et de "stride" que l'on a utilisées, ruinant alors l'alignement. <|> " => suggestions :  »”

583 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[36:39]] => === Découper son disque électronique - Méthode avec la table de partitions GPT === <|>  -  => suggestions :  –  —  − 
589 Guillemets typographiques ouvrants. [[460:461]] => Le problème de la méthode précédente est qu'elle se limite à 4 partitions, puisque les tables de partitions standards se limitent à 4 partitions primaires. Une autre solution consisterait à ne créer qu'une partition étendue sur l'intégralité du disque dur, et de tailler ses lecteurs logiques dedans. Néanmoins, il existe une autre façon de créer ses partitions : utiliser une table de partition de type GPT. Avec ce type de table, qu'on pourrait qualifier de "moderne", la nuance entre partition principale et étendue n'existe plus, toutes les partitions étant du même type (primaire), et il n'y a plus de limite au nombre de partitions que l'on peut créer sur un disque. <|> " => suggestions : « “
589 Guillemets typographiques fermants. [[468:469]] => Le problème de la méthode précédente est qu'elle se limite à 4 partitions, puisque les tables de partitions standards se limitent à 4 partitions primaires. Une autre solution consisterait à ne créer qu'une partition étendue sur l'intégralité du disque dur, et de tailler ses lecteurs logiques dedans. Néanmoins, il existe une autre façon de créer ses partitions : utiliser une table de partition de type GPT. Avec ce type de table, qu'on pourrait qualifier de "moderne", la nuance entre partition principale et étendue n'existe plus, toutes les partitions étant du même type (primaire), et il n'y a plus de limite au nombre de partitions que l'on peut créer sur un disque. <|> " => suggestions :  »”
593 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[4:7]] =>   * les partitions référencées dans une table GPT sont accessibles sous Windows comme sous GNU-Linux, mais a priori, seul ce dernier saura s'amorcer avec GPT via GRUB. Du coup, pas de double amorçage Windows/GNU-Linux avec cette méthode. **(FAUX, si Windows est installé en mode UEFI, la prise en charge GPT fonctionne sans problème. Windows n'est simplement pas capable d'amorcer une version non UEFI sur une partition GPT)** <|> les => suggestions : Les
595 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[4:6]] =>   * la création d'une table GPT efface l'intégralité <del>du disque</del> de la table des partitions. Donc, on utilise cette méthode lorsqu'on a un disque neuf ou après une sauvegarde de toutes ses données, car la création manuelle des entrées de la table des partitions est un exercice périlleux et réservé aux utilisateurs avertis. <|> la => suggestions : La

598 Mot inconnu : Parted [[61:67]] => Ceci mis au clair, on peut découper le disque, toujours avec Parted. Pour cela, une fois Parted lancé, on commence par créer la table GPT (c'est à ce moment que toutes les partitions antérieures et les données qu'elles contenaient deviendront inaccessibles) : <|> parted
598 Mot inconnu : Parted [[89:95]] => Ceci mis au clair, on peut découper le disque, toujours avec Parted. Pour cela, une fois Parted lancé, on commence par créer la table GPT (c'est à ce moment que toutes les partitions antérieures et les données qu'elles contenaient deviendront inaccessibles) : <|> parted

605 Mot inconnu : parted [[21:27]] => On change l'unité de parted pour le secteur : <|> parted

624 Guillemets typographiques ouvrants. [[139:140]] => Les partitions créées, on reprendra la méthode précédente pour la création des systèmes de fichier, les règles sur la taille de bloc et de "stride" pour les volumes Ext4 semblant toujours d'actualité avec ce type de partitionnement. <|> " => suggestions : « “
624 Mot inconnu : stride [[140:146]] => Les partitions créées, on reprendra la méthode précédente pour la création des systèmes de fichier, les règles sur la taille de bloc et de "stride" pour les volumes Ext4 semblant toujours d'actualité avec ce type de partitionnement. <|> stride
624 Guillemets typographiques fermants. [[146:147]] => Les partitions créées, on reprendra la méthode précédente pour la création des systèmes de fichier, les règles sur la taille de bloc et de "stride" pour les volumes Ext4 semblant toujours d'actualité avec ce type de partitionnement. <|> " => suggestions :  »”

634 Mot inconnu : IOCTL [[34:39]] => Ce mécanisme de réarrangement des IOCTL a pour objet d'améliorer les commandes E/S vers le disque dur ATA/SATA en prenant en compte la nature du disque dur en question et certaines contraintes en découlant. \\ <|> ioctl
634 Mot inconnu : ATA [[102:105]] => Ce mécanisme de réarrangement des IOCTL a pour objet d'améliorer les commandes E/S vers le disque dur ATA/SATA en prenant en compte la nature du disque dur en question et certaines contraintes en découlant. \\ <|> ata
634 Mot inconnu : SATA [[106:110]] => Ce mécanisme de réarrangement des IOCTL a pour objet d'améliorer les commandes E/S vers le disque dur ATA/SATA en prenant en compte la nature du disque dur en question et certaines contraintes en découlant. \\ <|> sata

645 Guillemets typographiques ouvrants. [[88:89]] => Si cela n'est pas le cas, on peut spécifier de charger le noyau Linux avec cette option "deadline" lors du démarrage. <|> " => suggestions : « “
645 Mot inconnu : deadline [[89:97]] => Si cela n'est pas le cas, on peut spécifier de charger le noyau Linux avec cette option "deadline" lors du démarrage. <|> deadline
645 Guillemets typographiques fermants. [[97:98]] => Si cela n'est pas le cas, on peut spécifier de charger le noyau Linux avec cette option "deadline" lors du démarrage. <|> " => suggestions :  »”

656 Apostrophe incorrecte. [[5:8]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|> d'  => suggestions : d’
656 Guillemets typographiques fermants. [[6:7]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|> ' => suggestions : ’”›
656 Confusion probable : “a” est une forme conjuguée du verbe “avoir”. Pour la préposition, écrivez “à”. [[59:60]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|> a => suggestions : à
656 Confusion probable. Pour évoquer la ferveur (religieuse), écrivez “foi”. [[64:68]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|> fois => suggestions : foi
656 Mot inconnu : UDEV [[135:139]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|> udev
656 Mot inconnu : scheduleur [[170:180]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|> scheduleur
656 Espace(s) surnuméraire(s) à supprimer. [[266:268]] => Afin d' améliorer les performances des systèmes comportant a la fois des disques SSD et des disques mécaniques il est possible grâce à UDEV de définir automatiquement le scheduleur à utiliser en fonction du type de disque (a plateaux ou SSD) avec la méthode suivante  : <|>    => suggestions :  

657 Mot inconnu : editer [[0:6]] => editer ou creer le fichier avec les droits super-utilisateur : /etc/udev/rules.d/60-schedulers.rules <|> editer
657 Mot inconnu : creer [[10:15]] => editer ou creer le fichier avec les droits super-utilisateur : /etc/udev/rules.d/60-schedulers.rules <|> creer

672 Guillemets typographiques ouvrants. [[16:17]] => ==== Désactiver "ureadhead" ==== <|> " => suggestions : « “
672 Mot inconnu : ureadhead [[17:26]] => ==== Désactiver "ureadhead" ==== <|> ureadhead
672 Guillemets typographiques fermants. [[26:27]] => ==== Désactiver "ureadhead" ==== <|> " => suggestions :  »”

676 Guillemets typographiques ouvrants. [[33:34]] => Un contournement pour désactiver "ureadhead" est de désactiver le lancement du démon correspondant dans le script d'amorçage upstart : <|> " => suggestions : « “
676 Mot inconnu : ureadhead [[34:43]] => Un contournement pour désactiver "ureadhead" est de désactiver le lancement du démon correspondant dans le script d'amorçage upstart : <|> ureadhead
676 Guillemets typographiques fermants. [[43:44]] => Un contournement pour désactiver "ureadhead" est de désactiver le lancement du démon correspondant dans le script d'amorçage upstart : <|> " => suggestions :  »”
676 Mot inconnu : upstart [[125:132]] => Un contournement pour désactiver "ureadhead" est de désactiver le lancement du démon correspondant dans le script d'amorçage upstart : <|> upstart
