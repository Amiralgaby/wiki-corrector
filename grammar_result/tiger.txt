
4 Mot inconnu : Tiger => ====== Tiger : un langage de programmation====== | tiger

6 Mot inconnu : Tiger => Tiger est un langage de programmation créé par Andrew W. Appel en 1998. Il est disposé d'un type dit « //typage fort// » https://fr.wikipedia.org/wiki/Typage_fort | tiger

10 Mot inconnu : Tiger => Tiger est composé de 3 types de variables dites réservés : | tiger
12 Mot inconnu : int => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  | int
12 Accord de nombre erroné avec « deux » : « puissance » devrait être au pluriel. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  | puissance => suggestions : ['puissances']
12 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” s’il s’agit d’une soustraction [3] ou de représenter un nombre négatif [4].) => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  |  -  => suggestions : [' – ', ' — ', ' − ', ' −']
12 Accord de nombre erroné avec « deux » : « puissance » devrait être au pluriel. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  | puissance => suggestions : ['puissances']
12 Espace(s) en fin de ligne à supprimer. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  |   => suggestions : ['']
16 Mot inconnu : void => « void », comme | void

18 Mot inconnu : void => • void return type of a function or block that returns nothing | void
18 Mot inconnu : return => • void return type of a function or block that returns nothing | return
18 Mot inconnu : of => • void return type of a function or block that returns nothing | of
18 Mot inconnu : function => • void return type of a function or block that returns nothing | function
18 Mot inconnu : block => • void return type of a function or block that returns nothing | block
18 Mot inconnu : that => • void return type of a function or block that returns nothing | that
18 Mot inconnu : returns => • void return type of a function or block that returns nothing | returns
18 Mot inconnu : nothing => • void return type of a function or block that returns nothing | nothing

20 Mot inconnu : World => ===== Hello World ===== | world

22 Mot inconnu : print => print("Hello World!") | print
22 Il manque un espace avant la parenthèse. => print("Hello World!") | ( => suggestions : [' (']
22 Guillemets typographiques ouvrants. => print("Hello World!") | " => suggestions : ['«\xa0', '“']
22 Mot inconnu : World => print("Hello World!") | world
22 Guillemets typographiques fermants. => print("Hello World!") | " => suggestions : ['\xa0»', '”']

26 Mot inconnu : Tiger => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction. | tiger
26 Mot inconnu : initilisation => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction. | initilisation
26 Mot inconnu : end => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction. | end

29 Mot inconnu : Declarations => /* Declarations */ | declarations
31 Mot inconnu : int => var thermostat : int := -17 | int
31 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => var thermostat : int := -17 | -17 => suggestions : ['−17', '– 17', '— 17']

36 Mot inconnu : print_int => print_int(thermostat); | print_int
36 Il manque un espace avant la parenthèse. => print_int(thermostat); | ( => suggestions : [' (']

37 Mot inconnu : print => print("\n") | print
37 Il manque un espace avant la parenthèse. => print("\n") | ( => suggestions : [' (']
37 Guillemets typographiques fermants. => print("\n") | " => suggestions : ['\xa0»', '”']

38 Mot inconnu : end => end | end
