
4 Mot inconnu : Tiger [[7:12]] => ====== Tiger : un langage de programmation====== <|> tiger

6 Mot inconnu : Tiger [[0:5]] => Tiger est un langage de programmation créé par Andrew W. Appel en 1998. Il est disposé d'un type dit « //typage fort// » https://fr.wikipedia.org/wiki/Typage_fort <|> tiger

10 Mot inconnu : Tiger [[0:5]] => Tiger est composé de 3 types de variables dites réservés : <|> tiger
12 Mot inconnu : int [[2:5]] => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  <|> int
12 Accord de nombre erroné avec « deux » : « puissance » devrait être au pluriel. [[75:84]] => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  <|> puissance => suggestions : None
12 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” s’il s’agit d’une soustraction [3] ou de représenter un nombre négatif [4].) [[95:98]] => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  <|>  -  => suggestions : None
12 Accord de nombre erroné avec « deux » : « puissance » devrait être au pluriel. [[106:115]] => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  <|> puissance => suggestions : None
12 Espace(s) en fin de ligne à supprimer. [[127:128]] => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1)  <|>   => suggestions : None
16 Mot inconnu : void [[2:6]] => « void », comme <|> void

18 Mot inconnu : void [[2:6]] => • void return type of a function or block that returns nothing <|> void
18 Mot inconnu : return [[7:13]] => • void return type of a function or block that returns nothing <|> return
18 Mot inconnu : of [[19:21]] => • void return type of a function or block that returns nothing <|> of
18 Mot inconnu : function [[24:32]] => • void return type of a function or block that returns nothing <|> function
18 Mot inconnu : block [[36:41]] => • void return type of a function or block that returns nothing <|> block
18 Mot inconnu : that [[42:46]] => • void return type of a function or block that returns nothing <|> that
18 Mot inconnu : returns [[47:54]] => • void return type of a function or block that returns nothing <|> returns
18 Mot inconnu : nothing [[55:62]] => • void return type of a function or block that returns nothing <|> nothing

20 Mot inconnu : World [[12:17]] => ===== Hello World ===== <|> world

22 Mot inconnu : print [[0:5]] => print("Hello World!") <|> print
22 Il manque un espace avant la parenthèse. [[5:6]] => print("Hello World!") <|> ( => suggestions : None
22 Guillemets typographiques ouvrants. [[6:7]] => print("Hello World!") <|> " => suggestions : None
22 Mot inconnu : World [[13:18]] => print("Hello World!") <|> world
22 Guillemets typographiques fermants. [[19:20]] => print("Hello World!") <|> " => suggestions : None

26 Mot inconnu : Tiger [[5:10]] => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction. <|> tiger
26 Mot inconnu : initilisation [[32:45]] => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction. <|> initilisation
26 Mot inconnu : end [[131:134]] => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction. <|> end

29 Mot inconnu : Declarations [[3:15]] => /* Declarations */ <|> declarations
31 Mot inconnu : int [[17:20]] => var thermostat : int := -17 <|> int
31 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. [[24:27]] => var thermostat : int := -17 <|> -17 => suggestions : None

36 Mot inconnu : print_int [[0:9]] => print_int(thermostat); <|> print_int
36 Il manque un espace avant la parenthèse. [[9:10]] => print_int(thermostat); <|> ( => suggestions : None

37 Mot inconnu : print [[0:5]] => print("\n") <|> print
37 Il manque un espace avant la parenthèse. [[5:6]] => print("\n") <|> ( => suggestions : None
37 Guillemets typographiques fermants. [[9:10]] => print("\n") <|> " => suggestions : None

38 Mot inconnu : end [[0:3]] => end <|> end
