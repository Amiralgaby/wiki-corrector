5 Mot inconnu : Tiger => ====== Tiger : un langage de programmation======
5 Il manque un espace insécable. => ====== Tiger : un langage de programmation======

7 Mot inconnu : Tiger => Tiger est un langage de programmation créé par Andrew W. Appel en 1998. Il est disposé d'un type dit « //typage fort// » https://fr.wikipedia.org/wiki/Typage_fort
7 Il manque un espace insécable. => Tiger est un langage de programmation créé par Andrew W. Appel en 1998. Il est disposé d'un type dit « //typage fort// » https://fr.wikipedia.org/wiki/Typage_fort
7 Il manque un espace insécable. => Tiger est un langage de programmation créé par Andrew W. Appel en 1998. Il est disposé d'un type dit « //typage fort// » https://fr.wikipedia.org/wiki/Typage_fort

11 Mot inconnu : Tiger => Tiger est composé de 3 types de variables dites réservés :
11 Il manque un espace insécable. => Tiger est composé de 3 types de variables dites réservés :

13 Il manque un espace insécable. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 
13 Mot inconnu : int => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 
13 Il manque un espace insécable. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 
13 Accord de nombre erroné avec « deux » : « puissance » devrait être au pluriel. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 
13 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” s’il s’agit d’une soustraction [3] ou de représenter un nombre négatif [4].) => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 
13 Accord de nombre erroné avec « deux » : « puissance » devrait être au pluriel. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 
13 Espace(s) en fin de ligne à supprimer. => « int », composé par des entiers de 32 bits compris entre -2³¹ (moins deux puissance 31) et 2³¹ - 1 (deux puissance 31 moins 1) 

15 Il manque un espace insécable. => « string » chaîne de caractères de 8 bits (voir table ASCII)
15 Il manque un espace insécable. => « string » chaîne de caractères de 8 bits (voir table ASCII)

17 Il manque un espace insécable. => « void », comme
17 Mot inconnu : void => « void », comme
17 Il manque un espace insécable. => « void », comme

19 Mot inconnu : void => • void return type of a function or block that returns nothing
19 Mot inconnu : return => • void return type of a function or block that returns nothing
19 Mot inconnu : of => • void return type of a function or block that returns nothing
19 Mot inconnu : function => • void return type of a function or block that returns nothing
19 Mot inconnu : block => • void return type of a function or block that returns nothing
19 Mot inconnu : that => • void return type of a function or block that returns nothing
19 Mot inconnu : returns => • void return type of a function or block that returns nothing
19 Mot inconnu : nothing => • void return type of a function or block that returns nothing

21 Mot inconnu : World => ===== Hello World =====

23 Mot inconnu : print => print("Hello World!")
23 Il manque un espace avant la parenthèse. => print("Hello World!")
23 Guillemets typographiques ouvrants. => print("Hello World!")
23 Mot inconnu : World => print("Hello World!")
23 Il manque un espace insécable. => print("Hello World!")
23 Guillemets typographiques fermants. => print("Hello World!")

27 Mot inconnu : Tiger => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Mot inconnu : initilisation => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Il manque un espace insécable. => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Il manque un espace insécable. => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Il manque un espace insécable. => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Il manque un espace insécable. => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Il manque un espace insécable. => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Mot inconnu : end => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.
27 Il manque un espace insécable. => Dans Tiger, la déclaration et l'initilisation des fonctions se fait dans le « let ». Les instructions dans le « in » et enfin le « end » permet de terminer la fonction.

30 Mot inconnu : Declarations => /* Declarations */

32 Il manque un espace insécable. => var thermostat : int := -17
32 Mot inconnu : int => var thermostat : int := -17
32 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => var thermostat : int := -17

36 Il manque un espace insécable. => thermostat := thermostat + 1;

37 Mot inconnu : print_int => print_int(thermostat);
37 Il manque un espace avant la parenthèse. => print_int(thermostat);

38 Mot inconnu : print => print("\n")
38 Il manque un espace avant la parenthèse. => print("\n")
38 Guillemets typographiques fermants. => print("\n")

39 Mot inconnu : end => end
