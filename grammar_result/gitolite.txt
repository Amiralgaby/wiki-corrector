
4 Mot inconnu : Gitolite => ====== Gitolite ====== | gitolite

8 Mot inconnu : Gitolite => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite. | gitolite
8 Confusion probable : l’évidement est l’action de vider quelque chose. L’adverbe s’écrit “évidemment”. => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite. | évidement => suggestions : ['évidemment']
8 Mot inconnu : ssh => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite. | ssh
8 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite. |  car => suggestions : [', car']
8 Mot inconnu : Gitolite => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite. | gitolite

12 Mot inconnu : Gitolite => Gitolite utilise un utilisateur spécifique sur le serveur pour gérer les dépôts. | gitolite

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''server''** : serveur ; |    => suggestions : ['']
16 Mot inconnu : server =>   * **''server''** : serveur ; | server
16 Guillemets typographiques fermants. =>   * **''server''** : serveur ; | '' => suggestions : ['\xa0»', '”']

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''admin''** : administrateur du serveur ; |    => suggestions : ['']
17 Guillemets typographiques fermants. =>   * **''admin''** : administrateur du serveur ; | '' => suggestions : ['\xa0»', '”']

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git''). |    => suggestions : ['']
18 Guillemets typographiques fermants. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git''). | '' => suggestions : ['\xa0»', '”']
18 Guillemets typographiques ouvrants. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git''). | '' => suggestions : ['«\xa0', '“']
18 Mot inconnu : sudo =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git''). | sudo
18 Mot inconnu : adduser =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git''). | adduser
18 Guillemets typographiques fermants. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git''). | '' => suggestions : ['\xa0»', '”']

20 Guillemets typographiques fermants. => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**. | '' => suggestions : ['\xa0»', '”']
20 Guillemets typographiques fermants. => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**. | '' => suggestions : ['\xa0»', '”']
20 Mot inconnu : server => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**. | server
20 Guillemets typographiques fermants. => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**. | '' => suggestions : ['\xa0»', '”']

22 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec : | '' => suggestions : ['\xa0»', '”']
22 Mot inconnu : ssh => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec : | ssh
22 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec : | '' => suggestions : ['\xa0»', '”']
22 Mot inconnu : server => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec : | server
22 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec : | '' => suggestions : ['\xa0»', '”']
22 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec : | '' => suggestions : ['\xa0»', '”']

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ssh-keygen |    => suggestions : ['']
24 Mot inconnu : ssh-keygen =>   ssh-keygen | ssh-keygen

26 Guillemets typographiques fermants. => Puis ajoutez la clé publique aux clés autorisées de **''git''** avec : | '' => suggestions : ['\xa0»', '”']

28 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost |    => suggestions : ['']
28 Mot inconnu : ssh-copy-id =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost | ssh-copy-id
28 Il manque un espace à côté du tiret. =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost |  - => suggestions : [' – ', ' — ']
28 Mot inconnu : ssh =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost | ssh
28 Mot inconnu : id_rsa =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost | id_rsa
28 Il manque un espace. =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost | pub => suggestions : [' pub']

30 Mot inconnu : ssh => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**. | ssh
30 Mot inconnu : authorized_keys => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**. | authorized_keys
30 Guillemets typographiques fermants. => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**. | '' => suggestions : ['\xa0»', '”']
30 Guillemets typographiques fermants. => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**. | '' => suggestions : ['\xa0»', '”']

35 Guillemets typographiques fermants. => L'installation se fera depuis le dossier personnel de l'utilisateur **''admin''** de votre serveur **''server''**. | '' => suggestions : ['\xa0»', '”']
35 Mot inconnu : server => L'installation se fera depuis le dossier personnel de l'utilisateur **''admin''** de votre serveur **''server''**. | server
35 Guillemets typographiques fermants. => L'installation se fera depuis le dossier personnel de l'utilisateur **''admin''** de votre serveur **''server''**. | '' => suggestions : ['\xa0»', '”']

37 Mot inconnu : Gitolite => Récupérez les sources de Gitolite sur Github, avec : | gitolite
37 Mot inconnu : Github => Récupérez les sources de Gitolite sur Github, avec : | github

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone https://github.com/sitaramc/gitolite.git |    => suggestions : ['']

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd gitolite |    => suggestions : ['']
43 Mot inconnu : gitolite =>   cd gitolite | gitolite

45 Mot inconnu : Gitolite => Lancez à présent le script d'installation de Gitolite : | gitolite

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   src/gl-easy-install git localhost admin |    => suggestions : ['']
47 Mot inconnu : src =>   src/gl-easy-install git localhost admin | src
47 Mot inconnu : gl-easy-install =>   src/gl-easy-install git localhost admin | gl-easy-install
47 Mot inconnu : localhost =>   src/gl-easy-install git localhost admin | localhost

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

49 Mot inconnu : github => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note> | github
49 Conjugaison erronée. Accord avec “Les changements…”. Le verbe devrait être à la 3ᵉ personne du pluriel. => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note> | semble => suggestions : ['semblent']
49 Confusion probable : “sur” est une préposition ou un adjectif signifiant acide ou aigre ; utilisez “sûr” pour certain, vrai ou sans danger. => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note> | sur => suggestions : ['sûr']

50 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | '' => suggestions : ['\xa0»', '”']
50 Guillemets typographiques ouvrants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | '' => suggestions : ['«\xa0', '“']
50 Mot inconnu : localhost => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | localhost
50 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | '' => suggestions : ['\xa0»', '”']
50 Mot inconnu : server => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | server
50 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | '' => suggestions : ['\xa0»', '”']
50 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts. | '' => suggestions : ['\xa0»', '”']

56 Mot inconnu : Gitolite => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier : | gitolite
56 Guillemets typographiques ouvrants. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier : | '' => suggestions : ['«\xa0', '“']
56 Mot inconnu : gitolite-admin => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier : | gitolite-admin
56 Guillemets typographiques fermants. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier : | '' => suggestions : ['\xa0»', '”']
56 Mot inconnu : clône => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier : | clône
56 Guillemets typographiques fermants. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier : | '' => suggestions : ['\xa0»', '”']

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ; |    => suggestions : ['']
58 Mot inconnu : gitolite =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ; | gitolite
58 Il manque un espace. =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ; | conf => suggestions : [' conf']
58 Guillemets typographiques fermants. =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ; | '' => suggestions : ['\xa0»', '”']
58 Mot inconnu : Gitolite =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ; | gitolite

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''. |    => suggestions : ['']
59 Mot inconnu : keydir =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''. | keydir
59 Guillemets typographiques ouvrants. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''. | '' => suggestions : ['«\xa0', '“']
59 Mot inconnu : user_name =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''. | user_name
59 Il manque un espace. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''. | pub => suggestions : [' pub']
59 Guillemets typographiques fermants. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''. | '' => suggestions : ['\xa0»', '”']

61 Mot inconnu : Gitolite => La configuration de Gitolite utilisant un dépôt Git spécifique, il sera nécessaire de //commiter// les changements effectués pour qu'ils prennent effet, c'est pour cela qu'il est nécessaire de se situer dans le dossier de configuration pour appliquer des changements. | gitolite

63 Guillemets typographiques ouvrants. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** : | '' => suggestions : ['«\xa0', '“']
63 Mot inconnu : gitolite-admin => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** : | gitolite-admin
63 Guillemets typographiques fermants. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** : | '' => suggestions : ['\xa0»', '”']
63 Guillemets typographiques fermants. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** : | '' => suggestions : ['\xa0»', '”']

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd ~/gitolite-admin |    => suggestions : ['']
65 Mot inconnu : gitolite-admin =>   cd ~/gitolite-admin | gitolite-admin

76 Guillemets typographiques ouvrants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | '' => suggestions : ['«\xa0', '“']
76 Mot inconnu : repo1 => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | repo1
76 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | '' => suggestions : ['\xa0»', '”']
76 Mot inconnu : repository => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | repository
76 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | '' => suggestions : ['\xa0»', '”']
76 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | '' => suggestions : ['\xa0»', '”']
76 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W''). | '' => suggestions : ['\xa0»', '”']

78 Mot inconnu : my_repo => Pour ajouter un dépôt //my_repo//, ajoutez donc : | my_repo

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add conf/gitolite.conf |    => suggestions : ['']
87 Mot inconnu : add =>   git add conf/gitolite.conf | add
87 Mot inconnu : gitolite =>   git add conf/gitolite.conf | gitolite
87 Il manque un espace. =>   git add conf/gitolite.conf | conf => suggestions : [' conf']

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -m "add repository my_repo" |    => suggestions : ['']
88 Il manque un espace à côté du tiret. =>   git commit -m "add repository my_repo" |  - => suggestions : [' – ', ' — ']
88 Guillemets typographiques ouvrants. =>   git commit -m "add repository my_repo" | " => suggestions : ['«\xa0', '“']
88 Mot inconnu : add =>   git commit -m "add repository my_repo" | add
88 Mot inconnu : repository =>   git commit -m "add repository my_repo" | repository
88 Mot inconnu : my_repo =>   git commit -m "add repository my_repo" | my_repo
88 Guillemets typographiques fermants. =>   git commit -m "add repository my_repo" | " => suggestions : ['\xa0»', '”']

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push |    => suggestions : ['']
89 Mot inconnu : push =>   git push | push

91 Mot inconnu : my_repo => //my_repo// sera automatiquement créé après le //push// dans ''/home/git/repositories/''. | my_repo
91 Mot inconnu : push => //my_repo// sera automatiquement créé après le //push// dans ''/home/git/repositories/''. | push

95 Guillemets typographiques ouvrants. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''. | '' => suggestions : ['«\xa0', '“']
95 Mot inconnu : keydir => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''. | keydir
95 Guillemets typographiques ouvrants. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''. | '' => suggestions : ['«\xa0', '“']
95 Mot inconnu : username => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''. | username
95 Il manque un espace. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''. | pub => suggestions : [' pub']
95 Guillemets typographiques fermants. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''. | '' => suggestions : ['\xa0»', '”']

100 Guillemets typographiques ouvrants. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | '' => suggestions : ['«\xa0', '“']
100 Mot inconnu : ssh-keygen => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | ssh-keygen
100 Guillemets typographiques fermants. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | '' => suggestions : ['\xa0»', '”']
100 Mot inconnu : ssh => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | ssh
100 Mot inconnu : id_rsa => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | id_rsa
100 Il manque un espace. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | pub => suggestions : [' pub']
100 Guillemets typographiques fermants. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur. | '' => suggestions : ['\xa0»', '”']

105 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add keydir/user1.pub |    => suggestions : ['']
105 Mot inconnu : add =>   git add keydir/user1.pub | add
105 Mot inconnu : keydir =>   git add keydir/user1.pub | keydir
105 Mot inconnu : user1 =>   git add keydir/user1.pub | user1
105 Il manque un espace. =>   git add keydir/user1.pub | pub => suggestions : [' pub']

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -m "add user user1" |    => suggestions : ['']
106 Il manque un espace à côté du tiret. =>   git commit -m "add user user1" |  - => suggestions : [' – ', ' — ']
106 Guillemets typographiques ouvrants. =>   git commit -m "add user user1" | " => suggestions : ['«\xa0', '“']
106 Mot inconnu : add =>   git commit -m "add user user1" | add
106 Mot inconnu : user1 =>   git commit -m "add user user1" | user1
106 Guillemets typographiques fermants. =>   git commit -m "add user user1" | " => suggestions : ['\xa0»', '”']

107 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push |    => suggestions : ['']
107 Mot inconnu : push =>   git push | push

111 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ; |    => suggestions : ['']
111 Guillemets typographiques fermants. =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ; | '' => suggestions : ['\xa0»', '”']
111 Mot inconnu : server =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ; | server
111 Guillemets typographiques fermants. =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ; | '' => suggestions : ['\xa0»', '”']

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un utilisateur peut développer sur plusieurs machine, par exemple son pc et son portable. |    => suggestions : ['']
112 Accord de nombre erroné : « machine » devrait être au pluriel. =>   * un utilisateur peut développer sur plusieurs machine, par exemple son pc et son portable. | machine => suggestions : ['machines']

114 Guillemets typographiques ouvrants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc. | '' => suggestions : ['«\xa0', '“']
114 Mot inconnu : user1 => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc. | user1
114 Il manque un espace. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc. | pub => suggestions : [' pub']
114 Guillemets typographiques fermants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc. | '' => suggestions : ['\xa0»', '”']
114 Guillemets typographiques ouvrants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc. | '' => suggestions : ['«\xa0', '“']
114 Guillemets typographiques ouvrants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc. | '' => suggestions : ['«\xa0', '“']

121 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   @group1 = user1 user2 user3 |    => suggestions : ['']
121 Mot inconnu : user1 =>   @group1 = user1 user2 user3 | user1
121 Mot inconnu : user2 =>   @group1 = user1 user2 user3 | user2
121 Mot inconnu : user3 =>   @group1 = user1 user2 user3 | user3

124 Guillemets typographiques fermants. => Le groupe ''@all'' est un groupe pré-définit, représentant tous les utilisateurs. | '' => suggestions : ['\xa0»', '”']

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add conf/gitolite.conf |    => suggestions : ['']
136 Mot inconnu : add =>   git add conf/gitolite.conf | add
136 Mot inconnu : gitolite =>   git add conf/gitolite.conf | gitolite
136 Il manque un espace. =>   git add conf/gitolite.conf | conf => suggestions : [' conf']

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -m "add group group1 and assign it to repo my_repo" |    => suggestions : ['']
137 Il manque un espace à côté du tiret. =>   git commit -m "add group group1 and assign it to repo my_repo" |  - => suggestions : [' – ', ' — ']
137 Guillemets typographiques ouvrants. =>   git commit -m "add group group1 and assign it to repo my_repo" | " => suggestions : ['«\xa0', '“']
137 Mot inconnu : add =>   git commit -m "add group group1 and assign it to repo my_repo" | add
137 Mot inconnu : group =>   git commit -m "add group group1 and assign it to repo my_repo" | group
137 Mot inconnu : group1 =>   git commit -m "add group group1 and assign it to repo my_repo" | group1
137 Mot inconnu : and =>   git commit -m "add group group1 and assign it to repo my_repo" | and
137 Mot inconnu : assign =>   git commit -m "add group group1 and assign it to repo my_repo" | assign
137 Mot inconnu : it =>   git commit -m "add group group1 and assign it to repo my_repo" | it
137 Mot inconnu : to =>   git commit -m "add group group1 and assign it to repo my_repo" | to
137 Mot inconnu : repo =>   git commit -m "add group group1 and assign it to repo my_repo" | repo
137 Mot inconnu : my_repo =>   git commit -m "add group group1 and assign it to repo my_repo" | my_repo
137 Guillemets typographiques fermants. =>   git commit -m "add group group1 and assign it to repo my_repo" | " => suggestions : ['\xa0»', '”']

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push |    => suggestions : ['']
138 Mot inconnu : push =>   git push | push

144 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ; |    => suggestions : ['']
144 Guillemets typographiques ouvrants. =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ; | '' => suggestions : ['«\xa0', '“']
144 Guillemets typographiques fermants. =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ; | '' => suggestions : ['\xa0»', '”']

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; |    => suggestions : ['']
145 Mot inconnu : RW =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; | rw
145 Guillemets typographiques ouvrants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; | '' => suggestions : ['«\xa0', '“']
145 Guillemets typographiques fermants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; | '' => suggestions : ['\xa0»', '”']
145 Guillemets typographiques ouvrants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; | '' => suggestions : ['«\xa0', '“']
145 Mot inconnu : push =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; | push
145 Guillemets typographiques fermants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ; | '' => suggestions : ['\xa0»', '”']

146 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. |    => suggestions : ['']
146 Mot inconnu : RW =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. | rw
146 Mot inconnu : rewind =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. | rewind
146 Pléonasme. =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. | comme par exemple => suggestions : ['comme', 'par exemple']
146 Guillemets typographiques ouvrants. =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. | '' => suggestions : ['«\xa0', '“']
146 Mot inconnu : reset =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. | reset
146 Mot inconnu : HEAD =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''. | head

149 Mot inconnu : Gitweb => Pour une configuration plus poussée, comme les permissions sur les branches, Gitweb, etc, voir le [[https://github.com/sitaramc/gitolite/blob/master/README.txt|README]] de Gitolite. | gitweb
149 Mot inconnu : Gitolite => Pour une configuration plus poussée, comme les permissions sur les branches, Gitweb, etc, voir le [[https://github.com/sitaramc/gitolite/blob/master/README.txt|README]] de Gitolite. | gitolite

154 Guillemets typographiques ouvrants. => Pour permettre à n'importe qui d'accéder en lecture à votre dépôt, il vous faudra installer le ''git daemon''. | '' => suggestions : ['«\xa0', '“']
154 Mot inconnu : daemon => Pour permettre à n'importe qui d'accéder en lecture à votre dépôt, il vous faudra installer le ''git daemon''. | daemon
154 Guillemets typographiques fermants. => Pour permettre à n'importe qui d'accéder en lecture à votre dépôt, il vous faudra installer le ''git daemon''. | '' => suggestions : ['\xa0»', '”']

162 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git |    => suggestions : ['']
162 Mot inconnu : exec =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git | exec
162 Mot inconnu : chpst =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git | chpst
162 Il manque un espace à côté du tiret. =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git |  - => suggestions : [' – ', ' — ']
162 Mot inconnu : ugitdaemon =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git | ugitdaemon
162 Mot inconnu : daemon =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git | daemon
162 Mot inconnu : verbose =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git | verbose
162 Mot inconnu : base-path =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git | base-path

166 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories |    => suggestions : ['']
166 Mot inconnu : exec =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories | exec
166 Mot inconnu : chpst =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories | chpst
166 Il manque un espace à côté du tiret. =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories |  - => suggestions : [' – ', ' — ']
166 Doublon. =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories | git git => suggestions : ['git']
166 Mot inconnu : daemon =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories | daemon
166 Mot inconnu : verbose =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories | verbose
166 Mot inconnu : base-path =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories | base-path

168 Guillemets typographiques ouvrants. => puis redémarrez le ''git daemon'' avec : | '' => suggestions : ['«\xa0', '“']
168 Mot inconnu : daemon => puis redémarrez le ''git daemon'' avec : | daemon
168 Guillemets typographiques fermants. => puis redémarrez le ''git daemon'' avec : | '' => suggestions : ['\xa0»', '”']

170 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo /etc/init.d/git-daemon restart |    => suggestions : ['']
170 Mot inconnu : sudo =>   sudo /etc/init.d/git-daemon restart | sudo
170 Mot inconnu : restart =>   sudo /etc/init.d/git-daemon restart | restart

172 Guillemets typographiques ouvrants. => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne : | '' => suggestions : ['«\xa0', '“']
172 Mot inconnu : daemon => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne : | daemon
172 Guillemets typographiques fermants. => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne : | '' => suggestions : ['\xa0»', '”']

174 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   R                   = daemon |    => suggestions : ['']
174 Espace(s) surnuméraire(s) à supprimer. =>   R                   = daemon |                     => suggestions : [' ']
174 Mot inconnu : daemon =>   R                   = daemon | daemon

179 Guillemets typographiques ouvrants. => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots. | '' => suggestions : ['«\xa0', '“']
179 Mot inconnu : daemon => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots. | daemon
179 Guillemets typographiques fermants. => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots. | '' => suggestions : ['\xa0»', '”']
179 Mot inconnu : dépots => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots. | dépots

187 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' |    => suggestions : ['']
187 Mot inconnu : REPO_UMASK =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' | repo_umask
187 Espace(s) surnuméraire(s) à supprimer. =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' |         => suggestions : [' ']
187 Mot inconnu : gets =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' | gets
187 Mot inconnu : you =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' | you
187 Guillemets typographiques ouvrants. =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' | ' => suggestions : ['“', '‘', '‹']
187 Mot inconnu : rwxr-x =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---' | rwxr-x

189 Confusion. La conjonction “ou” signale une alternative. Pour évoquer un lieu, un temps ou une situation, écrivez “où”. => Ce n'est pas tout. Cette modification affectera les nouveaux dépôts créés, pas ceux déjà existants. Pour attribuer les bonnes permissions sur un dépôt existant, procédez comme ceci (dans le cas ou nous voulons attribuer le droit de lecture au groupe) : | ou => suggestions : ['où']

191 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/ |    => suggestions : ['']
191 Mot inconnu : sudo =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/ | sudo
191 Mot inconnu : chmod =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/ | chmod
191 Il manque un espace à côté du tiret. =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/ |  - => suggestions : [' – ', ' — ']
191 Mot inconnu : Xr =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/ | xr

194 S’il s’agit d’un impératif, mettez un trait d’union. => Notez le **'X'** et non pas **'x'**, qui aura pour effet d'attribuer le droit d'exécution seulement sur un dossier, ou sur un fichier si celui-ci est déjà exécutable (par le propriétaire par exemple). | notez le => suggestions : ['Notez-le']

205 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone git@server:my_repo |    => suggestions : ['']
205 Il manque un espace. =>   git clone git@server:my_repo | my_repo => suggestions : [' my_repo']
205 Mot inconnu : my_repo =>   git clone git@server:my_repo | my_repo

211 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone git://server/my_repo |    => suggestions : ['']
211 Mot inconnu : server =>   git clone git://server/my_repo | server
211 Mot inconnu : my_repo =>   git clone git://server/my_repo | my_repo

215 Guillemets typographiques fermants. => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec : | '' => suggestions : ['\xa0»', '”']
215 Mot inconnu : server => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec : | server
215 Guillemets typographiques fermants. => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec : | '' => suggestions : ['\xa0»', '”']

217 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone gitolite:my_repo |    => suggestions : ['']
217 Mot inconnu : gitolite =>   git clone gitolite:my_repo | gitolite
217 Il manque un espace. =>   git clone gitolite:my_repo | my_repo => suggestions : [' my_repo']
217 Mot inconnu : my_repo =>   git clone gitolite:my_repo | my_repo

220 Mot inconnu : server => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière : | server
220 Guillemets typographiques fermants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière : | '' => suggestions : ['\xa0»', '”']
220 Guillemets typographiques ouvrants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière : | '' => suggestions : ['«\xa0', '“']
220 Guillemets typographiques fermants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière : | '' => suggestions : ['\xa0»', '”']
220 Mot inconnu : server => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière : | server
220 Guillemets typographiques fermants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière : | '' => suggestions : ['\xa0»', '”']

222 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mkdir repo1 |    => suggestions : ['']
222 Mot inconnu : mkdir =>   mkdir repo1 | mkdir
222 Mot inconnu : repo1 =>   mkdir repo1 | repo1

223 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd repo1 |    => suggestions : ['']
223 Mot inconnu : repo1 =>   cd repo1 | repo1

224 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git init |    => suggestions : ['']
224 Mot inconnu : init =>   git init | init

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit --allow-empty -m "initial repository" |    => suggestions : ['']
225 Mot inconnu : allow-empty =>   git commit --allow-empty -m "initial repository" | allow-empty
225 Guillemets typographiques ouvrants. =>   git commit --allow-empty -m "initial repository" | " => suggestions : ['«\xa0', '“']
225 Mot inconnu : repository =>   git commit --allow-empty -m "initial repository" | repository
225 Guillemets typographiques fermants. =>   git commit --allow-empty -m "initial repository" | " => suggestions : ['\xa0»', '”']

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git remote add origin git@server:repo1 |    => suggestions : ['']
226 Mot inconnu : remote =>   git remote add origin git@server:repo1 | remote
226 Mot inconnu : add =>   git remote add origin git@server:repo1 | add
226 Mot inconnu : origin =>   git remote add origin git@server:repo1 | origin
226 Il manque un espace. =>   git remote add origin git@server:repo1 | repo1 => suggestions : [' repo1']
226 Mot inconnu : repo1 =>   git remote add origin git@server:repo1 | repo1

227 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push origin master |    => suggestions : ['']
227 Mot inconnu : push =>   git push origin master | push
227 Mot inconnu : origin =>   git push origin master | origin

228 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git config push.default matching |    => suggestions : ['']
228 Mot inconnu : push =>   git config push.default matching | push
228 Mot inconnu : default =>   git config push.default matching | default
228 Mot inconnu : matching =>   git config push.default matching | matching

233 Mot inconnu : Gitolite => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**. | gitolite
233 Mot inconnu : server => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**. | server
233 Guillemets typographiques fermants. => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**. | '' => suggestions : ['\xa0»', '”']
233 Guillemets typographiques fermants. => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**. | '' => suggestions : ['\xa0»', '”']

235 Guillemets typographiques fermants. => Dossier à supprimer du dossier personnel de **''admin''** : | '' => suggestions : ['\xa0»', '”']

237 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/gitolite-admin'' |    => suggestions : ['']
237 Mot inconnu : gitolite-admin =>   * ''~/gitolite-admin'' | gitolite-admin
237 Guillemets typographiques fermants. =>   * ''~/gitolite-admin'' | '' => suggestions : ['\xa0»', '”']

239 Guillemets typographiques fermants. => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** : | '' => suggestions : ['\xa0»', '”']
239 Mot inconnu : server => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** : | server
239 Guillemets typographiques fermants. => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** : | '' => suggestions : ['\xa0»', '”']

241 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/.gitolite'' |    => suggestions : ['']
241 Mot inconnu : gitolite =>   * ''~/.gitolite'' | gitolite
241 Guillemets typographiques fermants. =>   * ''~/.gitolite'' | '' => suggestions : ['\xa0»', '”']

242 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/.gitolite.rc'' |    => suggestions : ['']
242 Mot inconnu : gitolite =>   * ''~/.gitolite.rc'' | gitolite
242 Mot inconnu : rc =>   * ''~/.gitolite.rc'' | rc
242 Guillemets typographiques fermants. =>   * ''~/.gitolite.rc'' | '' => suggestions : ['\xa0»', '”']

243 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/gitolite-install'' |    => suggestions : ['']
243 Mot inconnu : gitolite-install =>   * ''~/gitolite-install'' | gitolite-install
243 Guillemets typographiques fermants. =>   * ''~/gitolite-install'' | '' => suggestions : ['\xa0»', '”']

244 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/repositories/gitolite-admin.git'' |    => suggestions : ['']
244 Mot inconnu : repositories =>   * ''~/repositories/gitolite-admin.git'' | repositories
244 Mot inconnu : gitolite-admin =>   * ''~/repositories/gitolite-admin.git'' | gitolite-admin
244 Il manque un espace. =>   * ''~/repositories/gitolite-admin.git'' | git => suggestions : [' git']
244 Guillemets typographiques fermants. =>   * ''~/repositories/gitolite-admin.git'' | '' => suggestions : ['\xa0»', '”']

246 Mot inconnu : SSH => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** : | ssh
246 Mot inconnu : server => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** : | server
246 Guillemets typographiques fermants. => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** : | '' => suggestions : ['\xa0»', '”']

248 Accord de nombre erroné : « fichiers » est au pluriel. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | le => suggestions : ['les']
248 Accord de nombre erroné : « fichiers » devrait être au singulier. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | fichiers => suggestions : ['fichier']
248 Mot inconnu : ssh => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | ssh
248 Mot inconnu : authorized_keys => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | authorized_keys
248 Guillemets typographiques fermants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | '' => suggestions : ['\xa0»', '”']
248 Guillemets typographiques fermants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | '' => suggestions : ['\xa0»', '”']
248 Guillemets typographiques ouvrants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | " => suggestions : ['«\xa0', '“']
248 Mot inconnu : command => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | command
248 Typographie : points de suspension. Utilisez le caractère dédié. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | ... => suggestions : ['…']
248 Guillemets typographiques fermants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''. | " => suggestions : ['\xa0»', '”']

252 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ; |    => suggestions : ['']
252 Mot inconnu : Gitolite =>   * **(en)** [[https://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ; | gitolite
252 Mot inconnu : Github =>   * **(en)** [[https://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ; | github
