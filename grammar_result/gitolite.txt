5 Mot inconnu : Gitolite => ====== Gitolite ======

7 Mot inconnu : Gitolite => Gitolite est une réécriture de Gitosis, par Sitaram Chamarty. Il permet de gérer des dépôts [[:Git]] à l'aide d'un utilisateur spécifique sur un serveur, en leur attribuant des utilisateurs ou groupes d'utilisateurs, des droits spécifiques comme la lecture, écriture, etc. Il possède un fichier de configuration complètement diffèrent qui permet le contrôle d'accès sur chaque branche, incluant des spécifications comme qui peut ou ne peut pas revenir sur une branche donnée.
7 Mot inconnu : Gitosis => Gitolite est une réécriture de Gitosis, par Sitaram Chamarty. Il permet de gérer des dépôts [[:Git]] à l'aide d'un utilisateur spécifique sur un serveur, en leur attribuant des utilisateurs ou groupes d'utilisateurs, des droits spécifiques comme la lecture, écriture, etc. Il possède un fichier de configuration complètement diffèrent qui permet le contrôle d'accès sur chaque branche, incluant des spécifications comme qui peut ou ne peut pas revenir sur une branche donnée.
7 Mot inconnu : Sitaram => Gitolite est une réécriture de Gitosis, par Sitaram Chamarty. Il permet de gérer des dépôts [[:Git]] à l'aide d'un utilisateur spécifique sur un serveur, en leur attribuant des utilisateurs ou groupes d'utilisateurs, des droits spécifiques comme la lecture, écriture, etc. Il possède un fichier de configuration complètement diffèrent qui permet le contrôle d'accès sur chaque branche, incluant des spécifications comme qui peut ou ne peut pas revenir sur une branche donnée.
7 Mot inconnu : Chamarty => Gitolite est une réécriture de Gitosis, par Sitaram Chamarty. Il permet de gérer des dépôts [[:Git]] à l'aide d'un utilisateur spécifique sur un serveur, en leur attribuant des utilisateurs ou groupes d'utilisateurs, des droits spécifiques comme la lecture, écriture, etc. Il possède un fichier de configuration complètement diffèrent qui permet le contrôle d'accès sur chaque branche, incluant des spécifications comme qui peut ou ne peut pas revenir sur une branche donnée.

9 Mot inconnu : Gitolite => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite.
9 Confusion probable : l’évidement est l’action de vider quelque chose. L’adverbe s’écrit “évidemment”. => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite.
9 Mot inconnu : ssh => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite.
9 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite.
9 Mot inconnu : Gitolite => Gitolite utilise évidement les clés publiques ssh pour l'ajout d'utilisateur, mais il est intéressant car il interdit ses utilisateurs de se connecter à un shell de l'utilisateur des dépôts. C'est l'un des points importants de sécurité auxquels répond Gitolite.

13 Mot inconnu : Gitolite => Gitolite utilise un utilisateur spécifique sur le serveur pour gérer les dépôts.

15 Il manque un espace insécable. => Dans cette documentation nous considérerons les termes suivants :

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''server''** : serveur ;
17 Mot inconnu : server =>   * **''server''** : serveur ;
17 Guillemets typographiques fermants. =>   * **''server''** : serveur ;
17 Il manque un espace insécable. =>   * **''server''** : serveur ;
17 Il manque un espace insécable. =>   * **''server''** : serveur ;

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''admin''** : administrateur du serveur ;
18 Guillemets typographiques fermants. =>   * **''admin''** : administrateur du serveur ;
18 Il manque un espace insécable. =>   * **''admin''** : administrateur du serveur ;
18 Il manque un espace insécable. =>   * **''admin''** : administrateur du serveur ;

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').
19 Guillemets typographiques fermants. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').
19 Il manque un espace insécable. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').
19 Guillemets typographiques ouvrants. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').
19 Mot inconnu : sudo =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').
19 Mot inconnu : adduser =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').
19 Guillemets typographiques fermants. =>   * **''git''** : utilisateur Git du serveur (s'il n'est pas créé, il peut l'être avec ''sudo adduser git'').

21 Guillemets typographiques fermants. => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**.
21 Guillemets typographiques fermants. => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**.
21 Mot inconnu : server => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**.
21 Guillemets typographiques fermants. => Nous considérons donc que les utilisateurs **''admin''** et **''git''** sont sur **''server''**.

23 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :
23 Mot inconnu : ssh => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :
23 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :
23 Mot inconnu : server => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :
23 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :
23 Guillemets typographiques fermants. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :
23 Il manque un espace insécable. => **''admin''** doit avoir un accès ssh autorisé sur le compte de l'utilisateur **''git''**. Si ce n'est pas le cas, sur **''server''**, créez une paire de clés (publique et privée) pour **''admin''** avec :

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ssh-keygen
25 Mot inconnu : ssh-keygen =>   ssh-keygen

27 Guillemets typographiques fermants. => Puis ajoutez la clé publique aux clés autorisées de **''git''** avec :
27 Il manque un espace insécable. => Puis ajoutez la clé publique aux clés autorisées de **''git''** avec :

29 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost
29 Mot inconnu : ssh-copy-id =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost
29 Il manque un espace à côté du tiret. =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost
29 Mot inconnu : ssh =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost
29 Mot inconnu : id_rsa =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost
29 Il manque un espace. =>   ssh-copy-id -i ~/.ssh/id_rsa.pub git@localhost

31 Mot inconnu : ssh => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**.
31 Mot inconnu : authorized_keys => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**.
31 Guillemets typographiques fermants. => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**.
31 Guillemets typographiques fermants. => Cette commande a pour effet d'ajouter votre clé au fichier ''~/.ssh/authorized_keys'' de **''git''**.

33 Mot inconnu : Gitolite => Gitolite nécessite évidement Git. Si ce n'est pas fait, [[:tutoriel:comment_installer_un_paquet|installez donc le paquet]] [[apt>git-core|git-core]].
33 Confusion probable : l’évidement est l’action de vider quelque chose. L’adverbe s’écrit “évidemment”. => Gitolite nécessite évidement Git. Si ce n'est pas fait, [[:tutoriel:comment_installer_un_paquet|installez donc le paquet]] [[apt>git-core|git-core]].
33 Il manque un espace. => Gitolite nécessite évidement Git. Si ce n'est pas fait, [[:tutoriel:comment_installer_un_paquet|installez donc le paquet]] [[apt>git-core|git-core]].

36 Guillemets typographiques fermants. => L'installation se fera depuis le dossier personnel de l'utilisateur **''admin''** de votre serveur **''server''**.
36 Mot inconnu : server => L'installation se fera depuis le dossier personnel de l'utilisateur **''admin''** de votre serveur **''server''**.
36 Guillemets typographiques fermants. => L'installation se fera depuis le dossier personnel de l'utilisateur **''admin''** de votre serveur **''server''**.

38 Mot inconnu : Gitolite => Récupérez les sources de Gitolite sur Github, avec :
38 Mot inconnu : Github => Récupérez les sources de Gitolite sur Github, avec :
38 Il manque un espace insécable. => Récupérez les sources de Gitolite sur Github, avec :

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone http://github.com/sitaramc/gitolite.git

42 Il manque un espace insécable. => Déplacez-vous dans le dossier des sources :

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd gitolite
44 Mot inconnu : gitolite =>   cd gitolite

46 Mot inconnu : Gitolite => Lancez à présent le script d'installation de Gitolite :
46 Il manque un espace insécable. => Lancez à présent le script d'installation de Gitolite :

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   src/gl-easy-install git localhost admin
48 Mot inconnu : src =>   src/gl-easy-install git localhost admin
48 Mot inconnu : gl-easy-install =>   src/gl-easy-install git localhost admin
48 Mot inconnu : localhost =>   src/gl-easy-install git localhost admin

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

50 Mot inconnu : github => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note>
50 Conjugaison erronée. Accord avec “Les changements…”. Le verbe devrait être à la 3ᵉ personne du pluriel. => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note>
50 Confusion probable : “sur” est une préposition ou un adjectif signifiant acide ou aigre ; utilisez “sûr” pour certain, vrai ou sans danger. => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note>
50 Il manque un espace insécable. => <note important>La commande précédente n'est plus bonne avec la version actuelle du répertoire github. Les changements semble d'ailleurs assez important il n'est plus sur que cette page ne soit pas obsolète !</note>

51 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.
51 Guillemets typographiques ouvrants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.
51 Mot inconnu : localhost => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.
51 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.
51 Mot inconnu : server => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.
51 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.
51 Guillemets typographiques fermants. => Cela signifie que vous lancez l'installation en utilisant **''git''** comme utilisateur contenant les dépôts Git, sur votre serveur (ici la machine sur laquelle vous êtes connectée, donc ''localhost'' représente **''server''**) et utilisez **''admin''** comme administrateur des dépôts.

57 Mot inconnu : Gitolite => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :
57 Guillemets typographiques ouvrants. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :
57 Mot inconnu : gitolite-admin => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :
57 Guillemets typographiques fermants. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :
57 Mot inconnu : clône => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :
57 Guillemets typographiques fermants. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :
57 Il manque un espace insécable. => La configuration de Gitolite est simple. Un dépôt de configuration nommé ''gitolite-admin'' est créé sur le serveur, ainsi que son clône dans le répertoire personnel de **''admin''**. C'est dans celui-ci que nous configurerons nos dépôts. Cette configuration comprend un fichier et un dossier :

59 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;
59 Mot inconnu : gitolite =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;
59 Il manque un espace. =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;
59 Guillemets typographiques fermants. =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;
59 Il manque un espace insécable. =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;
59 Mot inconnu : Gitolite =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;
59 Il manque un espace insécable. =>   * **''conf/gitolite.conf''** : fichier de configuration de Gitolite, contenant les dépôts, leurs utilisateurs/groupes et leurs droits associés ;

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.
60 Mot inconnu : keydir =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.
60 Il manque un espace insécable. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.
60 Guillemets typographiques ouvrants. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.
60 Mot inconnu : user_name =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.
60 Il manque un espace. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.
60 Guillemets typographiques fermants. =>   * **''keydir/''** : dossier contenant les clés publiques des utilisateurs, sous la forme ''user_name.pub''.

62 Mot inconnu : Gitolite => La configuration de Gitolite utilisant un dépôt Git spécifique, il sera nécessaire de //commiter// les changements effectués pour qu'ils prennent effet, c'est pour cela qu'il est nécessaire de se situer dans le dossier de configuration pour appliquer des changements.

64 Guillemets typographiques ouvrants. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** :
64 Mot inconnu : gitolite-admin => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** :
64 Guillemets typographiques fermants. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** :
64 Guillemets typographiques fermants. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** :
64 Il manque un espace insécable. => Rendez-vous donc dans le dépôt ''gitolite-admin'' de votre utilisateur **''admin''** :

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd ~/gitolite-admin
66 Mot inconnu : gitolite-admin =>   cd ~/gitolite-admin

70 Il manque un espace. => Pour créer un dépôt, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''conf/gitolite.conf''. Ce fichier se présente sous la forme :
70 Guillemets typographiques ouvrants. => Pour créer un dépôt, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''conf/gitolite.conf''. Ce fichier se présente sous la forme :
70 Mot inconnu : gitolite => Pour créer un dépôt, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''conf/gitolite.conf''. Ce fichier se présente sous la forme :
70 Il manque un espace. => Pour créer un dépôt, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''conf/gitolite.conf''. Ce fichier se présente sous la forme :
70 Guillemets typographiques fermants. => Pour créer un dépôt, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''conf/gitolite.conf''. Ce fichier se présente sous la forme :
70 Il manque un espace insécable. => Pour créer un dépôt, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''conf/gitolite.conf''. Ce fichier se présente sous la forme :

77 Guillemets typographiques ouvrants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').
77 Mot inconnu : repo1 => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').
77 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').
77 Mot inconnu : repository => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').
77 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').
77 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').
77 Guillemets typographiques fermants. => ce qui signifie que le dépôt ''repo1'' (//repository// en anglais) admet un utilisateur (**''admin''**) qui possède les droits de lecture (''R'') et d'écriture (''W'').

79 Mot inconnu : my_repo => Pour ajouter un dépôt //my_repo//, ajoutez donc :
79 Il manque un espace insécable. => Pour ajouter un dépôt //my_repo//, ajoutez donc :

86 Il manque un espace insécable. => Une fois votre fichier édité, sauvegardez puis //commitez// les changements :

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add conf/gitolite.conf
88 Mot inconnu : add =>   git add conf/gitolite.conf
88 Mot inconnu : gitolite =>   git add conf/gitolite.conf
88 Il manque un espace. =>   git add conf/gitolite.conf

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -m "add repository my_repo"
89 Il manque un espace à côté du tiret. =>   git commit -m "add repository my_repo"
89 Guillemets typographiques ouvrants. =>   git commit -m "add repository my_repo"
89 Mot inconnu : add =>   git commit -m "add repository my_repo"
89 Mot inconnu : repository =>   git commit -m "add repository my_repo"
89 Mot inconnu : my_repo =>   git commit -m "add repository my_repo"
89 Guillemets typographiques fermants. =>   git commit -m "add repository my_repo"

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push
90 Mot inconnu : push =>   git push

92 Mot inconnu : my_repo => //my_repo// sera automatiquement créé après le //push// dans ''/home/git/repositories/''.
92 Mot inconnu : push => //my_repo// sera automatiquement créé après le //push// dans ''/home/git/repositories/''.

96 Guillemets typographiques ouvrants. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''.
96 Mot inconnu : keydir => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''.
96 Guillemets typographiques ouvrants. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''.
96 Mot inconnu : username => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''.
96 Il manque un espace. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''.
96 Guillemets typographiques fermants. => Pour ajouter un utilisateur, il suffit d'ajouter sa clé publique au dossier ''keydir/'' dans un fichier nommé ''username.pub''.

98 Guillemets typographiques ouvrants. => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Mot inconnu : user1 => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Guillemets typographiques fermants. => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Il manque un espace. => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Guillemets typographiques ouvrants. => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Mot inconnu : keydir => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Mot inconnu : user1 => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Il manque un espace. => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.
98 Guillemets typographiques fermants. => Pour ajouter par exemple l'utilisateur ''user1'', [[:tutoriel:comment_editer_un_fichier|créez le fichier]] ''keydir/user1.pub'' contenant sa clé publique.

101 Guillemets typographiques ouvrants. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.
101 Mot inconnu : ssh-keygen => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.
101 Guillemets typographiques fermants. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.
101 Mot inconnu : ssh => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.
101 Mot inconnu : id_rsa => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.
101 Il manque un espace. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.
101 Guillemets typographiques fermants. => Cette clé publique est habituellement créée avec la commande ''ssh-keygen'' (exécutée depuis le poste de l'utilisateur à ajouter) et est contenue dans le fichier ''~/.ssh/id_rsa.pub'' de l'utilisateur.

104 Il manque un espace insécable. => Une fois son fichier ajouté, //commitez// les changements :

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add keydir/user1.pub
106 Mot inconnu : add =>   git add keydir/user1.pub
106 Mot inconnu : keydir =>   git add keydir/user1.pub
106 Mot inconnu : user1 =>   git add keydir/user1.pub
106 Il manque un espace. =>   git add keydir/user1.pub

107 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -m "add user user1"
107 Il manque un espace à côté du tiret. =>   git commit -m "add user user1"
107 Guillemets typographiques ouvrants. =>   git commit -m "add user user1"
107 Mot inconnu : add =>   git commit -m "add user user1"
107 Mot inconnu : user1 =>   git commit -m "add user user1"
107 Guillemets typographiques fermants. =>   git commit -m "add user user1"

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push
108 Mot inconnu : push =>   git push

111 Il manque un espace insécable. => Un utilisateur peut avoir plusieurs clés publiques, pratique dans deux cas :

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ;
112 Guillemets typographiques fermants. =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ;
112 Mot inconnu : server =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ;
112 Guillemets typographiques fermants. =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ;
112 Il manque un espace insécable. =>   * **''admin''** est le nom utilisé pour l'administration de **''server''**, mais aussi le nom utilisé sur une machine de développement ;

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un utilisateur peut développer sur plusieurs machine, par exemple son pc et son portable.
113 Accord de nombre erroné : « machine » devrait être au pluriel. =>   * un utilisateur peut développer sur plusieurs machine, par exemple son pc et son portable.

115 Guillemets typographiques ouvrants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc.
115 Mot inconnu : user1 => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc.
115 Il manque un espace. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc.
115 Guillemets typographiques fermants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc.
115 Guillemets typographiques ouvrants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc.
115 Guillemets typographiques ouvrants. => Vous pouvez donc définir plusieurs clés pour un même utilisateur en créant des fichiers ''user1.pub'', ''user1@laptop.pub'', ''user1@foo.pub'', etc.

120 Guillemets typographiques ouvrants. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Mot inconnu : gitolite => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Il manque un espace. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Guillemets typographiques fermants. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Il manque un espace. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Guillemets typographiques ouvrants. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Mot inconnu : gitolite => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Il manque un espace. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Guillemets typographiques fermants. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :
120 Il manque un espace insécable. => Pour ajouter un groupe, il suffit de le définir dans le fichier ''gitolite.conf''. [[:tutoriel:comment_editer_un_fichier|Éditez donc le fichier]] ''conf/gitolite.conf'' et ajoutez-y un groupe au début du fichier comme ceci :

122 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   @group1 = user1 user2 user3
122 Mot inconnu : user1 =>   @group1 = user1 user2 user3
122 Mot inconnu : user2 =>   @group1 = user1 user2 user3
122 Mot inconnu : user3 =>   @group1 = user1 user2 user3

125 Guillemets typographiques fermants. => Le groupe ''@all'' est un groupe pré-définit, représentant tous les utilisateurs.

128 Il manque un espace insécable. => Pour assigner un groupe à un dépôt, il suffit de le définir comme pour un utilisateur :

135 Il manque un espace insécable. => Puis //commitez// les changements avec :

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add conf/gitolite.conf
137 Mot inconnu : add =>   git add conf/gitolite.conf
137 Mot inconnu : gitolite =>   git add conf/gitolite.conf
137 Il manque un espace. =>   git add conf/gitolite.conf

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Il manque un espace à côté du tiret. =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Guillemets typographiques ouvrants. =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : add =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : group =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : group1 =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : and =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : assign =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : it =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : to =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : repo =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Mot inconnu : my_repo =>   git commit -m "add group group1 and assign it to repo my_repo"
138 Guillemets typographiques fermants. =>   git commit -m "add group group1 and assign it to repo my_repo"

139 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push
139 Mot inconnu : push =>   git push

143 Il manque un espace insécable. => Comme vous l'avez remarqué, les droits sont définis à des utilisateurs pour un dépôt donné. Il existe 3 types de droits :

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ;
145 Il manque un espace insécable. =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ;
145 Guillemets typographiques ouvrants. =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ;
145 Guillemets typographiques fermants. =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ;
145 Il manque un espace insécable. =>   * **R** : droit de lecture uniquement (l'utilisateur peut effectuer un ''git clone'', etc) ;

146 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Mot inconnu : RW =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Il manque un espace insécable. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Guillemets typographiques ouvrants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Guillemets typographiques fermants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Guillemets typographiques ouvrants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Mot inconnu : push =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Guillemets typographiques fermants. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;
146 Il manque un espace insécable. =>   * **RW** : droit de lecture et écriture (l'utilisateur peut effectuer un ''git clone'', ''git push'', etc) ;

147 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Mot inconnu : RW =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Il manque un espace insécable. =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Mot inconnu : rewind =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Pléonasme. =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Guillemets typographiques ouvrants. =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Mot inconnu : reset =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.
147 Mot inconnu : HEAD =>   * **RW+** : droit de lecture et écriture, ainsi que les //rewind permissions//, c'est-à-dire le droit de supprimer des étapes du projet, comme par exemple permettre la commande ''git reset --hard HEAD^''.

150 Mot inconnu : Gitweb => Pour une configuration plus poussée, comme les permissions sur les branches, Gitweb, etc, voir le [[https://github.com/sitaramc/gitolite/blob/master/README.txt|README]] de Gitolite.
150 Mot inconnu : Gitolite => Pour une configuration plus poussée, comme les permissions sur les branches, Gitweb, etc, voir le [[https://github.com/sitaramc/gitolite/blob/master/README.txt|README]] de Gitolite.

155 Guillemets typographiques ouvrants. => Pour permettre à n'importe qui d'accéder en lecture à votre dépôt, il vous faudra installer le ''git daemon''.
155 Mot inconnu : daemon => Pour permettre à n'importe qui d'accéder en lecture à votre dépôt, il vous faudra installer le ''git daemon''.
155 Guillemets typographiques fermants. => Pour permettre à n'importe qui d'accéder en lecture à votre dépôt, il vous faudra installer le ''git daemon''.

157 Il manque un espace. => [[:tutoriel:comment_installer_un_paquet|Installez donc le paquet]] [[apt://git-daemon-run|git-daemon-run]].

159 Guillemets typographiques ouvrants. => Il faut indiquer au ''git daemon'' où sont situés les dépôts. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''/etc/sv/git-daemon/run''.
159 Mot inconnu : daemon => Il faut indiquer au ''git daemon'' où sont situés les dépôts. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''/etc/sv/git-daemon/run''.
159 Guillemets typographiques fermants. => Il faut indiquer au ''git daemon'' où sont situés les dépôts. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''/etc/sv/git-daemon/run''.
159 Il manque un espace. => Il faut indiquer au ''git daemon'' où sont situés les dépôts. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''/etc/sv/git-daemon/run''.
159 Guillemets typographiques fermants. => Il faut indiquer au ''git daemon'' où sont situés les dépôts. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez votre fichier]] ''/etc/sv/git-daemon/run''.

161 Il manque un espace insécable. => Changez la ligne :

163 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Mot inconnu : exec =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Mot inconnu : chpst =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Il manque un espace à côté du tiret. =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Mot inconnu : ugitdaemon =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Mot inconnu : daemon =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Mot inconnu : verbose =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git
163 Mot inconnu : base-path =>   exec chpst -ugitdaemon git daemon --verbose --base-path=/var/cache /var/cache/git

165 Il manque un espace insécable. => par :

167 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Mot inconnu : exec =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Mot inconnu : chpst =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Il manque un espace à côté du tiret. =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Doublon. =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Mot inconnu : daemon =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Mot inconnu : verbose =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories
167 Mot inconnu : base-path =>   exec chpst -u git git daemon --verbose --base-path=/home/git/repositories

169 Guillemets typographiques ouvrants. => puis redémarrez le ''git daemon'' avec :
169 Mot inconnu : daemon => puis redémarrez le ''git daemon'' avec :
169 Guillemets typographiques fermants. => puis redémarrez le ''git daemon'' avec :
169 Il manque un espace insécable. => puis redémarrez le ''git daemon'' avec :

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo /etc/init.d/git-daemon restart
171 Mot inconnu : sudo =>   sudo /etc/init.d/git-daemon restart
171 Mot inconnu : restart =>   sudo /etc/init.d/git-daemon restart

173 Guillemets typographiques ouvrants. => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne :
173 Mot inconnu : daemon => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne :
173 Guillemets typographiques fermants. => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne :
173 Il manque un espace insécable. => Pour donner le droit de lecture au public pour un dépôt, il suffit d'attribuer le droit de lecture à l'utilisateur ''daemon'' pour ce dépôt. C'est-à-dire, ajouter la ligne :

175 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   R                   = daemon
175 Espace(s) surnuméraire(s) à supprimer. =>   R                   = daemon
175 Mot inconnu : daemon =>   R                   = daemon

180 Guillemets typographiques ouvrants. => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots.
180 Mot inconnu : daemon => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots.
180 Guillemets typographiques fermants. => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots.
180 Mot inconnu : dépots => Notez que ''git daemon'' écoute sur le port **9418**. Donc celui-ci devra être accessible depuis l'extérieur pour permettre au public d'accéder à vos dépots.

184 Mot inconnu : Gitweb => Il peut être utile de changer le masque des dépôts, c'est-à-dire attribuer des droits différents aux nouveaux dépôts. Par exemple, //Gitweb// ou [[:redmine|Redmine]] ont besoin de lire les dépôts pour les parcourir. Souvent, la plus propre méthode consistera à ajouter leur utilisateur au groupe //git// et ajouter le droit de lecture à ce groupe.

186 Il manque un espace. => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Mot inconnu : server => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Guillemets typographiques fermants. => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Guillemets typographiques ouvrants. => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Mot inconnu : REPO_UMASK => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Guillemets typographiques fermants. => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Mot inconnu : décommentez => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :
186 Il manque un espace insécable. => [[:tutoriel:comment_editer_un_fichier|Éditez le fichier]] **''/home/git/.gitolite.rc''** (sur **''server''**) pour y changer la valeur de la variable ''REPO_UMASK'' comme ceci (commentez la valeur actuelle et décommentez celle voulue) :

188 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Mot inconnu : REPO_UMASK =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Il manque un espace insécable. =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Espace(s) surnuméraire(s) à supprimer. =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Mot inconnu : gets =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Mot inconnu : you =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Guillemets typographiques ouvrants. =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'
188 Mot inconnu : rwxr-x =>   $REPO_UMASK = 0027;       # gets you 'rwxr-x---'

190 Confusion. La conjonction “ou” signale une alternative. Pour évoquer un lieu, un temps ou une situation, écrivez “où”. => Ce n'est pas tout. Cette modification affectera les nouveaux dépôts créés, pas ceux déjà existants. Pour attribuer les bonnes permissions sur un dépôt existant, procédez comme ceci (dans le cas ou nous voulons attribuer le droit de lecture au groupe) :
190 Il manque un espace insécable. => Ce n'est pas tout. Cette modification affectera les nouveaux dépôts créés, pas ceux déjà existants. Pour attribuer les bonnes permissions sur un dépôt existant, procédez comme ceci (dans le cas ou nous voulons attribuer le droit de lecture au groupe) :

192 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/
192 Mot inconnu : sudo =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/
192 Mot inconnu : chmod =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/
192 Il manque un espace à côté du tiret. =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/
192 Mot inconnu : Xr =>   sudo chmod -R g+Xr /home/git/repositories/<mon_depot>.git/

195 S’il s’agit d’un impératif, mettez un trait d’union. => Notez le **'X'** et non pas **'x'**, qui aura pour effet d'attribuer le droit d'exécution seulement sur un dossier, ou sur un fichier si celui-ci est déjà exécutable (par le propriétaire par exemple).

204 Il manque un espace insécable. => Après avoir ajouté un utilisateur, celui-ci peut //cloner// un dépôt avec :

206 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone git@server:my_repo
206 Il manque un espace. =>   git clone git@server:my_repo
206 Mot inconnu : my_repo =>   git clone git@server:my_repo

210 Il manque un espace insécable. => Si vous avez [[#rendre_un_depot_public|rendu un dépôt public]], n'importe qui pourra //cloner// ce dépôt avec :

212 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone git://server/my_repo
212 Mot inconnu : server =>   git clone git://server/my_repo
212 Mot inconnu : my_repo =>   git clone git://server/my_repo

216 Guillemets typographiques fermants. => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec :
216 Mot inconnu : server => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec :
216 Guillemets typographiques fermants. => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec :
216 Il manque un espace insécable. => Dans le cas où l'utilisateur **''admin''** veut développer sur **''server''**, il doit //cloner// un dépôt avec :

218 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone gitolite:my_repo
218 Mot inconnu : gitolite =>   git clone gitolite:my_repo
218 Il manque un espace. =>   git clone gitolite:my_repo
218 Mot inconnu : my_repo =>   git clone gitolite:my_repo

221 Mot inconnu : server => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :
221 Guillemets typographiques fermants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :
221 Guillemets typographiques ouvrants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :
221 Guillemets typographiques fermants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :
221 Mot inconnu : server => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :
221 Guillemets typographiques fermants. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :
221 Il manque un espace insécable. => Si votre version de Git de **''server''**  est inférieure à ''1.6.2'', vous obtiendrez une erreur au //clone// d'un dépôt **vide**. Pour contourner ce problème, vous pouvez mettre à jour votre la version de Git de **''server''**, ou contourner le problème chez le client en //clonant// le dépôt de cette manière :

223 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mkdir repo1
223 Mot inconnu : mkdir =>   mkdir repo1
223 Mot inconnu : repo1 =>   mkdir repo1

224 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd repo1
224 Mot inconnu : repo1 =>   cd repo1

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git init
225 Mot inconnu : init =>   git init

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit --allow-empty -m "initial repository"
226 Mot inconnu : allow-empty =>   git commit --allow-empty -m "initial repository"
226 Guillemets typographiques ouvrants. =>   git commit --allow-empty -m "initial repository"
226 Mot inconnu : repository =>   git commit --allow-empty -m "initial repository"
226 Guillemets typographiques fermants. =>   git commit --allow-empty -m "initial repository"

227 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git remote add origin git@server:repo1
227 Mot inconnu : remote =>   git remote add origin git@server:repo1
227 Mot inconnu : add =>   git remote add origin git@server:repo1
227 Mot inconnu : origin =>   git remote add origin git@server:repo1
227 Il manque un espace. =>   git remote add origin git@server:repo1
227 Mot inconnu : repo1 =>   git remote add origin git@server:repo1

228 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push origin master
228 Mot inconnu : push =>   git push origin master
228 Mot inconnu : origin =>   git push origin master

229 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git config push.default matching
229 Mot inconnu : push =>   git config push.default matching
229 Mot inconnu : default =>   git config push.default matching
229 Mot inconnu : matching =>   git config push.default matching

234 Mot inconnu : Gitolite => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**.
234 Mot inconnu : server => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**.
234 Guillemets typographiques fermants. => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**.
234 Guillemets typographiques fermants. => Pour désinstaller Gitolite, il faut supprimer des fichiers de **''server''** et **''admin''**.

236 Guillemets typographiques fermants. => Dossier à supprimer du dossier personnel de **''admin''** :
236 Il manque un espace insécable. => Dossier à supprimer du dossier personnel de **''admin''** :

238 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/gitolite-admin''
238 Mot inconnu : gitolite-admin =>   * ''~/gitolite-admin''
238 Guillemets typographiques fermants. =>   * ''~/gitolite-admin''

240 Guillemets typographiques fermants. => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** :
240 Mot inconnu : server => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** :
240 Guillemets typographiques fermants. => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** :
240 Il manque un espace insécable. => Fichiers ou dossiers à supprimer du dossier personnel de **''git''** sur **''server''** :

242 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/.gitolite''
242 Mot inconnu : gitolite =>   * ''~/.gitolite''
242 Guillemets typographiques fermants. =>   * ''~/.gitolite''

243 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/.gitolite.rc''
243 Mot inconnu : gitolite =>   * ''~/.gitolite.rc''
243 Mot inconnu : rc =>   * ''~/.gitolite.rc''
243 Guillemets typographiques fermants. =>   * ''~/.gitolite.rc''

244 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/gitolite-install''
244 Mot inconnu : gitolite-install =>   * ''~/gitolite-install''
244 Guillemets typographiques fermants. =>   * ''~/gitolite-install''

245 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''~/repositories/gitolite-admin.git''
245 Mot inconnu : repositories =>   * ''~/repositories/gitolite-admin.git''
245 Mot inconnu : gitolite-admin =>   * ''~/repositories/gitolite-admin.git''
245 Il manque un espace. =>   * ''~/repositories/gitolite-admin.git''
245 Guillemets typographiques fermants. =>   * ''~/repositories/gitolite-admin.git''

247 Mot inconnu : SSH => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** :
247 Mot inconnu : server => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** :
247 Guillemets typographiques fermants. => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** :
247 Il manque un espace insécable. => Il ne reste plus qu'à supprimer les accès SSH des utilisateurs sur **''server''** :

249 Accord de nombre erroné : « fichiers » est au pluriel. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Accord de nombre erroné : « fichiers » devrait être au singulier. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Mot inconnu : ssh => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Mot inconnu : authorized_keys => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Guillemets typographiques fermants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Guillemets typographiques fermants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Guillemets typographiques ouvrants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Mot inconnu : command => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Typographie : points de suspension. Utilisez le caractère dédié. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.
249 Guillemets typographiques fermants. => dans le fichiers ''~/.ssh/authorized_keys'' de l'utilisateur **''git''**, supprimez les clés des utilisateurs, ou supprimez la partie ''"command=..."''.

253 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ;
253 Mot inconnu : Gitolite =>   * **(en)** [[http://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ;
253 Mot inconnu : Github =>   * **(en)** [[http://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ;
253 Il manque un espace insécable. =>   * **(en)** [[http://github.com/sitaramc/gitolite|page de Gitolite]] sur Github ;

254 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** documentation de [[:git|Git]] du wiki ;
254 Il manque un espace insécable. =>   * **(fr)** documentation de [[:git|Git]] du wiki ;

258 Il manque un espace insécable. => //Contributeurs : [[:utilisateurs/v0n]].//
258 Mot inconnu : v0n => //Contributeurs : [[:utilisateurs/v0n]].//
