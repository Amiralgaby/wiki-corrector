
3 Mot inconnu : OOM [[7:10]] => ====== OOM Killer ====== <|> oom
3 Mot inconnu : Killer [[11:17]] => ====== OOM Killer ====== <|> killer
4 Mot inconnu : Rientjes [[80:88]] => <note tip>Depuis le noyau 2.6.36 (Octobre 2010) un développeur de google (David Rientjes) a entièrement réécrit le code du OOM-Killer afin d'améliorer le choix du processus coupable</note> <|> rientjes
4 Mot inconnu : OOM-Killer [[123:133]] => <note tip>Depuis le noyau 2.6.36 (Octobre 2010) un développeur de google (David Rientjes) a entièrement réécrit le code du OOM-Killer afin d'améliorer le choix du processus coupable</note> <|> oom-killer

7 Mot inconnu : OOM [[13:16]] => Le mécanisme OOM killer (Out-Of-Memory Killer) est un mécanisme de la dernière chance qui est incorporé au noyau Linux en cas de dépassement de la capacité mémoire. Si le système n'a plus assez de mémoire à allouer aux processus et que le swap a été lui aussi entièrement rempli alors le noyau n'a pas d'autre choix que de faire appel à son tueur à gages préféré : OOM killer. <|> oom
7 Mot inconnu : killer [[17:23]] => Le mécanisme OOM killer (Out-Of-Memory Killer) est un mécanisme de la dernière chance qui est incorporé au noyau Linux en cas de dépassement de la capacité mémoire. Si le système n'a plus assez de mémoire à allouer aux processus et que le swap a été lui aussi entièrement rempli alors le noyau n'a pas d'autre choix que de faire appel à son tueur à gages préféré : OOM killer. <|> killer
7 Mot inconnu : Out-Of-Memory [[25:38]] => Le mécanisme OOM killer (Out-Of-Memory Killer) est un mécanisme de la dernière chance qui est incorporé au noyau Linux en cas de dépassement de la capacité mémoire. Si le système n'a plus assez de mémoire à allouer aux processus et que le swap a été lui aussi entièrement rempli alors le noyau n'a pas d'autre choix que de faire appel à son tueur à gages préféré : OOM killer. <|> out-of-memory
7 Mot inconnu : Killer [[39:45]] => Le mécanisme OOM killer (Out-Of-Memory Killer) est un mécanisme de la dernière chance qui est incorporé au noyau Linux en cas de dépassement de la capacité mémoire. Si le système n'a plus assez de mémoire à allouer aux processus et que le swap a été lui aussi entièrement rempli alors le noyau n'a pas d'autre choix que de faire appel à son tueur à gages préféré : OOM killer. <|> killer
7 Mot inconnu : OOM [[365:368]] => Le mécanisme OOM killer (Out-Of-Memory Killer) est un mécanisme de la dernière chance qui est incorporé au noyau Linux en cas de dépassement de la capacité mémoire. Si le système n'a plus assez de mémoire à allouer aux processus et que le swap a été lui aussi entièrement rempli alors le noyau n'a pas d'autre choix que de faire appel à son tueur à gages préféré : OOM killer. <|> oom
7 Mot inconnu : killer [[369:375]] => Le mécanisme OOM killer (Out-Of-Memory Killer) est un mécanisme de la dernière chance qui est incorporé au noyau Linux en cas de dépassement de la capacité mémoire. Si le système n'a plus assez de mémoire à allouer aux processus et que le swap a été lui aussi entièrement rempli alors le noyau n'a pas d'autre choix que de faire appel à son tueur à gages préféré : OOM killer. <|> killer

9 Mot inconnu : badness [[218:225]] => Ce dernier va, selon des heuristiques complexes, se choisir une victime parmi les processus s'exécutant sur la machine et il va mettre fin à ses jours. La détermination du choix du coupable se fait selon un score de //badness// pouvant aller de **-1000** (ne jamais tuer) à **1000** (à tuer absolument). L'idée étant d'éviter un crash de la machine en essayant d'éliminer le processus glouton. <|> badness
9 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. [[247:252]] => Ce dernier va, selon des heuristiques complexes, se choisir une victime parmi les processus s'exécutant sur la machine et il va mettre fin à ses jours. La détermination du choix du coupable se fait selon un score de //badness// pouvant aller de **-1000** (ne jamais tuer) à **1000** (à tuer absolument). L'idée étant d'éviter un crash de la machine en essayant d'éliminer le processus glouton. <|> -1000 => suggestions : None
