
10 Mot inconnu : sudo [[0:4]] => sudo apt-get update <|> sudo
10 Mot inconnu : apt-get [[5:12]] => sudo apt-get update <|> apt-get
10 Mot inconnu : update [[13:19]] => sudo apt-get update <|> update

20 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[113:117]] => Il est probable qu'aucune des deux méthodes (commandes ou interface graphique) ne remplacera complètement l'autre car elles se complètent plus qu'elles ne rivalisent. <|>  car => suggestions : [', car']

35 Une de ces ponctuations est superflue. [[284:287]] => Beaucoup de bureaux permettent de **lancer directement des commandes** via une fenêtre qui s'ouvre en faisant **<ALT><F2>**. Vous pouvez donc lancer le terminal ainsi en y tapant son nom. L'émulateur par défaut peut se lancer soit par sa commande propre (gnome-terminal, mate-terminal, ...), soit par la commande **x-terminal-emulator**, qui est un "raccourci" vers la commande du terminal par défaut. <|> , . => suggestions : [',', '.']
35 Typographie : points de suspension. Utilisez le caractère dédié. [[286:289]] => Beaucoup de bureaux permettent de **lancer directement des commandes** via une fenêtre qui s'ouvre en faisant **<ALT><F2>**. Vous pouvez donc lancer le terminal ainsi en y tapant son nom. L'émulateur par défaut peut se lancer soit par sa commande propre (gnome-terminal, mate-terminal, ...), soit par la commande **x-terminal-emulator**, qui est un "raccourci" vers la commande du terminal par défaut. <|> ... => suggestions : ['…']
35 Mot inconnu : x-terminal-emulator [[315:334]] => Beaucoup de bureaux permettent de **lancer directement des commandes** via une fenêtre qui s'ouvre en faisant **<ALT><F2>**. Vous pouvez donc lancer le terminal ainsi en y tapant son nom. L'émulateur par défaut peut se lancer soit par sa commande propre (gnome-terminal, mate-terminal, ...), soit par la commande **x-terminal-emulator**, qui est un "raccourci" vers la commande du terminal par défaut. <|> x-terminal-emulator
35 Guillemets typographiques ouvrants. [[349:350]] => Beaucoup de bureaux permettent de **lancer directement des commandes** via une fenêtre qui s'ouvre en faisant **<ALT><F2>**. Vous pouvez donc lancer le terminal ainsi en y tapant son nom. L'émulateur par défaut peut se lancer soit par sa commande propre (gnome-terminal, mate-terminal, ...), soit par la commande **x-terminal-emulator**, qui est un "raccourci" vers la commande du terminal par défaut. <|> " => suggestions : ['«\xa0', '“']
35 Guillemets typographiques fermants. [[359:360]] => Beaucoup de bureaux permettent de **lancer directement des commandes** via une fenêtre qui s'ouvre en faisant **<ALT><F2>**. Vous pouvez donc lancer le terminal ainsi en y tapant son nom. L'émulateur par défaut peut se lancer soit par sa commande propre (gnome-terminal, mate-terminal, ...), soit par la commande **x-terminal-emulator**, qui est un "raccourci" vers la commande du terminal par défaut. <|> " => suggestions : ['\xa0»', '”']

44 Mot inconnu : tab [[78:81]] => Après avoir tapé 2 ou 3 caractères, il est possible d'appuyer sur la touche //tab// (au-dessus de "verrouillage majuscule") qui permet de compléter la suite de la commande, du nom du dossier ou fichier. Cela évite les erreurs de frappe et est très appréciable pour éviter de saisir le nom de fichier parfois long et complexe comme le nom de certains paquets. Peut-être utilisé plusieurs fois si plusieurs noms ont une partie commune. \\ <|> tab
44 Guillemets typographiques ouvrants. [[98:99]] => Après avoir tapé 2 ou 3 caractères, il est possible d'appuyer sur la touche //tab// (au-dessus de "verrouillage majuscule") qui permet de compléter la suite de la commande, du nom du dossier ou fichier. Cela évite les erreurs de frappe et est très appréciable pour éviter de saisir le nom de fichier parfois long et complexe comme le nom de certains paquets. Peut-être utilisé plusieurs fois si plusieurs noms ont une partie commune. \\ <|> " => suggestions : ['«\xa0', '“']
44 Guillemets typographiques fermants. [[121:122]] => Après avoir tapé 2 ou 3 caractères, il est possible d'appuyer sur la touche //tab// (au-dessus de "verrouillage majuscule") qui permet de compléter la suite de la commande, du nom du dossier ou fichier. Cela évite les erreurs de frappe et est très appréciable pour éviter de saisir le nom de fichier parfois long et complexe comme le nom de certains paquets. Peut-être utilisé plusieurs fois si plusieurs noms ont une partie commune. \\ <|> " => suggestions : ['\xa0»', '”']

47 Mot inconnu : Pantheon [[32:40]] => <note help>**Cas particulier de Pantheon**\\ <|> pantheon

48 Mot inconnu : Pantheon [[31:39]] => Dans le cas de l'environnement Pantheon (qu'on retrouve par défaut sous elementary OS), les combinaisons par défaut sont **Ctrl+C** pour copier et **Ctrl+V** pour coller dans le Terminal. </note> <|> pantheon
48 Mot inconnu : elementary [[72:82]] => Dans le cas de l'environnement Pantheon (qu'on retrouve par défaut sous elementary OS), les combinaisons par défaut sont **Ctrl+C** pour copier et **Ctrl+V** pour coller dans le Terminal. </note> <|> elementary

63 Guillemets typographiques ouvrants. [[167:168]] => <note important>Attention lorsque vous copiez collez bêtement des commandes dans un terminal elles risquent d'être immédiatement exécutées sans que vous n'ayez pressé "Entrée".\\ <|> " => suggestions : ['«\xa0', '“']
63 Guillemets typographiques fermants. [[174:175]] => <note important>Attention lorsque vous copiez collez bêtement des commandes dans un terminal elles risquent d'être immédiatement exécutées sans que vous n'ayez pressé "Entrée".\\ <|> " => suggestions : ['\xa0»', '”']

64 Guillemets typographiques ouvrants. [[29:30]] => C'est parce que le caractère "Entrée" est inclus si vous sélectionnez plusieurs lignes d'un coup (faites l'essai avec les 2 premières du code ci-dessus ;-)). C'est pratique mais parfois dangereux ! </note> <|> " => suggestions : ['«\xa0', '“']
64 Accord de genre erroné : « le caractère » est masculin, « Entrée » est féminin. [[30:36]] => C'est parce que le caractère "Entrée" est inclus si vous sélectionnez plusieurs lignes d'un coup (faites l'essai avec les 2 premières du code ci-dessus ;-)). C'est pratique mais parfois dangereux ! </note> <|> entrée => suggestions : ['Entré', 'Entrait']
64 Guillemets typographiques fermants. [[36:37]] => C'est parce que le caractère "Entrée" est inclus si vous sélectionnez plusieurs lignes d'un coup (faites l'essai avec les 2 premières du code ci-dessus ;-)). C'est pratique mais parfois dangereux ! </note> <|> " => suggestions : ['\xa0»', '”']
85 Mot inconnu : mv [[45:47]] => Dans un cas similaire au premier exemple : //mv "le fichier à déplacer" "le dossier où le déplacer"//, il suffit de taper le début de la commande : //mv//, puis //espace//, puis de faire un //glisser-déposer du fichier// de votre gestionnaire de fichier jusqu'au terminal, puis //espace//, un second //glisser-déposer//, puis //entrer// pour exécuter la commande. <|> mv
85 Guillemets typographiques ouvrants. [[48:49]] => Dans un cas similaire au premier exemple : //mv "le fichier à déplacer" "le dossier où le déplacer"//, il suffit de taper le début de la commande : //mv//, puis //espace//, puis de faire un //glisser-déposer du fichier// de votre gestionnaire de fichier jusqu'au terminal, puis //espace//, un second //glisser-déposer//, puis //entrer// pour exécuter la commande. <|> " => suggestions : ['«\xa0', '“']
85 Guillemets typographiques fermants. [[70:71]] => Dans un cas similaire au premier exemple : //mv "le fichier à déplacer" "le dossier où le déplacer"//, il suffit de taper le début de la commande : //mv//, puis //espace//, puis de faire un //glisser-déposer du fichier// de votre gestionnaire de fichier jusqu'au terminal, puis //espace//, un second //glisser-déposer//, puis //entrer// pour exécuter la commande. <|> " => suggestions : ['\xa0»', '”']
85 Guillemets typographiques ouvrants. [[72:73]] => Dans un cas similaire au premier exemple : //mv "le fichier à déplacer" "le dossier où le déplacer"//, il suffit de taper le début de la commande : //mv//, puis //espace//, puis de faire un //glisser-déposer du fichier// de votre gestionnaire de fichier jusqu'au terminal, puis //espace//, un second //glisser-déposer//, puis //entrer// pour exécuter la commande. <|> " => suggestions : ['«\xa0', '“']
85 Guillemets typographiques fermants. [[98:99]] => Dans un cas similaire au premier exemple : //mv "le fichier à déplacer" "le dossier où le déplacer"//, il suffit de taper le début de la commande : //mv//, puis //espace//, puis de faire un //glisser-déposer du fichier// de votre gestionnaire de fichier jusqu'au terminal, puis //espace//, un second //glisser-déposer//, puis //entrer// pour exécuter la commande. <|> " => suggestions : ['\xa0»', '”']
85 Mot inconnu : mv [[150:152]] => Dans un cas similaire au premier exemple : //mv "le fichier à déplacer" "le dossier où le déplacer"//, il suffit de taper le début de la commande : //mv//, puis //espace//, puis de faire un //glisser-déposer du fichier// de votre gestionnaire de fichier jusqu'au terminal, puis //espace//, un second //glisser-déposer//, puis //entrer// pour exécuter la commande. <|> mv

92 Mot inconnu : votre_pseudo [[54:66]] => Ici il faut juste mettre votre pseudo à la place de **votre_pseudo**. <|> votre_pseudo

95 Typographie : points de suspension. Utilisez le caractère dédié. [[43:46]] => ===== Les commandes me demandent des choses... ===== <|> ... => suggestions : ['…']

99 Guillemets typographiques ouvrants. [[0:1]] => "Je tape une commande, et je me retrouve face à quelque chose comme ceci:" <|> " => suggestions : ['«\xa0', '“']

103 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

104 Mot inconnu : sudo [[112:116]] => Après ceci vous devez taper votre mot de passe, ceci est tout à fait normal pour les commandes commençant par ``sudo`` comme: <|> sudo

109 Guillemets typographiques ouvrants. [[0:1]] => "Mais voilà, mon mot de passe ne se tape pas !" <|> " => suggestions : ['«\xa0', '“']
109 Guillemets typographiques fermants. [[46:47]] => "Mais voilà, mon mot de passe ne se tape pas !" <|> " => suggestions : ['\xa0»', '”']
111 Mot inconnu : taperson [[107:115]] => Tout à fait normal, en fait le mot de passe est bel et bien tapé, mais vous ne le voyez pas ! Il suffit de taperson mot de passe, faire "entrée", et tout se déroulera comme prévu. Il s'agit d'une mesure de sécurité pour que les personnes regardant l'écran ne puissent pas deviner le nombre de caractères que contient le mot de passe. <|> taperson
111 Guillemets typographiques ouvrants. [[136:137]] => Tout à fait normal, en fait le mot de passe est bel et bien tapé, mais vous ne le voyez pas ! Il suffit de taperson mot de passe, faire "entrée", et tout se déroulera comme prévu. Il s'agit d'une mesure de sécurité pour que les personnes regardant l'écran ne puissent pas deviner le nombre de caractères que contient le mot de passe. <|> " => suggestions : ['«\xa0', '“']
111 Après le verbe “faire”, ce verbe devrait être à l’infinitif. [[137:143]] => Tout à fait normal, en fait le mot de passe est bel et bien tapé, mais vous ne le voyez pas ! Il suffit de taperson mot de passe, faire "entrée", et tout se déroulera comme prévu. Il s'agit d'une mesure de sécurité pour que les personnes regardant l'écran ne puissent pas deviner le nombre de caractères que contient le mot de passe. <|> entrée => suggestions : ['entrer']
111 Guillemets typographiques fermants. [[143:144]] => Tout à fait normal, en fait le mot de passe est bel et bien tapé, mais vous ne le voyez pas ! Il suffit de taperson mot de passe, faire "entrée", et tout se déroulera comme prévu. Il s'agit d'une mesure de sécurité pour que les personnes regardant l'écran ne puissent pas deviner le nombre de caractères que contient le mot de passe. <|> " => suggestions : ['\xa0»', '”']

119 Guillemets typographiques ouvrants. [[107:108]] => <note warning>Si vous êtes le seul responsable de votre machine — bien qu'ayant paramétré d'autres profils "invité" — votre profil configuré à l'installation de votre système vous a octroyé les droits administrateur. Il vous suffit donc d'entrer la commande préfixe SUDO (Super User DO) pour élever vos privilèges au rang d'administrateur système. <|> " => suggestions : ['«\xa0', '“']
119 Guillemets typographiques fermants. [[114:115]] => <note warning>Si vous êtes le seul responsable de votre machine — bien qu'ayant paramétré d'autres profils "invité" — votre profil configuré à l'installation de votre système vous a octroyé les droits administrateur. Il vous suffit donc d'entrer la commande préfixe SUDO (Super User DO) pour élever vos privilèges au rang d'administrateur système. <|> " => suggestions : ['\xa0»', '”']
119 Accord de nombre erroné avec « les droits » : « administrateur » devrait être au pluriel. [[201:215]] => <note warning>Si vous êtes le seul responsable de votre machine — bien qu'ayant paramétré d'autres profils "invité" — votre profil configuré à l'installation de votre système vous a octroyé les droits administrateur. Il vous suffit donc d'entrer la commande préfixe SUDO (Super User DO) pour élever vos privilèges au rang d'administrateur système. <|> administrateur => suggestions : ['administrateurs']
119 Mot inconnu : SUDO [[266:270]] => <note warning>Si vous êtes le seul responsable de votre machine — bien qu'ayant paramétré d'autres profils "invité" — votre profil configuré à l'installation de votre système vous a octroyé les droits administrateur. Il vous suffit donc d'entrer la commande préfixe SUDO (Super User DO) pour élever vos privilèges au rang d'administrateur système. <|> sudo

121 Mot inconnu : sudo [[30:34]] => Attention à ne pas utiliser **sudo** pour n'importe quoi, les conséquences pourraient être désastreuses.</note> <|> sudo

133 Mot inconnu : __Pourquoi [[0:10]] => __Pourquoi "**O**" est en majuscule ?__ <|> __pourquoi
133 Il manque un espace. [[37:39]] => __Pourquoi "**O**" est en majuscule ?__ <|> __ => suggestions : [' __']
133 Mot inconnu : __ [[37:39]] => __Pourquoi "**O**" est en majuscule ?__ <|> __
135 Après le verbe “faire”, ce verbe devrait être à l’infinitif. [[113:119]] => Simplement parce que c'est le choix par défaut, ce qui veut dire que si vous ne tapez rien, et que vous faites « Entrée », il comprendra **O**. <|> entrée => suggestions : ['Entrer']

147 Typographie : points de suspension. Utilisez le caractère dédié. [[97:100]] => Dans cet exemple vous pouvez répondre de multiples choses, mais vous ne comprenez pas la question... heureusement il y a une réponse par défaut. <|> ... => suggestions : ['…']

149 Mot inconnu : __Comment [[0:9]] => __Comment la reconnaître ?__ <|> __comment
149 Il manque un espace. [[26:28]] => __Comment la reconnaître ?__ <|> __ => suggestions : [' __']
149 Mot inconnu : __ [[26:28]] => __Comment la reconnaître ?__ <|> __

151 Typographie : points de suspension. Utilisez le caractère dédié. [[36:39]] => Eh bien, elle est entre crochets **[...]** il suffira donc de faire Entrée, sans rien taper comme réponse, pour utiliser cette réponse par défaut ! <|> ... => suggestions : ['…']
151 Après le verbe “faire”, ce verbe devrait être à l’infinitif. [[68:74]] => Eh bien, elle est entre crochets **[...]** il suffira donc de faire Entrée, sans rien taper comme réponse, pour utiliser cette réponse par défaut ! <|> entrée => suggestions : ['Entrer']

159 Pas d’espace avant une virgule. [[24:26]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|>  , => suggestions : [',']
159 Mot inconnu : mv [[27:29]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|> mv
159 Pas d’espace avant une virgule. [[29:31]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|>  , => suggestions : [',']
159 Mot inconnu : cp [[32:34]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|> cp
159 Pas d’espace avant une virgule. [[34:36]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|>  , => suggestions : [',']
159 Mot inconnu : ls [[37:39]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|> ls
159 Pas d’espace avant une virgule. [[39:41]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|>  , => suggestions : [',']
159 Mot inconnu : rm [[42:44]] => Les commandes comme **cd , mv , cp , ls , rm** et bien d'autres, sont des commandes de gestion de fichiers et de dossiers (naviguer dans les fichiers, les copier, les créer, etc.) et elles ne répondent qu'en cas d'erreur ! <|> rm

174 Mot inconnu : error [[78:83]] => Si une commande ne marche pas, vous devez avoir un message contenant le mot **error**. <|> error

183 Guillemets typographiques ouvrants. [[15:16]] => Si le code est '0', alors tout s'est bien passé (à condition que la commande appelée précédemment soit bien conçue et suive la convention classique). À noter que si vous répétez à nouveau cette commande, le code affiché sera bien celui de la commande précédente, à savoir la première commande "echo" que vous avez tapée. <|> ' => suggestions : ['“', '‘', '‹']
183 Guillemets typographiques ouvrants. [[293:294]] => Si le code est '0', alors tout s'est bien passé (à condition que la commande appelée précédemment soit bien conçue et suive la convention classique). À noter que si vous répétez à nouveau cette commande, le code affiché sera bien celui de la commande précédente, à savoir la première commande "echo" que vous avez tapée. <|> " => suggestions : ['«\xa0', '“']
183 Mot inconnu : echo [[294:298]] => Si le code est '0', alors tout s'est bien passé (à condition que la commande appelée précédemment soit bien conçue et suive la convention classique). À noter que si vous répétez à nouveau cette commande, le code affiché sera bien celui de la commande précédente, à savoir la première commande "echo" que vous avez tapée. <|> echo
183 Guillemets typographiques fermants. [[298:299]] => Si le code est '0', alors tout s'est bien passé (à condition que la commande appelée précédemment soit bien conçue et suive la convention classique). À noter que si vous répétez à nouveau cette commande, le code affiché sera bien celui de la commande précédente, à savoir la première commande "echo" que vous avez tapée. <|> " => suggestions : ['\xa0»', '”']

185 Mot inconnu : echo [[130:134]] => <note help>**Explication :** conventionnellement, un programme qui retourne une erreur va renvoyer un code d'erreur non nul, et **echo $?** retournera donc 1, 2 ou n'importe quel nombre non nul (généralement positif). Si vous retapez à nouveau **echo $?**, l'information retournée sera 0, en effet , l'echo retournant précédemment une erreur s'est lui même parfaitement bien déroulé !</note>  <|> echo
185 Mot inconnu : echo [[246:250]] => <note help>**Explication :** conventionnellement, un programme qui retourne une erreur va renvoyer un code d'erreur non nul, et **echo $?** retournera donc 1, 2 ou n'importe quel nombre non nul (généralement positif). Si vous retapez à nouveau **echo $?**, l'information retournée sera 0, en effet , l'echo retournant précédemment une erreur s'est lui même parfaitement bien déroulé !</note>  <|> echo
185 Pas d’espace avant une virgule. [[297:299]] => <note help>**Explication :** conventionnellement, un programme qui retourne une erreur va renvoyer un code d'erreur non nul, et **echo $?** retournera donc 1, 2 ou n'importe quel nombre non nul (généralement positif). Si vous retapez à nouveau **echo $?**, l'information retournée sera 0, en effet , l'echo retournant précédemment une erreur s'est lui même parfaitement bien déroulé !</note>  <|>  , => suggestions : [',']
185 Mot inconnu : echo [[302:306]] => <note help>**Explication :** conventionnellement, un programme qui retourne une erreur va renvoyer un code d'erreur non nul, et **echo $?** retournera donc 1, 2 ou n'importe quel nombre non nul (généralement positif). Si vous retapez à nouveau **echo $?**, l'information retournée sera 0, en effet , l'echo retournant précédemment une erreur s'est lui même parfaitement bien déroulé !</note>  <|> echo
185 Il manque un trait d’union si “même” se rapporte à “lui”. [[348:356]] => <note help>**Explication :** conventionnellement, un programme qui retourne une erreur va renvoyer un code d'erreur non nul, et **echo $?** retournera donc 1, 2 ou n'importe quel nombre non nul (généralement positif). Si vous retapez à nouveau **echo $?**, l'information retournée sera 0, en effet , l'echo retournant précédemment une erreur s'est lui même parfaitement bien déroulé !</note>  <|> lui même => suggestions : ['lui-même']
185 Espace(s) en fin de ligne à supprimer. [[391:392]] => <note help>**Explication :** conventionnellement, un programme qui retourne une erreur va renvoyer un code d'erreur non nul, et **echo $?** retournera donc 1, 2 ou n'importe quel nombre non nul (généralement positif). Si vous retapez à nouveau **echo $?**, l'information retournée sera 0, en effet , l'echo retournant précédemment une erreur s'est lui même parfaitement bien déroulé !</note>  <|>   => suggestions : ['']
208 Mot inconnu : __Exemple [[6:15]] =>   * **__Exemple 1__**, une question à deux choix : <|> __exemple
208 Mot inconnu : __ [[17:19]] =>   * **__Exemple 1__**, une question à deux choix : <|> __

232 Après le verbe “faire”, ce verbe devrait être à l’infinitif. [[187:193]] => là ce n'est pas compliqué, vous utilisez les flèches **Gauche** ← et → **Droite** de votre clavier pour choisir entre **Oui** ou **Non**, la réponse choisie, est en **Rouge**, et faire **Entrée**. <|> entrée => suggestions : ['Entrer']
234 Mot inconnu : __Exemple [[6:15]] =>   * **__Exemple 2__**, une liste : <|> __exemple
234 Mot inconnu : __ [[17:19]] =>   * **__Exemple 2__**, une liste : <|> __

261 Mot inconnu : Tab [[136:139]] => Là vous devez choisir quelque chose dans une liste. Vous choisissez avec les flèches **Haut** ↑ et ↓ **Bas**, une fois choisi, faites **Tab** (souvent une touche avec deux flèches ← et → l'une au dessus de l'autre : ↹), vous devez tomber sur **Ok** et faites **Entrer** pour "appuyer" sur **Ok** <|> tab
261 Il manque un trait d’union. [[193:202]] => Là vous devez choisir quelque chose dans une liste. Vous choisissez avec les flèches **Haut** ↑ et ↓ **Bas**, une fois choisi, faites **Tab** (souvent une touche avec deux flèches ← et → l'une au dessus de l'autre : ↹), vous devez tomber sur **Ok** et faites **Entrer** pour "appuyer" sur **Ok** <|> au dessus => suggestions : ['au-dessus']
261 Mot inconnu : Ok [[244:246]] => Là vous devez choisir quelque chose dans une liste. Vous choisissez avec les flèches **Haut** ↑ et ↓ **Bas**, une fois choisi, faites **Tab** (souvent une touche avec deux flèches ← et → l'une au dessus de l'autre : ↹), vous devez tomber sur **Ok** et faites **Entrer** pour "appuyer" sur **Ok** <|> ok
261 Guillemets typographiques ouvrants. [[275:276]] => Là vous devez choisir quelque chose dans une liste. Vous choisissez avec les flèches **Haut** ↑ et ↓ **Bas**, une fois choisi, faites **Tab** (souvent une touche avec deux flèches ← et → l'une au dessus de l'autre : ↹), vous devez tomber sur **Ok** et faites **Entrer** pour "appuyer" sur **Ok** <|> " => suggestions : ['«\xa0', '“']
261 Guillemets typographiques fermants. [[283:284]] => Là vous devez choisir quelque chose dans une liste. Vous choisissez avec les flèches **Haut** ↑ et ↓ **Bas**, une fois choisi, faites **Tab** (souvent une touche avec deux flèches ← et → l'une au dessus de l'autre : ↹), vous devez tomber sur **Ok** et faites **Entrer** pour "appuyer" sur **Ok** <|> " => suggestions : ['\xa0»', '”']
261 Mot inconnu : Ok [[291:293]] => Là vous devez choisir quelque chose dans une liste. Vous choisissez avec les flèches **Haut** ↑ et ↓ **Bas**, une fois choisi, faites **Tab** (souvent une touche avec deux flèches ← et → l'une au dessus de l'autre : ↹), vous devez tomber sur **Ok** et faites **Entrer** pour "appuyer" sur **Ok** <|> ok
263 Mot inconnu : __Exemple [[6:15]] =>   * **__Exemple 3__**, une sélection multiple... <|> __exemple
263 Mot inconnu : __ [[17:19]] =>   * **__Exemple 3__**, une sélection multiple... <|> __
263 Typographie : points de suspension. Utilisez le caractère dédié. [[45:48]] =>   * **__Exemple 3__**, une sélection multiple... <|> ... => suggestions : ['…']

291 Pas d’espace après ce signe. [[149:151]] => là vous devez choisir plusieurs choses, déplacez-vous sur un choix avec **Haut** et **Bas**, et faites **Espace** sur une case à cocher, ([*] Coché, [ ] décoché), une fois que tout ce que vous voulez cocher est coché, faites **Tab** et une fois arrivé sur **Ok**, faites **Entrer** <|> [  => suggestions : ['[']
291 Pas d’espace avant ce signe. [[150:152]] => là vous devez choisir plusieurs choses, déplacez-vous sur un choix avec **Haut** et **Bas**, et faites **Espace** sur une case à cocher, ([*] Coché, [ ] décoché), une fois que tout ce que vous voulez cocher est coché, faites **Tab** et une fois arrivé sur **Ok**, faites **Entrer** <|>  ] => suggestions : [']']
291 Mot inconnu : Tab [[227:230]] => là vous devez choisir plusieurs choses, déplacez-vous sur un choix avec **Haut** et **Bas**, et faites **Espace** sur une case à cocher, ([*] Coché, [ ] décoché), une fois que tout ce que vous voulez cocher est coché, faites **Tab** et une fois arrivé sur **Ok**, faites **Entrer** <|> tab
291 Mot inconnu : Ok [[258:260]] => là vous devez choisir plusieurs choses, déplacez-vous sur un choix avec **Haut** et **Bas**, et faites **Espace** sur une case à cocher, ([*] Coché, [ ] décoché), une fois que tout ce que vous voulez cocher est coché, faites **Tab** et une fois arrivé sur **Ok**, faites **Entrer** <|> ok

303 Pléonasme. [[79:96]] => Pour ré exécuter une commande déjà effectuée, au lieu de tout retaper, il vous suffit simplement d'appuyer sur la touche ↑ (flèche haut) pour accéder à la commande précédente. <|> suffit simplement => suggestions : ['suffit']

334 Mot inconnu : mount [[67:72]] => Il est possible aussi de ne supprimer qu'une ligne (par exemple un mount avec un mot de passe admin!), pour cela utiliser l'option -d suivie du n° de ligne: <|> mount
334 Il manque un espace à côté du tiret. [[130:132]] => Il est possible aussi de ne supprimer qu'une ligne (par exemple un mount avec un mot de passe admin!), pour cela utiliser l'option -d suivie du n° de ligne: <|>  - => suggestions : [' – ', ' — ']

336 Mot inconnu : sudo [[20:24]] => supprime la ligne //sudo mount /data/Véronique/// dans la liste ci-dessus. <|> sudo
336 Mot inconnu : mount [[25:30]] => supprime la ligne //sudo mount /data/Véronique/// dans la liste ci-dessus. <|> mount

339 Mot inconnu : HISTCONTROL [[6:17]] => <code>HISTCONTROL=ignorespace</code> dans le .bashrc  <|> histcontrol
339 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[44:46]] => <code>HISTCONTROL=ignorespace</code> dans le .bashrc  <|>  . => suggestions : ['. ', '.']
339 Mot inconnu : bashrc [[46:52]] => <code>HISTCONTROL=ignorespace</code> dans le .bashrc  <|> bashrc
339 Espace(s) en fin de ligne à supprimer. [[52:53]] => <code>HISTCONTROL=ignorespace</code> dans le .bashrc  <|>   => suggestions : ['']
341 Mot inconnu : HIST_IGNORE_SPACE [[13:30]] => <code>setopt HIST_IGNORE_SPACE</code> dans le .zshrc  <|> hist_ignore_space
341 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[45:47]] => <code>setopt HIST_IGNORE_SPACE</code> dans le .zshrc  <|>  . => suggestions : ['. ', '.']
341 Mot inconnu : zshrc [[47:52]] => <code>setopt HIST_IGNORE_SPACE</code> dans le .zshrc  <|> zshrc

346 Il manque un trait d’union. [[63:70]] => Pour modifier la taille de l'historique des commandes et aller au delà des 500 lignes par défaut, il faut modifier la variable d'environnement //HISTSIZE// <|> au delà => suggestions : ['au-delà']
346 Mot inconnu : HISTSIZE [[145:153]] => Pour modifier la taille de l'historique des commandes et aller au delà des 500 lignes par défaut, il faut modifier la variable d'environnement //HISTSIZE// <|> histsize

347 Mot inconnu : HISTSIZE [[13:21]] => <code>export HISTSIZE=1000</code> avec 1000 ou le nombre désiré. <|> histsize

349 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[138:140]] => Pour que cette modification soit prise en compte de manière définitive (pour un utilisateur), il faut ajouter la ligne suivante au fichier .bashrc de l'utilisateur (/home/utilisateur/.bashrc) <|>  . => suggestions : ['. ', '.']
349 Mot inconnu : bashrc [[140:146]] => Pour que cette modification soit prise en compte de manière définitive (pour un utilisateur), il faut ajouter la ligne suivante au fichier .bashrc de l'utilisateur (/home/utilisateur/.bashrc) <|> bashrc

353 Typographie : points de suspension. Utilisez le caractère dédié. [[399:402]] => Vous le savez certainement, toutes les commandes que vous utilisez dans un terminal sont archivées et vous pouvez y accéder par ordre chronologique en appuyant sur les touches fléchées Haut ou Bas. La fonctionnalité de base se limite à cela. Mais on peut faire beaucoup mieux et beaucoup plus pratique. Si vous voulez retrouver une commande particulière tapée il y a un moment. Prenons pour exemple ...  « rm /home/user/fichier.ext » ! <|> ... => suggestions : ['…']
353 Espace(s) surnuméraire(s) à supprimer. [[402:404]] => Vous le savez certainement, toutes les commandes que vous utilisez dans un terminal sont archivées et vous pouvez y accéder par ordre chronologique en appuyant sur les touches fléchées Haut ou Bas. La fonctionnalité de base se limite à cela. Mais on peut faire beaucoup mieux et beaucoup plus pratique. Si vous voulez retrouver une commande particulière tapée il y a un moment. Prenons pour exemple ...  « rm /home/user/fichier.ext » ! <|>    => suggestions : [' ']
353 Mot inconnu : rm [[406:408]] => Vous le savez certainement, toutes les commandes que vous utilisez dans un terminal sont archivées et vous pouvez y accéder par ordre chronologique en appuyant sur les touches fléchées Haut ou Bas. La fonctionnalité de base se limite à cela. Mais on peut faire beaucoup mieux et beaucoup plus pratique. Si vous voulez retrouver une commande particulière tapée il y a un moment. Prenons pour exemple ...  « rm /home/user/fichier.ext » ! <|> rm
356 Mot inconnu : rm [[101:103]] => **Grâce à la manipulation ci-dessous, vous n'aurez qu'à taper le début de la commande, par exemple « rm » et à presser la touche Haut. Une recherche sera faite dans l'historique et on vous affichera directement la bonne réponse !** <|> rm

359 Mot inconnu : inputrc [[24:31]] => Dans votre fichier **~/.inputrc**, ajoutez à la fin : <|> inputrc

364 Mot inconnu : bashrc [[24:30]] => Dans votre fichier **~/.bashrc**, ajoutez à la fin : <|> bashrc

372 Mot inconnu : bash_history [[174:186]] => Vous pouvez également modifier graphiquement l'historique. Par exemple si vous avez copié un texte très long par erreur dans votre terminal. Pour cela modifier le fichier **.bash_history** et supprimez les lignes que vous souhaitez. <|> bash_history
392 Accord de nombre erroné avec « les palettes » : « prédéfinie » devrait être au pluriel. [[24:34]] =>   * Mettre les palettes prédéfinie sur //Personnalisée//, puis <|> prédéfinie => suggestions : ['prédéfinies']
393 Il manque probablement un trait d’union. [[140:152]] =>   * Choisir vos couleurs, nous conseillons du clair (blanc ou gris coloré) pour la couleur de texte et noir (noir coloré) pour la couleur d'arrière plan. <|> arrière plan => suggestions : ['arrière-plan']
409 Nombre ordinal singulier. Exemples : 2ᵉ, 3ᵉ, 4ᵉ… [[137:147]] =>   * Toujours dans l'onglet //Couleurs//, nous conseillons de mettre la transparence (ombrage transparent) vers la droite (soit environ 8/10<sup>ème</sup>, 80 % de transparence), ou cocher //Utiliser la transparence du thème du système//. Vous pourrez ainsi garder un œil sur ce qui se passe derrière le Terminal. <|> 10<sup>ème => suggestions : ['10ᵉ']
409 Mot inconnu : ème [[144:147]] =>   * Toujours dans l'onglet //Couleurs//, nous conseillons de mettre la transparence (ombrage transparent) vers la droite (soit environ 8/10<sup>ème</sup>, 80 % de transparence), ou cocher //Utiliser la transparence du thème du système//. Vous pourrez ainsi garder un œil sur ce qui se passe derrière le Terminal. <|> ème

413 Mot inconnu : bashrc [[24:30]] => Dans votre fichier **~/.bashrc**, se trouve une variable **PS1** qui décrit comment l'invite de commande est définie. <|> bashrc
413 Mot inconnu : PS1 [[59:62]] => Dans votre fichier **~/.bashrc**, se trouve une variable **PS1** qui décrit comment l'invite de commande est définie. <|> ps1

486 Mot inconnu : geekement [[37:46]] => Et voilà, complètement inutile, mais geekement indispensable ! <|> geekement

488 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

492 Mot inconnu : Xfce-terminal [[2:15]] => **Xfce-terminal** reste une option envisageable mais peut emmener des dépendances supplémentaires alors qu'il est probable que le terminal proposé par défaut avec votre environnement fasse l'affaire. </note> <|> xfce-terminal

502 Mot inconnu : devilspie [[30:39]] => À présent, il faut paramétrer devilspie. Pour cela, il faut créer un dossier **.devilspie** dans le dossier utilisateur: <|> devilspie
502 Mot inconnu : devilspie [[80:89]] => À présent, il faut paramétrer devilspie. Pour cela, il faut créer un dossier **.devilspie** dans le dossier utilisateur: <|> devilspie
506 Mot inconnu : xfce4-terminal [[34:48]] => et y créer un fichier intitulé: **xfce4-terminal.ds**. <|> xfce4-terminal
506 Il manque un espace. [[49:51]] => et y créer un fichier intitulé: **xfce4-terminal.ds**. <|> ds => suggestions : [' ds']

509 Mot inconnu : xfce4-terminal [[37:51]] => Il faut créer la règle qui paramètre xfce4-terminal: <|> xfce4-terminal
519 Mot inconnu : below [[4:9]] =>   * below : Permet de mettre la fenêtre en-dessous de toutes les autres. <|> below
519 Pas de trait d’union. [[40:50]] =>   * below : Permet de mettre la fenêtre en-dessous de toutes les autres. <|> en-dessous => suggestions : ['en dessous']
520 Mot inconnu : skip_tasklist [[4:17]] =>   * skip_tasklist : N'affiche pas la fenêtre dans la barre de tâches. <|> skip_tasklist
521 Mot inconnu : skip_pager [[4:14]] =>   * skip_pager : Ne permet pas de sélectionner la fenêtre via le pager (**Alt + Tab**) . <|> skip_pager
521 Mot inconnu : Tab [[80:83]] =>   * skip_pager : Ne permet pas de sélectionner la fenêtre via le pager (**Alt + Tab**) . <|> tab
522 Mot inconnu : wintype [[4:11]] =>   * wintype : Permet de ne pas réduire la fenêtre lorsque l'on demande à afficher le bureau (bouton généralement en bas à gauche) . <|> wintype

524 Mot inconnu : devilspie [[42:51]] => Cela fait, il ne reste plus qu'à lancer **devilspie** et **xcfe4-terminal** au démarrage. Dans //Système → Préférences → Sessions//, il faut ajouter deux commandes: <|> devilspie
524 Mot inconnu : xcfe4-terminal [[59:73]] => Cela fait, il ne reste plus qu'à lancer **devilspie** et **xcfe4-terminal** au démarrage. Dans //Système → Préférences → Sessions//, il faut ajouter deux commandes: <|> xcfe4-terminal

528 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[0:2]] => où LARGEUR et HAUTEUR sont exprimées en caractère de terminal, X et Y représentent les coordonnées du point supérieur gauche du terminal. Pour donner une idée chez moi la commande est: <|> où => suggestions : ['Où']

536 Mot inconnu : multifenêtrage [[270:284]] => Vous y trouverez également différentes pages de présentation d'autres terminaux. Ne restez pas forcément figé sur celui installé par défaut pour vous faire une idée de la valeur de chacun. En effet certains ont des fonctionnalités que d'autres n'ont pas (par exemple le multifenêtrage) <|> multifenêtrage
