
5 Mot inconnu : bash => Scripts bash permettant de convertir plusieurs pistes de sous-titre vobsub d'une vidéo enregistrer sur la TNT par exemple et de les convertir en sous-titres texte .srt. | bash
5 Mot inconnu : vobsub => Scripts bash permettant de convertir plusieurs pistes de sous-titre vobsub d'une vidéo enregistrer sur la TNT par exemple et de les convertir en sous-titres texte .srt. | vobsub
5 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Scripts bash permettant de convertir plusieurs pistes de sous-titre vobsub d'une vidéo enregistrer sur la TNT par exemple et de les convertir en sous-titres texte .srt. |  . => suggestions : ['. ', '.']
5 Mot inconnu : srt => Scripts bash permettant de convertir plusieurs pistes de sous-titre vobsub d'une vidéo enregistrer sur la TNT par exemple et de les convertir en sous-titres texte .srt. | srt

8 Mot inconnu : srt => <note> L'extraction de sous-titres d'une vidéo multicanal demande d'identifier les canaux sous-titres puis d'effectuer une reconnaissance de caractère pour les transformer en fichiers srt (texte) moins volumineux et plus faciles à inclure dans un fichier vidéo mkv Matroska. | srt
8 Mot inconnu : mkv => <note> L'extraction de sous-titres d'une vidéo multicanal demande d'identifier les canaux sous-titres puis d'effectuer une reconnaissance de caractère pour les transformer en fichiers srt (texte) moins volumineux et plus faciles à inclure dans un fichier vidéo mkv Matroska. | mkv
8 Mot inconnu : Matroska => <note> L'extraction de sous-titres d'une vidéo multicanal demande d'identifier les canaux sous-titres puis d'effectuer une reconnaissance de caractère pour les transformer en fichiers srt (texte) moins volumineux et plus faciles à inclure dans un fichier vidéo mkv Matroska. | matroska

13 Espace(s) surnuméraire(s) à supprimer. => Inspiré de l'algorithme  : [[tutoriel:vobsub_srt|Conversion de sous-titres VobSub en SRT]] |    => suggestions : [' ']
13 Il manque un espace. => Inspiré de l'algorithme  : [[tutoriel:vobsub_srt|Conversion de sous-titres VobSub en SRT]] | vobsub_srt => suggestions : [' vobsub_srt']
13 Mot inconnu : vobsub_srt => Inspiré de l'algorithme  : [[tutoriel:vobsub_srt|Conversion de sous-titres VobSub en SRT]] | vobsub_srt
13 Mot inconnu : VobSub => Inspiré de l'algorithme  : [[tutoriel:vobsub_srt|Conversion de sous-titres VobSub en SRT]] | vobsub
13 Mot inconnu : SRT => Inspiré de l'algorithme  : [[tutoriel:vobsub_srt|Conversion de sous-titres VobSub en SRT]] | srt

15 Mot inconnu : vobsub2srt => <note warning>Les 3 dernières étapes peuvent être réalisées avec vobsub2srt</note> | vobsub2srt

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Repérer les canaux de sous-titres d'un fichier vidéo avec ffmpeg |    => suggestions : ['']
17 Mot inconnu : ffmpeg =>   * Repérer les canaux de sous-titres d'un fichier vidéo avec ffmpeg | ffmpeg

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * extraire sous-titres vobsub dans une vidéos mastroika |    => suggestions : ['']
18 Conjugaison erronée. Accord avec “extraire”. Le verbe devrait être à la 3ᵉ personne du singulier. =>   * extraire sous-titres vobsub dans une vidéos mastroika | sous-titres => suggestions : ['sous-titre']
18 Mot inconnu : vobsub =>   * extraire sous-titres vobsub dans une vidéos mastroika | vobsub
18 Accord de nombre erroné : « vidéos » devrait être au singulier. =>   * extraire sous-titres vobsub dans une vidéos mastroika | vidéos => suggestions : ['vidéo']
18 Mot inconnu : mastroika =>   * extraire sous-titres vobsub dans une vidéos mastroika | mastroika

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * extraire les sous-titres des vidéos mastroïka avec mkvextract |    => suggestions : ['']
19 Mot inconnu : mastroïka =>   * extraire les sous-titres des vidéos mastroïka avec mkvextract | mastroïka
19 Mot inconnu : mkvextract =>   * extraire les sous-titres des vidéos mastroïka avec mkvextract | mkvextract

20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * convertir fichier .sub et .idx en tiff; |    => suggestions : ['']
20 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * convertir fichier .sub et .idx en tiff; |  . => suggestions : ['. ', '.']
20 Mot inconnu : sub =>   * convertir fichier .sub et .idx en tiff; | sub
20 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * convertir fichier .sub et .idx en tiff; |  . => suggestions : ['. ', '.']
20 Mot inconnu : idx =>   * convertir fichier .sub et .idx en tiff; | idx
20 Mot inconnu : tiff =>   * convertir fichier .sub et .idx en tiff; | tiff

21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * reconnaissance de caractère de chaque tiff avec cunéiform |    => suggestions : ['']
21 Mot inconnu : tiff =>   * reconnaissance de caractère de chaque tiff avec cunéiform | tiff
21 Mot inconnu : cunéiform =>   * reconnaissance de caractère de chaque tiff avec cunéiform | cunéiform

22 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * création d'un fichier srt  |    => suggestions : ['']
22 Mot inconnu : srt =>   * création d'un fichier srt  | srt
22 Espace(s) en fin de ligne à supprimer. =>   * création d'un fichier srt  |   => suggestions : ['']

24 Mot inconnu : bash => ====  Script bash correspondant à l'algorithme ==== | bash

26 Mot inconnu : dvsub2srt => [[https://raw.githubusercontent.com/albanmartel/dvsub2srt.bash/main/dvsub2srt.bash | dvsub2srt.bash]] | dvsub2srt
26 Mot inconnu : bash => [[https://raw.githubusercontent.com/albanmartel/dvsub2srt.bash/main/dvsub2srt.bash | dvsub2srt.bash]] | bash

30 Mot inconnu : OUTPUT-COLORING => # OUTPUT-COLORING | output-coloring

31 Mot inconnu : red => red=$( tput setaf 1 ) | red
31 Pas d’espace après ce signe. => red=$( tput setaf 1 ) | (  => suggestions : ['(']
31 Mot inconnu : tput => red=$( tput setaf 1 ) | tput
31 Mot inconnu : setaf => red=$( tput setaf 1 ) | setaf
31 Pas d’espace avant ce signe. => red=$( tput setaf 1 ) |  ) => suggestions : [')']

32 Pas d’espace après ce signe. => green=$( tput setaf 2 ) | (  => suggestions : ['(']
32 Mot inconnu : tput => green=$( tput setaf 2 ) | tput
32 Mot inconnu : setaf => green=$( tput setaf 2 ) | setaf
32 Pas d’espace avant ce signe. => green=$( tput setaf 2 ) |  ) => suggestions : [')']

33 Mot inconnu : NC => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | nc
33 Pas d’espace après ce signe. => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | (  => suggestions : ['(']
33 Mot inconnu : tput => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | tput
33 Mot inconnu : sgr0 => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | sgr0
33 Pas d’espace avant ce signe. => NC=$( tput sgr0 )      # or perhaps: tput sgr0 |  ) => suggestions : [')']
33 Mot inconnu : perhaps => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | perhaps
33 Mot inconnu : tput => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | tput
33 Mot inconnu : sgr0 => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | sgr0

34 Pas d’espace après ce signe. => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | (  => suggestions : ['(']
34 Mot inconnu : tput => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | tput
34 Mot inconnu : setaf => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | setaf
34 Pas d’espace avant ce signe. => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 |  ) => suggestions : [')']
34 Mot inconnu : perhaps => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | perhaps
34 Mot inconnu : tput => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | tput
34 Mot inconnu : sgr0 => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | sgr0
36 Mot inconnu : ffmpeg => # Dépendances : ffmpeg,  mkvtoolnix, vobsub2srt | ffmpeg
36 Espace(s) surnuméraire(s) à supprimer. => # Dépendances : ffmpeg,  mkvtoolnix, vobsub2srt |    => suggestions : [' ']
36 Mot inconnu : mkvtoolnix => # Dépendances : ffmpeg,  mkvtoolnix, vobsub2srt | mkvtoolnix
36 Mot inconnu : vobsub2srt => # Dépendances : ffmpeg,  mkvtoolnix, vobsub2srt | vobsub2srt

37 Espace(s) en fin de ligne à supprimer. => # Signale quel programme l'on exécute  |   => suggestions : ['']

39 Mot inconnu : echo => echo -e "programme pour extraire des canaux de sous-titres d'une vidéo\n | echo
39 Il manque un espace à côté du tiret. => echo -e "programme pour extraire des canaux de sous-titres d'une vidéo\n |  - => suggestions : [' – ', ' — ']
39 Guillemets typographiques ouvrants. => echo -e "programme pour extraire des canaux de sous-titres d'une vidéo\n | " => suggestions : ['«\xa0', '“']

41 Mot inconnu : ls => $(ls)" | ls

44 Mot inconnu : echo => echo -n "Entrer le fichier vidéo choisi :"; | echo
44 Il manque un espace à côté du tiret. => echo -n "Entrer le fichier vidéo choisi :"; |  - => suggestions : [' – ', ' — ']
44 Guillemets typographiques ouvrants. => echo -n "Entrer le fichier vidéo choisi :"; | " => suggestions : ['«\xa0', '“']

45 Mot inconnu : read => read film_a_traiter; | read
45 Mot inconnu : film_a_traiter => read film_a_traiter; | film_a_traiter

48 Mot inconnu : echo => echo -e "Le fichier vidéo choisi est : \n $film_a_traiter"  | echo
48 Il manque un espace à côté du tiret. => echo -e "Le fichier vidéo choisi est : \n $film_a_traiter"  |  - => suggestions : [' – ', ' — ']
48 Guillemets typographiques ouvrants. => echo -e "Le fichier vidéo choisi est : \n $film_a_traiter"  | " => suggestions : ['«\xa0', '“']
48 Mot inconnu : film_a_traiter => echo -e "Le fichier vidéo choisi est : \n $film_a_traiter"  | film_a_traiter
48 Guillemets typographiques fermants. => echo -e "Le fichier vidéo choisi est : \n $film_a_traiter"  | " => suggestions : ['\xa0»', '”']
48 Espace(s) en fin de ligne à supprimer. => echo -e "Le fichier vidéo choisi est : \n $film_a_traiter"  |   => suggestions : ['']

50 Mot inconnu : film_a_traiter => # Exemple film_a_traiter="RetourVersLeFutur2.mp4" | film_a_traiter
50 Guillemets typographiques ouvrants. => # Exemple film_a_traiter="RetourVersLeFutur2.mp4" | " => suggestions : ['«\xa0', '“']
50 Mot inconnu : RetourVersLeFutur2 => # Exemple film_a_traiter="RetourVersLeFutur2.mp4" | retourverslefutur2
50 Mot inconnu : mp4 => # Exemple film_a_traiter="RetourVersLeFutur2.mp4" | mp4
50 Guillemets typographiques fermants. => # Exemple film_a_traiter="RetourVersLeFutur2.mp4" | " => suggestions : ['\xa0»', '”']

51 Mot inconnu : film_a_traiter => # film_a_traiter="RetourVersLeFutur2.mp4" | film_a_traiter
51 Guillemets typographiques ouvrants. => # film_a_traiter="RetourVersLeFutur2.mp4" | " => suggestions : ['«\xa0', '“']
51 Mot inconnu : RetourVersLeFutur2 => # film_a_traiter="RetourVersLeFutur2.mp4" | retourverslefutur2
51 Mot inconnu : mp4 => # film_a_traiter="RetourVersLeFutur2.mp4" | mp4
51 Guillemets typographiques fermants. => # film_a_traiter="RetourVersLeFutur2.mp4" | " => suggestions : ['\xa0»', '”']

53 Mot inconnu : soustitres_array => # soustitres_array= ("4|fra" "5|fra") | soustitres_array
53 Guillemets typographiques ouvrants. => # soustitres_array= ("4|fra" "5|fra") | " => suggestions : ['«\xa0', '“']
53 Mot inconnu : fra => # soustitres_array= ("4|fra" "5|fra") | fra
53 Guillemets typographiques fermants. => # soustitres_array= ("4|fra" "5|fra") | " => suggestions : ['\xa0»', '”']
53 Guillemets typographiques ouvrants. => # soustitres_array= ("4|fra" "5|fra") | " => suggestions : ['«\xa0', '“']
53 Mot inconnu : fra => # soustitres_array= ("4|fra" "5|fra") | fra
53 Guillemets typographiques fermants. => # soustitres_array= ("4|fra" "5|fra") | " => suggestions : ['\xa0»', '”']

54 Mot inconnu : soustitres_array => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | soustitres_array
54 Mot inconnu : ffprobe => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | ffprobe
54 Mot inconnu : film_a_traiter => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | film_a_traiter
54 Il manque un espace à côté du tiret. => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) |  - => suggestions : [' – ', ' — ']
54 Il manque un espace à côté du tiret. => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) |  - => suggestions : [' – ', ' — ']
54 Mot inconnu : show_entries => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | show_entries
54 Mot inconnu : stream => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | stream
54 Il manque un espace. => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | stream_tags => suggestions : [' stream_tags']
54 Mot inconnu : stream_tags => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | stream_tags
54 Mot inconnu : language => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | language
54 Il manque un espace à côté du tiret. => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) |  - => suggestions : [' – ', ' — ']
54 Mot inconnu : select_streams => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | select_streams
54 Il manque un espace à côté du tiret. => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) |  - => suggestions : [' – ', ' — ']
54 Mot inconnu : of => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | of
54 Mot inconnu : nk => soustitres_array=($(ffprobe $film_a_traiter -v quiet -show_entries stream=index:stream_tags=language -select_streams s -of compact=p=0:nk=1)) | nk

56 Mot inconnu : metadata_sub => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | metadata_sub
56 Mot inconnu : map => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | map
56 Il manque un espace à côté du tiret. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" |  - => suggestions : [' – ', ' — ']
56 Mot inconnu : metadata => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | metadata
56 Il manque un espace. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | s => suggestions : [' s']
56 Il manque un espace. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | 1 => suggestions : [' 1']
56 Mot inconnu : language => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | language
56 Mot inconnu : fra => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | fra
56 Il manque un espace à côté du tiret. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" |  - => suggestions : [' – ', ' — ']
56 Mot inconnu : map => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | map
56 Il manque un espace à côté du tiret. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" |  - => suggestions : [' – ', ' — ']
56 Mot inconnu : metadata => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | metadata
56 Il manque un espace. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | s => suggestions : [' s']
56 Il manque un espace. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | 2 => suggestions : [' 2']
56 Mot inconnu : language => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | language
56 Mot inconnu : fra => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | fra
56 Guillemets typographiques fermants. => # metadata_sub="-map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra" | " => suggestions : ['\xa0»', '”']

57 Mot inconnu : metadata_sub => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | metadata_sub
57 Pas d’espace après ce signe. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | (  => suggestions : ['(']
57 Espace(s) surnuméraire(s) à supprimer. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) |    => suggestions : [' ']
57 Espace(s) surnuméraire(s) à supprimer. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) |    => suggestions : [' ']
57 Mot inconnu : echo => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | echo
57 Il manque un espace à côté du tiret. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) |  - => suggestions : [' – ', ' — ']
57 Mot inconnu : map => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | map
57 Mot inconnu : echo => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | echo
57 Mot inconnu : soustitres_array => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | soustitres_array
57 Mot inconnu : cut => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | cut
57 Il manque un espace à côté du tiret. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) |  - => suggestions : [' – ', ' — ']
57 Mot inconnu : f1 => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | f1
57 Mot inconnu : metadata => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | metadata
57 Il manque un espace. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | s => suggestions : [' s']
57 Mot inconnu : language => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | language
57 Mot inconnu : echo => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | echo
57 Mot inconnu : soustitres_array => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | soustitres_array
57 Mot inconnu : cut => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | cut
57 Il manque un espace à côté du tiret. => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) |  - => suggestions : [' – ', ' — ']
57 Mot inconnu : f2 => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | f2
57 Mot inconnu : done => metadata_sub=$(for (( c=0; c<${#soustitres_array[@]}; c++));  do  echo -map 0:$(echo ${soustitres_array[$c]} | cut -d "|" -f1) -metadata:s:s:$(($c + 1)) language=$(echo ${soustitres_array[$c]} | cut -d "|" -f2) ; done) | done

59 Mot inconnu : command1 => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | command1
59 Guillemets typographiques ouvrants. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | " => suggestions : ['«\xa0', '“']
59 Mot inconnu : ffmpeg => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | ffmpeg
59 Il manque un espace à côté du tiret. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" |  - => suggestions : [' – ', ' — ']
59 Mot inconnu : RetourVersLeFutur2 => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | retourverslefutur2
59 Mot inconnu : mp4 => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | mp4
59 Mot inconnu : map => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | map
59 Il manque un espace à côté du tiret. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" |  - => suggestions : [' – ', ' — ']
59 Mot inconnu : metadata => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | metadata
59 Il manque un espace. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | s => suggestions : [' s']
59 Il manque un espace. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | 1 => suggestions : [' 1']
59 Mot inconnu : language => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | language
59 Mot inconnu : fra => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | fra
59 Il manque un espace à côté du tiret. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" |  - => suggestions : [' – ', ' — ']
59 Mot inconnu : map => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | map
59 Il manque un espace à côté du tiret. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" |  - => suggestions : [' – ', ' — ']
59 Mot inconnu : metadata => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | metadata
59 Il manque un espace. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | s => suggestions : [' s']
59 Il manque un espace. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | 2 => suggestions : [' 2']
59 Mot inconnu : language => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | language
59 Mot inconnu : fra => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | fra
59 Il manque un espace à côté du tiret. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" |  - => suggestions : [' – ', ' — ']
59 Il manque un espace. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | s => suggestions : [' s']
59 Mot inconnu : dvdsub => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | dvdsub
59 Guillemets typographiques fermants. => # command1="ffmpeg -i RetourVersLeFutur2.mp4 -map 0:4 -metadata:s:s:1 language=fra -map 0:5 -metadata:s:s:2 language=fra -c:s dvdsub sous_titres_RetourVersLeFutur2.mp4.mk" | " => suggestions : ['\xa0»', '”']

60 Mot inconnu : command1 => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | command1
60 Mot inconnu : echo => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | echo
60 Guillemets typographiques ouvrants. => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | " => suggestions : ['«\xa0', '“']
60 Mot inconnu : ffmpeg => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | ffmpeg
60 Il manque un espace à côté du tiret. => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") |  - => suggestions : [' – ', ' — ']
60 Mot inconnu : film_a_traiter => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | film_a_traiter
60 Mot inconnu : metadata_sub => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | metadata_sub
60 Il manque un espace à côté du tiret. => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") |  - => suggestions : [' – ', ' — ']
60 Il manque un espace. => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | s => suggestions : [' s']
60 Mot inconnu : dvdsub => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | dvdsub
60 Mot inconnu : sous_titres_ => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | sous_titres_
60 Mot inconnu : film_a_traiter => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | film_a_traiter
60 Mot inconnu : mkv => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | mkv
60 Guillemets typographiques fermants. => command1=$(echo "ffmpeg -i $film_a_traiter $metadata_sub -c:s dvdsub sous_titres_$film_a_traiter.mkv") | " => suggestions : ['\xa0»', '”']

62 Mot inconnu : Execution => # Execution commande n°1 $command1 | execution
62 Mot inconnu : command1 => # Execution commande n°1 $command1 | command1

63 Mot inconnu : command1 => $command1 | command1

65 Mot inconnu : vobsub_piste => # vobsub_piste="0:0_ 1:1_" | vobsub_piste
65 Guillemets typographiques ouvrants. => # vobsub_piste="0:0_ 1:1_" | " => suggestions : ['«\xa0', '“']
65 Guillemets typographiques fermants. => # vobsub_piste="0:0_ 1:1_" | " => suggestions : ['\xa0»', '”']

66 Mot inconnu : vobsub_piste => vobsub_piste=$(for (( c=0; c<${#soustitres_array[@]}; c++)); do echo $c:$c"_"; done) | vobsub_piste
66 Pas d’espace après ce signe. => vobsub_piste=$(for (( c=0; c<${#soustitres_array[@]}; c++)); do echo $c:$c"_"; done) | (  => suggestions : ['(']
66 Mot inconnu : echo => vobsub_piste=$(for (( c=0; c<${#soustitres_array[@]}; c++)); do echo $c:$c"_"; done) | echo
66 Guillemets typographiques fermants. => vobsub_piste=$(for (( c=0; c<${#soustitres_array[@]}; c++)); do echo $c:$c"_"; done) | " => suggestions : ['\xa0»', '”']
66 Mot inconnu : done => vobsub_piste=$(for (( c=0; c<${#soustitres_array[@]}; c++)); do echo $c:$c"_"; done) | done

68 Guillemets typographiques ouvrants. => #command2="mkvextract tracks sous_titres_RetourVersLeFutur2.mp4.mkv -c ISO8859-1 0:0_ 1:1_" | " => suggestions : ['«\xa0', '“']
68 Mot inconnu : mkvextract => #command2="mkvextract tracks sous_titres_RetourVersLeFutur2.mp4.mkv -c ISO8859-1 0:0_ 1:1_" | mkvextract
68 Mot inconnu : tracks => #command2="mkvextract tracks sous_titres_RetourVersLeFutur2.mp4.mkv -c ISO8859-1 0:0_ 1:1_" | tracks
68 Mot inconnu : ISO8859-1 => #command2="mkvextract tracks sous_titres_RetourVersLeFutur2.mp4.mkv -c ISO8859-1 0:0_ 1:1_" | iso8859-1
68 Guillemets typographiques fermants. => #command2="mkvextract tracks sous_titres_RetourVersLeFutur2.mp4.mkv -c ISO8859-1 0:0_ 1:1_" | " => suggestions : ['\xa0»', '”']

69 Mot inconnu : command2 => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | command2
69 Mot inconnu : echo => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | echo
69 Guillemets typographiques ouvrants. => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | " => suggestions : ['«\xa0', '“']
69 Mot inconnu : mkvextract => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | mkvextract
69 Mot inconnu : tracks => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | tracks
69 Mot inconnu : sous_titres_ => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | sous_titres_
69 Mot inconnu : film_a_traiter => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | film_a_traiter
69 Mot inconnu : mkv => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | mkv
69 Mot inconnu : ISO8859-1 => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | iso8859-1
69 Mot inconnu : vobsub_piste => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | vobsub_piste
69 Guillemets typographiques fermants. => command2=$(echo "mkvextract tracks sous_titres_$film_a_traiter.mkv -c ISO8859-1 $vobsub_piste") | " => suggestions : ['\xa0»', '”']

71 Mot inconnu : Execution => # Execution commande n°2 $command2 | execution
71 Mot inconnu : command2 => # Execution commande n°2 $command2 | command2

72 Mot inconnu : command2 => $command2 | command2
75 Mot inconnu : vobsub2srt => #vobsub2srt 0_; vobsub2srt 1_;" | vobsub2srt

76 Pas d’espace après ce signe. => for (( c=0; c<${#soustitres_array[@]}; c++));  | (  => suggestions : ['(']
76 Espace(s) en fin de ligne à supprimer. => for (( c=0; c<${#soustitres_array[@]}; c++));  |   => suggestions : ['']

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  vobsub2srt $c"_"; |   => suggestions : ['']
78 Mot inconnu : vobsub2srt =>  vobsub2srt $c"_"; | vobsub2srt
78 Guillemets typographiques fermants. =>  vobsub2srt $c"_"; | " => suggestions : ['\xa0»', '”']

79 Mot inconnu : done => done | done

83 Mot inconnu : bash => ====  Ancien Exemple de séquence bash correspondant à l'algorithme ==== | bash

86 Mot inconnu : ffmpeg => ffmpeg -i data0003.ts 2>&1 | grep subtitle | ffmpeg
86 Il manque un espace à côté du tiret. => ffmpeg -i data0003.ts 2>&1 | grep subtitle |  - => suggestions : [' – ', ' — ']
86 Mot inconnu : data0003 => ffmpeg -i data0003.ts 2>&1 | grep subtitle | data0003
86 Mot inconnu : ts => ffmpeg -i data0003.ts 2>&1 | grep subtitle | ts
86 Mot inconnu : grep => ffmpeg -i data0003.ts 2>&1 | grep subtitle | grep
86 Mot inconnu : subtitle => ffmpeg -i data0003.ts 2>&1 | grep subtitle | subtitle

87 Mot inconnu : mkdir => mkdir data0003 | mkdir
87 Mot inconnu : data0003 => mkdir data0003 | data0003

88 Mot inconnu : ffmpeg => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | ffmpeg
88 Il manque un espace à côté du tiret. => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv |  - => suggestions : [' – ', ' — ']
88 Mot inconnu : data0003 => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | data0003
88 Mot inconnu : ts => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | ts
88 Mot inconnu : map => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | map
88 Il manque un espace à côté du tiret. => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv |  - => suggestions : [' – ', ' — ']
88 Mot inconnu : map => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | map
88 Il manque un espace à côté du tiret. => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv |  - => suggestions : [' – ', ' — ']
88 Mot inconnu : vn => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | vn
88 Mot inconnu : scodec => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | scodec
88 Mot inconnu : dvdsub => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | dvdsub
88 Mot inconnu : data0003 => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | data0003
88 Mot inconnu : mkv => ffmpeg -i data0003.ts -map 0:4 -map 0:5 -vn -an -scodec dvdsub data0003.mkv | mkv

89 Mot inconnu : mkvextract => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | mkvextract
89 Mot inconnu : tracks => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | tracks
89 Guillemets typographiques ouvrants. => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | " => suggestions : ['«\xa0', '“']
89 Mot inconnu : data0003 => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | data0003
89 Mot inconnu : mkv => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | mkv
89 Guillemets typographiques fermants. => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | " => suggestions : ['\xa0»', '”']
89 Mot inconnu : ISO8859-1 => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | iso8859-1
89 Mot inconnu : data0003 => mkvextract tracks "data0003.mkv" -c ISO8859-1 0:data0003/0_ | data0003

90 Mot inconnu : mkvextract => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | mkvextract
90 Mot inconnu : tracks => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | tracks
90 Guillemets typographiques ouvrants. => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | " => suggestions : ['«\xa0', '“']
90 Mot inconnu : data0003 => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | data0003
90 Mot inconnu : mkv => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | mkv
90 Guillemets typographiques fermants. => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | " => suggestions : ['\xa0»', '”']
90 Mot inconnu : ISO8859-1 => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | iso8859-1
90 Mot inconnu : data0003 => mkvextract tracks "data0003.mkv" -c ISO8859-1 1:data0003/1_ | data0003

91 Mot inconnu : subp2tiff => subp2tiff --sid=0 -n data0003/0_ | subp2tiff
91 Mot inconnu : sid => subp2tiff --sid=0 -n data0003/0_ | sid
91 Il manque un espace à côté du tiret. => subp2tiff --sid=0 -n data0003/0_ |  - => suggestions : [' – ', ' — ']
91 Mot inconnu : data0003 => subp2tiff --sid=0 -n data0003/0_ | data0003

92 Mot inconnu : subp2tiff => subp2tiff --sid=1 -n data0003/1_ | subp2tiff
92 Mot inconnu : sid => subp2tiff --sid=1 -n data0003/1_ | sid
92 Il manque un espace à côté du tiret. => subp2tiff --sid=1 -n data0003/1_ |  - => suggestions : [' – ', ' — ']
92 Mot inconnu : data0003 => subp2tiff --sid=1 -n data0003/1_ | data0003

93 Mot inconnu : eachTiff => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | eachtiff
93 Mot inconnu : data0003 => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | data0003
93 Mot inconnu : cuneiform => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | cuneiform
93 Il manque un espace à côté du tiret. => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done |  - => suggestions : [' – ', ' — ']
93 Mot inconnu : fra => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | fra
93 Il manque un espace à côté du tiret. => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done |  - => suggestions : [' – ', ' — ']
93 Mot inconnu : text => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | text
93 Il manque un espace à côté du tiret. => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done |  - => suggestions : [' – ', ' — ']
93 Mot inconnu : eachTiff => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | eachtiff
93 Mot inconnu : txt => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | txt
93 Mot inconnu : eachTiff => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | eachtiff
93 Mot inconnu : done => for eachTiff in data0003/*.tif; do cuneiform -l fra -f text -o $eachTiff.txt $eachTiff; done | done

94 Mot inconnu : subptools => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt | subptools
94 Il manque un espace à côté du tiret. => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt |  - => suggestions : [' – ', ' — ']
94 Mot inconnu : srt => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt | srt
94 Il manque un espace à côté du tiret. => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt |  - => suggestions : [' – ', ' — ']
94 Mot inconnu : data0003 => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt | data0003
94 Mot inconnu : xml => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt | xml
94 Mot inconnu : srt => subptools -s -w -t srt -i data0003/0_.xml -o 0_.srt | srt

95 Mot inconnu : subptools => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt | subptools
95 Il manque un espace à côté du tiret. => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt |  - => suggestions : [' – ', ' — ']
95 Mot inconnu : srt => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt | srt
95 Il manque un espace à côté du tiret. => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt |  - => suggestions : [' – ', ' — ']
95 Mot inconnu : data0003 => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt | data0003
95 Mot inconnu : xml => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt | xml
95 Mot inconnu : srt => subptools -s -w -t srt -i data0003/1_.xml -o 1_.srt | srt

98 Mot inconnu : MKV => ====  Exemple de conversion de fichier TS en MKV avec FFMPEG  ====   | mkv
98 Mot inconnu : FFMPEG => ====  Exemple de conversion de fichier TS en MKV avec FFMPEG  ====   | ffmpeg
98 Espace(s) surnuméraire(s) à supprimer. => ====  Exemple de conversion de fichier TS en MKV avec FFMPEG  ====   |    => suggestions : [' ']
98 Espace(s) en fin de ligne à supprimer. => ====  Exemple de conversion de fichier TS en MKV avec FFMPEG  ====   |    => suggestions : ['']

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

113 Mot inconnu : Subtite => 0:5 Subtite | subtite

115 Mot inconnu : subtitle => 0:6 subtitle | subtitle

117 Mot inconnu : ffmpeg => 0:7 piste non reconnue par ffmpeg | ffmpeg

119 Mot inconnu : ffmpeg => 0:8 piste non reconnue par ffmpeg | ffmpeg

125 Accord de nombre erroné avec « traitement » : « multiprocesseurs » devrait être au singulier. => <note>//-threads// pour pouvoir utiliser un traitement multiprocesseurs  | multiprocesseurs => suggestions : ['multiprocesseur']
125 Espace(s) en fin de ligne à supprimer. => <note>//-threads// pour pouvoir utiliser un traitement multiprocesseurs  |   => suggestions : ['']

127 Mot inconnu : map => -// map// pour spécifier toutes les pistes à utilisables | map

129 Mot inconnu : acodec => //-acodec// suivi de //copy//  pour le traitements des pistes audio | acodec
129 Mot inconnu : copy => //-acodec// suivi de //copy//  pour le traitements des pistes audio | copy
129 Accord de nombre erroné : « traitements » est au pluriel. => //-acodec// suivi de //copy//  pour le traitements des pistes audio | le => suggestions : ['les']
129 Accord de nombre erroné : « traitements » devrait être au singulier. => //-acodec// suivi de //copy//  pour le traitements des pistes audio | traitements => suggestions : ['traitement']

131 Mot inconnu : vcodec => //-vcodec// suivi de //copy// pour le traitement de la piste vidéo   | vcodec
131 Mot inconnu : copy => //-vcodec// suivi de //copy// pour le traitement de la piste vidéo   | copy
131 Espace(s) en fin de ligne à supprimer. => //-vcodec// suivi de //copy// pour le traitement de la piste vidéo   |    => suggestions : ['']

133 Dialogues et énumérations : il faut tiret cadratin [1] ou demi-cadratin [2] suivi d’un espace insécable. => -scodec// suivi de //dvdsub// pour le traitement des sous-titres  | - => suggestions : ['—\xa0', '–\xa0']
133 Mot inconnu : scodec => -scodec// suivi de //dvdsub// pour le traitement des sous-titres  | scodec
133 Mot inconnu : dvdsub => -scodec// suivi de //dvdsub// pour le traitement des sous-titres  | dvdsub
133 Espace(s) en fin de ligne à supprimer. => -scodec// suivi de //dvdsub// pour le traitement des sous-titres  |   => suggestions : ['']

136 Espace(s) surnuméraire(s) à supprimer. => ===== dépendances à installer  ===== |    => suggestions : [' ']
140 Mot inconnu : ffmpeg => **[[apt>ffmpeg]]** - une collection de logiciels libres destinés au traitement de flux audio ou vidéo | ffmpeg
140 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => **[[apt>ffmpeg]]** - une collection de logiciels libres destinés au traitement de flux audio ou vidéo |  -  => suggestions : [' – ', ' — ', ' − ']
142 Mot inconnu : mkvtoolnix => **[[apt>mkvtoolnix]]** éventuellement aussi **[[apt>mkvtoolnix-gui]]** -  un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  | mkvtoolnix
142 Mot inconnu : mkvtoolnix-gui => **[[apt>mkvtoolnix]]** éventuellement aussi **[[apt>mkvtoolnix-gui]]** -  un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  | mkvtoolnix-gui
142 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => **[[apt>mkvtoolnix]]** éventuellement aussi **[[apt>mkvtoolnix-gui]]** -  un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  |  -  => suggestions : [' – ', ' — ', ' − ']
142 Mot inconnu : Matroska => **[[apt>mkvtoolnix]]** éventuellement aussi **[[apt>mkvtoolnix-gui]]** -  un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  | matroska
142 Espace(s) en fin de ligne à supprimer. => **[[apt>mkvtoolnix]]** éventuellement aussi **[[apt>mkvtoolnix-gui]]** -  un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  |   => suggestions : ['']
144 Mot inconnu : vobsub2srt => **[[apt>vobsub2srt]]** - Commande de reconnaissance optique de caractères multi-langue pour extraire des sous-titres  | vobsub2srt
144 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => **[[apt>vobsub2srt]]** - Commande de reconnaissance optique de caractères multi-langue pour extraire des sous-titres  |  -  => suggestions : [' – ', ' — ', ' − ']
144 Espace(s) en fin de ligne à supprimer. => **[[apt>vobsub2srt]]** - Commande de reconnaissance optique de caractères multi-langue pour extraire des sous-titres  |   => suggestions : ['']
146 Mot inconnu : cuneiform => **[[apt>cuneiform]]** - Système de reconnaissance optique de caractères multi-langue | cuneiform
146 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => **[[apt>cuneiform]]** - Système de reconnaissance optique de caractères multi-langue |  -  => suggestions : [' – ', ' — ', ' − ']
148 Mot inconnu : ogmrip => **[[apt>ogmrip]]** - Application pour extraire et encoder des DVDs | ogmrip
148 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => **[[apt>ogmrip]]** - Application pour extraire et encoder des DVDs |  -  => suggestions : [' – ', ' — ', ' − ']
148 Mot inconnu : DVDs => **[[apt>ogmrip]]** - Application pour extraire et encoder des DVDs | dvds

151 Mot inconnu : ts2srt => ===== Script ts2srt  ===== | ts2srt
151 Espace(s) surnuméraire(s) à supprimer. => ===== Script ts2srt  ===== |    => suggestions : [' ']

155 Mot inconnu : ts2srt => [[https://raw.githubusercontent.com/albanmartel/ts2srt/master/ts2srt.bash| ts2srt.bash]] | ts2srt
155 Mot inconnu : bash => [[https://raw.githubusercontent.com/albanmartel/ts2srt/master/ts2srt.bash| ts2srt.bash]] | bash
163 Mot inconnu : albanmartel => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | albanmartel
163 Il manque un espace avant la parenthèse. => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | ( => suggestions : [' (']
163 Il manque un espace après la parenthèse. => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | ) => suggestions : [') ']
163 Mot inconnu : developpeur => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | developpeur
163 Il manque un espace après la parenthèse. => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | ) => suggestions : [') ']
163 Mot inconnu : gmail => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | gmail
163 Il manque un espace avant la parenthèse. => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | ( => suggestions : [' (']
163 Il manque un espace après la parenthèse. => # Courriel : albanmartel(POINT)developpeur(AT)gmail(POINT)com | ) => suggestions : [') ']

164 Mot inconnu : beguam => # Utilisant comme base de travail le script de beguam | beguam

166 Mot inconnu : License => # License : GNU GPL | license

167 Mot inconnu : video => # Ce script permet d'extraire les sous-titres d'une video TS et de les transformer en SRT éditable. | video
167 Mot inconnu : SRT => # Ce script permet d'extraire les sous-titres d'une video TS et de les transformer en SRT éditable. | srt

169 Mot inconnu : Depends => # Depends :  | depends
169 Espace(s) en fin de ligne à supprimer. => # Depends :  |   => suggestions : ['']

170 Mot inconnu : ffmpeg => # ffmpeg est une collection de logiciels libres destinés au traitement de flux audio ou vidéo | ffmpeg

171 Mot inconnu : mkvToolnix => # mkvToolnix (interface graphique pour mkvmerge) est un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  | mkvtoolnix
171 Mot inconnu : mkvmerge => # mkvToolnix (interface graphique pour mkvmerge) est un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  | mkvmerge
171 Mot inconnu : Matroska => # mkvToolnix (interface graphique pour mkvmerge) est un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  | matroska
171 Espace(s) en fin de ligne à supprimer. => # mkvToolnix (interface graphique pour mkvmerge) est un ensemble d'outils permettant de créer, de modifier et d'inspecter des fichiers Matroska  |   => suggestions : ['']

172 Mot inconnu : cuneiform => # cuneiform - Système de reconnaissance optique de caractères multi-langue | cuneiform
172 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => # cuneiform - Système de reconnaissance optique de caractères multi-langue |  -  => suggestions : [' – ', ' — ', ' − ']

173 Mot inconnu : ogmrip => # ogmrip - Application pour extraire et encoder des DVDs | ogmrip
173 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => # ogmrip - Application pour extraire et encoder des DVDs |  -  => suggestions : [' – ', ' — ', ' − ']
173 Mot inconnu : DVDs => # ogmrip - Application pour extraire et encoder des DVDs | dvds
177 Espace(s) en fin de ligne à supprimer. => # Mise-à-jour :  |   => suggestions : ['']

181 Mot inconnu : OUTPUT-COLORING => # OUTPUT-COLORING | output-coloring

182 Mot inconnu : red => red=$( tput setaf 1 ) | red
182 Pas d’espace après ce signe. => red=$( tput setaf 1 ) | (  => suggestions : ['(']
182 Mot inconnu : tput => red=$( tput setaf 1 ) | tput
182 Mot inconnu : setaf => red=$( tput setaf 1 ) | setaf
182 Pas d’espace avant ce signe. => red=$( tput setaf 1 ) |  ) => suggestions : [')']

183 Pas d’espace après ce signe. => green=$( tput setaf 2 ) | (  => suggestions : ['(']
183 Mot inconnu : tput => green=$( tput setaf 2 ) | tput
183 Mot inconnu : setaf => green=$( tput setaf 2 ) | setaf
183 Pas d’espace avant ce signe. => green=$( tput setaf 2 ) |  ) => suggestions : [')']

184 Mot inconnu : NC => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | nc
184 Pas d’espace après ce signe. => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | (  => suggestions : ['(']
184 Mot inconnu : tput => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | tput
184 Mot inconnu : sgr0 => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | sgr0
184 Pas d’espace avant ce signe. => NC=$( tput sgr0 )      # or perhaps: tput sgr0 |  ) => suggestions : [')']
184 Mot inconnu : perhaps => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | perhaps
184 Mot inconnu : tput => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | tput
184 Mot inconnu : sgr0 => NC=$( tput sgr0 )      # or perhaps: tput sgr0 | sgr0

185 Pas d’espace après ce signe. => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | (  => suggestions : ['(']
185 Mot inconnu : tput => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | tput
185 Mot inconnu : setaf => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | setaf
185 Pas d’espace avant ce signe. => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 |  ) => suggestions : [')']
185 Mot inconnu : perhaps => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | perhaps
185 Mot inconnu : tput => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | tput
185 Mot inconnu : sgr0 => #NC=$( tput setaf 0 )      # or perhaps: tput sgr0 | sgr0

188 Mot inconnu : function => function readDirectoryPath(){ | function
188 Mot inconnu : readDirectoryPath => function readDirectoryPath(){ | readdirectorypath

189 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   echo -n "chemin absolu du répertoire des vidéos où extraire les sous-titres : " |    => suggestions : ['']
189 Mot inconnu : echo =>   echo -n "chemin absolu du répertoire des vidéos où extraire les sous-titres : " | echo
189 Il manque un espace à côté du tiret. =>   echo -n "chemin absolu du répertoire des vidéos où extraire les sous-titres : " |  - => suggestions : [' – ', ' — ']
189 Guillemets typographiques ouvrants. =>   echo -n "chemin absolu du répertoire des vidéos où extraire les sous-titres : " | " => suggestions : ['«\xa0', '“']
189 Guillemets fermants. =>   echo -n "chemin absolu du répertoire des vidéos où extraire les sous-titres : " |  " => suggestions : ['\xa0»', '”']

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   read directory; |    => suggestions : ['']
190 Mot inconnu : read =>   read directory; | read
190 Mot inconnu : directory =>   read directory; | directory

191 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   courant_directory=$(pwd); |    => suggestions : ['']
191 Mot inconnu : courant_directory =>   courant_directory=$(pwd); | courant_directory
191 Mot inconnu : pwd =>   courant_directory=$(pwd); | pwd

192 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   if [[ ! -e "$directory" ]]; then |    => suggestions : ['']
192 Pas d’espace après ce signe. =>   if [[ ! -e "$directory" ]]; then | [  => suggestions : ['[']
192 Mot inconnu : directory =>   if [[ ! -e "$directory" ]]; then | directory
192 Guillemets typographiques fermants. =>   if [[ ! -e "$directory" ]]; then | " => suggestions : ['\xa0»', '”']
192 Pas d’espace avant ce signe. =>   if [[ ! -e "$directory" ]]; then |  ] => suggestions : [']']
192 Mot inconnu : then =>   if [[ ! -e "$directory" ]]; then | then

193 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo "incorrect"; |      => suggestions : ['']
193 Mot inconnu : echo =>     echo "incorrect"; | echo
193 Guillemets typographiques ouvrants. =>     echo "incorrect"; | " => suggestions : ['«\xa0', '“']
193 Guillemets typographiques fermants. =>     echo "incorrect"; | " => suggestions : ['\xa0»', '”']

194 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     readDirectoryPath;     |      => suggestions : ['']
194 Mot inconnu : readDirectoryPath =>     readDirectoryPath;     | readdirectorypath
194 Espace(s) en fin de ligne à supprimer. =>     readDirectoryPath;     |      => suggestions : ['']

195 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   fi |    => suggestions : ['']

196 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd $directory; |    => suggestions : ['']
196 Mot inconnu : directory =>   cd $directory; | directory

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   directory=$(pwd); |    => suggestions : ['']
197 Mot inconnu : directory =>   directory=$(pwd); | directory
197 Mot inconnu : pwd =>   directory=$(pwd); | pwd

198 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd $courant_directory; |    => suggestions : ['']
198 Mot inconnu : courant_directory =>   cd $courant_directory; | courant_directory

199 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   echo $directory; |    => suggestions : ['']
199 Mot inconnu : echo =>   echo $directory; | echo
199 Mot inconnu : directory =>   echo $directory; | directory

200 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); |    => suggestions : ['']
200 Mot inconnu : find =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); | find
200 Pas d’espace avant un point. =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); |  . => suggestions : ['.']
200 Mot inconnu : maxdepth =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); | maxdepth
200 Il manque un espace à côté du tiret. =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); |  - => suggestions : [' – ', ' — ']
200 Mot inconnu : iname =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); | iname
200 Guillemets typographiques fermants. =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); | " => suggestions : ['\xa0»', '”']
200 Mot inconnu : wc =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); | wc
200 Il manque un espace à côté du tiret. =>   #testIfAnyFileIsPresent=$(find . -maxdepth 1 -iname "*.$extension" | wc -l); |  - => suggestions : [' – ', ' — ']

204 Mot inconnu : function => function presentationOfFileDirectory(){ | function
204 Mot inconnu : presentationOfFileDirectory => function presentationOfFileDirectory(){ | presentationoffiledirectory

205 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   message=$("<<"$directory">> contient les fichiers suivants :  "); |    => suggestions : ['']
205 Mot inconnu : directory =>   message=$("<<"$directory">> contient les fichiers suivants :  "); | directory
205 Guillemets typographiques fermants. =>   message=$("<<"$directory">> contient les fichiers suivants :  "); | " => suggestions : ['\xa0»', '”']
205 Espace(s) surnuméraire(s) à supprimer. =>   message=$("<<"$directory">> contient les fichiers suivants :  "); |    => suggestions : [' ']

206 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   files=$(ls $directory/*.*); |    => suggestions : ['']
206 Mot inconnu : ls =>   files=$(ls $directory/*.*); | ls
206 Mot inconnu : directory =>   files=$(ls $directory/*.*); | directory

207 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   print "%$\n" "${green}$message${NC}"; |    => suggestions : ['']
207 Mot inconnu : print =>   print "%$\n" "${green}$message${NC}"; | print
207 Guillemets typographiques fermants. =>   print "%$\n" "${green}$message${NC}"; | " => suggestions : ['\xa0»', '”']
207 Mot inconnu : NC =>   print "%$\n" "${green}$message${NC}"; | nc

208 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   print "%$\n" "${green}$files${NC}"; |    => suggestions : ['']
208 Mot inconnu : print =>   print "%$\n" "${green}$files${NC}"; | print
208 Guillemets typographiques fermants. =>   print "%$\n" "${green}$files${NC}"; | " => suggestions : ['\xa0»', '”']
208 Mot inconnu : NC =>   print "%$\n" "${green}$files${NC}"; | nc

212 Mot inconnu : function => function readVideoExtension(){ | function
212 Mot inconnu : readVideoExtension => function readVideoExtension(){ | readvideoextension

213 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   echo -n "Extension des fichiers vidéos à traiter ("$((4-$count))" tentatives restantes) : " |    => suggestions : ['']
213 Mot inconnu : echo =>   echo -n "Extension des fichiers vidéos à traiter ("$((4-$count))" tentatives restantes) : " | echo
213 Il manque un espace à côté du tiret. =>   echo -n "Extension des fichiers vidéos à traiter ("$((4-$count))" tentatives restantes) : " |  - => suggestions : [' – ', ' — ']
213 Guillemets typographiques ouvrants. =>   echo -n "Extension des fichiers vidéos à traiter ("$((4-$count))" tentatives restantes) : " | " => suggestions : ['«\xa0', '“']
213 Mot inconnu : count =>   echo -n "Extension des fichiers vidéos à traiter ("$((4-$count))" tentatives restantes) : " | count
213 Guillemets fermants. =>   echo -n "Extension des fichiers vidéos à traiter ("$((4-$count))" tentatives restantes) : " |  " => suggestions : ['\xa0»', '”']

214 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   read extension; |    => suggestions : ['']
214 Mot inconnu : read =>   read extension; | read

215 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); |    => suggestions : ['']
215 Mot inconnu : testIfAnyFileIsPresent =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | testifanyfileispresent
215 Mot inconnu : find =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | find
215 Mot inconnu : directory =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | directory
215 Il manque un espace à côté du tiret. =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); |  - => suggestions : [' – ', ' — ']
215 Mot inconnu : maxdepth =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | maxdepth
215 Il manque un espace à côté du tiret. =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); |  - => suggestions : [' – ', ' — ']
215 Mot inconnu : iname =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | iname
215 Guillemets typographiques fermants. =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | " => suggestions : ['\xa0»', '”']
215 Mot inconnu : wc =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); | wc
215 Il manque un espace à côté du tiret. =>   testIfAnyFileIsPresent=$(find $directory -maxdepth 1 -iname "*.$extension" | wc -l); |  - => suggestions : [' – ', ' — ']

219 Mot inconnu : function => function choiseTypeOfVideo(){ | function
219 Mot inconnu : choiseTypeOfVideo => function choiseTypeOfVideo(){ | choisetypeofvideo

220 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   local tmp_videos="" |    => suggestions : ['']
220 Mot inconnu : tmp_videos =>   local tmp_videos="" | tmp_videos

221 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   count=0; |    => suggestions : ['']
221 Mot inconnu : count =>   count=0; | count

222 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   readDirectoryPath; |    => suggestions : ['']
222 Mot inconnu : readDirectoryPath =>   readDirectoryPath; | readdirectorypath

223 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   presentationOfFileDirectory; |    => suggestions : ['']
223 Mot inconnu : presentationOfFileDirectory =>   presentationOfFileDirectory; | presentationoffiledirectory

224 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   testIfAnyFileIsPresent=0; |    => suggestions : ['']
224 Mot inconnu : testIfAnyFileIsPresent =>   testIfAnyFileIsPresent=0; | testifanyfileispresent

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do |    => suggestions : ['']
225 Mot inconnu : while =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do | while
225 Pas d’espace après ce signe. =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do | [  => suggestions : ['[']
225 Mot inconnu : testIfAnyFileIsPresent =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do | testifanyfileispresent
225 Pas d’espace avant ce signe. =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do |  ] => suggestions : [']']
225 Pas d’espace après ce signe. =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do | [  => suggestions : ['[']
225 Mot inconnu : count =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do | count
225 Pas d’espace avant ce signe. =>   while [ $testIfAnyFileIsPresent = 0 ] && [ $count != 3 ] ; do |  ] => suggestions : [']']

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     count=$(($count+1)); |      => suggestions : ['']
226 Mot inconnu : count =>     count=$(($count+1)); | count
226 Mot inconnu : count =>     count=$(($count+1)); | count

227 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     readVideoExtension; |      => suggestions : ['']
227 Mot inconnu : readVideoExtension =>     readVideoExtension; | readvideoextension

228 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   done |    => suggestions : ['']
228 Mot inconnu : done =>   done | done

229 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   if [ $count = 3 ] ; then |    => suggestions : ['']
229 Pas d’espace après ce signe. =>   if [ $count = 3 ] ; then | [  => suggestions : ['[']
229 Mot inconnu : count =>   if [ $count = 3 ] ; then | count
229 Pas d’espace avant ce signe. =>   if [ $count = 3 ] ; then |  ] => suggestions : [']']
229 Mot inconnu : then =>   if [ $count = 3 ] ; then | then

230 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; |      => suggestions : ['']
230 Mot inconnu : print =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; | print
230 Guillemets typographiques fermants. =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; | " => suggestions : ['\xa0»', '”']
230 Mot inconnu : red =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; | red
230 Guillemets typographiques ouvrants. =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; | " => suggestions : ['«\xa0', '“']
230 Guillemets typographiques fermants. =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; | " => suggestions : ['\xa0»', '”']
230 Mot inconnu : NC =>     print "%$\n" "${red}""3 mauvaises tentatives entrainent l\'arrêt du programme""${NC}"; | nc

231 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     print "%$\n" "${red}""Abandon""${NC}"; |      => suggestions : ['']
231 Mot inconnu : print =>     print "%$\n" "${red}""Abandon""${NC}"; | print
231 Guillemets typographiques fermants. =>     print "%$\n" "${red}""Abandon""${NC}"; | " => suggestions : ['\xa0»', '”']
231 Mot inconnu : red =>     print "%$\n" "${red}""Abandon""${NC}"; | red
231 Guillemets typographiques ouvrants. =>     print "%$\n" "${red}""Abandon""${NC}"; | " => suggestions : ['«\xa0', '“']
231 Guillemets typographiques fermants. =>     print "%$\n" "${red}""Abandon""${NC}"; | " => suggestions : ['\xa0»', '”']
231 Mot inconnu : NC =>     print "%$\n" "${red}""Abandon""${NC}"; | nc

232 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     exit 100; |      => suggestions : ['']

233 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   fi |    => suggestions : ['']

234 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   #/home/alban/Vidéos/fr3/annez.ts" | sed "s/\(.*\)\/\([Aa-Zz]*.$extension\)/\2/g" |    => suggestions : ['']
234 Mot inconnu : sed =>   #/home/alban/Vidéos/fr3/annez.ts" | sed "s/\(.*\)\/\([Aa-Zz]*.$extension\)/\2/g" | sed
234 Guillemets typographiques ouvrants. =>   #/home/alban/Vidéos/fr3/annez.ts" | sed "s/\(.*\)\/\([Aa-Zz]*.$extension\)/\2/g" | " => suggestions : ['«\xa0', '“']
234 Mot inconnu : Aa-Zz =>   #/home/alban/Vidéos/fr3/annez.ts" | sed "s/\(.*\)\/\([Aa-Zz]*.$extension\)/\2/g" | aa-zz
234 Guillemets typographiques fermants. =>   #/home/alban/Vidéos/fr3/annez.ts" | sed "s/\(.*\)\/\([Aa-Zz]*.$extension\)/\2/g" | " => suggestions : ['\xa0»', '”']

235 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   #Example : data0001.ts data0002.ts data0003.ts |    => suggestions : ['']
235 Mot inconnu : data0001 =>   #Example : data0001.ts data0002.ts data0003.ts | data0001
235 Mot inconnu : ts =>   #Example : data0001.ts data0002.ts data0003.ts | ts
235 Mot inconnu : data0002 =>   #Example : data0001.ts data0002.ts data0003.ts | data0002
235 Mot inconnu : ts =>   #Example : data0001.ts data0002.ts data0003.ts | ts
235 Mot inconnu : data0003 =>   #Example : data0001.ts data0002.ts data0003.ts | data0003
235 Mot inconnu : ts =>   #Example : data0001.ts data0002.ts data0003.ts | ts

236 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd $directory; |    => suggestions : ['']
236 Mot inconnu : directory =>   cd $directory; | directory

237 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   videoFiles=($( ls *.$extension )); |    => suggestions : ['']
237 Mot inconnu : videoFiles =>   videoFiles=($( ls *.$extension )); | videofiles
237 Pas d’espace après ce signe. =>   videoFiles=($( ls *.$extension )); | (  => suggestions : ['(']
237 Mot inconnu : ls =>   videoFiles=($( ls *.$extension )); | ls
237 Pas d’espace avant ce signe. =>   videoFiles=($( ls *.$extension )); |  ) => suggestions : [')']

238 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd $courant_directory; |    => suggestions : ['']
238 Mot inconnu : courant_directory =>   cd $courant_directory; | courant_directory

239 Espace(s) en fin de ligne à supprimer. => }   |    => suggestions : ['']

242 Mot inconnu : function => function cleanVideoInformations() { | function
242 Mot inconnu : cleanVideoInformations => function cleanVideoInformations() { | cleanvideoinformations

243 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cat $1 | grep Imput > $2; |      => suggestions : ['']
243 Mot inconnu : cat =>     cat $1 | grep Imput > $2; | cat
243 Mot inconnu : grep =>     cat $1 | grep Imput > $2; | grep
243 Mot inconnu : Imput =>     cat $1 | grep Imput > $2; | imput

244 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cat $1 | grep Duration >> $2; |      => suggestions : ['']
244 Mot inconnu : cat =>     cat $1 | grep Duration >> $2; | cat
244 Mot inconnu : grep =>     cat $1 | grep Duration >> $2; | grep
244 Mot inconnu : Duration =>     cat $1 | grep Duration >> $2; | duration

245 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cat $1 | grep Stream >> $2; |      => suggestions : ['']
245 Mot inconnu : cat =>     cat $1 | grep Stream >> $2; | cat
245 Mot inconnu : grep =>     cat $1 | grep Stream >> $2; | grep
245 Mot inconnu : Stream =>     cat $1 | grep Stream >> $2; | stream

246 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     rm $1;   |      => suggestions : ['']
246 Mot inconnu : rm =>     rm $1;   | rm
246 Espace(s) en fin de ligne à supprimer. =>     rm $1;   |    => suggestions : ['']

250 Mot inconnu : function => function prepareCommandToObtainSubtitlesTrackNumer(){ | function
250 Mot inconnu : prepareCommandToObtainSubtitlesTrackNumer => function prepareCommandToObtainSubtitlesTrackNumer(){ | preparecommandtoobtainsubtitlestracknumer

251 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   local a; |    => suggestions : ['']

252 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   #local j=0; |    => suggestions : ['']

253 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for (( i=0 ; i < ${#videoFiles[@]} ; i++ )) ; do |    => suggestions : ['']
253 Pas d’espace après ce signe. =>   for (( i=0 ; i < ${#videoFiles[@]} ; i++ )) ; do | (  => suggestions : ['(']
253 Pas d’espace avant ce signe. =>   for (( i=0 ; i < ${#videoFiles[@]} ; i++ )) ; do |  ) => suggestions : [')']

254 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #/home/alban/Vidéos/fr3/ENEMY/data0003.ts |      => suggestions : ['']

255 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     data_videos_files[i]=$(echo $directory"/"${videoFiles[i]}); |      => suggestions : ['']
255 Mot inconnu : data_videos_files =>     data_videos_files[i]=$(echo $directory"/"${videoFiles[i]}); | data_videos_files
255 Mot inconnu : echo =>     data_videos_files[i]=$(echo $directory"/"${videoFiles[i]}); | echo
255 Mot inconnu : directory =>     data_videos_files[i]=$(echo $directory"/"${videoFiles[i]}); | directory
255 Guillemets typographiques fermants. =>     data_videos_files[i]=$(echo $directory"/"${videoFiles[i]}); | " => suggestions : ['\xa0»', '”']
255 Mot inconnu : videoFiles =>     data_videos_files[i]=$(echo $directory"/"${videoFiles[i]}); | videofiles

256 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #/tmp/data0001_subtitle_infos.txt |      => suggestions : ['']

257 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); |      => suggestions : ['']
257 Mot inconnu : tmp_video_info =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | tmp_video_info
257 Mot inconnu : echo =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | echo
257 Mot inconnu : videoFiles =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | videofiles
257 Mot inconnu : sed =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | sed
257 Guillemets typographiques ouvrants. =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | " => suggestions : ['«\xa0', '“']
257 Mot inconnu : _subtitle_infos =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | _subtitle_infos
257 Mot inconnu : txt =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | txt
257 Guillemets typographiques fermants. =>     tmp_video_info[i]=$(echo "/tmp/"${videoFiles[i]} | sed "s/.$extension/_subtitle_infos.txt/g"); | " => suggestions : ['\xa0»', '”']

258 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #/tmp/data0003.ts.info |      => suggestions : ['']

259 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     video_info_file[i]=$(echo /tmp/${videoFiles[i]}.info); |      => suggestions : ['']
259 Mot inconnu : video_info_file =>     video_info_file[i]=$(echo /tmp/${videoFiles[i]}.info); | video_info_file
259 Mot inconnu : echo =>     video_info_file[i]=$(echo /tmp/${videoFiles[i]}.info); | echo
259 Mot inconnu : videoFiles =>     video_info_file[i]=$(echo /tmp/${videoFiles[i]}.info); | videofiles

262 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #create a cleanning file  of video information |      => suggestions : ['']
262 Mot inconnu : cleanning =>     #create a cleanning file  of video information | cleanning
262 Espace(s) surnuméraire(s) à supprimer. =>     #create a cleanning file  of video information |    => suggestions : [' ']
262 Mot inconnu : of =>     #create a cleanning file  of video information | of
262 Mot inconnu : video =>     #create a cleanning file  of video information | video

263 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cleanVideoInformations "${tmp_video_info[i]}" "${video_info_file[i]}"; |      => suggestions : ['']
263 Mot inconnu : cleanVideoInformations =>     cleanVideoInformations "${tmp_video_info[i]}" "${video_info_file[i]}"; | cleanvideoinformations
263 Mot inconnu : tmp_video_info =>     cleanVideoInformations "${tmp_video_info[i]}" "${video_info_file[i]}"; | tmp_video_info
263 Mot inconnu : video_info_file =>     cleanVideoInformations "${tmp_video_info[i]}" "${video_info_file[i]}"; | video_info_file

265 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle |      => suggestions : ['']
265 Mot inconnu : tracks_Info =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | tracks_info
265 Mot inconnu : Stream =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | stream
265 Il manque un espace avant la parenthèse. =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | ( => suggestions : [' (']
265 Mot inconnu : fra =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | fra
265 Mot inconnu : Subtitle =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | subtitle
265 Mot inconnu : dvd_subtitle =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | dvd_subtitle
265 Mot inconnu : default =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | default
265 Mot inconnu : Stream =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | stream
265 Il manque un espace avant la parenthèse. =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | ( => suggestions : [' (']
265 Mot inconnu : ger =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | ger
265 Mot inconnu : Subtitle =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | subtitle
265 Mot inconnu : dvd_subtitle =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | dvd_subtitle
265 Mot inconnu : Stream =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | stream
265 Il manque un espace avant la parenthèse. =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | ( => suggestions : [' (']
265 Mot inconnu : fra =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | fra
265 Mot inconnu : Subtitle =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | subtitle
265 Mot inconnu : dvd_subtitle =>     # tracks_Info[1] =Stream #0:5(fra): Subtitle: dvd_subtitle (default) Stream #0:6(ger): Subtitle: dvd_subtitle Stream #0:7(fra): Subtitle: dvd_subtitle | dvd_subtitle

267 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     rm ${video_info_file[i]}; |      => suggestions : ['']
267 Mot inconnu : rm =>     rm ${video_info_file[i]}; | rm
267 Mot inconnu : video_info_file =>     rm ${video_info_file[i]}; | video_info_file

268 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   done |    => suggestions : ['']
268 Mot inconnu : done =>   done | done

272 Mot inconnu : function => function createDirectoryIfNotExist(){ | function
272 Mot inconnu : createDirectoryIfNotExist => function createDirectoryIfNotExist(){ | createdirectoryifnotexist

273 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   if [[ ! -e $1 ]] ; then |    => suggestions : ['']
273 Pas d’espace après ce signe. =>   if [[ ! -e $1 ]] ; then | [  => suggestions : ['[']
273 Pas d’espace avant ce signe. =>   if [[ ! -e $1 ]] ; then |  ] => suggestions : [']']
273 Mot inconnu : then =>   if [[ ! -e $1 ]] ; then | then

274 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir $1; |      => suggestions : ['']
274 Mot inconnu : mkdir =>     mkdir $1; | mkdir

275 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   fi |    => suggestions : ['']

276 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    |    => suggestions : ['']

279 Mot inconnu : function => function ExtractSubtitleFromVideoInMKV(){ | function
279 Mot inconnu : ExtractSubtitleFromVideoInMKV => function ExtractSubtitleFromVideoInMKV(){ | extractsubtitlefromvideoinmkv

280 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   local j=0; |    => suggestions : ['']

281 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   local k=0; |    => suggestions : ['']

282 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   $1 |    => suggestions : ['']

283 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   echo  'tracks_Info: '${tracks_Info[@]}; |    => suggestions : ['']
283 Mot inconnu : echo =>   echo  'tracks_Info: '${tracks_Info[@]}; | echo
283 Espace(s) surnuméraire(s) à supprimer. =>   echo  'tracks_Info: '${tracks_Info[@]}; |    => suggestions : [' ']
283 Guillemets typographiques ouvrants. =>   echo  'tracks_Info: '${tracks_Info[@]}; | ' => suggestions : ['“', '‘', '‹']
283 Mot inconnu : tracks_Info =>   echo  'tracks_Info: '${tracks_Info[@]}; | tracks_info
283 Mot inconnu : tracks_Info =>   echo  'tracks_Info: '${tracks_Info[@]}; | tracks_info

284 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for ((i=0 ; i< ${#tracks_Info[@]}; i++)); do |    => suggestions : ['']

285 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       #From : data0001.ts to: data0001 |        => suggestions : ['']
285 Mot inconnu : data0001 =>       #From : data0001.ts to: data0001 | data0001
285 Mot inconnu : ts =>       #From : data0001.ts to: data0001 | ts
285 Mot inconnu : to =>       #From : data0001.ts to: data0001 | to
285 Mot inconnu : data0001 =>       #From : data0001.ts to: data0001 | data0001

286 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); |        => suggestions : ['']
286 Mot inconnu : extract_work_files =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); | extract_work_files
286 Mot inconnu : echo =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); | echo
286 Mot inconnu : videoFiles =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); | videofiles
286 Mot inconnu : sed =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); | sed
286 Guillemets typographiques ouvrants. =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); | " => suggestions : ['«\xa0', '“']
286 Guillemets typographiques fermants. =>       extract_work_files[i]=$(echo ${videoFiles[i]} | sed "s/.$extension//g"); | " => suggestions : ['\xa0»', '”']

287 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       #echo ${directory}/${extract_work_files[i]}; |        => suggestions : ['']
287 Mot inconnu : directory =>       #echo ${directory}/${extract_work_files[i]}; | directory
287 Mot inconnu : extract_work_files =>       #echo ${directory}/${extract_work_files[i]}; | extract_work_files

288 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       createDirectoryIfNotExist "${directory}/${extract_work_files[i]}"; |        => suggestions : ['']
288 Mot inconnu : createDirectoryIfNotExist =>       createDirectoryIfNotExist "${directory}/${extract_work_files[i]}"; | createdirectoryifnotexist
288 Mot inconnu : directory =>       createDirectoryIfNotExist "${directory}/${extract_work_files[i]}"; | directory
288 Mot inconnu : extract_work_files =>       createDirectoryIfNotExist "${directory}/${extract_work_files[i]}"; | extract_work_files

289 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       tmp=($(echo ${tracks_Info[i]})); |        => suggestions : ['']
289 Mot inconnu : tmp =>       tmp=($(echo ${tracks_Info[i]})); | tmp
289 Mot inconnu : echo =>       tmp=($(echo ${tracks_Info[i]})); | echo
289 Mot inconnu : tracks_Info =>       tmp=($(echo ${tracks_Info[i]})); | tracks_info

290 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       for each in ${tmp[@]};do |        => suggestions : ['']
290 Mot inconnu : each =>       for each in ${tmp[@]};do | each
290 Mot inconnu : tmp =>       for each in ${tmp[@]};do | tmp
290 Il manque un espace. =>       for each in ${tmp[@]};do | do => suggestions : [' do']
291 Mot inconnu : fra => 	# De : 0:4#fra à : 0.4 fra | fra

293 Mot inconnu : track_number => 	track_number=$(echo $each | cut -d'#' -f1); | track_number
293 Mot inconnu : echo => 	track_number=$(echo $each | cut -d'#' -f1); | echo
293 Mot inconnu : each => 	track_number=$(echo $each | cut -d'#' -f1); | each
293 Mot inconnu : cut => 	track_number=$(echo $each | cut -d'#' -f1); | cut
293 Il manque un espace à côté du tiret. => 	track_number=$(echo $each | cut -d'#' -f1); |  - => suggestions : [' – ', ' — ']
293 Mot inconnu : f1 => 	track_number=$(echo $each | cut -d'#' -f1); | f1

295 Mot inconnu : track_lang => 	track_lang=$(echo $each | cut -d'#' -f2); | track_lang
295 Mot inconnu : echo => 	track_lang=$(echo $each | cut -d'#' -f2); | echo
295 Mot inconnu : each => 	track_lang=$(echo $each | cut -d'#' -f2); | each
295 Mot inconnu : cut => 	track_lang=$(echo $each | cut -d'#' -f2); | cut
295 Il manque un espace à côté du tiret. => 	track_lang=$(echo $each | cut -d'#' -f2); |  - => suggestions : [' – ', ' — ']
295 Mot inconnu : f2 => 	track_lang=$(echo $each | cut -d'#' -f2); | f2

296 Il manque un espace à côté du tiret. => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv |  - => suggestions : [' – ', ' — ']
296 Il manque un espace à côté du tiret. => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv |  - => suggestions : [' – ', ' — ']
296 Mot inconnu : map => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv | map
296 Il manque un espace à côté du tiret. => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv |  - => suggestions : [' – ', ' — ']
296 Mot inconnu : vn => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv | vn
296 Mot inconnu : scodec => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv | scodec
296 Mot inconnu : dvdsub => 	#ffmpeg -threads 4 -i /home/alban/Vidéos/fr3/ENEMY/data0001.ts -map 0:5 -vn -an -scodec dvdsub /home/alban/Vidéos/fr3/ENEMY/data0001/data0001_0_fra.mkv | dvdsub

297 Mot inconnu : ffmpeg => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | ffmpeg
297 Il manque un espace à côté du tiret. => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 |  - => suggestions : [' – ', ' — ']
297 Il manque un espace à côté du tiret. => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 |  - => suggestions : [' – ', ' — ']
297 Mot inconnu : directory => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | directory
297 Mot inconnu : videoFiles => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | videofiles
297 Mot inconnu : map => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | map
297 Mot inconnu : track_number => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | track_number
297 Il manque un espace à côté du tiret. => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 |  - => suggestions : [' – ', ' — ']
297 Mot inconnu : vn => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | vn
297 Mot inconnu : scodec => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | scodec
297 Mot inconnu : dvdsub => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | dvdsub
297 Mot inconnu : directory => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | directory
297 Mot inconnu : extract_work_files => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | extract_work_files
297 Mot inconnu : extract_work_files => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | extract_work_files
297 Mot inconnu : track_lang => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | track_lang
297 Mot inconnu : mkv => 	ffmpeg -threads 4 -i ${directory}/${videoFiles[i]} -map $track_number -vn -an -scodec dvdsub ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv;	 | mkv

298 Mot inconnu : mkv_files => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | mkv_files
298 Mot inconnu : echo => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | echo
298 Mot inconnu : directory => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | directory
298 Mot inconnu : extract_work_files => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | extract_work_files
298 Mot inconnu : extract_work_files => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | extract_work_files
298 Mot inconnu : track_lang => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | track_lang
298 Mot inconnu : mkv => 	mkv_files[k]=$(echo ${directory}/${extract_work_files[i]}/${extract_work_files[i]}\_$j\_$track_lang.mkv); | mkv

299 Mot inconnu : mkv_directories => 	mkv_directories[k]=$(echo ${directory}/${extract_work_files[i]}); | mkv_directories
299 Mot inconnu : echo => 	mkv_directories[k]=$(echo ${directory}/${extract_work_files[i]}); | echo
299 Mot inconnu : directory => 	mkv_directories[k]=$(echo ${directory}/${extract_work_files[i]}); | directory
299 Mot inconnu : extract_work_files => 	mkv_directories[k]=$(echo ${directory}/${extract_work_files[i]}); | extract_work_files

300 Mot inconnu : subtitle_sub_id => 	subtitle_sub_id[k]=$(echo ${extract_work_files[i]}\_$j\_$track_lang); | subtitle_sub_id
300 Mot inconnu : echo => 	subtitle_sub_id[k]=$(echo ${extract_work_files[i]}\_$j\_$track_lang); | echo
300 Mot inconnu : extract_work_files => 	subtitle_sub_id[k]=$(echo ${extract_work_files[i]}\_$j\_$track_lang); | extract_work_files
300 Mot inconnu : track_lang => 	subtitle_sub_id[k]=$(echo ${extract_work_files[i]}\_$j\_$track_lang); | track_lang

301 Mot inconnu : subtitle_lang => 	subtitle_lang[k]=$(echo $track_lang); | subtitle_lang
301 Mot inconnu : echo => 	subtitle_lang[k]=$(echo $track_lang); | echo
301 Mot inconnu : track_lang => 	subtitle_lang[k]=$(echo $track_lang); | track_lang

304 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       done |        => suggestions : ['']
304 Mot inconnu : done =>       done | done

305 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   done |    => suggestions : ['']
305 Mot inconnu : done =>   done | done

310 Mot inconnu : function => function OpticalRecognitionCharacterOfTiff(){ | function
310 Mot inconnu : OpticalRecognitionCharacterOfTiff => function OpticalRecognitionCharacterOfTiff(){ | opticalrecognitioncharacteroftiff

311 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for eachTiff in $1*.tif; do  |    => suggestions : ['']
311 Mot inconnu : eachTiff =>   for eachTiff in $1*.tif; do  | eachtiff
311 Espace(s) en fin de ligne à supprimer. =>   for eachTiff in $1*.tif; do  |   => suggestions : ['']

312 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  |      => suggestions : ['']
312 Mot inconnu : cuneiform =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  | cuneiform
312 Il manque un espace à côté du tiret. =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  |  - => suggestions : [' – ', ' — ']
312 Il manque un espace à côté du tiret. =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  |  - => suggestions : [' – ', ' — ']
312 Mot inconnu : text =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  | text
312 Il manque un espace à côté du tiret. =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  |  - => suggestions : [' – ', ' — ']
312 Mot inconnu : eachTiff =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  | eachtiff
312 Mot inconnu : txt =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  | txt
312 Mot inconnu : eachTiff =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  | eachtiff
312 Espace(s) en fin de ligne à supprimer. =>     cuneiform -l $2 -f text -o $eachTiff.txt $eachTiff;  |   => suggestions : ['']

313 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   done  |    => suggestions : ['']
313 Mot inconnu : done =>   done  | done
313 Espace(s) en fin de ligne à supprimer. =>   done  |   => suggestions : ['']

318 Mot inconnu : function => function convertMKVSubtitleInSRT(){ | function
318 Mot inconnu : convertMKVSubtitleInSRT => function convertMKVSubtitleInSRT(){ | convertmkvsubtitleinsrt

319 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   local j=0 |    => suggestions : ['']

320 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for (( i=0 ; i < ${#mkv_files[@]}; i++ )); do  |    => suggestions : ['']
320 Pas d’espace après ce signe. =>   for (( i=0 ; i < ${#mkv_files[@]}; i++ )); do  | (  => suggestions : ['(']
320 Pas d’espace avant ce signe. =>   for (( i=0 ; i < ${#mkv_files[@]}; i++ )); do  |  ) => suggestions : [')']
320 Espace(s) en fin de ligne à supprimer. =>   for (( i=0 ; i < ${#mkv_files[@]}; i++ )); do  |   => suggestions : ['']

321 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #mkvextract tracks /home/alban/Vidéos/fr3/EnnemyMine/EnnemyMine_0_fra.mkv -c ISO8859-1 0:/home/alban/Vidéos/fr3/EnnemyMine/EnnemyMine_0_fra |      => suggestions : ['']
321 Mot inconnu : tracks =>     #mkvextract tracks /home/alban/Vidéos/fr3/EnnemyMine/EnnemyMine_0_fra.mkv -c ISO8859-1 0:/home/alban/Vidéos/fr3/EnnemyMine/EnnemyMine_0_fra | tracks
321 Mot inconnu : ISO8859-1 =>     #mkvextract tracks /home/alban/Vidéos/fr3/EnnemyMine/EnnemyMine_0_fra.mkv -c ISO8859-1 0:/home/alban/Vidéos/fr3/EnnemyMine/EnnemyMine_0_fra | iso8859-1

322 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; |      => suggestions : ['']
322 Mot inconnu : mkvextract =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; | mkvextract
322 Mot inconnu : tracks =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; | tracks
322 Mot inconnu : mkv_files =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; | mkv_files
322 Mot inconnu : ISO8859-1 =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; | iso8859-1
322 Mot inconnu : mkv_directories =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; | mkv_directories
322 Mot inconnu : subtitle_sub_id =>     mkvextract tracks ${mkv_files[i]} -c ISO8859-1 0:${mkv_directories[i]}/${subtitle_sub_id[i]}; | subtitle_sub_id

323 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     # if sub file existe and has a size equal to 0 than erase sub and idx files |      => suggestions : ['']
323 Mot inconnu : sub =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | sub
323 Mot inconnu : and =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | and
323 Mot inconnu : has =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | has
323 Mot inconnu : size =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | size
323 Mot inconnu : equal =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | equal
323 Mot inconnu : to =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | to
323 Mot inconnu : than =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | than
323 Mot inconnu : erase =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | erase
323 Mot inconnu : sub =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | sub
323 Mot inconnu : and =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | and
323 Mot inconnu : idx =>     # if sub file existe and has a size equal to 0 than erase sub and idx files | idx

324 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  |      => suggestions : ['']
324 Pas d’espace après ce signe. =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  | [  => suggestions : ['[']
324 Mot inconnu : mkv_directories =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  | mkv_directories
324 Mot inconnu : subtitle_sub_id =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  | subtitle_sub_id
324 Mot inconnu : sub =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  | sub
324 Pas d’espace avant ce signe. =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  |  ] => suggestions : [']']
324 Mot inconnu : then =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  | then
324 Espace(s) en fin de ligne à supprimer. =>     if [ ! -s ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub ]; then  |   => suggestions : ['']

325 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub; |        => suggestions : ['']
325 Mot inconnu : rm =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub; | rm
325 Mot inconnu : mkv_directories =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub; | mkv_directories
325 Mot inconnu : subtitle_sub_id =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub; | subtitle_sub_id
325 Mot inconnu : sub =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.sub; | sub

326 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.idx; |        => suggestions : ['']
326 Mot inconnu : rm =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.idx; | rm
326 Mot inconnu : mkv_directories =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.idx; | mkv_directories
326 Mot inconnu : subtitle_sub_id =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.idx; | subtitle_sub_id
326 Mot inconnu : idx =>       rm ${mkv_directories[i]}/${subtitle_sub_id[i]}.idx; | idx

327 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     fi |      => suggestions : ['']

328 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   done |    => suggestions : ['']
328 Mot inconnu : done =>   done | done

330 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for (( i=0 ; i < ${#videoFiles[@]} ; i++ )) ; do |    => suggestions : ['']
330 Pas d’espace après ce signe. =>   for (( i=0 ; i < ${#videoFiles[@]} ; i++ )) ; do | (  => suggestions : ['(']
330 Pas d’espace avant ce signe. =>   for (( i=0 ; i < ${#videoFiles[@]} ; i++ )) ; do |  ) => suggestions : [')']

331 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; |      => suggestions : ['']
331 Mot inconnu : work_directories =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; | work_directories
331 Mot inconnu : echo =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; | echo
331 Mot inconnu : videoFiles =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; | videofiles
331 Mot inconnu : sed =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; | sed
331 Guillemets typographiques ouvrants. =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; | " => suggestions : ['«\xa0', '“']
331 Guillemets typographiques fermants. =>     work_directories=$(echo ${videoFiles[i]} | sed "s/.$extension//g") ; | " => suggestions : ['\xa0»', '”']

332 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); |      => suggestions : ['']
332 Mot inconnu : echo =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | echo
332 Mot inconnu : directory =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | directory
332 Mot inconnu : work_directories =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | work_directories
332 Espace(s) surnuméraire(s) à supprimer. =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); |    => suggestions : [' ']
332 Mot inconnu : kv_directories =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | kv_directories
332 Mot inconnu : videoFiles =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | videofiles
332 Mot inconnu : sed =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | sed
332 Guillemets typographiques ouvrants. =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | " => suggestions : ['«\xa0', '“']
332 Guillemets typographiques fermants. =>     #mkv_directories=$(echo $directory/work_directories  kv_directories${videoFiles[i]} | sed "s/.$extension//g"); | " => suggestions : ['\xa0»', '”']

333 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     for each in $directory/$work_directories"/*.idx"; do |      => suggestions : ['']
333 Mot inconnu : each =>     for each in $directory/$work_directories"/*.idx"; do | each
333 Mot inconnu : directory =>     for each in $directory/$work_directories"/*.idx"; do | directory
333 Mot inconnu : work_directories =>     for each in $directory/$work_directories"/*.idx"; do | work_directories
333 Guillemets typographiques fermants. =>     for each in $directory/$work_directories"/*.idx"; do | " => suggestions : ['\xa0»', '”']
333 Mot inconnu : idx =>     for each in $directory/$work_directories"/*.idx"; do | idx
333 Guillemets typographiques fermants. =>     for each in $directory/$work_directories"/*.idx"; do | " => suggestions : ['\xa0»', '”']

334 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       subtitle_sub=($(echo $each)); |        => suggestions : ['']
334 Mot inconnu : subtitle_sub =>       subtitle_sub=($(echo $each)); | subtitle_sub
334 Mot inconnu : echo =>       subtitle_sub=($(echo $each)); | echo
334 Mot inconnu : each =>       subtitle_sub=($(echo $each)); | each

335 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       for filesub in ${subtitle_sub[@]}; do |        => suggestions : ['']
335 Mot inconnu : filesub =>       for filesub in ${subtitle_sub[@]}; do | filesub
335 Mot inconnu : subtitle_sub =>       for filesub in ${subtitle_sub[@]}; do | subtitle_sub

337 Mot inconnu : id_file => 	id_file=$(echo $filesub | sed "s/.idx//g"); | id_file
337 Mot inconnu : echo => 	id_file=$(echo $filesub | sed "s/.idx//g"); | echo
337 Mot inconnu : filesub => 	id_file=$(echo $filesub | sed "s/.idx//g"); | filesub
337 Mot inconnu : sed => 	id_file=$(echo $filesub | sed "s/.idx//g"); | sed
337 Guillemets typographiques ouvrants. => 	id_file=$(echo $filesub | sed "s/.idx//g"); | " => suggestions : ['«\xa0', '“']
337 Mot inconnu : idx => 	id_file=$(echo $filesub | sed "s/.idx//g"); | idx
337 Guillemets typographiques fermants. => 	id_file=$(echo $filesub | sed "s/.idx//g"); | " => suggestions : ['\xa0»', '”']

338 Mot inconnu : subp2tiff => 	subp2tiff --sid=0 -n $id_file; | subp2tiff
338 Mot inconnu : sid => 	subp2tiff --sid=0 -n $id_file; | sid
338 Il manque un espace à côté du tiret. => 	subp2tiff --sid=0 -n $id_file; |  - => suggestions : [' – ', ' — ']
338 Mot inconnu : id_file => 	subp2tiff --sid=0 -n $id_file; | id_file

340 Mot inconnu : sub_lang => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | sub_lang
340 Mot inconnu : echo => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | echo
340 Mot inconnu : filesub => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | filesub
340 Mot inconnu : sed => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | sed
340 Guillemets typographiques ouvrants. => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | " => suggestions : ['«\xa0', '“']
340 Mot inconnu : idx => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | idx
340 Guillemets typographiques fermants. => 	sub_lang=$(echo $filesub | sed "s/\(.*\)\([a-z]\{3\}\)\(.idx\)/\2/g"); | " => suggestions : ['\xa0»', '”']

342 Mot inconnu : subtitle_file_name => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | subtitle_file_name
342 Mot inconnu : echo => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | echo
342 Mot inconnu : filesub => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | filesub
342 Mot inconnu : sed => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | sed
342 Guillemets typographiques ouvrants. => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | " => suggestions : ['«\xa0', '“']
342 Mot inconnu : idx => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | idx
342 Guillemets typographiques fermants. => 	subtitle_file_name=$(echo $filesub |  sed "s/.idx//g"); | " => suggestions : ['\xa0»', '”']

343 Mot inconnu : echo => 	echo "subtitle_file_name : "$subtitle_file_name; | echo
343 Guillemets typographiques ouvrants. => 	echo "subtitle_file_name : "$subtitle_file_name; | " => suggestions : ['«\xa0', '“']
343 Mot inconnu : subtitle_file_name => 	echo "subtitle_file_name : "$subtitle_file_name; | subtitle_file_name
343 Mot inconnu : subtitle_file_name => 	echo "subtitle_file_name : "$subtitle_file_name; | subtitle_file_name

344 Mot inconnu : directory => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | directory
344 Mot inconnu : work_directories => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | work_directories
344 Mot inconnu : echo => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | echo
344 Mot inconnu : filesub => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | filesub
344 Mot inconnu : sed => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | sed
344 Guillemets typographiques ouvrants. => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | " => suggestions : ['«\xa0', '“']
344 Mot inconnu : idx => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | idx
344 Guillemets typographiques fermants. => 	#sub_id=$directory/$work_directories$(echo $filesub | sed "s/\(.*\)\(\_[0-9]\_\)\([a-z]\{3\}\)\(.idx\)/\2\3/g"); | " => suggestions : ['\xa0»', '”']

345 Mot inconnu : sub_id => 	#OpticalRecognitionCharacterOfTiff "$sub_id" "$sub_lang"; | sub_id
345 Guillemets typographiques fermants. => 	#OpticalRecognitionCharacterOfTiff "$sub_id" "$sub_lang"; | " => suggestions : ['\xa0»', '”']
345 Mot inconnu : sub_lang => 	#OpticalRecognitionCharacterOfTiff "$sub_id" "$sub_lang"; | sub_lang
345 Guillemets typographiques fermants. => 	#OpticalRecognitionCharacterOfTiff "$sub_id" "$sub_lang"; | " => suggestions : ['\xa0»', '”']

346 Mot inconnu : OpticalRecognitionCharacterOfTiff => 	OpticalRecognitionCharacterOfTiff "$subtitle_file_name" "$sub_lang"; | opticalrecognitioncharacteroftiff
346 Mot inconnu : subtitle_file_name => 	OpticalRecognitionCharacterOfTiff "$subtitle_file_name" "$sub_lang"; | subtitle_file_name
346 Guillemets typographiques fermants. => 	OpticalRecognitionCharacterOfTiff "$subtitle_file_name" "$sub_lang"; | " => suggestions : ['\xa0»', '”']
346 Mot inconnu : sub_lang => 	OpticalRecognitionCharacterOfTiff "$subtitle_file_name" "$sub_lang"; | sub_lang
346 Guillemets typographiques fermants. => 	OpticalRecognitionCharacterOfTiff "$subtitle_file_name" "$sub_lang"; | " => suggestions : ['\xa0»', '”']

347 Mot inconnu : directory => 	#echo $directory/$(echo ${videoFiles[i]} | sed "s/.$extension//g")/; | directory
347 Mot inconnu : echo => 	#echo $directory/$(echo ${videoFiles[i]} | sed "s/.$extension//g")/; | echo
347 Mot inconnu : videoFiles => 	#echo $directory/$(echo ${videoFiles[i]} | sed "s/.$extension//g")/; | videofiles
347 Mot inconnu : sed => 	#echo $directory/$(echo ${videoFiles[i]} | sed "s/.$extension//g")/; | sed
347 Guillemets typographiques ouvrants. => 	#echo $directory/$(echo ${videoFiles[i]} | sed "s/.$extension//g")/; | " => suggestions : ['«\xa0', '“']
347 Guillemets typographiques fermants. => 	#echo $directory/$(echo ${videoFiles[i]} | sed "s/.$extension//g")/; | " => suggestions : ['\xa0»', '”']

348 Mot inconnu : tmp => 	# tmp= Le_Secret_des_poignards_Volants_base__fra | tmp
348 Mot inconnu : Le_Secret_des_poignards_Volants_base__fra => 	# tmp= Le_Secret_des_poignards_Volants_base__fra | le_secret_des_poignards_volants_base__fra

349 Mot inconnu : tmp => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | tmp
349 Mot inconnu : echo => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | echo
349 Mot inconnu : filesub => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | filesub
349 Mot inconnu : sed => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | sed
349 Guillemets typographiques ouvrants. => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | " => suggestions : ['«\xa0', '“']
349 Mot inconnu : idx => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | idx
349 Guillemets typographiques fermants. => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); | " => suggestions : ['\xa0»', '”']
349 Pas d’espace avant ce signe. => 	tmp=$(echo $filesub | sed "s/\(.*\)\/\(.*\)\(.idx\)/\2/g" ); |  ) => suggestions : [')']

350 Mot inconnu : echo => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | echo
350 Guillemets typographiques ouvrants. => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | " => suggestions : ['«\xa0', '“']
350 Mot inconnu : subptools => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | subptools
350 Mot inconnu : subptools => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | subptools
350 Il manque un espace à côté du tiret. => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; |  - => suggestions : [' – ', ' — ']
350 Mot inconnu : srt => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | srt
350 Il manque un espace à côté du tiret. => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; |  - => suggestions : [' – ', ' — ']
350 Mot inconnu : id_file => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | id_file
350 Mot inconnu : xml => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | xml
350 Mot inconnu : directory => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | directory
350 Mot inconnu : tmp => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | tmp
350 Mot inconnu : srt => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | srt
350 Guillemets typographiques fermants. => 	echo "commande subptools : subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt"; | " => suggestions : ['\xa0»', '”']

351 Mot inconnu : subptools => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | subptools
351 Il manque un espace à côté du tiret. => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt |  - => suggestions : [' – ', ' — ']
351 Mot inconnu : srt => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | srt
351 Il manque un espace à côté du tiret. => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt |  - => suggestions : [' – ', ' — ']
351 Mot inconnu : id_file => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | id_file
351 Mot inconnu : xml => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | xml
351 Mot inconnu : directory => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | directory
351 Mot inconnu : tmp => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | tmp
351 Mot inconnu : srt => 	subptools -s -w -t srt -i $id_file.xml -o $directory/$tmp.srt | srt

352 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       done |        => suggestions : ['']
352 Mot inconnu : done =>       done | done

353 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       rm -rf $directory/$work_directories; |        => suggestions : ['']
353 Mot inconnu : rm =>       rm -rf $directory/$work_directories; | rm
353 Il manque un espace à côté du tiret. =>       rm -rf $directory/$work_directories; |  - => suggestions : [' – ', ' — ']
353 Mot inconnu : rf =>       rm -rf $directory/$work_directories; | rf
353 Mot inconnu : directory =>       rm -rf $directory/$work_directories; | directory
353 Mot inconnu : work_directories =>       rm -rf $directory/$work_directories; | work_directories

354 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     done |      => suggestions : ['']
354 Mot inconnu : done =>     done | done

355 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   done |    => suggestions : ['']
355 Mot inconnu : done =>   done | done

358 Mot inconnu : choiseTypeOfVideo => choiseTypeOfVideo; | choisetypeofvideo

359 Mot inconnu : prepareCommandToObtainSubtitlesTrackNumer => prepareCommandToObtainSubtitlesTrackNumer; | preparecommandtoobtainsubtitlestracknumer

360 Mot inconnu : ExtractSubtitleFromVideoInMKV => ExtractSubtitleFromVideoInMKV | extractsubtitlefromvideoinmkv

361 Mot inconnu : convertMKVSubtitleInSRT => convertMKVSubtitleInSRT; | convertmkvsubtitleinsrt
