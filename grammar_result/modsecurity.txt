
3 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

4 Mot inconnu : ModSecurity => ====== ModSecurity ====== | modsecurity

5 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

6 Mot inconnu : ModSecurity => ModSecurity est un module d'Apache spécialisé dans la sécurité. Il permet donc de sécuriser la couche applicative avant l'arrivée des requêtes sur le site hébergé sur l'Apache en question. Même s'il s'agit d'un module, ses fonctionnalités sont vastes et permettent de toucher à tous les points de sécurité nécessaires. Comme utilisations possible, citons la détection de tentatives d'inclusions, la lutte anti-spam, l'utilisation d'exploits (il permet de cacher les numéros de versions utilisées sur les pages d'erreur renvoyées par le serveur Web), l'application d'une liste noire (ou blanche), etc... | modsecurity
6 Un seul point après « etc. » => ModSecurity est un module d'Apache spécialisé dans la sécurité. Il permet donc de sécuriser la couche applicative avant l'arrivée des requêtes sur le site hébergé sur l'Apache en question. Même s'il s'agit d'un module, ses fonctionnalités sont vastes et permettent de toucher à tous les points de sécurité nécessaires. Comme utilisations possible, citons la détection de tentatives d'inclusions, la lutte anti-spam, l'utilisation d'exploits (il permet de cacher les numéros de versions utilisées sur les pages d'erreur renvoyées par le serveur Web), l'application d'une liste noire (ou blanche), etc... | etc... => suggestions : ['etc.']

7 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

9 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'un serveur Apache installé. [[apache2|Voir la page correspondante]] |    => suggestions : ['']
11 Mot inconnu : apache2 =>   * Disposer d'un serveur Apache installé. [[apache2|Voir la page correspondante]] | apache2

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). |    => suggestions : ['']
18 Mot inconnu : mod-security =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | mod-security
18 Il manque un espace. =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | conf => suggestions : [' conf']
18 Mot inconnu : mod-security =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | mod-security
18 Mot inconnu : load =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | load
18 Guillemets typographiques ouvrants. =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | " => suggestions : ['«\xa0', '“']
18 Mot inconnu : a2enmod =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | a2enmod
18 Mot inconnu : mod-security =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | mod-security
18 Guillemets typographiques fermants. =>   * Les fichiers //mod-security.conf// et //mod-security.load// dans le dossier ///etc/apache2/mods-available//. Le lien symbolique (correspondant à la commande "a2enmod mod-security" sera automatiquement créé). | " => suggestions : ['\xa0»', '”']

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le dossier ///etc/modsecurity/.// Il contiendra toute la configuration à venir. Pour que la configuration soit prise en compte, il faudra que les fichiers contenant les directives disposent d'un suffixe// .conf//. |    => suggestions : ['']
19 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * Le dossier ///etc/modsecurity/.// Il contiendra toute la configuration à venir. Pour que la configuration soit prise en compte, il faudra que les fichiers contenant les directives disposent d'un suffixe// .conf//. |  . => suggestions : ['. ', '.']

20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le dossier ///usr/share/modsecurity-crs/.// Il contient des exemples de fichier à utiliser selon les besoins de l'administrateur. |    => suggestions : ['']

21 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

28 Mot inconnu : SecRuleEngine => La configuration de ce fichier, via la directive "//SecRuleEngine DetectionOnly//", n'aura pas pour action de bloquer une requête. Elle se contentera de journaliser les détections (voir partie suivante). Si, à des fins de tests, ou quand votre configuration vous semble parée, vous pensez être prêt à bloquer les requêtes suspectes, alors il faut passer le paramètre //SecRuleEngine// à// On//.... | secruleengine
28 Mot inconnu : DetectionOnly => La configuration de ce fichier, via la directive "//SecRuleEngine DetectionOnly//", n'aura pas pour action de bloquer une requête. Elle se contentera de journaliser les détections (voir partie suivante). Si, à des fins de tests, ou quand votre configuration vous semble parée, vous pensez être prêt à bloquer les requêtes suspectes, alors il faut passer le paramètre //SecRuleEngine// à// On//.... | detectiononly
28 Mot inconnu : SecRuleEngine => La configuration de ce fichier, via la directive "//SecRuleEngine DetectionOnly//", n'aura pas pour action de bloquer une requête. Elle se contentera de journaliser les détections (voir partie suivante). Si, à des fins de tests, ou quand votre configuration vous semble parée, vous pensez être prêt à bloquer les requêtes suspectes, alors il faut passer le paramètre //SecRuleEngine// à// On//.... | secruleengine
28 Typographie : points de suspension. Utilisez le caractère dédié. => La configuration de ce fichier, via la directive "//SecRuleEngine DetectionOnly//", n'aura pas pour action de bloquer une requête. Elle se contentera de journaliser les détections (voir partie suivante). Si, à des fins de tests, ou quand votre configuration vous semble parée, vous pensez être prêt à bloquer les requêtes suspectes, alors il faut passer le paramètre //SecRuleEngine// à// On//.... | .... => suggestions : ['…']

33 Guillemets typographiques ouvrants. => Pour ce faire, il faut placer dans la configuration (///etc/modsecurity/modsecurity.conf//) la directive "SecServerSignature" suivie du message désiré.  | " => suggestions : ['«\xa0', '“']
33 Mot inconnu : SecServerSignature => Pour ce faire, il faut placer dans la configuration (///etc/modsecurity/modsecurity.conf//) la directive "SecServerSignature" suivie du message désiré.  | secserversignature
33 Guillemets typographiques fermants. => Pour ce faire, il faut placer dans la configuration (///etc/modsecurity/modsecurity.conf//) la directive "SecServerSignature" suivie du message désiré.  | " => suggestions : ['\xa0»', '”']
33 Espace(s) en fin de ligne à supprimer. => Pour ce faire, il faut placer dans la configuration (///etc/modsecurity/modsecurity.conf//) la directive "SecServerSignature" suivie du message désiré.  |   => suggestions : ['']
34 Mot inconnu : SecServerSignature => Exemple : //SecServerSignature "Microsoft IIS7"// | secserversignature
34 Guillemets typographiques ouvrants. => Exemple : //SecServerSignature "Microsoft IIS7"// | " => suggestions : ['«\xa0', '“']
34 Mot inconnu : IIS7 => Exemple : //SecServerSignature "Microsoft IIS7"// | iis7
34 Guillemets typographiques fermants. => Exemple : //SecServerSignature "Microsoft IIS7"// | " => suggestions : ['\xa0»', '”']

36 Mot inconnu : ServerTokens => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | servertokens
36 Guillemets typographiques ouvrants. => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | " => suggestions : ['«\xa0', '“']
36 Guillemets typographiques fermants. => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | " => suggestions : ['\xa0»', '”']
36 Guillemets typographiques ouvrants. => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | " => suggestions : ['«\xa0', '“']
36 Guillemets typographiques fermants. => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | " => suggestions : ['\xa0»', '”']
36 Il manque un espace. => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | conf => suggestions : [' conf']
36 Typographie : points de suspension. Utilisez le caractère dédié. => Pour que cela fonctionne, il est nécessaire que le paramètre ServerTokens soit mis à "Full" (et non "OS"), dans le fichier de configuration ///etc/apache2/conf-available/security.conf//. S'il n'est pas présent dans la configuration, vous pouvez librement l'ajouter où il vous plaira... | ... => suggestions : ['…']

38 Mot inconnu : menera => Il est aussi nécessaire de tester avec peu de caractères dans la signature, sous peine de rétablissement de l'ancien affichage. Pour faire vos tests, vous pouvez simplement utiliser un nom de page inexistant, qui vous menera vers un code d'erreur 404, ce qui aura pour finalité d'afficher votre signature telle que les pirates la verront. | menera

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ///var/log/apache2/modsec_audit.log// - **Audit Log** : Permet un audit approfondi de chaque requête, avec tous les éléments nécessaires, classés selon le type de données (type d'header, pattern détecté, etc...) récoltée. |    => suggestions : ['']
43 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   * ///var/log/apache2/modsec_audit.log// - **Audit Log** : Permet un audit approfondi de chaque requête, avec tous les éléments nécessaires, classés selon le type de données (type d'header, pattern détecté, etc...) récoltée. |  -  => suggestions : [' – ', ' — ', ' − ']
43 Mot inconnu : header =>   * ///var/log/apache2/modsec_audit.log// - **Audit Log** : Permet un audit approfondi de chaque requête, avec tous les éléments nécessaires, classés selon le type de données (type d'header, pattern détecté, etc...) récoltée. | header
43 Un seul point après « etc. » =>   * ///var/log/apache2/modsec_audit.log// - **Audit Log** : Permet un audit approfondi de chaque requête, avec tous les éléments nécessaires, classés selon le type de données (type d'header, pattern détecté, etc...) récoltée. | etc... => suggestions : ['etc.']

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ///var/log/apache2/modsec_debug.log// - **Debug Log** :  Permet un affichage bien plus condensé des informations, en ne gardant que les plus essentielles. Utile pour retrouver une requête bloquée sur un serveur en production. |    => suggestions : ['']
44 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   * ///var/log/apache2/modsec_debug.log// - **Debug Log** :  Permet un affichage bien plus condensé des informations, en ne gardant que les plus essentielles. Utile pour retrouver une requête bloquée sur un serveur en production. |  -  => suggestions : [' – ', ' — ', ' − ']
44 Mot inconnu : Debug =>   * ///var/log/apache2/modsec_debug.log// - **Debug Log** :  Permet un affichage bien plus condensé des informations, en ne gardant que les plus essentielles. Utile pour retrouver une requête bloquée sur un serveur en production. | debug
44 Espace(s) surnuméraire(s) à supprimer. =>   * ///var/log/apache2/modsec_debug.log// - **Debug Log** :  Permet un affichage bien plus condensé des informations, en ne gardant que les plus essentielles. Utile pour retrouver une requête bloquée sur un serveur en production. |    => suggestions : [' ']

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

50 Une de ces ponctuations est superflue. => :!: Il faut savoir que les règles ayant été écrites pour l'application avant la version 2.5 sont désormais incompatibles. Ces règles utilisent la directive //SecFilter//, qui a été abandonnée depuis au profit de //SecRule//. Il s'agit là d'un moyen sûr d'estimer la compatibilité des règles trouvables sur la toile. En clair, vous ne pouvez pas utiliser des règles commençant par //SecFilter//. | :! => suggestions : [':', '!']
50 Mot inconnu : SecFilter => :!: Il faut savoir que les règles ayant été écrites pour l'application avant la version 2.5 sont désormais incompatibles. Ces règles utilisent la directive //SecFilter//, qui a été abandonnée depuis au profit de //SecRule//. Il s'agit là d'un moyen sûr d'estimer la compatibilité des règles trouvables sur la toile. En clair, vous ne pouvez pas utiliser des règles commençant par //SecFilter//. | secfilter
50 Mot inconnu : SecRule => :!: Il faut savoir que les règles ayant été écrites pour l'application avant la version 2.5 sont désormais incompatibles. Ces règles utilisent la directive //SecFilter//, qui a été abandonnée depuis au profit de //SecRule//. Il s'agit là d'un moyen sûr d'estimer la compatibilité des règles trouvables sur la toile. En clair, vous ne pouvez pas utiliser des règles commençant par //SecFilter//. | secrule
50 Mot inconnu : SecFilter => :!: Il faut savoir que les règles ayant été écrites pour l'application avant la version 2.5 sont désormais incompatibles. Ces règles utilisent la directive //SecFilter//, qui a été abandonnée depuis au profit de //SecRule//. Il s'agit là d'un moyen sûr d'estimer la compatibilité des règles trouvables sur la toile. En clair, vous ne pouvez pas utiliser des règles commençant par //SecFilter//. | secfilter

54 Mot inconnu : deny => Vous pouvez vous inspirer des règles présentes dans les fichiers fournis à l'installation, pour mettre en place vos propres fichiers de configuration correspondant à vos besoins. Les règles sont faites de deux éléments. Tout d'abord, la directive permet de détecter les éléments à bloquer, par le biais d'une expression régulière et un champ d'action. Ensuite, une action à effectuer après détection doit être déterminée. Elle permettra d'expliquer le comportement à adopter (deny, log...), le niveau de criticité (severity), le code d'erreur renvoyé (status) et d'autres actions optionnelles, comme par exemple la redirection à une page après détection (redirect). | deny
54 Typographie : points de suspension. Utilisez le caractère dédié. => Vous pouvez vous inspirer des règles présentes dans les fichiers fournis à l'installation, pour mettre en place vos propres fichiers de configuration correspondant à vos besoins. Les règles sont faites de deux éléments. Tout d'abord, la directive permet de détecter les éléments à bloquer, par le biais d'une expression régulière et un champ d'action. Ensuite, une action à effectuer après détection doit être déterminée. Elle permettra d'expliquer le comportement à adopter (deny, log...), le niveau de criticité (severity), le code d'erreur renvoyé (status) et d'autres actions optionnelles, comme par exemple la redirection à une page après détection (redirect). | ... => suggestions : ['…']
54 Mot inconnu : severity => Vous pouvez vous inspirer des règles présentes dans les fichiers fournis à l'installation, pour mettre en place vos propres fichiers de configuration correspondant à vos besoins. Les règles sont faites de deux éléments. Tout d'abord, la directive permet de détecter les éléments à bloquer, par le biais d'une expression régulière et un champ d'action. Ensuite, une action à effectuer après détection doit être déterminée. Elle permettra d'expliquer le comportement à adopter (deny, log...), le niveau de criticité (severity), le code d'erreur renvoyé (status) et d'autres actions optionnelles, comme par exemple la redirection à une page après détection (redirect). | severity
54 Pléonasme. => Vous pouvez vous inspirer des règles présentes dans les fichiers fournis à l'installation, pour mettre en place vos propres fichiers de configuration correspondant à vos besoins. Les règles sont faites de deux éléments. Tout d'abord, la directive permet de détecter les éléments à bloquer, par le biais d'une expression régulière et un champ d'action. Ensuite, une action à effectuer après détection doit être déterminée. Elle permettra d'expliquer le comportement à adopter (deny, log...), le niveau de criticité (severity), le code d'erreur renvoyé (status) et d'autres actions optionnelles, comme par exemple la redirection à une page après détection (redirect). | comme par exemple => suggestions : ['comme', 'par exemple']
54 Mot inconnu : redirect => Vous pouvez vous inspirer des règles présentes dans les fichiers fournis à l'installation, pour mettre en place vos propres fichiers de configuration correspondant à vos besoins. Les règles sont faites de deux éléments. Tout d'abord, la directive permet de détecter les éléments à bloquer, par le biais d'une expression régulière et un champ d'action. Ensuite, une action à effectuer après détection doit être déterminée. Elle permettra d'expliquer le comportement à adopter (deny, log...), le niveau de criticité (severity), le code d'erreur renvoyé (status) et d'autres actions optionnelles, comme par exemple la redirection à une page après détection (redirect). | redirect

55 Accord de nombre erroné avec « les mêmes » : « comportement » devrait être au pluriel. => Au lieu d'écrire à chaque règle les mêmes comportement, il est conseillé d'écrire une fois pour toute en haut du fichier de configuration une ligne "SecDefaultAction" qui permettra de mettre en place un comportement par défaut, qui sera remplacé par les règles précisant de nouveaux comportements. | comportement => suggestions : ['comportements']
55 Mettez “toute” au pluriel. Sous-entendu : une fois pour toutes les autres fois. => Au lieu d'écrire à chaque règle les mêmes comportement, il est conseillé d'écrire une fois pour toute en haut du fichier de configuration une ligne "SecDefaultAction" qui permettra de mettre en place un comportement par défaut, qui sera remplacé par les règles précisant de nouveaux comportements. | toute => suggestions : ['toutes']
55 Guillemets typographiques ouvrants. => Au lieu d'écrire à chaque règle les mêmes comportement, il est conseillé d'écrire une fois pour toute en haut du fichier de configuration une ligne "SecDefaultAction" qui permettra de mettre en place un comportement par défaut, qui sera remplacé par les règles précisant de nouveaux comportements. | " => suggestions : ['«\xa0', '“']
55 Mot inconnu : SecDefaultAction => Au lieu d'écrire à chaque règle les mêmes comportement, il est conseillé d'écrire une fois pour toute en haut du fichier de configuration une ligne "SecDefaultAction" qui permettra de mettre en place un comportement par défaut, qui sera remplacé par les règles précisant de nouveaux comportements. | secdefaultaction
55 Guillemets typographiques fermants. => Au lieu d'écrire à chaque règle les mêmes comportement, il est conseillé d'écrire une fois pour toute en haut du fichier de configuration une ligne "SecDefaultAction" qui permettra de mettre en place un comportement par défaut, qui sera remplacé par les règles précisant de nouveaux comportements. | " => suggestions : ['\xa0»', '”']

60 Il manque un trait d’union si “même” se rapporte à “elle”. => Il est aisé de comprendre le comportement de cette action par défaut, pouvant elle même être concaténée d'autres actions selon le besoin. | elle même => suggestions : ['elle-même']

62 Mot inconnu : modsecurity => Voici deux exemples de commandes simples pour appréhender la puissance du moteur de modsecurity. | modsecurity

64 Mot inconnu : Antispam => * **Détection Antispam** :  | antispam
64 Espace(s) en fin de ligne à supprimer. => * **Détection Antispam** :  |   => suggestions : ['']

66 Guillemets typographiques ouvrants. => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | " => suggestions : ['«\xa0', '“']
66 Mot inconnu : deny => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | deny
66 Il manque un espace. => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | severity => suggestions : [' severity']
66 Mot inconnu : severity => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | severity
66 Mot inconnu : msg => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | msg
66 Mot inconnu : redirect => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | redirect
66 Il manque un espace. => "deny,severity:2,msg:'Spam',redirect:http://yourdomain/blocked.html"</code> | http: => suggestions : [' __URL']

68 Un seul point après « etc. » => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | etc... => suggestions : ['etc.']
68 Guillemets typographiques ouvrants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['«\xa0', '“']
68 Accord de nombre erroné avec « aux mots clés » : « test » devrait être au pluriel. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | test => suggestions : ['tests']
68 Mot inconnu : detection => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | detection
68 Guillemets typographiques fermants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['\xa0»', '”']
68 Guillemets typographiques ouvrants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['«\xa0', '“']
68 Mot inconnu : test_detection => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | test_detection
68 Guillemets typographiques fermants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['\xa0»', '”']
68 Guillemets typographiques ouvrants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['«\xa0', '“']
68 Mot inconnu : detection => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | detection
68 Guillemets typographiques fermants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['\xa0»', '”']
68 Guillemets typographiques ouvrants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['«\xa0', '“']
68 Guillemets typographiques fermants. => Cette règle aura le rôle de bloquer toute tentative d'écriture (que ce soit par le biais des champs de recherche, d'envoi de commentaire, etc...) faisant appel aux mots clés "test detection", "test_detection", "detection", mais pas du mot "test" utilisé seul. On s’aperçoit alors du nombre de possibilités permises par l'utilisation d'expressions régulières. | " => suggestions : ['\xa0»', '”']
70 Espace(s) en fin de ligne à supprimer. => * **Mise en œuvre d'une Liste Noire** :  |   => suggestions : ['']

72 Guillemets typographiques ouvrants. => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | " => suggestions : ['«\xa0', '“']
72 Mot inconnu : deny => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | deny
72 Il manque un espace. => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | severity => suggestions : [' severity']
72 Mot inconnu : severity => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | severity
72 Mot inconnu : msg => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | msg
72 Mot inconnu : Blacklisted => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | blacklisted
72 Mot inconnu : redirect => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | redirect
72 Il manque un espace. => "deny,severity:2,msg:'Blacklisted',redirect:http://yourdomain/blocked.html"</code> | http: => suggestions : [' __URL']

76 Mot inconnu : blocked => Dans ces deux cas, le comportement comprend la redirection de la page courante à la page blocked.html. Cette page doit bien entendu être accessible depuis Internet. Elle peut par exemple contenir un message expliquant la raison du blocage. | blocked
76 Mot inconnu : html => Dans ces deux cas, le comportement comprend la redirection de la page courante à la page blocked.html. Cette page doit bien entendu être accessible depuis Internet. Elle peut par exemple contenir un message expliquant la raison du blocage. | html

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://www.modsecurity.org|Site officiel du logiciel]] |    => suggestions : ['']

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://sourceforge.net/apps/mediawiki/mod-security/index.php?title=Reference_Manual|Manuel de référence]] |    => suggestions : ['']

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://www.gotroot.com/mod_security+rules|Règles de filtrage à télécharger]] |    => suggestions : ['']

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)**  [[https://www.it-connect.fr/installation-de-mod_security-devant-un-serveur-web-apache/|Installation et configuration de mod_security devant Apache ]]sur IT-Connect |    => suggestions : ['']
88 Mot inconnu : mod_security =>   * **(fr)**  [[https://www.it-connect.fr/installation-de-mod_security-devant-un-serveur-web-apache/|Installation et configuration de mod_security devant Apache ]]sur IT-Connect | mod_security
88 Pas d’espace avant ce signe. =>   * **(fr)**  [[https://www.it-connect.fr/installation-de-mod_security-devant-un-serveur-web-apache/|Installation et configuration de mod_security devant Apache ]]sur IT-Connect |  ] => suggestions : [']']
88 Mot inconnu : IT-Connect =>   * **(fr)**  [[https://www.it-connect.fr/installation-de-mod_security-devant-un-serveur-web-apache/|Installation et configuration de mod_security devant Apache ]]sur IT-Connect | it-connect

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   |   => suggestions : ['']
91 Mot inconnu : Fenollar => //Contributeurs principaux : [[utilisateurs:Amarokk|Guillaume Fenollar]], et bientôt vous? | fenollar
