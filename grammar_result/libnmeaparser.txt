
5 Mot inconnu : libNMEAParser [[7:20]] => ====== libNMEAParser ====== <|> libnmeaparser

7 Mot inconnu : libNMEAParser [[16:29]] => La bibliothèque libNMEAParser permet à tout utilisateur de lire les trames NMEA 0183 et de récupérer les informations qu'elles contiennent. <|> libnmeaparser
7 Mot inconnu : NMEA [[75:79]] => La bibliothèque libNMEAParser permet à tout utilisateur de lire les trames NMEA 0183 et de récupérer les informations qu'elles contiennent. <|> nmea

11 Mot inconnu : libNMEAParser [[0:13]] => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. <|> libnmeaparser
11 Mot inconnu : libNMEAParser-dev [[17:34]] => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. <|> libnmeaparser-dev
11 Mot inconnu : x86_64 [[88:94]] => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. <|> x86_64
11 Mot inconnu : LPIA [[98:102]] => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. <|> lpia
11 Mot inconnu : dépot [[128:133]] => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. <|> dépot
11 Mot inconnu : Spomky [[137:143]] => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. <|> spomky

17 Mot inconnu : libc [[77:81]] => Cette bibliothèque ne nécessite aucun autre logiciel pour fonctionner hormis libc. <|> libc

33 Mot inconnu : libnmeaparser [[34:47]] => Désinstallez simplement le paquet libnmeaparser ou libnmeaparser-dev. <|> libnmeaparser
33 Mot inconnu : libnmeaparser-dev [[51:68]] => Désinstallez simplement le paquet libnmeaparser ou libnmeaparser-dev. <|> libnmeaparser-dev

40 Mot inconnu : libnmeaparser-dev [[9:26]] => Une fois libnmeaparser-dev ou les sources installée, vous disposerez de la bibliothèque en elle-même mais aussi des en-têtes. <|> libnmeaparser-dev
40 Accord de nombre erroné avec « les sources » : « installée » devrait être au pluriel. [[42:51]] => Une fois libnmeaparser-dev ou les sources installée, vous disposerez de la bibliothèque en elle-même mais aussi des en-têtes. <|> installée => suggestions : installées

42 Mot inconnu : LibNMEAParser [[0:13]] => LibNMEAParser se présente sous forme d'une série d'objets C++ nommés NMEAParser_xxx où xxx représente l'identifiant de la trame. <|> libnmeaparser
42 Mot inconnu : NMEAParser_xxx [[69:83]] => LibNMEAParser se présente sous forme d'une série d'objets C++ nommés NMEAParser_xxx où xxx représente l'identifiant de la trame. <|> nmeaparser_xxx
42 Mot inconnu : xxx [[87:90]] => LibNMEAParser se présente sous forme d'une série d'objets C++ nommés NMEAParser_xxx où xxx représente l'identifiant de la trame. <|> xxx

43 Mot inconnu : GSV [[22:25]] => Par exemple une trame GSV (identification et positionnement des satellites en vue) sera analysées par l'objet NMEAParser_GSV. <|> gsv
43 Mot inconnu : NMEAParser_GSV [[110:124]] => Par exemple une trame GSV (identification et positionnement des satellites en vue) sera analysées par l'objet NMEAParser_GSV. <|> nmeaparser_gsv

47 Mot inconnu : NMEAParser_xxx [[4:18]] => === NMEAParser_xxx( const std::string sentence ) === <|> nmeaparser_xxx
47 Pas d’espace après ce signe. [[18:20]] => === NMEAParser_xxx( const std::string sentence ) === <|> (  => suggestions : (
47 Mot inconnu : const [[20:25]] => === NMEAParser_xxx( const std::string sentence ) === <|> const
47 Mot inconnu : std [[26:29]] => === NMEAParser_xxx( const std::string sentence ) === <|> std
47 Une de ces ponctuations est superflue. [[29:31]] => === NMEAParser_xxx( const std::string sentence ) === <|> :: => suggestions : ::
47 Pas d’espace avant ce signe. [[46:48]] => === NMEAParser_xxx( const std::string sentence ) === <|>  ) => suggestions : )

49 Mot inconnu : RMC [[59:62]] => Par exemple pour construire un objet et analyser une trame RMC vous pouvez procéder ainsi : <|> rmc

51 Mot inconnu : suffiet [[47:54]] => Pour connaitre le statut de l'analyse, il vous suffiet de récupérer la valeur suivante : <|> suffiet

53 Confusion probable : “est” une forme conjuguée du verbe “être”. Pour la conjonction de coordination, écrivez “et”. [[15:18]] => Le type STATUS est ses énumérations sont définis dans le fichier NMEAParser.h <|> est => suggestions : et
53 Mot inconnu : NMEAParser [[65:75]] => Le type STATUS est ses énumérations sont définis dans le fichier NMEAParser.h <|> nmeaparser

56 Pas d’espace après ce signe. [[16:18]] => === STATUS parse( std::string sentence ) === <|> (  => suggestions : (
56 Mot inconnu : std [[18:21]] => === STATUS parse( std::string sentence ) === <|> std
56 Une de ces ponctuations est superflue. [[21:23]] => === STATUS parse( std::string sentence ) === <|> :: => suggestions : ::
56 Pas d’espace avant ce signe. [[38:40]] => === STATUS parse( std::string sentence ) === <|>  ) => suggestions : )

63 Mot inconnu : void [[4:8]] => === void clear( void ) === <|> void
63 Mot inconnu : clear [[9:14]] => === void clear( void ) === <|> clear
63 Pas d’espace après ce signe. [[14:16]] => === void clear( void ) === <|> (  => suggestions : (
63 Mot inconnu : void [[16:20]] => === void clear( void ) === <|> void
63 Pas d’espace avant ce signe. [[20:22]] => === void clear( void ) === <|>  ) => suggestions : )

77 Guillemets typographiques ouvrants. [[32:33]] => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. <|> " => suggestions : « “
77 Guillemets typographiques fermants. [[39:40]] => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. <|> " => suggestions :  »”
77 Confusion probable : “à” est une préposition. Pour le verbe “avoir”, écrivez “a”. [[63:64]] => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. <|> à => suggestions : a
77 Guillemets typographiques ouvrants. [[93:94]] => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. <|> " => suggestions : « “
77 Guillemets typographiques fermants. [[102:103]] => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. <|> " => suggestions :  »”

82 Mot inconnu : NMEAParser [[173:183]] => Voici les fichiers de bases à créer pour y parvenir. Ces fichiers sont documentés pour vous apporter les informations nécessaires. Vous pouvez toutefois contacter le projet NMEAParser sur le site de Launchpad et poser vos questions en cas de besoin. <|> nmeaparser
