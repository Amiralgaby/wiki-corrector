
5 Mot inconnu : libNMEAParser => ====== libNMEAParser ====== | libnmeaparser

7 Mot inconnu : libNMEAParser => La bibliothèque libNMEAParser permet à tout utilisateur de lire les trames NMEA 0183 et de récupérer les informations qu'elles contiennent. | libnmeaparser
7 Mot inconnu : NMEA => La bibliothèque libNMEAParser permet à tout utilisateur de lire les trames NMEA 0183 et de récupérer les informations qu'elles contiennent. | nmea

11 Mot inconnu : libNMEAParser => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | libnmeaparser
11 Mot inconnu : libNMEAParser-dev => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | libnmeaparser-dev
11 Mot inconnu : x86 => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | x86
11 Mot inconnu : x86_64 => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | x86_64
11 Mot inconnu : LPIA => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | lpia
11 Mot inconnu : Gutsy => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | gutsy
11 Mot inconnu : dépot => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | dépot
11 Mot inconnu : Spomky => libNMEAParser et libNMEAParser-dev sont disponibles sous forme de paquets binaires x86, x86_64 et LPIA pour Gutsy Gibbon sur le dépot de Spomky. | spomky

17 Mot inconnu : libc => Cette bibliothèque ne nécessite aucun autre logiciel pour fonctionner hormis libc. | libc

28 Mot inconnu : sudo => sudo make install</code> | sudo
28 Mot inconnu : make => sudo make install</code> | make
28 Mot inconnu : install => sudo make install</code> | install

33 Mot inconnu : libnmeaparser => Désinstallez simplement le paquet libnmeaparser ou libnmeaparser-dev. | libnmeaparser
33 Mot inconnu : libnmeaparser-dev => Désinstallez simplement le paquet libnmeaparser ou libnmeaparser-dev. | libnmeaparser-dev

40 Mot inconnu : libnmeaparser-dev => Une fois libnmeaparser-dev ou les sources installée, vous disposerez de la bibliothèque en elle-même mais aussi des en-têtes. | libnmeaparser-dev
40 Accord de nombre erroné avec « les sources » : « installée » devrait être au pluriel. => Une fois libnmeaparser-dev ou les sources installée, vous disposerez de la bibliothèque en elle-même mais aussi des en-têtes. | installée => suggestions : ['installées']

42 Mot inconnu : LibNMEAParser => LibNMEAParser se présente sous forme d'une série d'objets C++ nommés NMEAParser_xxx où xxx représente l'identifiant de la trame. | libnmeaparser
42 Mot inconnu : NMEAParser_xxx => LibNMEAParser se présente sous forme d'une série d'objets C++ nommés NMEAParser_xxx où xxx représente l'identifiant de la trame. | nmeaparser_xxx
42 Mot inconnu : xxx => LibNMEAParser se présente sous forme d'une série d'objets C++ nommés NMEAParser_xxx où xxx représente l'identifiant de la trame. | xxx

43 Mot inconnu : GSV => Par exemple une trame GSV (identification et positionnement des satellites en vue) sera analysées par l'objet NMEAParser_GSV. | gsv
43 Mot inconnu : NMEAParser_GSV => Par exemple une trame GSV (identification et positionnement des satellites en vue) sera analysées par l'objet NMEAParser_GSV. | nmeaparser_gsv

47 Mot inconnu : NMEAParser_xxx => === NMEAParser_xxx( const std::string sentence ) === | nmeaparser_xxx
47 Pas d’espace après ce signe. => === NMEAParser_xxx( const std::string sentence ) === | (  => suggestions : ['(']
47 Mot inconnu : const => === NMEAParser_xxx( const std::string sentence ) === | const
47 Mot inconnu : std => === NMEAParser_xxx( const std::string sentence ) === | std
47 Une de ces ponctuations est superflue. => === NMEAParser_xxx( const std::string sentence ) === | :: => suggestions : [':', ':']
47 Pas d’espace avant ce signe. => === NMEAParser_xxx( const std::string sentence ) === |  ) => suggestions : [')']

49 Mot inconnu : RMC => Par exemple pour construire un objet et analyser une trame RMC vous pouvez procéder ainsi : | rmc

51 Mot inconnu : suffiet => Pour connaitre le statut de l'analyse, il vous suffiet de récupérer la valeur suivante : | suffiet

53 Confusion probable : “est” une forme conjuguée du verbe “être”. Pour la conjonction de coordination, écrivez “et”. => Le type STATUS est ses énumérations sont définis dans le fichier NMEAParser.h | est => suggestions : ['et']
53 Mot inconnu : NMEAParser => Le type STATUS est ses énumérations sont définis dans le fichier NMEAParser.h | nmeaparser

56 Pas d’espace après ce signe. => === STATUS parse( std::string sentence ) === | (  => suggestions : ['(']
56 Mot inconnu : std => === STATUS parse( std::string sentence ) === | std
56 Une de ces ponctuations est superflue. => === STATUS parse( std::string sentence ) === | :: => suggestions : [':', ':']
56 Pas d’espace avant ce signe. => === STATUS parse( std::string sentence ) === |  ) => suggestions : [')']

60 Mot inconnu : ma_variable => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | ma_variable
60 Il manque un espace. => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | parse => suggestions : [' parse']
60 Pas d’espace après ce signe. => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | (  => suggestions : ['(']
60 Mot inconnu : GPRMC => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | gprmc
60 Il manque un espace. => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | 194504 => suggestions : [' 194504']
60 Erreur de numérisation ? Virgules au lieu de points ? => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | ,,, => suggestions : ['…']
60 Guillemets typographiques fermants. => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> | " => suggestions : ['\xa0»', '”']
60 Pas d’espace avant ce signe. => ma_variable.parse( "$GPRMC,194504.000,A,4741.0590,N,00237.9215,E,0.00,0.00,200208,,,A*68" );</code> |  ) => suggestions : [')']

63 Mot inconnu : void => === void clear( void ) === | void
63 Mot inconnu : clear => === void clear( void ) === | clear
63 Pas d’espace après ce signe. => === void clear( void ) === | (  => suggestions : ['(']
63 Mot inconnu : void => === void clear( void ) === | void
63 Pas d’espace avant ce signe. => === void clear( void ) === |  ) => suggestions : [')']

72 Mot inconnu : ma_variable2 => ma_variable2 = ma_variable1;</code> | ma_variable2
72 Mot inconnu : ma_variable1 => ma_variable2 = ma_variable1;</code> | ma_variable1

77 Guillemets typographiques ouvrants. => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. | " => suggestions : ['«\xa0', '“']
77 Guillemets typographiques fermants. => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. | " => suggestions : ['\xa0»', '”']
77 Confusion probable : “à” est une préposition. Pour le verbe “avoir”, écrivez “a”. => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. | à => suggestions : ['a']
77 Guillemets typographiques ouvrants. => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. | " => suggestions : ['«\xa0', '“']
77 Guillemets typographiques fermants. => Dans tous les cas les variables "status" (précise si l'analyse à eu lieu et son résultat) et "sentence" (trame analysée) sont toujours disponibles. | " => suggestions : ['\xa0»', '”']

82 Mot inconnu : NMEAParser => Voici les fichiers de bases à créer pour y parvenir. Ces fichiers sont documentés pour vous apporter les informations nécessaires. Vous pouvez toutefois contacter le projet NMEAParser sur le site de Launchpad et poser vos questions en cas de besoin. | nmeaparser
82 Mot inconnu : Launchpad => Voici les fichiers de bases à créer pour y parvenir. Ces fichiers sont documentés pour vous apporter les informations nécessaires. Vous pouvez toutefois contacter le projet NMEAParser sur le site de Launchpad et poser vos questions en cas de besoin. | launchpad
86 Mot inconnu : FIXME => //Contributeurs : FIXME.// | fixme
