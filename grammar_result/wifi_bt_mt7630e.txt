
4 Mot inconnu : MT7630e [[31:38]] => ====== Carte Wifi et Bluetooth MT7630e ====== <|> mt7630e

8 Mot inconnu : MEDIATEK [[9:17]] => La carte MEDIATEK MT7630e permet à la fois d'obtenir un accès Wifi et Bluetooth. Présente sur certains HP et Asus (Je possède un Asus K551LN), à l'heure où j'écris cet article (03/07/2014, Ubuntu 14.04 noyau 1.13) elle n'est pas encore intégrée dans Ubuntu par défaut (idem en 2018). Nous verrons une méthode pour l'installer à partir des sources données par Mediatek. <|> mediatek
8 Mot inconnu : MT7630e [[18:25]] => La carte MEDIATEK MT7630e permet à la fois d'obtenir un accès Wifi et Bluetooth. Présente sur certains HP et Asus (Je possède un Asus K551LN), à l'heure où j'écris cet article (03/07/2014, Ubuntu 14.04 noyau 1.13) elle n'est pas encore intégrée dans Ubuntu par défaut (idem en 2018). Nous verrons une méthode pour l'installer à partir des sources données par Mediatek. <|> mt7630e
8 Mot inconnu : K551LN [[134:140]] => La carte MEDIATEK MT7630e permet à la fois d'obtenir un accès Wifi et Bluetooth. Présente sur certains HP et Asus (Je possède un Asus K551LN), à l'heure où j'écris cet article (03/07/2014, Ubuntu 14.04 noyau 1.13) elle n'est pas encore intégrée dans Ubuntu par défaut (idem en 2018). Nous verrons une méthode pour l'installer à partir des sources données par Mediatek. <|> k551ln
8 Accord de nombre erroné avec « 14.04 » : « noyau » devrait être au pluriel. [[202:207]] => La carte MEDIATEK MT7630e permet à la fois d'obtenir un accès Wifi et Bluetooth. Présente sur certains HP et Asus (Je possède un Asus K551LN), à l'heure où j'écris cet article (03/07/2014, Ubuntu 14.04 noyau 1.13) elle n'est pas encore intégrée dans Ubuntu par défaut (idem en 2018). Nous verrons une méthode pour l'installer à partir des sources données par Mediatek. <|> noyau => suggestions : ['noyaux']
8 Mot inconnu : Mediatek [[359:367]] => La carte MEDIATEK MT7630e permet à la fois d'obtenir un accès Wifi et Bluetooth. Présente sur certains HP et Asus (Je possède un Asus K551LN), à l'heure où j'écris cet article (03/07/2014, Ubuntu 14.04 noyau 1.13) elle n'est pas encore intégrée dans Ubuntu par défaut (idem en 2018). Nous verrons une méthode pour l'installer à partir des sources données par Mediatek. <|> mediatek
11 Mot inconnu : EFI_SECURE_BOOT_SIG_ENFORCE [[84:111]] => C'est nécessaire parce que depuis Ubuntu kernel 4.4.0-20, la configuration du noyau EFI_SECURE_BOOT_SIG_ENFORCE a été activée. Cela empêche de charger des modules tiers non signés si "UEFI Secure Boot" est activé. <|> efi_secure_boot_sig_enforce
11 Guillemets typographiques ouvrants. [[183:184]] => C'est nécessaire parce que depuis Ubuntu kernel 4.4.0-20, la configuration du noyau EFI_SECURE_BOOT_SIG_ENFORCE a été activée. Cela empêche de charger des modules tiers non signés si "UEFI Secure Boot" est activé. <|> " => suggestions : ['«\xa0', '“']
11 Mot inconnu : Secure [[189:195]] => C'est nécessaire parce que depuis Ubuntu kernel 4.4.0-20, la configuration du noyau EFI_SECURE_BOOT_SIG_ENFORCE a été activée. Cela empêche de charger des modules tiers non signés si "UEFI Secure Boot" est activé. <|> secure
11 Guillemets typographiques fermants. [[200:201]] => C'est nécessaire parce que depuis Ubuntu kernel 4.4.0-20, la configuration du noyau EFI_SECURE_BOOT_SIG_ENFORCE a été activée. Cela empêche de charger des modules tiers non signés si "UEFI Secure Boot" est activé. <|> " => suggestions : ['\xa0»', '”']
17 Mot inconnu : Etre [[4:8]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> etre
17 Mot inconnu : MT7630e [[38:45]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> mt7630e
17 Mot inconnu : MEDIATEK [[121:129]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> mediatek
17 Mot inconnu : Corp [[130:134]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> corp
17 Mot inconnu : MT7630e [[136:143]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> mt7630e
17 Mot inconnu : Wireless [[154:162]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> wireless
17 Mot inconnu : Network [[163:170]] =>   * Etre sûr que l'on a bien la carte MT7630e. Pour le savoir lancer un <code>lspci</code> si vous voyez une ligne <code>MEDIATEK Corp. MT7630e 802.11bgn Wireless Network Adapter</code> c'est que vous possédez cette carte. <|> network

22 Mot inconnu : secure [[30:36]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> secure
22 Guillemets typographiques ouvrants. [[118:119]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['«\xa0', '“']
22 Mot inconnu : System [[119:125]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> system
22 Mot inconnu : setup [[126:131]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> setup
22 Guillemets typographiques fermants. [[131:132]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['\xa0»', '”']
22 Guillemets typographiques ouvrants. [[201:202]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['«\xa0', '“']
22 Mot inconnu : Secure [[202:208]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> secure
22 Guillemets typographiques fermants. [[213:214]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['\xa0»', '”']
22 Guillemets typographiques ouvrants. [[231:232]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['«\xa0', '“']
22 Mot inconnu : Disabled [[232:240]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> disabled
22 Guillemets typographiques fermants. [[240:241]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['\xa0»', '”']
22 Guillemets typographiques ouvrants. [[272:273]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['«\xa0', '“']
22 Mot inconnu : System [[273:279]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> system
22 Mot inconnu : setup [[280:285]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> setup
22 Guillemets typographiques fermants. [[285:286]] => On commence par désactiver le secure boot qui bloque le wifi et le bluetooth : redémarrer le PC, rentrer dans le mode "System setup" avant qu'ubuntu se lance, naviguer dans les onglets pour trouver le "Secure boot" et le passer en "Disabled", sauvegarder, quitter le mode "System setup" et lancer ubuntu. <|> " => suggestions : ['\xa0»', '”']

26 Mot inconnu : github [[37:43]] => On télécharge le code disponible sur github : <|> github

40 Mot inconnu : dkms [[22:26]] => On installe le paquet dkms : <|> dkms

53 Espace(s) surnuméraire(s) à supprimer. [[58:60]] => ==== Réinstallation après mise à jour des paquets d'Ubuntu  ==== <|>    => suggestions : [' ']
54 Espace(s) en fin de ligne à supprimer. [[123:124]] => Lorsque le noyau (kernel) évolue lors d'une mise à jour des paquets d'Ubuntu, le wifi et le bluetooth ne fonctionnent plus.  <|>   => suggestions : ['']

58 Guillemets typographiques ouvrants. [[17:18]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|> " => suggestions : ['«\xa0', '“']
58 Mot inconnu : sh [[23:25]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|> sh
58 Guillemets typographiques fermants. [[25:26]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|> " => suggestions : ['\xa0»', '”']
58 Guillemets typographiques ouvrants. [[55:56]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|> " => suggestions : ['«\xa0', '“']
58 Mot inconnu : nom_d_utilisateur [[61:78]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|> nom_d_utilisateur
58 Guillemets typographiques fermants. [[78:79]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|> " => suggestions : ['\xa0»', '”']
58 Espace(s) en fin de ligne à supprimer. [[80:81]] => Créer un fichier "wifi.sh" dans le dossier utilisateur "home/nom_d_utilisateur".  <|>   => suggestions : ['']

59 Guillemets typographiques ouvrants. [[77:78]] => Accédez aux propriétés du fichier (clic droit, propriétés), allez à l'onglet "Droits d'accès" et cochez "Est exécutable". <|> " => suggestions : ['«\xa0', '“']
59 Accord de nombre erroné avec “onglet” : “Droits” devrait être au singulier. [[78:84]] => Accédez aux propriétés du fichier (clic droit, propriétés), allez à l'onglet "Droits d'accès" et cochez "Est exécutable". <|> droits => suggestions : ['Droit']
59 Guillemets typographiques fermants. [[92:93]] => Accédez aux propriétés du fichier (clic droit, propriétés), allez à l'onglet "Droits d'accès" et cochez "Est exécutable". <|> " => suggestions : ['\xa0»', '”']
59 Guillemets typographiques ouvrants. [[104:105]] => Accédez aux propriétés du fichier (clic droit, propriétés), allez à l'onglet "Droits d'accès" et cochez "Est exécutable". <|> " => suggestions : ['«\xa0', '“']
59 Guillemets typographiques fermants. [[119:120]] => Accédez aux propriétés du fichier (clic droit, propriétés), allez à l'onglet "Droits d'accès" et cochez "Est exécutable". <|> " => suggestions : ['\xa0»', '”']

60 Guillemets typographiques ouvrants. [[18:19]] => Ouvrir le fichier "wifi.sh" avec un éditeur de texte (Gedit, kate) et copier les lignes suivantes : <|> " => suggestions : ['«\xa0', '“']
60 Mot inconnu : sh [[24:26]] => Ouvrir le fichier "wifi.sh" avec un éditeur de texte (Gedit, kate) et copier les lignes suivantes : <|> sh
60 Guillemets typographiques fermants. [[26:27]] => Ouvrir le fichier "wifi.sh" avec un éditeur de texte (Gedit, kate) et copier les lignes suivantes : <|> " => suggestions : ['\xa0»', '”']
60 Mot inconnu : kate [[61:65]] => Ouvrir le fichier "wifi.sh" avec un éditeur de texte (Gedit, kate) et copier les lignes suivantes : <|> kate

71 Mot inconnu : DKMS [[33:37]] => ===== Installation complète avec DKMS (moins automatisé) ===== <|> dkms

73 Mot inconnu : DKMS [[52:56]] => Il est important de noter que cette méthode utilise DKMS et ainsi doit être renouvelée en partie à chaque changement de noyaux. Pour éviter ce problème préférez le script plus haut qui charge les modules avec insmod au démarrage. <|> dkms
73 Mot inconnu : insmod [[209:215]] => Il est important de noter que cette méthode utilise DKMS et ainsi doit être renouvelée en partie à chaque changement de noyaux. Pour éviter ce problème préférez le script plus haut qui charge les modules avec insmod au démarrage. <|> insmod
75 S’il s’agit d’un impératif, mettez un trait d’union. [[226:241]] => Commencez par aller chercher les sources sur la page http://www.mediatek.com/en/downloads/mt7630-pcie/ (vous devez donner une adresse mail, mais vous pouvez mettre une adresse quelconque il n'y a aucune vérification d'email). Décompressez la et allez dans le dossier nouvellement créé en console. <|> décompressez la => suggestions : ['Décompressez-la']

77 Accord de nombre erroné avec « les paquets » : « nécessaire » devrait être au pluriel. [[36:46]] => Commencez par installer les paquets nécessaire à la compilation et à l'installation : <|> nécessaire => suggestions : ['nécessaires']

81 Mot inconnu : ReadMe [[39:45]] => Lancez ensuite, comme spécifié dans le ReadMe : <|> readme

92 Si “la méthode…” est bien le COD du participe passé “trouvé”, celui-ci devrait être au féminin singulier. [[121:127]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> trouvé => suggestions : ['trouvée']
92 Mot inconnu : dkms [[146:150]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> dkms
92 Typographie : points de suspension. Utilisez le caractère dédié. [[229:232]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> ... => suggestions : ['…']
92 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[233:234]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> a => suggestions : ['À']

95 Mot inconnu : rt2x00 [[12:18]] => Puis copier rt2x00 dans un nouveau dossier portant le nom du noyau : <|> rt2x00
95 Signe de multiplication typographique. [[14:18]] => Puis copier rt2x00 dans un nouveau dossier portant le nom du noyau : <|> 2x00 => suggestions : ['2\xa0×\xa000']

98 Mot inconnu : dkms [[38:42]] => Puis créer dans ce dossier un fichier dkms.conf par exemple via <|> dkms
98 Il manque un espace. [[43:47]] => Puis créer dans ce dossier un fichier dkms.conf par exemple via <|> conf => suggestions : [' conf']
134 Mot inconnu : cp [[74:76]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> cp
134 Guillemets typographiques ouvrants. [[77:78]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> " => suggestions : ['«\xa0', '“']
134 Mot inconnu : rt2x00 [[78:84]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> rt2x00
134 Signe de multiplication typographique. [[80:84]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> 2x00 => suggestions : ['2\xa0×\xa000']
134 Mot inconnu : uname [[87:92]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> uname
134 Il manque un espace à côté du tiret. [[92:94]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|>  - => suggestions : [' – ', ' — ']
134 Mot inconnu : egrep [[98:103]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> egrep
134 Il manque un espace à côté du tiret. [[103:105]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|>  - => suggestions : [' – ', ' — ']
134 Mot inconnu : head [[126:130]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> head
134 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. [[131:133]] => La version initiale proposait d’enchaîner avec la ligne de code suivante: cp "rt2x00-$(uname -r | egrep -o "[0-9]*\.[0-9]*" | head -1)" /usr/src/ <|> -1 => suggestions : ['−1', '– 1', '— 1']

168 Mot inconnu : ReadMe [[39:45]] => Lancez ensuite, comme spécifié dans le ReadMe : <|> readme
172 Mot inconnu : mt76xx [[126:132]] => Il y a cependant une petite modification à faire dans le code pour rendre le bluetooth fonctionnel. Il faut éditer le fichier mt76xx.c en rajoutant les lignes avec les astérisques (*********, en les supprimant bien évidemment) <|> mt76xx

197 Si “la méthode…” est bien le COD du participe passé “trouvé”, celui-ci devrait être au féminin singulier. [[121:127]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> trouvé => suggestions : ['trouvée']
197 Mot inconnu : dkms [[146:150]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> dkms
197 Typographie : points de suspension. Utilisez le caractère dédié. [[229:232]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> ... => suggestions : ['…']
197 S’il s’agit de la préposition « à », il faut accentuer la majuscule. [[233:234]] => Si tout est fonctionnel vous voudrez certainement l'installer au démarrage. Pour cela la méthode la plus propre que j'ai trouvé est de passer par dkms (par contre je crois qu'il faut reproduire ces étapes quand on change de noyau... A confirmer, si c'est le cas je suis intéressé par une méthode plus propre) <|> a => suggestions : ['À']

200 Mot inconnu : btloader [[12:20]] => Puis copier btloader dans un nouveau dossier portant le nom du noyau : <|> btloader

203 Mot inconnu : dkms [[38:42]] => Puis créer dans ce dossier un fichier dkms.conf par exemple via <|> dkms
203 Il manque un espace. [[43:47]] => Puis créer dans ce dossier un fichier dkms.conf par exemple via <|> conf => suggestions : [' conf']
