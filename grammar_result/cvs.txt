
6 Mot inconnu : CVS [[7:10]] => ====== CVS : utilisation en tant que client ====== <|> cvs

8 Mot inconnu : CVS [[4:7]] => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique.  <|> cvs
8 Mot inconnu : System [[45:51]] => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique.  <|> system
8 Mot inconnu : System [[77:83]] => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique.  <|> system
8 Mot inconnu : Versioning [[101:111]] => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique.  <|> versioning
8 Mot inconnu : System [[112:118]] => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique.  <|> system
8 Espace(s) en fin de ligne à supprimer. [[330:331]] => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique.  <|>   => suggestions : ['']

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

21 Mot inconnu : repository [[39:49]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> repository
21 Mot inconnu : CVS [[50:53]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> cvs
21 Mot inconnu : repository [[88:98]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> repository
21 Mot inconnu : CVS [[99:102]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> cvs
21 Mot inconnu : repository [[135:145]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> repository
21 Mot inconnu : repository [[239:249]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> repository
21 Mot inconnu : CVS [[250:253]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> cvs
21 Mot inconnu : repository [[339:349]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> repository
21 Mot inconnu : CVS [[350:353]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> cvs
21 Mot inconnu : CVSROOT [[400:407]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|> cvsroot
21 Espace(s) en fin de ligne à supprimer. [[408:409]] => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT.  <|>   => suggestions : ['']

23 Mot inconnu : CVS [[0:3]] => CVS offre principalement les opérations suivantes :\\ <|> cvs
24 Mot inconnu : repository [[25:35]] => * admin : Administrer le repository (dans le cas d'une utilisation multi-utilisateurs)\\ <|> repository

25 Mot inconnu : checkout [[2:10]] => * checkout : Obtenir une copie locale des fichiers\\ <|> checkout

27 Mot inconnu : update [[2:8]] => * update : Mettre à jour le repository de travail par rapport au repository CVS\\ <|> update
27 Mot inconnu : repository [[28:38]] => * update : Mettre à jour le repository de travail par rapport au repository CVS\\ <|> repository
27 Mot inconnu : repository [[65:75]] => * update : Mettre à jour le repository de travail par rapport au repository CVS\\ <|> repository
27 Mot inconnu : CVS [[76:79]] => * update : Mettre à jour le repository de travail par rapport au repository CVS\\ <|> cvs

28 Mot inconnu : diff [[2:6]] => * diff : Voir les modifications entre les versions\\ <|> diff
30 Mot inconnu : repository [[43:53]] => * import : Créer un nouveau module dans le repository CVS à partir d'un répertoire local\\ <|> repository
30 Mot inconnu : CVS [[54:57]] => * import : Créer un nouveau module dans le repository CVS à partir d'un répertoire local\\ <|> cvs

33 Mot inconnu : add [[2:5]] => * add/remove : Ajouter/Supprimer un fichier ou un module\\ <|> add
33 Mot inconnu : remove [[6:12]] => * add/remove : Ajouter/Supprimer un fichier ou un module\\ <|> remove
35 Mot inconnu : cvs [[78:81]] => L'aide en ligne de chaque commande est accessible au moyen de la commande : $ cvs ---help <commande> <|> cvs
35 Mot inconnu : help [[85:89]] => L'aide en ligne de chaque commande est accessible au moyen de la commande : $ cvs ---help <commande> <|> help

56 Mot inconnu : Specify [[1:8]] => (Specify the ---help global option for a list of other help options) <|> specify
56 Mot inconnu : the [[9:12]] => (Specify the ---help global option for a list of other help options) <|> the
56 Mot inconnu : help [[16:20]] => (Specify the ---help global option for a list of other help options) <|> help
56 Mot inconnu : list [[41:45]] => (Specify the ---help global option for a list of other help options) <|> list
56 Mot inconnu : of [[46:48]] => (Specify the ---help global option for a list of other help options) <|> of
56 Mot inconnu : other [[49:54]] => (Specify the ---help global option for a list of other help options) <|> other
56 Mot inconnu : help [[55:59]] => (Specify the ---help global option for a list of other help options) <|> help

59 Mot inconnu : Checkout [[5:13]] => ==== Checkout ==== <|> checkout

61 Mot inconnu : checkout [[3:11]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> checkout
61 Mot inconnu : repository [[77:87]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> repository
61 Mot inconnu : CVS [[88:91]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> cvs
61 Mot inconnu : repository [[118:128]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> repository
61 Mot inconnu : CVS [[141:144]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> cvs
61 Guillemets typographiques ouvrants. [[235:236]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> " => suggestions : ['«\xa0', '“']
61 Guillemets typographiques fermants. [[241:242]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> " => suggestions : ['\xa0»', '”']
61 Guillemets typographiques ouvrants. [[345:346]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> " => suggestions : ['«\xa0', '“']
61 Guillemets typographiques fermants. [[351:352]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> " => suggestions : ['\xa0»', '”']
61 Mot inconnu : CVS [[380:383]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|> cvs
61 Il manque un espace à côté du tiret. [[440:442]] => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r). <|>  - => suggestions : [' – ', ' — ']

66 Mot inconnu : checkout [[27:35]] => Notez que l'utilisation de checkout est récursive. <|> checkout

68 Mot inconnu : CVS [[23:26]] => Si tout se passe bien, CVS fournit une sortie qui ressemble à : <|> cvs

70 Mot inconnu : htdocs [[2:8]] => U htdocs/actions/ldd/index.wml <|> htdocs
70 Mot inconnu : ldd [[17:20]] => U htdocs/actions/ldd/index.wml <|> ldd
70 Mot inconnu : wml [[27:30]] => U htdocs/actions/ldd/index.wml <|> wml

72 Mot inconnu : htdocs [[22:28]] => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml. <|> htdocs
72 Mot inconnu : ldd [[37:40]] => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml. <|> ldd
72 Mot inconnu : wml [[68:71]] => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml. <|> wml
72 Mot inconnu : CVS [[95:98]] => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml. <|> cvs
72 Mot inconnu : wml [[249:252]] => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml. <|> wml

77 Mot inconnu : repository [[78:88]] => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple : <|> repository
77 Mot inconnu : CVS [[89:92]] => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple : <|> cvs
77 Mot inconnu : repository [[108:118]] => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple : <|> repository
77 Écriture invariable. Utilisez un point médian. [[131:141]] => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple : <|> fichier(s) => suggestions : ['fichier·s']
77 Si “le module…” est bien le COD du participe passé “modifiés”, celui-ci devrait être au masculin singulier. [[177:185]] => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple : <|> modifiés => suggestions : ['modifié']

81 Mot inconnu : CVS [[0:3]] => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs). <|> cvs
81 Mot inconnu : CVS [[190:193]] => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs). <|> cvs
81 Mot inconnu : vi [[214:216]] => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs). <|> vi
81 Mot inconnu : EDITOR [[335:341]] => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs). <|> editor
81 Mot inconnu : emacs [[355:360]] => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs). <|> emacs

83 Mot inconnu : vi [[72:74]] => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes). <|> vi
83 Mot inconnu : ESC [[76:79]] => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes). <|> esc
83 Mot inconnu : CVS [[96:99]] => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes). <|> cvs
83 Mot inconnu : repository [[140:150]] => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes). <|> repository
83 Mot inconnu : CVS [[218:221]] => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes). <|> cvs

85 Mot inconnu : emacs [[80:85]] => Si votre description tient en quelques mots, vous pouvez vous passer de l'étape emacs/vi en mettant votre texte sur la ligne de commande, en utilisant l'option -m <|> emacs
85 Mot inconnu : vi [[86:88]] => Si votre description tient en quelques mots, vous pouvez vous passer de l'étape emacs/vi en mettant votre texte sur la ligne de commande, en utilisant l'option -m <|> vi
85 Il manque un espace à côté du tiret. [[159:161]] => Si votre description tient en quelques mots, vous pouvez vous passer de l'étape emacs/vi en mettant votre texte sur la ligne de commande, en utilisant l'option -m <|>  - => suggestions : [' – ', ' — ']

88 Mot inconnu : Update [[5:11]] => ==== Update ==== <|> update

90 Mot inconnu : update [[12:18]] => La commande update permet de récupérer sur sa copie locale les modifications effectuées par d'autres personnes. Par exemple, pour recevoir toutes les modifications : <|> update

93 Mot inconnu : CVS [[142:145]] => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits). <|> cvs
93 Guillemets typographiques ouvrants. [[199:200]] => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits). <|> " => suggestions : ['«\xa0', '“']
93 Mot inconnu : merger [[200:206]] => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits). <|> merger
93 Guillemets typographiques fermants. [[206:207]] => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits). <|> " => suggestions : ['\xa0»', '”']

95 Mot inconnu : Diff [[5:9]] => ==== Diff ==== <|> diff

96 Mot inconnu : diff [[12:16]] => La commande diff, liste les différences entre la version locale d'un fichier et celle qui se trouve actuellement sur le référentiel. <|> diff

105 Il manque un espace à côté du tiret. [[161:163]] => Log permet de lister un historique sommaire des révisions comprenant les dates et numéros respectifs, ainsi que les commentaires spécifiés lors du commit (option -m ou saisis depuis l'éditeur appelé par cvs), utiliser la commande : <|>  - => suggestions : [' – ', ' — ']
105 Mot inconnu : cvs [[203:206]] => Log permet de lister un historique sommaire des révisions comprenant les dates et numéros respectifs, ainsi que les commentaires spécifiés lors du commit (option -m ou saisis depuis l'éditeur appelé par cvs), utiliser la commande : <|> cvs

113 Espace(s) en fin de ligne à supprimer. [[5:6]] => -----  <|>   => suggestions : ['']
