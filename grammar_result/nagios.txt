
4 Mot inconnu : Nagios [[7:13]] => ====== Nagios : moniteur de supervision ====== <|> nagios

6 Mot inconnu : nagios3 [[52:59]] => //**Remarque :**  Cet article a été mis à jour pour nagios3, disponible pour Ubuntu 8.10// <|> nagios3

14 Mot inconnu : Nagios [[57:63]] => Le moniteur de supervision que nous allons décrire est **Nagios** qui est l'un des plus connus et des plus utilisés. <|> nagios
18 Espace(s) en fin de ligne à supprimer. [[63:64]] => Pour la suite des opérations, des pré-requis sont nécessaires :  <|>   => suggestions : ['']

28 Mot inconnu : Nagios [[0:6]] => Nagios est, avant toute chose, un moteur gérant l'ordonnancement des vérifications, ainsi que les actions à prendre sur incidents (alertes, escalades, prise d'action corrective). <|> nagios

32 Mot inconnu : Nagios [[16:22]] => Les greffons de Nagios (ou sondes ou plugins) sont des petits scripts ou programmes qui sont la base des vérifications. <|> nagios

49 Mot inconnu : Nagios [[55:61]] => Pour configurer le serveur Apache de telle manière que Nagios soit accessible, le paquet Nagios fait un lien symbolique « /etc/apache2/conf.d/nagios.conf » vers « /etc/nagios3/apache.conf ». <|> nagios
49 Mot inconnu : Nagios [[89:95]] => Pour configurer le serveur Apache de telle manière que Nagios soit accessible, le paquet Nagios fait un lien symbolique « /etc/apache2/conf.d/nagios.conf » vers « /etc/nagios3/apache.conf ». <|> nagios

57 Mot inconnu : Nagios [[49:55]] => Vous devriez avoir accès à la page principale de Nagios une fois que vous avez introduit votre mot de passe en consultant l'URL suivante, le login étant « nagiosadmin » : http://localhost/nagios3/ <|> nagios
57 Mot inconnu : nagiosadmin [[155:166]] => Vous devriez avoir accès à la page principale de Nagios une fois que vous avez introduit votre mot de passe en consultant l'URL suivante, le login étant « nagiosadmin » : http://localhost/nagios3/ <|> nagiosadmin

59 Espace(s) en fin de ligne à supprimer. [[79:80]] => Si ce n'est pas le cas, vérifier la configuration de votre serveur HTTP Apache.  <|>   => suggestions : ['']

91 Mot inconnu : Nagios [[20:26]] => La configuration de Nagios peut paraître compliquée au premier abord. Il y a beaucoup de fichiers de configuration qui se trouvent dans « /etc/nagios3 ». <|> nagios

93 Confusion probable. Pour dire “possiblement”, écrivez “peut-être”. [[7:16]] => Il y a peut être deux écoles, mais je vous conseille de mettre tout à plat si vous installez Nagios pour la première fois. <|> peut être => suggestions : ['peut-être']
93 Mot inconnu : Nagios [[93:99]] => Il y a peut être deux écoles, mais je vous conseille de mettre tout à plat si vous installez Nagios pour la première fois. <|> nagios
95 Mot inconnu : nagios [[58:64]] => Garder dans le dossier « /etc/nagios3/ » que le fichier « nagios.cfg » (c'est le seul « .cfg » nécessaire dans ce dossier), nous allons tout mettre dans un dossier que nous créerons pour l'occasion : <|> nagios
95 Mot inconnu : cfg [[65:68]] => Garder dans le dossier « /etc/nagios3/ » que le fichier « nagios.cfg » (c'est le seul « .cfg » nécessaire dans ce dossier), nous allons tout mettre dans un dossier que nous créerons pour l'occasion : <|> cfg
95 Mettez des guillemets fermants plutôt qu’ouvrants. [[85:87]] => Garder dans le dossier « /etc/nagios3/ » que le fichier « nagios.cfg » (c'est le seul « .cfg » nécessaire dans ce dossier), nous allons tout mettre dans un dossier que nous créerons pour l'occasion : <|>  « => suggestions : ['\xa0»', '”']
95 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[87:89]] => Garder dans le dossier « /etc/nagios3/ » que le fichier « nagios.cfg » (c'est le seul « .cfg » nécessaire dans ce dossier), nous allons tout mettre dans un dossier que nous créerons pour l'occasion : <|>  . => suggestions : ['. ', '.']
95 Mot inconnu : cfg [[89:92]] => Garder dans le dossier « /etc/nagios3/ » que le fichier « nagios.cfg » (c'est le seul « .cfg » nécessaire dans ce dossier), nous allons tout mettre dans un dossier que nous créerons pour l'occasion : <|> cfg

99 Mettez des guillemets fermants plutôt qu’ouvrants. [[26:28]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|>  « => suggestions : ['\xa0»', '”']
99 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[28:30]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|>  . => suggestions : ['. ', '.']
99 Mot inconnu : cfg [[30:33]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> cfg
99 Mot inconnu : nagios [[46:52]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> nagios
99 Mot inconnu : cfg [[53:56]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> cfg
99 Mot inconnu : cgi [[62:65]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> cgi
99 Mot inconnu : cfg [[66:69]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> cfg
99 Mot inconnu : resource [[77:85]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> resource
99 Mot inconnu : cfg [[86:89]] => Déplacer tous les fichiers « .cfg » (**sauf « nagios.cfg », « cgi.cfg » et « resource.cfg »**) dans ce dossier. <|> cfg
105 Mot inconnu : cfg_file [[53:61]] => Ensuite commenter toutes les lignes commençant par « cfg_file ». <|> cfg_file

107 Mettez des guillemets fermants plutôt qu’ouvrants. [[222:224]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|>  « => suggestions : ['\xa0»', '”']
107 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[224:226]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|>  . => suggestions : ['. ', '.']
107 Mot inconnu : cfg [[226:229]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|> cfg
107 Mot inconnu : hosts [[380:385]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|> hosts
107 Mot inconnu : cfg [[386:389]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|> cfg
107 Accord de nombre erroné avec « indicatifs ». [[496:501]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|> titre => suggestions : ['titres']
107 Accord de nombre erroné avec « titre ». [[502:512]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|> indicatifs => suggestions : ['indicatif']
107 Mot inconnu : Nagios [[578:584]] => Cette étape est délicate mais importante pour la suite, c'est vraiment dommage que le paquet soit fait de telle façon. Le gros avantage c'est que vous n'êtes plus limités dans le nom des fichiers, tant qu'ils finissent par « .cfg ». Par exemple, vous pouvez générer des définitions de machines en remplissant un fichier pour chaque groupe, ceci afin d'éviter d'avoir un fichier « hosts.cfg » avec 4000 machines difficilement lisible. Donc, dans toute la suite, les noms de fichiers sont donnés à titre indicatifs, c'est ceux que vous trouverez dans l'installation par défaut de Nagios. <|> nagios

109 Mot inconnu : Nagios [[57:63]] => Il y a une idée à bien saisir lorsque l'on commence avec Nagios : je ne décris un « objet » qu'une et une seule fois. <|> nagios
110 Mot inconnu : generic [[46:53]] => Cela passe par l'utilisation de « modèle » (//generic/template// dans nagios) et par la réutilisation de ces modèles. <|> generic
110 Mot inconnu : template [[54:62]] => Cela passe par l'utilisation de « modèle » (//generic/template// dans nagios) et par la réutilisation de ces modèles. <|> template
110 Mot inconnu : nagios [[70:76]] => Cela passe par l'utilisation de « modèle » (//generic/template// dans nagios) et par la réutilisation de ces modèles. <|> nagios

111 Mot inconnu : Nagios [[58:64]] => On peut créer des modèles pour à peu près tous les objets Nagios. <|> nagios

113 Mot inconnu : Nagios [[87:93]] => Afin de se simplifier la vie, nous allons d'abord examiner la configuration basique de Nagios (définition des périodes, utilisateurs et des serveurs), ensuite nous envisagerons la configuration des services de surveillance. <|> nagios

115 Espace(s) surnuméraire(s) à supprimer. [[49:51]] => Après chaque modification d'un fichier, faites un  : <|>    => suggestions : [' ']

149 Mot inconnu : Nagios [[114:120]] => Les personnes de contacts sont les personnes physiques à contacter en cas d'incident. Quand un problème survient, Nagios va //notifier// ces personnes d'après les //degrés de notification//. <|> nagios

152 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  ((Le nom peut être changé ou vous pouvez en définir plusieurs : « sys-admins.cfg » et « network-admins.cfg ».)) et les entrées ont un format similaire à celui-ci : <|>   => suggestions : ['']
152 Mot inconnu : sys-admins [[67:77]] =>  ((Le nom peut être changé ou vous pouvez en définir plusieurs : « sys-admins.cfg » et « network-admins.cfg ».)) et les entrées ont un format similaire à celui-ci : <|> sys-admins
152 Mot inconnu : cfg [[78:81]] =>  ((Le nom peut être changé ou vous pouvez en définir plusieurs : « sys-admins.cfg » et « network-admins.cfg ».)) et les entrées ont un format similaire à celui-ci : <|> cfg
152 Mot inconnu : network-admins [[89:103]] =>  ((Le nom peut être changé ou vous pouvez en définir plusieurs : « sys-admins.cfg » et « network-admins.cfg ».)) et les entrées ont un format similaire à celui-ci : <|> network-admins
152 Mot inconnu : cfg [[104:107]] =>  ((Le nom peut être changé ou vous pouvez en définir plusieurs : « sys-admins.cfg » et « network-admins.cfg ».)) et les entrées ont un format similaire à celui-ci : <|> cfg

201 Accord de nombre erroné : « surveillance » devrait être au pluriel. [[23:35]] => ==== Configuration des surveillance de services et d'hôtes ==== <|> surveillance => suggestions : ['surveillances']

203 Espace(s) en fin de ligne à supprimer. [[286:287]] => La surveillance de services et d'hôtes s'articule autour de plusieurs fichiers de configuration et ces fichiers sont tous liés les uns aux autres. C'est pour cela que je vais plutôt envisager un petit exemple plutôt que de me lancer dans une explication détaillée de toutes les options.  <|>   => suggestions : ['']
207 Mot inconnu : check_ [[78:84]] =>   * un greffon ou plugin utilisable en ligne de commande (le nom commence par check_ ) , il est très intéressant de le tester via la ligne de commande pour voir ses arguments  <|> check_
207 Pas d’espace avant ce signe. [[84:86]] =>   * un greffon ou plugin utilisable en ligne de commande (le nom commence par check_ ) , il est très intéressant de le tester via la ligne de commande pour voir ses arguments  <|>  ) => suggestions : [')']
207 Pas d’espace avant une virgule. [[86:88]] =>   * un greffon ou plugin utilisable en ligne de commande (le nom commence par check_ ) , il est très intéressant de le tester via la ligne de commande pour voir ses arguments  <|>  , => suggestions : [',']
207 Espace(s) en fin de ligne à supprimer. [[174:175]] =>   * un greffon ou plugin utilisable en ligne de commande (le nom commence par check_ ) , il est très intéressant de le tester via la ligne de commande pour voir ses arguments  <|>   => suggestions : ['']
208 Mot inconnu : Nagios [[13:19]] =>   * Un objet Nagios définissant la //command//  utilisant le plugin précédent <|> nagios
208 Mot inconnu : command [[37:44]] =>   * Un objet Nagios définissant la //command//  utilisant le plugin précédent <|> command
209 Mot inconnu : Nagios [[13:19]] =>   * un objet Nagios définissant le //service// utilisant la commande précédente <|> nagios
211 Espace(s) en fin de ligne à supprimer. [[18:19]] => Pour récapituler :  <|>   => suggestions : ['']

213 Mot inconnu : chekcommands [[16:28]] => script shell -> chekcommands.cfg -> services.cfg <|> chekcommands
213 Mot inconnu : cfg [[29:32]] => script shell -> chekcommands.cfg -> services.cfg <|> cfg
213 Mot inconnu : cfg [[45:48]] => script shell -> chekcommands.cfg -> services.cfg <|> cfg
215 Mot inconnu : Nagios [[103:109]] => //Remarque : // Les explications concernant les différentes options sont disponibles sur votre serveur Nagios au travers de l'interface web. En haut à gauche de l'écran, il y a un lien //Documentation// qui mène directement à la doc. Elle explique exhaustivement les différents paramètres. <|> nagios

217 Mot inconnu : NFS [[182:185]] => Notre exemple consiste en deux hôtes (un serveur mail et un serveur de fichier). Le serveur mail possède un service SMTP et un service IMAP. Le serveur de fichier possède un service NFS. Ces deux hôtes sont connectés sur un routeur-switch qui est le lien vers l'extérieur. Nous allons tester ces différents hôtes et services. <|> nfs
217 Mot inconnu : routeur-switch [[224:238]] => Notre exemple consiste en deux hôtes (un serveur mail et un serveur de fichier). Le serveur mail possède un service SMTP et un service IMAP. Le serveur de fichier possède un service NFS. Ces deux hôtes sont connectés sur un routeur-switch qui est le lien vers l'extérieur. Nous allons tester ces différents hôtes et services. <|> routeur-switch

252 Espace(s) surnuméraire(s) à supprimer. [[188:190]] => Une autre chose à laquelle vous devez faire attention, ce sont les noms d'hôtes. En effet, ce sont ces noms qui serviront dans les autres fichiers de configuration (notamment, pour lier un  hôte a un groupe d'hotes). <|>    => suggestions : [' ']
252 Mot inconnu : hotes [[209:214]] => Une autre chose à laquelle vous devez faire attention, ce sont les noms d'hôtes. En effet, ce sont ces noms qui serviront dans les autres fichiers de configuration (notamment, pour lier un  hôte a un groupe d'hotes). <|> hotes

348 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[0:8]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> méritent => suggestions : ['Méritent']
348 Mot inconnu : Nagios [[81:87]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> nagios
348 Mot inconnu : critical [[186:194]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> critical
348 Mot inconnu : unknown [[196:203]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> unknown
348 Mot inconnu : Nagios [[370:376]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> nagios
348 Guillemets typographiques ouvrants. [[377:378]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> ' => suggestions : ['“', '‘', '‹']
348 Guillemets typographiques fermants. [[390:391]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> ' => suggestions : ['”', '’', '›']
348 Mot inconnu : checks [[421:427]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> checks
348 Accord de genre erroné entre “intervalle” et “normale”. [[445:452]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> normale => suggestions : ['normal']
348 Mot inconnu : normal_check_interval [[454:475]] => méritent peut-être un peu d'attention. Rien de pire que les fausses alertes, ici Nagios testera les services toutes les 5 minutes, si un des services est dans un statut non OK (warning, critical, unknown) il va ressayer de le contacter une minute plus tard, et ceci 3 fois de suite puis déclenchera l'alerte (envoi de mail, etc), dès que le service répond de nouveau OK Nagios 'réinitialise' les compteurs et reprend les checks sur l'intervalle normale (normal_check_interval). <|> normal_check_interval
356 Mot inconnu : Nagios [[40:46]] =>   * On n'a pas d'alerte à la seconde ou Nagios a détecté le problème. <|> nagios

365 Mot inconnu : Escalation [[4:14]] => === Escalation === <|> escalation

367 Mot inconnu : escalation [[2:12]] => L'escalation est optionelle, donc ne commencez pas par ça ... Elle permet de mettre en place des niveaux d'alerte. <|> escalation
367 Mot inconnu : optionelle [[17:27]] => L'escalation est optionelle, donc ne commencez pas par ça ... Elle permet de mettre en place des niveaux d'alerte. <|> optionelle
367 Typographie : points de suspension. Utilisez le caractère dédié. [[58:61]] => L'escalation est optionelle, donc ne commencez pas par ça ... Elle permet de mettre en place des niveaux d'alerte. <|> ... => suggestions : ['…']
368 Mot inconnu : hierarchique [[330:342]] => Scénario simple : vous définissez les contacts pour vous et vos collègues administrateurs : c'est tout ce beau monde qui recevra immédiatement une alerte en cas de soucis, si l'alerte est encore effective après 2 notifications des principaux intéressés, d'autres personnes peuvent être prévenues, les commerciaux, votre supérieur hierarchique, la cellule communication/relation presse... à vous de voir en fonction des besoins de votre entreprise. <|> hierarchique
368 Typographie : points de suspension. Utilisez le caractère dédié. [[384:387]] => Scénario simple : vous définissez les contacts pour vous et vos collègues administrateurs : c'est tout ce beau monde qui recevra immédiatement une alerte en cas de soucis, si l'alerte est encore effective après 2 notifications des principaux intéressés, d'autres personnes peuvent être prévenues, les commerciaux, votre supérieur hierarchique, la cellule communication/relation presse... à vous de voir en fonction des besoins de votre entreprise. <|> ... => suggestions : ['…']

383 Mot inconnu : escalation [[33:43]] => Si vous ne voulez pas utiliser l'escalation renommez le fichier en .cfg.no ou tout autre extension différente de .cfg <|> escalation
383 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[66:68]] => Si vous ne voulez pas utiliser l'escalation renommez le fichier en .cfg.no ou tout autre extension différente de .cfg <|>  . => suggestions : ['. ', '.']
383 Mot inconnu : cfg [[68:71]] => Si vous ne voulez pas utiliser l'escalation renommez le fichier en .cfg.no ou tout autre extension différente de .cfg <|> cfg
383 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[112:114]] => Si vous ne voulez pas utiliser l'escalation renommez le fichier en .cfg.no ou tout autre extension différente de .cfg <|>  . => suggestions : ['. ', '.']
383 Mot inconnu : cfg [[114:117]] => Si vous ne voulez pas utiliser l'escalation renommez le fichier en .cfg.no ou tout autre extension différente de .cfg <|> cfg

387 Mot inconnu : cgi [[151:154]] => À chacun des hôtes et services peuvent être rattachés des arguments de type liens hypertextes et images. Pour cela, éditer le fichier de configuration cgi.cfg <|> cgi
387 Mot inconnu : cfg [[155:158]] => À chacun des hôtes et services peuvent être rattachés des arguments de type liens hypertextes et images. Pour cela, éditer le fichier de configuration cgi.cfg <|> cfg

428 Mot inconnu : icon_image [[15:25]] => Le paramètre //icon_image// correspond à l'image associée à un host (la miniature est gérée automatiquement) ; //vrml_image// correspond à l'image utilisée dans la 3-D statusmap ; et //statusmap_image// à l'image affichée dans la 2-D statusmap. <|> icon_image
428 Mot inconnu : host [[63:67]] => Le paramètre //icon_image// correspond à l'image associée à un host (la miniature est gérée automatiquement) ; //vrml_image// correspond à l'image utilisée dans la 3-D statusmap ; et //statusmap_image// à l'image affichée dans la 2-D statusmap. <|> host
428 Mot inconnu : vrml_image [[113:123]] => Le paramètre //icon_image// correspond à l'image associée à un host (la miniature est gérée automatiquement) ; //vrml_image// correspond à l'image utilisée dans la 3-D statusmap ; et //statusmap_image// à l'image affichée dans la 2-D statusmap. <|> vrml_image
428 Mot inconnu : statusmap [[168:177]] => Le paramètre //icon_image// correspond à l'image associée à un host (la miniature est gérée automatiquement) ; //vrml_image// correspond à l'image utilisée dans la 3-D statusmap ; et //statusmap_image// à l'image affichée dans la 2-D statusmap. <|> statusmap
428 Mot inconnu : statusmap_image [[185:200]] => Le paramètre //icon_image// correspond à l'image associée à un host (la miniature est gérée automatiquement) ; //vrml_image// correspond à l'image utilisée dans la 3-D statusmap ; et //statusmap_image// à l'image affichée dans la 2-D statusmap. <|> statusmap_image
428 Mot inconnu : statusmap [[234:243]] => Le paramètre //icon_image// correspond à l'image associée à un host (la miniature est gérée automatiquement) ; //vrml_image// correspond à l'image utilisée dans la 3-D statusmap ; et //statusmap_image// à l'image affichée dans la 2-D statusmap. <|> statusmap

434 Mot inconnu : Nagios [[34:40]] => ==== Démarrage et rechargement de Nagios ==== <|> nagios

436 Mot inconnu : Nagios [[25:31]] => Pour démarrer ou arrêter Nagios, vous pouvez le faire en ligne de commande de la manière suivante : <|> nagios

441 Mot inconnu : Nagios [[35:41]] => Pour recharger la configuration de Nagios (et en même temps la tester), utilisez la commande suivante : <|> nagios

455 Accord erroné : “solutions” et “coûteuse” ne sont pas accordés. Mettez au pluriel. [[188:196]] => Une solution est d'utiliser un serveur de SMS (ou Texto). Il existe des solutions clé sur porte proposées par la plupart des opérateurs de téléphonie mobile. Mais ces solutions sont assez coûteuse si vous devez envoyer un SMS de temps en temps. <|> coûteuse => suggestions : ['coûteuses']

459 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[75:79]] => //Remarque :// Certains Nokia peuvent poser des problèmes de compatibilités car ils utilisent un protocole propriétaire à la firme finlandaise. <|>  car => suggestions : [', car']

461 Mot inconnu : AX75 [[43:47]] => Nous avons choisi un GSM de marque Siemens AX75 et son câble data DCA-510 pour effectuer nos notifications SMS. Il suffit juste d'acheter une carte prépayée ou un abonnement uniquement SMS pour pouvoir se connecter au réseau de l'opérateur mobile. Nous avons choisi Siemens car les câbles data servent également à recharger le téléphone cellulaire via l'alimentation de la fiche USB. En effet, sur la plupart des mobiles, vous ne pouvez pas connecter le cordon d'alimentation et le câble data en même temps. C'est un des points à surveiller quand vous acheterez le GSM servant à la notification. <|> ax75
461 Mot inconnu : DCA-510 [[66:73]] => Nous avons choisi un GSM de marque Siemens AX75 et son câble data DCA-510 pour effectuer nos notifications SMS. Il suffit juste d'acheter une carte prépayée ou un abonnement uniquement SMS pour pouvoir se connecter au réseau de l'opérateur mobile. Nous avons choisi Siemens car les câbles data servent également à recharger le téléphone cellulaire via l'alimentation de la fiche USB. En effet, sur la plupart des mobiles, vous ne pouvez pas connecter le cordon d'alimentation et le câble data en même temps. C'est un des points à surveiller quand vous acheterez le GSM servant à la notification. <|> dca-510
461 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. [[273:277]] => Nous avons choisi un GSM de marque Siemens AX75 et son câble data DCA-510 pour effectuer nos notifications SMS. Il suffit juste d'acheter une carte prépayée ou un abonnement uniquement SMS pour pouvoir se connecter au réseau de l'opérateur mobile. Nous avons choisi Siemens car les câbles data servent également à recharger le téléphone cellulaire via l'alimentation de la fiche USB. En effet, sur la plupart des mobiles, vous ne pouvez pas connecter le cordon d'alimentation et le câble data en même temps. C'est un des points à surveiller quand vous acheterez le GSM servant à la notification. <|>  car => suggestions : [', car']
461 Mot inconnu : acheterez [[552:561]] => Nous avons choisi un GSM de marque Siemens AX75 et son câble data DCA-510 pour effectuer nos notifications SMS. Il suffit juste d'acheter une carte prépayée ou un abonnement uniquement SMS pour pouvoir se connecter au réseau de l'opérateur mobile. Nous avons choisi Siemens car les câbles data servent également à recharger le téléphone cellulaire via l'alimentation de la fiche USB. En effet, sur la plupart des mobiles, vous ne pouvez pas connecter le cordon d'alimentation et le câble data en même temps. C'est un des points à surveiller quand vous acheterez le GSM servant à la notification. <|> acheterez

497 Mot inconnu : Voice [[29:34]] => ==== Notifications par SMS / Voice call / iPhone push notification : TeamTILT pour Nagios ==== <|> voice
497 Mot inconnu : call [[35:39]] => ==== Notifications par SMS / Voice call / iPhone push notification : TeamTILT pour Nagios ==== <|> call
497 Mot inconnu : push [[49:53]] => ==== Notifications par SMS / Voice call / iPhone push notification : TeamTILT pour Nagios ==== <|> push
497 Mot inconnu : TeamTILT [[69:77]] => ==== Notifications par SMS / Voice call / iPhone push notification : TeamTILT pour Nagios ==== <|> teamtilt
497 Mot inconnu : Nagios [[83:89]] => ==== Notifications par SMS / Voice call / iPhone push notification : TeamTILT pour Nagios ==== <|> nagios

499 Mot inconnu : Nagios [[63:69]] => Une solution très simple existe pour envoyer ses notifications Nagios via SMS ou voice call : le client TeamTILT pour Nagios.  <|> nagios
499 Mot inconnu : voice [[81:86]] => Une solution très simple existe pour envoyer ses notifications Nagios via SMS ou voice call : le client TeamTILT pour Nagios.  <|> voice
499 Mot inconnu : call [[87:91]] => Une solution très simple existe pour envoyer ses notifications Nagios via SMS ou voice call : le client TeamTILT pour Nagios.  <|> call
499 Mot inconnu : TeamTILT [[104:112]] => Une solution très simple existe pour envoyer ses notifications Nagios via SMS ou voice call : le client TeamTILT pour Nagios.  <|> teamtilt
499 Mot inconnu : Nagios [[118:124]] => Une solution très simple existe pour envoyer ses notifications Nagios via SMS ou voice call : le client TeamTILT pour Nagios.  <|> nagios
499 Espace(s) en fin de ligne à supprimer. [[125:126]] => Une solution très simple existe pour envoyer ses notifications Nagios via SMS ou voice call : le client TeamTILT pour Nagios.  <|>   => suggestions : ['']

501 Mot inconnu : __Brève [[0:7]] => __Brève description :__  <|> __brève
501 Mot inconnu : __ [[21:23]] => __Brève description :__  <|> __
501 Espace(s) en fin de ligne à supprimer. [[23:24]] => __Brève description :__  <|>   => suggestions : ['']

503 Mot inconnu : recues [[164:170]] => Un client Java est à installer sur le serveur de monitoring. Ce client se connecte via une requête SOAP à un serveur distant qui est chargé de renvoyer les alertes recues par SMS ou voice call selon le schéma d'alerte du contact. Cette solution à plusieurs avantages :  <|> recues
503 Mot inconnu : voice [[182:187]] => Un client Java est à installer sur le serveur de monitoring. Ce client se connecte via une requête SOAP à un serveur distant qui est chargé de renvoyer les alertes recues par SMS ou voice call selon le schéma d'alerte du contact. Cette solution à plusieurs avantages :  <|> voice
503 Mot inconnu : call [[188:192]] => Un client Java est à installer sur le serveur de monitoring. Ce client se connecte via une requête SOAP à un serveur distant qui est chargé de renvoyer les alertes recues par SMS ou voice call selon le schéma d'alerte du contact. Cette solution à plusieurs avantages :  <|> call
503 Espace(s) en fin de ligne à supprimer. [[268:269]] => Un client Java est à installer sur le serveur de monitoring. Ce client se connecte via une requête SOAP à un serveur distant qui est chargé de renvoyer les alertes recues par SMS ou voice call selon le schéma d'alerte du contact. Cette solution à plusieurs avantages :  <|>   => suggestions : ['']

511 Mot inconnu : __Quelques [[0:10]] => __Quelques fonctionnalités :__  <|> __quelques
511 Mot inconnu : __ [[28:30]] => __Quelques fonctionnalités :__  <|> __
511 Espace(s) en fin de ligne à supprimer. [[30:31]] => __Quelques fonctionnalités :__  <|>   => suggestions : ['']

519 Mot inconnu : __Procédure [[0:11]] => __Procédure d'installation :__ <|> __procédure
519 Mot inconnu : __ [[28:30]] => __Procédure d'installation :__ <|> __

522 Mot inconnu : sudo [[2:6]] => //sudo wget http://www.alarmtilt.com/clients/TeamTILTClientForNagios_CL_JRE_32.tar.gz => version console 32 bits\\ <|> sudo
522 Mot inconnu : wget [[7:11]] => //sudo wget http://www.alarmtilt.com/clients/TeamTILTClientForNagios_CL_JRE_32.tar.gz => version console 32 bits\\ <|> wget

523 Mot inconnu : sudo [[0:4]] => sudo wget http://www.alarmtilt.com/clients/TeamTILTClientForNagios_CL_JRE_64.tar.gz => version console 64 bits // <|> sudo
523 Mot inconnu : wget [[5:9]] => sudo wget http://www.alarmtilt.com/clients/TeamTILTClientForNagios_CL_JRE_64.tar.gz => version console 64 bits // <|> wget

526 Mot inconnu : sudo [[2:6]] => //sudo tar xzvf TeamTILTClientForNagios_CL_JRE_32.tar.gz// <|> sudo
526 Mot inconnu : xzvf [[11:15]] => //sudo tar xzvf TeamTILTClientForNagios_CL_JRE_32.tar.gz// <|> xzvf

528 Mot inconnu : TeamTILTForNagios [[5:22]] => //cd TeamTILTForNagios/ <|> teamtiltfornagios

529 Mot inconnu : sudo [[0:4]] => sudo ./runTeamTILT.sh// <|> sudo
529 Mot inconnu : runTeamTILT [[7:18]] => sudo ./runTeamTILT.sh// <|> runteamtilt
529 Mot inconnu : sh [[19:21]] => sudo ./runTeamTILT.sh// <|> sh

540 Mot inconnu : Nagios [[92:98]] => La relation entre le moteur et les greffons est assurée d'une part dans la configuration de Nagios (dans les //services// et les //misccommands//), pour que Nagios sache quelles vérifications lancer sur ou à destination de quelles machines ou services, d'autre part par le code de retour ainsi que la sortie standard d'un greffon. <|> nagios
540 Mot inconnu : misccommands [[131:143]] => La relation entre le moteur et les greffons est assurée d'une part dans la configuration de Nagios (dans les //services// et les //misccommands//), pour que Nagios sache quelles vérifications lancer sur ou à destination de quelles machines ou services, d'autre part par le code de retour ainsi que la sortie standard d'un greffon. <|> misccommands
540 Mot inconnu : Nagios [[157:163]] => La relation entre le moteur et les greffons est assurée d'une part dans la configuration de Nagios (dans les //services// et les //misccommands//), pour que Nagios sache quelles vérifications lancer sur ou à destination de quelles machines ou services, d'autre part par le code de retour ainsi que la sortie standard d'un greffon. <|> nagios
547 Mot inconnu : CRITICAL [[8:16]] =>   * 2 : CRITICAL <|> critical
548 Mot inconnu : UNKNOWN [[8:15]] =>   * 3 : UNKNOWN <|> unknown

556 Espace(s) surnuméraire(s) à supprimer. [[3:5]] => Sur  notre serveur de supervision, nous utilisons un GSM pour envoyer des SMS en cas d'incident. Normalement, ce GSM est alimenté par le port USB du serveur ainsi que par sa batterie. Cependant, si le GSM n'est plus alimenté (problème avec le port USB ou si quelqu'un place l'interrupteur du cable sur //No charge//), les administrateurs doivent être avertis. <|>    => suggestions : [' ']
556 Mot inconnu : cable [[292:297]] => Sur  notre serveur de supervision, nous utilisons un GSM pour envoyer des SMS en cas d'incident. Normalement, ce GSM est alimenté par le port USB du serveur ainsi que par sa batterie. Cependant, si le GSM n'est plus alimenté (problème avec le port USB ou si quelqu'un place l'interrupteur du cable sur //No charge//), les administrateurs doivent être avertis. <|> cable

585 Mot inconnu : Nagios [[0:6]] => Nagios est capable de tourner en mode redondance. C'est-à-dire que deux serveurs de supervision se partagent les mêmes fichiers de configuration. Ainsi, si l'un tombe en panne, la supervision est quand même assurée par le second. <|> nagios

598 Mot inconnu : NSClient [[5:13]] => ==== NSClient pour superviser les machines Windows™ ==== <|> nsclient

600 Mot inconnu : check_nt [[10:18]] => Le plugin check_nt permet de récupérer des informations sur des hôtes basés sur le système d'exploitation Windows. Il fonctionne avec NSClient, qu'il faut installer sur la machine cliente à superviser. <|> check_nt
600 Mot inconnu : NSClient [[134:142]] => Le plugin check_nt permet de récupérer des informations sur des hôtes basés sur le système d'exploitation Windows. Il fonctionne avec NSClient, qu'il faut installer sur la machine cliente à superviser. <|> nsclient

602 Mot inconnu : NSClient [[46:54]] => Penser à préciser le mot de passe qui protège NSClient des requêtes frauduleuses. Le mot de passe est stocké sur le pc où est installé l'agent dans la clé de registre « HKEY_LOCAL_MACHINE\SOFTWARE\NSClient\Parms ». Le mot de passe est à inclure dans la requête après le commutateur -s qu'il faut donc rajouter. Si la clé ne contient aucun mot de passe, alors le mot de passe est None (respect de la casse). <|> nsclient
602 Mot inconnu : HKEY_LOCAL_MACHINE [[169:187]] => Penser à préciser le mot de passe qui protège NSClient des requêtes frauduleuses. Le mot de passe est stocké sur le pc où est installé l'agent dans la clé de registre « HKEY_LOCAL_MACHINE\SOFTWARE\NSClient\Parms ». Le mot de passe est à inclure dans la requête après le commutateur -s qu'il faut donc rajouter. Si la clé ne contient aucun mot de passe, alors le mot de passe est None (respect de la casse). <|> hkey_local_machine
602 Mot inconnu : NSClient [[197:205]] => Penser à préciser le mot de passe qui protège NSClient des requêtes frauduleuses. Le mot de passe est stocké sur le pc où est installé l'agent dans la clé de registre « HKEY_LOCAL_MACHINE\SOFTWARE\NSClient\Parms ». Le mot de passe est à inclure dans la requête après le commutateur -s qu'il faut donc rajouter. Si la clé ne contient aucun mot de passe, alors le mot de passe est None (respect de la casse). <|> nsclient
602 Mot inconnu : Parms [[206:211]] => Penser à préciser le mot de passe qui protège NSClient des requêtes frauduleuses. Le mot de passe est stocké sur le pc où est installé l'agent dans la clé de registre « HKEY_LOCAL_MACHINE\SOFTWARE\NSClient\Parms ». Le mot de passe est à inclure dans la requête après le commutateur -s qu'il faut donc rajouter. Si la clé ne contient aucun mot de passe, alors le mot de passe est None (respect de la casse). <|> parms
602 Il manque un espace à côté du tiret. [[281:283]] => Penser à préciser le mot de passe qui protège NSClient des requêtes frauduleuses. Le mot de passe est stocké sur le pc où est installé l'agent dans la clé de registre « HKEY_LOCAL_MACHINE\SOFTWARE\NSClient\Parms ». Le mot de passe est à inclure dans la requête après le commutateur -s qu'il faut donc rajouter. Si la clé ne contient aucun mot de passe, alors le mot de passe est None (respect de la casse). <|>  - => suggestions : [' – ', ' — ']

618 Mot inconnu : Nagios [[0:6]] => Nagios Exchange fournit un joli choix de scripts de check pour Nagios, evidemment vous pouvez écrire votre propre script (voir plus haut) et s'il fonctionne bien pourquoi ne pas le proposer sur NagiosExchange. <|> nagios
618 Mot inconnu : Exchange [[7:15]] => Nagios Exchange fournit un joli choix de scripts de check pour Nagios, evidemment vous pouvez écrire votre propre script (voir plus haut) et s'il fonctionne bien pourquoi ne pas le proposer sur NagiosExchange. <|> exchange
618 Mot inconnu : check [[52:57]] => Nagios Exchange fournit un joli choix de scripts de check pour Nagios, evidemment vous pouvez écrire votre propre script (voir plus haut) et s'il fonctionne bien pourquoi ne pas le proposer sur NagiosExchange. <|> check
618 Mot inconnu : Nagios [[63:69]] => Nagios Exchange fournit un joli choix de scripts de check pour Nagios, evidemment vous pouvez écrire votre propre script (voir plus haut) et s'il fonctionne bien pourquoi ne pas le proposer sur NagiosExchange. <|> nagios
618 Mot inconnu : evidemment [[71:81]] => Nagios Exchange fournit un joli choix de scripts de check pour Nagios, evidemment vous pouvez écrire votre propre script (voir plus haut) et s'il fonctionne bien pourquoi ne pas le proposer sur NagiosExchange. <|> evidemment
618 Mot inconnu : NagiosExchange [[194:208]] => Nagios Exchange fournit un joli choix de scripts de check pour Nagios, evidemment vous pouvez écrire votre propre script (voir plus haut) et s'il fonctionne bien pourquoi ne pas le proposer sur NagiosExchange. <|> nagiosexchange

621 Mot inconnu : VRML [[28:32]] => ==== Installation du plugin VRML ==== <|> vrml

623 Mot inconnu : Virtual [[3:10]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> virtual
623 Mot inconnu : Reality [[11:18]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> reality
623 Mot inconnu : Modeling [[19:27]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> modeling
623 Mot inconnu : Language [[28:36]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> language
623 Mot inconnu : VRML [[48:52]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> vrml
623 Mot inconnu : VRML [[227:231]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> vrml
623 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[265:267]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|>  . => suggestions : ['. ', '.']
623 Mot inconnu : wrl [[267:270]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> wrl
623 Mot inconnu : Map [[340:343]] => Le Virtual Reality Modeling Language (abrégé en VRML) est un Langage de programmation spécialisé dans la représentation d'univers virtuels en 3 dimensions. Ce langage interprété est une norme internationale ISO et les fichiers VRML ont habituellement pour extension .wrl. C'est ce type de fichier qui s'affiche pour consulter la 3-D Status Map. <|> map

630 Mot inconnu : lesstif2 [[41:49]] => Ce paquet est dépendant de celui nommé //lesstif2//, disponible dans le dépot Universe. Il faudra donc exécuter les commandes suivantes : <|> lesstif2
630 Mot inconnu : dépot [[72:77]] => Ce paquet est dépendant de celui nommé //lesstif2//, disponible dans le dépot Universe. Il faudra donc exécuter les commandes suivantes : <|> dépot
630 Mot inconnu : Universe [[78:86]] => Ce paquet est dépendant de celui nommé //lesstif2//, disponible dans le dépot Universe. Il faudra donc exécuter les commandes suivantes : <|> universe

634 Mot inconnu : Nagios [[15:21]] => ==== Extension Nagios pour Firefox / Thunderbird / Chromium ==== <|> nagios

636 Mot inconnu : Nagios [[32:38]] => Vous pouvez installer le plugin Nagios Checker pour les navigateurs internet Firefox et Chromium, ou pour le gestionnaire de courrier Thunderbird. Le paramétrage est complet (possibilité de notifications visuelles et/ou sonore, gestion des accès authentifiés...). Vous aurez ainsi la possibilité de superviser les problèmes directement dans la barre d'état de votre navigateur ou gestionnaire de courrier ! <|> nagios
636 Mot inconnu : Checker [[39:46]] => Vous pouvez installer le plugin Nagios Checker pour les navigateurs internet Firefox et Chromium, ou pour le gestionnaire de courrier Thunderbird. Le paramétrage est complet (possibilité de notifications visuelles et/ou sonore, gestion des accès authentifiés...). Vous aurez ainsi la possibilité de superviser les problèmes directement dans la barre d'état de votre navigateur ou gestionnaire de courrier ! <|> checker
636 Typographie : points de suspension. Utilisez le caractère dédié. [[258:261]] => Vous pouvez installer le plugin Nagios Checker pour les navigateurs internet Firefox et Chromium, ou pour le gestionnaire de courrier Thunderbird. Le paramétrage est complet (possibilité de notifications visuelles et/ou sonore, gestion des accès authentifiés...). Vous aurez ainsi la possibilité de superviser les problèmes directement dans la barre d'état de votre navigateur ou gestionnaire de courrier ! <|> ... => suggestions : ['…']

644 Mot inconnu : Nb [[2:4]] => //Nb: le fonctionnement de la fenêtre flottante demanderait à être testé en environnement 11.04/Unity// <|> nb

646 Mot inconnu : PNP [[5:8]] => ==== PNP : un plugin pour ajouter des graphes à Nagios === <|> pnp
646 Mot inconnu : Nagios [[48:54]] => ==== PNP : un plugin pour ajouter des graphes à Nagios === <|> nagios
