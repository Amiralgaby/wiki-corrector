

4 Mot inconnu : Dovecot [[35:42]] => ====== Filtrage des courriels avec Dovecot ====== <|> dovecot
4 Mot inconnu : Dovecot [[35:42]] => ====== Filtrage des courriels avec Dovecot ====== <|> dovecot


7 Accord de genre erroné : « une boite » est féminin, « utilisateur » est masculin. [[103:114]] => Cette application vous permet de trier et classer vos courriels à l'arrivée dans une boite aux lettres utilisateur ou dans une boite postale du serveur MTA. Elle gère l'identification des courriels marqués comme SPAM ou comme Virus par votre MTA. <|> utilisateur => suggestions : ['utilisatrice']
7 Accord de genre erroné : « une boite » est féminin, « utilisateur » est masculin. [[103:114]] => Cette application vous permet de trier et classer vos courriels à l'arrivée dans une boite aux lettres utilisateur ou dans une boite postale du serveur MTA. Elle gère l'identification des courriels marqués comme SPAM ou comme Virus par votre MTA. <|> utilisateur => suggestions : ['utilisatrice']
7 Mot inconnu : MTA [[152:155]] => Cette application vous permet de trier et classer vos courriels à l'arrivée dans une boite aux lettres utilisateur ou dans une boite postale du serveur MTA. Elle gère l'identification des courriels marqués comme SPAM ou comme Virus par votre MTA. <|> mta
7 Mot inconnu : MTA [[152:155]] => Cette application vous permet de trier et classer vos courriels à l'arrivée dans une boite aux lettres utilisateur ou dans une boite postale du serveur MTA. Elle gère l'identification des courriels marqués comme SPAM ou comme Virus par votre MTA. <|> mta
7 Mot inconnu : MTA [[242:245]] => Cette application vous permet de trier et classer vos courriels à l'arrivée dans une boite aux lettres utilisateur ou dans une boite postale du serveur MTA. Elle gère l'identification des courriels marqués comme SPAM ou comme Virus par votre MTA. <|> mta
7 Mot inconnu : MTA [[242:245]] => Cette application vous permet de trier et classer vos courriels à l'arrivée dans une boite aux lettres utilisateur ou dans une boite postale du serveur MTA. Elle gère l'identification des courriels marqués comme SPAM ou comme Virus par votre MTA. <|> mta


14 Mot inconnu : MDA [[19:22]] => Pour configurer le MDA Dovecot… <|> mda
14 Mot inconnu : MDA [[19:22]] => Pour configurer le MDA Dovecot… <|> mda
14 Mot inconnu : Dovecot [[23:30]] => Pour configurer le MDA Dovecot… <|> dovecot
14 Mot inconnu : Dovecot [[23:30]] => Pour configurer le MDA Dovecot… <|> dovecot


16 Mot inconnu : MTA [[44:47]] => ==== Configuration du serveur de messagerie MTA ==== <|> mta
16 Mot inconnu : MTA [[44:47]] => ==== Configuration du serveur de messagerie MTA ==== <|> mta


17 Mot inconnu : Postfix [[4:11]] => === Postfix === <|> postfix
17 Mot inconnu : Postfix [[4:11]] => === Postfix === <|> postfix


22 Mot inconnu : Exim4 [[4:9]] => === Exim4 === <|> exim4
22 Mot inconnu : Exim4 [[4:9]] => === Exim4 === <|> exim4


23 Mot inconnu : Dovecot [[76:83]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> dovecot
23 Mot inconnu : Dovecot [[76:83]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> dovecot
23 Mot inconnu : sieve [[100:105]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> sieve
23 Mot inconnu : sieve [[100:105]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> sieve
23 Mot inconnu : MTA [[136:139]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> mta
23 Mot inconnu : MTA [[136:139]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> mta
23 Mot inconnu : EXIM4 [[140:145]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> exim4
23 Mot inconnu : EXIM4 [[140:145]] => [[https://medspx.fr/blog/Debian/dovecot_sieve/|Configuration du filtrage de Dovecot avec le langage sieve pour un serveur de messagerie MTA EXIM4]] <|> exim4


30 Mot inconnu : mail_location [[0:13]] => mail_location = maildir:~/.local/share/courriels <|> mail_location
30 Mot inconnu : mail_location [[0:13]] => mail_location = maildir:~/.local/share/courriels <|> mail_location
30 Mot inconnu : maildir [[16:23]] => mail_location = maildir:~/.local/share/courriels <|> maildir
30 Mot inconnu : maildir [[16:23]] => mail_location = maildir:~/.local/share/courriels <|> maildir
30 Mot inconnu : share [[33:38]] => mail_location = maildir:~/.local/share/courriels <|> share
30 Mot inconnu : share [[33:38]] => mail_location = maildir:~/.local/share/courriels <|> share


35 Mot inconnu : Dovecot [[12:19]] => Par défaut, Dovecot utilise la disposition de répertoires Maildir++. Cela signifie que toutes les boîtes aux lettres sont stockées dans un seul répertoire et précédées d'un point.  <|> dovecot
35 Mot inconnu : Dovecot [[12:19]] => Par défaut, Dovecot utilise la disposition de répertoires Maildir++. Cela signifie que toutes les boîtes aux lettres sont stockées dans un seul répertoire et précédées d'un point.  <|> dovecot
35 Mot inconnu : Maildir [[58:65]] => Par défaut, Dovecot utilise la disposition de répertoires Maildir++. Cela signifie que toutes les boîtes aux lettres sont stockées dans un seul répertoire et précédées d'un point.  <|> maildir
35 Mot inconnu : Maildir [[58:65]] => Par défaut, Dovecot utilise la disposition de répertoires Maildir++. Cela signifie que toutes les boîtes aux lettres sont stockées dans un seul répertoire et précédées d'un point.  <|> maildir
35 Espace(s) en fin de ligne à supprimer. [[179:180]] => Par défaut, Dovecot utilise la disposition de répertoires Maildir++. Cela signifie que toutes les boîtes aux lettres sont stockées dans un seul répertoire et précédées d'un point.  <|>   => suggestions : ['']
35 Espace(s) en fin de ligne à supprimer. [[179:180]] => Par défaut, Dovecot utilise la disposition de répertoires Maildir++. Cela signifie que toutes les boîtes aux lettres sont stockées dans un seul répertoire et précédées d'un point.  <|>   => suggestions : ['']


62 Mot inconnu : MDA [[3:6]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> mda
62 Mot inconnu : MDA [[3:6]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> mda
62 Mot inconnu : LDA [[92:95]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> lda
62 Mot inconnu : LDA [[92:95]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> lda
62 Mot inconnu : MDA [[100:103]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> mda
62 Mot inconnu : MDA [[100:103]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> mda
62 Mot inconnu : LMTP [[160:164]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> lmtp
62 Mot inconnu : LMTP [[160:164]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> lmtp
62 Mot inconnu : MTA [[169:172]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> mta
62 Mot inconnu : MTA [[169:172]] => Le MDA utilise deux façons de distribuer les courriels, par l'Agent de Distribution Locale (LDA) du MDA, ou avec le Protocole Local de Transport des Courriels (LMTP) du MTA qui est une variante locale au serveur de messagerie du SMTP. <|> mta


64 Mot inconnu : LDA [[23:26]] => === Activer le support LDA === <|> lda
64 Mot inconnu : LDA [[23:26]] => === Activer le support LDA === <|> lda


69 Mot inconnu : lda_mailbox_autocreate [[0:22]] => lda_mailbox_autocreate = yes <|> lda_mailbox_autocreate
69 Mot inconnu : lda_mailbox_autocreate [[0:22]] => lda_mailbox_autocreate = yes <|> lda_mailbox_autocreate
69 Mot inconnu : yes [[25:28]] => lda_mailbox_autocreate = yes <|> yes
69 Mot inconnu : yes [[25:28]] => lda_mailbox_autocreate = yes <|> yes


70 Mot inconnu : lda_mailbox_autosubscribe [[0:25]] => lda_mailbox_autosubscribe = yes <|> lda_mailbox_autosubscribe
70 Mot inconnu : lda_mailbox_autosubscribe [[0:25]] => lda_mailbox_autosubscribe = yes <|> lda_mailbox_autosubscribe
70 Mot inconnu : yes [[28:31]] => lda_mailbox_autosubscribe = yes <|> yes
70 Mot inconnu : yes [[28:31]] => lda_mailbox_autosubscribe = yes <|> yes


71 Mot inconnu : protocol [[0:8]] => protocol lda { <|> protocol
71 Mot inconnu : protocol [[0:8]] => protocol lda { <|> protocol
71 Mot inconnu : lda [[9:12]] => protocol lda { <|> lda
71 Mot inconnu : lda [[9:12]] => protocol lda { <|> lda


75 Mot inconnu : LMTP [[23:27]] => === Activer le support LMTP === <|> lmtp
75 Mot inconnu : LMTP [[23:27]] => === Activer le support LMTP === <|> lmtp


82 Mot inconnu : disable_plaintext_auth [[0:22]] => disable_plaintext_auth = yes <|> disable_plaintext_auth
82 Mot inconnu : disable_plaintext_auth [[0:22]] => disable_plaintext_auth = yes <|> disable_plaintext_auth
82 Mot inconnu : yes [[25:28]] => disable_plaintext_auth = yes <|> yes
82 Mot inconnu : yes [[25:28]] => disable_plaintext_auth = yes <|> yes


84 Mot inconnu : auth_mechanisms [[0:15]] => auth_mechanisms = plain login <|> auth_mechanisms
84 Mot inconnu : auth_mechanisms [[0:15]] => auth_mechanisms = plain login <|> auth_mechanisms


92 Mot inconnu : ssl [[0:3]] => ssl = yes <|> ssl
92 Mot inconnu : ssl [[0:3]] => ssl = yes <|> ssl
92 Mot inconnu : yes [[6:9]] => ssl = yes <|> yes
92 Mot inconnu : yes [[6:9]] => ssl = yes <|> yes


93 Mot inconnu : ssl_cert [[0:8]] => ssl_cert = </etc/ssl/certs/ssl-cert-snakeoil.pem <|> ssl_cert
93 Mot inconnu : ssl_cert [[0:8]] => ssl_cert = </etc/ssl/certs/ssl-cert-snakeoil.pem <|> ssl_cert


94 Mot inconnu : ssl_key [[0:7]] => ssl_key = </etc/ssl/private/ssl-cert-snakeoil.key <|> ssl_key
94 Mot inconnu : ssl_key [[0:7]] => ssl_key = </etc/ssl/private/ssl-cert-snakeoil.key <|> ssl_key


98 Mot inconnu : sieve [[29:34]] => ==== Configuration du plugin sieve  ==== <|> sieve
98 Mot inconnu : sieve [[29:34]] => ==== Configuration du plugin sieve  ==== <|> sieve
98 Espace(s) surnuméraire(s) à supprimer. [[34:36]] => ==== Configuration du plugin sieve  ==== <|>    => suggestions : [' ']
98 Espace(s) surnuméraire(s) à supprimer. [[34:36]] => ==== Configuration du plugin sieve  ==== <|>    => suggestions : [' ']


111 Mot inconnu : SPAMs [[132:137]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> spams
111 Mot inconnu : SPAMs [[132:137]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> spams
111 Mot inconnu : X-Spam-Flag [[139:150]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> x-spam-flag
111 Mot inconnu : X-Spam-Flag [[139:150]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> x-spam-flag
111 Mot inconnu : spamassassin [[166:178]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> spamassassin
111 Mot inconnu : spamassassin [[166:178]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> spamassassin
111 Mot inconnu : amavis [[182:188]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> amavis
111 Mot inconnu : amavis [[182:188]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> amavis
111 Mot inconnu : MTA [[204:207]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> mta
111 Mot inconnu : MTA [[204:207]] => L'exemple de règles suivant déplace automatiquement les courriels indésirables de la boîte de réception vers le dossier indésirable SPAMs. X-Spam-Flag est ajouté par spamassassin et amavis par le serveur MTA. <|> mta


113 Mot inconnu : header [[3:9]] => if header :contains "X-Spam-Flag" "YES" { <|> header
113 Mot inconnu : header [[3:9]] => if header :contains "X-Spam-Flag" "YES" { <|> header
113 Mot inconnu : contains [[11:19]] => if header :contains "X-Spam-Flag" "YES" { <|> contains
113 Mot inconnu : contains [[11:19]] => if header :contains "X-Spam-Flag" "YES" { <|> contains
113 Guillemets typographiques ouvrants. [[20:21]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['«\xa0', '“']
113 Mot inconnu : X-Spam-Flag [[21:32]] => if header :contains "X-Spam-Flag" "YES" { <|> x-spam-flag
113 Mot inconnu : X-Spam-Flag [[21:32]] => if header :contains "X-Spam-Flag" "YES" { <|> x-spam-flag
113 Guillemets typographiques fermants. [[32:33]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['\xa0»', '”']
113 Guillemets typographiques ouvrants. [[34:35]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['«\xa0', '“']
113 Guillemets typographiques fermants. [[38:39]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['\xa0»', '”']


122 Mot inconnu : elsif [[16:21]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> elsif
122 Mot inconnu : elsif [[16:21]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> elsif
122 Il manque un espace avant la parenthèse. [[21:22]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> ( => suggestions : [' (']
122 Il manque un espace avant la parenthèse. [[21:22]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> ( => suggestions : [' (']
122 Mot inconnu : else [[32:36]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> else
122 Mot inconnu : else [[32:36]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> else
122 Il manque un espace avant la parenthèse. [[36:37]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> ( => suggestions : [' (']
122 Il manque un espace avant la parenthèse. [[36:37]] => Utiliser if(si)/elsif(sinon si)/else(sinon) pour stocker vos messages dans différents répertoire/sous répertoires : <|> ( => suggestions : [' (']


124 Mot inconnu : address [[3:10]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> address
124 Mot inconnu : address [[3:10]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> address
124 Mot inconnu : is [[12:14]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> is
124 Mot inconnu : is [[12:14]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> is
124 Guillemets typographiques ouvrants. [[15:16]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> " => suggestions : ['«\xa0', '“']
124 Mot inconnu : to [[16:18]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> to
124 Mot inconnu : to [[16:18]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> to
124 Guillemets typographiques fermants. [[18:19]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> " => suggestions : ['\xa0»', '”']
124 Guillemets typographiques ouvrants. [[20:21]] => if address :is "to" "utilisateur@mon_domaine_de_courriels.fr" { <|> " => suggestions : ['«\xa0', '“']


126 Mot inconnu : elsif [[2:7]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> elsif
126 Mot inconnu : elsif [[2:7]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> elsif
126 Mot inconnu : envelope [[8:16]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> envelope
126 Mot inconnu : envelope [[8:16]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> envelope
126 Mot inconnu : is [[18:20]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> is
126 Mot inconnu : is [[18:20]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> is
126 Guillemets typographiques ouvrants. [[21:22]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> " => suggestions : ['«\xa0', '“']
126 Mot inconnu : from [[22:26]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> from
126 Mot inconnu : from [[22:26]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> from
126 Guillemets typographiques fermants. [[26:27]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> " => suggestions : ['\xa0»', '”']
126 Guillemets typographiques ouvrants. [[28:29]] => } elsif envelope :is "from" "utilisateur@mon_domaine_de_courriels.fr" { <|> " => suggestions : ['«\xa0', '“']


128 Mot inconnu : elsif [[2:7]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> elsif
128 Mot inconnu : elsif [[2:7]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> elsif
128 Mot inconnu : anyof [[8:13]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> anyof
128 Mot inconnu : anyof [[8:13]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> anyof
128 Mot inconnu : header [[15:21]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> header
128 Mot inconnu : header [[15:21]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> header
128 Mot inconnu : contains [[23:31]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> contains
128 Mot inconnu : contains [[23:31]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> contains
128 Guillemets typographiques ouvrants. [[32:33]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> " => suggestions : ['«\xa0', '“']
128 Mot inconnu : X-listname [[33:43]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> x-listname
128 Mot inconnu : X-listname [[33:43]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> x-listname
128 Guillemets typographiques fermants. [[43:44]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> " => suggestions : ['\xa0»', '”']
128 Guillemets typographiques ouvrants. [[45:46]] => } elsif anyof (header :contains "X-listname" "root@mon_domaine_de_courriels.fr", <|> " => suggestions : ['«\xa0', '“']


131 Mot inconnu : else [[2:6]] => } else { <|> else
131 Mot inconnu : else [[2:6]] => } else { <|> else


137 Mot inconnu : anyof [[2:7]] => **anyof** c'est un «ou» logique, avec **allof** vous pouvez faire un «et» logique. <|> anyof
137 Mot inconnu : anyof [[2:7]] => **anyof** c'est un «ou» logique, avec **allof** vous pouvez faire un «et» logique. <|> anyof
137 Mot inconnu : allof [[40:45]] => **anyof** c'est un «ou» logique, avec **allof** vous pouvez faire un «et» logique. <|> allof
137 Mot inconnu : allof [[40:45]] => **anyof** c'est un «ou» logique, avec **allof** vous pouvez faire un «et» logique. <|> allof


139 Guillemets typographiques ouvrants. [[30:31]] => Transférer les courriels avec "commande" ou "achat" dans leur objet à une autre adresse : <|> " => suggestions : ['«\xa0', '“']
139 Guillemets typographiques fermants. [[39:40]] => Transférer les courriels avec "commande" ou "achat" dans leur objet à une autre adresse : <|> " => suggestions : ['\xa0»', '”']
139 Guillemets typographiques ouvrants. [[44:45]] => Transférer les courriels avec "commande" ou "achat" dans leur objet à une autre adresse : <|> " => suggestions : ['«\xa0', '“']
139 Guillemets typographiques fermants. [[50:51]] => Transférer les courriels avec "commande" ou "achat" dans leur objet à une autre adresse : <|> " => suggestions : ['\xa0»', '”']


144 Accord de nombre erroné : « courriel » devrait être au pluriel. [[20:28]] => Pré-filtrage de mes courriel utilisateurs locaux : <|> courriel => suggestions : ['courriels']
144 Accord de nombre erroné : « courriel » devrait être au pluriel. [[20:28]] => Pré-filtrage de mes courriel utilisateurs locaux : <|> courriel => suggestions : ['courriels']


147 Mot inconnu : header [[3:9]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> header
147 Mot inconnu : header [[3:9]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> header
147 Mot inconnu : contains [[11:19]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> contains
147 Mot inconnu : contains [[11:19]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> contains
147 Guillemets typographiques ouvrants. [[21:22]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['«\xa0', '“']
147 Mot inconnu : to [[22:24]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> to
147 Mot inconnu : to [[22:24]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> to
147 Guillemets typographiques fermants. [[24:25]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['\xa0»', '”']
147 Guillemets typographiques ouvrants. [[26:27]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['«\xa0', '“']
147 Mot inconnu : cc [[27:29]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> cc
147 Mot inconnu : cc [[27:29]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> cc
147 Guillemets typographiques fermants. [[29:30]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['\xa0»', '”']
147 Guillemets typographiques ouvrants. [[32:33]] => if header :contains ["to","cc"] "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['«\xa0', '“']


149 Mot inconnu : fileinto [[0:8]] => fileinto "INBOX"; <|> fileinto
149 Mot inconnu : fileinto [[0:8]] => fileinto "INBOX"; <|> fileinto
149 Guillemets typographiques ouvrants. [[9:10]] => fileinto "INBOX"; <|> " => suggestions : ['«\xa0', '“']
149 Mot inconnu : INBOX [[10:15]] => fileinto "INBOX"; <|> inbox
149 Mot inconnu : INBOX [[10:15]] => fileinto "INBOX"; <|> inbox
149 Guillemets typographiques fermants. [[15:16]] => fileinto "INBOX"; <|> " => suggestions : ['\xa0»', '”']


151 Mot inconnu : email [[13:18]] => #Sinon, si l'email vient de @mon_domaine_de_courriels.fr ? je le veux dans un répertoire mon_domaine_de_courriels <|> email
151 Mot inconnu : email [[13:18]] => #Sinon, si l'email vient de @mon_domaine_de_courriels.fr ? je le veux dans un répertoire mon_domaine_de_courriels <|> email
151 Mot inconnu : mon_domaine_de_courriels [[89:113]] => #Sinon, si l'email vient de @mon_domaine_de_courriels.fr ? je le veux dans un répertoire mon_domaine_de_courriels <|> mon_domaine_de_courriels
151 Mot inconnu : mon_domaine_de_courriels [[89:113]] => #Sinon, si l'email vient de @mon_domaine_de_courriels.fr ? je le veux dans un répertoire mon_domaine_de_courriels <|> mon_domaine_de_courriels


152 Mot inconnu : elsif [[2:7]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> elsif
152 Mot inconnu : elsif [[2:7]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> elsif
152 Espace(s) surnuméraire(s) à supprimer. [[7:9]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|>    => suggestions : [' ']
152 Espace(s) surnuméraire(s) à supprimer. [[7:9]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|>    => suggestions : [' ']
152 Mot inconnu : header [[9:15]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> header
152 Mot inconnu : header [[9:15]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> header
152 Guillemets typographiques ouvrants. [[25:26]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> " => suggestions : ['«\xa0', '“']
152 Mot inconnu : From [[26:30]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> from
152 Mot inconnu : From [[26:30]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> from
152 Guillemets typographiques fermants. [[30:31]] => } elsif  header :matches "From" "*@mon_domaine_de_courriels.fr>" <|> " => suggestions : ['\xa0»', '”']


154 Mot inconnu : fileinto [[0:8]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> fileinto
154 Mot inconnu : fileinto [[0:8]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> fileinto
154 Guillemets typographiques ouvrants. [[9:10]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> " => suggestions : ['«\xa0', '“']
154 Mot inconnu : INBOX [[10:15]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> inbox
154 Mot inconnu : INBOX [[10:15]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> inbox
154 Mot inconnu : mon_domaine_de_courriels [[16:40]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> mon_domaine_de_courriels
154 Mot inconnu : mon_domaine_de_courriels [[16:40]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> mon_domaine_de_courriels
154 Guillemets typographiques fermants. [[40:41]] => fileinto "INBOX/mon_domaine_de_courriels"; <|> " => suggestions : ['\xa0»', '”']


155 S’il s’agit d’un impératif, mettez un trait d’union. [[7:17]] => #Sinon laisse moi faire le tri ailleurs <|> laisse moi => suggestions : ['laisse-moi']
155 S’il s’agit d’un impératif, mettez un trait d’union. [[7:17]] => #Sinon laisse moi faire le tri ailleurs <|> laisse moi => suggestions : ['laisse-moi']


156 Mot inconnu : else [[2:6]] => } else <|> else
156 Mot inconnu : else [[2:6]] => } else <|> else


158 Mot inconnu : fileinto [[0:8]] => fileinto "INBOX/A trier"; <|> fileinto
158 Mot inconnu : fileinto [[0:8]] => fileinto "INBOX/A trier"; <|> fileinto
158 Guillemets typographiques ouvrants. [[9:10]] => fileinto "INBOX/A trier"; <|> " => suggestions : ['«\xa0', '“']
158 Mot inconnu : INBOX [[10:15]] => fileinto "INBOX/A trier"; <|> inbox
158 Mot inconnu : INBOX [[10:15]] => fileinto "INBOX/A trier"; <|> inbox
158 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. [[16:17]] => fileinto "INBOX/A trier"; <|> a => suggestions : ['À']
158 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. [[16:17]] => fileinto "INBOX/A trier"; <|> a => suggestions : ['À']
158 Guillemets typographiques fermants. [[23:24]] => fileinto "INBOX/A trier"; <|> " => suggestions : ['\xa0»', '”']


162 Conjugaison erronée. Accord avec “Certains clients…”. Le verbe devrait être à la 3ᵉ personne du pluriel. [[31:34]] => Certains clients de messagerie MUA utilisent ces indicateurs: <|> mua => suggestions : ['MUÈRENT']
162 Conjugaison erronée. Accord avec “Certains clients…”. Le verbe devrait être à la 3ᵉ personne du pluriel. [[31:34]] => Certains clients de messagerie MUA utilisent ces indicateurs: <|> mua => suggestions : ['MUÈRENT']


164 Mot inconnu : require [[0:7]] => require "regex"; <|> require
164 Mot inconnu : require [[0:7]] => require "regex"; <|> require
164 Guillemets typographiques ouvrants. [[8:9]] => require "regex"; <|> " => suggestions : ['«\xa0', '“']
164 Mot inconnu : regex [[9:14]] => require "regex"; <|> regex
164 Mot inconnu : regex [[9:14]] => require "regex"; <|> regex
164 Guillemets typographiques fermants. [[14:15]] => require "regex"; <|> " => suggestions : ['\xa0»', '”']


165 Mot inconnu : anyof [[3:8]] => if anyof (exists "X-Cron-Env", <|> anyof
165 Mot inconnu : anyof [[3:8]] => if anyof (exists "X-Cron-Env", <|> anyof
165 Mot inconnu : exists [[10:16]] => if anyof (exists "X-Cron-Env", <|> exists
165 Mot inconnu : exists [[10:16]] => if anyof (exists "X-Cron-Env", <|> exists
165 Guillemets typographiques ouvrants. [[17:18]] => if anyof (exists "X-Cron-Env", <|> " => suggestions : ['«\xa0', '“']
165 Mot inconnu : X-Cron-Env [[18:28]] => if anyof (exists "X-Cron-Env", <|> x-cron-env
165 Mot inconnu : X-Cron-Env [[18:28]] => if anyof (exists "X-Cron-Env", <|> x-cron-env
165 Guillemets typographiques fermants. [[28:29]] => if anyof (exists "X-Cron-Env", <|> " => suggestions : ['\xa0»', '”']


172 Mot inconnu : Other [[2:7]] => # Other flags: <|> other
172 Mot inconnu : Other [[2:7]] => # Other flags: <|> other
172 Mot inconnu : flags [[8:13]] => # Other flags: <|> flags
172 Mot inconnu : flags [[8:13]] => # Other flags: <|> flags


173 Mot inconnu : addflag [[2:9]] => # addflag "$label1";  # Important: #ff0000 => red <|> addflag
173 Mot inconnu : addflag [[2:9]] => # addflag "$label1";  # Important: #ff0000 => red <|> addflag
173 Mot inconnu : label1 [[12:18]] => # addflag "$label1";  # Important: #ff0000 => red <|> label1
173 Mot inconnu : label1 [[12:18]] => # addflag "$label1";  # Important: #ff0000 => red <|> label1
173 Guillemets typographiques fermants. [[18:19]] => # addflag "$label1";  # Important: #ff0000 => red <|> " => suggestions : ['\xa0»', '”']
173 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label1";  # Important: #ff0000 => red <|>    => suggestions : [' ']
173 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label1";  # Important: #ff0000 => red <|>    => suggestions : [' ']
173 Mot inconnu : red [[46:49]] => # addflag "$label1";  # Important: #ff0000 => red <|> red
173 Mot inconnu : red [[46:49]] => # addflag "$label1";  # Important: #ff0000 => red <|> red


174 Mot inconnu : addflag [[2:9]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> addflag
174 Mot inconnu : addflag [[2:9]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> addflag
174 Mot inconnu : label2 [[12:18]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> label2
174 Mot inconnu : label2 [[12:18]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> label2
174 Guillemets typographiques fermants. [[18:19]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> " => suggestions : ['\xa0»', '”']
174 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label2";  # Work:      #ff9900 => orange <|>    => suggestions : [' ']
174 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label2";  # Work:      #ff9900 => orange <|>    => suggestions : [' ']
174 Mot inconnu : Work [[24:28]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> work
174 Mot inconnu : Work [[24:28]] => # addflag "$label2";  # Work:      #ff9900 => orange <|> work
174 Espace(s) surnuméraire(s) à supprimer. [[29:35]] => # addflag "$label2";  # Work:      #ff9900 => orange <|>        => suggestions : [' ']
174 Espace(s) surnuméraire(s) à supprimer. [[29:35]] => # addflag "$label2";  # Work:      #ff9900 => orange <|>        => suggestions : [' ']


175 Mot inconnu : addflag [[2:9]] => # addflag "$label3";  # personal:  #009900 => green <|> addflag
175 Mot inconnu : addflag [[2:9]] => # addflag "$label3";  # personal:  #009900 => green <|> addflag
175 Mot inconnu : label3 [[12:18]] => # addflag "$label3";  # personal:  #009900 => green <|> label3
175 Mot inconnu : label3 [[12:18]] => # addflag "$label3";  # personal:  #009900 => green <|> label3
175 Guillemets typographiques fermants. [[18:19]] => # addflag "$label3";  # personal:  #009900 => green <|> " => suggestions : ['\xa0»', '”']
175 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label3";  # personal:  #009900 => green <|>    => suggestions : [' ']
175 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label3";  # personal:  #009900 => green <|>    => suggestions : [' ']
175 Mot inconnu : personal [[24:32]] => # addflag "$label3";  # personal:  #009900 => green <|> personal
175 Mot inconnu : personal [[24:32]] => # addflag "$label3";  # personal:  #009900 => green <|> personal
175 Espace(s) surnuméraire(s) à supprimer. [[33:35]] => # addflag "$label3";  # personal:  #009900 => green <|>    => suggestions : [' ']
175 Espace(s) surnuméraire(s) à supprimer. [[33:35]] => # addflag "$label3";  # personal:  #009900 => green <|>    => suggestions : [' ']
175 Formatage des grands nombres. [[36:42]] => # addflag "$label3";  # personal:  #009900 => green <|> 009900 => suggestions : ['009\xa0900']
175 Formatage des grands nombres. [[36:42]] => # addflag "$label3";  # personal:  #009900 => green <|> 009900 => suggestions : ['009\xa0900']


176 Mot inconnu : addflag [[2:9]] => # addflag "$label4";  # todo:      #3333ff => blue <|> addflag
176 Mot inconnu : addflag [[2:9]] => # addflag "$label4";  # todo:      #3333ff => blue <|> addflag
176 Mot inconnu : label4 [[12:18]] => # addflag "$label4";  # todo:      #3333ff => blue <|> label4
176 Mot inconnu : label4 [[12:18]] => # addflag "$label4";  # todo:      #3333ff => blue <|> label4
176 Guillemets typographiques fermants. [[18:19]] => # addflag "$label4";  # todo:      #3333ff => blue <|> " => suggestions : ['\xa0»', '”']
176 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label4";  # todo:      #3333ff => blue <|>    => suggestions : [' ']
176 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label4";  # todo:      #3333ff => blue <|>    => suggestions : [' ']
176 Mot inconnu : todo [[24:28]] => # addflag "$label4";  # todo:      #3333ff => blue <|> todo
176 Mot inconnu : todo [[24:28]] => # addflag "$label4";  # todo:      #3333ff => blue <|> todo
176 Espace(s) surnuméraire(s) à supprimer. [[29:35]] => # addflag "$label4";  # todo:      #3333ff => blue <|>        => suggestions : [' ']
176 Espace(s) surnuméraire(s) à supprimer. [[29:35]] => # addflag "$label4";  # todo:      #3333ff => blue <|>        => suggestions : [' ']
176 Mot inconnu : blue [[46:50]] => # addflag "$label4";  # todo:      #3333ff => blue <|> blue
176 Mot inconnu : blue [[46:50]] => # addflag "$label4";  # todo:      #3333ff => blue <|> blue


177 Mot inconnu : addflag [[2:9]] => # addflag "$label5";  # later:     #993399 => violet <|> addflag
177 Mot inconnu : addflag [[2:9]] => # addflag "$label5";  # later:     #993399 => violet <|> addflag
177 Mot inconnu : label5 [[12:18]] => # addflag "$label5";  # later:     #993399 => violet <|> label5
177 Mot inconnu : label5 [[12:18]] => # addflag "$label5";  # later:     #993399 => violet <|> label5
177 Guillemets typographiques fermants. [[18:19]] => # addflag "$label5";  # later:     #993399 => violet <|> " => suggestions : ['\xa0»', '”']
177 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label5";  # later:     #993399 => violet <|>    => suggestions : [' ']
177 Espace(s) surnuméraire(s) à supprimer. [[20:22]] => # addflag "$label5";  # later:     #993399 => violet <|>    => suggestions : [' ']
177 Mot inconnu : later [[24:29]] => # addflag "$label5";  # later:     #993399 => violet <|> later
177 Mot inconnu : later [[24:29]] => # addflag "$label5";  # later:     #993399 => violet <|> later
177 Espace(s) surnuméraire(s) à supprimer. [[30:35]] => # addflag "$label5";  # later:     #993399 => violet <|>       => suggestions : [' ']
177 Espace(s) surnuméraire(s) à supprimer. [[30:35]] => # addflag "$label5";  # later:     #993399 => violet <|>       => suggestions : [' ']
177 Formatage des grands nombres. [[36:42]] => # addflag "$label5";  # later:     #993399 => violet <|> 993399 => suggestions : ['993\xa0399']
177 Formatage des grands nombres. [[36:42]] => # addflag "$label5";  # later:     #993399 => violet <|> 993399 => suggestions : ['993\xa0399']


183 Mot inconnu : envelope [[3:11]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> envelope
183 Mot inconnu : envelope [[3:11]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> envelope
183 Guillemets typographiques ouvrants. [[12:13]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['«\xa0', '“']
183 Mot inconnu : from [[13:17]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> from
183 Mot inconnu : from [[13:17]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> from
183 Guillemets typographiques fermants. [[17:18]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['\xa0»', '”']
183 Guillemets typographiques ouvrants. [[19:20]] => if envelope "from" "utilisateur@mon_domaine_de_courriels.fr" <|> " => suggestions : ['«\xa0', '“']


189 Mot inconnu : Sieve [[208:213]] => La plupart des antivirus et anti-spam ajoutent un en-tête spécial aux messages électroniques. Afin que les utilisateurs puissent appliquer le filtrage en conséquence, selon la configuration de l'interpréteur Sieve, le filtrage peut être effectué soit en évaluant ces en-têtes directement, soit en utilisant les extensions spamtest et virustest. <|> sieve
189 Mot inconnu : Sieve [[208:213]] => La plupart des antivirus et anti-spam ajoutent un en-tête spécial aux messages électroniques. Afin que les utilisateurs puissent appliquer le filtrage en conséquence, selon la configuration de l'interpréteur Sieve, le filtrage peut être effectué soit en évaluant ces en-têtes directement, soit en utilisant les extensions spamtest et virustest. <|> sieve
189 Mot inconnu : spamtest [[322:330]] => La plupart des antivirus et anti-spam ajoutent un en-tête spécial aux messages électroniques. Afin que les utilisateurs puissent appliquer le filtrage en conséquence, selon la configuration de l'interpréteur Sieve, le filtrage peut être effectué soit en évaluant ces en-têtes directement, soit en utilisant les extensions spamtest et virustest. <|> spamtest
189 Mot inconnu : spamtest [[322:330]] => La plupart des antivirus et anti-spam ajoutent un en-tête spécial aux messages électroniques. Afin que les utilisateurs puissent appliquer le filtrage en conséquence, selon la configuration de l'interpréteur Sieve, le filtrage peut être effectué soit en évaluant ces en-têtes directement, soit en utilisant les extensions spamtest et virustest. <|> spamtest
189 Mot inconnu : virustest [[334:343]] => La plupart des antivirus et anti-spam ajoutent un en-tête spécial aux messages électroniques. Afin que les utilisateurs puissent appliquer le filtrage en conséquence, selon la configuration de l'interpréteur Sieve, le filtrage peut être effectué soit en évaluant ces en-têtes directement, soit en utilisant les extensions spamtest et virustest. <|> virustest
189 Mot inconnu : virustest [[334:343]] => La plupart des antivirus et anti-spam ajoutent un en-tête spécial aux messages électroniques. Afin que les utilisateurs puissent appliquer le filtrage en conséquence, selon la configuration de l'interpréteur Sieve, le filtrage peut être effectué soit en évaluant ces en-têtes directement, soit en utilisant les extensions spamtest et virustest. <|> virustest


192 Mot inconnu : MTA [[150:153]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> mta
192 Mot inconnu : MTA [[150:153]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> mta
192 Mot inconnu : SpamAssassin [[207:219]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> spamassassin
192 Mot inconnu : SpamAssassin [[207:219]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> spamassassin
192 Guillemets typographiques ouvrants. [[243:244]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> " => suggestions : ['«\xa0', '“']
192 Mot inconnu : SPAMs [[244:249]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> spams
192 Mot inconnu : SPAMs [[244:249]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> spams
192 Guillemets typographiques fermants. [[249:250]] => L'évaluation directe des en-têtes est toujours possible tant que les en-têtes sont effectivement ajoutés aux messages par le logiciel de détection du MTA. Par exemple, pour classer les courriels marqués par SpamAssassin dans un dossier appelé "SPAMs" : <|> " => suggestions : ['\xa0»', '”']


194 Mot inconnu : header [[3:9]] => if header :contains "X-Spam-Flag" "YES" { <|> header
194 Mot inconnu : header [[3:9]] => if header :contains "X-Spam-Flag" "YES" { <|> header
194 Mot inconnu : contains [[11:19]] => if header :contains "X-Spam-Flag" "YES" { <|> contains
194 Mot inconnu : contains [[11:19]] => if header :contains "X-Spam-Flag" "YES" { <|> contains
194 Guillemets typographiques ouvrants. [[20:21]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['«\xa0', '“']
194 Mot inconnu : X-Spam-Flag [[21:32]] => if header :contains "X-Spam-Flag" "YES" { <|> x-spam-flag
194 Mot inconnu : X-Spam-Flag [[21:32]] => if header :contains "X-Spam-Flag" "YES" { <|> x-spam-flag
194 Guillemets typographiques fermants. [[32:33]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['\xa0»', '”']
194 Guillemets typographiques ouvrants. [[34:35]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['«\xa0', '“']
194 Guillemets typographiques fermants. [[38:39]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['\xa0»', '”']


198 Mot inconnu : SpamAssassin [[52:64]] => L'exemple suivant rejette les courriels marqués par SpamAssassin avec un niveau de détection supérieur ou égal à 10 : <|> spamassassin
198 Mot inconnu : SpamAssassin [[52:64]] => L'exemple suivant rejette les courriels marqués par SpamAssassin avec un niveau de détection supérieur ou égal à 10 : <|> spamassassin


206 Mot inconnu : allof [[3:8]] => if allof ( <|> allof
206 Mot inconnu : allof [[3:8]] => if allof ( <|> allof


214 Accord de nombre erroné avec « les expressions » : « rationnelle » devrait être au pluriel. [[71:82]] => <note warning>Soyez très prudent lorsque vous utilisez les expressions rationnelle de **comparator-i; ascii-numeric** avec les scores de spams des en-têtes. Ce comparateur ne peut être utilisé que pour faire correspondre des entiers non signés. Les chaînes qui ne sont pas de même signe ne seront donc pas toujours comparées correctement en valeur absolue ! C'est pourquoi l'exemple ci-dessus vérifie d'abord explicitement le signe moins.</note> <|> rationnelle => suggestions : ['rationnelles']
214 Accord de nombre erroné avec « les expressions » : « rationnelle » devrait être au pluriel. [[71:82]] => <note warning>Soyez très prudent lorsque vous utilisez les expressions rationnelle de **comparator-i; ascii-numeric** avec les scores de spams des en-têtes. Ce comparateur ne peut être utilisé que pour faire correspondre des entiers non signés. Les chaînes qui ne sont pas de même signe ne seront donc pas toujours comparées correctement en valeur absolue ! C'est pourquoi l'exemple ci-dessus vérifie d'abord explicitement le signe moins.</note> <|> rationnelle => suggestions : ['rationnelles']
214 Mot inconnu : comparator-i [[88:100]] => <note warning>Soyez très prudent lorsque vous utilisez les expressions rationnelle de **comparator-i; ascii-numeric** avec les scores de spams des en-têtes. Ce comparateur ne peut être utilisé que pour faire correspondre des entiers non signés. Les chaînes qui ne sont pas de même signe ne seront donc pas toujours comparées correctement en valeur absolue ! C'est pourquoi l'exemple ci-dessus vérifie d'abord explicitement le signe moins.</note> <|> comparator-i
214 Mot inconnu : comparator-i [[88:100]] => <note warning>Soyez très prudent lorsque vous utilisez les expressions rationnelle de **comparator-i; ascii-numeric** avec les scores de spams des en-têtes. Ce comparateur ne peut être utilisé que pour faire correspondre des entiers non signés. Les chaînes qui ne sont pas de même signe ne seront donc pas toujours comparées correctement en valeur absolue ! C'est pourquoi l'exemple ci-dessus vérifie d'abord explicitement le signe moins.</note> <|> comparator-i
214 Mot inconnu : ascii-numeric [[102:115]] => <note warning>Soyez très prudent lorsque vous utilisez les expressions rationnelle de **comparator-i; ascii-numeric** avec les scores de spams des en-têtes. Ce comparateur ne peut être utilisé que pour faire correspondre des entiers non signés. Les chaînes qui ne sont pas de même signe ne seront donc pas toujours comparées correctement en valeur absolue ! C'est pourquoi l'exemple ci-dessus vérifie d'abord explicitement le signe moins.</note> <|> ascii-numeric
214 Mot inconnu : ascii-numeric [[102:115]] => <note warning>Soyez très prudent lorsque vous utilisez les expressions rationnelle de **comparator-i; ascii-numeric** avec les scores de spams des en-têtes. Ce comparateur ne peut être utilisé que pour faire correspondre des entiers non signés. Les chaînes qui ne sont pas de même signe ne seront donc pas toujours comparées correctement en valeur absolue ! C'est pourquoi l'exemple ci-dessus vérifie d'abord explicitement le signe moins.</note> <|> ascii-numeric


216 Mot inconnu : spamtest [[36:44]] => == Filtrage à l'aide des extensions spamtest et virustest == <|> spamtest
216 Mot inconnu : spamtest [[36:44]] => == Filtrage à l'aide des extensions spamtest et virustest == <|> spamtest
216 Mot inconnu : virustest [[48:57]] => == Filtrage à l'aide des extensions spamtest et virustest == <|> virustest
216 Mot inconnu : virustest [[48:57]] => == Filtrage à l'aide des extensions spamtest et virustest == <|> virustest


217 Mot inconnu : spamtest [[23:31]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> spamtest
217 Mot inconnu : spamtest [[23:31]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> spamtest
217 Mot inconnu : virustest [[35:44]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> virustest
217 Mot inconnu : virustest [[35:44]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> virustest
217 Mot inconnu : MTA [[77:80]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> mta
217 Mot inconnu : MTA [[77:80]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> mta
217 Mot inconnu : spamtest [[254:262]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> spamtest
217 Mot inconnu : spamtest [[254:262]] => Lorsque les extensions spamtest et virustest sont configurées sur le serveur MTA, les utilisateurs (les client MUA) peuvent avoir un moyen beaucoup plus simple de filtrer respectivement les messages de spam et de virus. Pour filtrer le spam, l'extension spamtest peut par exemple être utilisée comme suit: <|> spamtest


219 Mot inconnu : require [[0:7]] => require "fileinto"; <|> require
219 Mot inconnu : require [[0:7]] => require "fileinto"; <|> require
219 Guillemets typographiques ouvrants. [[8:9]] => require "fileinto"; <|> " => suggestions : ['«\xa0', '“']
219 Mot inconnu : fileinto [[9:17]] => require "fileinto"; <|> fileinto
219 Mot inconnu : fileinto [[9:17]] => require "fileinto"; <|> fileinto
219 Guillemets typographiques fermants. [[17:18]] => require "fileinto"; <|> " => suggestions : ['\xa0»', '”']


220 Mot inconnu : require [[0:7]] => require "relational"; <|> require
220 Mot inconnu : require [[0:7]] => require "relational"; <|> require
220 Guillemets typographiques ouvrants. [[8:9]] => require "relational"; <|> " => suggestions : ['«\xa0', '“']
220 Mot inconnu : relational [[9:19]] => require "relational"; <|> relational
220 Mot inconnu : relational [[9:19]] => require "relational"; <|> relational
220 Guillemets typographiques fermants. [[19:20]] => require "relational"; <|> " => suggestions : ['\xa0»', '”']


221 Mot inconnu : require [[0:7]] => require "comparator-i;ascii-numeric"; <|> require
221 Mot inconnu : require [[0:7]] => require "comparator-i;ascii-numeric"; <|> require
221 Guillemets typographiques ouvrants. [[8:9]] => require "comparator-i;ascii-numeric"; <|> " => suggestions : ['«\xa0', '“']
221 Mot inconnu : comparator-i [[9:21]] => require "comparator-i;ascii-numeric"; <|> comparator-i
221 Mot inconnu : comparator-i [[9:21]] => require "comparator-i;ascii-numeric"; <|> comparator-i
221 Il manque un espace. [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric => suggestions : [' ascii-numeric']
221 Il manque un espace. [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric => suggestions : [' ascii-numeric']
221 Mot inconnu : ascii-numeric [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric
221 Mot inconnu : ascii-numeric [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric
221 Guillemets typographiques fermants. [[35:36]] => require "comparator-i;ascii-numeric"; <|> " => suggestions : ['\xa0»', '”']


223 Mot inconnu : spamtest [[6:14]] => /* Si spamtest échoue pour quelque raison que se soit, exemple de l'absence d'entête de spam, <|> spamtest
223 Mot inconnu : spamtest [[6:14]] => /* Si spamtest échoue pour quelque raison que se soit, exemple de l'absence d'entête de spam, <|> spamtest


224 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * le fichier est déposé dans un dossier spécial. <|>   => suggestions : ['']
224 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * le fichier est déposé dans un dossier spécial. <|>   => suggestions : ['']


225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  */ <|>   => suggestions : ['']
225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  */ <|>   => suggestions : ['']


226 Mot inconnu : spamtest [[3:11]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> spamtest
226 Mot inconnu : spamtest [[3:11]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> spamtest
226 Guillemets typographiques ouvrants. [[19:20]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['«\xa0', '“']
226 Mot inconnu : eq [[20:22]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> eq
226 Mot inconnu : eq [[20:22]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> eq
226 Guillemets typographiques fermants. [[22:23]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['\xa0»', '”']
226 Mot inconnu : comparator [[25:35]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> comparator
226 Mot inconnu : comparator [[25:35]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> comparator
226 Guillemets typographiques ouvrants. [[36:37]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['«\xa0', '“']
226 Il manque un espace. [[39:52]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric => suggestions : [' ascii-numeric']
226 Il manque un espace. [[39:52]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric => suggestions : [' ascii-numeric']
226 Mot inconnu : ascii-numeric [[39:52]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric
226 Mot inconnu : ascii-numeric [[39:52]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric
226 Guillemets typographiques fermants. [[52:53]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['\xa0»', '”']
226 Guillemets typographiques ouvrants. [[54:55]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['«\xa0', '“']
226 Guillemets typographiques fermants. [[56:57]] => if spamtest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['\xa0»', '”']


229 Mot inconnu : spamtest [[18:26]] => /* Si le score de spamtest (entre 1 et 10) est plus grand ou égal à 3, <|> spamtest
229 Mot inconnu : spamtest [[18:26]] => /* Si le score de spamtest (entre 1 et 10) est plus grand ou égal à 3, <|> spamtest


230 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * le fichier est déposé dans le dossier de spams : <|>   => suggestions : ['']
230 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * le fichier est déposé dans le dossier de spams : <|>   => suggestions : ['']


231 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  */ <|>   => suggestions : ['']
231 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  */ <|>   => suggestions : ['']


232 Mot inconnu : elsif [[2:7]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> elsif
232 Mot inconnu : elsif [[2:7]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> elsif
232 Mot inconnu : spamtest [[8:16]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> spamtest
232 Mot inconnu : spamtest [[8:16]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> spamtest
232 Guillemets typographiques ouvrants. [[24:25]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> " => suggestions : ['«\xa0', '“']
232 Mot inconnu : ge [[25:27]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> ge
232 Mot inconnu : ge [[25:27]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> ge
232 Guillemets typographiques fermants. [[27:28]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> " => suggestions : ['\xa0»', '”']
232 Mot inconnu : comparator [[30:40]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> comparator
232 Mot inconnu : comparator [[30:40]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> comparator
232 Guillemets typographiques ouvrants. [[41:42]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> " => suggestions : ['«\xa0', '“']
232 Il manque un espace. [[44:57]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> ascii-numeric => suggestions : [' ascii-numeric']
232 Il manque un espace. [[44:57]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> ascii-numeric => suggestions : [' ascii-numeric']
232 Mot inconnu : ascii-numeric [[44:57]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> ascii-numeric
232 Mot inconnu : ascii-numeric [[44:57]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> ascii-numeric
232 Guillemets typographiques fermants. [[57:58]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> " => suggestions : ['\xa0»', '”']
232 Guillemets typographiques ouvrants. [[59:60]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> " => suggestions : ['«\xa0', '“']
232 Guillemets typographiques fermants. [[61:62]] => } elsif spamtest :value "ge" :comparator "i;ascii-numeric" "3" { <|> " => suggestions : ['\xa0»', '”']


235 Mettez des guillemets fermants plutôt qu’ouvrants. [[54:56]] => /* Pour une évaluation plus fine des scores, la balise «:percent» peut être utilisée. <|>  « => suggestions : ['\xa0»', '”']
235 Mettez des guillemets fermants plutôt qu’ouvrants. [[54:56]] => /* Pour une évaluation plus fine des scores, la balise «:percent» peut être utilisée. <|>  « => suggestions : ['\xa0»', '”']
235 Confusion probable. Pour dire “possiblement”, écrivez “peut-être”. [[66:75]] => /* Pour une évaluation plus fine des scores, la balise «:percent» peut être utilisée. <|> peut être => suggestions : ['peut-être']
235 Confusion probable. Pour dire “possiblement”, écrivez “peut-être”. [[66:75]] => /* Pour une évaluation plus fine des scores, la balise «:percent» peut être utilisée. <|> peut être => suggestions : ['peut-être']


236 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * La règle suivante supprime tous les messages avec un pourcentage supérieur à 85% <|>   => suggestions : ['']
236 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * La règle suivante supprime tous les messages avec un pourcentage supérieur à 85% <|>   => suggestions : ['']


237 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * par rapport au maximum. <|>   => suggestions : ['']
237 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  * par rapport au maximum. <|>   => suggestions : ['']


238 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  */ <|>   => suggestions : ['']
238 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>  */ <|>   => suggestions : ['']


239 Mot inconnu : elsif [[2:7]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> elsif
239 Mot inconnu : elsif [[2:7]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> elsif
239 Mot inconnu : spamtest [[8:16]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> spamtest
239 Mot inconnu : spamtest [[8:16]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> spamtest
239 Guillemets typographiques ouvrants. [[24:25]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> " => suggestions : ['«\xa0', '“']
239 Mot inconnu : gt [[25:27]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> gt
239 Mot inconnu : gt [[25:27]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> gt
239 Guillemets typographiques fermants. [[27:28]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> " => suggestions : ['\xa0»', '”']
239 Mot inconnu : comparator [[30:40]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> comparator
239 Mot inconnu : comparator [[30:40]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> comparator
239 Guillemets typographiques ouvrants. [[41:42]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> " => suggestions : ['«\xa0', '“']
239 Il manque un espace. [[44:57]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> ascii-numeric => suggestions : [' ascii-numeric']
239 Il manque un espace. [[44:57]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> ascii-numeric => suggestions : [' ascii-numeric']
239 Mot inconnu : ascii-numeric [[44:57]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> ascii-numeric
239 Mot inconnu : ascii-numeric [[44:57]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> ascii-numeric
239 Guillemets typographiques fermants. [[57:58]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> " => suggestions : ['\xa0»', '”']
239 Guillemets typographiques ouvrants. [[68:69]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> " => suggestions : ['«\xa0', '“']
239 Guillemets typographiques fermants. [[71:72]] => } elsif spamtest :value "gt" :comparator "i;ascii-numeric" :percent "85" { <|> " => suggestions : ['\xa0»', '”']


243 Mot inconnu : INBOX [[41:46]] => /* Les autres messages sont classés dans INBOX */</file> <|> inbox
243 Mot inconnu : INBOX [[41:46]] => /* Les autres messages sont classés dans INBOX */</file> <|> inbox


245 Mot inconnu : virustest [[12:21]] => L'extension virustest peut être utilisée de la même manière: <|> virustest
245 Mot inconnu : virustest [[12:21]] => L'extension virustest peut être utilisée de la même manière: <|> virustest


247 Mot inconnu : require [[0:7]] => require "fileinto"; <|> require
247 Mot inconnu : require [[0:7]] => require "fileinto"; <|> require
247 Guillemets typographiques ouvrants. [[8:9]] => require "fileinto"; <|> " => suggestions : ['«\xa0', '“']
247 Mot inconnu : fileinto [[9:17]] => require "fileinto"; <|> fileinto
247 Mot inconnu : fileinto [[9:17]] => require "fileinto"; <|> fileinto
247 Guillemets typographiques fermants. [[17:18]] => require "fileinto"; <|> " => suggestions : ['\xa0»', '”']


248 Mot inconnu : require [[0:7]] => require "relational"; <|> require
248 Mot inconnu : require [[0:7]] => require "relational"; <|> require
248 Guillemets typographiques ouvrants. [[8:9]] => require "relational"; <|> " => suggestions : ['«\xa0', '“']
248 Mot inconnu : relational [[9:19]] => require "relational"; <|> relational
248 Mot inconnu : relational [[9:19]] => require "relational"; <|> relational
248 Guillemets typographiques fermants. [[19:20]] => require "relational"; <|> " => suggestions : ['\xa0»', '”']


249 Mot inconnu : require [[0:7]] => require "comparator-i;ascii-numeric"; <|> require
249 Mot inconnu : require [[0:7]] => require "comparator-i;ascii-numeric"; <|> require
249 Guillemets typographiques ouvrants. [[8:9]] => require "comparator-i;ascii-numeric"; <|> " => suggestions : ['«\xa0', '“']
249 Mot inconnu : comparator-i [[9:21]] => require "comparator-i;ascii-numeric"; <|> comparator-i
249 Mot inconnu : comparator-i [[9:21]] => require "comparator-i;ascii-numeric"; <|> comparator-i
249 Il manque un espace. [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric => suggestions : [' ascii-numeric']
249 Il manque un espace. [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric => suggestions : [' ascii-numeric']
249 Mot inconnu : ascii-numeric [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric
249 Mot inconnu : ascii-numeric [[22:35]] => require "comparator-i;ascii-numeric"; <|> ascii-numeric
249 Guillemets typographiques fermants. [[35:36]] => require "comparator-i;ascii-numeric"; <|> " => suggestions : ['\xa0»', '”']


252 Mot inconnu : virustest [[3:12]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> virustest
252 Mot inconnu : virustest [[3:12]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> virustest
252 Guillemets typographiques ouvrants. [[20:21]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['«\xa0', '“']
252 Mot inconnu : eq [[21:23]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> eq
252 Mot inconnu : eq [[21:23]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> eq
252 Guillemets typographiques fermants. [[23:24]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['\xa0»', '”']
252 Mot inconnu : comparator [[26:36]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> comparator
252 Mot inconnu : comparator [[26:36]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> comparator
252 Guillemets typographiques ouvrants. [[37:38]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['«\xa0', '“']
252 Il manque un espace. [[40:53]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric => suggestions : [' ascii-numeric']
252 Il manque un espace. [[40:53]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric => suggestions : [' ascii-numeric']
252 Mot inconnu : ascii-numeric [[40:53]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric
252 Mot inconnu : ascii-numeric [[40:53]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> ascii-numeric
252 Guillemets typographiques fermants. [[53:54]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['\xa0»', '”']
252 Guillemets typographiques ouvrants. [[55:56]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['«\xa0', '“']
252 Guillemets typographiques fermants. [[57:58]] => if virustest :value "eq" :comparator "i;ascii-numeric" "0" { <|> " => suggestions : ['\xa0»', '”']


256 Mot inconnu : virustest [[5:14]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> virustest
256 Mot inconnu : virustest [[5:14]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> virustest
256 Guillemets typographiques ouvrants. [[22:23]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> " => suggestions : ['«\xa0', '“']
256 Mot inconnu : eq [[23:25]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> eq
256 Mot inconnu : eq [[23:25]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> eq
256 Guillemets typographiques fermants. [[25:26]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> " => suggestions : ['\xa0»', '”']
256 Mot inconnu : comparator [[28:38]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> comparator
256 Mot inconnu : comparator [[28:38]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> comparator
256 Guillemets typographiques ouvrants. [[39:40]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> " => suggestions : ['«\xa0', '“']
256 Il manque un espace. [[42:55]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> ascii-numeric => suggestions : [' ascii-numeric']
256 Il manque un espace. [[42:55]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> ascii-numeric => suggestions : [' ascii-numeric']
256 Mot inconnu : ascii-numeric [[42:55]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> ascii-numeric
256 Mot inconnu : ascii-numeric [[42:55]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> ascii-numeric
256 Guillemets typographiques fermants. [[55:56]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> " => suggestions : ['\xa0»', '”']
256 Guillemets typographiques ouvrants. [[57:58]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> " => suggestions : ['«\xa0', '“']
256 Guillemets typographiques fermants. [[59:60]] => } if virustest :value "eq" :comparator "i;ascii-numeric" "4" { <|> " => suggestions : ['\xa0»', '”']


261 Mot inconnu : elsif [[2:7]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> elsif
261 Mot inconnu : elsif [[2:7]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> elsif
261 Mot inconnu : virustest [[8:17]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> virustest
261 Mot inconnu : virustest [[8:17]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> virustest
261 Guillemets typographiques ouvrants. [[25:26]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> " => suggestions : ['«\xa0', '“']
261 Mot inconnu : eq [[26:28]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> eq
261 Mot inconnu : eq [[26:28]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> eq
261 Guillemets typographiques fermants. [[28:29]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> " => suggestions : ['\xa0»', '”']
261 Mot inconnu : comparator [[31:41]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> comparator
261 Mot inconnu : comparator [[31:41]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> comparator
261 Guillemets typographiques ouvrants. [[42:43]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> " => suggestions : ['«\xa0', '“']
261 Il manque un espace. [[45:58]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> ascii-numeric => suggestions : [' ascii-numeric']
261 Il manque un espace. [[45:58]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> ascii-numeric => suggestions : [' ascii-numeric']
261 Mot inconnu : ascii-numeric [[45:58]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> ascii-numeric
261 Mot inconnu : ascii-numeric [[45:58]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> ascii-numeric
261 Guillemets typographiques fermants. [[58:59]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> " => suggestions : ['\xa0»', '”']
261 Guillemets typographiques ouvrants. [[60:61]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> " => suggestions : ['«\xa0', '“']
261 Guillemets typographiques fermants. [[62:63]] => } elsif virustest :value "eq" :comparator "i;ascii-numeric" "5" { <|> " => suggestions : ['\xa0»', '”']


269 Mot inconnu : SPAMs [[35:40]] => # Déplacer le spam vers le dossier SPAMs <|> spams
269 Mot inconnu : SPAMs [[35:40]] => # Déplacer le spam vers le dossier SPAMs <|> spams


270 Mot inconnu : header [[3:9]] => if header :contains "X-Spam-Flag" "YES" { <|> header
270 Mot inconnu : header [[3:9]] => if header :contains "X-Spam-Flag" "YES" { <|> header
270 Mot inconnu : contains [[11:19]] => if header :contains "X-Spam-Flag" "YES" { <|> contains
270 Mot inconnu : contains [[11:19]] => if header :contains "X-Spam-Flag" "YES" { <|> contains
270 Guillemets typographiques ouvrants. [[20:21]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['«\xa0', '“']
270 Mot inconnu : X-Spam-Flag [[21:32]] => if header :contains "X-Spam-Flag" "YES" { <|> x-spam-flag
270 Mot inconnu : X-Spam-Flag [[21:32]] => if header :contains "X-Spam-Flag" "YES" { <|> x-spam-flag
270 Guillemets typographiques fermants. [[32:33]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['\xa0»', '”']
270 Guillemets typographiques ouvrants. [[34:35]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['«\xa0', '“']
270 Guillemets typographiques fermants. [[38:39]] => if header :contains "X-Spam-Flag" "YES" { <|> " => suggestions : ['\xa0»', '”']


283 Guillemets typographiques ouvrants. [[0:1]] => "Je suis absent du bureau, veuillez contacter Linus Torval. <|> " => suggestions : ['«\xa0', '“']
283 Mot inconnu : Torval [[52:58]] => "Je suis absent du bureau, veuillez contacter Linus Torval. <|> torval
283 Mot inconnu : Torval [[52:58]] => "Je suis absent du bureau, veuillez contacter Linus Torval. <|> torval


285 Guillemets typographiques fermants. [[14:15]] => Tux Opensource";</file> <|> " => suggestions : ['\xa0»', '”']


287 Accord de nombre erroné avec “extension” : “variables” devrait être au singulier. [[82:91]] => Il est également possible d'inclure le sujet d'origine en utilisant l'extension **variables** : <|> variables => suggestions : ['variable']
287 Accord de nombre erroné avec “extension” : “variables” devrait être au singulier. [[82:91]] => Il est également possible d'inclure le sujet d'origine en utilisant l'extension **variables** : <|> variables => suggestions : ['variable']


290 Mot inconnu : header [[3:9]] => if header :matches "Subject" "*" { <|> header
290 Mot inconnu : header [[3:9]] => if header :matches "Subject" "*" { <|> header
290 Guillemets typographiques ouvrants. [[19:20]] => if header :matches "Subject" "*" { <|> " => suggestions : ['«\xa0', '“']
290 Mot inconnu : Subject [[20:27]] => if header :matches "Subject" "*" { <|> subject
290 Mot inconnu : Subject [[20:27]] => if header :matches "Subject" "*" { <|> subject
290 Guillemets typographiques fermants. [[27:28]] => if header :matches "Subject" "*" { <|> " => suggestions : ['\xa0»', '”']


297 Guillemets typographiques ouvrants. [[0:1]] => "Je suis absent du bureau, veuillez contacter Linus Torval. <|> " => suggestions : ['«\xa0', '“']
297 Mot inconnu : Torval [[52:58]] => "Je suis absent du bureau, veuillez contacter Linus Torval. <|> torval
297 Mot inconnu : Torval [[52:58]] => "Je suis absent du bureau, veuillez contacter Linus Torval. <|> torval


299 Guillemets typographiques fermants. [[14:15]] => Tux Opensource";</file> <|> " => suggestions : ['\xa0»', '”']


306 Mot inconnu : currentdate [[3:14]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> currentdate
306 Mot inconnu : currentdate [[3:14]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> currentdate
306 Guillemets typographiques ouvrants. [[24:25]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> " => suggestions : ['«\xa0', '“']
306 Mot inconnu : year [[25:29]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> year
306 Mot inconnu : year [[25:29]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> year
306 Guillemets typographiques fermants. [[29:30]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> " => suggestions : ['\xa0»', '”']
306 Guillemets typographiques ouvrants. [[41:42]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> " => suggestions : ['«\xa0', '“']
306 Mot inconnu : year [[42:46]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> year
306 Mot inconnu : year [[42:46]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> year
306 Guillemets typographiques fermants. [[46:47]] => if currentdate :matches "year" "*" { set "year" "${1}"; } <|> " => suggestions : ['\xa0»', '”']


307 Mot inconnu : currentdate [[3:14]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> currentdate
307 Mot inconnu : currentdate [[3:14]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> currentdate
307 Guillemets typographiques ouvrants. [[24:25]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> " => suggestions : ['«\xa0', '“']
307 Mot inconnu : month [[25:30]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> month
307 Mot inconnu : month [[25:30]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> month
307 Guillemets typographiques fermants. [[30:31]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> " => suggestions : ['\xa0»', '”']
307 Guillemets typographiques ouvrants. [[42:43]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> " => suggestions : ['«\xa0', '“']
307 Mot inconnu : month [[43:48]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> month
307 Mot inconnu : month [[43:48]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> month
307 Guillemets typographiques fermants. [[48:49]] => if currentdate :matches "month" "*" { set "month" "${1}"; } <|> " => suggestions : ['\xa0»', '”']


309 Mot inconnu : Dovecot [[49:56]] => # Archivez les éléments de la liste de diffusion Dovecot par année et par mois. <|> dovecot
309 Mot inconnu : Dovecot [[49:56]] => # Archivez les éléments de la liste de diffusion Dovecot par année et par mois. <|> dovecot


311 Mot inconnu : header [[3:9]] => if header :is "list-id" "dovecot.dovecot.org" { <|> header
311 Mot inconnu : header [[3:9]] => if header :is "list-id" "dovecot.dovecot.org" { <|> header
311 Mot inconnu : is [[11:13]] => if header :is "list-id" "dovecot.dovecot.org" { <|> is
311 Mot inconnu : is [[11:13]] => if header :is "list-id" "dovecot.dovecot.org" { <|> is
311 Guillemets typographiques ouvrants. [[14:15]] => if header :is "list-id" "dovecot.dovecot.org" { <|> " => suggestions : ['«\xa0', '“']
311 Mot inconnu : list-id [[15:22]] => if header :is "list-id" "dovecot.dovecot.org" { <|> list-id
311 Mot inconnu : list-id [[15:22]] => if header :is "list-id" "dovecot.dovecot.org" { <|> list-id
311 Guillemets typographiques fermants. [[22:23]] => if header :is "list-id" "dovecot.dovecot.org" { <|> " => suggestions : ['\xa0»', '”']

