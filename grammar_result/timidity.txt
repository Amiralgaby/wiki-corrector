
5 Mot inconnu : TiMiDiTy [[7:15]] => ====== TiMiDiTy ====== <|> timidity

7 Mot inconnu : Timidity [[2:10]] => **Timidity** est un synthétiseur logiciel pour la prise en charge du MIDI. <|> timidity

10 Mot inconnu : TiMidity [[0:8]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> timidity
10 Mot inconnu : Wave [[42:46]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> wave
10 Mot inconnu : mid [[132:135]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> mid
10 Mot inconnu : rcp [[160:163]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> rcp
10 Mot inconnu : r36 [[167:170]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> r36
10 Mot inconnu : WAVE [[277:281]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> wave
10 Mot inconnu : TiMidity [[283:291]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> timidity
10 Incohérence avec « des » : « patches » est un verbe. [[306:313]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> patches => suggestions : ['patchs']
10 Mot inconnu : Ultrasound [[333:343]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> ultrasound
10 Mot inconnu : Soundfonts [[351:361]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> soundfonts
10 Mot inconnu : sfx [[365:368]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> sfx
10 Mot inconnu : sf2 [[372:375]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> sf2
10 Mot inconnu : TiMidity [[472:480]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> timidity
10 Mot inconnu : TiMitidy [[636:644]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> timitidy
10 Mot inconnu : KAR [[715:718]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> kar
10 Mot inconnu : WRD [[722:725]] => TiMidity++ convertit des fichiers MIDI en Wave et joue ces derniers. Les formats MIDI supportés sont : fichiers au Standard MIDI (*.mid), fichier Recomposer (*.rcp, *.r36) et les fichiers Module (*.mod). Les fichiers obtenus après conversion sont formatés, par exemple en RIFF WAVE. TiMidity++ utilise des patches compatibles Gravis Ultrasound ou des Soundfonts (*.sfx, *.sf2) pour générer les données audio numériques à partir des fichiers MIDI. Les données générées par TiMidity++ peuvent être stockées dans un fichier en vue d'un traitement ultérieur, ou jouées en temps réel dans un lecteur audio. Lors d'une lecture en temps réel, TiMitidy++ peut afficher les paroles éventuellement stockées dans les fichiers KAR ou WRD. <|> wrd

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

35 Mot inconnu : Timidity [[21:29]] => ==== Mettre en place Timidity en tant que serveur MIDI ==== <|> timidity

44 Mot inconnu : Timidity [[9:17]] => Ça lance Timidity en tant que serveur MIDI et ouvre deux ports 128:0 et 128:1. <|> timidity

52 Mot inconnu : Timidity [[12:20]] => Pour fermer Timidity, pressez Ctrl--c dans le terminal où il a été lancé. <|> timidity

56 Mot inconnu : Notedit [[0:7]] => Notedit ou un autre éditeur de partitions peut alors être chargé et reconnaitre les ports MIDI. <|> notedit

58 Mot inconnu : grace [[137:142]] => Si l'ordinateur est occupé, il est possible que vous entendiez des sauts ou que vous ayez des problèmes de latence. Cela peut être réglé grace à un patch de noyau temps-réel //(realtime)// mais cela est hors du propos de cet article. <|> grace
58 Mot inconnu : realtime [[177:185]] => Si l'ordinateur est occupé, il est possible que vous entendiez des sauts ou que vous ayez des problèmes de latence. Cela peut être réglé grace à un patch de noyau temps-réel //(realtime)// mais cela est hors du propos de cet article. <|> realtime

62 Mot inconnu : Timidity [[30:38]] => ==== Démarrer automatiquement Timidity ==== <|> timidity

64 Mot inconnu : Timidity [[51:59]] => Il y a deux méthodes pour démarrer automatiquement Timidity. <|> timidity
66 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. [[4:6]] =>   * au démarrage de la session utilisateur : dans ce cas, seul l'utilisateur en question a accès au serveur midi. En revanche, le serveur midi s'interfacera correctement avec pulseaudio et vous pourrez utiliser toutes vos applications audio en même temps dans une joyeuse cacophonie :-) <|> au => suggestions : ['Au']

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']

94 Mot inconnu : timidity [[37:45]] => <note>Adapter les options du serveur timidity en fonction de ce qui marche chez vous. J'ai enlevé des options par rapport à la section ci-dessus car sinon le son "crachote" chez moi.</note> <|> timidity
94 Guillemets typographiques ouvrants. [[162:163]] => <note>Adapter les options du serveur timidity en fonction de ce qui marche chez vous. J'ai enlevé des options par rapport à la section ci-dessus car sinon le son "crachote" chez moi.</note> <|> " => suggestions : ['«\xa0', '“']
94 Guillemets typographiques fermants. [[171:172]] => <note>Adapter les options du serveur timidity en fonction de ce qui marche chez vous. J'ai enlevé des options par rapport à la section ci-dessus car sinon le son "crachote" chez moi.</note> <|> " => suggestions : ['\xa0»', '”']

118 Typographie : points de suspension. Utilisez le caractère dédié. [[68:71]] => **Note:** Gardez à l'esprit que cette modification détériore le son ... <|> ... => suggestions : ['…']

122 Mot inconnu : soundfont [[36:45]] => ==== Trouver et mettre en place une soundfont ==== <|> soundfont

124 Mot inconnu : soundfont [[92:101]] => Que ce soit dans le cadre d'une synthèse matérielle ou logicielle, vous aurez besoin d'un //soundfont//. Wikipédia nous apprend que : <|> soundfont

128 Mot inconnu : Timidity [[17:25]] => Si vous utilisez Timidity pour jouer des fichiers MIDI, vous pouvez installer le paquet **freepats** qui propose des sons de base. Toutefois, il existe d'excellentes soundfonts gratuites que vous pouvez utiliser pour améliorer la qualité du son midi. <|> timidity
128 Mot inconnu : freepats [[90:98]] => Si vous utilisez Timidity pour jouer des fichiers MIDI, vous pouvez installer le paquet **freepats** qui propose des sons de base. Toutefois, il existe d'excellentes soundfonts gratuites que vous pouvez utiliser pour améliorer la qualité du son midi. <|> freepats
128 Mot inconnu : soundfonts [[166:176]] => Si vous utilisez Timidity pour jouer des fichiers MIDI, vous pouvez installer le paquet **freepats** qui propose des sons de base. Toutefois, il existe d'excellentes soundfonts gratuites que vous pouvez utiliser pour améliorer la qualité du son midi. <|> soundfonts

130 Mot inconnu : soundfonts [[12:22]] => Exemples de soundfonts à télécharger : <|> soundfonts
134 Mot inconnu : soundfont [[15:24]] =>   * cherchez //soundfont// dans un moteur de recherche... <|> soundfont
134 Typographie : points de suspension. Utilisez le caractère dédié. [[54:57]] =>   * cherchez //soundfont// dans un moteur de recherche... <|> ... => suggestions : ['…']

142 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[24:26]] => et vous obtiendrez votre .sf2! <|>  . => suggestions : ['. ', '.']
142 Mot inconnu : sf2 [[26:29]] => et vous obtiendrez votre .sf2! <|> sf2
149 Mot inconnu : soundfont [[250:259]] => <note importante>Attention, une ligne commençant par « source » est certainement déjà présente à la fin du fichier. Vous devriez la commenter, en ajoutant un « # » devant la ligne ; par ailleurs, notez bien que le mot clé de la ligne à ajouter est « soundfont », pas « source ».</note> <|> soundfont

156 Mot inconnu : Timidity [[0:8]] => Timidity permet également de convertir un fichier midi en fichier audio, grâce à l'option -O. Ainsi, la commande <|> timidity
156 Il manque un espace à côté du tiret. [[89:91]] => Timidity permet également de convertir un fichier midi en fichier audio, grâce à l'option -O. Ainsi, la commande <|>  - => suggestions : [' – ', ' — ']

158 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[0:9]] => convertit fichier.mid en fichier.ogg. <|> convertit => suggestions : ['convertis']
158 Mot inconnu : mid [[18:21]] => convertit fichier.mid en fichier.ogg. <|> mid
161 Mot inconnu : Ov [[5:7]] =>   * -Ov ⇒ OGG Vorbis (.ogg) <|> ov
162 Mot inconnu : Ow [[5:7]] =>   * -Ow ⇒ RIFF Wav (.wav) <|> ow
163 Mot inconnu : Sun [[10:13]] =>   * -Ou ⇒ Sun Audio (.au) <|> sun
164 Mot inconnu : Oa [[5:7]] =>   * -Oa ⇒ AIIF (.aiff) <|> oa
164 Mot inconnu : AIIF [[10:14]] =>   * -Oa ⇒ AIIF (.aiff) <|> aiif
164 Mot inconnu : aiff [[17:21]] =>   * -Oa ⇒ AIIF (.aiff) <|> aiff
165 Mot inconnu : OF [[5:7]] =>   * -OF ⇒ FLAC (.flac) <|> of
168 Mot inconnu : timidity [[12:20]] => Tapez « man timidity » pour plus d'informations.  <|> timidity
168 Espace(s) en fin de ligne à supprimer. [[48:49]] => Tapez « man timidity » pour plus d'informations.  <|>   => suggestions : ['']

173 Mot inconnu : timidity [[12:20]] => Le paquet **timidity** que vous avez installé ne crée malheureusement pas (encore) de raccourci dans le menu Applications sauf si vous avez installé le paquet **timidity-interfaces-extra** <|> timidity
173 Mot inconnu : timidity-interfaces-extra [[161:186]] => Le paquet **timidity** que vous avez installé ne crée malheureusement pas (encore) de raccourci dans le menu Applications sauf si vous avez installé le paquet **timidity-interfaces-extra** <|> timidity-interfaces-extra

180 Mot inconnu : Timidity [[5:13]] => ==== Timidity en serveur/synthétiseur ==== <|> timidity
188 Mot inconnu : timidity [[4:12]] =>   * timidity - le programme <|> timidity
188 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) [[12:15]] =>   * timidity - le programme <|>  -  => suggestions : [' – ', ' — ', ' − ']
189 Mot inconnu : iA [[5:7]] =>   * -iA "Launch TiMidity++ as ALSA sequencer client." <|> ia
189 Guillemets typographiques ouvrants. [[8:9]] =>   * -iA "Launch TiMidity++ as ALSA sequencer client." <|> " => suggestions : ['«\xa0', '“']
189 Mot inconnu : Launch [[9:15]] =>   * -iA "Launch TiMidity++ as ALSA sequencer client." <|> launch
189 Mot inconnu : TiMidity [[16:24]] =>   * -iA "Launch TiMidity++ as ALSA sequencer client." <|> timidity
189 Mot inconnu : sequencer [[35:44]] =>   * -iA "Launch TiMidity++ as ALSA sequencer client." <|> sequencer
189 Guillemets typographiques fermants. [[52:53]] =>   * -iA "Launch TiMidity++ as ALSA sequencer client." <|> " => suggestions : ['\xa0»', '”']
190 Mot inconnu : B2 [[5:7]] =>   * -B2,8 = buffer (personnellement je préfère utiliser "-B4,8", cela donne de meilleurs résultats !!) <|> b2
190 Il manque un espace. [[8:9]] =>   * -B2,8 = buffer (personnellement je préfère utiliser "-B4,8", cela donne de meilleurs résultats !!) <|> 8 => suggestions : [' 8']
190 Mot inconnu : buffer [[12:18]] =>   * -B2,8 = buffer (personnellement je préfère utiliser "-B4,8", cela donne de meilleurs résultats !!) <|> buffer
190 Mot inconnu : B4 [[58:60]] =>   * -B2,8 = buffer (personnellement je préfère utiliser "-B4,8", cela donne de meilleurs résultats !!) <|> b4
190 Il manque un espace. [[61:62]] =>   * -B2,8 = buffer (personnellement je préfère utiliser "-B4,8", cela donne de meilleurs résultats !!) <|> 8 => suggestions : [' 8']
190 Guillemets typographiques fermants. [[62:63]] =>   * -B2,8 = buffer (personnellement je préfère utiliser "-B4,8", cela donne de meilleurs résultats !!) <|> " => suggestions : ['\xa0»', '”']
191 Guillemets typographiques ouvrants. [[10:11]] =>   * -Os = "Output to alsa" <|> " => suggestions : ['«\xa0', '“']
191 Mot inconnu : to [[18:20]] =>   * -Os = "Output to alsa" <|> to
191 Guillemets typographiques fermants. [[25:26]] =>   * -Os = "Output to alsa" <|> " => suggestions : ['\xa0»', '”']
192 Mot inconnu : EFreverb [[5:13]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> efreverb
192 Guillemets typographiques ouvrants. [[17:18]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> " => suggestions : ['«\xa0', '“']
192 Guillemets typographiques fermants. [[22:23]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> " => suggestions : ['\xa0»', '”']
192 Guillemets typographiques ouvrants. [[26:27]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> " => suggestions : ['«\xa0', '“']
192 Mot inconnu : Effect [[27:33]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> effect
192 Guillemets typographiques fermants. [[33:34]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> " => suggestions : ['\xa0»', '”']
192 Guillemets typographiques ouvrants. [[37:38]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> " => suggestions : ['«\xa0', '“']
192 Mot inconnu : Disable [[38:45]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> disable
192 Mot inconnu : reverb [[51:57]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> reverb
192 Mot inconnu : effect [[58:64]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> effect
192 Mot inconnu : control [[65:72]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> control
192 Guillemets typographiques fermants. [[72:73]] =>   * -EFreverb=0& "mode" + "Effect" + "Disable MIDI reverb effect control" <|> " => suggestions : ['\xa0»', '”']

202 Mot inconnu : timidity [[22:30]] => N'oubliez pas de tuer timidity quand vous l'avez fermé : <|> timidity

267 Guillemets typographiques ouvrants. [[36:37]] => Recopier le contenu dans un fichier "timserver", rendez-le exécutable, double-cliquez dessus et faites "Lancer dans un terminal". Vous pouvez aussi le copier dans /usr/local/bin  : <|> " => suggestions : ['«\xa0', '“']
267 Mot inconnu : timserver [[37:46]] => Recopier le contenu dans un fichier "timserver", rendez-le exécutable, double-cliquez dessus et faites "Lancer dans un terminal". Vous pouvez aussi le copier dans /usr/local/bin  : <|> timserver
267 Guillemets typographiques fermants. [[46:47]] => Recopier le contenu dans un fichier "timserver", rendez-le exécutable, double-cliquez dessus et faites "Lancer dans un terminal". Vous pouvez aussi le copier dans /usr/local/bin  : <|> " => suggestions : ['\xa0»', '”']
267 Guillemets typographiques ouvrants. [[103:104]] => Recopier le contenu dans un fichier "timserver", rendez-le exécutable, double-cliquez dessus et faites "Lancer dans un terminal". Vous pouvez aussi le copier dans /usr/local/bin  : <|> " => suggestions : ['«\xa0', '“']
267 Guillemets typographiques fermants. [[127:128]] => Recopier le contenu dans un fichier "timserver", rendez-le exécutable, double-cliquez dessus et faites "Lancer dans un terminal". Vous pouvez aussi le copier dans /usr/local/bin  : <|> " => suggestions : ['\xa0»', '”']
267 Espace(s) surnuméraire(s) à supprimer. [[177:179]] => Recopier le contenu dans un fichier "timserver", rendez-le exécutable, double-cliquez dessus et faites "Lancer dans un terminal". Vous pouvez aussi le copier dans /usr/local/bin  : <|>    => suggestions : [' ']

276 Mot inconnu : Timidity [[34:42]] => ==== Améliorer le rendu sonore de Timidity ==== <|> timidity

300 Mot inconnu : Timidity [[0:8]] => Timidity convertira alors fichier.mid en fichier.ogg. <|> timidity
300 Mot inconnu : mid [[34:37]] => Timidity convertira alors fichier.mid en fichier.ogg. <|> mid
303 Mot inconnu : Ov [[5:7]] =>   * -Ov => OGG Vorbis (.ogg) <|> ov
304 Mot inconnu : Ow [[5:7]] =>   * -Ow => RIFF Wav (.wav) <|> ow
305 Mot inconnu : Sun [[11:14]] =>   * -Ou => Sun Audio (.au) <|> sun
306 Mot inconnu : Oa [[5:7]] =>   * -Oa => AIIF (.aiff) <|> oa
306 Mot inconnu : AIIF [[11:15]] =>   * -Oa => AIIF (.aiff) <|> aiif
306 Mot inconnu : aiff [[18:22]] =>   * -Oa => AIIF (.aiff) <|> aiff
307 Mot inconnu : OF [[5:7]] =>   * -OF => FLAC (.flac) <|> of
309 Mot inconnu : timidity [[12:20]] => Tapez « man timidity » pour plus d'informations. <|> timidity
311 Accord de nombre erroné : « fichier » devrait être au pluriel. [[229:236]] => **Petite astuce :** Vous en avez marre de devoir convertir vos fichiers un par un? Faites cd /chemin du fichier (ou ouvrir un terminal dans votre dossier) puis : <code>timidity -option *.mid</code> et vous transformerez tous vos fichier .mid dans le format de votre choix!!! <|> fichier => suggestions : ['fichiers']
311 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). [[236:238]] => **Petite astuce :** Vous en avez marre de devoir convertir vos fichiers un par un? Faites cd /chemin du fichier (ou ouvrir un terminal dans votre dossier) puis : <code>timidity -option *.mid</code> et vous transformerez tous vos fichier .mid dans le format de votre choix!!! <|>  . => suggestions : ['. ', '.']
