
5 Mot inconnu : Ebook => ====== Ebook ====== <|> ebook

7 Mot inconnu : ebook => L'expression **ebook** (synonymes : livre électronique, livrel, ecolivrel, liseuse ou bouquineur) peut désigner plusieurs choses différentes : <|> ebook
7 Mot inconnu : livrel => L'expression **ebook** (synonymes : livre électronique, livrel, ecolivrel, liseuse ou bouquineur) peut désigner plusieurs choses différentes : <|> livrel
7 Mot inconnu : ecolivrel => L'expression **ebook** (synonymes : livre électronique, livrel, ecolivrel, liseuse ou bouquineur) peut désigner plusieurs choses différentes : <|> ecolivrel

15 Mot inconnu : ebook => ===== Les formats libres d'ebook ===== <|> ebook
17 Mot inconnu : ePub =>   * [[ePub]] <|> epub
19 Mot inconnu : DJVU =>   * [[DJVU]] <|> djvu

25 Mot inconnu : epub => Les autres formats tels que l'[[epub]] s'adaptent au support et sont modifiables en fonction du lecteur (taille des caractères, nombre de mots par ligne, …). Cette fonctionnalité tend à améliorer le confort de lecture. \\ <|> epub
25 Typographie : pas de virgule avant les points de suspension. => Les autres formats tels que l'[[epub]] s'adaptent au support et sont modifiables en fonction du lecteur (taille des caractères, nombre de mots par ligne, …). Cette fonctionnalité tend à améliorer le confort de lecture. \\ <|> , … => suggestions : ['…']

26 Conjugaison erronée. Accord avec “les romans…”. Le verbe devrait être à la 3ᵉ personne du pluriel. => La lecture d'ouvrages au format texte linéaire non composite — c’est-à-dire sans illustration — comme les romans ne pose aucun problème. <|> pose => suggestions : ['posent']

30 Mot inconnu : ebook => ===== Les logiciels libres de lecture d'ebook ===== <|> ebook
32 Mot inconnu : epub => Voir la page : [[epub#logiciels_de_lecture_epub|epub : Logiciels de lecture epub]] <|> epub
32 Mot inconnu : epub => Voir la page : [[epub#logiciels_de_lecture_epub|epub : Logiciels de lecture epub]] <|> epub
32 Mot inconnu : epub => Voir la page : [[epub#logiciels_de_lecture_epub|epub : Logiciels de lecture epub]] <|> epub

39 Mot inconnu : ebook => ===== Les logiciels de création / édition d'ebook sous Linux ===== <|> ebook
41 Mot inconnu : epub => Voir la page : [[epub#logiciels_d_edition_epub|epub : logiciels d'édition d'epub]] <|> epub
41 Mot inconnu : epub => Voir la page : [[epub#logiciels_d_edition_epub|epub : logiciels d'édition d'epub]] <|> epub
41 Mot inconnu : epub => Voir la page : [[epub#logiciels_d_edition_epub|epub : logiciels d'édition d'epub]] <|> epub

43 Mot inconnu : ebooks => ===== Convertir, retravailler les ebooks ===== <|> ebooks
50 Accord de nombre erroné avec « des formats » : « petit » devrait être au pluriel. =>   * [[K2pdfopt|K2pdfopt]] logiciel permettant de retravailler les PDF pour qu'ils s'affichent correctement dans des formats plus petit (ex: liseuse Amazon Kindle 7 pouces) <|> petit => suggestions : ['petits']
50 Mot inconnu : Kindle =>   * [[K2pdfopt|K2pdfopt]] logiciel permettant de retravailler les PDF pour qu'ils s'affichent correctement dans des formats plus petit (ex: liseuse Amazon Kindle 7 pouces) <|> kindle
54 Mot inconnu : rss =>   * [[https://addons.mozilla.org/fr/firefox/addon/grabmybooks/|GrabMyBooks]] extension de Firefox qui permet de charger des pages Internet, des liens rss et similaires et les compiler en un ou plusieurs livres et journaux. <|> rss

56 Élision de l’article devant un mot commençant par une voyelle. => <note tip>Le script  (bash) suivant utilise [[calibre|Calibre]] et permet de convertir automatiquement un dossier de ebooks en choisissant le format de sortie, et en [[multithreading|multithreading]].</note> <|> de  => suggestions : ['d’']
56 Mot inconnu : ebooks => <note tip>Le script  (bash) suivant utilise [[calibre|Calibre]] et permet de convertir automatiquement un dossier de ebooks en choisissant le format de sortie, et en [[multithreading|multithreading]].</note> <|> ebooks

58 Guillemets typographiques ouvrants. => <file bash "calibre-convert-ebook.sh"> <|> " => suggestions : ['«\xa0', '“']
58 Guillemets typographiques fermants. => <file bash "calibre-convert-ebook.sh"> <|> " => suggestions : ['\xa0»', '”']

61 Guillemets typographiques ouvrants. => commande="ebook-convert" <|> " => suggestions : ['«\xa0', '“']
61 Mot inconnu : ebook-convert => commande="ebook-convert" <|> ebook-convert
61 Guillemets typographiques fermants. => commande="ebook-convert" <|> " => suggestions : ['\xa0»', '”']

62 Mot inconnu : which => which "$commande" > /dev/null 2>&1  <|> which
62 Guillemets typographiques fermants. => which "$commande" > /dev/null 2>&1  <|> " => suggestions : ['\xa0»', '”']

63 Pas d’espace après ce signe. => if [ $? -ne 0 ]; then <|> [  => suggestions : ['[']
63 Pas d’espace avant ce signe. => if [ $? -ne 0 ]; then <|>  ] => suggestions : [']']
63 Mot inconnu : then => if [ $? -ne 0 ]; then <|> then

68 Mot inconnu : tput => GREEN=$(tput setaf 2) <|> tput
68 Mot inconnu : setaf => GREEN=$(tput setaf 2) <|> setaf

69 Mot inconnu : tput => NORMAL=$(tput sgr0) <|> tput
69 Mot inconnu : sgr0 => NORMAL=$(tput sgr0) <|> sgr0

70 Mot inconnu : declare => declare -A fmt_ary <|> declare
70 Il manque un espace à côté du tiret. => declare -A fmt_ary <|>  - => suggestions : [' – ', ' — ']
70 Mot inconnu : fmt_ary => declare -A fmt_ary <|> fmt_ary

71 Mot inconnu : fmt_ary => fmt_ary["epub"]="Standard ebook format" <|> fmt_ary
71 Guillemets typographiques ouvrants. => fmt_ary["epub"]="Standard ebook format" <|> " => suggestions : ['«\xa0', '“']
71 Mot inconnu : epub => fmt_ary["epub"]="Standard ebook format" <|> epub
71 Guillemets typographiques fermants. => fmt_ary["epub"]="Standard ebook format" <|> " => suggestions : ['\xa0»', '”']
71 Guillemets typographiques ouvrants. => fmt_ary["epub"]="Standard ebook format" <|> " => suggestions : ['«\xa0', '“']
71 Mot inconnu : ebook => fmt_ary["epub"]="Standard ebook format" <|> ebook
71 Guillemets typographiques fermants. => fmt_ary["epub"]="Standard ebook format" <|> " => suggestions : ['\xa0»', '”']

72 Mot inconnu : fmt_ary => fmt_ary["mobi"]="Mobipocket format" <|> fmt_ary
72 Guillemets typographiques ouvrants. => fmt_ary["mobi"]="Mobipocket format" <|> " => suggestions : ['«\xa0', '“']
72 Mot inconnu : mobi => fmt_ary["mobi"]="Mobipocket format" <|> mobi
72 Guillemets typographiques fermants. => fmt_ary["mobi"]="Mobipocket format" <|> " => suggestions : ['\xa0»', '”']
72 Guillemets typographiques ouvrants. => fmt_ary["mobi"]="Mobipocket format" <|> " => suggestions : ['«\xa0', '“']
72 Mot inconnu : Mobipocket => fmt_ary["mobi"]="Mobipocket format" <|> mobipocket
72 Guillemets typographiques fermants. => fmt_ary["mobi"]="Mobipocket format" <|> " => suggestions : ['\xa0»', '”']

73 Mot inconnu : fmt_ary => fmt_ary["azw3"]="Amazon Kindle format" <|> fmt_ary
73 Guillemets typographiques ouvrants. => fmt_ary["azw3"]="Amazon Kindle format" <|> " => suggestions : ['«\xa0', '“']
73 Mot inconnu : azw3 => fmt_ary["azw3"]="Amazon Kindle format" <|> azw3
73 Guillemets typographiques fermants. => fmt_ary["azw3"]="Amazon Kindle format" <|> " => suggestions : ['\xa0»', '”']
73 Guillemets typographiques ouvrants. => fmt_ary["azw3"]="Amazon Kindle format" <|> " => suggestions : ['«\xa0', '“']
73 Mot inconnu : Kindle => fmt_ary["azw3"]="Amazon Kindle format" <|> kindle
73 Guillemets typographiques fermants. => fmt_ary["azw3"]="Amazon Kindle format" <|> " => suggestions : ['\xa0»', '”']

74 Mot inconnu : fmt_ary => fmt_ary["docx"]="Microsoft Word format" <|> fmt_ary
74 Guillemets typographiques ouvrants. => fmt_ary["docx"]="Microsoft Word format" <|> " => suggestions : ['«\xa0', '“']
74 Mot inconnu : docx => fmt_ary["docx"]="Microsoft Word format" <|> docx
74 Guillemets typographiques fermants. => fmt_ary["docx"]="Microsoft Word format" <|> " => suggestions : ['\xa0»', '”']
74 Guillemets typographiques ouvrants. => fmt_ary["docx"]="Microsoft Word format" <|> " => suggestions : ['«\xa0', '“']
74 Mot inconnu : Word => fmt_ary["docx"]="Microsoft Word format" <|> word
74 Guillemets typographiques fermants. => fmt_ary["docx"]="Microsoft Word format" <|> " => suggestions : ['\xa0»', '”']

75 Mot inconnu : fmt_ary => fmt_ary["fb2"]="Fiction book format" <|> fmt_ary
75 Guillemets typographiques ouvrants. => fmt_ary["fb2"]="Fiction book format" <|> " => suggestions : ['«\xa0', '“']
75 Mot inconnu : fb2 => fmt_ary["fb2"]="Fiction book format" <|> fb2
75 Guillemets typographiques fermants. => fmt_ary["fb2"]="Fiction book format" <|> " => suggestions : ['\xa0»', '”']
75 Guillemets typographiques ouvrants. => fmt_ary["fb2"]="Fiction book format" <|> " => suggestions : ['«\xa0', '“']
75 Mot inconnu : book => fmt_ary["fb2"]="Fiction book format" <|> book
75 Guillemets typographiques fermants. => fmt_ary["fb2"]="Fiction book format" <|> " => suggestions : ['\xa0»', '”']

76 Mot inconnu : fmt_ary => fmt_ary["htmlz"]="HTML zip ebook format" <|> fmt_ary
76 Guillemets typographiques ouvrants. => fmt_ary["htmlz"]="HTML zip ebook format" <|> " => suggestions : ['«\xa0', '“']
76 Mot inconnu : htmlz => fmt_ary["htmlz"]="HTML zip ebook format" <|> htmlz
76 Guillemets typographiques fermants. => fmt_ary["htmlz"]="HTML zip ebook format" <|> " => suggestions : ['\xa0»', '”']
76 Guillemets typographiques ouvrants. => fmt_ary["htmlz"]="HTML zip ebook format" <|> " => suggestions : ['«\xa0', '“']
76 Mot inconnu : ebook => fmt_ary["htmlz"]="HTML zip ebook format" <|> ebook
76 Guillemets typographiques fermants. => fmt_ary["htmlz"]="HTML zip ebook format" <|> " => suggestions : ['\xa0»', '”']

77 Mot inconnu : fmt_ary => fmt_ary["lit"]="Microsoft's native format" <|> fmt_ary
77 Guillemets typographiques ouvrants. => fmt_ary["lit"]="Microsoft's native format" <|> " => suggestions : ['«\xa0', '“']
77 Guillemets typographiques fermants. => fmt_ary["lit"]="Microsoft's native format" <|> " => suggestions : ['\xa0»', '”']
77 Guillemets typographiques ouvrants. => fmt_ary["lit"]="Microsoft's native format" <|> " => suggestions : ['«\xa0', '“']
77 Mot inconnu : Microsoft's => fmt_ary["lit"]="Microsoft's native format" <|> microsoft's
77 Guillemets typographiques fermants. => fmt_ary["lit"]="Microsoft's native format" <|> " => suggestions : ['\xa0»', '”']

78 Mot inconnu : fmt_ary => fmt_ary["lrf"]="Sony's proprietary format" <|> fmt_ary
78 Guillemets typographiques ouvrants. => fmt_ary["lrf"]="Sony's proprietary format" <|> " => suggestions : ['«\xa0', '“']
78 Mot inconnu : lrf => fmt_ary["lrf"]="Sony's proprietary format" <|> lrf
78 Guillemets typographiques fermants. => fmt_ary["lrf"]="Sony's proprietary format" <|> " => suggestions : ['\xa0»', '”']
78 Guillemets typographiques ouvrants. => fmt_ary["lrf"]="Sony's proprietary format" <|> " => suggestions : ['«\xa0', '“']
78 Mot inconnu : Sony's => fmt_ary["lrf"]="Sony's proprietary format" <|> sony's
78 Mot inconnu : proprietary => fmt_ary["lrf"]="Sony's proprietary format" <|> proprietary
78 Guillemets typographiques fermants. => fmt_ary["lrf"]="Sony's proprietary format" <|> " => suggestions : ['\xa0»', '”']

79 Mot inconnu : fmt_ary => fmt_ary["pdb"]="Palm Doc ebook format" <|> fmt_ary
79 Guillemets typographiques ouvrants. => fmt_ary["pdb"]="Palm Doc ebook format" <|> " => suggestions : ['«\xa0', '“']
79 Mot inconnu : pdb => fmt_ary["pdb"]="Palm Doc ebook format" <|> pdb
79 Guillemets typographiques fermants. => fmt_ary["pdb"]="Palm Doc ebook format" <|> " => suggestions : ['\xa0»', '”']
79 Guillemets typographiques ouvrants. => fmt_ary["pdb"]="Palm Doc ebook format" <|> " => suggestions : ['«\xa0', '“']
79 Mot inconnu : Palm => fmt_ary["pdb"]="Palm Doc ebook format" <|> palm
79 Mot inconnu : ebook => fmt_ary["pdb"]="Palm Doc ebook format" <|> ebook
79 Guillemets typographiques fermants. => fmt_ary["pdb"]="Palm Doc ebook format" <|> " => suggestions : ['\xa0»', '”']

80 Mot inconnu : fmt_ary => fmt_ary["pdf"]="Portable document format" <|> fmt_ary
80 Guillemets typographiques ouvrants. => fmt_ary["pdf"]="Portable document format" <|> " => suggestions : ['«\xa0', '“']
80 Guillemets typographiques fermants. => fmt_ary["pdf"]="Portable document format" <|> " => suggestions : ['\xa0»', '”']
80 Guillemets typographiques ouvrants. => fmt_ary["pdf"]="Portable document format" <|> " => suggestions : ['«\xa0', '“']
80 Guillemets typographiques fermants. => fmt_ary["pdf"]="Portable document format" <|> " => suggestions : ['\xa0»', '”']

81 Mot inconnu : fmt_ary => fmt_ary["pmlz"]="Palm markup language zip format" <|> fmt_ary
81 Guillemets typographiques ouvrants. => fmt_ary["pmlz"]="Palm markup language zip format" <|> " => suggestions : ['«\xa0', '“']
81 Mot inconnu : pmlz => fmt_ary["pmlz"]="Palm markup language zip format" <|> pmlz
81 Guillemets typographiques fermants. => fmt_ary["pmlz"]="Palm markup language zip format" <|> " => suggestions : ['\xa0»', '”']
81 Guillemets typographiques ouvrants. => fmt_ary["pmlz"]="Palm markup language zip format" <|> " => suggestions : ['«\xa0', '“']
81 Mot inconnu : Palm => fmt_ary["pmlz"]="Palm markup language zip format" <|> palm
81 Mot inconnu : markup => fmt_ary["pmlz"]="Palm markup language zip format" <|> markup
81 Mot inconnu : language => fmt_ary["pmlz"]="Palm markup language zip format" <|> language
81 Guillemets typographiques fermants. => fmt_ary["pmlz"]="Palm markup language zip format" <|> " => suggestions : ['\xa0»', '”']

82 Mot inconnu : fmt_ary => fmt_ary["rb"]="Rocket ebook format" <|> fmt_ary
82 Guillemets typographiques ouvrants. => fmt_ary["rb"]="Rocket ebook format" <|> " => suggestions : ['«\xa0', '“']
82 Mot inconnu : rb => fmt_ary["rb"]="Rocket ebook format" <|> rb
82 Guillemets typographiques fermants. => fmt_ary["rb"]="Rocket ebook format" <|> " => suggestions : ['\xa0»', '”']
82 Guillemets typographiques ouvrants. => fmt_ary["rb"]="Rocket ebook format" <|> " => suggestions : ['«\xa0', '“']
82 Mot inconnu : ebook => fmt_ary["rb"]="Rocket ebook format" <|> ebook
82 Guillemets typographiques fermants. => fmt_ary["rb"]="Rocket ebook format" <|> " => suggestions : ['\xa0»', '”']

83 Mot inconnu : fmt_ary => fmt_ary["rtf"]="Rich text format" <|> fmt_ary
83 Guillemets typographiques ouvrants. => fmt_ary["rtf"]="Rich text format" <|> " => suggestions : ['«\xa0', '“']
83 Mot inconnu : rtf => fmt_ary["rtf"]="Rich text format" <|> rtf
83 Guillemets typographiques fermants. => fmt_ary["rtf"]="Rich text format" <|> " => suggestions : ['\xa0»', '”']
83 Guillemets typographiques ouvrants. => fmt_ary["rtf"]="Rich text format" <|> " => suggestions : ['«\xa0', '“']
83 Mot inconnu : Rich => fmt_ary["rtf"]="Rich text format" <|> rich
83 Mot inconnu : text => fmt_ary["rtf"]="Rich text format" <|> text
83 Guillemets typographiques fermants. => fmt_ary["rtf"]="Rich text format" <|> " => suggestions : ['\xa0»', '”']

84 Mot inconnu : fmt_ary => fmt_ary["snb"]="Shanda Bambook format" <|> fmt_ary
84 Guillemets typographiques ouvrants. => fmt_ary["snb"]="Shanda Bambook format" <|> " => suggestions : ['«\xa0', '“']
84 Mot inconnu : snb => fmt_ary["snb"]="Shanda Bambook format" <|> snb
84 Guillemets typographiques fermants. => fmt_ary["snb"]="Shanda Bambook format" <|> " => suggestions : ['\xa0»', '”']
84 Guillemets typographiques ouvrants. => fmt_ary["snb"]="Shanda Bambook format" <|> " => suggestions : ['«\xa0', '“']
84 Mot inconnu : Shanda => fmt_ary["snb"]="Shanda Bambook format" <|> shanda
84 Mot inconnu : Bambook => fmt_ary["snb"]="Shanda Bambook format" <|> bambook
84 Guillemets typographiques fermants. => fmt_ary["snb"]="Shanda Bambook format" <|> " => suggestions : ['\xa0»', '”']

85 Mot inconnu : fmt_ary => fmt_ary["tcr"]="EPOC ebook file format" <|> fmt_ary
85 Guillemets typographiques ouvrants. => fmt_ary["tcr"]="EPOC ebook file format" <|> " => suggestions : ['«\xa0', '“']
85 Mot inconnu : tcr => fmt_ary["tcr"]="EPOC ebook file format" <|> tcr
85 Guillemets typographiques fermants. => fmt_ary["tcr"]="EPOC ebook file format" <|> " => suggestions : ['\xa0»', '”']
85 Guillemets typographiques ouvrants. => fmt_ary["tcr"]="EPOC ebook file format" <|> " => suggestions : ['«\xa0', '“']
85 Mot inconnu : EPOC => fmt_ary["tcr"]="EPOC ebook file format" <|> epoc
85 Mot inconnu : ebook => fmt_ary["tcr"]="EPOC ebook file format" <|> ebook
85 Guillemets typographiques fermants. => fmt_ary["tcr"]="EPOC ebook file format" <|> " => suggestions : ['\xa0»', '”']

86 Mot inconnu : fmt_ary => fmt_ary["txt"]="Simple text format" <|> fmt_ary
86 Guillemets typographiques ouvrants. => fmt_ary["txt"]="Simple text format" <|> " => suggestions : ['«\xa0', '“']
86 Mot inconnu : txt => fmt_ary["txt"]="Simple text format" <|> txt
86 Guillemets typographiques fermants. => fmt_ary["txt"]="Simple text format" <|> " => suggestions : ['\xa0»', '”']
86 Guillemets typographiques ouvrants. => fmt_ary["txt"]="Simple text format" <|> " => suggestions : ['«\xa0', '“']
86 Mot inconnu : text => fmt_ary["txt"]="Simple text format" <|> text
86 Guillemets typographiques fermants. => fmt_ary["txt"]="Simple text format" <|> " => suggestions : ['\xa0»', '”']

87 Mot inconnu : fmt_ary => fmt_ary["txtz"]="TXT zip ebook format" <|> fmt_ary
87 Guillemets typographiques ouvrants. => fmt_ary["txtz"]="TXT zip ebook format" <|> " => suggestions : ['«\xa0', '“']
87 Mot inconnu : txtz => fmt_ary["txtz"]="TXT zip ebook format" <|> txtz
87 Guillemets typographiques fermants. => fmt_ary["txtz"]="TXT zip ebook format" <|> " => suggestions : ['\xa0»', '”']
87 Guillemets typographiques ouvrants. => fmt_ary["txtz"]="TXT zip ebook format" <|> " => suggestions : ['«\xa0', '“']
87 Mot inconnu : TXT => fmt_ary["txtz"]="TXT zip ebook format" <|> txt
87 Mot inconnu : ebook => fmt_ary["txtz"]="TXT zip ebook format" <|> ebook
87 Guillemets typographiques fermants. => fmt_ary["txtz"]="TXT zip ebook format" <|> " => suggestions : ['\xa0»', '”']

88 Mot inconnu : fmt_ary => fmt_ary["zip"]="Archive file format" <|> fmt_ary
88 Guillemets typographiques ouvrants. => fmt_ary["zip"]="Archive file format" <|> " => suggestions : ['«\xa0', '“']
88 Guillemets typographiques fermants. => fmt_ary["zip"]="Archive file format" <|> " => suggestions : ['\xa0»', '”']
88 Guillemets typographiques ouvrants. => fmt_ary["zip"]="Archive file format" <|> " => suggestions : ['«\xa0', '“']
88 Guillemets typographiques fermants. => fmt_ary["zip"]="Archive file format" <|> " => suggestions : ['\xa0»', '”']

90 Mot inconnu : displaying => # displaying all available formats aligned, and asks... <|> displaying
90 Mot inconnu : all => # displaying all available formats aligned, and asks... <|> all
90 Mot inconnu : available => # displaying all available formats aligned, and asks... <|> available
90 Mot inconnu : aligned => # displaying all available formats aligned, and asks... <|> aligned
90 Mot inconnu : and => # displaying all available formats aligned, and asks... <|> and
90 Mot inconnu : asks => # displaying all available formats aligned, and asks... <|> asks
90 Typographie : points de suspension. Utilisez le caractère dédié. => # displaying all available formats aligned, and asks... <|> ... => suggestions : ['…']

91 Il manque un espace. => for f in "${!fmt_ary[@]}"; do <|> fmt_ary => suggestions : [' fmt_ary']
91 Mot inconnu : fmt_ary => for f in "${!fmt_ary[@]}"; do <|> fmt_ary
92 Mot inconnu : aligns => 	# bash aligns even with non printed chars... need a trick around <|> aligns
92 Mot inconnu : even => 	# bash aligns even with non printed chars... need a trick around <|> even
92 Mot inconnu : with => 	# bash aligns even with non printed chars... need a trick around <|> with
92 Mot inconnu : printed => 	# bash aligns even with non printed chars... need a trick around <|> printed
92 Typographie : points de suspension. Utilisez le caractère dédié. => 	# bash aligns even with non printed chars... need a trick around <|> ... => suggestions : ['…']
92 Mot inconnu : need => 	# bash aligns even with non printed chars... need a trick around <|> need
92 Mot inconnu : around => 	# bash aligns even with non printed chars... need a trick around <|> around

93 Mot inconnu : printf => 	printf "%$((7+${#GREEN}+${#NORMAL}))s %s\n" "[$GREEN${f^^}$NORMAL]" "${fmt_ary[$f]}" <|> printf
93 Il manque un espace. => 	printf "%$((7+${#GREEN}+${#NORMAL}))s %s\n" "[$GREEN${f^^}$NORMAL]" "${fmt_ary[$f]}" <|> s => suggestions : [' s']
93 Guillemets typographiques fermants. => 	printf "%$((7+${#GREEN}+${#NORMAL}))s %s\n" "[$GREEN${f^^}$NORMAL]" "${fmt_ary[$f]}" <|> " => suggestions : ['\xa0»', '”']
93 Mot inconnu : fmt_ary => 	printf "%$((7+${#GREEN}+${#NORMAL}))s %s\n" "[$GREEN${f^^}$NORMAL]" "${fmt_ary[$f]}" <|> fmt_ary

94 Mot inconnu : done => done | sort <|> done

95 Mot inconnu : line => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> line
95 Mot inconnu : with => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> with
95 Mot inconnu : times => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> times
95 Mot inconnu : the => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> the
95 Mot inconnu : printf => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> printf
95 Mot inconnu : pads => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> pads
95 Mot inconnu : it => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> it
95 Mot inconnu : with => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> with
95 Mot inconnu : spaces => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> spaces
95 Mot inconnu : it => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> it
95 Mot inconnu : to => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> to
95 Mot inconnu : the => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> the
95 Mot inconnu : desired => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> desired
95 Mot inconnu : symbol => # line with x times the same char '-'. printf pads it with spaces, tr sets it to the desired symbol <|> symbol

96 Mot inconnu : printf => printf '%30s\n' | tr ' ' '-' <|> printf
96 Il manque un espace. => printf '%30s\n' | tr ' ' '-' <|> 30s => suggestions : [' 30s']
96 Guillemets typographiques fermants. => printf '%30s\n' | tr ' ' '-' <|> ' => suggestions : ['”', '’', '›']

97 Mot inconnu : echo => echo -n "Enter output file format and press [ENTER]: " <|> echo
97 Il manque un espace à côté du tiret. => echo -n "Enter output file format and press [ENTER]: " <|>  - => suggestions : [' – ', ' — ']
97 Guillemets typographiques ouvrants. => echo -n "Enter output file format and press [ENTER]: " <|> " => suggestions : ['«\xa0', '“']
97 Mot inconnu : and => echo -n "Enter output file format and press [ENTER]: " <|> and
97 Mot inconnu : press => echo -n "Enter output file format and press [ENTER]: " <|> press
97 Guillemets fermants. => echo -n "Enter output file format and press [ENTER]: " <|>  " => suggestions : ['\xa0»', '”']

98 Mot inconnu : read => read format <|> read

99 Mot inconnu : to => # force to lowercase from now on <|> to
99 Mot inconnu : lowercase => # force to lowercase from now on <|> lowercase
99 Mot inconnu : from => # force to lowercase from now on <|> from
99 Mot inconnu : now => # force to lowercase from now on <|> now

100 Une de ces ponctuations est superflue. => format="${format,,}" <|> ,, => suggestions : [',', ',']

102 Mot inconnu : checking => # checking if format available or not, terminates otherwise <|> checking
102 Mot inconnu : available => # checking if format available or not, terminates otherwise <|> available
102 Mot inconnu : not => # checking if format available or not, terminates otherwise <|> not
102 Mot inconnu : terminates => # checking if format available or not, terminates otherwise <|> terminates
102 Mot inconnu : otherwise => # checking if format available or not, terminates otherwise <|> otherwise

103 Pas d’espace après ce signe. => if [ -z "${fmt_ary[$format]}" ]; then <|> [  => suggestions : ['[']
103 Mot inconnu : fmt_ary => if [ -z "${fmt_ary[$format]}" ]; then <|> fmt_ary
103 Pas d’espace avant ce signe. => if [ -z "${fmt_ary[$format]}" ]; then <|>  ] => suggestions : [']']
103 Mot inconnu : then => if [ -z "${fmt_ary[$format]}" ]; then <|> then

104 Mot inconnu : echo => 	echo -e "Format \e[31m[$format]\e[0m unavailable or unknown" <|> echo
104 Il manque un espace à côté du tiret. => 	echo -e "Format \e[31m[$format]\e[0m unavailable or unknown" <|>  - => suggestions : [' – ', ' — ']
104 Guillemets typographiques ouvrants. => 	echo -e "Format \e[31m[$format]\e[0m unavailable or unknown" <|> " => suggestions : ['«\xa0', '“']
104 Mot inconnu : unavailable => 	echo -e "Format \e[31m[$format]\e[0m unavailable or unknown" <|> unavailable
104 Mot inconnu : unknown => 	echo -e "Format \e[31m[$format]\e[0m unavailable or unknown" <|> unknown
104 Guillemets typographiques fermants. => 	echo -e "Format \e[31m[$format]\e[0m unavailable or unknown" <|> " => suggestions : ['\xa0»', '”']

108 Mot inconnu : multithreading => # multithreading function <|> multithreading
108 Mot inconnu : function => # multithreading function <|> function

109 Mot inconnu : function => function wait_jobs_down() { <|> function
109 Mot inconnu : wait_jobs_down => function wait_jobs_down() { <|> wait_jobs_down

110 Mot inconnu : nr_jobs => 	local nr_jobs <|> nr_jobs

111 Pas d’espace après ce signe. => 	if [[ -z $1 ]]; then <|> [  => suggestions : ['[']
111 Pas d’espace avant ce signe. => 	if [[ -z $1 ]]; then <|>  ] => suggestions : [']']
111 Mot inconnu : then => 	if [[ -z $1 ]]; then <|> then

112 Mot inconnu : nr_jobs => 		nr_jobs=$(nproc) <|> nr_jobs
112 Mot inconnu : nproc => 		nr_jobs=$(nproc) <|> nproc

113 Mot inconnu : else => 	else <|> else

114 Mot inconnu : nr_jobs => 		nr_jobs=$1 <|> nr_jobs

117 Mot inconnu : while => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|> while
117 Pas d’espace après ce signe. => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|> [  => suggestions : ['[']
117 Il manque un espace à côté du tiret. => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|>  - => suggestions : [' – ', ' — ']
117 Mot inconnu : wc => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|> wc
117 Il manque un espace à côté du tiret. => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|>  - => suggestions : [' – ', ' — ']
117 Mot inconnu : ge => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|> ge
117 Mot inconnu : nr_jobs => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|> nr_jobs
117 Pas d’espace avant ce signe. => 	while [[ $(jobs -p | wc -l) -ge $nr_jobs ]]; do <|>  ] => suggestions : [']']

118 Mot inconnu : sleep => 		sleep 0.1 <|> sleep

119 Mot inconnu : done => 	done <|> done

122 Mot inconnu : of => # conversion of all files in current directory <|> of
122 Mot inconnu : all => # conversion of all files in current directory <|> all
122 Mot inconnu : current => # conversion of all files in current directory <|> current
122 Mot inconnu : directory => # conversion of all files in current directory <|> directory

123 Mot inconnu : epub => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> epub
123 Il manque un espace. => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> azw3 => suggestions : [' azw3']
123 Mot inconnu : azw3 => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> azw3
123 Mot inconnu : azw => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> azw
123 Il manque un espace. => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> prc => suggestions : [' prc']
123 Mot inconnu : prc => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> prc
123 Mot inconnu : mobi => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> mobi
123 Il manque un espace. => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> txt => suggestions : [' txt']
123 Mot inconnu : txt => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> txt
123 Il manque un espace. => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> docx => suggestions : [' docx']
123 Mot inconnu : docx => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> docx
123 Mot inconnu : fb2 => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> fb2
123 Il manque un espace. => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> txtz => suggestions : [' txtz']
123 Mot inconnu : txtz => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> txtz
123 Mot inconnu : htmlz => for file in *.{epub,azw3,azw,prc,mobi,txt,doc,docx,fb2,txtz,htmlz}; do <|> htmlz

126 Mot inconnu : done => done <|> done
131 Mot inconnu : gcstar =>   * [[gcstar]] : Projet mort. un gestionnaire de collections capable de gérer notamment vos e-books , et de rechercher les informations sur internet. <|> gcstar
131 Après un point, une majuscule est généralement requise. =>   * [[gcstar]] : Projet mort. un gestionnaire de collections capable de gérer notamment vos e-books , et de rechercher les informations sur internet. <|> un => suggestions : ['Un']
131 Pas d’espace avant une virgule. =>   * [[gcstar]] : Projet mort. un gestionnaire de collections capable de gérer notamment vos e-books , et de rechercher les informations sur internet. <|>  , => suggestions : [',']
132 Mot inconnu : Alexandria =>   * [[http://tellico-project.org|Tellico]] : pour gérer une collection d'ouvrages (plus de fonctionnalités que Alexandria, pour KDE essentiellement) <|> alexandria
132 Mot inconnu : KDE =>   * [[http://tellico-project.org|Tellico]] : pour gérer une collection d'ouvrages (plus de fonctionnalités que Alexandria, pour KDE essentiellement) <|> kde

135 Mot inconnu : ebook => ===== Les appareils mobiles de lecture d'ebook compatibles Linux ===== <|> ebook

146 Typographie : points de suspension. Utilisez le caractère dédié. => <note important>Ce tableau ne donne que des informations indicatives et peut renfermer des erreurs dans le temps (ajout ou suppression de format supportés par le matériel, support amélioré ou non par Calibre...). Lorsqu'un choix de matériel ou de logiciel doit se faire, il convient de confirmer les informations ci-dessous par une consultation des informations actualisées en consultant les sites respectifs.</note> <|> ... => suggestions : ['…']

149 Mot inconnu : ePub => | ^ Support [[ePub]] ^Compatible [[Calibre]] | <|> epub

166 Mot inconnu : FIXME => ^ FIXME | | | <|> fixme

169 Guillemets typographiques ouvrants. => =====Pages avec le tag "ebook"===== <|> " => suggestions : ['«\xa0', '“']
169 Mot inconnu : ebook => =====Pages avec le tag "ebook"===== <|> ebook
169 Guillemets typographiques fermants. => =====Pages avec le tag "ebook"===== <|> " => suggestions : ['\xa0»', '”']
178 Mot inconnu : MobileRead =>   * [[https://www.mobileread.com/forums/forumdisplay.php?f=160|forum francophone de MobileRead]] (fr) <|> mobileread
179 Mot inconnu : MobileRead =>   * [[http://www.mobileread.com|Site MobileRead]] (en) <|> mobileread
