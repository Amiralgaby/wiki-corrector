2 Mot inconnu : ipython [[7:14]] => ====== ipython ====== <|> ipython
2 Mot inconnu : ipython [[7:14]] => ====== ipython ====== <|> ipython


3 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']
3 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). [[0:1]] =>   <|>   => suggestions : ['']


4 Mot inconnu : ipython [[13:20]] => Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]] <|> ipython
4 Mot inconnu : ipython [[13:20]] => Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]] <|> ipython
4 Mot inconnu : Edgy [[26:30]] => Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]] <|> edgy
4 Mot inconnu : Edgy [[26:30]] => Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]] <|> edgy
4 Mot inconnu : ipython [[81:88]] => Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]] <|> ipython
4 Mot inconnu : ipython [[81:88]] => Pour trouver ipython pour Edgy et supérieur vous pouvez suivre ce lien : [[apt://ipython]] <|> ipython


6 Mot inconnu : Ipython [[0:7]] => Ipython est un interpréteur python amélioré qui apporte un pack de nouvelles fonctions sympa que je vais vous lister succinctement. <|> ipython
6 Mot inconnu : Ipython [[0:7]] => Ipython est un interpréteur python amélioré qui apporte un pack de nouvelles fonctions sympa que je vais vous lister succinctement. <|> ipython
7 Mot inconnu : TAB [[35:38]] =>   * Auto-complétion avec la touche TAB <|> tab
7 Mot inconnu : TAB [[35:38]] =>   * Auto-complétion avec la touche TAB <|> tab
17 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[4:12]] =>   * Contient des raccourcis et alias <|> contient => suggestions : ['Contiens']
17 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. [[4:12]] =>   * Contient des raccourcis et alias <|> contient => suggestions : ['Contiens']
21 Mot inconnu : Ipython [[4:11]] =>   * Ipython est documenté, j'ai trouvé ces informations en entrant telle une commande "?" <|> ipython
21 Mot inconnu : Ipython [[4:11]] =>   * Ipython est documenté, j'ai trouvé ces informations en entrant telle une commande "?" <|> ipython
21 Guillemets fermants. [[85:87]] =>   * Ipython est documenté, j'ai trouvé ces informations en entrant telle une commande "?" <|>  " => suggestions : ['\xa0»', '”']
21 Guillemets fermants. [[85:87]] =>   * Ipython est documenté, j'ai trouvé ces informations en entrant telle une commande "?" <|>  " => suggestions : ['\xa0»', '”']
21 Guillemets typographiques fermants. [[88:89]] =>   * Ipython est documenté, j'ai trouvé ces informations en entrant telle une commande "?" <|> " => suggestions : ['\xa0»', '”']
22 Mot inconnu : Ipython [[4:11]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|> ipython
22 Mot inconnu : Ipython [[4:11]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|> ipython
22 Guillemets fermants. [[81:83]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|>  " => suggestions : ['\xa0»', '”']
22 Guillemets fermants. [[81:83]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|>  " => suggestions : ['\xa0»', '”']
22 Guillemets typographiques fermants. [[84:85]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|> " => suggestions : ['\xa0»', '”']
22 Guillemets fermants. [[88:90]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|>  " => suggestions : ['\xa0»', '”']
22 Guillemets fermants. [[88:90]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|>  " => suggestions : ['\xa0»', '”']
22 Guillemets typographiques fermants. [[92:93]] =>   * Ipython permet de facilement trouver les docs des objets en les accolant à un "?" ou "??" pour une aide plus détaillée (avec la doc string). <|> " => suggestions : ['\xa0»', '”']


25 Typographie : points de suspension. Utilisez le caractère dédié. [[33:36]] => et encore bien d'autres fonctions... espérons que le prompt de python 3.0 ait les principaux avantages de ce prompt avec prioritairement la documentation et l'auto-complétion. <|> ... => suggestions : ['…']
25 Typographie : points de suspension. Utilisez le caractère dédié. [[33:36]] => et encore bien d'autres fonctions... espérons que le prompt de python 3.0 ait les principaux avantages de ce prompt avec prioritairement la documentation et l'auto-complétion. <|> ... => suggestions : ['…']

