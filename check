#!/usr/bin/env python3

import sys
import os
from pathlib import Path
from os.path import join, isfile

import fnmatch

from wiki_c.checkers import (
    GrammalecteChecker,
    DokuwikiChecker,
    NotAllowedChecker,
    UrlChecker,
    ShellCodeChecker,
)

DIR_ORIGIN = 'cache'


class FakeMessage:
    def __init__(self, line, message):
        self.line = line
        self.message = message


def detect_redirection(content):
    if content.startswith('\n~~REDIRECT>'):
        return True
    return False


def analyse_file(list_checkers, root, _file, len_dir_cache, full=False):
    if not _file.endswith('.dokuwiki'):
        return
    if not isfile(join(root, _file)):
        return
    content = Path(join(root, _file)).read_text(encoding='UTF-8')

    if detect_redirection(content):
        return

    for checker in list_checkers:
        checker.set_path(root, _file, len_dir_cache)
        if checker.exist():
            continue
        checker.parse(content)
        checker.write()


def walk(list_checkers, full=False):
    len_dir_cache = len(DIR_ORIGIN)
    for root, _dir, files in os.walk(DIR_ORIGIN):
        for _file in fnmatch.filter(files, '*'):
            analyse_file(list_checkers, root, _file, len_dir_cache, full)


if __name__ == '__main__':
    full = False

    if '-f' in sys.argv or '--full' in sys.argv:
        full = True

    list_checkers = [
        # UrlChecker(full),
        GrammalecteChecker(full),
        # NotAllowedChecker(full),
        # AptUrlChecker(full),
        # DokuwikiChecker(full),
        #ShellCodeChecker(full)
    ]

    # check if shellcheck is installed
    if any(isinstance(x, ShellCodeChecker) for x in list_checkers):
        from distutils.spawn import find_executable
        if find_executable("shellcheck") is None:
            print("You need to have the shellcheck binary installed to use this checker") 
            exit(-1)

    walk(list_checkers, full)
