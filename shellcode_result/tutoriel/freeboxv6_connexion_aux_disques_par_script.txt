
In /tmp/shellcheck_file line 5:
IFS=$'|'  
    ^--^ SC2039: In POSIX sh, $'..' is undefined.


In /tmp/shellcheck_file line 8:
while read line; do liste_dossier=$liste_dossier"$line""|"; done < fix
      ^--^ SC2162: read without -r will mangle backslashes.


In /tmp/shellcheck_file line 10:
choix_dossier=`zenity \
              ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                                                                                                  ^------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
choix_dossier=$(zenity \
--list \
--separator "|" \
--column "Choisisez le partage réseau Free à mo"nter" \
$liste"_dossier )


In /tmp/shellcheck_file line 16:
if [ $choix_dossier ]
     ^------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
if [ "$choix_dossier" ]


In /tmp/shellcheck_file line 18:
	chaine1=$( echo $choix_dossier | cut -d' ' -f1 )
                        ^------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	chaine1=$( echo "$choix_dossier" | cut -d' ' -f1 )


In /tmp/shellcheck_file line 19:
	chaine1=`echo $chaine1 | tr -d "[:space:]" `
                ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                      ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	chaine1=$(echo "$chaine1" | tr -d "[:space:]" )


In /tmp/shellcheck_file line 21:
	chaine2=$( echo $choix_dossier | cut -d' ' -f2 )
                        ^------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	chaine2=$( echo "$choix_dossier" | cut -d' ' -f2 )


In /tmp/shellcheck_file line 22:
	chaine2=`echo $chaine2 | tr -d "[:space:]" `
                ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                      ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	chaine2=$(echo "$chaine2" | tr -d "[:space:]" )


In /tmp/shellcheck_file line 24:
	chaine3=$( echo $choix_dossier | cut -d' ' -f3 )
                        ^------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	chaine3=$( echo "$choix_dossier" | cut -d' ' -f3 )


In /tmp/shellcheck_file line 25:
	chaine3=`echo $chaine3 | tr -d "[:space:]" `
                ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                      ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	chaine3=$(echo "$chaine3" | tr -d "[:space:]" )


In /tmp/shellcheck_file line 29:
	if [ $chaine2 ]
             ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	if [ "$chaine2" ]


In /tmp/shellcheck_file line 35:
	if [ $chaine3 ]
             ^------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	if [ "$chaine3" ]


In /tmp/shellcheck_file line 37:
		disque_dur=$chaine1"%20"$chaine2"%20"$chaine3
                                        ^------^ SC2027: The surrounding quotes actually unquote this. Remove or escape them.


In /tmp/shellcheck_file line 40:
	recherche=`echo $disque_dur | tr 'A-Z' 'a-z' `
                  ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.
                        ^---------^ SC2086: Double quote to prevent globbing and word splitting.
                                         ^---^ SC2019: Use '[:upper:]' to support accents and foreign alphabets.
                                               ^---^ SC2018: Use '[:lower:]' to support accents and foreign alphabets.

Did you mean: 
	recherche=$(echo "$disque_dur" | tr 'A-Z' 'a-z' )


In /tmp/shellcheck_file line 41:
	gvfs-mount -l | grep $recherche	
                             ^--------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	gvfs-mount -l | grep "$recherche"	


In /tmp/shellcheck_file line 46:
		if [ $? = 0 ]
                     ^-- SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.


In /tmp/shellcheck_file line 48:
			gvfs-mount smb://mafreebox.freebox.fr/$disque_dur
                                                              ^---------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
			gvfs-mount smb://mafreebox.freebox.fr/"$disque_dur"


In /tmp/shellcheck_file line 52:
		if [ $? = 0 ]
                     ^-- SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.


In /tmp/shellcheck_file line 54:
			gvfs-mount -u smb://mafreebox.freebox.fr/$disque_dur
                                                                 ^---------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
			gvfs-mount -u smb://mafreebox.freebox.fr/"$disque_dur"

For more information:
  https://www.shellcheck.net/wiki/SC2027 -- The surrounding quotes actually u...
  https://www.shellcheck.net/wiki/SC2039 -- In POSIX sh, $'..' is undefined.
  https://www.shellcheck.net/wiki/SC2018 -- Use '[:lower:]' to support accent...


