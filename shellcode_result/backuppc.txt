
In /tmp/shellcheck_file line 6:
/usr/sbin/etherwake $1
                    ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
/usr/sbin/etherwake "$1"


In /tmp/shellcheck_file line 8:
while [ $i = 0 -a $z -lt 15 ]
               ^-- SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.


In /tmp/shellcheck_file line 10:
        if smbclient -L $1 -U backup%mdpbupc>/dev/null
                        ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
        if smbclient -L "$1" -U backup%mdpbupc>/dev/null


In /tmp/shellcheck_file line 15:
z=z+1
  ^-^ SC2100: Use $((..)) for arithmetics, e.g. i=$((i + 2))

For more information:
  https://www.shellcheck.net/wiki/SC2100 -- Use $((..)) for arithmetics, e.g....
  https://www.shellcheck.net/wiki/SC2166 -- Prefer [ p ] && [ q ] as [ p -a q...
  https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing ...



In /tmp/shellcheck_file line 9:
cnt=$(ping -c 1 $1 | awk -F, '/received/{print $2*1}')
                ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
cnt=$(ping -c 1 "$1" | awk -F, '/received/{print $2*1}')


In /tmp/shellcheck_file line 13:
if [ $cnt -eq 0 ]; then
     ^--^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
if [ "$cnt" -eq 0 ]; then


In /tmp/shellcheck_file line 14:
    echo $cnt > $filename
         ^--^ SC2086: Double quote to prevent globbing and word splitting.
                ^-------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    echo "$cnt" > "$filename"


In /tmp/shellcheck_file line 28:
    sudo /usr/sbin/etherwake -i enp5s0 $1
                                       ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    sudo /usr/sbin/etherwake -i enp5s0 "$1"


In /tmp/shellcheck_file line 30:
    while [ $i = 0 -a $z -lt 18 ]
                   ^-- SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.


In /tmp/shellcheck_file line 32:
	count=$(ping -c 5 $1 | awk -F, '/received/{print $2*1}')
                          ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	count=$(ping -c 5 "$1" | awk -F, '/received/{print $2*1}')


In /tmp/shellcheck_file line 33:
	if [ $count -eq 0 ]; then
             ^----^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	if [ "$count" -eq 0 ]; then


In /tmp/shellcheck_file line 36:
		echo "$1 not up after `expr $min + 3` minutes... exiting"
                                      ^-------------^ SC2006: Use $(...) notation instead of legacy backticked `...`.
                                       ^--^ SC2003: expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].

Did you mean: 
		echo "$1 not up after $(expr $min + 3) minutes... exiting"


In /tmp/shellcheck_file line 45:
	z=z+1
          ^-^ SC2100: Use $((..)) for arithmetics, e.g. i=$((i + 2))


In /tmp/shellcheck_file line 48:
    echo $cnt > $filename
         ^--^ SC2086: Double quote to prevent globbing and word splitting.
                ^-------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    echo "$cnt" > "$filename"

For more information:
  https://www.shellcheck.net/wiki/SC2100 -- Use $((..)) for arithmetics, e.g....
  https://www.shellcheck.net/wiki/SC2166 -- Prefer [ p ] && [ q ] as [ p -a q...
  https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing ...



In /tmp/shellcheck_file line 26:
    if [ $i = $1 ]; then
         ^-- SC2086: Double quote to prevent globbing and word splitting.
              ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    if [ "$i" = "$1" ]; then


In /tmp/shellcheck_file line 38:
    /usr/bin/net rpc SHUTDOWN -f -I $host_name -U "$upwd" -t 1
                                    ^--------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    /usr/bin/net rpc SHUTDOWN -f -I "$host_name" -U "$upwd" -t 1


In /tmp/shellcheck_file line 44:
if [ -f $filename ]
        ^-------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
if [ -f "$filename" ]


In /tmp/shellcheck_file line 48:
    read laststate < $filename
    ^--^ SC2162: read without -r will mangle backslashes.
                     ^-------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    read laststate < "$filename"


In /tmp/shellcheck_file line 56:
if [ $2 = 1 ] # Successfull backup
     ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
if [ "$2" = 1 ] # Successfull backup


In /tmp/shellcheck_file line 59:
    if [ $laststate = 0 ]
         ^--------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    if [ "$laststate" = 0 ]


In /tmp/shellcheck_file line 63:
	/usr/bin/net rpc SHUTDOWN -f -I $host_name -U "$upwd" -t 30
                                        ^--------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
	/usr/bin/net rpc SHUTDOWN -f -I "$host_name" -U "$upwd" -t 30


In /tmp/shellcheck_file line 68:
elif [ $2 = 0 ] # backup error
       ^-- SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
elif [ "$2" = 0 ] # backup error


In /tmp/shellcheck_file line 78:
if [ -f $filename ]
        ^-------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
if [ -f "$filename" ]


In /tmp/shellcheck_file line 81:
    unlink $filename
           ^-------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
    unlink "$filename"

For more information:
  https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing ...
  https://www.shellcheck.net/wiki/SC2162 -- read without -r will mangle backs...


