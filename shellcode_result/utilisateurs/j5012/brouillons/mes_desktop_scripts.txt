
In /tmp/shellcheck_file line 1:
#!/usr/bin/env xdg-open
^-- SC1008: This shebang was unrecognized. ShellCheck only supports sh/bash/dash/ksh. Add a 'shell' directive to specify.


In /tmp/shellcheck_file line 2:
[Desktop Entry]
^-- SC1035: You need a space after the [ and before the ].
^-- SC1073: Couldn't parse this test expression. Fix to allow more checks.
         ^-- SC1072: Expected test to end here (don't wrap commands in []/[[]]). Fix any mentioned problems and try again.

For more information:
  https://www.shellcheck.net/wiki/SC1008 -- This shebang was unrecognized. Sh...
  https://www.shellcheck.net/wiki/SC1035 -- You need a space after the [ and ...
  https://www.shellcheck.net/wiki/SC1072 -- Expected test to end here (don't ...



In /tmp/shellcheck_file line 10:
    ls=`ls -ld "$PRG"`
       ^-------------^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
    ls=$(ls -ld "$PRG")


In /tmp/shellcheck_file line 11:
    link=`expr "$ls" : '^.*-> \(.*\)$' 2>/dev/null`
         ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
    link=$(expr "$ls" : '^.*-> \(.*\)$' 2>/dev/null)


In /tmp/shellcheck_file line 15:
	PRG="`dirname "$PRG"`/$link"
             ^--------------^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
	PRG="$(dirname "$PRG")/$link"


In /tmp/shellcheck_file line 19:
progdir=`dirname "$PRG"`
        ^--------------^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
progdir=$(dirname "$PRG")


In /tmp/shellcheck_file line 20:
APPNAME=`basename "$PRG"`
        ^---------------^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
APPNAME=$(basename "$PRG")


In /tmp/shellcheck_file line 23:
    . "$progdir/../etc/$APPNAME".conf
      ^-----------------------------^ SC1090: Can't follow non-constant source. Use a directive to specify location.


In /tmp/shellcheck_file line 29:
case "`uname`" in
      ^-----^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
case "$(uname)" in


In /tmp/shellcheck_file line 31:
        userdir="${default_mac_userdir}"
                 ^--------------------^ SC2154: default_mac_userdir is referenced but not assigned.


In /tmp/shellcheck_file line 34:
        userdir="${default_userdir}"
                 ^----------------^ SC2154: default_userdir is referenced but not assigned.


In /tmp/shellcheck_file line 48:
    . "${userdir}/etc/$APPNAME".conf
      ^----------------------------^ SC1090: Can't follow non-constant source. Use a directive to specify location.


In /tmp/shellcheck_file line 51:
if [ -n "$jdkhome" -a \! -d "$jdkhome" -a -d "$progdir/../$jdkhome" ]; then
                   ^-- SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.
                         ^-- SC2057: Unknown binary operator.
                                       ^-- SC2166: Prefer [ p ] && [ q ] as [ p -a q ] is not well defined.


In /tmp/shellcheck_file line 60:
    echo=echo
    ^--^ SC2209: Use var=$(command) to assign output (or quote to assign string).


In /tmp/shellcheck_file line 62:
  while read X; do
        ^--^ SC2162: read without -r will mangle backslashes.


In /tmp/shellcheck_file line 70:
    while read path; do
          ^--^ SC2162: read without -r will mangle backslashes.


In /tmp/shellcheck_file line 79:
clusters=`(cat "$progdir/../etc/$APPNAME".clusters; echo) | readClusters | absolutize_paths | tr '\012' ':'`
         ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
clusters=$((cat "$progdir/../etc/$APPNAME".clusters; echo) | readClusters | absolutize_paths | tr '\012' ':')


In /tmp/shellcheck_file line 81:
if [ ! -z "$extra_clusters" ] ; then
     ^-- SC2236: Use -n instead of ! -z.
           ^-------------^ SC2154: extra_clusters is referenced but not assigned.


In /tmp/shellcheck_file line 85:
nbexec=`echo "$progdir"/../platform*/lib/nbexec`
^----^ SC2034: nbexec appears unused. Verify use (or export if used externally).
       ^-- SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
nbexec=$(echo "$progdir"/../platform*/lib/nbexec)


In /tmp/shellcheck_file line 87:
case "`uname`" in
      ^-----^ SC2006: Use $(...) notation instead of legacy backticked `...`.

Did you mean: 
case "$(uname)" in


In /tmp/shellcheck_file line 96:
            ${default_options} \
            ^----------------^ SC2154: default_options is referenced but not assigned.
            ^----------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
            "${default_options}" \


In /tmp/shellcheck_file line 100:
       sh=sh
       ^-- SC2209: Use var=$(command) to assign output (or quote to assign string).


In /tmp/shellcheck_file line 110:
            ${default_options} \
            ^----------------^ SC2086: Double quote to prevent globbing and word splitting.

Did you mean: 
            "${default_options}" \

For more information:
  https://www.shellcheck.net/wiki/SC1090 -- Can't follow non-constant source....
  https://www.shellcheck.net/wiki/SC2034 -- nbexec appears unused. Verify use...
  https://www.shellcheck.net/wiki/SC2057 -- Unknown binary operator.


