2 Mot inconnu : pdf => Sécuriser les fichiers pdf de façon extrême et sans mot de passe !
2 Il manque un espace insécable. => Sécuriser les fichiers pdf de façon extrême et sans mot de passe !

5 Il manque un espace insécable. => #!/bin/bash

6 Mot inconnu : pdf => # Sécuriser les fichiers pdf

8 Il manque un espace insécable. => # Nom du programme : securisepdf
8 Mot inconnu : securisepdf => # Nom du programme : securisepdf

9 Mot inconnu : securisepdf => # securisepdf doit être copier dans /usr/local/sbin
9 Après “être”, le verbe ne devrait pas être à l’infinitif. => # securisepdf doit être copier dans /usr/local/sbin

10 Il manque un espace insécable. => # et vous devez le rendre exécutable en faisant ceci :

11 Mot inconnu : sudo => # sudo chmod +x /usr/local/sbin/securisepdf
11 Mot inconnu : chmod => # sudo chmod +x /usr/local/sbin/securisepdf

13 Mot inconnu : MessageDAide => MessageDAide(){

14 Mot inconnu : reset => reset

15 Mot inconnu : echo => echo -e '\tUTILISATION DU SCRIPT'
15 Il manque un espace à côté du tiret. => echo -e '\tUTILISATION DU SCRIPT'
15 Mot inconnu : tUTILISATION => echo -e '\tUTILISATION DU SCRIPT'
15 Guillemets typographiques fermants. => echo -e '\tUTILISATION DU SCRIPT'

16 Mot inconnu : echo => echo -e "\r"
16 Il manque un espace à côté du tiret. => echo -e "\r"
16 Guillemets typographiques fermants. => echo -e "\r"

17 Mot inconnu : echo => echo 'Ne mettez pas d'\''extension'
17 Guillemets typographiques ouvrants. => echo 'Ne mettez pas d'\''extension'
17 Guillemets typographiques fermants. => echo 'Ne mettez pas d'\''extension'

18 Mot inconnu : echo => echo -e "\r"
18 Il manque un espace à côté du tiret. => echo -e "\r"
18 Guillemets typographiques fermants. => echo -e "\r"

19 Mot inconnu : echo => echo 'securisepdf Nom_Du_Fichier_Source Nom_Du_Fichier_Cible'
19 Guillemets typographiques ouvrants. => echo 'securisepdf Nom_Du_Fichier_Source Nom_Du_Fichier_Cible'
19 Mot inconnu : securisepdf => echo 'securisepdf Nom_Du_Fichier_Source Nom_Du_Fichier_Cible'
19 Mot inconnu : Nom_Du_Fichier_Source => echo 'securisepdf Nom_Du_Fichier_Source Nom_Du_Fichier_Cible'
19 Mot inconnu : Nom_Du_Fichier_Cible => echo 'securisepdf Nom_Du_Fichier_Source Nom_Du_Fichier_Cible'
19 Guillemets typographiques fermants. => echo 'securisepdf Nom_Du_Fichier_Source Nom_Du_Fichier_Cible'

20 Mot inconnu : echo => echo -e "\r"
20 Il manque un espace à côté du tiret. => echo -e "\r"
20 Guillemets typographiques fermants. => echo -e "\r"

23 Mot inconnu : pdftk => # Vérification de l'existence de pdftk

24 Pas d’espace après ce signe. => if [ -z "`which pdftk`" ]; then
24 Mot inconnu : which => if [ -z "`which pdftk`" ]; then
24 Mot inconnu : pdftk => if [ -z "`which pdftk`" ]; then
24 Pas d’espace avant ce signe. => if [ -z "`which pdftk`" ]; then
24 Mot inconnu : then => if [ -z "`which pdftk`" ]; then

25 Mot inconnu : echo => echo 'Veuillez installer pdftk !'
25 Guillemets typographiques ouvrants. => echo 'Veuillez installer pdftk !'
25 Mot inconnu : pdftk => echo 'Veuillez installer pdftk !'
25 Il manque un espace insécable. => echo 'Veuillez installer pdftk !'
25 Guillemets typographiques fermants. => echo 'Veuillez installer pdftk !'

26 Mot inconnu : echo => echo 'Tapez votre MOT DE PASSE'
26 Guillemets typographiques ouvrants. => echo 'Tapez votre MOT DE PASSE'
26 Guillemets typographiques fermants. => echo 'Tapez votre MOT DE PASSE'

27 Mot inconnu : sudo => sudo apt-get -y pdftk
27 Mot inconnu : apt-get => sudo apt-get -y pdftk
27 Il manque un espace à côté du tiret. => sudo apt-get -y pdftk
27 Mot inconnu : pdftk => sudo apt-get -y pdftk

30 Mot inconnu : pdf => # Si un des fichiers comporte une extension pdf

32 Pas d’espace après ce signe. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : echo => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : cut => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Il manque un espace à côté du tiret. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : f2 => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Guillemets typographiques ouvrants. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : pdf => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Guillemets typographiques fermants. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : echo => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : cut => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Il manque un espace à côté du tiret. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : f2 => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Guillemets typographiques ouvrants. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : pdf => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Guillemets typographiques fermants. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Pas d’espace avant ce signe. => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then
32 Mot inconnu : then => if [ "`echo $1|cut -f2 -d.`" = "pdf" -o "`echo $2|cut -f2 -d.`" = "pdf" ]; then

33 Mot inconnu : MessageDAide => MessageDAide

37 Mot inconnu : pdf => # Si le fichier pdf n'existe pas le créer

38 Pas d’espace après ce signe. => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Il manque un espace insécable. => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Mot inconnu : pdf => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Guillemets typographiques fermants. => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Espace(s) surnuméraire(s) à supprimer. => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Mot inconnu : odt => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Guillemets typographiques fermants. => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Pas d’espace avant ce signe. => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then
38 Mot inconnu : then => if [ ! -e "$1.pdf" -a  -e "$1.odt" ]; then

39 Mot inconnu : odt2pdf => odt2pdf $1.odt
39 Mot inconnu : odt => odt2pdf $1.odt

43 Pas d’espace après ce signe. => if [ -z "$1" -o -z "$2" ]; then
43 Guillemets typographiques fermants. => if [ -z "$1" -o -z "$2" ]; then
43 Guillemets typographiques fermants. => if [ -z "$1" -o -z "$2" ]; then
43 Pas d’espace avant ce signe. => if [ -z "$1" -o -z "$2" ]; then
43 Mot inconnu : then => if [ -z "$1" -o -z "$2" ]; then

44 Mot inconnu : MessageDAide => MessageDAide

48 Pas d’espace après ce signe. => if [ "$1" = "$2" ]; then
48 Guillemets typographiques fermants. => if [ "$1" = "$2" ]; then
48 Guillemets typographiques fermants. => if [ "$1" = "$2" ]; then
48 Pas d’espace avant ce signe. => if [ "$1" = "$2" ]; then
48 Mot inconnu : then => if [ "$1" = "$2" ]; then

49 Mot inconnu : MessageDAide => MessageDAide

50 Mot inconnu : echo => echo 'LES NOMS DE FICHIERS SOURCE ET CIBLE DOIVENT ÊTRE DIFFÉRENT'
50 Guillemets typographiques ouvrants. => echo 'LES NOMS DE FICHIERS SOURCE ET CIBLE DOIVENT ÊTRE DIFFÉRENT'
50 Accord avec la forme verbale “DOIVENT” : “DIFFÉRENT” devrait être au pluriel. => echo 'LES NOMS DE FICHIERS SOURCE ET CIBLE DOIVENT ÊTRE DIFFÉRENT'
50 Guillemets typographiques fermants. => echo 'LES NOMS DE FICHIERS SOURCE ET CIBLE DOIVENT ÊTRE DIFFÉRENT'

51 Mot inconnu : echo => echo -e "\r"
51 Il manque un espace à côté du tiret. => echo -e "\r"
51 Guillemets typographiques fermants. => echo -e "\r"

54 Mot inconnu : rm => # rm /tmp/*fichiers_pdf_extraits.pdf
54 Mot inconnu : fichiers_pdf_extraits => # rm /tmp/*fichiers_pdf_extraits.pdf
54 Mot inconnu : pdf => # rm /tmp/*fichiers_pdf_extraits.pdf

56 Mot inconnu : pdf => # Extraction des pages du fichier pdf source 
56 Espace(s) en fin de ligne à supprimer. => # Extraction des pages du fichier pdf source 

57 Mot inconnu : pdftk => pdftk $1.pdf burst output /tmp/%03d_fichiers_pdf_extraits.pdf
57 Mot inconnu : pdf => pdftk $1.pdf burst output /tmp/%03d_fichiers_pdf_extraits.pdf
57 Mot inconnu : burst => pdftk $1.pdf burst output /tmp/%03d_fichiers_pdf_extraits.pdf
57 Il manque un espace. => pdftk $1.pdf burst output /tmp/%03d_fichiers_pdf_extraits.pdf
57 Mot inconnu : d_fichiers_pdf_extraits => pdftk $1.pdf burst output /tmp/%03d_fichiers_pdf_extraits.pdf
57 Mot inconnu : pdf => pdftk $1.pdf burst output /tmp/%03d_fichiers_pdf_extraits.pdf

60 Mot inconnu : NomDesFichiersPDFSansExtension => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Mot inconnu : ls => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Il manque un espace. => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Mot inconnu : _fichiers_pdf_extraits => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Mot inconnu : pdf => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Mot inconnu : cut => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Il manque un espace à côté du tiret. => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`
60 Mot inconnu : f1 => NomDesFichiersPDFSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf|cut -f1 -d.`

62 Mot inconnu : pdf => # Conversion des fichiers extraits pdf en png
62 Mot inconnu : png => # Conversion des fichiers extraits pdf en png

63 Mot inconnu : NomDesFichiersPDFSansExtension => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Il manque un espace insécable. => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : convert => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Il manque un espace à côté du tiret. => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : size => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Signe de multiplication typographique. => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : x2480 => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Il manque un espace à côté du tiret. => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : density => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : pdf => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : png => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Il manque un espace insécable. => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done
63 Mot inconnu : done => for Boucle in $NomDesFichiersPDFSansExtension; do convert -size 3508x2480 -density 300 $Boucle.pdf $Boucle.png; done

65 Mot inconnu : png => # Listage des fichiers png générés 
65 Espace(s) en fin de ligne à supprimer. => # Listage des fichiers png générés 

66 Mot inconnu : NomDesFichiersPNGSansExtension => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Mot inconnu : ls => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Il manque un espace. => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Mot inconnu : _fichiers_pdf_extraits => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Mot inconnu : png => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Mot inconnu : cut => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Il manque un espace à côté du tiret. => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`
66 Mot inconnu : f1 => NomDesFichiersPNGSansExtension=`ls /tmp/*???_fichiers_pdf_extraits.png|cut -f1 -d.`

68 Mot inconnu : png => # Conversion des fichiers png générés en pdf  
68 Mot inconnu : pdf => # Conversion des fichiers png générés en pdf  
68 Espace(s) en fin de ligne à supprimer. => # Conversion des fichiers png générés en pdf  

69 Mot inconnu : NomDesFichiersPNGSansExtension => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done
69 Il manque un espace insécable. => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done
69 Mot inconnu : convert => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done
69 Mot inconnu : png => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done
69 Mot inconnu : pdf => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done
69 Il manque un espace insécable. => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done
69 Mot inconnu : done => for Boucle in $NomDesFichiersPNGSansExtension; do convert $Boucle.png $Boucle.pdf; done

72 Mot inconnu : NomDesFichiersPDFAvecExtension => NomDesFichiersPDFAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf`
72 Mot inconnu : ls => NomDesFichiersPDFAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf`
72 Il manque un espace. => NomDesFichiersPDFAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf`
72 Mot inconnu : _fichiers_pdf_extraits => NomDesFichiersPDFAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf`
72 Mot inconnu : pdf => NomDesFichiersPDFAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.pdf`

73 Mot inconnu : NomDesFichiersPNGAvecExtension => NomDesFichiersPNGAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.png`
73 Mot inconnu : ls => NomDesFichiersPNGAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.png`
73 Il manque un espace. => NomDesFichiersPNGAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.png`
73 Mot inconnu : _fichiers_pdf_extraits => NomDesFichiersPNGAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.png`
73 Mot inconnu : png => NomDesFichiersPNGAvecExtension=`ls /tmp/*???_fichiers_pdf_extraits.png`

75 Mot inconnu : pdftk => pdftk $NomDesFichiersPDFAvecExtension cat output $2.pdf
75 Mot inconnu : NomDesFichiersPDFAvecExtension => pdftk $NomDesFichiersPDFAvecExtension cat output $2.pdf
75 Mot inconnu : cat => pdftk $NomDesFichiersPDFAvecExtension cat output $2.pdf
75 Mot inconnu : pdf => pdftk $NomDesFichiersPDFAvecExtension cat output $2.pdf

77 Mot inconnu : png => # Destruction des fichiers png et pdf générés 
77 Mot inconnu : pdf => # Destruction des fichiers png et pdf générés 
77 Espace(s) en fin de ligne à supprimer. => # Destruction des fichiers png et pdf générés 

78 Mot inconnu : rm => rm $NomDesFichiersPNGAvecExtension $NomDesFichiersPDFAvecExtension
78 Mot inconnu : NomDesFichiersPNGAvecExtension => rm $NomDesFichiersPNGAvecExtension $NomDesFichiersPDFAvecExtension
78 Mot inconnu : NomDesFichiersPDFAvecExtension => rm $NomDesFichiersPNGAvecExtension $NomDesFichiersPDFAvecExtension

80 Il manque un espace insécable. => exit 0;</code>
