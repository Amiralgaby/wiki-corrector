7 Espace(s) surnuméraire(s) à supprimer. => En informatique, la **compilation** (d'un logiciel ou d'une bibliothèque) est une procédure par laquelle un code source (format compréhensible par un humain, type [[#ASCII]]) est transformé en code [[#binaire]], un langage compréhensible par votre ordinateur, dans le but d'être exécuté.  Un logiciel est compilé afin de pouvoir être lancé par l'utilisateur.

11 Espace(s) en fin de ligne à supprimer. => Cette documentation présente une méthode //généraliste// et //vulgarisée// pour compiler des programmes et des bibliothèques.  

12 Il manque un espace insécable. => <note important>Elle devrait être utilisée, le plus fréquemment, **lorsque les autres méthodes d'installation de programmes ont échoué**:</note>

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Le [[:apt|système de gestion de paquets APT]] permet d'installer simplement énormément de logiciels répondant aux besoins quotidiens de l'utilisateur moyen.  Lorsque c'est possible, //**privilégiez cette méthode**//!
14 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Le [[:apt|système de gestion de paquets APT]] permet d'installer simplement énormément de logiciels répondant aux besoins quotidiens de l'utilisateur moyen.  Lorsque c'est possible, //**privilégiez cette méthode**//!
14 Espace(s) surnuméraire(s) à supprimer. =>   - Le [[:apt|système de gestion de paquets APT]] permet d'installer simplement énormément de logiciels répondant aux besoins quotidiens de l'utilisateur moyen.  Lorsque c'est possible, //**privilégiez cette méthode**//!

15 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Si un logiciel n'est pas disponible dans les dépôts APT par défaut d'Ubuntu, il est peut-être disponible en [[:apt#le_paquet|paquet Ubuntu (.deb)]] sur un autre dépôt ou directement sur le site du distributeur du logiciel.  Vérifiez si un paquet est disponible sur le site du distributeur.
15 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Si un logiciel n'est pas disponible dans les dépôts APT par défaut d'Ubuntu, il est peut-être disponible en [[:apt#le_paquet|paquet Ubuntu (.deb)]] sur un autre dépôt ou directement sur le site du distributeur du logiciel.  Vérifiez si un paquet est disponible sur le site du distributeur.
15 Mot inconnu : deb =>   - Si un logiciel n'est pas disponible dans les dépôts APT par défaut d'Ubuntu, il est peut-être disponible en [[:apt#le_paquet|paquet Ubuntu (.deb)]] sur un autre dépôt ou directement sur le site du distributeur du logiciel.  Vérifiez si un paquet est disponible sur le site du distributeur.
15 Espace(s) surnuméraire(s) à supprimer. =>   - Si un logiciel n'est pas disponible dans les dépôts APT par défaut d'Ubuntu, il est peut-être disponible en [[:apt#le_paquet|paquet Ubuntu (.deb)]] sur un autre dépôt ou directement sur le site du distributeur du logiciel.  Vérifiez si un paquet est disponible sur le site du distributeur.

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Mot inconnu : deb =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Mot inconnu : rpm =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Une de ces ponctuations est superflue. =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Mot inconnu : slp =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Une de ces ponctuations est superflue. =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.
16 Mot inconnu : tgz =>   - Si un logiciel n'existe pas en paquet .deb mais est disponible en d'autres types de paquets (.rpm, .slp, .tgz), le logiciel [[:alien]] est d'une bonne utilité.

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Enfin, d'autres distributeurs, comme [[http://www.mozilla.com|Mozilla]], publient leurs logiciels sous forme de [[:wiki:glossaire#binaire|code binaire]], donc déjà compilé.
17 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Enfin, d'autres distributeurs, comme [[http://www.mozilla.com|Mozilla]], publient leurs logiciels sous forme de [[:wiki:glossaire#binaire|code binaire]], donc déjà compilé.
17 Il manque un espace. =>   - Enfin, d'autres distributeurs, comme [[http://www.mozilla.com|Mozilla]], publient leurs logiciels sous forme de [[:wiki:glossaire#binaire|code binaire]], donc déjà compilé.

20 Il manque un espace insécable. => Le mot est gros et semble effrayant, mais l'est moins qu'il n'y paraît; essayons de démystifier ensemble ce procédé.

23 Il manque un espace insécable. => ===== Pourquoi compiler ? =====

25 Il manque un espace insécable. => Sous GNU/Linux, //comme pour tout autre système d’exploitation//, les logiciels doivent être compilés avant de pouvoir être utilisés. « Compilation » est le nom d'une procédure permettant de transformer du code source, un ensemble d'instructions compréhensibles par les programmeurs, en code binaire, compréhensible uniquement par votre ordinateur. L'ordinateur est incapable de comprendre directement du code source: il doit donc être « traduit » de façon à ce que la machine puisse l'interpréter.
25 Il manque un espace insécable. => Sous GNU/Linux, //comme pour tout autre système d’exploitation//, les logiciels doivent être compilés avant de pouvoir être utilisés. « Compilation » est le nom d'une procédure permettant de transformer du code source, un ensemble d'instructions compréhensibles par les programmeurs, en code binaire, compréhensible uniquement par votre ordinateur. L'ordinateur est incapable de comprendre directement du code source: il doit donc être « traduit » de façon à ce que la machine puisse l'interpréter.
25 Il manque un espace insécable. => Sous GNU/Linux, //comme pour tout autre système d’exploitation//, les logiciels doivent être compilés avant de pouvoir être utilisés. « Compilation » est le nom d'une procédure permettant de transformer du code source, un ensemble d'instructions compréhensibles par les programmeurs, en code binaire, compréhensible uniquement par votre ordinateur. L'ordinateur est incapable de comprendre directement du code source: il doit donc être « traduit » de façon à ce que la machine puisse l'interpréter.
25 Il manque un espace insécable. => Sous GNU/Linux, //comme pour tout autre système d’exploitation//, les logiciels doivent être compilés avant de pouvoir être utilisés. « Compilation » est le nom d'une procédure permettant de transformer du code source, un ensemble d'instructions compréhensibles par les programmeurs, en code binaire, compréhensible uniquement par votre ordinateur. L'ordinateur est incapable de comprendre directement du code source: il doit donc être « traduit » de façon à ce que la machine puisse l'interpréter.
25 Il manque un espace insécable. => Sous GNU/Linux, //comme pour tout autre système d’exploitation//, les logiciels doivent être compilés avant de pouvoir être utilisés. « Compilation » est le nom d'une procédure permettant de transformer du code source, un ensemble d'instructions compréhensibles par les programmeurs, en code binaire, compréhensible uniquement par votre ordinateur. L'ordinateur est incapable de comprendre directement du code source: il doit donc être « traduit » de façon à ce que la machine puisse l'interpréter.

27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Mot inconnu : install => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Mot inconnu : exe => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Mot inconnu : setup => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Mot inconnu : exe => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Mot inconnu : install => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Mot inconnu : exe => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].
27 Il manque un espace insécable. => Ce procédé est souvent long, lourd et rebutant pour le nouvel arrivant sous Linux, car il n'a probablement jamais eu à en faire sous son ancien système d'exploitation. Sous Microsoft(r) Windows(r), par exemple, il n’est pratiquement jamais requis de votre part que vous compiliez vos logiciels, les éditeurs de programmes proposant des installateurs (le fameux « install.exe » ou « setup.exe ») qui contiennent le programme compilé et une procédure qui copie les fichiers du programme au bon endroit sur votre disque dur. Or, sous Linux, il n’existe pas d'« install.exe ». Un procédé plus simple et convivial a été créé pour éviter à l'utilisateur moyen de devoir compiler : c'est le cas, entre autres, du [[:apt|système de gestion de paquets APT]].

34 Espace(s) surnuméraire(s) à supprimer. => Par défaut, Ubuntu n'inclut pas tous les outils nécessaires pour procéder à la compilation de logiciels et bibliothèques.  Ces outils peuvent toutefois être installés à l'aide de [[:Synaptic]] ou de [[:Apt-get]], car ils se trouvent sur le CD-ROM d'installation de Ubuntu, de même que dans les [[:depots#principaux|dépôts APT]] officiels. Le méta-paquet à installer se nomme  **build-essential**.
34 Espace(s) surnuméraire(s) à supprimer. => Par défaut, Ubuntu n'inclut pas tous les outils nécessaires pour procéder à la compilation de logiciels et bibliothèques.  Ces outils peuvent toutefois être installés à l'aide de [[:Synaptic]] ou de [[:Apt-get]], car ils se trouvent sur le CD-ROM d'installation de Ubuntu, de même que dans les [[:depots#principaux|dépôts APT]] officiels. Le méta-paquet à installer se nomme  **build-essential**.
34 Mot inconnu : build-essential => Par défaut, Ubuntu n'inclut pas tous les outils nécessaires pour procéder à la compilation de logiciels et bibliothèques.  Ces outils peuvent toutefois être installés à l'aide de [[:Synaptic]] ou de [[:Apt-get]], car ils se trouvent sur le CD-ROM d'installation de Ubuntu, de même que dans les [[:depots#principaux|dépôts APT]] officiels. Le méta-paquet à installer se nomme  **build-essential**.

36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Mot inconnu : fakeroot => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Mot inconnu : checkinstall => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Mot inconnu : checkinstall => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Mettez des guillemets fermants plutôt qu’ouvrants. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Mot inconnu : deb => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Il manque un espace insécable. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.
36 Espace(s) surnuméraire(s) à supprimer. => Nous vous suggérons aussi d'installer les paquets « fakeroot » et « checkinstall » et nous supposerons que vous les aurez installés. L'outil « checkinstall » surveille la procédure d'installation et crée un paquet « .deb » qui sera présent dans votre liste de paquets installés.  Ceci aura pour avantage de vous permettre une désinstallation simplifiée et propre, si vous souhaitez désinstaller ultérieurement vos logiciels et bibliothèques.

38 Il manque un espace. => En résumé, vous devriez [[:tutoriel:comment_installer_un_paquet|installer les paquets]] **[[apt>build-essential|build-essential]]** **[[apt>fakeroot|fakeroot]]** **[[apt>checkinstall|checkinstall]]**  .

43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Mot inconnu : tar => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Mot inconnu : gz => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Mettez des guillemets fermants plutôt qu’ouvrants. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Mot inconnu : tar => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Mot inconnu : bz2 => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Mettez des guillemets fermants plutôt qu’ouvrants. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].
43 Il manque un espace insécable. => Le code source d'un logiciel en version stable est habituellement disponible sous forme d'archive compressée au format « tar.gz » ou « .tar.bz2 » voire « .zip ». Certaines personnes (particulièrement des développeurs) vont préférer récupérer la toute dernière version de développement du logiciel (avec toutes les complications qu'il peut contenir) ; celle-ci peut être récupérée depuis un dépôt [[:CVS]], [[:subversion|SVN]] ou [[:Git]].

47 Il manque un espace insécable. => Si le système APT récupère toutes les dépendances d'un logiciel, ce n'est pas le cas lorsque vous effectuez vous-même une compilation. Parcourez bien le site du projet et les pages de documentation afin de savoir quelles dépendances nécessite le logiciel (fréquemment, vous en trouverez aussi une liste dans le fichier « README » se trouvant dans l'archive contenant le code source). Beaucoup de paquets sont disponibles dans les dépôts APT pour les satisfaire.
47 Mot inconnu : README => Si le système APT récupère toutes les dépendances d'un logiciel, ce n'est pas le cas lorsque vous effectuez vous-même une compilation. Parcourez bien le site du projet et les pages de documentation afin de savoir quelles dépendances nécessite le logiciel (fréquemment, vous en trouverez aussi une liste dans le fichier « README » se trouvant dans l'archive contenant le code source). Beaucoup de paquets sont disponibles dans les dépôts APT pour les satisfaire.
47 Il manque un espace insécable. => Si le système APT récupère toutes les dépendances d'un logiciel, ce n'est pas le cas lorsque vous effectuez vous-même une compilation. Parcourez bien le site du projet et les pages de documentation afin de savoir quelles dépendances nécessite le logiciel (fréquemment, vous en trouverez aussi une liste dans le fichier « README » se trouvant dans l'archive contenant le code source). Beaucoup de paquets sont disponibles dans les dépôts APT pour les satisfaire.

56 Mot inconnu : dev => Le plus important pour une bonne compilation, ce sont les bibliothèques de développement. Elles sont contenues dans des paquets qui finissent par "**-dev**". Pour connaître celles qui sont nécessaires, lisez bien les fichiers README ou INSTALL livrés habituellement avec le programme.
56 Mot inconnu : README => Le plus important pour une bonne compilation, ce sont les bibliothèques de développement. Elles sont contenues dans des paquets qui finissent par "**-dev**". Pour connaître celles qui sont nécessaires, lisez bien les fichiers README ou INSTALL livrés habituellement avec le programme.
56 Mot inconnu : INSTALL => Le plus important pour une bonne compilation, ce sont les bibliothèques de développement. Elles sont contenues dans des paquets qui finissent par "**-dev**". Pour connaître celles qui sont nécessaires, lisez bien les fichiers README ou INSTALL livrés habituellement avec le programme.
58 Il manque un espace insécable. => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Mot inconnu : dev => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Il manque un espace insécable. => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Mot inconnu : Synaptic => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Il manque un espace insécable. => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Il manque un espace insécable. => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Mot inconnu : libgtk2 => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Mot inconnu : dev => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».
58 Il manque un espace insécable. => Par exemple, si le logiciel dispose d'une interface graphique en GTK+, il vous faut les bibliothèques de développement GTK+. En général, le nom du paquet à récupérer a la forme « //nom-de-la-dépendance//-dev » et se trouve dans Synaptic ; ici, le paquet à installer se nommerait « libgtk2.0-dev ».

62 Accord de nombre erroné avec « les paquets » : « utile » devrait être au pluriel. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Mot inconnu : apt-cache => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Mot inconnu : showsrc => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Mot inconnu : dépots => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Guillemets typographiques ouvrants. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Mot inconnu : deb-src => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Guillemets typographiques fermants. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).
62 Il manque un espace insécable. => Une méthode très intéressante pour trouver les paquets utile à la compilation est la commande **apt-cache showsrc** (Les dépots source "deb-src" doivent être activés !!). Cette commande n'est valide que pour les logiciels déjà présents dans les dépôts (et que vous compilez pour profiter d'une mise-à-jour).

65 Mot inconnu : apt-cache => apt-cache showsrc amsn | grep Build-Depends
65 Mot inconnu : showsrc => apt-cache showsrc amsn | grep Build-Depends
65 Mot inconnu : amsn => apt-cache showsrc amsn | grep Build-Depends
65 Mot inconnu : grep => apt-cache showsrc amsn | grep Build-Depends
65 Mot inconnu : Build-Depends => apt-cache showsrc amsn | grep Build-Depends

66 Mot inconnu : Build-Depends => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Il manque un espace insécable. => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : debhelper => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : imlib11-dev => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : tcl8 => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : dev => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : tk8 => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : dev => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)
66 Mot inconnu : dpatch => Build-Depends: debhelper (>> 4.0.0), imlib11-dev (>> 1.8.2), tcl8.4-dev, tk8.4-dev, dpatch (>= 1.11)

71 Mot inconnu : build-dep => Vous pouvez aussi utiliser directement build-dep :
71 Il manque un espace insécable. => Vous pouvez aussi utiliser directement build-dep :

73 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get build-dep amsn
73 Mot inconnu : sudo =>   sudo apt-get build-dep amsn
73 Mot inconnu : apt-get =>   sudo apt-get build-dep amsn
73 Mot inconnu : build-dep =>   sudo apt-get build-dep amsn
73 Mot inconnu : amsn =>   sudo apt-get build-dep amsn

75 Espace(s) surnuméraire(s) à supprimer. => S'il vous manque des dépendances, le logiciel ne sera pas compilé correctement.  Le processus (''./configure'') se terminera par un échec dès qu'une dépendance est manquante.  De façon générale, le message d'erreur retourné (dans les quelques dernières lignes) indique clairement quelle dépendance est manquante. Notez alors ce message d'erreur et recherchez cette dépendance à satisfaire dans votre gestionnaire de paquets. Recommencez ensuite le processus de compilation. S'il s'arrête de nouveau, vérifiez si une autre dépendance n'est pas satisfaite ((C'est certainement pour cette raison (des dépendances insatisfaites) que la compilation est considérée comme longue et fastidieuse.)).
75 Guillemets typographiques fermants. => S'il vous manque des dépendances, le logiciel ne sera pas compilé correctement.  Le processus (''./configure'') se terminera par un échec dès qu'une dépendance est manquante.  De façon générale, le message d'erreur retourné (dans les quelques dernières lignes) indique clairement quelle dépendance est manquante. Notez alors ce message d'erreur et recherchez cette dépendance à satisfaire dans votre gestionnaire de paquets. Recommencez ensuite le processus de compilation. S'il s'arrête de nouveau, vérifiez si une autre dépendance n'est pas satisfaite ((C'est certainement pour cette raison (des dépendances insatisfaites) que la compilation est considérée comme longue et fastidieuse.)).
75 Espace(s) surnuméraire(s) à supprimer. => S'il vous manque des dépendances, le logiciel ne sera pas compilé correctement.  Le processus (''./configure'') se terminera par un échec dès qu'une dépendance est manquante.  De façon générale, le message d'erreur retourné (dans les quelques dernières lignes) indique clairement quelle dépendance est manquante. Notez alors ce message d'erreur et recherchez cette dépendance à satisfaire dans votre gestionnaire de paquets. Recommencez ensuite le processus de compilation. S'il s'arrête de nouveau, vérifiez si une autre dépendance n'est pas satisfaite ((C'est certainement pour cette raison (des dépendances insatisfaites) que la compilation est considérée comme longue et fastidieuse.)).

81 Il manque un espace insécable. => Une fois téléchargée, décompressez l'archive dans votre dossier personnel ou ailleurs (par exemple, dans « /opt », qui est une place toute indiquée à cet effet) soit à l'aide d'un outil graphique tel [[:File-Roller]], soit à l'aide de la commande suivante, dans un terminal :
81 Il manque un espace insécable. => Une fois téléchargée, décompressez l'archive dans votre dossier personnel ou ailleurs (par exemple, dans « /opt », qui est une place toute indiquée à cet effet) soit à l'aide d'un outil graphique tel [[:File-Roller]], soit à l'aide de la commande suivante, dans un terminal :
81 Il manque un espace insécable. => Une fois téléchargée, décompressez l'archive dans votre dossier personnel ou ailleurs (par exemple, dans « /opt », qui est une place toute indiquée à cet effet) soit à l'aide d'un outil graphique tel [[:File-Roller]], soit à l'aide de la commande suivante, dans un terminal :

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Pour les archives « .tar.gz » : <code>tar xzfv nom_archive.tar.gz</code>
83 Mettez des guillemets fermants plutôt qu’ouvrants. =>   * Pour les archives « .tar.gz » : <code>tar xzfv nom_archive.tar.gz</code>
83 Il manque un espace insécable. =>   * Pour les archives « .tar.gz » : <code>tar xzfv nom_archive.tar.gz</code>
83 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * Pour les archives « .tar.gz » : <code>tar xzfv nom_archive.tar.gz</code>
83 Il manque un espace insécable. =>   * Pour les archives « .tar.gz » : <code>tar xzfv nom_archive.tar.gz</code>
83 Il manque un espace insécable. =>   * Pour les archives « .tar.gz » : <code>tar xzfv nom_archive.tar.gz</code>

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Pour les archives « .tar.bz2 » : <code>tar xjfv nom_archive.tar.bz2</code>
84 Mettez des guillemets fermants plutôt qu’ouvrants. =>   * Pour les archives « .tar.bz2 » : <code>tar xjfv nom_archive.tar.bz2</code>
84 Il manque un espace insécable. =>   * Pour les archives « .tar.bz2 » : <code>tar xjfv nom_archive.tar.bz2</code>
84 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). =>   * Pour les archives « .tar.bz2 » : <code>tar xjfv nom_archive.tar.bz2</code>
84 Il manque un espace insécable. =>   * Pour les archives « .tar.bz2 » : <code>tar xjfv nom_archive.tar.bz2</code>
84 Il manque un espace insécable. =>   * Pour les archives « .tar.bz2 » : <code>tar xjfv nom_archive.tar.bz2</code>

86 Il manque un espace insécable. => <note tip>N'hésitez pas à utiliser la touche « Tab » de votre clavier pour compléter automatiquement le nom de commandes et de fichiers dans votre terminal. ;-)</note>
86 Mot inconnu : Tab => <note tip>N'hésitez pas à utiliser la touche « Tab » de votre clavier pour compléter automatiquement le nom de commandes et de fichiers dans votre terminal. ;-)</note>
86 Il manque un espace insécable. => <note tip>N'hésitez pas à utiliser la touche « Tab » de votre clavier pour compléter automatiquement le nom de commandes et de fichiers dans votre terminal. ;-)</note>
86 Il manque un espace insécable. => <note tip>N'hésitez pas à utiliser la touche « Tab » de votre clavier pour compléter automatiquement le nom de commandes et de fichiers dans votre terminal. ;-)</note>

89 Mot inconnu : CVS => ==== Depuis un dépôt CVS ou SVN ====
89 Mot inconnu : SVN => ==== Depuis un dépôt CVS ou SVN ====

91 Mot inconnu : CVS => La procédure pour récupérer un code source depuis un dépôt CVS ou SVN varie d'une place à une autre.  Les instructions pour récupérer le code source sont indiquées, dans la plupart des cas, sur la page des téléchargements du site du logiciel concerné ou dans les pages pour développeurs.
91 Mot inconnu : SVN => La procédure pour récupérer un code source depuis un dépôt CVS ou SVN varie d'une place à une autre.  Les instructions pour récupérer le code source sont indiquées, dans la plupart des cas, sur la page des téléchargements du site du logiciel concerné ou dans les pages pour développeurs.
91 Espace(s) surnuméraire(s) à supprimer. => La procédure pour récupérer un code source depuis un dépôt CVS ou SVN varie d'une place à une autre.  Les instructions pour récupérer le code source sont indiquées, dans la plupart des cas, sur la page des téléchargements du site du logiciel concerné ou dans les pages pour développeurs.

98 Mot inconnu : sudo => Pour compiler un programme sans utiliser sudo rajouter l'utilisateur au groupe src.
98 Mot inconnu : src => Pour compiler un programme sans utiliser sudo rajouter l'utilisateur au groupe src.

100 Mot inconnu : sudo => sudo usermod -aG src user
100 Mot inconnu : usermod => sudo usermod -aG src user
100 Il manque un espace à côté du tiret. => sudo usermod -aG src user
100 Mot inconnu : src => sudo usermod -aG src user

103 Il manque un espace insécable. => D'ordre général, la compilation d'un logiciel s'effectuera de la façon suivante :

105 Mot inconnu : chemin_vers_le_répertoire_des_sources => cd ''/chemin_vers_le_répertoire_des_sources''
105 Guillemets typographiques fermants. => cd ''/chemin_vers_le_répertoire_des_sources''

106 Il manque un espace à côté du tiret. => test -f configure || sh autogen.sh #facultatif
106 Mot inconnu : sh => test -f configure || sh autogen.sh #facultatif
106 Mot inconnu : autogen => test -f configure || sh autogen.sh #facultatif
106 Mot inconnu : sh => test -f configure || sh autogen.sh #facultatif

107 Mot inconnu : enable-optimizations => ./configure --enable-optimizations

108 Mot inconnu : make => make

109 Mot inconnu : sudo => sudo checkinstall # ou sudo make install dans ce cas il n'y aura pas de construction de deb
109 Mot inconnu : checkinstall => sudo checkinstall # ou sudo make install dans ce cas il n'y aura pas de construction de deb
109 Mot inconnu : sudo => sudo checkinstall # ou sudo make install dans ce cas il n'y aura pas de construction de deb
109 Mot inconnu : make => sudo checkinstall # ou sudo make install dans ce cas il n'y aura pas de construction de deb
109 Mot inconnu : install => sudo checkinstall # ou sudo make install dans ce cas il n'y aura pas de construction de deb
109 Mot inconnu : deb => sudo checkinstall # ou sudo make install dans ce cas il n'y aura pas de construction de deb

112 Il manque un espace insécable. => Voyons, en étapes, cette procédure :

114 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On se rend dans le répertoire dans lequel se trouve le code source du logiciel ou de la bibliothèque à compiler en utilisant la commande [[tutoriel/console_commandes_de_base#cd|cd]].
114 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On se rend dans le répertoire dans lequel se trouve le code source du logiciel ou de la bibliothèque à compiler en utilisant la commande [[tutoriel/console_commandes_de_base#cd|cd]].
114 Mot inconnu : console_commandes_de_base =>   - On se rend dans le répertoire dans lequel se trouve le code source du logiciel ou de la bibliothèque à compiler en utilisant la commande [[tutoriel/console_commandes_de_base#cd|cd]].

115 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On appelle l'utilitaire « configure » se trouvant dans ce répertoire. Celui-ci vérifie que toutes les dépendances du logiciel ou de la bibliothèque à compiler sont bien satisfaites. Si certaines ne sont pas satisfaites, il s'arrête en indiquant ce qui est manquant pour continuer la procédure. Voir juste après comment corriger cela.
115 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On appelle l'utilitaire « configure » se trouvant dans ce répertoire. Celui-ci vérifie que toutes les dépendances du logiciel ou de la bibliothèque à compiler sont bien satisfaites. Si certaines ne sont pas satisfaites, il s'arrête en indiquant ce qui est manquant pour continuer la procédure. Voir juste après comment corriger cela.
115 Il manque un espace insécable. =>   - On appelle l'utilitaire « configure » se trouvant dans ce répertoire. Celui-ci vérifie que toutes les dépendances du logiciel ou de la bibliothèque à compiler sont bien satisfaites. Si certaines ne sont pas satisfaites, il s'arrête en indiquant ce qui est manquant pour continuer la procédure. Voir juste après comment corriger cela.
115 Il manque un espace insécable. =>   - On appelle l'utilitaire « configure » se trouvant dans ce répertoire. Celui-ci vérifie que toutes les dépendances du logiciel ou de la bibliothèque à compiler sont bien satisfaites. Si certaines ne sont pas satisfaites, il s'arrête en indiquant ce qui est manquant pour continuer la procédure. Voir juste après comment corriger cela.

116 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue.
116 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue.
116 Il manque un espace insécable. =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue.
116 Mot inconnu : make =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue.
116 Il manque un espace insécable. =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue.
116 Espace(s) surnuméraire(s) à supprimer. =>   - On effectue la compilation en exécutant la commande « make », qui se charge d'appeler le compilateur.  C'est certainement l'étape la plus longue.

117 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   - Finalement, le code binaire étant généré, il ne reste qu'à installer le logiciel ou la bibliothèque. \\
117 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   - Finalement, le code binaire étant généré, il ne reste qu'à installer le logiciel ou la bibliothèque. \\

118 Espace(s) en fin de ligne à supprimer. => On appelle le programme 

120 Mot inconnu : sudo => sudo checkinstall
120 Mot inconnu : checkinstall => sudo checkinstall
122 Mettez des guillemets fermants plutôt qu’ouvrants. => (qui nécessite [[:sudo|les droits du super-utilisateur]]), qui surveille son installation et génère, à la fin, un paquet « .deb ».
122 Il manque un espace insécable. => (qui nécessite [[:sudo|les droits du super-utilisateur]]), qui surveille son installation et génère, à la fin, un paquet « .deb ».
122 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => (qui nécessite [[:sudo|les droits du super-utilisateur]]), qui surveille son installation et génère, à la fin, un paquet « .deb ».
122 Mot inconnu : deb => (qui nécessite [[:sudo|les droits du super-utilisateur]]), qui surveille son installation et génère, à la fin, un paquet « .deb ».
122 Il manque un espace insécable. => (qui nécessite [[:sudo|les droits du super-utilisateur]]), qui surveille son installation et génère, à la fin, un paquet « .deb ».

124 Guillemets typographiques ouvrants. => <note important>Le paquet obtenu lors de l'utilisation de ''checkinstall'' n'est absolument pas destiné à être diffusé. 
124 Mot inconnu : checkinstall => <note important>Le paquet obtenu lors de l'utilisation de ''checkinstall'' n'est absolument pas destiné à être diffusé. 
124 Guillemets typographiques fermants. => <note important>Le paquet obtenu lors de l'utilisation de ''checkinstall'' n'est absolument pas destiné à être diffusé. 
124 Espace(s) en fin de ligne à supprimer. => <note important>Le paquet obtenu lors de l'utilisation de ''checkinstall'' n'est absolument pas destiné à être diffusé. 

135 Mot inconnu : apt-get => Tout paquet Debian/Ubuntu qui se respecte liste toutes les dépendances qui lui sont nécessaires tant à l'exécution comme à la compilation. La manière la plus simple de télécharger les dépendances est d'utiliser apt-get avec l'option build-dep, ainsi la commande :
135 Mot inconnu : build-dep => Tout paquet Debian/Ubuntu qui se respecte liste toutes les dépendances qui lui sont nécessaires tant à l'exécution comme à la compilation. La manière la plus simple de télécharger les dépendances est d'utiliser apt-get avec l'option build-dep, ainsi la commande :
135 Il manque un espace insécable. => Tout paquet Debian/Ubuntu qui se respecte liste toutes les dépendances qui lui sont nécessaires tant à l'exécution comme à la compilation. La manière la plus simple de télécharger les dépendances est d'utiliser apt-get avec l'option build-dep, ainsi la commande :

138 Mot inconnu : sudo => sudo apt-get build-dep epdfview
138 Mot inconnu : apt-get => sudo apt-get build-dep epdfview
138 Mot inconnu : build-dep => sudo apt-get build-dep epdfview
138 Mot inconnu : epdfview => sudo apt-get build-dep epdfview

143 Il manque un espace insécable. => === Les erreurs de « configure » ===
143 Incohérence avec “de” : “configure” est une forme verbale conjuguée. => === Les erreurs de « configure » ===
143 Il manque un espace insécable. => === Les erreurs de « configure » ===

145 Espace(s) en fin de ligne à supprimer. => Si les dépendances ne sont pas installées, l'étape de configuration 

150 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  n'ira pas jusqu'au bout et vous donnera un message d'erreur indiquant ce qui manque.

151 Il manque un espace insécable. => Prenons l'exemple de la dépendance manquante « gtk+-2.0 ».
151 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => Prenons l'exemple de la dépendance manquante « gtk+-2.0 ».
151 Il manque un espace insécable. => Prenons l'exemple de la dépendance manquante « gtk+-2.0 ».

152 Il manque un espace insécable. => On nous indique alors :

154 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    No package 'gtk+-2.0' found
154 Guillemets typographiques ouvrants. =>    No package 'gtk+-2.0' found
154 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>    No package 'gtk+-2.0' found
154 Guillemets typographiques fermants. =>    No package 'gtk+-2.0' found
154 Mot inconnu : found =>    No package 'gtk+-2.0' found

156 Il manque un espace insécable. => On sait que l'on cherche un paquet « -dev ». Donc on va utiliser la commande :
156 Mot inconnu : dev => On sait que l'on cherche un paquet « -dev ». Donc on va utiliser la commande :
156 Il manque un espace insécable. => On sait que l'on cherche un paquet « -dev ». Donc on va utiliser la commande :
156 Il manque un espace insécable. => On sait que l'on cherche un paquet « -dev ». Donc on va utiliser la commande :

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    apt-cache search --names-only gtk dev
158 Mot inconnu : apt-cache =>    apt-cache search --names-only gtk dev
158 Mot inconnu : search =>    apt-cache search --names-only gtk dev
158 Mot inconnu : names-only =>    apt-cache search --names-only gtk dev
158 Mot inconnu : dev =>    apt-cache search --names-only gtk dev

160 Il manque un espace insécable. => L'option « --names-only » permet de faire abstraction des descriptions des paquets pour la recherche.
160 Mot inconnu : names-only => L'option « --names-only » permet de faire abstraction des descriptions des paquets pour la recherche.
160 Il manque un espace insécable. => L'option « --names-only » permet de faire abstraction des descriptions des paquets pour la recherche.

163 Il manque un espace insécable. => Mais on sait que l'on recherche une dépendance bibliothèque, donc on va réduire le nombre de résultats avec :

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    apt-cache search --names-only libgtk dev
165 Mot inconnu : apt-cache =>    apt-cache search --names-only libgtk dev
165 Mot inconnu : search =>    apt-cache search --names-only libgtk dev
165 Mot inconnu : names-only =>    apt-cache search --names-only libgtk dev
165 Mot inconnu : libgtk =>    apt-cache search --names-only libgtk dev
165 Mot inconnu : dev =>    apt-cache search --names-only libgtk dev
167 Il manque un espace insécable. => Enfin, dernier indice, c'est que c'est GTK 2 que l'on recherche. Donc, on lance la recherche avec :

169 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    apt-cache search --names-only libgtk2 dev
169 Mot inconnu : apt-cache =>    apt-cache search --names-only libgtk2 dev
169 Mot inconnu : search =>    apt-cache search --names-only libgtk2 dev
169 Mot inconnu : names-only =>    apt-cache search --names-only libgtk2 dev
169 Mot inconnu : libgtk2 =>    apt-cache search --names-only libgtk2 dev
169 Mot inconnu : dev =>    apt-cache search --names-only libgtk2 dev

171 Il manque un espace insécable. => Ce qui nous donne le résultat :

173 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   libgtk2.0-dev - Development files for the GTK+ library
173 Mot inconnu : libgtk2 =>   libgtk2.0-dev - Development files for the GTK+ library
173 Mot inconnu : dev =>   libgtk2.0-dev - Development files for the GTK+ library
173 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   libgtk2.0-dev - Development files for the GTK+ library
173 Mot inconnu : Development =>   libgtk2.0-dev - Development files for the GTK+ library
173 Mot inconnu : the =>   libgtk2.0-dev - Development files for the GTK+ library
173 Mot inconnu : library =>   libgtk2.0-dev - Development files for the GTK+ library

175 Il manque un espace insécable. => Le paquet manquant était : **libgtk2.0-dev**.
175 Mot inconnu : libgtk2 => Le paquet manquant était : **libgtk2.0-dev**.
175 Mot inconnu : dev => Le paquet manquant était : **libgtk2.0-dev**.

176 Il manque un espace. => [[:tutoriel:comment_installer_un_paquet|On installe donc ce paquet]] (avec [[:Aptitude]] de préférence, pour pouvoir le supprimer intégralement ensuite, apt-get ne supprimant pas toutes les dépendances installées).
176 Mot inconnu : apt-get => [[:tutoriel:comment_installer_un_paquet|On installe donc ce paquet]] (avec [[:Aptitude]] de préférence, pour pouvoir le supprimer intégralement ensuite, apt-get ne supprimant pas toutes les dépendances installées).

186 Il manque un espace insécable. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Mot inconnu : library => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Il manque un espace insécable. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Typographie : points de suspension. Utilisez le caractère dédié. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Il manque un espace insécable. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Mot inconnu : libpng => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Il manque un espace insécable. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Mettez des guillemets fermants plutôt qu’ouvrants. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Il manque un espace insécable. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).
186 Il manque un espace insécable. => Les fichiers appelés par les programmes en C sont des parties de bibliothèques (traduction de « library »). Les bibliothèques sont des ensembles de fonctions (des mini-programmes qui effectuent une tâche précise, par exemple réunir deux mots en un seul, afficher une image, réagir lorsqu'on clique...) qui n'ont pas besoin d'être réécrites à chaque fois que quelqu'un veut développer un logiciel. Par exemple, les bibliothèques GTK et Qt dépendent toutes deux de « libpng », qui sert à manipuler des images « .png » (pour un résultat totalement différent).

188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : libfltk => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : libfltk1 => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : libfltk1 => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : dev => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : libfltk1 => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : libfltk1 => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Mot inconnu : dev => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).
188 Il manque un espace insécable. => Chez Ubuntu (comme sur toutes les distributions basées sur Debian), les bibliothèques sont distribuées dans plusieurs paquets (deux au minimum). Prenons l'exemple de « libfltk ». Elle est installée dans « libfltk1.1 » et dans « libfltk1.1-dev » (« libfltk1.1 » et « libfltk1.1-dev » étant les noms des paquets, installables //via// [[:APT]]).

189 Il manque un espace insécable. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Mot inconnu : libfltk1 => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Il manque un espace insécable. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Mettez des guillemets fermants plutôt qu’ouvrants. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Il manque un espace insécable. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Mot inconnu : so => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Il manque un espace insécable. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Le verbe ne devrait pas être un participe passé. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Il manque un espace insécable. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Il manque un espace insécable. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 
189 Espace(s) en fin de ligne à supprimer. => La bibliothèque « libfltk1.1 » contient les fichiers nécessaires à **l'exécution** d'un programme se servant de cette bibliothèque ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1&version=dapper&arch=i386|voir ce paquet]]), c'est-à-dire des fichiers « .so.x.y » installés dans « /usr/lib ». 

190 Il manque un espace insécable. => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 Mot inconnu : libfltk1 => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 Mot inconnu : dev => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 Il manque un espace insécable. => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 Mettez des guillemets fermants plutôt qu’ouvrants. => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 Il manque un espace insécable. => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).
190 Il manque un espace insécable. => La bibliothèque « libfltk1.1-dev » contient les fichiers nécessaires à la **compilation** (les fameux fichiers « .h » que l'on a évoqué tout à l'heure ([[http://packages.ubuntu.com/cgi-bin/search_contents.pl?searchmode=filelist&word=libfltk1.1-dev&version=dapper&arch=i38|voir ce paquet]]).

192 Il manque un espace insécable. => Pour chaque bibliothèque existante dans Ubuntu, il existe un paquet dont le nom finit par « -dev », qu'il est nécessaire d'installer pour compiler les logiciels qui dépendent de cette bibliothèque.
192 Mot inconnu : dev => Pour chaque bibliothèque existante dans Ubuntu, il existe un paquet dont le nom finit par « -dev », qu'il est nécessaire d'installer pour compiler les logiciels qui dépendent de cette bibliothèque.
192 Il manque un espace insécable. => Pour chaque bibliothèque existante dans Ubuntu, il existe un paquet dont le nom finit par « -dev », qu'il est nécessaire d'installer pour compiler les logiciels qui dépendent de cette bibliothèque.

196 Il manque un espace insécable. => ==== Les « autotools » ====
196 Mot inconnu : autotools => ==== Les « autotools » ====
196 Il manque un espace insécable. => ==== Les « autotools » ====

198 Mot inconnu : autotools => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Il manque un espace insécable. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Il manque un espace insécable. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Il manque un espace insécable. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Il manque un espace insécable. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Mettez des guillemets fermants plutôt qu’ouvrants. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Il manque un espace insécable. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».
198 Il manque un espace insécable. => En fait, des //autotools// créent le fichier « configure » des sources. Le fichier « configure » est un script exécutable, qui est dans votre dossier source il nécessite d'être exécuté avec « ./ ».

200 Guillemets typographiques ouvrants. => ''make'' est une commande, installée dans « /usr/bin ». Il suffit donc de taper son nom pour l'exécuter.
200 Mot inconnu : make => ''make'' est une commande, installée dans « /usr/bin ». Il suffit donc de taper son nom pour l'exécuter.
200 Guillemets typographiques fermants. => ''make'' est une commande, installée dans « /usr/bin ». Il suffit donc de taper son nom pour l'exécuter.
200 Il manque un espace insécable. => ''make'' est une commande, installée dans « /usr/bin ». Il suffit donc de taper son nom pour l'exécuter.
200 Il manque un espace insécable. => ''make'' est une commande, installée dans « /usr/bin ». Il suffit donc de taper son nom pour l'exécuter.

201 Guillemets typographiques ouvrants. => ''make'' utilise le Makefile (qui lui est dans votre dossier source).
201 Mot inconnu : make => ''make'' utilise le Makefile (qui lui est dans votre dossier source).
201 Guillemets typographiques fermants. => ''make'' utilise le Makefile (qui lui est dans votre dossier source).
201 Mot inconnu : Makefile => ''make'' utilise le Makefile (qui lui est dans votre dossier source).

202 Il manque un espace insécable. => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur.
202 Il manque un espace insécable. => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur.
202 Mot inconnu : Makefile => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur.
202 Mot inconnu : Makefile => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur.
202 Il manque un espace. => « configure » crée le Makefile à partir d'un Makefile.in (que vous avez dans les sources). Tout ça est créé à partir d'un fichier assez simple qu'écrit le développeur.

203 Mot inconnu : autotools => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.
203 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.
203 Guillemets typographiques ouvrants. => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.
203 Guillemets typographiques fermants. => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.
203 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.
203 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.
203 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Les //autotools//  - ou "outils de gestion automatisée" - forment un ensemble de scripts qui permettent la gestion des procédures de configuration, compilation et installation très complexes à partir de quelques fichiers - relativement - simples.

209 Mot inconnu : make => === make ===

211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Mot inconnu : make => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Mot inconnu : install => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Mot inconnu : uninstall => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Mot inconnu : distclean => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Mot inconnu : Makefile => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :
211 Il manque un espace insécable. => « make » peut être suivi d'un mot clé comme « install », « uninstall », « clean », « distclean ». Ça permet d'appeler une fonction particulière du Makefile :

212 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make install » permet d'installer le programme ;
212 Il manque un espace insécable. =>   * « make install » permet d'installer le programme ;
212 Mot inconnu : make =>   * « make install » permet d'installer le programme ;
212 Mot inconnu : install =>   * « make install » permet d'installer le programme ;
212 Il manque un espace insécable. =>   * « make install » permet d'installer le programme ;
212 Il manque un espace insécable. =>   * « make install » permet d'installer le programme ;

213 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make uninstall » permet de tout désinstaller ;
213 Il manque un espace insécable. =>   * « make uninstall » permet de tout désinstaller ;
213 Mot inconnu : make =>   * « make uninstall » permet de tout désinstaller ;
213 Mot inconnu : uninstall =>   * « make uninstall » permet de tout désinstaller ;
213 Il manque un espace insécable. =>   * « make uninstall » permet de tout désinstaller ;
213 Il manque un espace insécable. =>   * « make uninstall » permet de tout désinstaller ;

214 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ;
214 Il manque un espace insécable. =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ;
214 Mot inconnu : make =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ;
214 Il manque un espace insécable. =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ;
214 Il manque un espace insécable. =>   * « make clean » supprime tout ce qui a été créé pendant la compilation ;

215 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * « make distclean » supprime aussi ce que « configure » a généré.
215 Il manque un espace insécable. =>   * « make distclean » supprime aussi ce que « configure » a généré.
215 Mot inconnu : make =>   * « make distclean » supprime aussi ce que « configure » a généré.
215 Mot inconnu : distclean =>   * « make distclean » supprime aussi ce que « configure » a généré.
215 Il manque un espace insécable. =>   * « make distclean » supprime aussi ce que « configure » a généré.
215 Il manque un espace insécable. =>   * « make distclean » supprime aussi ce que « configure » a généré.
215 Il manque un espace insécable. =>   * « make distclean » supprime aussi ce que « configure » a généré.

217 Mot inconnu : apt-file => === apt-file ===

220 Il manque un espace insécable. => Pour l'installer, lancez la commande :

222 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-get install apt-file
222 Mot inconnu : sudo =>   sudo apt-get install apt-file
222 Mot inconnu : apt-get =>   sudo apt-get install apt-file
222 Mot inconnu : install =>   sudo apt-get install apt-file
222 Mot inconnu : apt-file =>   sudo apt-get install apt-file

224 Mot inconnu : apt-get => On l'initialise ensuite comme pour apt-get en tapant :
224 Il manque un espace insécable. => On l'initialise ensuite comme pour apt-get en tapant :

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   sudo apt-file update
226 Mot inconnu : sudo =>   sudo apt-file update
226 Mot inconnu : apt-file =>   sudo apt-file update
226 Mot inconnu : update =>   sudo apt-file update

228 Il manque un espace insécable. => Dans notre exemple de tout à l'heure, on voulait trouver dans quel paquet se trouve la bibliothèque « libgthread », on tape alors :
228 Mot inconnu : libgthread => Dans notre exemple de tout à l'heure, on voulait trouver dans quel paquet se trouve la bibliothèque « libgthread », on tape alors :
228 Il manque un espace insécable. => Dans notre exemple de tout à l'heure, on voulait trouver dans quel paquet se trouve la bibliothèque « libgthread », on tape alors :
228 Il manque un espace insécable. => Dans notre exemple de tout à l'heure, on voulait trouver dans quel paquet se trouve la bibliothèque « libgthread », on tape alors :

230 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   apt-file search libgthread
230 Mot inconnu : apt-file =>   apt-file search libgthread
230 Mot inconnu : search =>   apt-file search libgthread
230 Mot inconnu : libgthread =>   apt-file search libgthread

232 Il manque un espace insécable. => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Mot inconnu : libglib2 => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Mot inconnu : dev => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Il manque un espace insécable. => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Il manque un espace insécable. => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Mot inconnu : libglib1 => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Mot inconnu : dev => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».
232 Il manque un espace insécable. => Le paquet recherché est donc soit « libglib2.0-dev » soit « libglib1.2-dev ».

234 Il manque un espace insécable. => On peut préciser la recherche avec :

236 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   apt-file search libgthread-2.0
236 Mot inconnu : apt-file =>   apt-file search libgthread-2.0
236 Mot inconnu : search =>   apt-file search libgthread-2.0
236 Mot inconnu : libgthread-2 =>   apt-file search libgthread-2.0

238 Accord de genre erroné : « sources » est féminin. => Il se base sur le « sources.list ». 
238 Il manque un espace insécable. => Il se base sur le « sources.list ». 
238 Accord de genre erroné : « le » est un déterminant masculin. => Il se base sur le « sources.list ». 
238 Mot inconnu : list => Il se base sur le « sources.list ». 
238 Il manque un espace insécable. => Il se base sur le « sources.list ». 
238 Espace(s) en fin de ligne à supprimer. => Il se base sur le « sources.list ». 

239 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.
239 Mot inconnu : The =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.
239 Mot inconnu : fetched =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.
239 Mot inconnu : from =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.
239 Mot inconnu : the =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.
239 Écriture invariable. Utilisez un point médian. =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.
239 Mot inconnu : specified =>    The contents packages are fetched from the location(s) specified in /etc/apt/sources.list.

243 Espace(s) en fin de ligne à supprimer. => Si 

244 Espace(s) surnuméraire(s) à supprimer. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Il manque un espace insécable. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Guillemets fermants. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Mot inconnu : prefix => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Il manque un espace insécable. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Il manque un espace insécable. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Il manque un espace insécable. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Il manque un espace insécable. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Il manque un espace insécable. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 
244 Espace(s) en fin de ligne à supprimer. => Par exemple  « ''./configure --prefix=/usr'' » installera les fichiers dans « /usr/ » au lieu de « /usr/local » (utilisé par défaut). 

245 Il manque un espace insécable. => Lancer « ''./configure --help'' » avant la compilation est toujours une bonne idée.
245 Guillemets fermants. => Lancer « ''./configure --help'' » avant la compilation est toujours une bonne idée.
245 Mot inconnu : help => Lancer « ''./configure --help'' » avant la compilation est toujours une bonne idée.
245 Guillemets typographiques fermants. => Lancer « ''./configure --help'' » avant la compilation est toujours une bonne idée.
245 Il manque un espace insécable. => Lancer « ''./configure --help'' » avant la compilation est toujours une bonne idée.

251 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Une [[tutoriel:creer_un_paquet#foire_aux_questions|foire aux questions]] est disponible.
251 Il manque un espace. =>   * Une [[tutoriel:creer_un_paquet#foire_aux_questions|foire aux questions]] est disponible.
251 Mot inconnu : creer_un_paquet =>   * Une [[tutoriel:creer_un_paquet#foire_aux_questions|foire aux questions]] est disponible.

252 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=987|Désinstaller un programme compilé]] sur le forum ubuntu-fr
252 Mot inconnu : ubuntu-fr =>   * Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=987|Désinstaller un programme compilé]] sur le forum ubuntu-fr

256 Il manque un espace insécable. => //Contributeurs : [[utilisateurs:Id2ndR]], [[utilisateurs:Ner0lph]], [[utilisateurs:Johndescs]].//
256 Il manque un espace. => //Contributeurs : [[utilisateurs:Id2ndR]], [[utilisateurs:Ner0lph]], [[utilisateurs:Johndescs]].//
256 Il manque un espace. => //Contributeurs : [[utilisateurs:Id2ndR]], [[utilisateurs:Ner0lph]], [[utilisateurs:Johndescs]].//
256 Il manque un espace. => //Contributeurs : [[utilisateurs:Id2ndR]], [[utilisateurs:Ner0lph]], [[utilisateurs:Johndescs]].//
