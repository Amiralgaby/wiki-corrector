2 Mot inconnu : mplayer => {{tag>mplayer tutoriel}}

6 Mot inconnu : Mplayer => ====== Comment utiliser Mplayer en esclave ? ======
6 Il manque un espace insécable. => ====== Comment utiliser Mplayer en esclave ? ======

10 Mot inconnu : Mplayer => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].
10 Mot inconnu : wpfr => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].
10 Mot inconnu : Environnement_de_bureau => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].
10 Il manque un espace. => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].
10 Mot inconnu : script_shell => [[:Mplayer]] est un puissant logiciel de lecture de vidéos et de musique. Ce tutoriel explique comment l'utiliser en tant qu'esclave, autant pour la musique que pour la vidéo. Cette technique permet de se passer d'une [[wpfr>Environnement_de_bureau|interface graphique]] et ainsi d'économiser de la mémoire vive et de la place à l'écran. De plus, cette option permet un contrôle du lecteur via de simples [[:tutoriel:script_shell|scripts shell]].

12 Il manque un espace insécable. => Cette méthode est plutôt déconseillée aux adeptes de solutions «usine à gaz», qui préféreront alors une interface graphique complète, il existe de nombreux [[:lecteur_audio|lecteurs de musique]] et [[:lecture_et_encodage_de_fichiers_videos|lecteurs vidéos]] de qualité.
12 Il manque un espace insécable. => Cette méthode est plutôt déconseillée aux adeptes de solutions «usine à gaz», qui préféreront alors une interface graphique complète, il existe de nombreux [[:lecteur_audio|lecteurs de musique]] et [[:lecture_et_encodage_de_fichiers_videos|lecteurs vidéos]] de qualité.
12 Mot inconnu : lecteur_audio => Cette méthode est plutôt déconseillée aux adeptes de solutions «usine à gaz», qui préféreront alors une interface graphique complète, il existe de nombreux [[:lecteur_audio|lecteurs de musique]] et [[:lecture_et_encodage_de_fichiers_videos|lecteurs vidéos]] de qualité.
12 Mot inconnu : lecture_et_encodage_de_fichiers_videos => Cette méthode est plutôt déconseillée aux adeptes de solutions «usine à gaz», qui préféreront alors une interface graphique complète, il existe de nombreux [[:lecteur_audio|lecteurs de musique]] et [[:lecture_et_encodage_de_fichiers_videos|lecteurs vidéos]] de qualité.

16 Mot inconnu : mplayer => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Il manque un espace insécable. => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Mot inconnu : backend => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Il manque un espace insécable. => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Mot inconnu : mplayer => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Accord de nombre erroné avec « connaissance ». => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Accord de nombre erroné avec « rapides ». => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.
16 Mot inconnu : mplayer => Cette utilisation de mplayer est dite en tant que «backend», c'est-à-dire que mplayer devient contrôlable par n'importe quel programme ou script. C'est cette deuxième solution qui va nous intéresser. Pour suivre ce tutoriel, il faudra donc de rapides connaissance sur les scripts shell. La lecture du man de mplayer permettra une meilleure compréhension de la suite.

17 Mot inconnu : mplayer => <code>man mplayer

18 Mot inconnu : bash => man bash</code>

19 Mot inconnu : wpfr => il faut aussi comprendre les notions de [[wpfr>Flux_standard|flux]] et de redirection de flux.
19 Mot inconnu : Flux_standard => il faut aussi comprendre les notions de [[wpfr>Flux_standard|flux]] et de redirection de flux.

21 Il manque un espace. => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : comment_installer_un_paquet => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : mplayer => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : apt => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : mplayer => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : wpfr => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : Tube_nommé => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Mot inconnu : mkfifo => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.
21 Forme interrogative ? Mettez un trait d’union. => Pour continuer le tutoriel, assurez-vous d'avoir [[:tutoriel:comment_installer_un_paquet|installé le paquet]] mplayer ([[apt://mplayer]]), [[wpfr>Tube_nommé|mkfifo]]. Munissez vous de votre [[:terminal]] favori, d'un peu de patience, et de courage.

23 Mot inconnu : Let's => ===== Let's go ? =====
23 Il manque un espace insécable. => ===== Let's go ? =====

25 Mot inconnu : mplayer => Tout d'abord, il faut trouver la commande adéquate pour lancer mplayer. Le manuel nous informe qu'il faut utiliser l'argument -slave.
25 Il manque un espace à côté du tiret. => Tout d'abord, il faut trouver la commande adéquate pour lancer mplayer. Le manuel nous informe qu'il faut utiliser l'argument -slave.

26 Mot inconnu : MPlayer => <code>Cette option enclenche le mode esclave. Ceci est prévu pour l’utilisation de MPlayer en tant que base (backend) pour d’autres programmes. Au lieu d’intercepter les événements clavier, MPlayer va lire ses commandes séparées par un retour chariot (\n) via l’entrée stdin.
26 Mot inconnu : backend => <code>Cette option enclenche le mode esclave. Ceci est prévu pour l’utilisation de MPlayer en tant que base (backend) pour d’autres programmes. Au lieu d’intercepter les événements clavier, MPlayer va lire ses commandes séparées par un retour chariot (\n) via l’entrée stdin.
26 Mot inconnu : MPlayer => <code>Cette option enclenche le mode esclave. Ceci est prévu pour l’utilisation de MPlayer en tant que base (backend) pour d’autres programmes. Au lieu d’intercepter les événements clavier, MPlayer va lire ses commandes séparées par un retour chariot (\n) via l’entrée stdin.
26 Mot inconnu : stdin => <code>Cette option enclenche le mode esclave. Ceci est prévu pour l’utilisation de MPlayer en tant que base (backend) pour d’autres programmes. Au lieu d’intercepter les événements clavier, MPlayer va lire ses commandes séparées par un retour chariot (\n) via l’entrée stdin.

27 Il manque un espace insécable. => NOTE : Voir −input cmdlist pour une liste des commandes esclaves, et DOCS/tech/slave.txt pour leur description.</code>
27 Mot inconnu : cmdlist => NOTE : Voir −input cmdlist pour une liste des commandes esclaves, et DOCS/tech/slave.txt pour leur description.</code>
27 Mot inconnu : txt => NOTE : Voir −input cmdlist pour une liste des commandes esclaves, et DOCS/tech/slave.txt pour leur description.</code>

28 Il manque un espace à côté du tiret. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Guillemets typographiques ouvrants. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Mot inconnu : controle => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Guillemets typographiques fermants. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace à côté du tiret. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Mot inconnu : wpfr => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Mot inconnu : Flux_standard => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Mot inconnu : stdout => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace insécable. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace insécable. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :
28 Il manque un espace insécable. => Il faudra, comme indiqué aussi utiliser l'argument -input file="chemin/vers/mon/fichier/de/controle". Cette fois-ci, je vous laisse lire le manuel :p. De même, pour plus de clarté, l'argument -quiet sera passé, pour un [[wpfr>Flux_standard|stdout]] plus «épuré». Voici ce que vous devriez obtenir après une petite torture mentale :p :

29 Mot inconnu : mplayer => <code>mplayer -quiet -slave -input file=/tmp/music-control</code>
29 Il manque un espace à côté du tiret. => <code>mplayer -quiet -slave -input file=/tmp/music-control</code>

30 Mot inconnu : NB => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Il manque un espace insécable. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Il manque un espace à côté du tiret. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : shuffle => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : idle => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : mplayer => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Il manque un espace à côté du tiret. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Mot inconnu : préloader => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 
30 Espace(s) en fin de ligne à supprimer. => NB : l'argument -shuffle permet de rendre la playlist aléatoire ,-idle évite à mplayer de quitter si rien n'est joué et -playlist permet de préloader une playlist. 

33 Mot inconnu : fifofile => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque les traits d’union. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque un espace insécable. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque un espace insécable. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : stdin => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : mplayer => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : fifofile => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Mot inconnu : mplayer => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :
33 Il manque un espace insécable. => Comme indiqué dans le man, cette commande implique l'utilisation d'un fifofile. C'est à dire un «fichier» qui servira à rediriger ce qui rentre dans son stdin vers celui de mplayer. Ainsi, les commandes passées au fifofile seront transmises à mplayer, qui les exécutera. Pour obtenir une liste des commandes disponibles, c'est :

34 Mot inconnu : mplayer => <code>mplayer -input cmdlist</code>
34 Il manque un espace à côté du tiret. => <code>mplayer -input cmdlist</code>
34 Mot inconnu : cmdlist => <code>mplayer -input cmdlist</code>

35 Mot inconnu : fifofile => Le principe est donc simple, il suffit de passer des commandes à notre fifofile ce qui influencera le comportement de mplayer.
35 Mot inconnu : mplayer => Le principe est donc simple, il suffit de passer des commandes à notre fifofile ce qui influencera le comportement de mplayer.

38 Accord de genre erroné entre « chemins » et « cités ». => <note tip>Les chemins cités ci-dessous ne sont pas obligatoires, ils ne font qu'office d'exemple. Adaptez les en fonction en vos besoins et envies.</note>

40 Mot inconnu : fifofile => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".
40 Guillemets typographiques ouvrants. => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".
40 Mot inconnu : mkfifo => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".
40 Guillemets typographiques fermants. => Nous allons tout d'abord créer notre fichier fifofile. Pour cela, simplement exécuter la commande "mkfifo".

41 Mot inconnu : mkfifo => <code>mkfifo /tmp/music-control</code>

42 Mot inconnu : mplayer => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Mot inconnu : ecole => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Mot inconnu : scripting => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Mot inconnu : initiation_au_shell => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 
42 Espace(s) en fin de ligne à supprimer. => Ensuite, il faut lancer la commande de mplayer. Avoir un lecteur en background n'a d’intérêt que s'il est en background (tâche de fond, non dépendante d'un terminal). Pour ce faire, ajouter un [[:projets/ecole/scripting/initiation_au_shell#presentation_de1|&]] en fin de ligne. 

44 Mot inconnu : stdout => Cependant, le stdout et le stderr nous intéressent, car ils permettent de récupérer le nom du titre joué, par exemple dans le cas d'une chanson (cf fixme). Nous allons donc les rediriger vers deux fichiers distincts.
44 Mot inconnu : stderr => Cependant, le stdout et le stderr nous intéressent, car ils permettent de récupérer le nom du titre joué, par exemple dans le cas d'une chanson (cf fixme). Nous allons donc les rediriger vers deux fichiers distincts.
44 Mot inconnu : fixme => Cependant, le stdout et le stderr nous intéressent, car ils permettent de récupérer le nom du titre joué, par exemple dans le cas d'une chanson (cf fixme). Nous allons donc les rediriger vers deux fichiers distincts.

45 Mot inconnu : mplayer => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace à côté du tiret. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace à côté du tiret. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Mot inconnu : shuffle => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Mot inconnu : idle => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Mot inconnu : mplayer => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Mot inconnu : mplayer => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Mot inconnu : mplayer => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Mot inconnu : mplayer-err => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>
45 Il manque un espace. => <code>mplayer -slave -input file=/tmp/music-control -shuffle -playlist ~/Musique/ma-playlist.m3u -idle &> ~/.mplayer/mplayer.log 2> ~/.mplayer/mplayer-err.log</code>

47 Mot inconnu : mplayer => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : stdout => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : echo => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : stdin => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.
47 Mot inconnu : fifofile => Pour contrôler mplayer, il suffit de rediriger le stdout d'un echo vers le stdin du fifofile.

48 Mot inconnu : echo => <code>echo 'macommande' > /tmp/music-control</code>
48 Guillemets typographiques ouvrants. => <code>echo 'macommande' > /tmp/music-control</code>
48 Mot inconnu : macommande => <code>echo 'macommande' > /tmp/music-control</code>
48 Guillemets typographiques fermants. => <code>echo 'macommande' > /tmp/music-control</code>

49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : mplayer => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Il manque un espace à côté du tiret. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : cmdlist => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : seek => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : loadfile => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques ouvrants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Mot inconnu : loadlist => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Guillemets typographiques fermants. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].
49 Il manque un espace insécable. => Pour liste toutes les commandes, c'est ''mplayer -input cmdlist''. On notera "seek" pour se déplacer dans la chanson, "volume", "loadfile" pour ouvrir un fichier, "loadlist" pour ouvrir une playlist. Pour plus d'infos : [[http://www.mplayerhq.hu/DOCS/tech/slave.txt|en]].

51 Guillemets typographiques ouvrants. => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Mot inconnu : get_xxx => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Guillemets typographiques fermants. => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Mot inconnu : mplayer => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :
51 Il manque un espace insécable. => On peut récupérer des infos sur le média en cours de lecture en utilisant les commandes ''get_xxx'' de mplayer (la liste est donnée plus bas) :

52 Mot inconnu : echo => <code>echo 'get_meta_title' > /tmp/music-control</code>
52 Guillemets typographiques ouvrants. => <code>echo 'get_meta_title' > /tmp/music-control</code>
52 Mot inconnu : get_meta_title => <code>echo 'get_meta_title' > /tmp/music-control</code>
52 Guillemets typographiques fermants. => <code>echo 'get_meta_title' > /tmp/music-control</code>

53 Mot inconnu : mplayer => Cela affichera la ligne suivante dans ~/.mplayer/mplayer.log
53 Mot inconnu : mplayer => Cela affichera la ligne suivante dans ~/.mplayer/mplayer.log
53 Il manque un espace. => Cela affichera la ligne suivante dans ~/.mplayer/mplayer.log

54 Mot inconnu : ANS_META_TITLE => <code>ANS_META_TITLE='Le titre de la chanson'</code>

55 Il manque un espace insécable. => On peut donc filtrer la sortie de la manière suivante :

56 Mot inconnu : mplayer => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Mot inconnu : mplayer => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Il manque un espace. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Mot inconnu : grep => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Guillemets typographiques ouvrants. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Mot inconnu : ANS_META_TITLE => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Mot inconnu : cut => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Il manque un espace à côté du tiret. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Mot inconnu : head => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>
56 Il manque un espace à côté du tiret. => <code>tac ~/.mplayer/mplayer.log | grep "ANS_META_TITLE='" | cut -d "'" -f 2 | head -n 1</code>

57 Mot inconnu : grep => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 Mot inconnu : fifo => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 Mot inconnu : mplayer => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).
57 Mot inconnu : fifo => Notez l'utilisation de tac, qui passe le fichier à grep en ordre inverse (dernière ligne en premier), c'est plus rapide que de démarrer au début. Une autre solution consiste à utiliser un fifo comme sortie de mplayer (au lieu du fichier .log), mais il est (très) difficile d'avoir le même script qui contrôle à la fois une fifo d'entrée et de sortie, donc il faudra avoir deux scripts (un qui envoie les commandes, un qui affiche les infos).

59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : grep => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : tail => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : cut => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace insécable. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques ouvrants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : grep => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : Title => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : mplayer => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : mplayer => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : cut => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace à côté du tiret. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Mot inconnu : tail => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Il manque un espace à côté du tiret. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''
59 Guillemets typographiques fermants. => Une autre solution, moins propre, consiste à rechercher à coup de "grep", de "tail" et de "cut" les infos sur la dernière chanson : ''grep '^ Title' ~/.mplayer/mplayer.log | cut -d ":" -f 2 | tail -n 1''

61 Mot inconnu : get_xxx => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Guillemets typographiques ouvrants. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Mot inconnu : mplayer => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Il manque un espace à côté du tiret. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Mot inconnu : cmdlist => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Guillemets typographiques fermants. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :
61 Il manque un espace insécable. => On peut récupérer la liste des get_xxx avec la commande ''mplayer -input cmdlist'' :

62 Mot inconnu : get_percent_pos => <code>get_percent_pos      # Position en pourcentage dans le fichier
62 Espace(s) surnuméraire(s) à supprimer. => <code>get_percent_pos      # Position en pourcentage dans le fichier

63 Mot inconnu : get_time_pos => get_time_pos         # Position en secondes et dixièmes de secondes
63 Espace(s) surnuméraire(s) à supprimer. => get_time_pos         # Position en secondes et dixièmes de secondes

64 Mot inconnu : get_time_length => get_time_length      # Longueur totale en secondes et dixièmes
64 Espace(s) surnuméraire(s) à supprimer. => get_time_length      # Longueur totale en secondes et dixièmes

65 Mot inconnu : get_file_name => get_file_name        # Nom de fichier
65 Espace(s) surnuméraire(s) à supprimer. => get_file_name        # Nom de fichier

66 Mot inconnu : get_video_codec => get_video_codec      # Codec vidéo utilisé
66 Espace(s) surnuméraire(s) à supprimer. => get_video_codec      # Codec vidéo utilisé

67 Mot inconnu : get_video_bitrate => get_video_bitrate    # Débit vidéo en KiloBits par seconde
67 Espace(s) surnuméraire(s) à supprimer. => get_video_bitrate    # Débit vidéo en KiloBits par seconde
67 Mot inconnu : KiloBits => get_video_bitrate    # Débit vidéo en KiloBits par seconde

68 Mot inconnu : get_video_resolution => get_video_resolution # Résolution de la vidéo en pixels

69 Mot inconnu : get_audio_codec => get_audio_codec      # Codec audio utilisé
69 Espace(s) surnuméraire(s) à supprimer. => get_audio_codec      # Codec audio utilisé

70 Mot inconnu : get_audio_bitrate => get_audio_bitrate    # Débit audio en KiloBits par seconde
70 Espace(s) surnuméraire(s) à supprimer. => get_audio_bitrate    # Débit audio en KiloBits par seconde
70 Mot inconnu : KiloBits => get_audio_bitrate    # Débit audio en KiloBits par seconde

71 Mot inconnu : get_audio_samples => get_audio_samples    # Fréquence d'échantillonnage et nombre de cannaux (1 = mono / 2 = stereo)
71 Espace(s) surnuméraire(s) à supprimer. => get_audio_samples    # Fréquence d'échantillonnage et nombre de cannaux (1 = mono / 2 = stereo)
71 Mot inconnu : cannaux => get_audio_samples    # Fréquence d'échantillonnage et nombre de cannaux (1 = mono / 2 = stereo)
71 Mot inconnu : stereo => get_audio_samples    # Fréquence d'échantillonnage et nombre de cannaux (1 = mono / 2 = stereo)

72 Mot inconnu : get_meta_title => get_meta_title       # Titre
72 Espace(s) surnuméraire(s) à supprimer. => get_meta_title       # Titre

73 Mot inconnu : get_meta_artist => get_meta_artist      # Artiste
73 Espace(s) surnuméraire(s) à supprimer. => get_meta_artist      # Artiste

74 Mot inconnu : get_meta_album => get_meta_album       # Album
74 Espace(s) surnuméraire(s) à supprimer. => get_meta_album       # Album

75 Mot inconnu : get_meta_year => get_meta_year        # Année
75 Espace(s) surnuméraire(s) à supprimer. => get_meta_year        # Année

76 Mot inconnu : get_meta_comment => get_meta_comment     # Commentaire
76 Espace(s) surnuméraire(s) à supprimer. => get_meta_comment     # Commentaire

77 Mot inconnu : get_meta_track => get_meta_track       # Numéro de piste
77 Espace(s) surnuméraire(s) à supprimer. => get_meta_track       # Numéro de piste

78 Mot inconnu : get_meta_genre => get_meta_genre       # Genre</code>
78 Espace(s) surnuméraire(s) à supprimer. => get_meta_genre       # Genre</code>

81 Mot inconnu : mplayer => Cet aspect de mplayer nous permet de le contrôler via des scripts bash. 
81 Mot inconnu : bash => Cet aspect de mplayer nous permet de le contrôler via des scripts bash. 
81 Espace(s) en fin de ligne à supprimer. => Cet aspect de mplayer nous permet de le contrôler via des scripts bash. 

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *de passer à la chanson suivante

86 Mot inconnu : echo => echo 'pt_step 1' > /tmp/music-control
86 Guillemets typographiques ouvrants. => echo 'pt_step 1' > /tmp/music-control
86 Mot inconnu : pt_step => echo 'pt_step 1' > /tmp/music-control
86 Guillemets typographiques fermants. => echo 'pt_step 1' > /tmp/music-control

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *de passer à la chanson précédente

91 Mot inconnu : echo => echo 'pt_step -1' > /tmp/music-control
91 Guillemets typographiques ouvrants. => echo 'pt_step -1' > /tmp/music-control
91 Mot inconnu : pt_step => echo 'pt_step -1' > /tmp/music-control
91 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => echo 'pt_step -1' > /tmp/music-control
91 Guillemets typographiques fermants. => echo 'pt_step -1' > /tmp/music-control

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *de mettre mplayer en pause
93 Mot inconnu : mplayer =>    *de mettre mplayer en pause

96 Mot inconnu : echo => echo 'pause' > /tmp/music-control
96 Guillemets typographiques ouvrants. => echo 'pause' > /tmp/music-control
96 Guillemets typographiques fermants. => echo 'pause' > /tmp/music-control

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *d'arrêter mplayer
98 Mot inconnu : mplayer =>    *d'arrêter mplayer

100 Mot inconnu : mplayer => # Quitte mplayer

101 Mot inconnu : echo => echo 'quit' > /tmp/music-control
101 Guillemets typographiques ouvrants. => echo 'quit' > /tmp/music-control
101 Mot inconnu : quit => echo 'quit' > /tmp/music-control
101 Guillemets typographiques fermants. => echo 'quit' > /tmp/music-control

105 Mot inconnu : zenity => Ces petits scripts, combinés par exemple à [[:zenity]], permettent un excellent contrôle de mplayer. On notera par exemple la possibilité de créer un petit script qui affichera un navigateur et permettra d'ouvrir un morceau, et de le jouer dans mplayer. Allez je suis gentil, je vous le donne aussi :p
105 Mot inconnu : mplayer => Ces petits scripts, combinés par exemple à [[:zenity]], permettent un excellent contrôle de mplayer. On notera par exemple la possibilité de créer un petit script qui affichera un navigateur et permettra d'ouvrir un morceau, et de le jouer dans mplayer. Allez je suis gentil, je vous le donne aussi :p
105 Mot inconnu : mplayer => Ces petits scripts, combinés par exemple à [[:zenity]], permettent un excellent contrôle de mplayer. On notera par exemple la possibilité de créer un petit script qui affichera un navigateur et permettra d'ouvrir un morceau, et de le jouer dans mplayer. Allez je suis gentil, je vous le donne aussi :p

108 Mot inconnu : echo => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Guillemets typographiques ouvrants. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Mot inconnu : loadfile => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Mot inconnu : zenity => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Mot inconnu : text => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Guillemets typographiques ouvrants. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Guillemets typographiques fermants. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Mot inconnu : zenity => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Mot inconnu : file-selection => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Mot inconnu : title => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Guillemets typographiques ouvrants. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Guillemets typographiques fermants. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Guillemets typographiques fermants. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 
108 Espace(s) en fin de ligne à supprimer. => echo "loadfile '`zenity --question --text="Si vous jouez une autre liste de lecture, la liste de lecture en cours sera effacée \!" && zenity --file-selection --title "Sélectionnez le fichier à jouer."`' 0" > /tmp/music-control 

111 Il manque un espace insécable. => De même, une méthode pas très conventionnelle permet de récupérer dans le fichier log le titre de la dernière chanson. Exemple (décidément, je vous donne tout !), et pardonnez la mauvaise qualité de ces scripts.

113 Il manque un espace insécable. => #!/bin/sh

116 Mot inconnu : mplayer => cd ~/.mplayer

117 Mot inconnu : title => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Mot inconnu : grep => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Mot inconnu : Title => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Mot inconnu : mplayer => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Il manque un espace. => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Mot inconnu : cut => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Il manque un espace à côté du tiret. => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Mot inconnu : tail => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`
117 Il manque un espace à côté du tiret. => title=`grep Title mplayer.log | cut -d ":" -f 2 | tail -n 1`

118 Mot inconnu : artist => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Mot inconnu : grep => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Mot inconnu : Artist => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Mot inconnu : mplayer => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Il manque un espace. => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Mot inconnu : cut => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Il manque un espace à côté du tiret. => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Mot inconnu : tail => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`
118 Il manque un espace à côté du tiret. => artist=`grep Artist mplayer.log | cut -d ":" -f 2 | tail -n 1`

119 Mot inconnu : grep => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`
119 Mot inconnu : mplayer => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`
119 Il manque un espace. => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`
119 Mot inconnu : cut => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`
119 Il manque un espace à côté du tiret. => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`
119 Mot inconnu : tail => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`
119 Il manque un espace à côté du tiret. => album=`grep Album mplayer.log | cut -d ":" -f 2 | tail -n 1`

120 Mot inconnu : year => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Mot inconnu : grep => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Mot inconnu : Year => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Mot inconnu : mplayer => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Il manque un espace. => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Mot inconnu : cut => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Il manque un espace à côté du tiret. => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Mot inconnu : tail => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`
120 Il manque un espace à côté du tiret. => year=`grep Year mplayer.log | cut -d ":" -f 2 | tail -n 1`

121 Mot inconnu : grep => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`
121 Mot inconnu : mplayer => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`
121 Il manque un espace. => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`
121 Mot inconnu : cut => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`
121 Il manque un espace à côté du tiret. => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`
121 Mot inconnu : tail => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`
121 Il manque un espace à côté du tiret. => genre=`grep Genre mplayer.log | cut -d ":" -f 2 | tail -n 1`

124 Mot inconnu : zenity => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : text => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : echo => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : title => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : artist => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : year => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : title => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques ouvrants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : Current => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : song => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Guillemets typographiques fermants. => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap
124 Mot inconnu : no-wrap => zenity --info --text="`echo $title"\n"$artist"\n"$album"\n"$year"\n"$genre`" --title="Current song" --no-wrap

128 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !
128 Typographie : un ou trois points ? => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !
128 Mot inconnu : xbindkeys => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !
128 Il manque un espace insécable. => A l'aide de [[../xbindkeys]], on peut facilement arriver à tout contrôler au clavier !

129 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *[[http://www.mplayerhq.hu|Le site officiel de mplayer]]
129 Mot inconnu : mplayer =>    *[[http://www.mplayerhq.hu|Le site officiel de mplayer]]

130 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *[[http://www.mplayerhq.hu/DOCS/man/fr/mplayer.1.html|Des infos sur le mode "slave" et les commandes possibles]]
130 Guillemets typographiques ouvrants. =>    *[[http://www.mplayerhq.hu/DOCS/man/fr/mplayer.1.html|Des infos sur le mode "slave" et les commandes possibles]]
130 Guillemets typographiques fermants. =>    *[[http://www.mplayerhq.hu/DOCS/man/fr/mplayer.1.html|Des infos sur le mode "slave" et les commandes possibles]]

131 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : wpfr =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : Mplayer =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : wikipédia =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]
131 Mot inconnu : mplayer =>    *[[wpfr>Mplayer| La page wikipédia de mplayer]]

134 Il manque un espace insécable. => //Contributeurs: [[:utilisateurs:blackbg]]//
134 Il manque un espace. => //Contributeurs: [[:utilisateurs:blackbg]]//
134 Mot inconnu : blackbg => //Contributeurs: [[:utilisateurs:blackbg]]//
