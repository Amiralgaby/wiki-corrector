6 Il manque un espace insécable. => ====== Dossier magique : classement automatique de fichiers ====== 
6 Espace(s) en fin de ligne à supprimer. => ====== Dossier magique : classement automatique de fichiers ====== 

8 Mot inconnu : xelator => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 Il manque un espace insécable. => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 Mot inconnu : avi => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 Mot inconnu : avi => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 Guillemets typographiques ouvrants. => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.
8 Guillemets typographiques fermants. => En 2007, sur [[http://forum.ubuntu-fr.org/viewtopic.php?id=144237|l'initiative de xelator]], quelques scripts ont été créés afin de ranger automatiquement les fichiers selon leur contenu : les .ogg avec les .ogg, les .avi avec les .avi, etc. Cela a débouché sur le script "Dossier magique" qui est présenté ici. En cas de problème merci de poster sur le sujet précédemment cité.

9 Mot inconnu : erresse => Le code a été remanié en 2015 par erresse, afin d'ajouter au script une interface graphique permettant de l'utiliser plus facilement sans en passer obligatoirement par la ligne de commande. Le script gère maintenant la récursivité.
13 Mot inconnu : dvi => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Mot inconnu : postscript => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Il manque un espace. => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Mot inconnu : tar => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Mot inconnu : rar => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Mot inconnu : gzip => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Mot inconnu : MS-Word => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Mot inconnu : LaTeX => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).
13 Typographie : points de suspension. Utilisez le caractère dédié. => Actuellement, le script reconnaît (en se basant notamment sur leur type MIME) les fichiers de type texte, pdf, dvi, ps/postscript, ogg, la plupart des formats audio,la plupart des formats vidéo, flash, ASF, la plupart des formats image, les archives tar, rar et zip/gzip, les scripts shell, les documents MS-Word, et les fichiers LaTeX. N'hésitez pas à en rajouter (en le signalant sur le forum, merci...).

18 Guillemets typographiques ouvrants. => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Mot inconnu : dossier_magique => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Guillemets typographiques fermants. => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Espace(s) surnuméraire(s) à supprimer. => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Guillemets typographiques ouvrants. => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Mot inconnu : zenity => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Guillemets typographiques fermants. => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Mot inconnu : zenity => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :
18 Il manque un espace insécable. => Copiez-collez le script suivant dans un fichier, que vous appellerez par exemple "dossier_magique" (pour faire original),  et assurez-vous que "zenity" est bien installé sur votre système. En principe zenity est inclus dans les distributions Ubuntu :

21 Il manque un espace insécable. => #!/bin/bash

23 Mot inconnu : CURRENT_VER => CURRENT_VER=1.1

27 Guillemets typographiques ouvrants. => TERMINAL="FAUX"
27 Guillemets typographiques fermants. => TERMINAL="FAUX"

28 Guillemets typographiques ouvrants. => AIDE="FAUX"
28 Guillemets typographiques fermants. => AIDE="FAUX"

29 Guillemets typographiques ouvrants. => VERSION="FAUX"
29 Guillemets typographiques fermants. => VERSION="FAUX"

30 Mot inconnu : RECURSIF => RECURSIF="FAUX"
30 Guillemets typographiques ouvrants. => RECURSIF="FAUX"
30 Guillemets typographiques fermants. => RECURSIF="FAUX"

34 Mot inconnu : zenity => # Test du code retour de zenity :
34 Il manque un espace insécable. => # Test du code retour de zenity :

35 Mot inconnu : function => function testcrd()
35 Mot inconnu : testcrd => function testcrd()

37 Pas d’espace après ce signe. => 	if [ ${crd} = -1 ]; then
37 Mot inconnu : crd => 	if [ ${crd} = -1 ]; then
37 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => 	if [ ${crd} = -1 ]; then
37 Pas d’espace avant ce signe. => 	if [ ${crd} = -1 ]; then
37 Mot inconnu : then => 	if [ ${crd} = -1 ]; then

38 Mot inconnu : zenity => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Mot inconnu : error => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Mot inconnu : title => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Guillemets typographiques ouvrants. => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Guillemets typographiques fermants. => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Mot inconnu : text => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Guillemets typographiques ouvrants. => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."
38 Guillemets typographiques fermants. => 		zenity --error --title "Dossier Magique" --text "Une erreur inattendue s'est produite. Abandon."

41 Pas d’espace après ce signe. => 	if [ ${crd} = 1 ]; then
41 Mot inconnu : crd => 	if [ ${crd} = 1 ]; then
41 Pas d’espace avant ce signe. => 	if [ ${crd} = 1 ]; then
41 Mot inconnu : then => 	if [ ${crd} = 1 ]; then

42 Mot inconnu : zenity => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."
42 Mot inconnu : title => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."
42 Guillemets typographiques ouvrants. => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."
42 Guillemets typographiques fermants. => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."
42 Mot inconnu : text => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."
42 Guillemets typographiques ouvrants. => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."
42 Guillemets typographiques fermants. => 		zenity --info --title "Dossier Magique" --text "Vous avez choisi d'annuler le script. Sortie."

45 Mot inconnu : return => 	return 0

48 Il manque un espace insécable. => # Déplacement d'un fichier et mise à jour du fichier log :

49 Mot inconnu : function => function bouge()

51 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mv "${1}" "${2}"
51 Mot inconnu : mv =>     mv "${1}" "${2}"

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     heure=`date +%D-%H:%m`
52 Il manque un espace. =>     heure=`date +%D-%H:%m`
52 Il manque un espace. =>     heure=`date +%D-%H:%m`
52 Il manque un espace. =>     heure=`date +%D-%H:%m`

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo "[${heure}] "${1}" déplacé dans "${2}"" >> ${LOG}
53 Mot inconnu : echo =>     echo "[${heure}] "${1}" déplacé dans "${2}"" >> ${LOG}

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     return 0
54 Mot inconnu : return =>     return 0

57 Il manque un espace insécable. => # Créons les répertoires s'ils n'existent pas :

58 Mot inconnu : function => function createdirs()
58 Mot inconnu : createdirs => function createdirs()

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${TXT}"
60 Mot inconnu : mkdir =>     mkdir -p "${TXT}"
60 Il manque un espace à côté du tiret. =>     mkdir -p "${TXT}"
60 Mot inconnu : TXT =>     mkdir -p "${TXT}"

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${PDF}"
61 Mot inconnu : mkdir =>     mkdir -p "${PDF}"
61 Il manque un espace à côté du tiret. =>     mkdir -p "${PDF}"

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${AUDIO}"
62 Mot inconnu : mkdir =>     mkdir -p "${AUDIO}"
62 Il manque un espace à côté du tiret. =>     mkdir -p "${AUDIO}"

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${VIDEO}"
63 Mot inconnu : mkdir =>     mkdir -p "${VIDEO}"
63 Il manque un espace à côté du tiret. =>     mkdir -p "${VIDEO}"
63 Mot inconnu : VIDEO =>     mkdir -p "${VIDEO}"

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${IMG}"
64 Mot inconnu : mkdir =>     mkdir -p "${IMG}"
64 Il manque un espace à côté du tiret. =>     mkdir -p "${IMG}"
64 Mot inconnu : IMG =>     mkdir -p "${IMG}"

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${ARCHIVES}"
65 Mot inconnu : mkdir =>     mkdir -p "${ARCHIVES}"
65 Il manque un espace à côté du tiret. =>     mkdir -p "${ARCHIVES}"

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${DOCS}"
66 Mot inconnu : mkdir =>     mkdir -p "${DOCS}"
66 Il manque un espace à côté du tiret. =>     mkdir -p "${DOCS}"

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${TEX}"
67 Mot inconnu : mkdir =>     mkdir -p "${TEX}"
67 Il manque un espace à côté du tiret. =>     mkdir -p "${TEX}"

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${MISC}"
68 Mot inconnu : mkdir =>     mkdir -p "${MISC}"
68 Il manque un espace à côté du tiret. =>     mkdir -p "${MISC}"
68 Mot inconnu : MISC =>     mkdir -p "${MISC}"

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     mkdir -p "${BIN}"
69 Mot inconnu : mkdir =>     mkdir -p "${BIN}"
69 Il manque un espace à côté du tiret. =>     mkdir -p "${BIN}"
69 Mot inconnu : BIN =>     mkdir -p "${BIN}"

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     return 0
71 Mot inconnu : return =>     return 0

74 Il manque un espace insécable. => # Trions les fichiers :

75 Mot inconnu : function => function tri()

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     cd "${1}"

78 Il manque un espace insécable. => 	# Faut-il gérer la récursivité pour les sources ?

79 Pas d’espace après ce signe. => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]
79 Mot inconnu : RECURSIF => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]
79 Guillemets typographiques ouvrants. => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]
79 Guillemets typographiques fermants. => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]
79 Mot inconnu : DIR => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]
79 Il manque un espace insécable. => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]
79 Pas d’espace avant ce signe. => 	if [[ "${RECURSIF}" = "VRAI" && "${DIR}" != "${1}" ]]

80 Mot inconnu : then => 	then

81 Mot inconnu : crd => 		crd=0

82 Mot inconnu : while => 		while [ ${crd} = 0 ]
82 Pas d’espace après ce signe. => 		while [ ${crd} = 0 ]
82 Mot inconnu : crd => 		while [ ${crd} = 0 ]
82 Pas d’espace avant ce signe. => 		while [ ${crd} = 0 ]

84 Mot inconnu : ls => 			ls -d */ 2> /dev/null > /tmp/tri
84 Il manque un espace à côté du tiret. => 			ls -d */ 2> /dev/null > /tmp/tri

85 Mot inconnu : crd => 			crd=$?

86 Mot inconnu : while => 			while read dossier
86 Mot inconnu : read => 			while read dossier

89 Mot inconnu : mv => 				mv -t "./" "${dossier}"* 2> /dev/null
89 Guillemets fermants. => 				mv -t "./" "${dossier}"* 2> /dev/null

91 Mot inconnu : rmdir => 				rmdir "${dossier}"

92 Mot inconnu : done => 			done < /tmp/tri

93 Mot inconnu : done => 		done

95 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ls > /tmp/tri
95 Mot inconnu : ls =>     ls > /tmp/tri

96 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     while read fichier
96 Mot inconnu : while =>     while read fichier
96 Mot inconnu : read =>     while read fichier

97 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     do

101 Mot inconnu : wma => 			wma) bouge "${fichier}" "${AUDIO}";;
101 Une de ces ponctuations est superflue. => 			wma) bouge "${fichier}" "${AUDIO}";;

103 Il manque un espace insécable. => 			*)	# Utilisons si possible le type mime :

104 Il manque un espace à côté du tiret. => 				type=`file -bi "${fichier}"`
104 Mot inconnu : bi => 				type=`file -bi "${fichier}"`

106 Incohérence : espace et tabulation. => 		        case "${type}" in

107 Incohérence : espace et tabulation. => 		            *script*) bouge "${fichier}" "${BIN}";;
107 Mot inconnu : BIN => 		            *script*) bouge "${fichier}" "${BIN}";;
107 Une de ces ponctuations est superflue. => 		            *script*) bouge "${fichier}" "${BIN}";;

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             

109 Incohérence : espace et tabulation. => 		            *executable*) bouge "${fichier}" "${BIN}";;
109 Mot inconnu : executable => 		            *executable*) bouge "${fichier}" "${BIN}";;
109 Mot inconnu : BIN => 		            *executable*) bouge "${fichier}" "${BIN}";;
109 Une de ces ponctuations est superflue. => 		            *executable*) bouge "${fichier}" "${BIN}";;

110 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         

111 Incohérence : espace et tabulation. => 		            *pdf* | *dvi* | *postscript*) bouge "${fichier}" "${PDF}";;
111 Mot inconnu : dvi => 		            *pdf* | *dvi* | *postscript*) bouge "${fichier}" "${PDF}";;
111 Mot inconnu : postscript => 		            *pdf* | *dvi* | *postscript*) bouge "${fichier}" "${PDF}";;
111 Une de ces ponctuations est superflue. => 		            *pdf* | *dvi* | *postscript*) bouge "${fichier}" "${PDF}";;

112 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>             

113 Incohérence : espace et tabulation. => 		            *audio* | *ogg*) bouge "${fichier}" "${AUDIO}";;
113 Une de ces ponctuations est superflue. => 		            *audio* | *ogg*) bouge "${fichier}" "${AUDIO}";;

114 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         

115 Incohérence : espace et tabulation. => 		            *video* | *flash*) bouge "${fichier}" "${VIDEO}";;
115 Mot inconnu : video => 		            *video* | *flash*) bouge "${fichier}" "${VIDEO}";;
115 Mot inconnu : VIDEO => 		            *video* | *flash*) bouge "${fichier}" "${VIDEO}";;
115 Une de ces ponctuations est superflue. => 		            *video* | *flash*) bouge "${fichier}" "${VIDEO}";;

116 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     

117 Incohérence : espace et tabulation. => 		            *image*) bouge "${fichier}" "${IMG}";;
117 Mot inconnu : IMG => 		            *image*) bouge "${fichier}" "${IMG}";;
117 Une de ces ponctuations est superflue. => 		            *image*) bouge "${fichier}" "${IMG}";;

119 Incohérence : espace et tabulation. => 		            *tar* | *rar* | *zip*) bouge "${fichier}" "${ARCHIVES}";;
119 Mot inconnu : tar => 		            *tar* | *rar* | *zip*) bouge "${fichier}" "${ARCHIVES}";;
119 Mot inconnu : rar => 		            *tar* | *rar* | *zip*) bouge "${fichier}" "${ARCHIVES}";;
119 Une de ces ponctuations est superflue. => 		            *tar* | *rar* | *zip*) bouge "${fichier}" "${ARCHIVES}";;

121 Incohérence : espace et tabulation. => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;
121 Mot inconnu : msword => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;
121 Mot inconnu : excel => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;
121 Mot inconnu : powerpoint => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;
121 Mot inconnu : rtf => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;
121 Mot inconnu : opendocument => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;
121 Une de ces ponctuations est superflue. => 		            *msword* | *excel* | *powerpoint* | *rtf* | *opendocument*) bouge "${fichier}" "${DOCS}";;

123 Il manque un espace insécable. => 					*)	# Si le type mime ne suffit pas :

124 Incohérence : espace et tabulation. => 				        type=`file -b "${fichier}"`
124 Il manque un espace à côté du tiret. => 				        type=`file -b "${fichier}"`

126 Incohérence : espace et tabulation. => 		        		case "${type}" in
126 Incohérence : espace et tabulation. => 		        		case "${type}" in

127 Incohérence : espace et tabulation. => 		        		    *directory*) continue;;
127 Incohérence : espace et tabulation. => 		        		    *directory*) continue;;
127 Incohérence : espace et tabulation. => 		        		    *directory*) continue;;
127 Mot inconnu : directory => 		        		    *directory*) continue;;
127 Une de ces ponctuations est superflue. => 		        		    *directory*) continue;;

128 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                

129 Incohérence : espace et tabulation. => 		        		    *byte-compiled*) bouge "${fichier}" "${BIN}";;
129 Incohérence : espace et tabulation. => 		        		    *byte-compiled*) bouge "${fichier}" "${BIN}";;
129 Incohérence : espace et tabulation. => 		        		    *byte-compiled*) bouge "${fichier}" "${BIN}";;
129 Mot inconnu : byte-compiled => 		        		    *byte-compiled*) bouge "${fichier}" "${BIN}";;
129 Mot inconnu : BIN => 		        		    *byte-compiled*) bouge "${fichier}" "${BIN}";;
129 Une de ces ponctuations est superflue. => 		        		    *byte-compiled*) bouge "${fichier}" "${BIN}";;

131 Incohérence : espace et tabulation. => 				            *script*) bouge "${fichier}" "${BIN}";;
131 Mot inconnu : BIN => 				            *script*) bouge "${fichier}" "${BIN}";;
131 Une de ces ponctuations est superflue. => 				            *script*) bouge "${fichier}" "${BIN}";;

132 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>                

133 Incohérence : espace et tabulation. => 		        		    *LaTeX*) bouge "${fichier}" "${TEX}";;
133 Incohérence : espace et tabulation. => 		        		    *LaTeX*) bouge "${fichier}" "${TEX}";;
133 Incohérence : espace et tabulation. => 		        		    *LaTeX*) bouge "${fichier}" "${TEX}";;
133 Mot inconnu : LaTeX => 		        		    *LaTeX*) bouge "${fichier}" "${TEX}";;
133 Une de ces ponctuations est superflue. => 		        		    *LaTeX*) bouge "${fichier}" "${TEX}";;

134 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         

135 Incohérence : espace et tabulation. => 		        		    *ASF*) bouge "${fichier}" "${VIDEO}";;
135 Incohérence : espace et tabulation. => 		        		    *ASF*) bouge "${fichier}" "${VIDEO}";;
135 Incohérence : espace et tabulation. => 		        		    *ASF*) bouge "${fichier}" "${VIDEO}";;
135 Mot inconnu : VIDEO => 		        		    *ASF*) bouge "${fichier}" "${VIDEO}";;
135 Une de ces ponctuations est superflue. => 		        		    *ASF*) bouge "${fichier}" "${VIDEO}";;

137 Incohérence : espace et tabulation. => 				            *text*) bouge "${fichier}" "${TXT}";;
137 Mot inconnu : text => 				            *text*) bouge "${fichier}" "${TXT}";;
137 Mot inconnu : TXT => 				            *text*) bouge "${fichier}" "${TXT}";;
137 Une de ces ponctuations est superflue. => 				            *text*) bouge "${fichier}" "${TXT}";;

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     

139 Il manque un espace insécable. => 							*)	# Le type est donc inconnu :

140 Mot inconnu : MISC => 								bouge "${fichier}" "${MISC}";;
140 Une de ces ponctuations est superflue. => 								bouge "${fichier}" "${MISC}";;

141 Incohérence : espace et tabulation. => 		        		esac
141 Incohérence : espace et tabulation. => 		        		esac
141 Mot inconnu : esac => 		        		esac

142 Une de ces ponctuations est superflue. => 						;;

143 Mot inconnu : esac => 				esac

144 Une de ces ponctuations est superflue. => 				;;

145 Mot inconnu : esac => 		esac

146 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     

147 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     done < /tmp/tri
147 Mot inconnu : done =>     done < /tmp/tri

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     return 0
149 Mot inconnu : return =>     return 0

153 Mot inconnu : while => while getopts ":agrtv-:" OPT
153 Mot inconnu : getopts => while getopts ":agrtv-:" OPT
153 Mot inconnu : agrtv => while getopts ":agrtv-:" OPT
153 Mot inconnu : OPT => while getopts ":agrtv-:" OPT

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     # gestion des options longues avec ou sans argument

156 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     [ $OPT = "-" ] && case "${OPTARG%%=*}" in
156 Pas d’espace après ce signe. =>     [ $OPT = "-" ] && case "${OPTARG%%=*}" in
156 Mot inconnu : OPT =>     [ $OPT = "-" ] && case "${OPTARG%%=*}" in
156 Pas d’espace avant ce signe. =>     [ $OPT = "-" ] && case "${OPTARG%%=*}" in
156 Mot inconnu : OPTARG =>     [ $OPT = "-" ] && case "${OPTARG%%=*}" in

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         aide) OPT="a" ;;
157 Mot inconnu : OPT =>         aide) OPT="a" ;;
157 Guillemets typographiques ouvrants. =>         aide) OPT="a" ;;
157 Guillemets typographiques fermants. =>         aide) OPT="a" ;;
157 Il manque un espace insécable. =>         aide) OPT="a" ;;
157 Une de ces ponctuations est superflue. =>         aide) OPT="a" ;;

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         graphique) OPT="g" ;;
158 Mot inconnu : OPT =>         graphique) OPT="g" ;;
158 Guillemets typographiques ouvrants. =>         graphique) OPT="g" ;;
158 Guillemets typographiques fermants. =>         graphique) OPT="g" ;;
158 Il manque un espace insécable. =>         graphique) OPT="g" ;;
158 Une de ces ponctuations est superflue. =>         graphique) OPT="g" ;;

159 Mot inconnu : recursif => 		recursif) OPT="r";;
159 Mot inconnu : OPT => 		recursif) OPT="r";;
159 Guillemets typographiques ouvrants. => 		recursif) OPT="r";;
159 Guillemets typographiques fermants. => 		recursif) OPT="r";;
159 Une de ces ponctuations est superflue. => 		recursif) OPT="r";;

160 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         terminal) OPT="t" ;;
160 Mot inconnu : OPT =>         terminal) OPT="t" ;;
160 Guillemets typographiques ouvrants. =>         terminal) OPT="t" ;;
160 Guillemets typographiques fermants. =>         terminal) OPT="t" ;;
160 Il manque un espace insécable. =>         terminal) OPT="t" ;;
160 Une de ces ponctuations est superflue. =>         terminal) OPT="t" ;;

161 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         version) OPT="v" ;;
161 Mot inconnu : OPT =>         version) OPT="v" ;;
161 Guillemets typographiques ouvrants. =>         version) OPT="v" ;;
161 Guillemets typographiques fermants. =>         version) OPT="v" ;;
161 Il manque un espace insécable. =>         version) OPT="v" ;;
161 Une de ces ponctuations est superflue. =>         version) OPT="v" ;;

162 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         *) echo "Option inconnue" ; exit 1 ;;
162 Mot inconnu : echo =>         *) echo "Option inconnue" ; exit 1 ;;
162 Guillemets typographiques ouvrants. =>         *) echo "Option inconnue" ; exit 1 ;;
162 Guillemets typographiques fermants. =>         *) echo "Option inconnue" ; exit 1 ;;
162 Il manque un espace insécable. =>         *) echo "Option inconnue" ; exit 1 ;;
162 Il manque un espace insécable. =>         *) echo "Option inconnue" ; exit 1 ;;
162 Une de ces ponctuations est superflue. =>         *) echo "Option inconnue" ; exit 1 ;;

163 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     esac
163 Mot inconnu : esac =>     esac

164 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     # puis gestion des options courtes

165 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     case $OPT in
165 Mot inconnu : OPT =>     case $OPT in

166 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         a) AIDE="VRAI" ;;
166 Guillemets typographiques ouvrants. =>         a) AIDE="VRAI" ;;
166 Guillemets typographiques fermants. =>         a) AIDE="VRAI" ;;
166 Il manque un espace insécable. =>         a) AIDE="VRAI" ;;
166 Une de ces ponctuations est superflue. =>         a) AIDE="VRAI" ;;

167 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         g) TERMINAL="FAUX" ;;
167 Guillemets typographiques ouvrants. =>         g) TERMINAL="FAUX" ;;
167 Guillemets typographiques fermants. =>         g) TERMINAL="FAUX" ;;
167 Il manque un espace insécable. =>         g) TERMINAL="FAUX" ;;
167 Une de ces ponctuations est superflue. =>         g) TERMINAL="FAUX" ;;

168 Mot inconnu : RECURSIF => 		r) RECURSIF="VRAI";;
168 Guillemets typographiques ouvrants. => 		r) RECURSIF="VRAI";;
168 Guillemets typographiques fermants. => 		r) RECURSIF="VRAI";;
168 Une de ces ponctuations est superflue. => 		r) RECURSIF="VRAI";;

169 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         t) TERMINAL="VRAI" ;;
169 Guillemets typographiques ouvrants. =>         t) TERMINAL="VRAI" ;;
169 Guillemets typographiques fermants. =>         t) TERMINAL="VRAI" ;;
169 Il manque un espace insécable. =>         t) TERMINAL="VRAI" ;;
169 Une de ces ponctuations est superflue. =>         t) TERMINAL="VRAI" ;;

170 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         v) VERSION="VRAI" ;;
170 Guillemets typographiques ouvrants. =>         v) VERSION="VRAI" ;;
170 Guillemets typographiques fermants. =>         v) VERSION="VRAI" ;;
170 Il manque un espace insécable. =>         v) VERSION="VRAI" ;;
170 Une de ces ponctuations est superflue. =>         v) VERSION="VRAI" ;;

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         *) echo "Option inconnue" ; exit 1 ;;
171 Mot inconnu : echo =>         *) echo "Option inconnue" ; exit 1 ;;
171 Guillemets typographiques ouvrants. =>         *) echo "Option inconnue" ; exit 1 ;;
171 Guillemets typographiques fermants. =>         *) echo "Option inconnue" ; exit 1 ;;
171 Il manque un espace insécable. =>         *) echo "Option inconnue" ; exit 1 ;;
171 Il manque un espace insécable. =>         *) echo "Option inconnue" ; exit 1 ;;
171 Une de ces ponctuations est superflue. =>         *) echo "Option inconnue" ; exit 1 ;;

172 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     esac
172 Mot inconnu : esac =>     esac

173 Mot inconnu : done => done 
173 Espace(s) en fin de ligne à supprimer. => done 

177 Pas d’espace après ce signe. => if [ "$AIDE" = "VRAI" ]
177 Guillemets typographiques fermants. => if [ "$AIDE" = "VRAI" ]
177 Guillemets typographiques ouvrants. => if [ "$AIDE" = "VRAI" ]
177 Guillemets typographiques fermants. => if [ "$AIDE" = "VRAI" ]
177 Pas d’espace avant ce signe. => if [ "$AIDE" = "VRAI" ]

178 Mot inconnu : then => then

179 Mot inconnu : echo => 	echo "Syntaxe 1 : avec 0 ou 1 option et sans paramètre."
179 Guillemets typographiques ouvrants. => 	echo "Syntaxe 1 : avec 0 ou 1 option et sans paramètre."
179 Il manque un espace insécable. => 	echo "Syntaxe 1 : avec 0 ou 1 option et sans paramètre."
179 Guillemets typographiques fermants. => 	echo "Syntaxe 1 : avec 0 ou 1 option et sans paramètre."

180 Mot inconnu : echo => 	echo "            $0					Mode graphique."
180 Guillemets isolés. => 	echo "            $0					Mode graphique."
180 Guillemets typographiques fermants. => 	echo "            $0					Mode graphique."

181 Mot inconnu : echo => 	echo "            $0 -g | --graphique	Mode graphique."
181 Guillemets isolés. => 	echo "            $0 -g | --graphique	Mode graphique."
181 Il manque un espace à côté du tiret. => 	echo "            $0 -g | --graphique	Mode graphique."
181 Guillemets typographiques fermants. => 	echo "            $0 -g | --graphique	Mode graphique."

182 Mot inconnu : echo => 	echo "            $0 -a | --aide		Affiche l'aide."
182 Guillemets isolés. => 	echo "            $0 -a | --aide		Affiche l'aide."
182 Il manque un espace à côté du tiret. => 	echo "            $0 -a | --aide		Affiche l'aide."
182 Guillemets typographiques fermants. => 	echo "            $0 -a | --aide		Affiche l'aide."

183 Mot inconnu : echo => 	echo "            $0 -v | --version		Affiche la version."
183 Guillemets isolés. => 	echo "            $0 -v | --version		Affiche la version."
183 Il manque un espace à côté du tiret. => 	echo "            $0 -v | --version		Affiche la version."
183 Guillemets typographiques fermants. => 	echo "            $0 -v | --version		Affiche la version."

184 Mot inconnu : echo => 	echo "            $0 -r | --recursif    Gére la récursivité."
184 Guillemets isolés. => 	echo "            $0 -r | --recursif    Gére la récursivité."
184 Il manque un espace à côté du tiret. => 	echo "            $0 -r | --recursif    Gére la récursivité."
184 Mot inconnu : recursif => 	echo "            $0 -r | --recursif    Gére la récursivité."
184 Espace(s) surnuméraire(s) à supprimer. => 	echo "            $0 -r | --recursif    Gére la récursivité."
184 Mot inconnu : Gére => 	echo "            $0 -r | --recursif    Gére la récursivité."
184 Guillemets typographiques fermants. => 	echo "            $0 -r | --recursif    Gére la récursivité."

185 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."
185 Mot inconnu : echo =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."
185 Guillemets typographiques ouvrants. =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."
185 Il manque un espace insécable. =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."
185 Écriture invariable. Utilisez un point médian. =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."
185 Écriture invariable. Utilisez un point médian. =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."
185 Guillemets typographiques fermants. =>     echo "Syntaxe 2 : en mode terminal avec paramètre(s) obligatoire(s)."

186 Mot inconnu : echo => 	echo "            $0 -t | --terminal CIBLE [SOURCE1 ... SOURCEn]"
186 Guillemets isolés. => 	echo "            $0 -t | --terminal CIBLE [SOURCE1 ... SOURCEn]"
186 Mot inconnu : SOURCE1 => 	echo "            $0 -t | --terminal CIBLE [SOURCE1 ... SOURCEn]"
186 Typographie : points de suspension. Utilisez le caractère dédié. => 	echo "            $0 -t | --terminal CIBLE [SOURCE1 ... SOURCEn]"
186 Mot inconnu : SOURCEn => 	echo "            $0 -t | --terminal CIBLE [SOURCE1 ... SOURCEn]"

187 Mot inconnu : echo => 	echo "            où CIBLE est le dossier résultant classé"
187 Guillemets isolés. => 	echo "            où CIBLE est le dossier résultant classé"
187 Guillemets typographiques fermants. => 	echo "            où CIBLE est le dossier résultant classé"

188 Mot inconnu : echo => 	echo "            et SOURCE(s) le(s) dossier(s) vrac à trier."
188 Guillemets isolés. => 	echo "            et SOURCE(s) le(s) dossier(s) vrac à trier."
188 Écriture invariable. Utilisez un point médian. => 	echo "            et SOURCE(s) le(s) dossier(s) vrac à trier."
188 Écriture invariable. Utilisez un point médian. => 	echo "            et SOURCE(s) le(s) dossier(s) vrac à trier."
188 Guillemets typographiques fermants. => 	echo "            et SOURCE(s) le(s) dossier(s) vrac à trier."

189 Mot inconnu : echo => 	echo "            Si SOURCE est omis, alors CIBLE=SOURCE."
189 Guillemets isolés. => 	echo "            Si SOURCE est omis, alors CIBLE=SOURCE."
189 Guillemets typographiques fermants. => 	echo "            Si SOURCE est omis, alors CIBLE=SOURCE."

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     exit 0

195 Pas d’espace après ce signe. => if [ "$VERSION" = "VRAI" ]
195 Guillemets typographiques fermants. => if [ "$VERSION" = "VRAI" ]
195 Guillemets typographiques ouvrants. => if [ "$VERSION" = "VRAI" ]
195 Guillemets typographiques fermants. => if [ "$VERSION" = "VRAI" ]
195 Pas d’espace avant ce signe. => if [ "$VERSION" = "VRAI" ]

196 Mot inconnu : then => then

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo " "
197 Mot inconnu : echo =>     echo " "
197 Guillemets isolés. =>     echo " "
197 Guillemets fermants. =>     echo " "

198 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     echo "Version $0 : $CURRENT_VER"
198 Mot inconnu : echo =>     echo "Version $0 : $CURRENT_VER"
198 Guillemets typographiques ouvrants. =>     echo "Version $0 : $CURRENT_VER"
198 Il manque un espace insécable. =>     echo "Version $0 : $CURRENT_VER"
198 Mot inconnu : CURRENT_VER =>     echo "Version $0 : $CURRENT_VER"
198 Guillemets typographiques fermants. =>     echo "Version $0 : $CURRENT_VER"

199 Mot inconnu : head => #    head -15 $0 | grep -v bash
199 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. => #    head -15 $0 | grep -v bash
199 Mot inconnu : grep => #    head -15 $0 | grep -v bash
199 Il manque un espace à côté du tiret. => #    head -15 $0 | grep -v bash
199 Mot inconnu : bash => #    head -15 $0 | grep -v bash

200 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     exit 0

204 Mot inconnu : OLDDIR => OLDDIR=`pwd`
204 Mot inconnu : pwd => OLDDIR=`pwd`

206 Mot inconnu : DIR => DIR="${HOME}"

210 Guillemets typographiques ouvrants. => # Option "terminal" pour utilisation non graphique
210 Accord de genre erroné avec « Option ». => # Option "terminal" pour utilisation non graphique
210 Guillemets typographiques fermants. => # Option "terminal" pour utilisation non graphique

211 Pas d’espace après ce signe. => if [ "$TERMINAL" = "VRAI" ]
211 Guillemets typographiques fermants. => if [ "$TERMINAL" = "VRAI" ]
211 Guillemets typographiques ouvrants. => if [ "$TERMINAL" = "VRAI" ]
211 Guillemets typographiques fermants. => if [ "$TERMINAL" = "VRAI" ]
211 Pas d’espace avant ce signe. => if [ "$TERMINAL" = "VRAI" ]

212 Mot inconnu : then => then

213 Écriture invariable. Utilisez un point médian. => 	# On élimine les options pour charger le(s) paramètre(s)

214 Mot inconnu : while => 	while [ "${1:0:1}" = "-" ]
214 Pas d’espace après ce signe. => 	while [ "${1:0:1}" = "-" ]
214 Pas d’espace avant ce signe. => 	while [ "${1:0:1}" = "-" ]

216 Mot inconnu : shift => 		shift

217 Mot inconnu : done => 	done

218 Pas d’espace après ce signe. => 	if [ "${1}" = "" ]
218 Pas d’espace avant ce signe. => 	if [ "${1}" = "" ]

219 Mot inconnu : then => 	then

220 Mot inconnu : echo => 		echo "En mode terminal, indiquer obligatoirement le(s) paramètre(s)"
220 Guillemets typographiques ouvrants. => 		echo "En mode terminal, indiquer obligatoirement le(s) paramètre(s)"
220 Écriture invariable. Utilisez un point médian. => 		echo "En mode terminal, indiquer obligatoirement le(s) paramètre(s)"

224 Mot inconnu : else => else

226 Mot inconnu : echo => 	echo "- Vous allez tout d'abord choisir le dossier dans lequel seront créés" > /tmp/notice
226 Guillemets typographiques fermants. => 	echo "- Vous allez tout d'abord choisir le dossier dans lequel seront créés" > /tmp/notice

227 Mot inconnu : echo => 	echo "  les sous-dossiers où classer les fichiers triés. C'est le dossier CIBLE." >> /tmp/notice
227 Guillemets isolés. => 	echo "  les sous-dossiers où classer les fichiers triés. C'est le dossier CIBLE." >> /tmp/notice
227 Guillemets typographiques fermants. => 	echo "  les sous-dossiers où classer les fichiers triés. C'est le dossier CIBLE." >> /tmp/notice

228 Mot inconnu : echo => 	echo "- Vous sélectionnerez ensuite le(s) dossier(s) ''en vrac'' dont vous" >> /tmp/notice
228 Écriture invariable. Utilisez un point médian. => 	echo "- Vous sélectionnerez ensuite le(s) dossier(s) ''en vrac'' dont vous" >> /tmp/notice
228 Guillemets typographiques ouvrants. => 	echo "- Vous sélectionnerez ensuite le(s) dossier(s) ''en vrac'' dont vous" >> /tmp/notice
228 Guillemets typographiques fermants. => 	echo "- Vous sélectionnerez ensuite le(s) dossier(s) ''en vrac'' dont vous" >> /tmp/notice
228 Guillemets typographiques fermants. => 	echo "- Vous sélectionnerez ensuite le(s) dossier(s) ''en vrac'' dont vous" >> /tmp/notice

229 Mot inconnu : echo => 	echo "  voulez classer les fichiers. C'est (ce sont) le(s) dossier(s) SOURCE." >> /tmp/notice
229 Guillemets isolés. => 	echo "  voulez classer les fichiers. C'est (ce sont) le(s) dossier(s) SOURCE." >> /tmp/notice
229 Écriture invariable. Utilisez un point médian. => 	echo "  voulez classer les fichiers. C'est (ce sont) le(s) dossier(s) SOURCE." >> /tmp/notice
229 Guillemets typographiques fermants. => 	echo "  voulez classer les fichiers. C'est (ce sont) le(s) dossier(s) SOURCE." >> /tmp/notice

230 Mot inconnu : echo => 	echo "- Note : Le dossier CIBLE peut être le même que le dossier SOURCE," >> /tmp/notice
230 Il manque un espace insécable. => 	echo "- Note : Le dossier CIBLE peut être le même que le dossier SOURCE," >> /tmp/notice
230 Guillemets typographiques fermants. => 	echo "- Note : Le dossier CIBLE peut être le même que le dossier SOURCE," >> /tmp/notice

231 Mot inconnu : echo => 	echo "  si les fichiers sont tous dans un même dossier. Dans ce cas, on ne" >> /tmp/notice
231 Guillemets isolés. => 	echo "  si les fichiers sont tous dans un même dossier. Dans ce cas, on ne" >> /tmp/notice
231 Guillemets typographiques fermants. => 	echo "  si les fichiers sont tous dans un même dossier. Dans ce cas, on ne" >> /tmp/notice

232 Mot inconnu : echo => 	echo "  peut avoir qu'un seul dossier SOURCE, qui est également la CIBLE..." >> /tmp/notice
232 Guillemets isolés. => 	echo "  peut avoir qu'un seul dossier SOURCE, qui est également la CIBLE..." >> /tmp/notice
232 Typographie : points de suspension. Utilisez le caractère dédié. => 	echo "  peut avoir qu'un seul dossier SOURCE, qui est également la CIBLE..." >> /tmp/notice
232 Guillemets typographiques fermants. => 	echo "  peut avoir qu'un seul dossier SOURCE, qui est également la CIBLE..." >> /tmp/notice

233 Mot inconnu : echo => 	echo "*** Vous pouvez cliquer sur ''Annuler'' pour mettre fin au script ***" >> /tmp/notice
233 Guillemets typographiques ouvrants. => 	echo "*** Vous pouvez cliquer sur ''Annuler'' pour mettre fin au script ***" >> /tmp/notice
233 Guillemets typographiques fermants. => 	echo "*** Vous pouvez cliquer sur ''Annuler'' pour mettre fin au script ***" >> /tmp/notice

234 Mot inconnu : zenity => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Mot inconnu : text-info => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Mot inconnu : title => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Guillemets typographiques ouvrants. => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Guillemets typographiques fermants. => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Mot inconnu : height => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Guillemets typographiques ouvrants. => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Guillemets typographiques fermants. => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Mot inconnu : width => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Guillemets typographiques ouvrants. => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Guillemets typographiques fermants. => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"
234 Mot inconnu : filename => 	zenity --text-info --title "Dossier Magique - Mode d'emploi" --height "260" --width "490" --filename "/tmp/notice"

235 Mot inconnu : crd => 	crd=$?; testcrd
235 Mot inconnu : testcrd => 	crd=$?; testcrd

238 Guillemets typographiques ouvrants. => # Option "terminal" pour utilisation non graphique
238 Accord de genre erroné avec « Option ». => # Option "terminal" pour utilisation non graphique
238 Guillemets typographiques fermants. => # Option "terminal" pour utilisation non graphique

239 Pas d’espace après ce signe. => if [ "$TERMINAL" = "VRAI" ]
239 Guillemets typographiques fermants. => if [ "$TERMINAL" = "VRAI" ]
239 Guillemets typographiques ouvrants. => if [ "$TERMINAL" = "VRAI" ]
239 Guillemets typographiques fermants. => if [ "$TERMINAL" = "VRAI" ]
239 Pas d’espace avant ce signe. => if [ "$TERMINAL" = "VRAI" ]

240 Mot inconnu : then => then

241 Mot inconnu : DIR => 	DIR="${1}"

243 Mot inconnu : else => else

245 Mot inconnu : DIR => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Mot inconnu : zenity => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Mot inconnu : file-selection => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Mot inconnu : title => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Guillemets typographiques ouvrants. => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Guillemets typographiques fermants. => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Mot inconnu : filename => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Mot inconnu : DIR => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Guillemets typographiques fermants. => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)
245 Mot inconnu : directory => 	DIR=$(zenity --file-selection --title "Dossier Magique - Choisir répertoire CIBLE" --filename "$DIR"/ --directory)

246 Mot inconnu : crd => 	crd=$?; testcrd
246 Mot inconnu : testcrd => 	crd=$?; testcrd

250 Guillemets typographiques ouvrants. => # Option "graphique" ou par défaut pour utilisation graphique
250 Guillemets typographiques fermants. => # Option "graphique" ou par défaut pour utilisation graphique

251 Pas d’espace après ce signe. => if [ "$TERMINAL" = "FAUX" ]
251 Guillemets typographiques fermants. => if [ "$TERMINAL" = "FAUX" ]
251 Guillemets typographiques ouvrants. => if [ "$TERMINAL" = "FAUX" ]
251 Guillemets typographiques fermants. => if [ "$TERMINAL" = "FAUX" ]
251 Pas d’espace avant ce signe. => if [ "$TERMINAL" = "FAUX" ]

252 Mot inconnu : then => then

254 Mot inconnu : OLDIFS => 	OLDIFS="${IFS}"

257 Guillemets typographiques ouvrants. => # Option "terminal" pour utilisation non graphique
257 Accord de genre erroné avec « Option ». => # Option "terminal" pour utilisation non graphique
257 Guillemets typographiques fermants. => # Option "terminal" pour utilisation non graphique

258 Pas d’espace après ce signe. => if [ "$TERMINAL" = "VRAI" ]
258 Guillemets typographiques fermants. => if [ "$TERMINAL" = "VRAI" ]
258 Guillemets typographiques ouvrants. => if [ "$TERMINAL" = "VRAI" ]
258 Guillemets typographiques fermants. => if [ "$TERMINAL" = "VRAI" ]
258 Pas d’espace avant ce signe. => if [ "$TERMINAL" = "VRAI" ]

259 Mot inconnu : then => then

260 Écriture invariable. Utilisez un point médian. => 	# On recherche le(s) paramètre(s) SOURCE(S) éventuel(s)
260 Écriture invariable. Utilisez un point médian. => 	# On recherche le(s) paramètre(s) SOURCE(S) éventuel(s)
260 Écriture invariable. Utilisez un point médian. => 	# On recherche le(s) paramètre(s) SOURCE(S) éventuel(s)

261 Mot inconnu : shift => 	shift

262 Pas d’espace après ce signe. => 	if [ "${1}" = "" ]
262 Pas d’espace avant ce signe. => 	if [ "${1}" = "" ]

263 Mot inconnu : then => 	then

265 Mot inconnu : TABSCE => 		TABSCE=("$DIR")
265 Mot inconnu : DIR => 		TABSCE=("$DIR")
265 Guillemets typographiques fermants. => 		TABSCE=("$DIR")

266 Mot inconnu : else => 	else

267 Écriture invariable. Utilisez un point médian. => 		# On charge le (la liste des) dossier(s) SOURCE(S)
267 Écriture invariable. Utilisez un point médian. => 		# On charge le (la liste des) dossier(s) SOURCE(S)

268 Mot inconnu : TABSCE => 		TABSCE=("${@}")

271 Mot inconnu : else => else

274 Mot inconnu : TABSCE => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Mot inconnu : zenity => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Mot inconnu : file-selection => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Mot inconnu : title => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Guillemets typographiques ouvrants. => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Écriture invariable. Utilisez un point médian. => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Guillemets typographiques fermants. => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Mot inconnu : filename => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Mot inconnu : DIR => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Guillemets typographiques fermants. => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))
274 Mot inconnu : directory => 	TABSCE=($(zenity --file-selection --title "Dossier Magique - Choisir répertoire(s) SOURCE" --filename "$DIR"/ --directory --multiple))

275 Mot inconnu : crd => 	crd=$?; testcrd
275 Mot inconnu : testcrd => 	crd=$?; testcrd

278 Il manque un espace insécable. => # Définition des répertoires (à adapter si besoin) :

279 Mot inconnu : TXT => TXT="${DIR}/Documents"
279 Mot inconnu : DIR => TXT="${DIR}/Documents"

280 Mot inconnu : DIR => PDF="${DIR}/Documents"

281 Mot inconnu : DIR => AUDIO="${DIR}/Musique"

282 Mot inconnu : VIDEO => VIDEO="${DIR}/Vidéos"
282 Mot inconnu : DIR => VIDEO="${DIR}/Vidéos"

283 Mot inconnu : IMG => IMG="${DIR}/Images"
283 Mot inconnu : DIR => IMG="${DIR}/Images"

284 Mot inconnu : DIR => ARCHIVES="${DIR}/Archives"
284 Guillemets typographiques fermants. => ARCHIVES="${DIR}/Archives"

285 Mot inconnu : DIR => DOCS="${DIR}/Documents"

286 Mot inconnu : DIR => TEX="${DIR}/Documents"

287 Mot inconnu : MISC => MISC="${DIR}/Divers"
287 Mot inconnu : DIR => MISC="${DIR}/Divers"
287 Guillemets typographiques fermants. => MISC="${DIR}/Divers"

288 Mot inconnu : BIN => BIN="${DIR}/Exécutables"
288 Mot inconnu : DIR => BIN="${DIR}/Exécutables"
288 Guillemets typographiques fermants. => BIN="${DIR}/Exécutables"

291 Mot inconnu : createdirs => createdirs

292 Mot inconnu : SCE => for SCE in "${TABSCE[@]}"
292 Mot inconnu : TABSCE => for SCE in "${TABSCE[@]}"

294 Guillemets typographiques ouvrants. => 	# Option "terminal" pour utilisation non graphique
294 Guillemets typographiques fermants. => 	# Option "terminal" pour utilisation non graphique

295 Pas d’espace après ce signe. => 	if [ "$TERMINAL" = "VRAI" ]
295 Guillemets typographiques fermants. => 	if [ "$TERMINAL" = "VRAI" ]
295 Guillemets typographiques ouvrants. => 	if [ "$TERMINAL" = "VRAI" ]
295 Guillemets typographiques fermants. => 	if [ "$TERMINAL" = "VRAI" ]
295 Pas d’espace avant ce signe. => 	if [ "$TERMINAL" = "VRAI" ]

296 Mot inconnu : then => 	then

297 Mot inconnu : SCE => 		tri "${SCE}"

298 Mot inconnu : else => 	else

299 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Mot inconnu : SCE =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Mot inconnu : zenity =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Mot inconnu : progress =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Mot inconnu : title =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Guillemets typographiques ouvrants. =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Guillemets typographiques fermants. =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel
299 Mot inconnu : pulsate =>         tri "${SCE}" | zenity --progress --title "Dossier Magique - Transfert en cours" --auto-close --pulsate --no-cancel

301 Mot inconnu : done => done

304 Mot inconnu : OLDIFS => IFS="${OLDIFS}"

305 Mot inconnu : OLDDIR => cd "${OLDDIR}"

307 Guillemets typographiques ouvrants. => # Option "graphique" ou par défaut pour utilisation graphique
307 Guillemets typographiques fermants. => # Option "graphique" ou par défaut pour utilisation graphique

308 Pas d’espace après ce signe. => if [ "$TERMINAL" = "FAUX" ]
308 Guillemets typographiques fermants. => if [ "$TERMINAL" = "FAUX" ]
308 Guillemets typographiques ouvrants. => if [ "$TERMINAL" = "FAUX" ]
308 Guillemets typographiques fermants. => if [ "$TERMINAL" = "FAUX" ]
308 Pas d’espace avant ce signe. => if [ "$TERMINAL" = "FAUX" ]

309 Mot inconnu : then => then

311 Mot inconnu : OLDIFS => 	IFS="${OLDIFS}"

313 Mot inconnu : rm => 	rm /tmp/notice /tmp/tri

315 Mot inconnu : zenity => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Mot inconnu : title => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Guillemets typographiques ouvrants. => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Guillemets typographiques fermants. => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Mot inconnu : text => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Guillemets typographiques ouvrants. => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Guillemets typographiques fermants. => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Mot inconnu : timeout => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Guillemets typographiques ouvrants. => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"
315 Guillemets typographiques fermants. => 	zenity --info --title "Dossier Magique" --text "Traitement terminé" --timeout "5"

322 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - En console :
322 Il manque un espace insécable. => - En console :

323 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   chmod +x /chemin/vers/le/fichier/dossier_magique
323 Mot inconnu : chmod =>   chmod +x /chemin/vers/le/fichier/dossier_magique
323 Écriture épicène. Utilisez un point médian. =>   chmod +x /chemin/vers/le/fichier/dossier_magique
323 Mot inconnu : dossier_magique =>   chmod +x /chemin/vers/le/fichier/dossier_magique

324 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - En graphique avec le navigateur : clic droit sur le fichier > propriétés > permissions, et cochez la case "Exécution, autoriser l'exécution du fichier comme un programme".
324 Il manque un espace insécable. => - En graphique avec le navigateur : clic droit sur le fichier > propriétés > permissions, et cochez la case "Exécution, autoriser l'exécution du fichier comme un programme".
324 Guillemets typographiques ouvrants. => - En graphique avec le navigateur : clic droit sur le fichier > propriétés > permissions, et cochez la case "Exécution, autoriser l'exécution du fichier comme un programme".
324 Guillemets typographiques fermants. => - En graphique avec le navigateur : clic droit sur le fichier > propriétés > permissions, et cochez la case "Exécution, autoriser l'exécution du fichier comme un programme".

340 Mot inconnu : rar => Pour supprimer par exemple les fichiers de type rar, il suffit de modifier la ligne :
340 Il manque un espace insécable. => Pour supprimer par exemple les fichiers de type rar, il suffit de modifier la ligne :
341 Une de ces ponctuations est superflue. => <code>*tar* | *rar* | *zip*) bouge ${fichier} ${ARCHIVES};;</code>

342 Il manque un espace insécable. => en :
343 Une de ces ponctuations est superflue. => <code>*tar* | *zip*) bouge ${fichier} ${ARCHIVES};;</code>

345 Il manque un espace insécable. => De même, pour rajouter un type de fichier, il suffit d'adapter ou de créer la ligne correspondante. Les types de fichiers sont reconnus grâce à la commande **file**, donc pour savoir quoi rajouter un petit test s'impose :

346 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   file -bi un_fichier.test
346 Il manque un espace à côté du tiret. =>   file -bi un_fichier.test
346 Mot inconnu : bi =>   file -bi un_fichier.test
346 Mot inconnu : un_fichier =>   file -bi un_fichier.test
346 Il manque un espace. =>   file -bi un_fichier.test

352 Il manque un espace. => Le script accepte une option (longue %%--%%option ou courte -o) et un ou plusieurs paramètres.
352 Il manque un espace à côté du tiret. => Le script accepte une option (longue %%--%%option ou courte -o) et un ou plusieurs paramètres.

353 Il manque un espace insécable. => Les options sont, respectivement :

354 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    [--terminal ou -t]     --> Le script est lancé en ligne de commande

355 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    [--graphique ou -g] ou rien     --> Le script est lancé en mode graphique. Il ne prend pas de paramètre sur la ligne
355 Il manque un espace à côté du tiret. =>    [--graphique ou -g] ou rien     --> Le script est lancé en mode graphique. Il ne prend pas de paramètre sur la ligne
355 Espace(s) surnuméraire(s) à supprimer. =>    [--graphique ou -g] ou rien     --> Le script est lancé en mode graphique. Il ne prend pas de paramètre sur la ligne

356 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    [--version ou -v]     --> Affiche la version courante du script. Pas de paramètre
356 Il manque un espace à côté du tiret. =>    [--version ou -v]     --> Affiche la version courante du script. Pas de paramètre

357 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    [--aide ou -a]     --> Affiche un bref rappel d'aide pour l'utilisation. Pas de paramètre
357 Il manque un espace à côté du tiret. =>    [--aide ou -a]     --> Affiche un bref rappel d'aide pour l'utilisation. Pas de paramètre

358 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    [--recursif ou -r]    --> Gère la récursivité. Note : Ajouter cette option à la commande de lancement dans les deux modes
358 Mot inconnu : recursif =>    [--recursif ou -r]    --> Gère la récursivité. Note : Ajouter cette option à la commande de lancement dans les deux modes
358 Il manque un espace à côté du tiret. =>    [--recursif ou -r]    --> Gère la récursivité. Note : Ajouter cette option à la commande de lancement dans les deux modes
358 Il manque un espace insécable. =>    [--recursif ou -r]    --> Gère la récursivité. Note : Ajouter cette option à la commande de lancement dans les deux modes

359 Il manque un espace insécable. => Exemple :

360 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    ./dossier_magique -t | --terminal CIBLE SOURCE1 SOURCE2 ...
360 Mot inconnu : dossier_magique =>    ./dossier_magique -t | --terminal CIBLE SOURCE1 SOURCE2 ...
360 Mot inconnu : SOURCE1 =>    ./dossier_magique -t | --terminal CIBLE SOURCE1 SOURCE2 ...
360 Mot inconnu : SOURCE2 =>    ./dossier_magique -t | --terminal CIBLE SOURCE1 SOURCE2 ...
360 Typographie : points de suspension. Utilisez le caractère dédié. =>    ./dossier_magique -t | --terminal CIBLE SOURCE1 SOURCE2 ...

361 Mot inconnu : SOURCE1 => (où CIBLE, SOURCE1 ... SOURCEn sont des répertoires. CIBLE est le dossier "racine" résultant, SOURCE(s) les dossiers à classer.
361 Typographie : points de suspension. Utilisez le caractère dédié. => (où CIBLE, SOURCE1 ... SOURCEn sont des répertoires. CIBLE est le dossier "racine" résultant, SOURCE(s) les dossiers à classer.
361 Mot inconnu : SOURCEn => (où CIBLE, SOURCE1 ... SOURCEn sont des répertoires. CIBLE est le dossier "racine" résultant, SOURCE(s) les dossiers à classer.
361 Guillemets typographiques ouvrants. => (où CIBLE, SOURCE1 ... SOURCEn sont des répertoires. CIBLE est le dossier "racine" résultant, SOURCE(s) les dossiers à classer.
361 Guillemets typographiques fermants. => (où CIBLE, SOURCE1 ... SOURCEn sont des répertoires. CIBLE est le dossier "racine" résultant, SOURCE(s) les dossiers à classer.
361 Écriture invariable. Utilisez un point médian. => (où CIBLE, SOURCE1 ... SOURCEn sont des répertoires. CIBLE est le dossier "racine" résultant, SOURCE(s) les dossiers à classer.

364 Il manque un espace insécable. => Si les noms des répertoires contiennent des espaces et autres caractères spéciaux, mettez-les systématiquement entre guillemets et si vous référencez le dossier personnel (~/dossier/) dans le chemin, ne l'incluez pas dans les guillemets :

365 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...
365 Mot inconnu : dossier_magique =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...
365 Guillemets typographiques ouvrants. =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...
365 Guillemets typographiques fermants. =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...
365 Guillemets typographiques ouvrants. =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...
365 Guillemets typographiques fermants. =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...
365 Typographie : points de suspension. Utilisez le caractère dédié. =>    ./dossier_magique -t "répertoire CIBLE" ~/dossier/"répertoire SOURCE" ...

368 Il manque un espace à côté du tiret. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.
368 Il manque un espace. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.
368 Il manque un espace insécable. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.
368 Guillemets typographiques ouvrants. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.
368 Guillemets typographiques fermants. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.
368 Écriture invariable. Utilisez un point médian. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.
368 Écriture invariable. Utilisez un point médian. => En mode graphique, ne spécifiez ni paramètre ni option (ou -g | %%--%%graphique qui est la valeur par défaut). Le script affiche une petite fenêtre d'aide, puis demande au fur et à mesure les dossiers à traiter : D'abord la "racine" CIBLE, unique, puis le(s) dossier(s) SOURCE(s) à classer.

370 Typographie : points de suspension. Utilisez le caractère dédié. => Si vous devez abandonner le script en cours de route (un doute sur le travail à exécuter...), cliquez simplement sur "Annuler" pour l'interrompre sans rien effectuer.
370 Guillemets typographiques ouvrants. => Si vous devez abandonner le script en cours de route (un doute sur le travail à exécuter...), cliquez simplement sur "Annuler" pour l'interrompre sans rien effectuer.
370 Guillemets typographiques fermants. => Si vous devez abandonner le script en cours de route (un doute sur le travail à exécuter...), cliquez simplement sur "Annuler" pour l'interrompre sans rien effectuer.

375 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   LOG=/dev/null

377 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   LOG=chemin_du_fichier_voulu
377 Mot inconnu : chemin_du_fichier_voulu =>   LOG=chemin_du_fichier_voulu
383 Il manque un espace insécable. => Pour exécuter automatiquement le script toutes les 5 minutes, par exemple, vous pouvez utiliser [[:cron|crontab]]. On édite la crontab :

384 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   crontab -e
384 Mot inconnu : crontab =>   crontab -e
384 Il manque un espace à côté du tiret. =>   crontab -e

386 Il manque un espace insécable. => Et on rajoute :
387 Typographie : points de suspension. Utilisez le caractère dédié. => <code>*/5 * * * * /chemin/vers/dossier_magique -t CIBLE [SOURCE...]</code>

391 Il manque un espace insécable. => Vous pouvez créer un lanceur sur le bureau ou dans le menu pour lancer facilement le script en mode graphique. Identifiez-le avec cette icône :

392 Mot inconnu : icons => {{:icons:dossier_magique.png|}}
392 Il manque un espace. => {{:icons:dossier_magique.png|}}
392 Mot inconnu : dossier_magique => {{:icons:dossier_magique.png|}}
