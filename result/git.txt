10 Espace(s) en fin de ligne à supprimer. => **Git** est un logiciel de gestion de versions décentralisé. Il est conçu pour être efficace tant avec les petits projets, que les plus importants. 

12 Mot inconnu : linux => Git a spécialement été créé pour le développement du noyau linux. 
12 Espace(s) en fin de ligne à supprimer. => Git a spécialement été créé pour le développement du noyau linux. 

14 Mot inconnu : Torvalds => Ce projet a débuté en 2005, Linus Torvalds voulait créer une alternative au logiciel propriétaire BitKeeper. Depuis, Git a beaucoup évolué et est utilisé par de nombreux projets.
14 Mot inconnu : BitKeeper => Ce projet a débuté en 2005, Linus Torvalds voulait créer une alternative au logiciel propriétaire BitKeeper. Depuis, Git a beaucoup évolué et est utilisé par de nombreux projets.

16 Mot inconnu : SVN => Contrairement à des outils comme SVN ou CVS, Git fonctionne de façon décentralisée, c'est-à-dire que le développement ne se fait pas sur un serveur centralisé, mais chaque personne peut développer sur son propre dépôt. Git facilite ensuite la fusion (//merge//) des différents dépôts.
16 Mot inconnu : CVS => Contrairement à des outils comme SVN ou CVS, Git fonctionne de façon décentralisée, c'est-à-dire que le développement ne se fait pas sur un serveur centralisé, mais chaque personne peut développer sur son propre dépôt. Git facilite ensuite la fusion (//merge//) des différents dépôts.
16 Mot inconnu : merge => Contrairement à des outils comme SVN ou CVS, Git fonctionne de façon décentralisée, c'est-à-dire que le développement ne se fait pas sur un serveur centralisé, mais chaque personne peut développer sur son propre dépôt. Git facilite ensuite la fusion (//merge//) des différents dépôts.

20 Il manque un espace. => Pour pouvoir utiliser Git, il suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>git]]**.

22 Il manque un espace insécable. => Git dispose également de nombreux plugins, les plus utilisés sont dans les dépôts :

23 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>git-lfs]] : Gestion des //gros// fichiers, notamment binaires (large file storage) ([[https://github.com/git-lfs/git-lfs/wiki/Tutorial|tuto (en)]])
23 Mot inconnu : git-lfs =>   * [[apt>git-lfs]] : Gestion des //gros// fichiers, notamment binaires (large file storage) ([[https://github.com/git-lfs/git-lfs/wiki/Tutorial|tuto (en)]])
23 Il manque un espace insécable. =>   * [[apt>git-lfs]] : Gestion des //gros// fichiers, notamment binaires (large file storage) ([[https://github.com/git-lfs/git-lfs/wiki/Tutorial|tuto (en)]])
23 Mot inconnu : storage =>   * [[apt>git-lfs]] : Gestion des //gros// fichiers, notamment binaires (large file storage) ([[https://github.com/git-lfs/git-lfs/wiki/Tutorial|tuto (en)]])

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>git-svn]] : Gestion des dépôts [[:subversion|SVN]] ;
24 Mot inconnu : git-svn =>   * [[apt>git-svn]] : Gestion des dépôts [[:subversion|SVN]] ;
24 Il manque un espace insécable. =>   * [[apt>git-svn]] : Gestion des dépôts [[:subversion|SVN]] ;
24 Il manque un espace insécable. =>   * [[apt>git-svn]] : Gestion des dépôts [[:subversion|SVN]] ;

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>git-cvs]] : Gestion des dépôts [[:cvs|CVS]] ;
25 Mot inconnu : git-cvs =>   * [[apt>git-cvs]] : Gestion des dépôts [[:cvs|CVS]] ;
25 Il manque un espace insécable. =>   * [[apt>git-cvs]] : Gestion des dépôts [[:cvs|CVS]] ;
25 Il manque un espace insécable. =>   * [[apt>git-cvs]] : Gestion des dépôts [[:cvs|CVS]] ;

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * etc.

28 Il manque un espace. => Une fois l'installation réalisée, il faut impérativement définir le paramètre [user]. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez le fichier]] caché **''.gitconfig''** se trouvant dans votre dossier personnel :
28 Mot inconnu : gitconfig => Une fois l'installation réalisée, il faut impérativement définir le paramètre [user]. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez le fichier]] caché **''.gitconfig''** se trouvant dans votre dossier personnel :
28 Guillemets typographiques fermants. => Une fois l'installation réalisée, il faut impérativement définir le paramètre [user]. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez le fichier]] caché **''.gitconfig''** se trouvant dans votre dossier personnel :
28 Il manque un espace insécable. => Une fois l'installation réalisée, il faut impérativement définir le paramètre [user]. Pour cela, [[:tutoriel:comment_editer_un_fichier|éditez le fichier]] caché **''.gitconfig''** se trouvant dans votre dossier personnel :

29 Espace(s) en fin de ligne à supprimer. => <file> [user] 

30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     email = p.nom@ubuntu-fr.org
30 Mot inconnu : email =>     email = p.nom@ubuntu-fr.org

31 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     name = nom_programmeur 
31 Mot inconnu : name =>     name = nom_programmeur 
31 Mot inconnu : nom_programmeur =>     name = nom_programmeur 
31 Espace(s) en fin de ligne à supprimer. =>     name = nom_programmeur 

33 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  [alias] 
33 Espace(s) en fin de ligne à supprimer. =>  [alias] 

34 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ci = commit 
34 Espace(s) en fin de ligne à supprimer. =>     ci = commit 

35 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     co = checkout 
35 Mot inconnu : co =>     co = checkout 
35 Mot inconnu : checkout =>     co = checkout 
35 Espace(s) en fin de ligne à supprimer. =>     co = checkout 

36 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     st = status 
36 Espace(s) en fin de ligne à supprimer. =>     st = status 

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     br = branch  </file>
37 Mot inconnu : br =>     br = branch  </file>
37 Mot inconnu : branch =>     br = branch  </file>
37 Espace(s) surnuméraire(s) à supprimer. =>     br = branch  </file>

38 Il manque un espace insécable. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''
38 Espace(s) surnuméraire(s) à supprimer. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''
38 Guillemets typographiques ouvrants. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''
38 Guillemets typographiques fermants. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''
38 Espace(s) surnuméraire(s) à supprimer. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''
38 Guillemets typographiques ouvrants. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''
38 Guillemets typographiques fermants. => Les alias quant à eux permettent de raccourcir les commandes, exemple :  ''git st''  au lieu de  ''git status''

43 Espace(s) en fin de ligne à supprimer. => Avant de commencer à utiliser Git, il faut lui demander de créer un nouveau dépôt. 

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mkdir nom_depot
45 Mot inconnu : mkdir =>   mkdir nom_depot
45 Mot inconnu : nom_depot =>   mkdir nom_depot

46 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cd nom_depot
46 Mot inconnu : nom_depot =>   cd nom_depot

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git init
47 Mot inconnu : init =>   git init

49 Guillemets typographiques ouvrants. => Dans le répertoire ''nom_depot'', vous aurez alors un dossier caché ''.git'', c'est dans ce dossier que Git stockera les différentes révisions et informations du projet.
49 Mot inconnu : nom_depot => Dans le répertoire ''nom_depot'', vous aurez alors un dossier caché ''.git'', c'est dans ce dossier que Git stockera les différentes révisions et informations du projet.
49 Guillemets typographiques fermants. => Dans le répertoire ''nom_depot'', vous aurez alors un dossier caché ''.git'', c'est dans ce dossier que Git stockera les différentes révisions et informations du projet.
49 Guillemets fermants. => Dans le répertoire ''nom_depot'', vous aurez alors un dossier caché ''.git'', c'est dans ce dossier que Git stockera les différentes révisions et informations du projet.
49 Guillemets typographiques fermants. => Dans le répertoire ''nom_depot'', vous aurez alors un dossier caché ''.git'', c'est dans ce dossier que Git stockera les différentes révisions et informations du projet.

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone git://<dépot>

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git clone https://<dépot>

57 Guillemets typographiques ouvrants. => Vous pourrez ensuite (si vous avez les droits suffisants sur le dépôt distant), envoyer vos changements avec ''git push''.
57 Mot inconnu : push => Vous pourrez ensuite (si vous avez les droits suffisants sur le dépôt distant), envoyer vos changements avec ''git push''.
57 Guillemets typographiques fermants. => Vous pourrez ensuite (si vous avez les droits suffisants sur le dépôt distant), envoyer vos changements avec ''git push''.

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git diff
61 Mot inconnu : diff =>   git diff

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git diff <commit1> <commit2>
62 Mot inconnu : diff =>   git diff <commit1> <commit2>

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

64 Guillemets typographiques ouvrants. => Permet de comparer 2 versions. Vous pourrez ainsi voir les changements effectués. Si vous avez des changements pas encore //commités//, la commande ''git diff'' affichera les modifications effectuées depuis le dernier //commit//.
64 Mot inconnu : diff => Permet de comparer 2 versions. Vous pourrez ainsi voir les changements effectués. Si vous avez des changements pas encore //commités//, la commande ''git diff'' affichera les modifications effectuées depuis le dernier //commit//.
64 Guillemets typographiques fermants. => Permet de comparer 2 versions. Vous pourrez ainsi voir les changements effectués. Si vous avez des changements pas encore //commités//, la commande ''git diff'' affichera les modifications effectuées depuis le dernier //commit//.

66 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git status

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git log

72 S’il s’agit d’un impératif, mettez un trait d’union. => Liste les //commits// effectués dans le dépôt. Vous pourrez ainsi voir les modifications qui ont été faites.

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add <nom_fichier_ou_dossier>
76 Mot inconnu : add =>   git add <nom_fichier_ou_dossier>

78 Guillemets typographiques ouvrants. => Cette commande indique à Git que le fichier (ou dossier) nommé "nom_fichier_ou_dossier" devra être versionné.
78 Mot inconnu : nom_fichier_ou_dossier => Cette commande indique à Git que le fichier (ou dossier) nommé "nom_fichier_ou_dossier" devra être versionné.
78 Guillemets typographiques fermants. => Cette commande indique à Git que le fichier (ou dossier) nommé "nom_fichier_ou_dossier" devra être versionné.

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git add --all *
80 Mot inconnu : add =>   git add --all *
80 Mot inconnu : all =>   git add --all *

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git rm <nom_fichier>
84 Mot inconnu : rm =>   git rm <nom_fichier>

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git mv <nom_fichier> <nouvelle_destination>
88 Mot inconnu : mv =>   git mv <nom_fichier> <nouvelle_destination>

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git pull

96 Il manque un trait d’union. => Met à jour votre dépôt local (à faire avant de commencer à modifier des fichiers pour être sûr de travailler sur leurs dernières versions et avant tout //commit// pour éviter les éventuels conflits avec des modifications effectuées par d'autres utilisateurs entre temps).

98 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit <fichier1> <fichier2>

100 Mot inconnu : fichier1 => Crée un //commit// contenant fichier1 et fichier2. Ces fichiers auront dû être au préalable ajoutés au dépôt avec la commande ''git add''.
100 Mot inconnu : fichier2 => Crée un //commit// contenant fichier1 et fichier2. Ces fichiers auront dû être au préalable ajoutés au dépôt avec la commande ''git add''.
100 Guillemets typographiques ouvrants. => Crée un //commit// contenant fichier1 et fichier2. Ces fichiers auront dû être au préalable ajoutés au dépôt avec la commande ''git add''.
100 Mot inconnu : add => Crée un //commit// contenant fichier1 et fichier2. Ces fichiers auront dû être au préalable ajoutés au dépôt avec la commande ''git add''.
100 Guillemets typographiques fermants. => Crée un //commit// contenant fichier1 et fichier2. Ces fichiers auront dû être au préalable ajoutés au dépôt avec la commande ''git add''.

105 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git commit -a
105 Il manque un espace à côté du tiret. =>   git commit -a

107 Mot inconnu : add => Crée un nouveau //commit// contenant tous les changements effectués sur les fichiers (''git add'' n'est donc pas nécessaire avant un ''commit -a'').
107 Guillemets typographiques fermants. => Crée un nouveau //commit// contenant tous les changements effectués sur les fichiers (''git add'' n'est donc pas nécessaire avant un ''commit -a'').
107 Guillemets typographiques ouvrants. => Crée un nouveau //commit// contenant tous les changements effectués sur les fichiers (''git add'' n'est donc pas nécessaire avant un ''commit -a'').
107 Il manque un espace à côté du tiret. => Crée un nouveau //commit// contenant tous les changements effectués sur les fichiers (''git add'' n'est donc pas nécessaire avant un ''commit -a'').
107 Guillemets typographiques fermants. => Crée un nouveau //commit// contenant tous les changements effectués sur les fichiers (''git add'' n'est donc pas nécessaire avant un ''commit -a'').

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git push origin master
109 Mot inconnu : push =>   git push origin master
109 Mot inconnu : origin =>   git push origin master

111 S’il s’agit d’un impératif, mettez un trait d’union. => Envoie le //commit// dans la branche principale "master" du dépôt "origin".
111 Guillemets typographiques ouvrants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin".
111 Guillemets typographiques fermants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin".
111 Guillemets typographiques ouvrants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin".
111 Mot inconnu : origin => Envoie le //commit// dans la branche principale "master" du dépôt "origin".
111 Guillemets typographiques fermants. => Envoie le //commit// dans la branche principale "master" du dépôt "origin".

114 Il manque un espace insécable. => Git dispose de commandes permettant d'annuler des changements effectués. **Attention, ces annulations ne sont pas réversibles** !

116 Espace(s) surnuméraire(s) à supprimer. => ^ Commande                                                               ^ Effet                                                                                     ^
116 Espace(s) surnuméraire(s) à supprimer. => ^ Commande                                                               ^ Effet                                                                                     ^

117 Guillemets typographiques ouvrants. => | ''git reset --hard HEAD''                                             | Annule les changements effectués depuis le dernier //commit//. |
117 Mot inconnu : reset => | ''git reset --hard HEAD''                                             | Annule les changements effectués depuis le dernier //commit//. |
117 Mot inconnu : HEAD => | ''git reset --hard HEAD''                                             | Annule les changements effectués depuis le dernier //commit//. |
117 Guillemets typographiques fermants. => | ''git reset --hard HEAD''                                             | Annule les changements effectués depuis le dernier //commit//. |

118 Guillemets typographiques ouvrants. => | ''git reset --hard HEAD<nowiki>^</nowiki>''                | Supprime le dernier //commit//. Cette action peut être répétée autant de fois que vous le désirez. |
118 Mot inconnu : reset => | ''git reset --hard HEAD<nowiki>^</nowiki>''                | Supprime le dernier //commit//. Cette action peut être répétée autant de fois que vous le désirez. |
118 Mot inconnu : HEAD => | ''git reset --hard HEAD<nowiki>^</nowiki>''                | Supprime le dernier //commit//. Cette action peut être répétée autant de fois que vous le désirez. |

119 Guillemets typographiques ouvrants. => | ''git revert commit''                                                     | Restaure le dépôt tel qu'il l'était lors du //commit// spécifié.|
119 Mot inconnu : revert => | ''git revert commit''                                                     | Restaure le dépôt tel qu'il l'était lors du //commit// spécifié.|
119 Guillemets typographiques fermants. => | ''git revert commit''                                                     | Restaure le dépôt tel qu'il l'était lors du //commit// spécifié.|

121 Guillemets typographiques ouvrants. => |                                                                                   |  (ou annulées avec ''git reset''). |
121 Mot inconnu : reset => |                                                                                   |  (ou annulées avec ''git reset''). |
121 Guillemets typographiques fermants. => |                                                                                   |  (ou annulées avec ''git reset''). |

126 Mot inconnu : github => Ici, nous supposerons qu'on travaille avec deux dépôts Git distincts nommés respectivement moi et bob. Le dépôt moi est votre dépôt, bob est celui d'une autre personne, admettons qu'il est situé à l'adresse [[git://github.com/bob]]

130 Mot inconnu : merges => Git permet une gestion efficace des branches, et des //merges// (fusion de branches). Les branches permettent d'avoir simultanément plusieurs versions de votre programme dans votre dépôt Git. C'est très utile, par exemple pour développer une nouvelle fonctionnalité, tout en gardant la branche principale intacte. Ainsi, vous pouvez toujours faire des changements dans la branche principale (corrections de bugs par exemple), tout en développant en parallèle une nouvelle fonctionnalité.

132 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git branch test
132 Mot inconnu : branch =>   git branch test

133 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

134 Guillemets typographiques ouvrants. => Crée une nouvelle branche nommée "test".
134 Guillemets typographiques fermants. => Crée une nouvelle branche nommée "test".

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git branch
136 Mot inconnu : branch =>   git branch

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git checkout <nom_branche>
140 Mot inconnu : checkout =>   git checkout <nom_branche>

141 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

142 Guillemets typographiques ouvrants. => Change de branche. Après cette commande, vous aurez alors accès aux fichiers présents dans la branche nommée "nom_branche".
142 Mot inconnu : nom_branche => Change de branche. Après cette commande, vous aurez alors accès aux fichiers présents dans la branche nommée "nom_branche".
142 Guillemets typographiques fermants. => Change de branche. Après cette commande, vous aurez alors accès aux fichiers présents dans la branche nommée "nom_branche".

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git merge <nom_branche>
145 Mot inconnu : merge =>   git merge <nom_branche>

146 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

147 Guillemets typographiques ouvrants. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//. 
147 Mot inconnu : nom_branche => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//. 
147 Guillemets typographiques fermants. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//. 
147 Il faut élider “si” et l’accoler au pronom. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//. 
147 Mot inconnu : merge => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//. 
147 Espace(s) en fin de ligne à supprimer. => Fusionne la branche courante avec la branche nommée "nom_branche". Il se peut qu'il y ait des conflits et que Git ne soit pas capable de les résoudre tout seul. Les conflits apparaissent lors de changements divergents au même endroit dans un fichier. Si il y a des conflits, Git laissera un marquage directement dans le fichier, contenant le code de la branche courante, et celui de la branche que vous voulez fusionner. Vous devrez alors corriger le problème manuellement. Une fois corrigé, vous devez //commiter// les changements pour finaliser le //merge//. 

149 Il manque un espace insécable. => Si jamais vous décidez d'abandonner la fusion, alors exécutez la commande :

151 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git reset --hard HEAD
151 Mot inconnu : reset =>   git reset --hard HEAD
151 Mot inconnu : HEAD =>   git reset --hard HEAD

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git remote add bob git://github.com/bob
157 Mot inconnu : remote =>   git remote add bob git://github.com/bob
157 Mot inconnu : add =>   git remote add bob git://github.com/bob
157 Mot inconnu : github =>   git remote add bob git://github.com/bob

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git fetch bob
158 Mot inconnu : fetch =>   git fetch bob

159 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git merge bob/master
159 Mot inconnu : merge =>   git merge bob/master

162 Guillemets typographiques ouvrants. => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :
162 Mot inconnu : fetch => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :
162 Guillemets typographiques fermants. => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :
162 Guillemets typographiques ouvrants. => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :
162 Mot inconnu : merge => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :
162 Guillemets typographiques fermants. => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :
162 Il manque un espace insécable. => Il existe une commande qui a le même effet que ''git fetch'' suivi de ''git merge'' :

164 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   git pull bob

170 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://live.gnome.org/giggle|Giggle]] (GTK+)

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://github.com/krig/git-age|git-age]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/5_trouver_les_probl%25C3%25A8mes_-_git_blame.html|git blame]] (PyGTK)
171 Mot inconnu : blame =>   * **(en)** [[https://github.com/krig/git-age|git-age]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/5_trouver_les_probl%25C3%25A8mes_-_git_blame.html|git blame]] (PyGTK)
171 Mot inconnu : PyGTK =>   * **(en)** [[https://github.com/krig/git-age|git-age]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/5_trouver_les_probl%25C3%25A8mes_-_git_blame.html|git blame]] (PyGTK)

172 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://git-cola.github.com/|git-cola]] (PyQt)
172 Mot inconnu : PyQt =>    * **(en)** [[http://git-cola.github.com/|git-cola]] (PyQt)

173 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://www.collab.net/giteyeapp|GitEye]] (propriétaire ?)
173 Il manque un espace insécable. =>    * **(en)** [[http://www.collab.net/giteyeapp|GitEye]] (propriétaire ?)

174 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://github.com/gdevic/GitForce|GitForce]] (Mono)

175 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>gitg]] (GTK+)
175 Mot inconnu : gitg =>   * [[apt>gitg]] (GTK+)

176 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git
176 Mot inconnu : gitk =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git
176 Mot inconnu : Tcl =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git
176 Mot inconnu : Tk =>   * [[apt>git-gui]] et [[apt>gitk]], interfaces graphiques (Tcl/Tk) livrées avec Git

177 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>qgit]] (Qt)
177 Mot inconnu : qgit =>   * [[apt>qgit]] (Qt)

178 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[https://github.com/qgrit/qgrit/wiki|qgrit]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/4_recombinaison_interactive.html|git rebase -i]] (Qt)
178 Mot inconnu : rebase =>    * **(en)** [[https://github.com/qgrit/qgrit/wiki|qgrit]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/4_recombinaison_interactive.html|git rebase -i]] (Qt)
178 Il manque un espace à côté du tiret. =>    * **(en)** [[https://github.com/qgrit/qgrit/wiki|qgrit]], interface graphique pour la commande [[http://www.alexgirard.com/git-book/4_recombinaison_interactive.html|git rebase -i]] (Qt)

179 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://www.rabbitvcs.org/|RabbitVCS]] (PyGTK)
179 Mot inconnu : PyGTK =>    * **(en)** [[http://www.rabbitvcs.org/|RabbitVCS]] (PyGTK)

180 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://www.syntevo.com/smartgithg/|SmartGit]] (propriétaire ?)
180 Il manque un espace insécable. =>    * **(en)** [[http://www.syntevo.com/smartgithg/|SmartGit]] (propriétaire ?)

181 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[https://github.com/gyim/stupidgit/wiki|StupidGit]] (wxPython)
181 Mot inconnu : wxPython =>    * **(en)** [[https://github.com/gyim/stupidgit/wiki|StupidGit]] (wxPython)

182 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://www.devslashzero.com/teamgit|Team Git]] (Qt)
182 Mot inconnu : Team =>   * **(en)** [[http://www.devslashzero.com/teamgit|Team Git]] (Qt)

183 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://jonas.nitro.dk/tig/|Tig]], interface en mode texte

184 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[https://github.com/FredrikNoren/ungit|Ungit]] Interopérable (Linux, Mac, Windows) et moderne

185 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[https://www.gitkraken.com/|GitKraken]] Linux, Windows et Mac

188 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://www.eclipse.org/egit/|EGit]], extension ajoutant le support de Git dans Eclipse

189 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[:gitolite|Gitolite]]: outil de gestion de dépôts Git avec utilisateurs, droits, etc.

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[https://gogs.io/|Gogs]]: serveur de gestion de dépôts comme Gitolite avec interface http(s) inclus par défaut.
190 Mot inconnu : Gitolite =>   * **(fr)** [[https://gogs.io/|Gogs]]: serveur de gestion de dépôts comme Gitolite avec interface http(s) inclus par défaut.
190 Écriture invariable. Utilisez un point médian. =>   * **(fr)** [[https://gogs.io/|Gogs]]: serveur de gestion de dépôts comme Gitolite avec interface http(s) inclus par défaut.

191 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://philjackson.github.com/magit/|Magit]], intégration de Git dans Emacs.
191 Mot inconnu : Emacs =>    * **(en)** [[http://philjackson.github.com/magit/|Magit]], intégration de Git dans Emacs.

192 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://www.vim.org/scripts/script.php?script_id=2975|Fugitive]], Intégration de Git dans Vim.

193 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[:gource|Gource]], Visualiser l'activité de votre dépôt dans une animation qui traverse le temps.

194 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[http://goodies.xfce.org/projects/thunar-plugins/thunar-vcs-plugin|thunar-vcs-plugin]],  permet l'accès aux dépôts Git et [[:Subversion]] via [[:Thunar]]. Le paquet [[apt>thunar-vcs-plugin]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +**.
194 Espace(s) surnuméraire(s) à supprimer. =>    * **(en)** [[http://goodies.xfce.org/projects/thunar-plugins/thunar-vcs-plugin|thunar-vcs-plugin]],  permet l'accès aux dépôts Git et [[:Subversion]] via [[:Thunar]]. Le paquet [[apt>thunar-vcs-plugin]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +**.

195 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * [[apt>kdesdk-dolphin-plugins]] permet l'utilisation de l'overlay des dépôt de versionning (pas uniquement git) dans [[:dolphin]]. (activable par services dans les paramètres)
195 Mot inconnu : kdesdk-dolphin-plugins =>    * [[apt>kdesdk-dolphin-plugins]] permet l'utilisation de l'overlay des dépôt de versionning (pas uniquement git) dans [[:dolphin]]. (activable par services dans les paramètres)
195 Mot inconnu : overlay =>    * [[apt>kdesdk-dolphin-plugins]] permet l'utilisation de l'overlay des dépôt de versionning (pas uniquement git) dans [[:dolphin]]. (activable par services dans les paramètres)
195 Accord de nombre erroné : « dépôt » devrait être au pluriel. =>    * [[apt>kdesdk-dolphin-plugins]] permet l'utilisation de l'overlay des dépôt de versionning (pas uniquement git) dans [[:dolphin]]. (activable par services dans les paramètres)
195 Mot inconnu : versionning =>    * [[apt>kdesdk-dolphin-plugins]] permet l'utilisation de l'overlay des dépôt de versionning (pas uniquement git) dans [[:dolphin]]. (activable par services dans les paramètres)

196 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[https://github.com/nvie/gitflow|Git-flow]], gestion avancées des branches dans une logique projet : **(en)**[[http://nvie.com/posts/a-successful-git-branching-model/|Un modèle de branches concluant pour Git]]. Le paquet [[apt>git-flow]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +** **(dépôts "universe")**.
196 Il manque un espace insécable. =>    * **(en)** [[https://github.com/nvie/gitflow|Git-flow]], gestion avancées des branches dans une logique projet : **(en)**[[http://nvie.com/posts/a-successful-git-branching-model/|Un modèle de branches concluant pour Git]]. Le paquet [[apt>git-flow]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +** **(dépôts "universe")**.
196 Mot inconnu : git-flow =>    * **(en)** [[https://github.com/nvie/gitflow|Git-flow]], gestion avancées des branches dans une logique projet : **(en)**[[http://nvie.com/posts/a-successful-git-branching-model/|Un modèle de branches concluant pour Git]]. Le paquet [[apt>git-flow]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +** **(dépôts "universe")**.
196 Guillemets typographiques ouvrants. =>    * **(en)** [[https://github.com/nvie/gitflow|Git-flow]], gestion avancées des branches dans une logique projet : **(en)**[[http://nvie.com/posts/a-successful-git-branching-model/|Un modèle de branches concluant pour Git]]. Le paquet [[apt>git-flow]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +** **(dépôts "universe")**.
196 Mot inconnu : universe =>    * **(en)** [[https://github.com/nvie/gitflow|Git-flow]], gestion avancées des branches dans une logique projet : **(en)**[[http://nvie.com/posts/a-successful-git-branching-model/|Un modèle de branches concluant pour Git]]. Le paquet [[apt>git-flow]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +** **(dépôts "universe")**.
196 Guillemets typographiques fermants. =>    * **(en)** [[https://github.com/nvie/gitflow|Git-flow]], gestion avancées des branches dans une logique projet : **(en)**[[http://nvie.com/posts/a-successful-git-branching-model/|Un modèle de branches concluant pour Git]]. Le paquet [[apt>git-flow]] est disponible pour **Ubuntu versions [[:precise|12.04]] & +** **(dépôts "universe")**.

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(fr)** [[http://actual-it.info/2013/gitg/|GITg]], GIT en mode graphique - Tutoriel d'utilisation de GITg
197 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    * **(fr)** [[http://actual-it.info/2013/gitg/|GITg]], GIT en mode graphique - Tutoriel d'utilisation de GITg

198 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * **(en)** [[https://git-lfs.github.com/|git-lfs Large File Storage]], gestion des fichiers lourds associés au projet: fichiers audio, vidéo, jeux de données (test…), graphiques… qui sont déposés sur un serveur à part.
198 Mot inconnu : git-lfs =>    * **(en)** [[https://git-lfs.github.com/|git-lfs Large File Storage]], gestion des fichiers lourds associés au projet: fichiers audio, vidéo, jeux de données (test…), graphiques… qui sont déposés sur un serveur à part.
198 Mot inconnu : Storage =>    * **(en)** [[https://git-lfs.github.com/|git-lfs Large File Storage]], gestion des fichiers lourds associés au projet: fichiers audio, vidéo, jeux de données (test…), graphiques… qui sont déposés sur un serveur à part.
198 Il manque un espace insécable. =>    * **(en)** [[https://git-lfs.github.com/|git-lfs Large File Storage]], gestion des fichiers lourds associés au projet: fichiers audio, vidéo, jeux de données (test…), graphiques… qui sont déposés sur un serveur à part.

201 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://git-scm.com/|Le site officiel de git maintenu par Scott Chacon]] ;
201 Incohérence avec “de” : “git” est une forme verbale conjuguée. =>   * **(en)** [[http://git-scm.com/|Le site officiel de git maintenu par Scott Chacon]] ;
201 Mot inconnu : Chacon =>   * **(en)** [[http://git-scm.com/|Le site officiel de git maintenu par Scott Chacon]] ;
201 Il manque un espace insécable. =>   * **(en)** [[http://git-scm.com/|Le site officiel de git maintenu par Scott Chacon]] ;

202 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://git-scm.com/book/fr|le livre en français sur le site officiel]];

203 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ;
203 Incohérence avec “de” : “git” est une forme verbale conjuguée. =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ;
203 Mot inconnu : Petr =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ;
203 Mot inconnu : Baudis =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ;
203 Il manque un espace insécable. =>   * **(en)** [[http://git.or.cz/index.html|Le site officiel de git maintenu par Petr Baudis]] ;

204 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[http://www.kernel.org/pub/software/scm/git/docs/user-manual.html|Manuel utilisateur Git]] : Une référence très complète ;
204 Il manque un espace insécable. =>   * **(en)** [[http://www.kernel.org/pub/software/scm/git/docs/user-manual.html|Manuel utilisateur Git]] : Une référence très complète ;
204 Il manque un espace insécable. =>   * **(en)** [[http://www.kernel.org/pub/software/scm/git/docs/user-manual.html|Manuel utilisateur Git]] : Une référence très complète ;

205 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://www.alexgirard.com/git-book/index.html|Le livre communautaire (libre et gratuit;) entièrement dédié à Git]] ;
205 Il manque un espace insécable. =>   * **(fr)** [[http://www.alexgirard.com/git-book/index.html|Le livre communautaire (libre et gratuit;) entièrement dédié à Git]] ;
205 Il manque un espace insécable. =>   * **(fr)** [[http://www.alexgirard.com/git-book/index.html|Le livre communautaire (libre et gratuit;) entièrement dédié à Git]] ;

206 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://gitimmersion.fr|Git immersion en français]], un des guides références anglais traduit en Français
206 Si vous parlez de la langue, pas de majuscule. =>   * **(fr)** [[http://gitimmersion.fr|Git immersion en français]], un des guides références anglais traduit en Français

209 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://github.com|GitHub]] : très bon dépôt gratuit. Une bonne gestion du travail en équipe, avec la possibilité de forker un dépôt, pour contribuer au développement sur son propre dépôt, tout en gardant un contact étroit avec le dépôt original. Appartient à microsoft depuis 2018.
209 Il manque un espace insécable. =>   * [[http://github.com|GitHub]] : très bon dépôt gratuit. Une bonne gestion du travail en équipe, avec la possibilité de forker un dépôt, pour contribuer au développement sur son propre dépôt, tout en gardant un contact étroit avec le dépôt original. Appartient à microsoft depuis 2018.
209 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * [[http://github.com|GitHub]] : très bon dépôt gratuit. Une bonne gestion du travail en équipe, avec la possibilité de forker un dépôt, pour contribuer au développement sur son propre dépôt, tout en gardant un contact étroit avec le dépôt original. Appartient à microsoft depuis 2018.
209 Mot inconnu : microsoft =>   * [[http://github.com|GitHub]] : très bon dépôt gratuit. Une bonne gestion du travail en équipe, avec la possibilité de forker un dépôt, pour contribuer au développement sur son propre dépôt, tout en gardant un contact étroit avec le dépôt original. Appartient à microsoft depuis 2018.

210 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches.
210 Il manque un espace insécable. =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches.
210 S’il s’agit de la préposition « à », il faut accentuer la majuscule. =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches.
210 Mot inconnu : gitorious =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches.
210 Mot inconnu : GitHub =>   * [[http://www.gitorious.org/|Gitorious]] : utilisé par de gros projets comme le framework Qt. A noter que le site web gitorious est un logiciel libre et donc installable sur son propre serveur à l'inverse de GitHub qui est propriétaire. Les fonctionnalités communautaires des 2 me semblent assez proches.

211 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction).
211 Il manque un espace insécable. =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction).
211 Mot inconnu : Github =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction).
211 Mot inconnu : __dépôts =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction).
211 Mot inconnu : privés__ =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction).
211 Confusion : “a” est une forme conjuguée de “avoir”. Pour la préposition, écrivez “à”. =>   * [[https://bitbucket.org/|BitBucket]] : concurrent de Github. Propose de faire des __dépôts privés__ gratuits (jusqu'a **5 utilisateurs** sur le même dépôt. Pas d'autre restriction).

212 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]].
212 Il manque un espace insécable. =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]].
212 Il manque un espace. =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]].
212 Mot inconnu : comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]].
212 Mot inconnu : Gitlab-ce =>   * [[https://github.com/gitlabhq/gitlabhq|GitLab]] : [[tutoriel:comment_installer_gitlab-ce_avec_docker_pour_son_poste_de_travail|Comment installer Gitlab-ce avec Docker pour son poste de travail]]. Logiciel open-source de dépôt, à installer sur sa machine depuis les sources [[https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md|Manuel d'installation]].

214 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub.
214 Il manque un espace insécable. =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub.
214 Mot inconnu : GitLab =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub.
214 Mot inconnu : FramaSoft =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub.
214 Mot inconnu : GitHub =>   * [[https://framagit.org|FramaGit]] : dépôt fonctionnant sous GitLab géré par FramaSoft, une alternative aux dépôts propriétaires comme GitHub.

217 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr.
217 Il manque un espace insécable. =>   * **(fr)** Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr.
217 Mot inconnu : bzr =>   * **(fr)** Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr.
217 Il manque un espace insécable. =>   * **(fr)** Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr.
217 Mot inconnu : ubuntu-fr =>   * **(fr)** Discussion [[http://forum.ubuntu-fr.org/viewtopic.php?id=692171|«Conversion d'un dépôt bzr en un dépôt git»]] sur le forum ubuntu-fr.

218 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://forum.ubuntu-fr.org/viewtopic.php?id=1310241|Création rapide de serveur git avec tutoriel]]

219 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://blogs.media-tips.com/bernard.opic/2013/12/01/initiez-vous-a-git-avec-laide-memoire-interactif-dandrew-peterson/|Aide-mémoire interactif]]

220 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]]
220 Mot inconnu : developpement =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]]
220 Il manque un espace. =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]]
220 Mot inconnu : start =>   * **(fr)** [[http://www.chtiland.fr/page.php?id=informatique:developpement:start#docs|Aide mémoire GIT au format PDF]]

224 Il manque un espace insécable. => //Contributeurs principaux : [[utilisateurs:geenux]].//
224 Il manque un espace. => //Contributeurs principaux : [[utilisateurs:geenux]].//
