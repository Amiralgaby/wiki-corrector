2 Mot inconnu : Xenial => {{tag>Xenial systemd service}}
2 Mot inconnu : systemd => {{tag>Xenial systemd service}}

5 Mot inconnu : systemd => ====== Créer un nouveau service avec systemd ======

6 Mot inconnu : systemd => Ce tutoriel décrit la démarche à suivre pour transformer un programme en un service [[:systemd]] pouvant être lancé automatiquement au démarrage du système.

10 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer des [[:sudo|droits d'administration]]
10 Mot inconnu : sudo =>   * Disposer des [[:sudo|droits d'administration]]

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Savoir utiliser le [[:terminal]]

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avoir [[:systemd]] comme gestionnaire de service installé (à partir de [[:Xenial]])
12 Mot inconnu : systemd =>   * Avoir [[:systemd]] comme gestionnaire de service installé (à partir de [[:Xenial]])
12 Mot inconnu : Xenial =>   * Avoir [[:systemd]] comme gestionnaire de service installé (à partir de [[:Xenial]])

17 Mot inconnu : Upstart => Comme [[:Upstart]], [[:systemd]] utilise des fichiers de configuration correspondant aux différents services à manipuler. Il n'est (en général) plus nécessaire de créer des fichiers [[:tutoriel:script_shell|bash]] pour gérer le service, systemd s'occupe de tout (lancement, arrêt, redémarrage, status, gestion des logs, etc)\\
17 Mot inconnu : systemd => Comme [[:Upstart]], [[:systemd]] utilise des fichiers de configuration correspondant aux différents services à manipuler. Il n'est (en général) plus nécessaire de créer des fichiers [[:tutoriel:script_shell|bash]] pour gérer le service, systemd s'occupe de tout (lancement, arrêt, redémarrage, status, gestion des logs, etc)\\
17 Il manque un espace. => Comme [[:Upstart]], [[:systemd]] utilise des fichiers de configuration correspondant aux différents services à manipuler. Il n'est (en général) plus nécessaire de créer des fichiers [[:tutoriel:script_shell|bash]] pour gérer le service, systemd s'occupe de tout (lancement, arrêt, redémarrage, status, gestion des logs, etc)\\
17 Mot inconnu : script_shell => Comme [[:Upstart]], [[:systemd]] utilise des fichiers de configuration correspondant aux différents services à manipuler. Il n'est (en général) plus nécessaire de créer des fichiers [[:tutoriel:script_shell|bash]] pour gérer le service, systemd s'occupe de tout (lancement, arrêt, redémarrage, status, gestion des logs, etc)\\
17 Mot inconnu : bash => Comme [[:Upstart]], [[:systemd]] utilise des fichiers de configuration correspondant aux différents services à manipuler. Il n'est (en général) plus nécessaire de créer des fichiers [[:tutoriel:script_shell|bash]] pour gérer le service, systemd s'occupe de tout (lancement, arrêt, redémarrage, status, gestion des logs, etc)\\
17 Mot inconnu : systemd => Comme [[:Upstart]], [[:systemd]] utilise des fichiers de configuration correspondant aux différents services à manipuler. Il n'est (en général) plus nécessaire de créer des fichiers [[:tutoriel:script_shell|bash]] pour gérer le service, systemd s'occupe de tout (lancement, arrêt, redémarrage, status, gestion des logs, etc)\\

21 Il manque un espace insécable. => Dans un [[:terminal]] saisissez:

22 Mot inconnu : sudo => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
22 Mot inconnu : cp => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
22 Il manque un espace à côté du tiret. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
22 Il manque un espace. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
22 Il manque un espace. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
22 Il manque un espace. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>

25 Mot inconnu : systemctl => <code>systemctl enable <nom du service>.service</code>
25 Mot inconnu : enable => <code>systemctl enable <nom du service>.service</code>

27 Il manque un espace insécable. => On peut ensuite le lancer pour test et contrôler sa bonne marche avec les commandes suivantes :

28 Mot inconnu : systemctl => <code>systemctl start <nom du service>.service
28 Mot inconnu : start => <code>systemctl start <nom du service>.service

29 Mot inconnu : systemctl => systemctl status <nom du service>.service</code>

31 Mot inconnu : systemd => Pour plus d'infos sur les diverses commandes de gestion, voir la page [[:systemd#les_services|systemd]]
31 Mot inconnu : systemd => Pour plus d'infos sur les diverses commandes de gestion, voir la page [[:systemd#les_services|systemd]]

34 Mot inconnu : systemd => Il est possible d'utiliser un service au niveau utilisateur, dans ce cas, les fichiers de configuration se trouvent dans **~/.config/systemd/user/**

37 Il manque un espace insécable. => Pour un service utilisateur il faut ajouter aux commandes le paramètre --user :

40 Mot inconnu : systemctl => systemctl --user enable <nom du service>.service
40 Mot inconnu : enable => systemctl --user enable <nom du service>.service

41 Mot inconnu : systemctl => systemctl --user start <nom du service>.service
41 Mot inconnu : start => systemctl --user start <nom du service>.service

42 Mot inconnu : systemctl => systemctl --user status <nom du service>.service

47 Il manque un espace insécable. => Pour créer un service utilisateur :

50 Mot inconnu : systemctl => systemctl --user edit <nom du service>.service --full --force
50 Mot inconnu : edit => systemctl --user edit <nom du service>.service --full --force

53 Il manque un espace insécable. => Pour éditer un service utilisateur :

56 Mot inconnu : systemctl => systemctl --user edit <nom du service>.service --full
56 Mot inconnu : edit => systemctl --user edit <nom du service>.service --full

59 Il manque un espace insécable. => Pour ajouter une surcharge (drop-in) sur un service utilisateur :

62 Mot inconnu : systemctl => systemctl --user edit <nom du service>.service
62 Mot inconnu : edit => systemctl --user edit <nom du service>.service

65 Mot inconnu : systemd => ===== Type de services systemd =====

67 Mot inconnu : Systemd => Systemd définit différents types de services :
67 Il manque un espace insécable. => Systemd définit différents types de services :

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autres processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".
68 Mot inconnu : systemd =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autres processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".
68 Guillemets typographiques ouvrants. =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autres processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".
68 Guillemets typographiques fermants. =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autres processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **forking**, lance un processus père qui créera un processus fils dans le cadre de son démarrage. Le processus parent est prévu pour s’arrêter une fois le démarrage complet et que tous les canaux de communication sont mis en place. Le processus fils continue à fonctionner en tant que le processus principal du service. systemd poursuit le traitement des autres unités une fois que le processus père se termine. **Ce type de service correspond aux services UNIX traditionnels.**
69 Mot inconnu : forking =>   * Un service de type **forking**, lance un processus père qui créera un processus fils dans le cadre de son démarrage. Le processus parent est prévu pour s’arrêter une fois le démarrage complet et que tous les canaux de communication sont mis en place. Le processus fils continue à fonctionner en tant que le processus principal du service. systemd poursuit le traitement des autres unités une fois que le processus père se termine. **Ce type de service correspond aux services UNIX traditionnels.**
69 Mot inconnu : systemd =>   * Un service de type **forking**, lance un processus père qui créera un processus fils dans le cadre de son démarrage. Le processus parent est prévu pour s’arrêter une fois le démarrage complet et que tous les canaux de communication sont mis en place. Le processus fils continue à fonctionner en tant que le processus principal du service. systemd poursuit le traitement des autres unités une fois que le processus père se termine. **Ce type de service correspond aux services UNIX traditionnels.**

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : oneshot =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : systemd =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : init =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : system =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : systemd =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : systemd =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : init =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
70 Mot inconnu : SysVinit =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **dbus** est similaire à un service de type **simple**. Cependant, le processus du service doit obtenir un nom via D-Bus. systemd pourra alors traiter les autres unités.
71 Mot inconnu : dbus =>   * Un service de type **dbus** est similaire à un service de type **simple**. Cependant, le processus du service doit obtenir un nom via D-Bus. systemd pourra alors traiter les autres unités.
71 Mot inconnu : systemd =>   * Un service de type **dbus** est similaire à un service de type **simple**. Cependant, le processus du service doit obtenir un nom via D-Bus. systemd pourra alors traiter les autres unités.

72 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.
72 Mot inconnu : notify =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.
72 Mot inconnu : systemd =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.
72 Mot inconnu : sd_notfy =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.

76 Guillemets typographiques ouvrants. => ==== Exemples de service de type "oneshot"====
76 Mot inconnu : oneshot => ==== Exemples de service de type "oneshot"====
76 Guillemets typographiques fermants. => ==== Exemples de service de type "oneshot"====

78 Mot inconnu : iptables => Un exemple est le service iptables. Voici un extrait de son fichier de configuration :
78 Il manque un espace insécable. => Un exemple est le service iptables. Voici un extrait de son fichier de configuration :

82 Mot inconnu : oneshot => Type=oneshot

83 Mot inconnu : RemainAfterExit => RemainAfterExit=yes
83 Mot inconnu : yes => RemainAfterExit=yes

84 Mot inconnu : ExecStart => ExecStart=/usr/libexec/iptables.init start
84 Mot inconnu : start => ExecStart=/usr/libexec/iptables.init start

85 Mot inconnu : ExecStop => ExecStop=/usr/libexec/iptables.init stop 
85 Espace(s) en fin de ligne à supprimer. => ExecStop=/usr/libexec/iptables.init stop 

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
88 Guillemets typographiques ouvrants. =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
88 Mot inconnu : ExecStart =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
88 Guillemets typographiques fermants. =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
88 Erreur d’accord probable avec « les types ». =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
89 Guillemets typographiques ouvrants. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
89 Mot inconnu : ExecStop =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
89 Guillemets typographiques fermants. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
89 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
89 Incohérence probable avec “a” : “exécuter” n’est pas un participe passé. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Guillemets typographiques ouvrants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Mot inconnu : RemainAfterExit =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Guillemets typographiques fermants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Guillemets typographiques ouvrants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Mot inconnu : yes =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Guillemets typographiques fermants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Mot inconnu : ExecStart =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Guillemets typographiques ouvrants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Mot inconnu : oneshot =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Guillemets typographiques fermants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
90 Mot inconnu : ExecStart =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.

92 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Mot inconnu : start =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Mot inconnu : iptables =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Mot inconnu : iptables =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Accord de nombre erroné : « modules » est au pluriel. =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Accord de nombre erroné : « modules » devrait être au singulier. =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Mot inconnu : netfilter =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
92 Mot inconnu : linux =>   * À son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.

93 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * À son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.
93 Mot inconnu : iptables =>   * À son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.
93 Mot inconnu : iptables =>   * À son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le service iptables continuera d'apparaitre comme actif après la fin de la commande /usr/libexec/iptables.init start et jusqu’à ce qu'il soit explicitement arrêté.
94 Mot inconnu : iptables =>   * Le service iptables continuera d'apparaitre comme actif après la fin de la commande /usr/libexec/iptables.init start et jusqu’à ce qu'il soit explicitement arrêté.
94 Mot inconnu : start =>   * Le service iptables continuera d'apparaitre comme actif après la fin de la commande /usr/libexec/iptables.init start et jusqu’à ce qu'il soit explicitement arrêté.

96 Guillemets typographiques ouvrants. => ====Exemple de service de type "simple"====
96 Guillemets typographiques fermants. => ====Exemple de service de type "simple"====

97 Mot inconnu : deluged => Un exemple est le service deluged qui permet de lancer le service correspondant à la version daemon du client bit-torrent [[:deluge]].
97 Mot inconnu : daemon => Un exemple est le service deluged qui permet de lancer le service correspondant à la version daemon du client bit-torrent [[:deluge]].
97 Mot inconnu : deluge => Un exemple est le service deluged qui permet de lancer le service correspondant à la version daemon du client bit-torrent [[:deluge]].

101 Mot inconnu : Deluge => Description=Deluge Bittorrent Client Daemon
101 Mot inconnu : Bittorrent => Description=Deluge Bittorrent Client Daemon
101 Mot inconnu : Daemon => Description=Deluge Bittorrent Client Daemon

102 Mot inconnu : network-online => After=network-online.target
102 Mot inconnu : target => After=network-online.target

107 Mot inconnu : deluge => User=deluge

108 Mot inconnu : Group => Group=deluge
108 Mot inconnu : deluge => Group=deluge

109 Mot inconnu : UMask => UMask=007

111 Mot inconnu : ExecStart => ExecStart=/usr/bin/deluged -d
111 Il manque un espace à côté du tiret. => ExecStart=/usr/bin/deluged -d

113 Mot inconnu : Restart => Restart=on-failure
113 Mot inconnu : on-failure => Restart=on-failure

115 S’il s’agit d’un impératif, pas de “s”. => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : the => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : time => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : to => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : wait => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : before => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : is => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : stopped => # Configures the time to wait before service is stopped forcefully.
115 Mot inconnu : forcefully => # Configures the time to wait before service is stopped forcefully.

116 Mot inconnu : TimeoutStopSec => TimeoutStopSec=300

118 Mot inconnu : Install => [Install]

119 Mot inconnu : WantedBy => WantedBy=multi-user.target
119 Mot inconnu : target => WantedBy=multi-user.target

120 Espace(s) en fin de ligne à supprimer. => </file> 

122 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
122 Guillemets typographiques ouvrants. =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
122 Guillemets typographiques fermants. =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
122 Guillemets typographiques ouvrants. =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
122 Mot inconnu : systemctl =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''

123 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. L'accès à Internet est perdu, le service n'est pas arrêté automatiquement, pour obtenir cet effet, il faut utiliser une balise ''Requires='' \\
123 Guillemets typographiques ouvrants. =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. L'accès à Internet est perdu, le service n'est pas arrêté automatiquement, pour obtenir cet effet, il faut utiliser une balise ''Requires='' \\
123 Guillemets typographiques fermants. =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. L'accès à Internet est perdu, le service n'est pas arrêté automatiquement, pour obtenir cet effet, il faut utiliser une balise ''Requires='' \\
123 Mot inconnu : daemon =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. L'accès à Internet est perdu, le service n'est pas arrêté automatiquement, pour obtenir cet effet, il faut utiliser une balise ''Requires='' \\
123 Guillemets typographiques ouvrants. =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. L'accès à Internet est perdu, le service n'est pas arrêté automatiquement, pour obtenir cet effet, il faut utiliser une balise ''Requires='' \\
123 Mot inconnu : Requires =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. L'accès à Internet est perdu, le service n'est pas arrêté automatiquement, pour obtenir cet effet, il faut utiliser une balise ''Requires='' \\

124 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Type'' permet de specifier le type de service
124 Guillemets typographiques ouvrants. =>   * ''Type'' permet de specifier le type de service
124 Guillemets typographiques fermants. =>   * ''Type'' permet de specifier le type de service
124 Mot inconnu : specifier =>   * ''Type'' permet de specifier le type de service

125 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Mot inconnu : Group =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Mot inconnu : Umask =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Mot inconnu : Ecriture =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Mot inconnu : Deluge =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Mot inconnu : Deluge =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
125 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriétaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.

126 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.
126 Guillemets typographiques ouvrants. =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.
126 Mot inconnu : Restart =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.
126 Guillemets typographiques fermants. =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.

127 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Guillemets typographiques ouvrants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : WantedBy =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Guillemets typographiques fermants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : Target =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Guillemets typographiques ouvrants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : target =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Guillemets typographiques fermants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : Runlevels =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : Targets =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : systemd =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\
127 Mot inconnu : systemd =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5. Pour en savoir plus sur les **Targets**, consultez la page de [[:systemd#les_targets|systemd]]\\

130 Guillemets typographiques ouvrants. => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Mot inconnu : getty => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Guillemets typographiques fermants. => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Guillemets typographiques ouvrants. => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Guillemets typographiques ouvrants. => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Mot inconnu : tty => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Mot inconnu : syncthing => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Mot inconnu : syncthing => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Mot inconnu : Gerard => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Mot inconnu : Milou => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
130 Il manque un espace insécable. => Il est possible de créer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :

134 Mot inconnu : Syncthing => Description=Syncthing - Open Source Continuous File Synchronization for %I
134 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Description=Syncthing - Open Source Continuous File Synchronization for %I
134 Mot inconnu : Continuous => Description=Syncthing - Open Source Continuous File Synchronization for %I
134 Mot inconnu : Synchronization => Description=Syncthing - Open Source Continuous File Synchronization for %I
134 Il manque un espace. => Description=Syncthing - Open Source Continuous File Synchronization for %I

135 Il manque un espace. => Documentation=man:syncthing(1)
135 Mot inconnu : syncthing => Documentation=man:syncthing(1)

136 Mot inconnu : network => After=network.target
136 Mot inconnu : target => After=network.target

137 Mot inconnu : Wants => Wants=syncthing-inotify@.service
137 Mot inconnu : syncthing-inotify => Wants=syncthing-inotify@.service

140 Il manque un espace. => User=%i

141 Mot inconnu : ExecStart => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
141 Il manque un espace à côté du tiret. => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
141 Mot inconnu : no-browser => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
141 Mot inconnu : no-restart => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
141 Mot inconnu : logflags => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0

142 Mot inconnu : Restart => Restart=on-failure
142 Mot inconnu : on-failure => Restart=on-failure

143 Mot inconnu : SuccessExitStatus => SuccessExitStatus=3 4

144 Mot inconnu : RestartForceExitStatus => RestartForceExitStatus=3 4

145 Mot inconnu : UMask => UMask=0002

147 Mot inconnu : Install => [Install]

148 Mot inconnu : WantedBy => WantedBy=multi-user.target
148 Mot inconnu : target => WantedBy=multi-user.target

151 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:
151 Guillemets typographiques ouvrants. =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:
151 Mot inconnu : Wants =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:
151 Guillemets typographiques fermants. =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:

152 Mot inconnu : systemctl => <code>systemctl list-dependencies [<unit>] </code>
152 Mot inconnu : list-dependencies => <code>systemctl list-dependencies [<unit>] </code>

153 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Guillemets typographiques ouvrants. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Guillemets typographiques fermants. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Il manque un espace. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Guillemets typographiques fermants. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Erreur d’accord probable avec “les”. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Mot inconnu : Gerard =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Mot inconnu : Milou =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
153 Il manque un espace insécable. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :

154 Mot inconnu : systemctl => <code>systemctl enable syncthing@Toto.service
154 Mot inconnu : enable => <code>systemctl enable syncthing@Toto.service

155 Mot inconnu : systemctl => systemctl enable syncthing@Gerard.service
155 Mot inconnu : enable => systemctl enable syncthing@Gerard.service

156 Mot inconnu : systemctl => systemctl enable syncthing@Milou.service
156 Mot inconnu : enable => systemctl enable syncthing@Milou.service

158 S’il s’agit d’une interrogation, il manque un trait d’union. => **Qu'est ce qu'un timer--
158 Mot inconnu : timer => **Qu'est ce qu'un timer--

160 Mot inconnu : timers => Les timers sont des fichiers de programmation qui vont se charger de lancer des services à intervalles réguliers.

162 Mot inconnu : timer => Quand vous créez un timer, il doit avoir l'extension .timer. Un service .service du même nom doit exister. (le service est souvent un service minimaliste, de type oneshot, permettant de lancer une commande)
162 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Quand vous créez un timer, il doit avoir l'extension .timer. Un service .service du même nom doit exister. (le service est souvent un service minimaliste, de type oneshot, permettant de lancer une commande)
162 Mot inconnu : timer => Quand vous créez un timer, il doit avoir l'extension .timer. Un service .service du même nom doit exister. (le service est souvent un service minimaliste, de type oneshot, permettant de lancer une commande)
162 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => Quand vous créez un timer, il doit avoir l'extension .timer. Un service .service du même nom doit exister. (le service est souvent un service minimaliste, de type oneshot, permettant de lancer une commande)
162 Mot inconnu : oneshot => Quand vous créez un timer, il doit avoir l'extension .timer. Un service .service du même nom doit exister. (le service est souvent un service minimaliste, de type oneshot, permettant de lancer une commande)

164 Mot inconnu : timers => Les timers «pourraient presque» remplacer le planificateur de tâches cron.
164 Il manque un espace insécable. => Les timers «pourraient presque» remplacer le planificateur de tâches cron.
164 Il manque un espace insécable. => Les timers «pourraient presque» remplacer le planificateur de tâches cron.
164 Mot inconnu : cron => Les timers «pourraient presque» remplacer le planificateur de tâches cron.

167 Mot inconnu : timer => Création du fichier de timer        
167 Espace(s) en fin de ligne à supprimer. => Création du fichier de timer        

170 Espace(s) surnuméraire(s) à supprimer. => Description=Lance une mise à jour de l'ordinateur quinze minutes après le démarrage de la machine et  itère toutes les trente minutes.

171 Mot inconnu : Timer => [Timer]

172 Mot inconnu : OnBootSec => OnBootSec=15minutes   
172 Espace(s) en fin de ligne à supprimer. => OnBootSec=15minutes   

174 Mot inconnu : OnUnitActiveSec => OnUnitActiveSec=30minutes  
174 Espace(s) en fin de ligne à supprimer. => OnUnitActiveSec=30minutes  

175 Mot inconnu : true => Persistent=true

176 Mot inconnu : timer => # le service démarrera toutes les trente minutes après la dernière activation du timer

177 Espace(s) surnuméraire(s) à supprimer. => ###    voir toutes les possibilités de choix  dans ce  document http://man7.org/linux/man-pages/man7/systemd.time.7.html
177 Espace(s) surnuméraire(s) à supprimer. => ###    voir toutes les possibilités de choix  dans ce  document http://man7.org/linux/man-pages/man7/systemd.time.7.html

178 Mot inconnu : Install => [Install]

179 Mot inconnu : WantedBy => WantedBy=timers.target
179 Mot inconnu : timers => WantedBy=timers.target
179 Mot inconnu : target => WantedBy=timers.target

184 Confusion : “a” est une conjugaison du verbe “avoir”. Pour la préposition, écrivez “à”. => Description=Service de mise a jour

185 Mot inconnu : network => After=network.target
185 Mot inconnu : target => After=network.target

188 Mot inconnu : ExecStart => ExecStart=apt-get update && apt-get upgrade
188 Mot inconnu : apt-get => ExecStart=apt-get update && apt-get upgrade
188 Mot inconnu : update => ExecStart=apt-get update && apt-get upgrade
188 Mot inconnu : apt-get => ExecStart=apt-get update && apt-get upgrade

189 Mot inconnu : oneshot => Type=oneshot

192 Mot inconnu : sudo => <code>sudo systemctl enable MAJ0.timer 
192 Mot inconnu : systemctl => <code>sudo systemctl enable MAJ0.timer 
192 Mot inconnu : enable => <code>sudo systemctl enable MAJ0.timer 
192 Mot inconnu : MAJ0 => <code>sudo systemctl enable MAJ0.timer 
192 Mot inconnu : timer => <code>sudo systemctl enable MAJ0.timer 
192 Espace(s) en fin de ligne à supprimer. => <code>sudo systemctl enable MAJ0.timer 

193 Mot inconnu : sudo => sudo systemctl start  MAJ0.timer
193 Mot inconnu : systemctl => sudo systemctl start  MAJ0.timer
193 Mot inconnu : start => sudo systemctl start  MAJ0.timer
193 Espace(s) surnuméraire(s) à supprimer. => sudo systemctl start  MAJ0.timer
193 Mot inconnu : MAJ0 => sudo systemctl start  MAJ0.timer
193 Mot inconnu : timer => sudo systemctl start  MAJ0.timer

194 Mot inconnu : sudo => sudo systemctl status MAJ0.timer
194 Mot inconnu : systemctl => sudo systemctl status MAJ0.timer
194 Mot inconnu : MAJ0 => sudo systemctl status MAJ0.timer
194 Mot inconnu : timer => sudo systemctl status MAJ0.timer

197 Mot inconnu : neo4j => ====Exemple de service avancé avec la base graphe neo4j====

200 Mot inconnu : Systemd => #La configuration de Systemd se base sur des unités (units) qui ont un nom et un type.
200 Mot inconnu : units => #La configuration de Systemd se base sur des unités (units) qui ont un nom et un type.

208 Mot inconnu : Neo4j => Description=Neo4j Management Service

210 Espace(s) surnuméraire(s) à supprimer. => #Man page du service  "http://", "https://", "file:", "info:", "man:"
210 Guillemets typographiques ouvrants. => #Man page du service  "http://", "https://", "file:", "info:", "man:"
210 Guillemets typographiques ouvrants. => #Man page du service  "http://", "https://", "file:", "info:", "man:"
210 Guillemets typographiques ouvrants. => #Man page du service  "http://", "https://", "file:", "info:", "man:"
210 Guillemets typographiques ouvrants. => #Man page du service  "http://", "https://", "file:", "info:", "man:"
210 Guillemets typographiques ouvrants. => #Man page du service  "http://", "https://", "file:", "info:", "man:"

211 Il manque un espace. => Documentation=man:neo4j(1)
211 Mot inconnu : neo4j => Documentation=man:neo4j(1)

214 Mot inconnu : systemd => # Type de l'Unité systemd.

215 Il manque un espace insécable. => #Les différents types d'unités sont : 
215 Espace(s) en fin de ligne à supprimer. => #Les différents types d'unités sont : 

216 Il manque un espace insécable. => #    service : pour un service/démon ;
216 Il manque un espace insécable. => #    service : pour un service/démon ;

217 Il manque un espace insécable. => #    socket : pour une socket réseau (de tous types : UNIX, Internet, fichier etc.) ;
217 Accord de genre erroné : « socket » est masculin. => #    socket : pour une socket réseau (de tous types : UNIX, Internet, fichier etc.) ;
217 Il manque un espace insécable. => #    socket : pour une socket réseau (de tous types : UNIX, Internet, fichier etc.) ;
217 Avant « etc. », il faut mettre une virgule. => #    socket : pour une socket réseau (de tous types : UNIX, Internet, fichier etc.) ;
217 Il manque un espace insécable. => #    socket : pour une socket réseau (de tous types : UNIX, Internet, fichier etc.) ;

218 Mot inconnu : mount => #    mount : pour un système de fichiers (exemple : home.mount), tout en utilisant /etc/fstab ;
218 Il manque un espace insécable. => #    mount : pour un système de fichiers (exemple : home.mount), tout en utilisant /etc/fstab ;
218 Il manque un espace insécable. => #    mount : pour un système de fichiers (exemple : home.mount), tout en utilisant /etc/fstab ;
218 Mot inconnu : mount => #    mount : pour un système de fichiers (exemple : home.mount), tout en utilisant /etc/fstab ;
218 Il manque un espace insécable. => #    mount : pour un système de fichiers (exemple : home.mount), tout en utilisant /etc/fstab ;

219 Il manque un espace insécable. => #    swap : pour les partitions d'échanges ;
219 Il manque un espace insécable. => #    swap : pour les partitions d'échanges ;

220 Mot inconnu : automount => #    automount : pour un système de fichiers monté à la demande ;
220 Il manque un espace insécable. => #    automount : pour un système de fichiers monté à la demande ;
220 Il manque un espace insécable. => #    automount : pour un système de fichiers monté à la demande ;

221 Mot inconnu : device => #    device : pour un périphérique ;
221 Il manque un espace insécable. => #    device : pour un périphérique ;
221 Il manque un espace insécable. => #    device : pour un périphérique ;

222 Mot inconnu : timer => #    timer : pour l'activation basée sur une date ;
222 Il manque un espace insécable. => #    timer : pour l'activation basée sur une date ;
222 Il manque un espace insécable. => #    timer : pour l'activation basée sur une date ;

223 Mot inconnu : path => #    path : pour l'activation basée sur des fichiers ou des répertoires ;
223 Il manque un espace insécable. => #    path : pour l'activation basée sur des fichiers ou des répertoires ;
223 Il manque un espace insécable. => #    path : pour l'activation basée sur des fichiers ou des répertoires ;

224 Mot inconnu : target => #    target : macro-unité qui permet de grouper plusieurs unités (exemple : multi-user.target pour définir une cible) ;
224 Il manque un espace insécable. => #    target : macro-unité qui permet de grouper plusieurs unités (exemple : multi-user.target pour définir une cible) ;
224 Il manque un espace insécable. => #    target : macro-unité qui permet de grouper plusieurs unités (exemple : multi-user.target pour définir une cible) ;
224 Mot inconnu : target => #    target : macro-unité qui permet de grouper plusieurs unités (exemple : multi-user.target pour définir une cible) ;
224 Il manque un espace insécable. => #    target : macro-unité qui permet de grouper plusieurs unités (exemple : multi-user.target pour définir une cible) ;

225 Mot inconnu : init => #                Ce sont les niveaux d'exécutions de l'ancien init.

226 Mot inconnu : snapshot => #    snapshot : unités utilisées pour sauvegarder l’état actuel des services et les restaurer ensuite, par exemple avant de passer en veille.
226 Il manque un espace insécable. => #    snapshot : unités utilisées pour sauvegarder l’état actuel des services et les restaurer ensuite, par exemple avant de passer en veille.

227 Mot inconnu : neo4j => #Dans cet exemple c'est un service, celui de la base graphe neo4j, qui est notre "unité".
227 Guillemets typographiques ouvrants. => #Dans cet exemple c'est un service, celui de la base graphe neo4j, qui est notre "unité".
227 Guillemets typographiques fermants. => #Dans cet exemple c'est un service, celui de la base graphe neo4j, qui est notre "unité".

233 Espace(s) en fin de ligne à supprimer. => #Lance le service dans un processus système indépendant. 

234 Mot inconnu : forking => # simple, forking, oneshot, dbus, notify ou idle sont les valeurs possibles de Type=.
234 Mot inconnu : oneshot => # simple, forking, oneshot, dbus, notify ou idle sont les valeurs possibles de Type=.
234 Mot inconnu : dbus => # simple, forking, oneshot, dbus, notify ou idle sont les valeurs possibles de Type=.
234 Mot inconnu : notify => # simple, forking, oneshot, dbus, notify ou idle sont les valeurs possibles de Type=.
234 Mot inconnu : idle => # simple, forking, oneshot, dbus, notify ou idle sont les valeurs possibles de Type=.

235 Mot inconnu : forking => Type=forking

237 Mot inconnu : neo4j => #L'exécution du service se fera avec le nom d'utilisateur neo4j.

238 Mot inconnu : neo4j => User=neo4j

240 Mot inconnu : neo4j => #Le lancement de l'unité neo4j.service doit créer un répertoire neo4j dans /run.
240 Il manque un espace. => #Le lancement de l'unité neo4j.service doit créer un répertoire neo4j dans /run.
240 Mot inconnu : neo4j => #Le lancement de l'unité neo4j.service doit créer un répertoire neo4j dans /run.
240 Mot inconnu : run => #Le lancement de l'unité neo4j.service doit créer un répertoire neo4j dans /run.

241 Mot inconnu : tmpfs => #/var/run étant un lien vers le montage du système de fichiers tmpfs /run.
241 Mot inconnu : run => #/var/run étant un lien vers le montage du système de fichiers tmpfs /run.

242 Mot inconnu : RuntimeDirectory => RuntimeDirectory=neo4j
242 Mot inconnu : neo4j => RuntimeDirectory=neo4j

244 Mot inconnu : run => #Droits d'accès sur le répertoire /run/neo4j.
244 Mot inconnu : neo4j => #Droits d'accès sur le répertoire /run/neo4j.

245 Espace(s) surnuméraire(s) à supprimer. => # Utilisateur  Groupe    Les_autres
245 Espace(s) surnuméraire(s) à supprimer. => # Utilisateur  Groupe    Les_autres
245 Mot inconnu : Les_autres => # Utilisateur  Groupe    Les_autres

246 Mot inconnu : rwx => #     rwx        rwx        ---
246 Espace(s) surnuméraire(s) à supprimer. => #     rwx        rwx        ---
246 Mot inconnu : rwx => #     rwx        rwx        ---
246 Espace(s) surnuméraire(s) à supprimer. => #     rwx        rwx        ---

247 Il manque un espace avant la parenthèse. => #   7(4+2+1)   7(4+2+1)   0(0+0+0)
247 Il manque un espace avant la parenthèse. => #   7(4+2+1)   7(4+2+1)   0(0+0+0)
247 Il manque un espace avant la parenthèse. => #   7(4+2+1)   7(4+2+1)   0(0+0+0)

248 Mot inconnu : RuntimeDirectoryMode => RuntimeDirectoryMode=770

250 Mot inconnu : PID => #Où trouver l'identifiant PID du processus du service neo4j.
250 Mot inconnu : neo4j => #Où trouver l'identifiant PID du processus du service neo4j.

251 Mot inconnu : PIDFile => PIDFile=/var/run/neo4j/neo4j.pid

253 Mot inconnu : neo4j => #Démarrer le service neo4j.

254 Mot inconnu : ExecStart => ExecStart=/usr/bin/neo4j start
254 Mot inconnu : start => ExecStart=/usr/bin/neo4j start

256 Mot inconnu : neo4j => #Arrêter le service neo4j.

257 Mot inconnu : ExecStop => ExecStop=/usr/bin/neo4j stop

259 Mot inconnu : neo4j => #Redémarrer le service neo4j.

260 Mot inconnu : ExecReload => ExecReload=/usr/bin/neo4j restart
260 Mot inconnu : restart => ExecReload=/usr/bin/neo4j restart

262 Mot inconnu : neo4j => #Ne doit pas considérer que le service est actif lorsque le processus neo4j s'est terminé normalement.

263 Mot inconnu : RemainAfterExit => RemainAfterExit=no

266 Mot inconnu : Restart => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Espace(s) surnuméraire(s) à supprimer. => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Mot inconnu : always => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Espace(s) surnuméraire(s) à supprimer. => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Mot inconnu : on-success => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Espace(s) surnuméraire(s) à supprimer. => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Mot inconnu : on-failure => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Espace(s) surnuméraire(s) à supprimer. => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Mot inconnu : on-abnormal => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Espace(s) surnuméraire(s) à supprimer. => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Mot inconnu : on-abort => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Espace(s) surnuméraire(s) à supprimer. => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog
266 Mot inconnu : on-watchdog => #                            *Restart=*    no    always    on-success    on-failure    on-abnormal    on-abort    on-watchdog

267 Mot inconnu : _______ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+
267 Mot inconnu : _________ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+
267 Mot inconnu : ____________ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+
267 Mot inconnu : _____________ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+
267 Mot inconnu : ______________ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+
267 Mot inconnu : ___________ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+
267 Mot inconnu : _______________ => # *Choix redémarrage*                  +_______+_________+____________+_____________+______________+___________+_______________+

268 Espace(s) surnuméraire(s) à supprimer. => #           Fin normale ou par signal  |       |    X    |      X     |             |              |           |               |
268 Espace(s) surnuméraire(s) à supprimer. => #           Fin normale ou par signal  |       |    X    |      X     |             |              |           |               |
268 Espace(s) surnuméraire(s) à supprimer. => #           Fin normale ou par signal  |       |    X    |      X     |             |              |           |               |

269 Mot inconnu : _______ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
269 Mot inconnu : _________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
269 Mot inconnu : ____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
269 Mot inconnu : _____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
269 Mot inconnu : ______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
269 Mot inconnu : ___________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
269 Mot inconnu : _______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+

270 Espace(s) surnuméraire(s) à supprimer. => #        Fin d’exécution avec erreurs  |       |    X    |            |      X      |              |           |               |
270 Espace(s) surnuméraire(s) à supprimer. => #        Fin d’exécution avec erreurs  |       |    X    |            |      X      |              |           |               |
270 Espace(s) surnuméraire(s) à supprimer. => #        Fin d’exécution avec erreurs  |       |    X    |            |      X      |              |           |               |

271 Mot inconnu : _______ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
271 Mot inconnu : _________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
271 Mot inconnu : ____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
271 Mot inconnu : _____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
271 Mot inconnu : ______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
271 Mot inconnu : ___________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
271 Mot inconnu : _______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+

272 Espace(s) surnuméraire(s) à supprimer. => #                       Processus tué  |       |    X    |            |      X      |      X       |     X     |               |
272 Espace(s) surnuméraire(s) à supprimer. => #                       Processus tué  |       |    X    |            |      X      |      X       |     X     |               |
272 Espace(s) surnuméraire(s) à supprimer. => #                       Processus tué  |       |    X    |            |      X      |      X       |     X     |               |
272 Espace(s) surnuméraire(s) à supprimer. => #                       Processus tué  |       |    X    |            |      X      |      X       |     X     |               |
272 Espace(s) surnuméraire(s) à supprimer. => #                       Processus tué  |       |    X    |            |      X      |      X       |     X     |               |

273 Mot inconnu : _______ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
273 Mot inconnu : _________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
273 Mot inconnu : ____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
273 Mot inconnu : _____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
273 Mot inconnu : ______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
273 Mot inconnu : ___________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
273 Mot inconnu : _______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+

274 Espace(s) surnuméraire(s) à supprimer. => #             délai d'attente atteint  |       |    X    |            |      X      |      X       |           |               |
274 Espace(s) surnuméraire(s) à supprimer. => #             délai d'attente atteint  |       |    X    |            |      X      |      X       |           |               |
274 Espace(s) surnuméraire(s) à supprimer. => #             délai d'attente atteint  |       |    X    |            |      X      |      X       |           |               |
274 Espace(s) surnuméraire(s) à supprimer. => #             délai d'attente atteint  |       |    X    |            |      X      |      X       |           |               |

275 Mot inconnu : _______ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
275 Mot inconnu : _________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
275 Mot inconnu : ____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
275 Mot inconnu : _____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
275 Mot inconnu : ______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
275 Mot inconnu : ___________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
275 Mot inconnu : _______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+

276 Mot inconnu : Watchdog => #                            Watchdog  |       |    X    |            |      X      |      X       |           |       X       |
276 Espace(s) surnuméraire(s) à supprimer. => #                            Watchdog  |       |    X    |            |      X      |      X       |           |       X       |
276 Espace(s) surnuméraire(s) à supprimer. => #                            Watchdog  |       |    X    |            |      X      |      X       |           |       X       |
276 Espace(s) surnuméraire(s) à supprimer. => #                            Watchdog  |       |    X    |            |      X      |      X       |           |       X       |
276 Espace(s) surnuméraire(s) à supprimer. => #                            Watchdog  |       |    X    |            |      X      |      X       |           |       X       |
276 Espace(s) surnuméraire(s) à supprimer. => #                            Watchdog  |       |    X    |            |      X      |      X       |           |       X       |

277 Mot inconnu : _______ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
277 Mot inconnu : _________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
277 Mot inconnu : ____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
277 Mot inconnu : _____________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
277 Mot inconnu : ______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
277 Mot inconnu : ___________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+
277 Mot inconnu : _______________ => #                                      +_______+_________+____________+_____________+______________+___________+_______________+

278 Mot inconnu : Restart => Restart=on-failure
278 Mot inconnu : on-failure => Restart=on-failure

280 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => #Définit des limites logicielles ou matérielles pour le processus exécuté.

282 S’il s’agit d’un impératif, ajoutez un “s”. => # Correspond à ulimit -n 60000. 
282 Mot inconnu : ulimit => # Correspond à ulimit -n 60000. 
282 Il manque un espace à côté du tiret. => # Correspond à ulimit -n 60000. 
282 Formatage des grands nombres. => # Correspond à ulimit -n 60000. 
282 Espace(s) en fin de ligne à supprimer. => # Correspond à ulimit -n 60000. 

284 Mot inconnu : LimitNOFILE => LimitNOFILE=60000
284 Formatage des grands nombres. => LimitNOFILE=60000

286 Mot inconnu : TimeoutStartSec => #Une directive pour configurer TimeoutStartSec = et TimeoutStopSec = à la valeur spécifiée.
286 Mot inconnu : TimeoutStopSec => #Une directive pour configurer TimeoutStartSec = et TimeoutStopSec = à la valeur spécifiée.

287 Mot inconnu : TimeoutStartSec => # TimeoutStartSec= configure le délai d'attente pour attendre le démarrage du service.

288 Mot inconnu : TimeoutStopSec => # TimeoutStopSec = configure le temps d'attente pour attendre l'arrêt du service.

289 Mot inconnu : TimeoutSec => TimeoutSec=600

293 Mot inconnu : Install => # La section [Install] s'occupe des circonstances et des déclencheurs dans le cadre desquels le service devrait être démarré.#

295 Mot inconnu : Install => [Install]

297 Mot inconnu : WantedBy => WantedBy=multi-user.target
297 Mot inconnu : target => WantedBy=multi-user.target

300 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[wpfr>systemd|systemd]] sur Wikipedia en français
300 Mot inconnu : wpfr =>   * [[wpfr>systemd|systemd]] sur Wikipedia en français
300 Mot inconnu : systemd =>   * [[wpfr>systemd|systemd]] sur Wikipedia en français
300 Mot inconnu : systemd =>   * [[wpfr>systemd|systemd]] sur Wikipedia en français
300 Mot inconnu : Wikipedia =>   * [[wpfr>systemd|systemd]] sur Wikipedia en français

301 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.freedesktop.org/wiki/Software/systemd/|Site officiel de systemd]]
301 Mot inconnu : systemd =>   * [[http://www.freedesktop.org/wiki/Software/systemd/|Site officiel de systemd]]

302 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://doc.fedora-fr.org/wiki/Systemd|Fedora et systemd]] notamment pour la partie [[#Type de service systemd]]
302 Mot inconnu : systemd =>   * [[http://doc.fedora-fr.org/wiki/Systemd|Fedora et systemd]] notamment pour la partie [[#Type de service systemd]]
302 Mot inconnu : systemd =>   * [[http://doc.fedora-fr.org/wiki/Systemd|Fedora et systemd]] notamment pour la partie [[#Type de service systemd]]

303 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd|Documentation de Syncthing]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)
303 Mot inconnu : Syncthing =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd|Documentation de Syncthing]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)
303 Mot inconnu : systemd =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd|Documentation de Syncthing]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)
303 Mot inconnu : Syncthing =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd|Documentation de Syncthing]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)

304 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://deluge.readthedocs.io/en/latest/how-to/systemd-service.html|Documentation de Deluge]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)
304 Mot inconnu : Deluge =>   * [[https://deluge.readthedocs.io/en/latest/how-to/systemd-service.html|Documentation de Deluge]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)
304 Mot inconnu : systemd =>   * [[https://deluge.readthedocs.io/en/latest/how-to/systemd-service.html|Documentation de Deluge]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)
304 Mot inconnu : Deluge =>   * [[https://deluge.readthedocs.io/en/latest/how-to/systemd-service.html|Documentation de Deluge]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)

308 Il manque un espace insécable. => //Contributeurs: [[:utilisateurs:zarmu]]//
308 Il manque un espace. => //Contributeurs: [[:utilisateurs:zarmu]]//
308 Mot inconnu : zarmu => //Contributeurs: [[:utilisateurs:zarmu]]//
