7 Mot inconnu : UDEV => ======UDEV : Comment ça marche ?======
7 Il manque un espace insécable. => ======UDEV : Comment ça marche ?======
7 Il manque un espace insécable. => ======UDEV : Comment ça marche ?======

11 Mot inconnu : UDEV => Comme vous l'aurez compris, ceci est un tutoriel sur UDEV. Il est très complet, il explique en détail le fonctionnement de la bête. Je vous conseille de ne pas le lire en diagonale: il contient beaucoup d'informations, toutes nécessaires pour faire fonctionner correctement vos règles.
11 Il manque un espace insécable. => Comme vous l'aurez compris, ceci est un tutoriel sur UDEV. Il est très complet, il explique en détail le fonctionnement de la bête. Je vous conseille de ne pas le lire en diagonale: il contient beaucoup d'informations, toutes nécessaires pour faire fonctionner correctement vos règles.

13 Accord de nombre erroné : « fichiers » devrait être au singulier. => En général une règle s'écrit en quelques lignes dans un fichiers ''.rules'' qui se trouve dans  /etc/udev/rules.d, mais nécessite beaucoup de rigueur pour qu'elle fonctionne. 
13 Guillemets fermants. => En général une règle s'écrit en quelques lignes dans un fichiers ''.rules'' qui se trouve dans  /etc/udev/rules.d, mais nécessite beaucoup de rigueur pour qu'elle fonctionne. 
13 Mot inconnu : rules => En général une règle s'écrit en quelques lignes dans un fichiers ''.rules'' qui se trouve dans  /etc/udev/rules.d, mais nécessite beaucoup de rigueur pour qu'elle fonctionne. 
13 Guillemets typographiques fermants. => En général une règle s'écrit en quelques lignes dans un fichiers ''.rules'' qui se trouve dans  /etc/udev/rules.d, mais nécessite beaucoup de rigueur pour qu'elle fonctionne. 
13 Espace(s) surnuméraire(s) à supprimer. => En général une règle s'écrit en quelques lignes dans un fichiers ''.rules'' qui se trouve dans  /etc/udev/rules.d, mais nécessite beaucoup de rigueur pour qu'elle fonctionne. 
13 Espace(s) en fin de ligne à supprimer. => En général une règle s'écrit en quelques lignes dans un fichiers ''.rules'' qui se trouve dans  /etc/udev/rules.d, mais nécessite beaucoup de rigueur pour qu'elle fonctionne. 

15 Il manque un espace insécable. => **Donc prenez votre temps pour tout lire jusqu'au bout et comprendre ce que vous faites** !

19 Il manque un espace insécable. => ====Terminologie: devfs, sysfs, nodes, etc.====
19 Mot inconnu : devfs => ====Terminologie: devfs, sysfs, nodes, etc.====
19 Mot inconnu : sysfs => ====Terminologie: devfs, sysfs, nodes, etc.====
19 Mot inconnu : nodes => ====Terminologie: devfs, sysfs, nodes, etc.====

21 Espace(s) en fin de ligne à supprimer. => Voici une introduction basique. 

23 Guillemets typographiques ouvrants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Mot inconnu : nodes => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques fermants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques ouvrants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Mot inconnu : node => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques fermants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Il manque un espace à côté du tiret. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Il manque un espace à côté du tiret. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Accord de genre erroné entre « applications » et « utilisateur ». => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques ouvrants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Mot inconnu : nodes => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques fermants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques ouvrants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.
23 Guillemets typographiques fermants. => Sur les systèmes à base de Linux, le répertoire ''/dev'' sert à contenir les périphériques sous forme de fichier, les "nodes", qui se rapportent aux périphériques système. Chaque "node" se réfère à un périphérique, qui peut -ou pas- exister. Les applications utilisateur peuvent utiliser ces "nodes" pour interagir avec le périphérique. Par exemple, le serveur graphique X va "écouter" ''/dev/input/mice'' qui se réfère à la souris et faire bouger le pointeur à l'écran.

25 Mot inconnu : Devfs => Le répertoire original ''/dev'' contenait tous les fichiers correspondant à tous les périphériques possibles et imaginables que l'on pouvait trouver dans une configuration matérielle. De ce fait, il était très volumineux. **Devfs** a été créé pour simplifier cette utilisation, mais ce système a montré ses limites lorsqu'il y a des problèmes compliqués à résoudre. 
25 Espace(s) en fin de ligne à supprimer. => Le répertoire original ''/dev'' contenait tous les fichiers correspondant à tous les périphériques possibles et imaginables que l'on pouvait trouver dans une configuration matérielle. De ce fait, il était très volumineux. **Devfs** a été créé pour simplifier cette utilisation, mais ce système a montré ses limites lorsqu'il y a des problèmes compliqués à résoudre. 

27 Mot inconnu : Udev => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.
27 Guillemets typographiques ouvrants. => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.
27 Mot inconnu : nodes => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.
27 Guillemets typographiques fermants. => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.
27 Mot inconnu : udev => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.
27 Mot inconnu : sysfs => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.
27 Mot inconnu : udev => //**Udev**// est le nouveau système pour gérer le répertoire ''/dev'', conçu pour repousser les limites mises en avant par les précédentes versions de ''/dev'', et fournir un lien robuste. Dans le but de créer et nommer les périphériques dans ''/dev'', les "nodes" qui correspondent aux périphériques système, //udev// fait le lien entre les informations données par //sysfs// et les règles données par l'utilisateur. Ce wiki a pour but d'expliquer comment écrire les règles //udev//.

29 Mot inconnu : Sysfs => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : Udev => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Guillemets typographiques ouvrants. => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : nodes => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Guillemets typographiques fermants. => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : Sysfs => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : sys => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Guillemets typographiques fermants. => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Il manque un espace insécable. => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : udev => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : sys => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Guillemets typographiques fermants. => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Mot inconnu : sysfs => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 
29 Espace(s) en fin de ligne à supprimer. => //**Sysfs**// a été officialisé avec les noyaux de la série 2.6. Il est géré par le noyau pour exporter les informations basiques sur les périphériques actuellement connectés au système. //Udev// utilise ces informations pour créer les 'nodes' correspondant aux périphériques de votre ordinateur. //Sysfs// est monté sur ''/sys'' et vous pouvez le parcourir: vous pouvez regarder ces fichiers avant de vous plonger dans //udev//. Dans ce wiki, j'utiliserai ''/sys'' et //sysfs//, qui signifient la même chose. 

31 Il manque un espace insécable. => ====Pourquoi ?====

33 Mot inconnu : udev => Les règles //udev// sont flexibles et très puissantes. Voici quelques exemples de ce que vous pouvez faire : 
33 Il manque un espace insécable. => Les règles //udev// sont flexibles et très puissantes. Voici quelques exemples de ce que vous pouvez faire : 
33 Espace(s) en fin de ligne à supprimer. => Les règles //udev// sont flexibles et très puissantes. Voici quelques exemples de ce que vous pouvez faire : 

35 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * changer le nom assigné par défaut à un périphérique;
35 Il manque un espace insécable. =>   * changer le nom assigné par défaut à un périphérique;

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * donner un nom alternatif ou permanent à un périphérique en créant un lien symbolique;
37 Il manque un espace insécable. =>   * donner un nom alternatif ou permanent à un périphérique en créant un lien symbolique;

39 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * nommer un périphérique en fonction de la sortie d'un programme;
39 Il manque un espace insécable. =>   * nommer un périphérique en fonction de la sortie d'un programme;

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * changer les permissions et les propriétés d'un périphérique;
41 Il manque un espace insécable. =>   * changer les permissions et les propriétés d'un périphérique;

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * lancer un script quand un périphérique est créé ou supprimé (en général pour un périphérique qui se branche à chaud, comme l'USB);

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * renommer les interfaces réseaux 
45 Espace(s) en fin de ligne à supprimer. =>   * renommer les interfaces réseaux 

48 Guillemets typographiques ouvrants. => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.
48 Mot inconnu : node => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.
48 Guillemets typographiques fermants. => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.
48 Mot inconnu : udev => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.
48 Guillemets typographiques ouvrants. => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.
48 Mot inconnu : node => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.
48 Guillemets typographiques fermants. => L'écriture de règles n'est pas une solution s'il n'existe pas du tout de périphérique "node" pour votre périphérique particulier. S'il n'y a pas de règle, //udev// va créer le périphérique "node" avec le nom donné par défaut par le noyau.

50 Il manque un espace insécable. => Il y a plusieurs avantages à avoir un nom de périphérique constant. Supposons que vous ayez deux périphériques USB : une webcam et une clé USB. Ces périphériques sont normalement assignés aux périphériques "nodes" ''/dev/sda'' et ''/dev/sdb'', mais cela dépend de l'ordre dans lequel ils ont été connectés. C'est pourquoi il est plus pratique de nommer les périphériques à chaque fois de la même manière, par exemple ''/dev/camera'' et ''/dev/flashdisk''. 
50 Guillemets typographiques ouvrants. => Il y a plusieurs avantages à avoir un nom de périphérique constant. Supposons que vous ayez deux périphériques USB : une webcam et une clé USB. Ces périphériques sont normalement assignés aux périphériques "nodes" ''/dev/sda'' et ''/dev/sdb'', mais cela dépend de l'ordre dans lequel ils ont été connectés. C'est pourquoi il est plus pratique de nommer les périphériques à chaque fois de la même manière, par exemple ''/dev/camera'' et ''/dev/flashdisk''. 
50 Mot inconnu : nodes => Il y a plusieurs avantages à avoir un nom de périphérique constant. Supposons que vous ayez deux périphériques USB : une webcam et une clé USB. Ces périphériques sont normalement assignés aux périphériques "nodes" ''/dev/sda'' et ''/dev/sdb'', mais cela dépend de l'ordre dans lequel ils ont été connectés. C'est pourquoi il est plus pratique de nommer les périphériques à chaque fois de la même manière, par exemple ''/dev/camera'' et ''/dev/flashdisk''. 
50 Guillemets typographiques fermants. => Il y a plusieurs avantages à avoir un nom de périphérique constant. Supposons que vous ayez deux périphériques USB : une webcam et une clé USB. Ces périphériques sont normalement assignés aux périphériques "nodes" ''/dev/sda'' et ''/dev/sdb'', mais cela dépend de l'ordre dans lequel ils ont été connectés. C'est pourquoi il est plus pratique de nommer les périphériques à chaque fois de la même manière, par exemple ''/dev/camera'' et ''/dev/flashdisk''. 
50 Espace(s) en fin de ligne à supprimer. => Il y a plusieurs avantages à avoir un nom de périphérique constant. Supposons que vous ayez deux périphériques USB : une webcam et une clé USB. Ces périphériques sont normalement assignés aux périphériques "nodes" ''/dev/sda'' et ''/dev/sdb'', mais cela dépend de l'ordre dans lequel ils ont été connectés. C'est pourquoi il est plus pratique de nommer les périphériques à chaque fois de la même manière, par exemple ''/dev/camera'' et ''/dev/flashdisk''. 

54 Mot inconnu : Udev => //Udev// fournit un nom persistant pour certains types de périphériques. C'est un dispositif très pratique, qui signifie que vous n'avez pas besoin d'écrire de règle pour ceux-ci.

56 Mot inconnu : Udev => Par exemple, //Udev// fournit des noms persistants pour les périphériques de stockage dans le répertoire ''/dev/disk''. Pour les voir, vous pouvez utiliser la commande suivante : 
56 Il manque un espace insécable. => Par exemple, //Udev// fournit des noms persistants pour les périphériques de stockage dans le répertoire ''/dev/disk''. Pour les voir, vous pouvez utiliser la commande suivante : 
56 Espace(s) en fin de ligne à supprimer. => Par exemple, //Udev// fournit des noms persistants pour les périphériques de stockage dans le répertoire ''/dev/disk''. Pour les voir, vous pouvez utiliser la commande suivante : 
58 Il manque un espace à côté du tiret. => <code>ls -lR /dev/disk</code>

60 Mot inconnu : __Par => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Mot inconnu : exemple__ => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Mot inconnu : udev => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Guillemets typographiques fermants. => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Mot inconnu : root => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Mot inconnu : Udev => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Guillemets typographiques fermants. => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 
60 Espace(s) en fin de ligne à supprimer. => Cela fonctionne pour tous les types de périphériques de stockage. __Par exemple__, //udev// a créé ''/dev/disk/by-id/scsi-SATA_ST3120827AS_4MS1NDXZ-part3'' qui est un lien symbolique vers le nom persistant de ma partition root. //Udev// crée ''/dev/disk/by-id/usb-Prolific_Technology_Inc._USB_Mass_Storage_Device-part1'' quand on branche une clé USB, qui est aussi un nom persistant. 

66 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. => Pour décider comment nommer un périphérique et quelles actions a faire, //udev// utilise une série de fichiers de règles. Ces fichiers se trouvent dans le répertoire ''/etc/udev/rules.d'', et doivent tous avoir l'extension ''.rules''. 
66 Mot inconnu : udev => Pour décider comment nommer un périphérique et quelles actions a faire, //udev// utilise une série de fichiers de règles. Ces fichiers se trouvent dans le répertoire ''/etc/udev/rules.d'', et doivent tous avoir l'extension ''.rules''. 
66 Guillemets fermants. => Pour décider comment nommer un périphérique et quelles actions a faire, //udev// utilise une série de fichiers de règles. Ces fichiers se trouvent dans le répertoire ''/etc/udev/rules.d'', et doivent tous avoir l'extension ''.rules''. 
66 Mot inconnu : rules => Pour décider comment nommer un périphérique et quelles actions a faire, //udev// utilise une série de fichiers de règles. Ces fichiers se trouvent dans le répertoire ''/etc/udev/rules.d'', et doivent tous avoir l'extension ''.rules''. 
66 Guillemets typographiques fermants. => Pour décider comment nommer un périphérique et quelles actions a faire, //udev// utilise une série de fichiers de règles. Ces fichiers se trouvent dans le répertoire ''/etc/udev/rules.d'', et doivent tous avoir l'extension ''.rules''. 
66 Espace(s) en fin de ligne à supprimer. => Pour décider comment nommer un périphérique et quelles actions a faire, //udev// utilise une série de fichiers de règles. Ces fichiers se trouvent dans le répertoire ''/etc/udev/rules.d'', et doivent tous avoir l'extension ''.rules''. 

67 Mot inconnu : udev => Les règles //udev// créées par défaut sont dans le fichier ''/lib/udev/rules.d/50-udev-default.rules''. Il pourrait être intéressant d'y jeter un œil – il contient quelques exemples -, et certaines règles contiennent un exemple de sortie de //devfs// que vous trouverez dans ''/dev'' par défaut. Cependant, il est conseillé de ne pas écrire de règle directement dedans.
67 Guillemets typographiques fermants. => Les règles //udev// créées par défaut sont dans le fichier ''/lib/udev/rules.d/50-udev-default.rules''. Il pourrait être intéressant d'y jeter un œil – il contient quelques exemples -, et certaines règles contiennent un exemple de sortie de //devfs// que vous trouverez dans ''/dev'' par défaut. Cependant, il est conseillé de ne pas écrire de règle directement dedans.

69 Il manque un espace insécable. => Les fichiers de ''/lib/udev/rules.d/'' sont triés par ordre **alphabétique**, et dans certaines circonstances, l'ordre dans lequel ils sont analysés est important. En général, vous voulez que vos propres règles soient prises en compte avant les règles créées par défaut, donc créez votre fichier comme ceci: ''/etc/udev/rules.d/10-local.rules'' (le nombre 10 influe sur l'ordre de prise en compte) et écrivez vos propres règles dans ce fichier. 
69 Guillemets typographiques fermants. => Les fichiers de ''/lib/udev/rules.d/'' sont triés par ordre **alphabétique**, et dans certaines circonstances, l'ordre dans lequel ils sont analysés est important. En général, vous voulez que vos propres règles soient prises en compte avant les règles créées par défaut, donc créez votre fichier comme ceci: ''/etc/udev/rules.d/10-local.rules'' (le nombre 10 influe sur l'ordre de prise en compte) et écrivez vos propres règles dans ce fichier. 
69 Espace(s) en fin de ligne à supprimer. => Les fichiers de ''/lib/udev/rules.d/'' sont triés par ordre **alphabétique**, et dans certaines circonstances, l'ordre dans lequel ils sont analysés est important. En général, vous voulez que vos propres règles soient prises en compte avant les règles créées par défaut, donc créez votre fichier comme ceci: ''/etc/udev/rules.d/10-local.rules'' (le nombre 10 influe sur l'ordre de prise en compte) et écrivez vos propres règles dans ce fichier. 

73 Mot inconnu : udev => Un périphérique peut être contrôlé par plusieurs règles. Ceci peut être avantageux lorsque par exemple, nous écrivons deux règles pour un périphérique, qui donnent un nom différent pour le même périphérique. Les deux règles seront appliquées même si ces règles sont dans des fichiers séparés. Il est important de comprendre que //udev// ne s'interrompt pas quand il trouve une règle, il continue sa recherche et tente d'appliquer chaque règle trouvée.

77 Espace(s) en fin de ligne à supprimer. => Chaque règle est faite d'un ensemble de //clefs de correspondances// et de //clefs d'assignation//, séparées par des virgules. Les //clefs de correspondances// sont les conditions utilisées pour identifier le périphérique sur lequel la règle agit. **Quand toute la série de ces clefs de correspondance correspond bien au périphérique, alors la règle est appliquée et les actions des clefs d'assignation sont appliquées**. Chaque règle doit se composer d'au moins une clef de correspondance et d'une clef d'assignation. 

79 Il manque un espace insécable. => Prenons par exemple :
80 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>
80 Guillemets typographiques fermants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>
80 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>
80 Guillemets typographiques fermants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>

82 Mot inconnu : KERNEL => Cette règle inclut une clef de correspondance (''KERNEL'') et une clef d'assignation (''NAME''). La sémantique de ces clefs et leurs propriétés seront détaillées par la suite. Il est important de noter que la clef de correspondance est liée à sa valeur par un double égal (''==''), alors que la clef d'assignation est liée à sa valeur par un simple égal (''=''). 
82 Guillemets typographiques fermants. => Cette règle inclut une clef de correspondance (''KERNEL'') et une clef d'assignation (''NAME''). La sémantique de ces clefs et leurs propriétés seront détaillées par la suite. Il est important de noter que la clef de correspondance est liée à sa valeur par un double égal (''==''), alors que la clef d'assignation est liée à sa valeur par un simple égal (''=''). 
82 Mot inconnu : NAME => Cette règle inclut une clef de correspondance (''KERNEL'') et une clef d'assignation (''NAME''). La sémantique de ces clefs et leurs propriétés seront détaillées par la suite. Il est important de noter que la clef de correspondance est liée à sa valeur par un double égal (''==''), alors que la clef d'assignation est liée à sa valeur par un simple égal (''=''). 
82 Guillemets typographiques fermants. => Cette règle inclut une clef de correspondance (''KERNEL'') et une clef d'assignation (''NAME''). La sémantique de ces clefs et leurs propriétés seront détaillées par la suite. Il est important de noter que la clef de correspondance est liée à sa valeur par un double égal (''==''), alors que la clef d'assignation est liée à sa valeur par un simple égal (''=''). 
82 Espace(s) en fin de ligne à supprimer. => Cette règle inclut une clef de correspondance (''KERNEL'') et une clef d'assignation (''NAME''). La sémantique de ces clefs et leurs propriétés seront détaillées par la suite. Il est important de noter que la clef de correspondance est liée à sa valeur par un double égal (''==''), alors que la clef d'assignation est liée à sa valeur par un simple égal (''=''). 

86 Mot inconnu : Udev => Dans une règle, //Udev// peut utiliser plusieurs clefs pour identifier un périphérique de manière très précise. Les clefs les plus communes sont présentées ci-dessous, les autres seront traitées plus loin. Pour la liste complète, consultez l'aide de //udev// avec la commande ''man udev''. 
86 Mot inconnu : udev => Dans une règle, //Udev// peut utiliser plusieurs clefs pour identifier un périphérique de manière très précise. Les clefs les plus communes sont présentées ci-dessous, les autres seront traitées plus loin. Pour la liste complète, consultez l'aide de //udev// avec la commande ''man udev''. 
86 Guillemets typographiques ouvrants. => Dans une règle, //Udev// peut utiliser plusieurs clefs pour identifier un périphérique de manière très précise. Les clefs les plus communes sont présentées ci-dessous, les autres seront traitées plus loin. Pour la liste complète, consultez l'aide de //udev// avec la commande ''man udev''. 
86 Mot inconnu : udev => Dans une règle, //Udev// peut utiliser plusieurs clefs pour identifier un périphérique de manière très précise. Les clefs les plus communes sont présentées ci-dessous, les autres seront traitées plus loin. Pour la liste complète, consultez l'aide de //udev// avec la commande ''man udev''. 
86 Guillemets typographiques fermants. => Dans une règle, //Udev// peut utiliser plusieurs clefs pour identifier un périphérique de manière très précise. Les clefs les plus communes sont présentées ci-dessous, les autres seront traitées plus loin. Pour la liste complète, consultez l'aide de //udev// avec la commande ''man udev''. 
86 Espace(s) en fin de ligne à supprimer. => Dans une règle, //Udev// peut utiliser plusieurs clefs pour identifier un périphérique de manière très précise. Les clefs les plus communes sont présentées ci-dessous, les autres seront traitées plus loin. Pour la liste complète, consultez l'aide de //udev// avec la commande ''man udev''. 

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''KERNEL'' – le nom du périphérique donné par le noyau;
88 Guillemets typographiques ouvrants. =>    * ''KERNEL'' – le nom du périphérique donné par le noyau;
88 Mot inconnu : KERNEL =>    * ''KERNEL'' – le nom du périphérique donné par le noyau;
88 Guillemets typographiques fermants. =>    * ''KERNEL'' – le nom du périphérique donné par le noyau;
88 Il manque un espace insécable. =>    * ''KERNEL'' – le nom du périphérique donné par le noyau;

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;
89 Guillemets typographiques ouvrants. =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;
89 Mot inconnu : SUBSYSTEM =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;
89 Guillemets typographiques fermants. =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;
89 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;
89 Il manque probablement un trait d’union. =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;
89 Il manque un espace insécable. =>    * ''SUBSYSTEM'' - le nom du sous système contenant le périphérique;

90 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''DRIVER'' - le nom du pilote du périphérique.
90 Guillemets typographiques ouvrants. =>    * ''DRIVER'' - le nom du pilote du périphérique.
90 Guillemets typographiques fermants. =>    * ''DRIVER'' - le nom du pilote du périphérique.
90 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    * ''DRIVER'' - le nom du pilote du périphérique.

92 Mot inconnu : udev => Après avoir utilisé une série de clefs pour définir précisément le périphérique, //udev// vous donne le contrôle, grâce aux clefs d'assignation. Pour la liste complète de ces clefs, consultez l'aide de //udev// avec la commande ''man udev''. Les clefs d'assignation les plus fréquentes se trouvent ci-dessous, les autres seront traités plus loin. 
92 Mot inconnu : udev => Après avoir utilisé une série de clefs pour définir précisément le périphérique, //udev// vous donne le contrôle, grâce aux clefs d'assignation. Pour la liste complète de ces clefs, consultez l'aide de //udev// avec la commande ''man udev''. Les clefs d'assignation les plus fréquentes se trouvent ci-dessous, les autres seront traités plus loin. 
92 Guillemets typographiques ouvrants. => Après avoir utilisé une série de clefs pour définir précisément le périphérique, //udev// vous donne le contrôle, grâce aux clefs d'assignation. Pour la liste complète de ces clefs, consultez l'aide de //udev// avec la commande ''man udev''. Les clefs d'assignation les plus fréquentes se trouvent ci-dessous, les autres seront traités plus loin. 
92 Mot inconnu : udev => Après avoir utilisé une série de clefs pour définir précisément le périphérique, //udev// vous donne le contrôle, grâce aux clefs d'assignation. Pour la liste complète de ces clefs, consultez l'aide de //udev// avec la commande ''man udev''. Les clefs d'assignation les plus fréquentes se trouvent ci-dessous, les autres seront traités plus loin. 
92 Guillemets typographiques fermants. => Après avoir utilisé une série de clefs pour définir précisément le périphérique, //udev// vous donne le contrôle, grâce aux clefs d'assignation. Pour la liste complète de ces clefs, consultez l'aide de //udev// avec la commande ''man udev''. Les clefs d'assignation les plus fréquentes se trouvent ci-dessous, les autres seront traités plus loin. 
92 Espace(s) en fin de ligne à supprimer. => Après avoir utilisé une série de clefs pour définir précisément le périphérique, //udev// vous donne le contrôle, grâce aux clefs d'assignation. Pour la liste complète de ces clefs, consultez l'aide de //udev// avec la commande ''man udev''. Les clefs d'assignation les plus fréquentes se trouvent ci-dessous, les autres seront traités plus loin. 

94 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''NAME'' – nom du périphérique "node";
94 Guillemets typographiques ouvrants. =>   * ''NAME'' – nom du périphérique "node";
94 Mot inconnu : NAME =>   * ''NAME'' – nom du périphérique "node";
94 Guillemets typographiques fermants. =>   * ''NAME'' – nom du périphérique "node";
94 Guillemets typographiques ouvrants. =>   * ''NAME'' – nom du périphérique "node";
94 Mot inconnu : node =>   * ''NAME'' – nom du périphérique "node";
94 Guillemets typographiques fermants. =>   * ''NAME'' – nom du périphérique "node";

95 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''SYMLINK'' - **liste** des liens symboliques, ceux-ci étant les noms alternatifs pour le périphérique.
95 Guillemets typographiques ouvrants. =>   * ''SYMLINK'' - **liste** des liens symboliques, ceux-ci étant les noms alternatifs pour le périphérique.
95 Mot inconnu : SYMLINK =>   * ''SYMLINK'' - **liste** des liens symboliques, ceux-ci étant les noms alternatifs pour le périphérique.
95 Guillemets typographiques fermants. =>   * ''SYMLINK'' - **liste** des liens symboliques, ceux-ci étant les noms alternatifs pour le périphérique.
95 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   * ''SYMLINK'' - **liste** des liens symboliques, ceux-ci étant les noms alternatifs pour le périphérique.

97 Mot inconnu : udev => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Guillemets typographiques ouvrants. => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Mot inconnu : node => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Guillemets typographiques fermants. => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Guillemets typographiques ouvrants. => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Mot inconnu : SYMLINK => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Guillemets typographiques fermants. => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Guillemets typographiques ouvrants. => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Mot inconnu : node => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
97 Guillemets typographiques fermants. => Comme il a été dit au début, //udev// crée un seul vrai périphérique "node" pour un périphérique. Si vous souhaitez fournir plusieurs noms pour ce périphérique, utilisez le lien symbolique. Avec l'assignation ''SYMLINK'', vous créez une liste de liens symboliques, qui pointent vers le périphérique "node". Pour utiliser cette liste de liens, nous introduisons un nouvel opérateur ''+='', qui permet d'ajouter des éléments à la liste. Vous pouvez utiliser plusieurs noms sur la liste quelle que soit la règle en les séparant par un espace.
99 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>
99 Guillemets typographiques fermants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>
99 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>
99 Guillemets typographiques fermants. => <code>KERNEL=="hdb", NAME="my_spare_disk"</code>

100 Il manque un espace insécable. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Guillemets typographiques ouvrants. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Mot inconnu : hdb => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Guillemets typographiques fermants. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Guillemets typographiques ouvrants. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Mot inconnu : my_spare_disk => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Guillemets typographiques fermants. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Guillemets typographiques ouvrants. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Mot inconnu : node => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
100 Guillemets typographiques fermants. => Soit la règle : «//pour le périphérique que le noyau a appelé ''hdb'', le renommer en ''my_spare_disk''//». Le périphérique "node" apparaîtra maintenant comme ''/dev/my_spare_disk''.
102 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", DRIVER=="ide-disk", SYMLINK+="sparedisk"</code>
102 Guillemets typographiques fermants. => <code>KERNEL=="hdb", DRIVER=="ide-disk", SYMLINK+="sparedisk"</code>
102 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", DRIVER=="ide-disk", SYMLINK+="sparedisk"</code>
102 Guillemets typographiques fermants. => <code>KERNEL=="hdb", DRIVER=="ide-disk", SYMLINK+="sparedisk"</code>
102 Guillemets typographiques ouvrants. => <code>KERNEL=="hdb", DRIVER=="ide-disk", SYMLINK+="sparedisk"</code>
102 Guillemets typographiques fermants. => <code>KERNEL=="hdb", DRIVER=="ide-disk", SYMLINK+="sparedisk"</code>

103 Il manque un espace insécable. => Soit la règle : «//pour le périphérique que le noyau à appelé ''hdb''» **et**
103 Guillemets typographiques ouvrants. => Soit la règle : «//pour le périphérique que le noyau à appelé ''hdb''» **et**
103 Mot inconnu : hdb => Soit la règle : «//pour le périphérique que le noyau à appelé ''hdb''» **et**
103 Guillemets typographiques fermants. => Soit la règle : «//pour le périphérique que le noyau à appelé ''hdb''» **et**

104 Guillemets typographiques ouvrants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Mot inconnu : ide-disk => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques fermants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques ouvrants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Mot inconnu : sparedisk => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques fermants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques ouvrants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Mot inconnu : node => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques fermants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Mot inconnu : udev => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques ouvrants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Mot inconnu : NAME => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques fermants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Guillemets typographiques ouvrants. => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
104 Mot inconnu : SYMLINK => «//quand le pilote est ''ide-disk''», alors «//créer un lien symbolique (de plus) nommé ''sparedisk''//». Notez que nous n'avons pas spécifié de nom au périphérique "node", donc //udev// gardera celui par défaut. Afin de préserver la disposition standard dans ''/dev'', il est conseillé d'écrire vos propres règles sans ''NAME'', et de préférer ajouter des ''SYMLINK''s et/ou donner d'autres assignations.
106 Guillemets typographiques ouvrants. => <code>KERNEL=="hdc", SYMLINK+="cdrom cdrom0"</code>
106 Guillemets typographiques fermants. => <code>KERNEL=="hdc", SYMLINK+="cdrom cdrom0"</code>
106 Guillemets typographiques ouvrants. => <code>KERNEL=="hdc", SYMLINK+="cdrom cdrom0"</code>
106 Guillemets typographiques fermants. => <code>KERNEL=="hdc", SYMLINK+="cdrom cdrom0"</code>

107 Guillemets typographiques ouvrants. => Cette règle est probablement la plus commune que vous écrirez. Cela crée deux liens symboliques, ''/dev/cdrom'' et ''/dev/cdrom0'', qui pointeront tous deux sur ''/dev/hdc''. Une fois de plus, pas d'assignation ''NAME'' spécifiée, donc le nom par défaut donné par le kernel (''hdc'') sera utilisé.
107 Mot inconnu : NAME => Cette règle est probablement la plus commune que vous écrirez. Cela crée deux liens symboliques, ''/dev/cdrom'' et ''/dev/cdrom0'', qui pointeront tous deux sur ''/dev/hdc''. Une fois de plus, pas d'assignation ''NAME'' spécifiée, donc le nom par défaut donné par le kernel (''hdc'') sera utilisé.
107 Guillemets typographiques fermants. => Cette règle est probablement la plus commune que vous écrirez. Cela crée deux liens symboliques, ''/dev/cdrom'' et ''/dev/cdrom0'', qui pointeront tous deux sur ''/dev/hdc''. Une fois de plus, pas d'assignation ''NAME'' spécifiée, donc le nom par défaut donné par le kernel (''hdc'') sera utilisé.
107 Mot inconnu : kernel => Cette règle est probablement la plus commune que vous écrirez. Cela crée deux liens symboliques, ''/dev/cdrom'' et ''/dev/cdrom0'', qui pointeront tous deux sur ''/dev/hdc''. Une fois de plus, pas d'assignation ''NAME'' spécifiée, donc le nom par défaut donné par le kernel (''hdc'') sera utilisé.
107 Mot inconnu : hdc => Cette règle est probablement la plus commune que vous écrirez. Cela crée deux liens symboliques, ''/dev/cdrom'' et ''/dev/cdrom0'', qui pointeront tous deux sur ''/dev/hdc''. Une fois de plus, pas d'assignation ''NAME'' spécifiée, donc le nom par défaut donné par le kernel (''hdc'') sera utilisé.
107 Guillemets typographiques fermants. => Cette règle est probablement la plus commune que vous écrirez. Cela crée deux liens symboliques, ''/dev/cdrom'' et ''/dev/cdrom0'', qui pointeront tous deux sur ''/dev/hdc''. Une fois de plus, pas d'assignation ''NAME'' spécifiée, donc le nom par défaut donné par le kernel (''hdc'') sera utilisé.

109 Mot inconnu : sysfs => ====Les attributs de sysfs====

111 Il manque un espace insécable. => Les clefs introduites précédemment semblent avoir des possibilités limitées. Cependant, vous pouvez avoir besoin d'un contrôle plus précis : pour identifier un périphérique par le numéro du //vendor//, le nom exact du produit, le numéro de série, la capacité de stockage, le nombre de partitions, etc.
111 Mot inconnu : vendor => Les clefs introduites précédemment semblent avoir des possibilités limitées. Cependant, vous pouvez avoir besoin d'un contrôle plus précis : pour identifier un périphérique par le numéro du //vendor//, le nom exact du produit, le numéro de série, la capacité de stockage, le nombre de partitions, etc.

112 Mot inconnu : sysfs => Certains pilotes exportent ces informations dans le //sysfs//, et //udev// vous permet d'utiliser ces informations pour vos propres règles, à l'aide de la clé ''ATTR'' par syntaxe particulière. 
112 Mot inconnu : udev => Certains pilotes exportent ces informations dans le //sysfs//, et //udev// vous permet d'utiliser ces informations pour vos propres règles, à l'aide de la clé ''ATTR'' par syntaxe particulière. 
112 Guillemets typographiques ouvrants. => Certains pilotes exportent ces informations dans le //sysfs//, et //udev// vous permet d'utiliser ces informations pour vos propres règles, à l'aide de la clé ''ATTR'' par syntaxe particulière. 
112 Mot inconnu : ATTR => Certains pilotes exportent ces informations dans le //sysfs//, et //udev// vous permet d'utiliser ces informations pour vos propres règles, à l'aide de la clé ''ATTR'' par syntaxe particulière. 
112 Guillemets typographiques fermants. => Certains pilotes exportent ces informations dans le //sysfs//, et //udev// vous permet d'utiliser ces informations pour vos propres règles, à l'aide de la clé ''ATTR'' par syntaxe particulière. 
112 Espace(s) en fin de ligne à supprimer. => Certains pilotes exportent ces informations dans le //sysfs//, et //udev// vous permet d'utiliser ces informations pour vos propres règles, à l'aide de la clé ''ATTR'' par syntaxe particulière. 

114 Mot inconnu : sysfs => Voici plusieurs exemples utilisant //sysfs//, plus de détails par la suite.

116 Mot inconnu : KERNEL => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Guillemets typographiques ouvrants. => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Mot inconnu : sda => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Guillemets typographiques fermants. => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Mot inconnu : ATTR => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Mot inconnu : model => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Guillemets typographiques ouvrants. => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Mot inconnu : ST3120827AS => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Guillemets typographiques fermants. => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Mot inconnu : SYMLINK => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Guillemets typographiques ouvrants. => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Mot inconnu : my_hard_disk => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"
116 Guillemets typographiques fermants. => KERNEL=="sda", ATTR{model}=="ST3120827AS", SYMLINK+="my_hard_disk"

118 Mot inconnu : SUBSYSTEM => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Mot inconnu : block => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Mot inconnu : ATTR => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Mot inconnu : size => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Formatage des grands nombres. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Mot inconnu : SYMLINK => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Mot inconnu : my_disk => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"
118 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", SYMLINK+="my_disk"

120 Guillemets typographiques ouvrants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : usb => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques fermants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : ATTR => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques ouvrants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : OLYMPUS => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques fermants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : ATTR => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : product => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques ouvrants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : X250 => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Il manque un espace. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : D560Z => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : C350Z => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques fermants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Mot inconnu : SYMLINK => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques ouvrants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"
120 Guillemets typographiques fermants. => BUS=="usb", ATTR{manufacturer}=="OLYMPUS", ATTR{product}=="X250,D560Z,C350Z", SYMLINK+="camera"

126 Mot inconnu : udev => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 
126 Guillemets typographiques ouvrants. => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 
126 Mot inconnu : printf => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 
126 Guillemets typographiques fermants. => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 
126 Mot inconnu : assignement => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 
126 Mot inconnu : udev => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 
126 Espace(s) en fin de ligne à supprimer. => Pour écrire des règles agissant sur plusieurs périphériques similaires, les opérateurs de substitution de //udev// (à la manière de ''printf'') sont très utiles. Vous pouvez inclure simplement ces opérateurs dans n'importe quel assignement dans vos règles, et //udev// les évaluera quand ils seront exécutés. 

128 Il manque un espace. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques fermants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Il manque un espace. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques fermants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Il manque un espace. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques fermants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques ouvrants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Mot inconnu : sda3 => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques fermants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Il manque un espace. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques fermants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques ouvrants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.
128 Guillemets typographiques fermants. => Les opérateurs les plus communs sont ''%k'' et ''%n''. ''%k'' est remplacé par le nom que le noyau avait assigné au périphérique, e.g. ''sda3'' pour le périphérique qui apparaîtra par défaut sur ''/dev/sda3''. ''%n'' est remplacé par le numéro que le noyau a assigné au périphérique (pour le périphérique de stockage, c'est le numéro de partition), e.g. ''3'' pour ''/dev/sda3''.

130 Mot inconnu : Udev => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Mot inconnu : udev => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Guillemets typographiques ouvrants. => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Mot inconnu : udev => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Guillemets typographiques fermants. => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Mot inconnu : kernel => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Guillemets typographiques fermants. => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Mot inconnu : number => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.
130 Guillemets typographiques fermants. => //Udev// fournit d'autres opérateurs de substitution pour créer des fonctions plus avancées que vous pourrez consulter dans l'aide de //udev// (dans une console, tapez ''man udev''). Il y a une syntaxe alternative pour ces opérateurs - ''$kernel'' et ''$number'' pour les exemples précédents. Et si vous voulez utiliser un ''%'' littéral dans une règle, il vous suffira de mettre ''%%''; si vous voulez utiliser un ''$'' littéral dans une règle, mettez ''$$''.

132 Mot inconnu : __Par => __Par exemple :__
132 Mot inconnu : __ => __Par exemple :__

134 Mot inconnu : KERNEL => KERNEL=="mice", NAME="input/%k"
134 Guillemets typographiques ouvrants. => KERNEL=="mice", NAME="input/%k"
134 Mot inconnu : mice => KERNEL=="mice", NAME="input/%k"
134 Guillemets typographiques fermants. => KERNEL=="mice", NAME="input/%k"
134 Mot inconnu : NAME => KERNEL=="mice", NAME="input/%k"
134 Guillemets typographiques ouvrants. => KERNEL=="mice", NAME="input/%k"
134 Il manque un espace. => KERNEL=="mice", NAME="input/%k"
134 Guillemets typographiques fermants. => KERNEL=="mice", NAME="input/%k"

135 Mot inconnu : KERNEL => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Guillemets typographiques ouvrants. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Mot inconnu : loop0 => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Guillemets typographiques fermants. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Mot inconnu : NAME => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Guillemets typographiques ouvrants. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Mot inconnu : loop => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Il manque un espace. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Guillemets typographiques fermants. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Mot inconnu : SYMLINK => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Il manque un espace. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"
135 Guillemets typographiques fermants. => KERNEL=="loop0", NAME="loop/%n", SYMLINK+="%k"

137 Guillemets typographiques ouvrants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Mot inconnu : node => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques fermants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques ouvrants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Mot inconnu : mice => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques fermants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques ouvrants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Mot inconnu : node => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques fermants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques ouvrants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Mot inconnu : loop0 => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.
137 Guillemets typographiques fermants. => La première règle assure que le périphérique "node" appelé ''mice'' (pour une souris) apparaîtra exclusivement dans le répertoire ''/dev/input'' (donc ''/dev/input/mice'', au lieu du défaut ''/dev/mice''). La deuxième règle assure que le périphérique "node" ''loop0'' soit créé comme ''/dev/loop/0'', mais crée aussi un lien symbolique ''/dev/loop0'' pour être compatible.

139 Espace(s) en fin de ligne à supprimer. => On peut se demander quel est le véritable intérêt dans le cas de ces deux règles, car elles peuvent être utilisées sans aucun opérateur de substitution. Le véritable intérêt des substitutions va être expliqué dans la section suivante. 

143 Il manque un espace insécable. => Lorsque vous précisez un nom dans une clef d'identification, il est possible d'utiliser une expression, similaire à celles proposées par le //shell//. Les caractères spéciaux sont:

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Il manque un espace insécable. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Il manque un espace insécable. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Il manque un espace. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques ouvrants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Mot inconnu : dev =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques ouvrants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Mot inconnu : duv =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques ouvrants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Mot inconnu : d_v =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques ouvrants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Mot inconnu : dv =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');
145 Guillemets typographiques fermants. =>    * ''?'' - signifie n'importe quel caractère (ex: "''d?v''" correspondra pour ''dev'', ''duv'', ''d_v'' mais pas ''dv'');

147 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Il manque un espace insécable. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Guillemets typographiques ouvrants. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Mot inconnu : dev =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Guillemets typographiques fermants. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Guillemets typographiques ouvrants. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Guillemets typographiques fermants. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Guillemets typographiques ouvrants. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Mot inconnu : edev =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);
147 Guillemets typographiques fermants. =>    * ''*'' - signifie plusieurs caractères (ex: "''d*''" correspondra pour ''dev'', mais aussi pour ''d'', alors que ''edev'' n'ira pas);

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Il manque un espace insécable. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Mot inconnu : aei =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques fermants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques ouvrants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Mot inconnu : dev =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques fermants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques ouvrants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Mot inconnu : dav =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques fermants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques ouvrants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Mot inconnu : dov =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')
149 Guillemets typographiques fermants. =>    * ''[//liste//]'' - signifie un caractère, de la liste (ex: "''d[aei]v''" correspondra pour ''dev'' et ''dav'', mais pas ''dov'')

151 Il manque un espace insécable. => Voici quelques exemples, notez l'utilisation des opérateurs de substitution:

153 Mot inconnu : KERNEL => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Guillemets typographiques ouvrants. => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Mot inconnu : fd => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Mot inconnu : NAME => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Guillemets typographiques ouvrants. => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Mot inconnu : floppy => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Il manque un espace. => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Guillemets typographiques fermants. => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Mot inconnu : SYMLINK => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Il manque un espace. => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"
153 Guillemets typographiques fermants. => KERNEL=="fd[0-9]*", NAME="floppy/%n", SYMLINK+="%k"

154 Mot inconnu : KERNEL => KERNEL=="hiddev*", NAME="usb/%k"
154 Guillemets typographiques ouvrants. => KERNEL=="hiddev*", NAME="usb/%k"
154 Mot inconnu : hiddev => KERNEL=="hiddev*", NAME="usb/%k"
154 Mot inconnu : NAME => KERNEL=="hiddev*", NAME="usb/%k"
154 Guillemets typographiques ouvrants. => KERNEL=="hiddev*", NAME="usb/%k"
154 Mot inconnu : usb => KERNEL=="hiddev*", NAME="usb/%k"
154 Il manque un espace. => KERNEL=="hiddev*", NAME="usb/%k"
154 Guillemets typographiques fermants. => KERNEL=="hiddev*", NAME="usb/%k"

156 Guillemets typographiques ouvrants. => La première règle est pour les lecteurs de disquette, elle assure que tous les périphériques "nodes" seront placés par leur numéro dans le répertoire ''/dev/floppy'' et ajoute un lien avec le nom par défaut dans ''/dev/''.
156 Mot inconnu : nodes => La première règle est pour les lecteurs de disquette, elle assure que tous les périphériques "nodes" seront placés par leur numéro dans le répertoire ''/dev/floppy'' et ajoute un lien avec le nom par défaut dans ''/dev/''.
156 Guillemets typographiques fermants. => La première règle est pour les lecteurs de disquette, elle assure que tous les périphériques "nodes" seront placés par leur numéro dans le répertoire ''/dev/floppy'' et ajoute un lien avec le nom par défaut dans ''/dev/''.

158 Guillemets typographiques ouvrants. => La seconde règle place tous les périphériques dont le nom commence par ''hiddev'' dans le répertoire ''/dev/usb'' sans modifier le nom que le noyau leur a donné.
158 Mot inconnu : hiddev => La seconde règle place tous les périphériques dont le nom commence par ''hiddev'' dans le répertoire ''/dev/usb'' sans modifier le nom que le noyau leur a donné.
158 Guillemets typographiques fermants. => La seconde règle place tous les périphériques dont le nom commence par ''hiddev'' dans le répertoire ''/dev/usb'' sans modifier le nom que le noyau leur a donné.

160 Mot inconnu : sysfs => =====Utilisation de sysfs=====

163 Mot inconnu : sysfs => ====Organisation de sysfs====

165 Mot inconnu : sysfs => L'utilisation de //sysfs// a été brièvement évoquée précédemment. Dans le but d'écrire des règles basées sur ces informations, il vous faut connaître le nom des attributs et leurs valeurs. 
165 Espace(s) en fin de ligne à supprimer. => L'utilisation de //sysfs// a été brièvement évoquée précédemment. Dans le but d'écrire des règles basées sur ces informations, il vous faut connaître le nom des attributs et leurs valeurs. 

166 Mot inconnu : Sysfs => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//. 
166 Guillemets typographiques ouvrants. => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//. 
166 Guillemets typographiques fermants. => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//. 
166 Mot inconnu : sysfs => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//. 
166 Espace(s) en fin de ligne à supprimer. => //Sysfs// a une structure très simple. Il est logiquement divisé en répertoires, chacun comportant un certain nombre de fichiers (//attributs//) qui contiennent en général une seule valeur. Certains liens symboliques sont présents, parcourant plusieurs branches de "l'arbre" //sysfs//. 

168 Mot inconnu : sysfs => Certains répertoires sont situés sur les niveaux supérieurs du dispositif. Le niveau supérieur lie d'autres parties de //sysfs// vers le périphérique en question. Les chemins des périphériques du niveau supérieur sont classifiés dans le répertoire //sysfs//, contenant un fichier ''dev''. La commande suivante permet de les lister :
168 Mot inconnu : sysfs => Certains répertoires sont situés sur les niveaux supérieurs du dispositif. Le niveau supérieur lie d'autres parties de //sysfs// vers le périphérique en question. Les chemins des périphériques du niveau supérieur sont classifiés dans le répertoire //sysfs//, contenant un fichier ''dev''. La commande suivante permet de les lister :
168 Guillemets typographiques ouvrants. => Certains répertoires sont situés sur les niveaux supérieurs du dispositif. Le niveau supérieur lie d'autres parties de //sysfs// vers le périphérique en question. Les chemins des périphériques du niveau supérieur sont classifiés dans le répertoire //sysfs//, contenant un fichier ''dev''. La commande suivante permet de les lister :
168 Mot inconnu : dev => Certains répertoires sont situés sur les niveaux supérieurs du dispositif. Le niveau supérieur lie d'autres parties de //sysfs// vers le périphérique en question. Les chemins des périphériques du niveau supérieur sont classifiés dans le répertoire //sysfs//, contenant un fichier ''dev''. La commande suivante permet de les lister :
168 Guillemets typographiques fermants. => Certains répertoires sont situés sur les niveaux supérieurs du dispositif. Le niveau supérieur lie d'autres parties de //sysfs// vers le périphérique en question. Les chemins des périphériques du niveau supérieur sont classifiés dans le répertoire //sysfs//, contenant un fichier ''dev''. La commande suivante permet de les lister :
168 Il manque un espace insécable. => Certains répertoires sont situés sur les niveaux supérieurs du dispositif. Le niveau supérieur lie d'autres parties de //sysfs// vers le périphérique en question. Les chemins des périphériques du niveau supérieur sont classifiés dans le répertoire //sysfs//, contenant un fichier ''dev''. La commande suivante permet de les lister :
170 Il manque un espace à côté du tiret. => <code>find /sys -name dev</code>

172 Mot inconnu : sys => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : block => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : sda => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Guillemets typographiques fermants. => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Guillemets typographiques ouvrants. => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : udevadm => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Il manque un espace à côté du tiret. => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : path => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Il manque un espace à côté du tiret. => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : sys => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : block => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : sda => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : ice => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : sys => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : block => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : sda => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.
172 Mot inconnu : ice => Par exemple, sur un système, le répertoire ''/sys/block/sda'' peut être le chemin du périphérique du disque dur (fourni par la commande "udevadm info -q path -n /dev/sda"). Il est lié au contrôleur sur lequel celui-ci est connecté avec le lien symbolique ''/sys/block/sda/device/'', qui en même temps est lié au pilote du périphérique avec le lien symbolique ''/sys/block/sda/device/driver/''.

174 Mot inconnu : sysfs => Quand vous écrivez des règles basées sur les informations de //sysfs//, vous devez simplement remplacer les attributs par ceux trouvés dans ces fichiers. Par exemple, on peut lire la taille du disque dur avec :
174 Il manque un espace insécable. => Quand vous écrivez des règles basées sur les informations de //sysfs//, vous devez simplement remplacer les attributs par ceux trouvés dans ces fichiers. Par exemple, on peut lire la taille du disque dur avec :

176 Mot inconnu : cat => <code>cat /sys/block/sda/size
176 Mot inconnu : sys => <code>cat /sys/block/sda/size
176 Mot inconnu : block => <code>cat /sys/block/sda/size
176 Mot inconnu : sda => <code>cat /sys/block/sda/size
176 Mot inconnu : size => <code>cat /sys/block/sda/size

177 Formatage des grands nombres. => 234441648</code>

179 Mot inconnu : udev => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Guillemets typographiques ouvrants. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : ATTR => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : size => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Guillemets typographiques ouvrants. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Formatage des grands nombres. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Guillemets typographiques fermants. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : udev => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Guillemets typographiques ouvrants. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : attributes => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Guillemets typographiques fermants. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : sys => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : class => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : block => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : sda => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Mot inconnu : ice => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 
179 Espace(s) en fin de ligne à supprimer. => On peut donc utiliser dans une règle //udev// ''ATTR{size}=="234441648"'' pour identifier ce disque. Comme //udev// fait une recherche dans toute la branche du périphérique, on peut aussi choisir d'afficher une autre partie de cette branche (e.g. ''attributes'' dans ''/sys/class/block/sda/device/''). Cependant il y a d'autres choses à prendre en considération quand on utilise d'autres parties de la branche, comme cela est décrit plus loin. 

181 Mot inconnu : sysfs => Bien que cela serve d'introduction utile pour la structure du //sysfs// et pour comprendre le fonctionnement de //udev//, le changement avec //sysfs// est souvent une perte de temps qui n'est donc pas nécessaire.
181 Mot inconnu : udev => Bien que cela serve d'introduction utile pour la structure du //sysfs// et pour comprendre le fonctionnement de //udev//, le changement avec //sysfs// est souvent une perte de temps qui n'est donc pas nécessaire.
181 Mot inconnu : sysfs => Bien que cela serve d'introduction utile pour la structure du //sysfs// et pour comprendre le fonctionnement de //udev//, le changement avec //sysfs// est souvent une perte de temps qui n'est donc pas nécessaire.

183 Mot inconnu : udevadm => ====udevadm info====

185 Mot inconnu : udevadm => //udevadm info// est probablement l'outil le plus puissant pour aider dans la construction des règles. Tout ce que vous devez connaître est la dénomination //sysfs// du périphérique en question. Par exemple :
185 Mot inconnu : sysfs => //udevadm info// est probablement l'outil le plus puissant pour aider dans la construction des règles. Tout ce que vous devez connaître est la dénomination //sysfs// du périphérique en question. Par exemple :
185 Il manque un espace insécable. => //udevadm info// est probablement l'outil le plus puissant pour aider dans la construction des règles. Tout ce que vous devez connaître est la dénomination //sysfs// du périphérique en question. Par exemple :

187 Mot inconnu : udevadm => <code>udevadm info -a -p /sys/block/sda
187 Il manque un espace à côté du tiret. => <code>udevadm info -a -p /sys/block/sda
187 Mot inconnu : sys => <code>udevadm info -a -p /sys/block/sda
187 Mot inconnu : block => <code>udevadm info -a -p /sys/block/sda
187 Mot inconnu : sda => <code>udevadm info -a -p /sys/block/sda

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   looking at device '/block/sda':
190 Mot inconnu : looking =>   looking at device '/block/sda':
190 Mot inconnu : at =>   looking at device '/block/sda':
190 Mot inconnu : device =>   looking at device '/block/sda':
190 Mot inconnu : block =>   looking at device '/block/sda':
190 Mot inconnu : sda =>   looking at device '/block/sda':

191 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     KERNEL=="sda"
191 Mot inconnu : KERNEL =>     KERNEL=="sda"
191 Guillemets typographiques ouvrants. =>     KERNEL=="sda"
191 Mot inconnu : sda =>     KERNEL=="sda"
191 Guillemets typographiques fermants. =>     KERNEL=="sda"

192 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     SUBSYSTEM=="block"
192 Mot inconnu : SUBSYSTEM =>     SUBSYSTEM=="block"
192 Guillemets typographiques ouvrants. =>     SUBSYSTEM=="block"
192 Mot inconnu : block =>     SUBSYSTEM=="block"
192 Guillemets typographiques fermants. =>     SUBSYSTEM=="block"

193 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Mot inconnu : ATTR =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Mot inconnu : stat =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Formatage des grands nombres. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"
193 Guillemets typographiques fermants. =>     ATTR{stat}=="  128535     2246  2788977   766188    73998   317300  3132216  5735004        0   516516  6503316"

194 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{size}=="234441648"
194 Mot inconnu : ATTR =>     ATTR{size}=="234441648"
194 Mot inconnu : size =>     ATTR{size}=="234441648"
194 Guillemets typographiques ouvrants. =>     ATTR{size}=="234441648"
194 Formatage des grands nombres. =>     ATTR{size}=="234441648"
194 Guillemets typographiques fermants. =>     ATTR{size}=="234441648"

195 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{removable}=="0"
195 Mot inconnu : ATTR =>     ATTR{removable}=="0"
195 Mot inconnu : removable =>     ATTR{removable}=="0"
195 Guillemets typographiques ouvrants. =>     ATTR{removable}=="0"
195 Guillemets typographiques fermants. =>     ATTR{removable}=="0"

196 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{range}=="16"
196 Mot inconnu : ATTR =>     ATTR{range}=="16"
196 Guillemets typographiques ouvrants. =>     ATTR{range}=="16"
196 Guillemets typographiques fermants. =>     ATTR{range}=="16"

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{dev}=="8:0"
197 Mot inconnu : ATTR =>     ATTR{dev}=="8:0"
197 Mot inconnu : dev =>     ATTR{dev}=="8:0"
197 Guillemets typographiques ouvrants. =>     ATTR{dev}=="8:0"
197 Guillemets typographiques fermants. =>     ATTR{dev}=="8:0"

200 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : looking =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : at =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : device =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : ices =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : pci0000 =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Il manque un espace. =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : host0 =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Mot inconnu : target0 =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':
200 Il manque un espace. =>   looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0':

201 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ID=="0:0:0:0"

202 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     BUS=="scsi"
202 Guillemets typographiques ouvrants. =>     BUS=="scsi"
202 Mot inconnu : scsi =>     BUS=="scsi"
202 Guillemets typographiques fermants. =>     BUS=="scsi"

203 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     DRIVER=="sd"
203 Guillemets typographiques ouvrants. =>     DRIVER=="sd"
203 Mot inconnu : sd =>     DRIVER=="sd"
203 Guillemets typographiques fermants. =>     DRIVER=="sd"

204 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{ioerr_cnt}=="0x0"
204 Mot inconnu : ATTR =>     ATTR{ioerr_cnt}=="0x0"
204 Mot inconnu : ioerr_cnt =>     ATTR{ioerr_cnt}=="0x0"
204 Guillemets typographiques ouvrants. =>     ATTR{ioerr_cnt}=="0x0"
204 Mot inconnu : x0 =>     ATTR{ioerr_cnt}=="0x0"
204 Guillemets typographiques fermants. =>     ATTR{ioerr_cnt}=="0x0"

205 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{iodone_cnt}=="0x31737"
205 Mot inconnu : ATTR =>     ATTR{iodone_cnt}=="0x31737"
205 Mot inconnu : iodone_cnt =>     ATTR{iodone_cnt}=="0x31737"
205 Guillemets typographiques ouvrants. =>     ATTR{iodone_cnt}=="0x31737"
205 Mot inconnu : x31737 =>     ATTR{iodone_cnt}=="0x31737"
205 Guillemets typographiques fermants. =>     ATTR{iodone_cnt}=="0x31737"

206 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{iorequest_cnt}=="0x31737"
206 Mot inconnu : ATTR =>     ATTR{iorequest_cnt}=="0x31737"
206 Mot inconnu : iorequest_cnt =>     ATTR{iorequest_cnt}=="0x31737"
206 Guillemets typographiques ouvrants. =>     ATTR{iorequest_cnt}=="0x31737"
206 Mot inconnu : x31737 =>     ATTR{iorequest_cnt}=="0x31737"
206 Guillemets typographiques fermants. =>     ATTR{iorequest_cnt}=="0x31737"

207 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{iocounterbits}=="32"
207 Mot inconnu : ATTR =>     ATTR{iocounterbits}=="32"
207 Mot inconnu : iocounterbits =>     ATTR{iocounterbits}=="32"
207 Guillemets typographiques ouvrants. =>     ATTR{iocounterbits}=="32"
207 Guillemets typographiques fermants. =>     ATTR{iocounterbits}=="32"

208 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{timeout}=="30"
208 Mot inconnu : ATTR =>     ATTR{timeout}=="30"
208 Mot inconnu : timeout =>     ATTR{timeout}=="30"
208 Guillemets typographiques ouvrants. =>     ATTR{timeout}=="30"
208 Guillemets typographiques fermants. =>     ATTR{timeout}=="30"

209 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{state}=="running"
209 Mot inconnu : ATTR =>     ATTR{state}=="running"
209 Guillemets typographiques ouvrants. =>     ATTR{state}=="running"
209 Guillemets typographiques fermants. =>     ATTR{state}=="running"

210 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{rev}=="3.42"
210 Mot inconnu : ATTR =>     ATTR{rev}=="3.42"
210 Mot inconnu : rev =>     ATTR{rev}=="3.42"
210 Guillemets typographiques ouvrants. =>     ATTR{rev}=="3.42"
210 Guillemets typographiques fermants. =>     ATTR{rev}=="3.42"

211 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{model}=="ST3120827AS     "
211 Mot inconnu : ATTR =>     ATTR{model}=="ST3120827AS     "
211 Mot inconnu : model =>     ATTR{model}=="ST3120827AS     "
211 Guillemets typographiques ouvrants. =>     ATTR{model}=="ST3120827AS     "
211 Mot inconnu : ST3120827AS =>     ATTR{model}=="ST3120827AS     "
211 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{model}=="ST3120827AS     "
211 Guillemets fermants. =>     ATTR{model}=="ST3120827AS     "

212 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{vendor}=="ATA     "
212 Mot inconnu : ATTR =>     ATTR{vendor}=="ATA     "
212 Mot inconnu : vendor =>     ATTR{vendor}=="ATA     "
212 Guillemets typographiques ouvrants. =>     ATTR{vendor}=="ATA     "
212 Mot inconnu : ATA =>     ATTR{vendor}=="ATA     "
212 Espace(s) surnuméraire(s) à supprimer. =>     ATTR{vendor}=="ATA     "
212 Guillemets fermants. =>     ATTR{vendor}=="ATA     "

213 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{scsi_level}=="6"
213 Mot inconnu : ATTR =>     ATTR{scsi_level}=="6"
213 Mot inconnu : scsi_level =>     ATTR{scsi_level}=="6"
213 Guillemets typographiques ouvrants. =>     ATTR{scsi_level}=="6"
213 Guillemets typographiques fermants. =>     ATTR{scsi_level}=="6"

214 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{type}=="0"
214 Mot inconnu : ATTR =>     ATTR{type}=="0"
214 Guillemets typographiques ouvrants. =>     ATTR{type}=="0"
214 Guillemets typographiques fermants. =>     ATTR{type}=="0"

215 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{queue_type}=="none"
215 Mot inconnu : ATTR =>     ATTR{queue_type}=="none"
215 Mot inconnu : queue_type =>     ATTR{queue_type}=="none"
215 Guillemets typographiques ouvrants. =>     ATTR{queue_type}=="none"
215 Guillemets typographiques fermants. =>     ATTR{queue_type}=="none"

216 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{queue_depth}=="1"
216 Mot inconnu : ATTR =>     ATTR{queue_depth}=="1"
216 Mot inconnu : queue_depth =>     ATTR{queue_depth}=="1"
216 Guillemets typographiques ouvrants. =>     ATTR{queue_depth}=="1"
216 Guillemets typographiques fermants. =>     ATTR{queue_depth}=="1"

217 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{device_blocked}=="0"
217 Mot inconnu : ATTR =>     ATTR{device_blocked}=="0"
217 Mot inconnu : device_blocked =>     ATTR{device_blocked}=="0"
217 Guillemets typographiques ouvrants. =>     ATTR{device_blocked}=="0"
217 Guillemets typographiques fermants. =>     ATTR{device_blocked}=="0"

220 Guillemets typographiques ouvrants. => Comme vous pouvez le voir, ''udevadm info'' renvoie une liste d'informations que vous pouvez utiliser dans vos règles //udev//. Avec l'exemple précédant on peut créer deux règles pour ce périphérique :
220 Mot inconnu : udevadm => Comme vous pouvez le voir, ''udevadm info'' renvoie une liste d'informations que vous pouvez utiliser dans vos règles //udev//. Avec l'exemple précédant on peut créer deux règles pour ce périphérique :
220 Guillemets typographiques fermants. => Comme vous pouvez le voir, ''udevadm info'' renvoie une liste d'informations que vous pouvez utiliser dans vos règles //udev//. Avec l'exemple précédant on peut créer deux règles pour ce périphérique :
220 Mot inconnu : udev => Comme vous pouvez le voir, ''udevadm info'' renvoie une liste d'informations que vous pouvez utiliser dans vos règles //udev//. Avec l'exemple précédant on peut créer deux règles pour ce périphérique :
220 Il manque un espace insécable. => Comme vous pouvez le voir, ''udevadm info'' renvoie une liste d'informations que vous pouvez utiliser dans vos règles //udev//. Avec l'exemple précédant on peut créer deux règles pour ce périphérique :

223 Mot inconnu : SUBSYSTEM => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Mot inconnu : block => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Mot inconnu : ATTR => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Mot inconnu : size => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Formatage des grands nombres. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Mot inconnu : NAME => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Mot inconnu : my_hard_disk => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"
223 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", NAME="my_hard_disk"

225 Guillemets typographiques ouvrants. => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Mot inconnu : scsi => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Guillemets typographiques fermants. => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Mot inconnu : ATTR => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Mot inconnu : model => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Guillemets typographiques ouvrants. => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Mot inconnu : ST3120827AS => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Guillemets typographiques fermants. => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Mot inconnu : NAME => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Guillemets typographiques ouvrants. => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Mot inconnu : my_hard_disk => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
225 Guillemets typographiques fermants. => BUS=="scsi", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"

228 Guillemets typographiques fermants. => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Guillemets typographiques ouvrants. => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Guillemets typographiques fermants. => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : looking => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : at => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : device => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : block => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : sda => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Guillemets typographiques ouvrants. => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : looking => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : at => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : device => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : ices => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : pci0000 => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Il manque un espace. => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : host0 => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Mot inconnu : target0 => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).
228 Il manque un espace. => Dans ces exemples, vous avez pu voir la **séparation des informations** (''type 1'' et ''type 2''), car vous **ne** pouvez **pas** mélanger ces informations dans une règle, sinon elle ne fonctionnera pas. En effet, ils sont considérés comme des périphériques différents (''looking at device '/block/sda''' et ''looking at device '/devices/pci0000:00/0000:00:07.0/host0/target0:0:0/0:0:0:0''' sont **deux** périphériques **distincts**).

230 Il manque un espace insécable. => Par exemple, cette règle est **invalide** :

234 Mot inconnu : SUBSYSTEM => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : block => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : ATTR => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : size => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Formatage des grands nombres. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : ATTR => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : model => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : ST3120827AS => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : NAME => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques ouvrants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Mot inconnu : my_hard_disk => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"
234 Guillemets typographiques fermants. => SUBSYSTEM=="block", ATTR{size}=="234441648", ATTR{model}=="ST3120827AS", NAME="my_hard_disk"

237 Il manque un trait d’union. => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.
237 Guillemets typographiques ouvrants. => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.
237 Mot inconnu : ATTR => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.
237 Mot inconnu : iodone_cnt => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.
237 Guillemets typographiques ouvrants. => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.
237 Mot inconnu : x31737 => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.
237 Guillemets typographiques fermants. => Normalement vous aurez beaucoup d'attributs, et vous devrez en choisir quelques uns (de la même section) pour construire votre règle. En général, vous voudrez choisir les attributs qui identifient votre périphérique de façon unique et persistante. Dans ces exemples on choisit la taille et le numéro de série de son disque. On n'a pas utilisé les nombres sans signification comme ''ATTR{iodone_cnt}=="0x31737"''.

239 Guillemets typographiques ouvrants. => Notez aussi que les attributs donnés par ''udevadm info'' sont séparés par des espaces (voyez ''ST3120827AS'' dans l'exemple précédent). Dans vos règles, vous pouvez spécifier les espaces supplémentaires, ou les couper comme précédemment.
239 Mot inconnu : udevadm => Notez aussi que les attributs donnés par ''udevadm info'' sont séparés par des espaces (voyez ''ST3120827AS'' dans l'exemple précédent). Dans vos règles, vous pouvez spécifier les espaces supplémentaires, ou les couper comme précédemment.
239 Guillemets typographiques fermants. => Notez aussi que les attributs donnés par ''udevadm info'' sont séparés par des espaces (voyez ''ST3120827AS'' dans l'exemple précédent). Dans vos règles, vous pouvez spécifier les espaces supplémentaires, ou les couper comme précédemment.
239 Guillemets typographiques ouvrants. => Notez aussi que les attributs donnés par ''udevadm info'' sont séparés par des espaces (voyez ''ST3120827AS'' dans l'exemple précédent). Dans vos règles, vous pouvez spécifier les espaces supplémentaires, ou les couper comme précédemment.
239 Mot inconnu : ST3120827AS => Notez aussi que les attributs donnés par ''udevadm info'' sont séparés par des espaces (voyez ''ST3120827AS'' dans l'exemple précédent). Dans vos règles, vous pouvez spécifier les espaces supplémentaires, ou les couper comme précédemment.
239 Guillemets typographiques fermants. => Notez aussi que les attributs donnés par ''udevadm info'' sont séparés par des espaces (voyez ''ST3120827AS'' dans l'exemple précédent). Dans vos règles, vous pouvez spécifier les espaces supplémentaires, ou les couper comme précédemment.

241 Guillemets typographiques ouvrants. => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Mot inconnu : udevadm => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Guillemets typographiques fermants. => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Mot inconnu : sys => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Mot inconnu : block => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Mot inconnu : sda => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Guillemets typographiques fermants. => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Guillemets typographiques ouvrants. => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Mot inconnu : nodes => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Guillemets typographiques fermants. => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Mot inconnu : udev => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
241 Il manque un espace insécable. => Là où ''udevadm info'' se complique, c'est que vous devez connaître les branches supérieures (''/sys/block/sda'' dans l'exemple précédant), ce qui n'est pas toujours évident. Cependant, comme en général vous écrivez des règles pour les périphériques "nodes" existants, vous pouvez utiliser //udev// pour trouver la branche supérieure :
243 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sda)</code>
243 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sda)</code>
243 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sda)</code>

245 Mot inconnu : Apparement => Apparement, il y a beaucoup plus simple :
245 Il manque un espace insécable. => Apparement, il y a beaucoup plus simple :
246 Il manque un espace à côté du tiret. => <code>udevadm info -a -n /dev/sda</code>

247 Pléonasme. => voire même :
247 Il manque un espace insécable. => voire même :
248 Il manque un espace à côté du tiret. => <code>udevadm info -a -n sda</code>

251 Il manque un espace insécable. => Pour un périphérique USB, tapez la commande suivante :

252 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find /dev/bus/usb/ ! -type d -mmin -5
252 Mot inconnu : find =>   find /dev/bus/usb/ ! -type d -mmin -5
252 Il manque un espace insécable. =>   find /dev/bus/usb/ ! -type d -mmin -5
252 Il manque un espace à côté du tiret. =>   find /dev/bus/usb/ ! -type d -mmin -5
252 Mot inconnu : mmin =>   find /dev/bus/usb/ ! -type d -mmin -5
252 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   find /dev/bus/usb/ ! -type d -mmin -5

253 Il manque un espace insécable. => ou bien la commande :

254 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Mot inconnu : find =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Mot inconnu : sys =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Mot inconnu : ices =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Il manque un espace à côté du tiret. =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Mot inconnu : mmin =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Mot inconnu : grep =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$
254 Mot inconnu : usb =>   find /sys/devices/ -type d -mmin -5 | grep net/usb.$

255 Mot inconnu : udevadm => puis faire un **''udevadm info''** sur le résultat :
255 Guillemets typographiques fermants. => puis faire un **''udevadm info''** sur le résultat :
255 Il manque un espace insécable. => puis faire un **''udevadm info''** sur le résultat :

256 Mot inconnu : udevadm => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Mot inconnu : sys => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Mot inconnu : ices => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Mot inconnu : pci0000 => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Il manque un espace. => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Mot inconnu : usb1 => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Mot inconnu : usb0 => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 
256 Espace(s) en fin de ligne à supprimer. => <code>$ udevadm info /sys/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0 

257 Il manque un espace insécable. => P: /devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
257 Mot inconnu : ices => P: /devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
257 Mot inconnu : pci0000 => P: /devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
257 Il manque un espace. => P: /devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
257 Mot inconnu : usb1 => P: /devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
257 Mot inconnu : usb0 => P: /devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0

258 Il manque un espace insécable. => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
258 Mot inconnu : DEVPATH => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
258 Mot inconnu : ices => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
258 Mot inconnu : pci0000 => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
258 Il manque un espace. => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
258 Mot inconnu : usb1 => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
258 Mot inconnu : usb0 => E: DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0

259 Il manque un espace insécable. => E: ID_BUS=usb
259 Mot inconnu : ID_BUS => E: ID_BUS=usb
259 Mot inconnu : usb => E: ID_BUS=usb

260 Il manque un espace insécable. => E: ID_MM_CANDIDATE=1
260 Mot inconnu : ID_MM_CANDIDATE => E: ID_MM_CANDIDATE=1

261 Il manque un espace insécable. => E: ID_MODEL=Sailfish
261 Mot inconnu : ID_MODEL => E: ID_MODEL=Sailfish
261 Mot inconnu : Sailfish => E: ID_MODEL=Sailfish

262 Il manque un espace insécable. => E: ID_MODEL_ENC=Sailfish
262 Mot inconnu : ID_MODEL_ENC => E: ID_MODEL_ENC=Sailfish
262 Mot inconnu : Sailfish => E: ID_MODEL_ENC=Sailfish

263 Il manque un espace insécable. => E: ID_MODEL_ID=0a02
263 Mot inconnu : ID_MODEL_ID => E: ID_MODEL_ID=0a02
263 Mot inconnu : a02 => E: ID_MODEL_ID=0a02

264 Il manque un espace insécable. => E: ID_NET_NAME_MAC=enx827fe191698f
264 Mot inconnu : ID_NET_NAME_MAC => E: ID_NET_NAME_MAC=enx827fe191698f
264 Mot inconnu : enx827fe191698f => E: ID_NET_NAME_MAC=enx827fe191698f

265 Il manque un espace insécable. => E: ID_NET_NAME_PATH=enp0s18u1u3
265 Mot inconnu : ID_NET_NAME_PATH => E: ID_NET_NAME_PATH=enp0s18u1u3
265 Mot inconnu : enp0s18u1u3 => E: ID_NET_NAME_PATH=enp0s18u1u3

266 Il manque un espace insécable. => E: ID_REVISION=0228
266 Mot inconnu : ID_REVISION => E: ID_REVISION=0228

267 Il manque un espace insécable. => E: ID_SERIAL=Jolla_Sailfish_0123456789
267 Mot inconnu : ID_SERIAL => E: ID_SERIAL=Jolla_Sailfish_0123456789
267 Mot inconnu : Jolla_Sailfish_0123456789 => E: ID_SERIAL=Jolla_Sailfish_0123456789

268 Il manque un espace insécable. => E: ID_SERIAL_SHORT=0123456789
268 Mot inconnu : ID_SERIAL_SHORT => E: ID_SERIAL_SHORT=0123456789
268 Formatage des grands nombres. => E: ID_SERIAL_SHORT=0123456789

269 Il manque un espace insécable. => E: ID_TYPE=generic
269 Mot inconnu : ID_TYPE => E: ID_TYPE=generic
269 Mot inconnu : generic => E: ID_TYPE=generic

270 Il manque un espace insécable. => E: ID_USB_DRIVER=rndis_host
270 Mot inconnu : ID_USB_DRIVER => E: ID_USB_DRIVER=rndis_host
270 Mot inconnu : rndis_host => E: ID_USB_DRIVER=rndis_host

271 Il manque un espace insécable. => E: ID_USB_INTERFACES=:e00103:0a0000:
271 Mot inconnu : ID_USB_INTERFACES => E: ID_USB_INTERFACES=:e00103:0a0000:
271 Mot inconnu : e00103 => E: ID_USB_INTERFACES=:e00103:0a0000:
271 Il manque un espace. => E: ID_USB_INTERFACES=:e00103:0a0000:
271 Mot inconnu : a0000 => E: ID_USB_INTERFACES=:e00103:0a0000:
271 Il manque un espace insécable. => E: ID_USB_INTERFACES=:e00103:0a0000:

272 Il manque un espace insécable. => E: ID_USB_INTERFACE_NUM=00
272 Mot inconnu : ID_USB_INTERFACE_NUM => E: ID_USB_INTERFACE_NUM=00

273 Il manque un espace insécable. => E: ID_VENDOR=Jolla
273 Mot inconnu : ID_VENDOR => E: ID_VENDOR=Jolla
273 Mot inconnu : Jolla => E: ID_VENDOR=Jolla

274 Il manque un espace insécable. => E: ID_VENDOR_ENC=Jolla
274 Mot inconnu : ID_VENDOR_ENC => E: ID_VENDOR_ENC=Jolla
274 Mot inconnu : Jolla => E: ID_VENDOR_ENC=Jolla

275 Il manque un espace insécable. => E: ID_VENDOR_FROM_DATABASE=Advanced Micro Devices, Inc.
275 Mot inconnu : ID_VENDOR_FROM_DATABASE => E: ID_VENDOR_FROM_DATABASE=Advanced Micro Devices, Inc.
275 Mot inconnu : Advanced => E: ID_VENDOR_FROM_DATABASE=Advanced Micro Devices, Inc.
275 Mot inconnu : Devices => E: ID_VENDOR_FROM_DATABASE=Advanced Micro Devices, Inc.
275 Mot inconnu : Inc => E: ID_VENDOR_FROM_DATABASE=Advanced Micro Devices, Inc.

276 Il manque un espace insécable. => E: ID_VENDOR_ID=2931
276 Mot inconnu : ID_VENDOR_ID => E: ID_VENDOR_ID=2931

277 Il manque un espace insécable. => E: IFINDEX=29
277 Mot inconnu : IFINDEX => E: IFINDEX=29

278 Il manque un espace insécable. => E: INTERFACE=usb0
278 Mot inconnu : usb0 => E: INTERFACE=usb0

279 Il manque un espace insécable. => E: SUBSYSTEM=net
279 Mot inconnu : SUBSYSTEM => E: SUBSYSTEM=net

280 Il manque un espace insécable. => E: USEC_INITIALIZED=275352985
280 Mot inconnu : USEC_INITIALIZED => E: USEC_INITIALIZED=275352985
280 Formatage des grands nombres. => E: USEC_INITIALIZED=275352985

282 Il manque un espace insécable. => Autre méthode plus rapide mais plus compliquée à comprendre, tapez la commande suivante puis brancher et débrancher le périphérique :

284 Mot inconnu : udevadm => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : prop => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : udev => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : egrep => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Guillemets typographiques ouvrants. => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : DEVNAME => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : DEVPATH => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : ID_MODEL => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : ID_SERIAL => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : ID_VENDOR => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="
284 Mot inconnu : SUBSYSTEM => $ udevadm monitor --prop --udev | egrep "DEVNAME=|DEVPATH=|ID_MODEL=|ID_SERIAL|ID_VENDOR=|SUBSYSTEM="

285 Mot inconnu : DEVNAME => DEVNAME=/dev/bus/usb/001/004

286 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3
286 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3
286 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3
286 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3
286 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3

287 Mot inconnu : ID_MODEL => ID_MODEL=Sailfish
287 Mot inconnu : Sailfish => ID_MODEL=Sailfish

288 Mot inconnu : ID_SERIAL => ID_SERIAL=Jolla_Sailfish_0123456789
288 Mot inconnu : Jolla_Sailfish_0123456789 => ID_SERIAL=Jolla_Sailfish_0123456789

289 Mot inconnu : ID_SERIAL_SHORT => ID_SERIAL_SHORT=0123456789
289 Formatage des grands nombres. => ID_SERIAL_SHORT=0123456789

290 Mot inconnu : ID_VENDOR => ID_VENDOR=Jolla
290 Mot inconnu : Jolla => ID_VENDOR=Jolla

291 Mot inconnu : SUBSYSTEM => SUBSYSTEM=usb
291 Mot inconnu : usb => SUBSYSTEM=usb

292 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0
292 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0
292 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0
292 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0
292 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0

293 Mot inconnu : SUBSYSTEM => SUBSYSTEM=usb
293 Mot inconnu : usb => SUBSYSTEM=usb

294 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
294 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
294 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
294 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
294 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1

295 Mot inconnu : SUBSYSTEM => SUBSYSTEM=usb
295 Mot inconnu : usb => SUBSYSTEM=usb

296 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
296 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
296 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
296 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
296 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
296 Mot inconnu : usb0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0

297 Mot inconnu : ID_MODEL => ID_MODEL=Sailfish
297 Mot inconnu : Sailfish => ID_MODEL=Sailfish

298 Mot inconnu : ID_SERIAL => ID_SERIAL=Jolla_Sailfish_0123456789
298 Mot inconnu : Jolla_Sailfish_0123456789 => ID_SERIAL=Jolla_Sailfish_0123456789

299 Mot inconnu : ID_SERIAL_SHORT => ID_SERIAL_SHORT=0123456789
299 Formatage des grands nombres. => ID_SERIAL_SHORT=0123456789

300 Mot inconnu : ID_VENDOR => ID_VENDOR=Jolla
300 Mot inconnu : Jolla => ID_VENDOR=Jolla

301 Mot inconnu : SUBSYSTEM => SUBSYSTEM=net

302 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
302 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
302 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
302 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
302 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
302 Mot inconnu : usb0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
302 Mot inconnu : tx-0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0

303 Mot inconnu : SUBSYSTEM => SUBSYSTEM=queues

304 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
304 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
304 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
304 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
304 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
304 Mot inconnu : usb0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
304 Mot inconnu : rx-0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0

305 Mot inconnu : SUBSYSTEM => SUBSYSTEM=queues

306 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
306 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
306 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
306 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
306 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
306 Mot inconnu : usb0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0
306 Mot inconnu : rx-0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/rx-0

307 Mot inconnu : SUBSYSTEM => SUBSYSTEM=queues

308 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
308 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
308 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
308 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
308 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
308 Mot inconnu : usb0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0
308 Mot inconnu : tx-0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0/queues/tx-0

309 Mot inconnu : SUBSYSTEM => SUBSYSTEM=queues

310 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
310 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
310 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
310 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1
310 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.1

311 Mot inconnu : SUBSYSTEM => SUBSYSTEM=usb
311 Mot inconnu : usb => SUBSYSTEM=usb

312 Mot inconnu : DEVPATH => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
312 Mot inconnu : ices => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
312 Mot inconnu : pci0000 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
312 Il manque un espace. => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
312 Mot inconnu : usb1 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0
312 Mot inconnu : usb0 => DEVPATH=/devices/pci0000:00/0000:00:12.0/usb1/1-1/1-1.3/1-1.3:1.0/net/usb0

313 Mot inconnu : ID_MODEL => ID_MODEL=Sailfish
313 Mot inconnu : Sailfish => ID_MODEL=Sailfish

317 Guillemets typographiques ouvrants. => Bien que ''udevadm info'' soit la méthode la plus sûre pour lister les attributs exacts pour construire vos règles, certains utilisateurs préféreront utiliser d'autres outils. Les outils comme ''usbview'' montrent des informations similaires, pouvant être utilisées pour créer des règles.
317 Mot inconnu : udevadm => Bien que ''udevadm info'' soit la méthode la plus sûre pour lister les attributs exacts pour construire vos règles, certains utilisateurs préféreront utiliser d'autres outils. Les outils comme ''usbview'' montrent des informations similaires, pouvant être utilisées pour créer des règles.
317 Guillemets typographiques fermants. => Bien que ''udevadm info'' soit la méthode la plus sûre pour lister les attributs exacts pour construire vos règles, certains utilisateurs préféreront utiliser d'autres outils. Les outils comme ''usbview'' montrent des informations similaires, pouvant être utilisées pour créer des règles.
317 Guillemets typographiques ouvrants. => Bien que ''udevadm info'' soit la méthode la plus sûre pour lister les attributs exacts pour construire vos règles, certains utilisateurs préféreront utiliser d'autres outils. Les outils comme ''usbview'' montrent des informations similaires, pouvant être utilisées pour créer des règles.
317 Mot inconnu : usbview => Bien que ''udevadm info'' soit la méthode la plus sûre pour lister les attributs exacts pour construire vos règles, certains utilisateurs préféreront utiliser d'autres outils. Les outils comme ''usbview'' montrent des informations similaires, pouvant être utilisées pour créer des règles.
317 Guillemets typographiques fermants. => Bien que ''udevadm info'' soit la méthode la plus sûre pour lister les attributs exacts pour construire vos règles, certains utilisateurs préféreront utiliser d'autres outils. Les outils comme ''usbview'' montrent des informations similaires, pouvant être utilisées pour créer des règles.

324 Mot inconnu : Udev => //Udev// vous permet de gérer dans vos règles les propriétés et les permissions de chaque périphérique.

326 Guillemets typographiques ouvrants. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Mot inconnu : GROUP => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Guillemets typographiques fermants. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Guillemets typographiques ouvrants. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Mot inconnu : node => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Guillemets typographiques fermants. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Mot inconnu : framebuffer => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Guillemets typographiques ouvrants. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Mot inconnu : Video => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Guillemets typographiques fermants. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
326 Il manque un espace insécable. => La clef d'assignation ''GROUP'' vous permet de définir à quel groupe appartient un périphérique "node". Dans cet exemple, les périphériques //framebuffer// appartiennent au groupe ''Video'' :
328 Guillemets typographiques ouvrants. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Guillemets typographiques ouvrants. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Il manque un espace. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Guillemets typographiques fermants. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Il manque un espace. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Guillemets typographiques fermants. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Guillemets typographiques ouvrants. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>
328 Guillemets typographiques fermants. => <code>KERNEL=="fb[0-9]*", NAME="fb/%n", SYMLINK+="%k", GROUP="video"</code>

330 Guillemets typographiques ouvrants. => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
330 Mot inconnu : OWNER => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
330 Guillemets typographiques fermants. => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
330 Guillemets typographiques ouvrants. => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
330 Mot inconnu : node => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
330 Guillemets typographiques fermants. => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
330 Il manque un espace insécable. => La clef ''OWNER'', peut-être moins intéressante, vous permet de définir le propriétaire du périphérique "node". Dans cet exemple, l'utilisateur //John// sera mis comme propriétaire pour les lecteurs de disquettes :
332 Guillemets typographiques ouvrants. => <code>KERNEL=="fd[0-9]*", OWNER="john"</code>
332 Guillemets typographiques ouvrants. => <code>KERNEL=="fd[0-9]*", OWNER="john"</code>
332 Guillemets typographiques fermants. => <code>KERNEL=="fd[0-9]*", OWNER="john"</code>

334 Mot inconnu : udev => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques ouvrants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Mot inconnu : node => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques fermants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques ouvrants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques fermants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Mot inconnu : chmod => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques ouvrants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Mot inconnu : chmod => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques fermants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques ouvrants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Guillemets typographiques fermants. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
334 Il manque un espace insécable. => Par défaut, //udev// crée les permissions pour "node" avec les droits ''0660'' (lire/écrire pour tous les utilisateurs/groupes, vous pouvez trouver quelques informations sur ces chiffres dans la documentation de //chmod//, avec la commande ''man chmod''). Si c'est nécessaire, vous pouvez les modifier pour certains périphériques en utilisant les règles avec la clef d'assignation ''MODE''. Cet exemple définit que le périphérique peut être utilisé par tout le monde :
336 Guillemets typographiques ouvrants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Guillemets typographiques fermants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Guillemets typographiques ouvrants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Il manque un espace. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Guillemets typographiques fermants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Il manque un espace. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Guillemets typographiques fermants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Guillemets typographiques ouvrants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>
336 Guillemets typographiques fermants. => <code>KERNEL=="inotify", NAME="misc/%k", SYMLINK+="%k", MODE="0666"</code>

342 Mot inconnu : udev => Dans certaines circonstances, vous pouvez avoir besoin de plus de flexibilité que les règles //udev// en donnent. Dans ce cas vous pouvez demander à //udev// de lancer un programme, afin d'utiliser ce qui est sorti par ce programme pour créer le nom de périphérique.
342 Mot inconnu : udev => Dans certaines circonstances, vous pouvez avoir besoin de plus de flexibilité que les règles //udev// en donnent. Dans ce cas vous pouvez demander à //udev// de lancer un programme, afin d'utiliser ce qui est sorti par ce programme pour créer le nom de périphérique.

344 Guillemets typographiques ouvrants. => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Mot inconnu : PROGRAM => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Guillemets typographiques fermants. => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Il manque un espace. => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Guillemets typographiques fermants. => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Mot inconnu : NAME => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Mot inconnu : SYMLINK => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 
344 Espace(s) en fin de ligne à supprimer. => Pour utiliser cette fonction, vous devez simplement spécifier la ligne de commande entière du programme à utiliser (ainsi que ses paramètres) dans la clef d'assignation ''PROGRAM'', vous pouvez trouver des variantes d'utilisation du ''%c'' dans les sections //NAME/SYMLINK//. 

346 Confusion. Ce chien, ce chat… Se demander, se croire… => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Incohérence avec « se » : « référent » devrait être un verbe. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Guillemets typographiques ouvrants. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Mot inconnu : device_namer => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Guillemets typographiques fermants. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Guillemets typographiques ouvrants. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Mot inconnu : device_namer => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Guillemets typographiques fermants. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Mot inconnu : stdout => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Guillemets typographiques fermants. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 
346 Espace(s) en fin de ligne à supprimer. => Les exemples suivants se référent a un programme fictif appelé ''/bin/device_namer''. Ce ''device_namer'' prendrait un argument en ligne de commande, qui est le nom donné par le noyau au périphérique. À partir de ce nom, ''device_namer'' donnerait les informations sur sa sortie (''stdout''), séparées en plusieurs parties. Chaque partie est un seul mot et les parties sont séparées par un seul espace. 

348 Guillemets typographiques ouvrants. => Dans ce premier exemple, nous considérons que les informations en sortie de ''device_namer'' sont un nombre de parties, chacune forme un lien symbolique pour le périphérique en question.
348 Mot inconnu : device_namer => Dans ce premier exemple, nous considérons que les informations en sortie de ''device_namer'' sont un nombre de parties, chacune forme un lien symbolique pour le périphérique en question.
348 Guillemets typographiques fermants. => Dans ce premier exemple, nous considérons que les informations en sortie de ''device_namer'' sont un nombre de parties, chacune forme un lien symbolique pour le périphérique en question.
350 Guillemets typographiques ouvrants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", SYMLINK+="%c"</code>
350 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", SYMLINK+="%c"</code>
350 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", SYMLINK+="%c"</code>
350 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", SYMLINK+="%c"</code>
350 Apostrophe incorrecte. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", SYMLINK+="%c"</code>
350 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", SYMLINK+="%c"</code>

352 Guillemets typographiques ouvrants. => L'exemple suivant considère que les informations en sortie de ''device_namer'' contiennent deux parties, la première est le nom du périphérique, et la seconde est le nom pour un lien symbolique additionnel. Nous introduisons maintenant la substitution ''%c{//N//}'', en référence au nombre de parties des informations en sortie :
352 Mot inconnu : device_namer => L'exemple suivant considère que les informations en sortie de ''device_namer'' contiennent deux parties, la première est le nom du périphérique, et la seconde est le nom pour un lien symbolique additionnel. Nous introduisons maintenant la substitution ''%c{//N//}'', en référence au nombre de parties des informations en sortie :
352 Guillemets typographiques fermants. => L'exemple suivant considère que les informations en sortie de ''device_namer'' contiennent deux parties, la première est le nom du périphérique, et la seconde est le nom pour un lien symbolique additionnel. Nous introduisons maintenant la substitution ''%c{//N//}'', en référence au nombre de parties des informations en sortie :
352 Il manque un espace. => L'exemple suivant considère que les informations en sortie de ''device_namer'' contiennent deux parties, la première est le nom du périphérique, et la seconde est le nom pour un lien symbolique additionnel. Nous introduisons maintenant la substitution ''%c{//N//}'', en référence au nombre de parties des informations en sortie :
352 Il manque un espace insécable. => L'exemple suivant considère que les informations en sortie de ''device_namer'' contiennent deux parties, la première est le nom du périphérique, et la seconde est le nom pour un lien symbolique additionnel. Nous introduisons maintenant la substitution ''%c{//N//}'', en référence au nombre de parties des informations en sortie :
354 Guillemets typographiques ouvrants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2}"</code>
354 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2}"</code>
354 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2}"</code>
354 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2}"</code>
354 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2}"</code>
354 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2}"</code>

356 Guillemets typographiques ouvrants. => Le prochain exemple considère que ''device_namer'' retourne le nom du périphérique, suivi par un nombre variable de liens symboliques. Pour accéder à ces derniers, nous introduisons la substitution ''%c{//N//+}'', qui sera remplacé par les parties //N//, //N//+1, //N//+2... jusqu'à la dernière.
356 Mot inconnu : device_namer => Le prochain exemple considère que ''device_namer'' retourne le nom du périphérique, suivi par un nombre variable de liens symboliques. Pour accéder à ces derniers, nous introduisons la substitution ''%c{//N//+}'', qui sera remplacé par les parties //N//, //N//+1, //N//+2... jusqu'à la dernière.
356 Guillemets typographiques fermants. => Le prochain exemple considère que ''device_namer'' retourne le nom du périphérique, suivi par un nombre variable de liens symboliques. Pour accéder à ces derniers, nous introduisons la substitution ''%c{//N//+}'', qui sera remplacé par les parties //N//, //N//+1, //N//+2... jusqu'à la dernière.
356 Il manque un espace. => Le prochain exemple considère que ''device_namer'' retourne le nom du périphérique, suivi par un nombre variable de liens symboliques. Pour accéder à ces derniers, nous introduisons la substitution ''%c{//N//+}'', qui sera remplacé par les parties //N//, //N//+1, //N//+2... jusqu'à la dernière.
356 Typographie : points de suspension. Utilisez le caractère dédié. => Le prochain exemple considère que ''device_namer'' retourne le nom du périphérique, suivi par un nombre variable de liens symboliques. Pour accéder à ces derniers, nous introduisons la substitution ''%c{//N//+}'', qui sera remplacé par les parties //N//, //N//+1, //N//+2... jusqu'à la dernière.
358 Guillemets typographiques ouvrants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2+}"</code>
358 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2+}"</code>
358 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2+}"</code>
358 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2+}"</code>
358 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2+}"</code>
358 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/device_namer %k", NAME="%c{1}", SYMLINK+="%c{2+}"</code>

360 Guillemets typographiques ouvrants. => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
360 Mot inconnu : NAME => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
360 Guillemets typographiques fermants. => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
360 Guillemets typographiques ouvrants. => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
360 Mot inconnu : SYMLINK => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
360 Guillemets typographiques fermants. => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
360 Il manque un espace insécable. => Les réponses créées à partir de la sortie du programme peuvent être utilisées dans n'importe quelle clef d'assignation et pas seulement avec ''NAME'' et ''SYMLINK''. L'exemple suivant utilise un programme fictif qui déterminerait le groupe qui doit avoir les droits de ce périphérique :
362 Guillemets typographiques ouvrants. => <code>KERNEL=="hda", PROGRAM="/bin/who_owns_device %k", GROUP="%c"</code>
362 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/who_owns_device %k", GROUP="%c"</code>
362 Il manque un espace. => <code>KERNEL=="hda", PROGRAM="/bin/who_owns_device %k", GROUP="%c"</code>
362 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/who_owns_device %k", GROUP="%c"</code>
362 Apostrophe incorrecte. => <code>KERNEL=="hda", PROGRAM="/bin/who_owns_device %k", GROUP="%c"</code>
362 Guillemets typographiques fermants. => <code>KERNEL=="hda", PROGRAM="/bin/who_owns_device %k", GROUP="%c"</code>

366 Mot inconnu : udev => Une autre raison d'écrire des règles //udev// est de lancer un programme quand un périphérique est connecté ou déconnecté. Par exemple, vous voulez lancer un script qui va télécharger automatiquement les photos de votre appareil photo lorsque vous le connectez.

368 Guillemets typographiques ouvrants. => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Mot inconnu : PROGRAM => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Guillemets typographiques fermants. => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Guillemets typographiques ouvrants. => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Mot inconnu : PROGRAM => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Guillemets typographiques fermants. => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Guillemets typographiques ouvrants. => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Mot inconnu : node => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.
368 Guillemets typographiques fermants. => **Ne confondez pas** ceci avec la fonction ''PROGRAM'' décrite précédemment. ''PROGRAM'' sert à lancer des programmes qui génèrent des noms de périphériques et rien d'autre. Quand ces programmes sont exécutés, le périphérique "node" n'a pas encore été créé, donc faire une action sur ce périphérique n'est pas possible.

370 Mot inconnu : udev => La fonction introduite ici vous permet de lancer un programme après la mise en place du périphérique. Ce programme peut interagir avec le périphérique, cependant il doit s'exécuter rapidement car //udev// est mis en pause quand ces programmes sont lancés. Il ne faut donc pas négliger de s'assurer que le programme s'arrête de lui même.
370 Il manque un trait d’union si “même” se rapporte à “lui”. => La fonction introduite ici vous permet de lancer un programme après la mise en place du périphérique. Ce programme peut interagir avec le périphérique, cependant il doit s'exécuter rapidement car //udev// est mis en pause quand ces programmes sont lancés. Il ne faut donc pas négliger de s'assurer que le programme s'arrête de lui même.

372 Guillemets typographiques ouvrants. => Voici un exemple de règle qui utilise l'assignation ''RUN'' :
372 Mot inconnu : RUN => Voici un exemple de règle qui utilise l'assignation ''RUN'' :
372 Guillemets typographiques fermants. => Voici un exemple de règle qui utilise l'assignation ''RUN'' :
372 Il manque un espace insécable. => Voici un exemple de règle qui utilise l'assignation ''RUN'' :
374 Guillemets typographiques ouvrants. => <code>KERNEL=="sdb", RUN+="/usr/bin/my_program"</code>
374 Guillemets typographiques fermants. => <code>KERNEL=="sdb", RUN+="/usr/bin/my_program"</code>

376 Mot inconnu : udev => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Guillemets typographiques ouvrants. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Mot inconnu : SUBSYSTEM => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Guillemets typographiques fermants. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Guillemets typographiques ouvrants. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Guillemets typographiques fermants. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Mot inconnu : add => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Guillemets typographiques fermants. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Mot inconnu : remove => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Guillemets typographiques fermants. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 
376 Espace(s) en fin de ligne à supprimer. => Quand ''/usr/bin/my_program'' est exécuté, plusieurs informations de //udev// sont accessibles par les variables d'environnement. Ceci inclut les clefs comme ''SUBSYSTEM''. Vous pouvez aussi utiliser la variable d'environnement ''ACTION'' pour détecter si le périphérique est connecté (valeur "''add''") ou déconnecté (valeur "''remove''"). 

380 Mot inconnu : Udev => //Udev// fournit une clef ''ENV'' pour les variables d'environnement qui peut être utilisée à la fois pour //trouver// et //assigner// des variables.
380 Guillemets typographiques ouvrants. => //Udev// fournit une clef ''ENV'' pour les variables d'environnement qui peut être utilisée à la fois pour //trouver// et //assigner// des variables.
380 Guillemets typographiques fermants. => //Udev// fournit une clef ''ENV'' pour les variables d'environnement qui peut être utilisée à la fois pour //trouver// et //assigner// des variables.

382 Il manque un espace insécable. => Dans le cas d'une assignation, vous pouvez placer des variables d'environnement que vous pourrez retrouver par la suite. Vous pourrez aussi y accéder depuis les programmes externes lancés à l'aide des techniques décrites précédemment. Voici un exemple de syntaxe de règle pour créer une variable d'environnement :
384 Guillemets typographiques ouvrants. => <code>KERNEL=="fd0", SYMLINK+="floppy", ENV{some_var}="value"</code>
384 Guillemets typographiques fermants. => <code>KERNEL=="fd0", SYMLINK+="floppy", ENV{some_var}="value"</code>
384 Guillemets typographiques ouvrants. => <code>KERNEL=="fd0", SYMLINK+="floppy", ENV{some_var}="value"</code>
384 Guillemets typographiques fermants. => <code>KERNEL=="fd0", SYMLINK+="floppy", ENV{some_var}="value"</code>
384 Guillemets typographiques ouvrants. => <code>KERNEL=="fd0", SYMLINK+="floppy", ENV{some_var}="value"</code>
384 Guillemets typographiques fermants. => <code>KERNEL=="fd0", SYMLINK+="floppy", ENV{some_var}="value"</code>

386 Mot inconnu : udev => Dans le cas de la //recherche//, vous pouvez vous assurer que les règles se lancent seulement selon une variable d'environnement. Notez que l'environnement que //udev// voit ne sera pas le même que celui que l'utilisateur voit en console. Voici un exemple de règle :
386 Il manque un espace insécable. => Dans le cas de la //recherche//, vous pouvez vous assurer que les règles se lancent seulement selon une variable d'environnement. Notez que l'environnement que //udev// voit ne sera pas le même que celui que l'utilisateur voit en console. Voici un exemple de règle :
388 Guillemets typographiques ouvrants. => <code>KERNEL=="fd0", ENV{an_env_var}=="yes", SYMLINK+="floppy"</code>
388 Guillemets typographiques fermants. => <code>KERNEL=="fd0", ENV{an_env_var}=="yes", SYMLINK+="floppy"</code>
388 Guillemets typographiques ouvrants. => <code>KERNEL=="fd0", ENV{an_env_var}=="yes", SYMLINK+="floppy"</code>
388 Guillemets typographiques fermants. => <code>KERNEL=="fd0", ENV{an_env_var}=="yes", SYMLINK+="floppy"</code>
388 Guillemets typographiques ouvrants. => <code>KERNEL=="fd0", ENV{an_env_var}=="yes", SYMLINK+="floppy"</code>
388 Guillemets typographiques fermants. => <code>KERNEL=="fd0", ENV{an_env_var}=="yes", SYMLINK+="floppy"</code>

390 Mot inconnu : an_env_var => Cette règle ne crée le lien ''/dev/floppy'' que si ''$an_env_var'' est égal à "''yes''" dans l'environnement //udev//.
390 Guillemets typographiques fermants. => Cette règle ne crée le lien ''/dev/floppy'' que si ''$an_env_var'' est égal à "''yes''" dans l'environnement //udev//.
390 Mot inconnu : yes => Cette règle ne crée le lien ''/dev/floppy'' que si ''$an_env_var'' est égal à "''yes''" dans l'environnement //udev//.
390 Guillemets typographiques fermants. => Cette règle ne crée le lien ''/dev/floppy'' que si ''$an_env_var'' est égal à "''yes''" dans l'environnement //udev//.
390 Mot inconnu : udev => Cette règle ne crée le lien ''/dev/floppy'' que si ''$an_env_var'' est égal à "''yes''" dans l'environnement //udev//.

394 Guillemets typographiques ouvrants. => La clef ''OPTIONS'' est une liste d'options supplémentaire pour le traitement de la règle :
394 Guillemets typographiques fermants. => La clef ''OPTIONS'' est une liste d'options supplémentaire pour le traitement de la règle :
394 Il manque un espace insécable. => La clef ''OPTIONS'' est une liste d'options supplémentaire pour le traitement de la règle :

396 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''all_partitions'': crée autant de partitions que possible pour un disque, plutôt que seulement celles créées au démarrage;
396 Guillemets typographiques ouvrants. =>    * ''all_partitions'': crée autant de partitions que possible pour un disque, plutôt que seulement celles créées au démarrage;
396 Mot inconnu : all_partitions =>    * ''all_partitions'': crée autant de partitions que possible pour un disque, plutôt que seulement celles créées au démarrage;
396 Guillemets typographiques fermants. =>    * ''all_partitions'': crée autant de partitions que possible pour un disque, plutôt que seulement celles créées au démarrage;
396 Il manque un espace insécable. =>    * ''all_partitions'': crée autant de partitions que possible pour un disque, plutôt que seulement celles créées au démarrage;

398 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''ignore_device'': ignore complétement l'événement;
398 Guillemets typographiques ouvrants. =>    * ''ignore_device'': ignore complétement l'événement;
398 Mot inconnu : ignore_device =>    * ''ignore_device'': ignore complétement l'événement;
398 Guillemets typographiques fermants. =>    * ''ignore_device'': ignore complétement l'événement;
398 Il manque un espace insécable. =>    * ''ignore_device'': ignore complétement l'événement;

400 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''last_rule'': empêche l'éxécution des règles suivantes.
400 Guillemets typographiques ouvrants. =>    * ''last_rule'': empêche l'éxécution des règles suivantes.
400 Mot inconnu : last_rule =>    * ''last_rule'': empêche l'éxécution des règles suivantes.
400 Guillemets typographiques fermants. =>    * ''last_rule'': empêche l'éxécution des règles suivantes.
400 Mot inconnu : éxécution =>    * ''last_rule'': empêche l'éxécution des règles suivantes.

402 Guillemets typographiques ouvrants. => Par exemple, cette règle place un disque dur dans le groupe ''disk'' et s'assure qu'aucune règle qui suit n'aura d'effet dessus :
402 Mot inconnu : disk => Par exemple, cette règle place un disque dur dans le groupe ''disk'' et s'assure qu'aucune règle qui suit n'aura d'effet dessus :
402 Guillemets typographiques fermants. => Par exemple, cette règle place un disque dur dans le groupe ''disk'' et s'assure qu'aucune règle qui suit n'aura d'effet dessus :
402 Il manque un espace insécable. => Par exemple, cette règle place un disque dur dans le groupe ''disk'' et s'assure qu'aucune règle qui suit n'aura d'effet dessus :
404 Guillemets typographiques ouvrants. => <code>KERNEL=="sda", GROUP="disk", OPTIONS+="last_rule"</code>
404 Guillemets typographiques fermants. => <code>KERNEL=="sda", GROUP="disk", OPTIONS+="last_rule"</code>
404 Guillemets typographiques ouvrants. => <code>KERNEL=="sda", GROUP="disk", OPTIONS+="last_rule"</code>
404 Guillemets typographiques fermants. => <code>KERNEL=="sda", GROUP="disk", OPTIONS+="last_rule"</code>
404 Guillemets typographiques ouvrants. => <code>KERNEL=="sda", GROUP="disk", OPTIONS+="last_rule"</code>
404 Guillemets typographiques fermants. => <code>KERNEL=="sda", GROUP="disk", OPTIONS+="last_rule"</code>

410 Mot inconnu : udev => Lorsque on allume son imprimante, elle se voit assignée au périphérique ''/dev/lp0''. Non satisfait de ce nom, on décide de créer une règle //udev// pour le changer. Pour commencer, on cherche les informations sur celle-ci :
410 Il manque un espace insécable. => Lorsque on allume son imprimante, elle se voit assignée au périphérique ''/dev/lp0''. Non satisfait de ce nom, on décide de créer une règle //udev// pour le changer. Pour commencer, on cherche les informations sur celle-ci :

411 Mot inconnu : udevadm => <code>udevadm info -a -p $(udevadm info -q path -n /dev/lp0)
411 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/lp0)
411 Mot inconnu : udevadm => <code>udevadm info -a -p $(udevadm info -q path -n /dev/lp0)
411 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/lp0)
411 Mot inconnu : path => <code>udevadm info -a -p $(udevadm info -q path -n /dev/lp0)
411 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/lp0)

413 Mot inconnu : looking => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : at => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : the => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : device => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : chain => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : at => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : sys => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : ices => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : pci0000 => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Il manque un espace. => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':
413 Mot inconnu : usb3 => looking at the device chain at '/sys/devices/pci0000:00/0000:00:02.1/usb3/3-3':

414 Guillemets typographiques ouvrants. => BUS=="usb"
414 Mot inconnu : usb => BUS=="usb"
414 Guillemets typographiques fermants. => BUS=="usb"

415 Mot inconnu : ATTR => ATTR{manufacturer}=="EPSON"
415 Guillemets typographiques ouvrants. => ATTR{manufacturer}=="EPSON"
415 Mot inconnu : EPSON => ATTR{manufacturer}=="EPSON"
415 Guillemets typographiques fermants. => ATTR{manufacturer}=="EPSON"

416 Mot inconnu : ATTR => ATTR{product}=="USB Printer"
416 Mot inconnu : product => ATTR{product}=="USB Printer"
416 Guillemets typographiques ouvrants. => ATTR{product}=="USB Printer"
416 Mot inconnu : Printer => ATTR{product}=="USB Printer"
416 Guillemets typographiques fermants. => ATTR{product}=="USB Printer"

417 Mot inconnu : ATTR => ATTR{serial}=="L72010011070626380"
417 Mot inconnu : serial => ATTR{serial}=="L72010011070626380"
417 Guillemets typographiques ouvrants. => ATTR{serial}=="L72010011070626380"
417 Mot inconnu : L72010011070626380 => ATTR{serial}=="L72010011070626380"
417 Guillemets typographiques fermants. => ATTR{serial}=="L72010011070626380"

420 Il manque un espace insécable. => On peut maintenant faire une règle comme celle-ci : 
420 Espace(s) en fin de ligne à supprimer. => On peut maintenant faire une règle comme celle-ci : 

422 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{serial}=="L72010011070626380", SYMLINK+="epson_680"</code>
422 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{serial}=="L72010011070626380", SYMLINK+="epson_680"</code>
422 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{serial}=="L72010011070626380", SYMLINK+="epson_680"</code>
422 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{serial}=="L72010011070626380", SYMLINK+="epson_680"</code>
422 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{serial}=="L72010011070626380", SYMLINK+="epson_680"</code>
422 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{serial}=="L72010011070626380", SYMLINK+="epson_680"</code>

424 Mot inconnu : udev => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Guillemets typographiques ouvrants. => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Mot inconnu : L72 => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Typographie : points de suspension. Utilisez le caractère dédié. => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Guillemets typographiques fermants. => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Guillemets typographiques ouvrants. => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Mot inconnu : epson_680 => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')
424 Guillemets typographiques fermants. => (si //udev// trouve, sur le bus //USB//, un périphérique dont le numéro de série est ''L72...'', alors il ajoute un lien symbolique sous le nom ''epson_680'')

428 Espace(s) en fin de ligne à supprimer. => Comme la plupart des appareils photo, mon appareil photo est identifié comme un disque dur externe branché en USB, utilisant le transport SCSI. Pour accéder à ses photos, on monte le périphérique et on copie les images sur son disque dur. 

430 Il manque un espace insécable. => Tous les appareils photo ne fonctionnent pas forcément avec cette méthode : certains utilisent un protocole non-storage comme les appareils photo supportés par [[http://www.gphoto.org/|gphoto2]].
430 Mot inconnu : non-storage => Tous les appareils photo ne fonctionnent pas forcément avec cette méthode : certains utilisent un protocole non-storage comme les appareils photo supportés par [[http://www.gphoto.org/|gphoto2]].

433 Il manque un espace insécable. => Pour identifier le périphérique:

434 Mot inconnu : udevadm => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sdb1)
434 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sdb1)
434 Mot inconnu : udevadm => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sdb1)
434 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sdb1)
434 Mot inconnu : path => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sdb1)
434 Il manque un espace à côté du tiret. => <code>udevadm info -a -p $(udevadm info -q path -n /dev/sdb1)

435 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : looking =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : at =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : device =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : ices =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : pci0000 =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Il manque un espace. =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : usb2 =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : host6 =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Mot inconnu : target6 =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':
435 Il manque un espace. =>   looking at device '/devices/pci0000:00/0000:00:02.0/usb2/2-1/2-1:1.0/host6/target6:0:0/6:0:0:0':

436 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ID=="6:0:0:0"

437 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     BUS=="scsi"
437 Guillemets typographiques ouvrants. =>     BUS=="scsi"
437 Mot inconnu : scsi =>     BUS=="scsi"
437 Guillemets typographiques fermants. =>     BUS=="scsi"

438 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     DRIVER=="sd"
438 Guillemets typographiques ouvrants. =>     DRIVER=="sd"
438 Mot inconnu : sd =>     DRIVER=="sd"
438 Guillemets typographiques fermants. =>     DRIVER=="sd"

439 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{rev}=="1.00"
439 Mot inconnu : ATTR =>     ATTR{rev}=="1.00"
439 Mot inconnu : rev =>     ATTR{rev}=="1.00"
439 Guillemets typographiques ouvrants. =>     ATTR{rev}=="1.00"
439 Guillemets typographiques fermants. =>     ATTR{rev}=="1.00"

440 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{model}=="X250,D560Z,C350Z"
440 Mot inconnu : ATTR =>     ATTR{model}=="X250,D560Z,C350Z"
440 Mot inconnu : model =>     ATTR{model}=="X250,D560Z,C350Z"
440 Guillemets typographiques ouvrants. =>     ATTR{model}=="X250,D560Z,C350Z"
440 Mot inconnu : X250 =>     ATTR{model}=="X250,D560Z,C350Z"
440 Il manque un espace. =>     ATTR{model}=="X250,D560Z,C350Z"
440 Mot inconnu : D560Z =>     ATTR{model}=="X250,D560Z,C350Z"
440 Mot inconnu : C350Z =>     ATTR{model}=="X250,D560Z,C350Z"
440 Guillemets typographiques fermants. =>     ATTR{model}=="X250,D560Z,C350Z"

441 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{vendor}=="OLYMPUS "
441 Mot inconnu : ATTR =>     ATTR{vendor}=="OLYMPUS "
441 Mot inconnu : vendor =>     ATTR{vendor}=="OLYMPUS "
441 Guillemets typographiques ouvrants. =>     ATTR{vendor}=="OLYMPUS "
441 Mot inconnu : OLYMPUS =>     ATTR{vendor}=="OLYMPUS "
441 Guillemets fermants. =>     ATTR{vendor}=="OLYMPUS "

442 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{scsi_level}=="3"
442 Mot inconnu : ATTR =>     ATTR{scsi_level}=="3"
442 Mot inconnu : scsi_level =>     ATTR{scsi_level}=="3"
442 Guillemets typographiques ouvrants. =>     ATTR{scsi_level}=="3"
442 Guillemets typographiques fermants. =>     ATTR{scsi_level}=="3"

443 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{type}=="0"
443 Mot inconnu : ATTR =>     ATTR{type}=="0"
443 Guillemets typographiques ouvrants. =>     ATTR{type}=="0"
443 Guillemets typographiques fermants. =>     ATTR{type}=="0"

446 Guillemets typographiques ouvrants. => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Mot inconnu : sdb => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Guillemets typographiques fermants. => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Guillemets typographiques ouvrants. => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Mot inconnu : sdb1 => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Guillemets typographiques fermants. => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Il manque un espace insécable. => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Mot inconnu : sysfs => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.
446 Mot inconnu : udevadm => Un problème avec les appareils photo USB est qu'ils sont identifiés comme des disques contenant une seule partition, dans ce cas le disque ''/dev/sdb'' avec la partition ''/dev/sdb1''. Le périphérique ''sdb'' est inutile pour moi, mais ''sdb1'' est intéressant: c'est celui que je veux monter. Il y a un problème car //sysfs// est attaché aux deux de manière identique, les attributs utiles produits par //udevadm info// pour ''/dev/sdb1'' sont identiques que ceux de ''/dev/sdb''.

448 Guillemets typographiques ouvrants. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Mot inconnu : sdb => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Guillemets typographiques fermants. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Guillemets typographiques ouvrants. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Mot inconnu : sdb1 => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Guillemets typographiques fermants. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Il manque un espace insécable. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Guillemets typographiques ouvrants. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Mot inconnu : NAME => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.
448 Guillemets typographiques fermants. => Notre règle va donc devoir différencier les deux. Pour résoudre ceci, vous devez chercher ce qui diffère entre ''sdb'' et ''sdb1''. C'est étonnement simple : seul le nom diffère, donc nous pouvons utiliser une règle simple sur le champ ''NAME''.

450 Il manque un espace insécable. => Ma règle est alors : 
450 Espace(s) en fin de ligne à supprimer. => Ma règle est alors : 
452 Guillemets typographiques ouvrants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Il manque un espace insécable. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Il manque un espace. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques fermants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques ouvrants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques fermants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques ouvrants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Il manque un espace. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques fermants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques ouvrants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>
452 Guillemets typographiques fermants. => <code>KERNEL=="sd?1", BUS=="scsi", ATTR{model}=="X250,D560Z,C350Z", SYMLINK+="camera"</code>

454 Espace(s) surnuméraire(s) à supprimer. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Mot inconnu : sd => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Il manque un espace insécable. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Il manque un espace. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Guillemets typographiques fermants. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Mot inconnu : X250 => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Erreur de numérisation ? Virgules au lieu de points ? => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Typographie : points de suspension. Utilisez le caractère dédié. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Guillemets typographiques fermants. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Guillemets typographiques ouvrants. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')
454 Guillemets typographiques fermants. => (pour les périphériques auxquels  le noyau a attribué un nom du type "''sd?1''"", qui sont sur le bus SCSI, et dont le modèle est "''X250,...''", ajouter un lien nommé ''camera'')

459 Guillemets typographiques ouvrants. => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Mot inconnu : sdb => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Guillemets typographiques fermants. => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Guillemets typographiques ouvrants. => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Mot inconnu : sdb => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Guillemets typographiques fermants. => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Mot inconnu : udev => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :
459 Il manque un espace insécable. => Pour un Disque Dur USB, c'est comparable à l'exemple de l'appareil photo USB que l'on vient de décrire, cependant le modèle à utiliser est différent. Pour l'appareil photo, le périphérique ''sdb'' ne nous intéressait pas, mais si vous avez un disque dur USB de 100Go, c'est très compréhensible de vouloir le partitionner, et vous aurez besoin de ''sdb''. Dans ce cas nous pouvons tirer avantage de la substitution par //udev// :

461 Guillemets typographiques ouvrants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques fermants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques ouvrants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques ouvrants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques fermants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Il manque un espace. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques fermants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques ouvrants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Apostrophe incorrecte. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>
461 Guillemets typographiques fermants. => <code>BUS=="usb", KERNEL=="sd*", ATTR{product}=="USB 2.0 Storage Device", NAME="%k", SYMLINK+="usbhd%n"</code>

463 Il manque un espace insécable. => Cette règle crée des liens symboliques comme ceci : 
463 Espace(s) en fin de ligne à supprimer. => Cette règle crée des liens symboliques comme ceci : 

465 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''/dev/usbhd'' – Le périphérique pour ''fdisk'';
465 Guillemets typographiques ouvrants. =>    * ''/dev/usbhd'' – Le périphérique pour ''fdisk'';
465 Mot inconnu : fdisk =>    * ''/dev/usbhd'' – Le périphérique pour ''fdisk'';
465 Guillemets typographiques fermants. =>    * ''/dev/usbhd'' – Le périphérique pour ''fdisk'';

466 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''/dev/usbhd1'' – La première partition (montable);

467 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>    * ''/dev/usbhd2'' – La seconde partition (montable).

471 Mot inconnu : CompactFlash => Les Lecteurs de carte USB (//CompactFlash//, //SmartMedia//, etc.) sont encore un autre type de périphériques de stockage USB, avec un usage différent. 
471 Mot inconnu : SmartMedia => Les Lecteurs de carte USB (//CompactFlash//, //SmartMedia//, etc.) sont encore un autre type de périphériques de stockage USB, avec un usage différent. 
471 Espace(s) en fin de ligne à supprimer. => Les Lecteurs de carte USB (//CompactFlash//, //SmartMedia//, etc.) sont encore un autre type de périphériques de stockage USB, avec un usage différent. 

475 Guillemets typographiques ouvrants. => La seule solution est de tirer avantage de l'option ''all_partitions'', qui va créer 16 partitions pour chaque périphérique, comme illustré dans cet exemple :
475 Mot inconnu : all_partitions => La seule solution est de tirer avantage de l'option ''all_partitions'', qui va créer 16 partitions pour chaque périphérique, comme illustré dans cet exemple :
475 Guillemets typographiques fermants. => La seule solution est de tirer avantage de l'option ''all_partitions'', qui va créer 16 partitions pour chaque périphérique, comme illustré dans cet exemple :
475 Il manque un espace insécable. => La seule solution est de tirer avantage de l'option ''all_partitions'', qui va créer 16 partitions pour chaque périphérique, comme illustré dans cet exemple :

477 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Il manque un espace. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>
477 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{product}=="USB 2.0 CompactFlash Reader", SYMLINK+="cfrdr%n", OPTIONS+="all_partitions"</code>

479 Il manque un espace insécable. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques ouvrants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Mot inconnu : cfrdr => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques fermants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques ouvrants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Mot inconnu : cfrdr1 => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques fermants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques ouvrants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Mot inconnu : cfrdr2 => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques fermants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques ouvrants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Mot inconnu : cfrdr3 => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques fermants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Une de ces ponctuations est superflue. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Typographie : points de suspension. Utilisez le caractère dédié. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques ouvrants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Mot inconnu : cfrdr15 => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Guillemets typographiques fermants. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 
479 Espace(s) en fin de ligne à supprimer. => Vous aurez donc les périphériques : ''cfrdr'', ''cfrdr1'', ''cfrdr2'', ''cfrdr3'', ..., ''cfrdr15''. 

480 Mot inconnu : Palm => ====Palm USB====

482 Guillemets typographiques ouvrants. => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Mot inconnu : ttyUSB1 => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Guillemets typographiques fermants. => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Mot inconnu : palm => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Mot inconnu : q'une => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Mot inconnu : Carsten => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Mot inconnu : Clasohm => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :
482 Il manque un espace insécable. => Ces périphériques se déclarent comme des ports série USB, donc par défaut vous n'aurez que le périphérique ''ttyUSB1''. Les utilitaires pour //palm// cherchent en général ''/dev/pilot'', nombre d'utilisateurs apprécieront q'une règle gère cela. [[http://www.clasohm.com/blog/one-entry?entry%5fid=12096|Le post du blog de Carsten Clasohm]] propose une solution, voici la règle qu'il suggère :

484 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="Palm Handheld*", KERNEL=="ttyUSB[1359]", SYMLINK+="pilot"</code>
484 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{product}=="Palm Handheld*", KERNEL=="ttyUSB[1359]", SYMLINK+="pilot"</code>
484 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="Palm Handheld*", KERNEL=="ttyUSB[1359]", SYMLINK+="pilot"</code>
484 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="Palm Handheld*", KERNEL=="ttyUSB[1359]", SYMLINK+="pilot"</code>
484 Guillemets typographiques ouvrants. => <code>BUS=="usb", ATTR{product}=="Palm Handheld*", KERNEL=="ttyUSB[1359]", SYMLINK+="pilot"</code>
484 Guillemets typographiques fermants. => <code>BUS=="usb", ATTR{product}=="Palm Handheld*", KERNEL=="ttyUSB[1359]", SYMLINK+="pilot"</code>

486 Guillemets typographiques ouvrants. => Faites attention au ''ATTR{product}'' qui est différent selon le matériel, pensez à le vérifier avec //udevadm info//.
486 Mot inconnu : ATTR => Faites attention au ''ATTR{product}'' qui est différent selon le matériel, pensez à le vérifier avec //udevadm info//.
486 Mot inconnu : product => Faites attention au ''ATTR{product}'' qui est différent selon le matériel, pensez à le vérifier avec //udevadm info//.
486 Mot inconnu : udevadm => Faites attention au ''ATTR{product}'' qui est différent selon le matériel, pensez à le vérifier avec //udevadm info//.

490 Il manque un espace insécable. => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 
490 Mot inconnu : hdc => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 
490 Guillemets typographiques fermants. => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 
490 Mot inconnu : hdd => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 
490 Guillemets typographiques fermants. => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 
490 Accord de nombre erroné : « utilisateur » devrait être au pluriel. => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 
490 Espace(s) en fin de ligne à supprimer. => Par exemple on a deux lecteurs optiques : un lecteur de DVD (''hdc''), et un graveur de DVD (''hdd''). Inutile de les modifier, à moins de les bouger physiquement. Cependant certains utilisateur souhaiteront qu'ils soient détectés en tant que ''/dev/dvd'' pour plus de facilité. 

492 Il manque un espace insécable. => Comme nous savons les noms donnés par le noyau pour ces périphériques, l'écriture de règles est très simple :

494 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Mot inconnu : KERNEL => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Mot inconnu : hdc => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Mot inconnu : SYMLINK => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Mot inconnu : dvd => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Mot inconnu : GROUP => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"
494 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdc", SYMLINK+="dvd", GROUP="cdrom"

495 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Mot inconnu : KERNEL => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Mot inconnu : hdd => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Mot inconnu : SYMLINK => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Mot inconnu : dvdrw => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Mot inconnu : GROUP => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques ouvrants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"
495 Guillemets typographiques fermants. => BUS=="ide", KERNEL=="hdd", SYMLINK+="dvdrw", GROUP="cdrom"

499 Mot inconnu : Etant => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique.
499 Accord de nombre erroné avec « noms ». => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique.
499 Accord de nombre erroné : « noms » devrait être au singulier. => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique.
499 Guillemets typographiques ouvrants. => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique.
499 Mot inconnu : node => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique.
499 Guillemets typographiques fermants. => Etant référencées par leur noms, les interfaces réseau n'ont par défaut pas de périphérique "node" attribué. L'écriture de règles reste cependant identique.

501 Mot inconnu : udevadm => Il est logique d'utiliser simplement l'adresse MAC de votre interface dans la règle, puisque celle-ci est unique. Cependant, soyez certain d'utiliser l'adresse MAC exacte, telle que montrée par //udevadm info//, sinon votre règle ne fonctionnera pas. 
501 Espace(s) en fin de ligne à supprimer. => Il est logique d'utiliser simplement l'adresse MAC de votre interface dans la règle, puisque celle-ci est unique. Cependant, soyez certain d'utiliser l'adresse MAC exacte, telle que montrée par //udevadm info//, sinon votre règle ne fonctionnera pas. 

503 Mot inconnu : udevadm => <code> udevadm info -a -p /sys/class/net/eth0
503 Il manque un espace à côté du tiret. => <code> udevadm info -a -p /sys/class/net/eth0
503 Mot inconnu : sys => <code> udevadm info -a -p /sys/class/net/eth0
503 Mot inconnu : class => <code> udevadm info -a -p /sys/class/net/eth0
503 Mot inconnu : eth0 => <code> udevadm info -a -p /sys/class/net/eth0

504 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : looking =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : at =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : class =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : device =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : sys =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : class =>   looking at class device '/sys/class/net/eth0':
504 Mot inconnu : eth0 =>   looking at class device '/sys/class/net/eth0':

505 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     ATTR{address}=="00:52:8b:d5:04:48"
505 Mot inconnu : ATTR =>     ATTR{address}=="00:52:8b:d5:04:48"
505 Mot inconnu : address =>     ATTR{address}=="00:52:8b:d5:04:48"
505 Guillemets typographiques ouvrants. =>     ATTR{address}=="00:52:8b:d5:04:48"
505 Il manque un espace. =>     ATTR{address}=="00:52:8b:d5:04:48"
505 Mot inconnu : d5 =>     ATTR{address}=="00:52:8b:d5:04:48"
505 Guillemets typographiques fermants. =>     ATTR{address}=="00:52:8b:d5:04:48"

508 Il manque un espace insécable. => Voilà la règle correspondante :

509 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  
510 Guillemets typographiques ouvrants. => <code>KERNEL=="eth*", ATTR{address}=="00:52:8b:d5:04:48", NAME="lan"</code>
510 Guillemets typographiques ouvrants. => <code>KERNEL=="eth*", ATTR{address}=="00:52:8b:d5:04:48", NAME="lan"</code>
510 Il manque un espace. => <code>KERNEL=="eth*", ATTR{address}=="00:52:8b:d5:04:48", NAME="lan"</code>
510 Guillemets typographiques fermants. => <code>KERNEL=="eth*", ATTR{address}=="00:52:8b:d5:04:48", NAME="lan"</code>
510 Guillemets typographiques ouvrants. => <code>KERNEL=="eth*", ATTR{address}=="00:52:8b:d5:04:48", NAME="lan"</code>
510 Guillemets typographiques fermants. => <code>KERNEL=="eth*", ATTR{address}=="00:52:8b:d5:04:48", NAME="lan"</code>

512 Mot inconnu : udev => Une fois le fichier de //udev// modifié, vous devrez recharger le pilote pour faire appliquer cette règle. Vous pouvez soit décharger et recharger le module du noyau correspondant, soit redémarrer votre ordinateur. Vous devrez aussi reconfigurer votre système pour utiliser «''lan''» à la place de «''eth0''». 
512 Mot inconnu : lan => Une fois le fichier de //udev// modifié, vous devrez recharger le pilote pour faire appliquer cette règle. Vous pouvez soit décharger et recharger le module du noyau correspondant, soit redémarrer votre ordinateur. Vous devrez aussi reconfigurer votre système pour utiliser «''lan''» à la place de «''eth0''». 
512 Guillemets typographiques fermants. => Une fois le fichier de //udev// modifié, vous devrez recharger le pilote pour faire appliquer cette règle. Vous pouvez soit décharger et recharger le module du noyau correspondant, soit redémarrer votre ordinateur. Vous devrez aussi reconfigurer votre système pour utiliser «''lan''» à la place de «''eth0''». 
512 Mot inconnu : eth0 => Une fois le fichier de //udev// modifié, vous devrez recharger le pilote pour faire appliquer cette règle. Vous pouvez soit décharger et recharger le module du noyau correspondant, soit redémarrer votre ordinateur. Vous devrez aussi reconfigurer votre système pour utiliser «''lan''» à la place de «''eth0''». 
512 Guillemets typographiques fermants. => Une fois le fichier de //udev// modifié, vous devrez recharger le pilote pour faire appliquer cette règle. Vous pouvez soit décharger et recharger le module du noyau correspondant, soit redémarrer votre ordinateur. Vous devrez aussi reconfigurer votre système pour utiliser «''lan''» à la place de «''eth0''». 
512 Espace(s) en fin de ligne à supprimer. => Une fois le fichier de //udev// modifié, vous devrez recharger le pilote pour faire appliquer cette règle. Vous pouvez soit décharger et recharger le module du noyau correspondant, soit redémarrer votre ordinateur. Vous devrez aussi reconfigurer votre système pour utiliser «''lan''» à la place de «''eth0''». 

514 Mot inconnu : eth0 => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Guillemets typographiques fermants. => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Mot inconnu : lan => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Guillemets typographiques fermants. => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Mot inconnu : eth0 => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Guillemets typographiques fermants. => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Guillemets typographiques ouvrants. => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Mot inconnu : ifconfig => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.
514 Guillemets typographiques fermants. => //Note//: Il peut y avoir quelques problèmes pour le faire fonctionner (l'interface n'est pas renommée) tant que l'on n'a pas **complètement** retiré toutes les références à «''eth0''». Après ça, vous pourrez utiliser «''lan''» à la place de «''eth0''» dans n'importe quel utilitaire, comme ''ifconfig''.

518 Il manque un espace insécable. => Certaines cartes réseaux changent d’adresse MAC à chaque redémarrage ; on peut lire dans les messages kernel :
518 Mot inconnu : kernel => Certaines cartes réseaux changent d’adresse MAC à chaque redémarrage ; on peut lire dans les messages kernel :
518 Il manque un espace insécable. => Certaines cartes réseaux changent d’adresse MAC à chaque redémarrage ; on peut lire dans les messages kernel :

521 Mot inconnu : dmesg => dmesg

523 Mot inconnu : forcedeth => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Il manque un espace insécable. => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : Invalid => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : address => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : detected => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Il manque un espace insécable. => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : ff => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Il manque un espace. => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : ff => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : ff => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Il manque un espace. => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : ff => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : ff => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Il manque un espace. => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : ff => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : Please => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : complain => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : to => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : your => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.
523 Mot inconnu : vendor => forcedeth 0000:00:07.0: Invalid MAC address detected: ff:ff:ff:ff:ff:ff - Please complain to your hardware vendor.

524 Mot inconnu : forcedeth => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Il manque un espace insécable. => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : Using => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : random => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : address => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Il manque un espace insécable. => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : f1 => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : b2 => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Il manque un espace. => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : e5 => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Mot inconnu : d5 => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24
524 Il manque un espace. => forcedeth 0000:00:07.0: Using random MAC address: 26:f1:b2:e5:d5:24

527 Mot inconnu : udev => Si l'on souhaite avoir une adresse MAC fixe, on peut la configurer avec //udev// de la façon suivante :
527 Il manque un espace insécable. => Si l'on souhaite avoir une adresse MAC fixe, on peut la configurer avec //udev// de la façon suivante :

530 Mot inconnu : KERNEL => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Guillemets typographiques ouvrants. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Guillemets typographiques ouvrants. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : forcedeth => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Guillemets typographiques fermants. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : PROGRAM => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : link => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : dev => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Il manque un espace. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : address => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : xx => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Il manque un espace. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : xx => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : xx => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Il manque un espace. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : xx => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : xx => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Il manque un espace. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Mot inconnu : xx => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"
530 Guillemets typographiques fermants. => KERNEL=="eth*", DRIVERS=="forcedeth", PROGRAM="/sbin/ip link set dev %k address xx:xx:xx:xx:xx:xx"

533 Espace(s) surnuméraire(s) à supprimer. => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide.
533 Guillemets typographiques ouvrants. => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide.
533 Mot inconnu : forcedeth => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide.
533 Guillemets typographiques fermants. => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide.
533 Il manque un espace insécable. => Dans cette illustration  le driver est "forcedeth" : il vous faudra peut-être le remplacer par le vôtre. Il faut également renseigner une adresse MAC valide.

536 Mot inconnu : Wine => Les manettes de jeu apparaissent comme ''/dev/input/jsX'' voire ''/dev/input/eventX''. Certaines applications (//Wine// par exemple) veulent accéder aux manettes par ''/dev/input/eventX'', mais cela n'est pas forcément possible du fait des droits de ces fichiers :
536 Il manque un espace insécable. => Les manettes de jeu apparaissent comme ''/dev/input/jsX'' voire ''/dev/input/eventX''. Certaines applications (//Wine// par exemple) veulent accéder aux manettes par ''/dev/input/eventX'', mais cela n'est pas forcément possible du fait des droits de ces fichiers :

538 Il manque un espace insécable. => On peut ajouter la règle :
539 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", MODE="0666"</code>
539 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", MODE="0666"</code>
539 Guillemets typographiques fermants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", MODE="0666"</code>
539 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", MODE="0666"</code>
539 Guillemets typographiques fermants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", MODE="0666"</code>
542 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>
542 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>
542 Guillemets typographiques fermants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>
542 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>
542 Guillemets typographiques fermants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>
542 Guillemets typographiques ouvrants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>
542 Guillemets typographiques fermants. => <code>KERNEL=="event[0-9]*", ENV{ID_CLASS}=="joystick", GROUP="SOMEGROUP", MODE="0660"</code>

544 Guillemets typographiques ouvrants. => qui donnent les droits de lecture/écriture à tout le monde dans le premier cas, ou à toutes les personnes du groupe ''SOMEGROUP'' dans le deuxième cas.
544 Mot inconnu : SOMEGROUP => qui donnent les droits de lecture/écriture à tout le monde dans le premier cas, ou à toutes les personnes du groupe ''SOMEGROUP'' dans le deuxième cas.
544 Guillemets typographiques fermants. => qui donnent les droits de lecture/écriture à tout le monde dans le premier cas, ou à toutes les personnes du groupe ''SOMEGROUP'' dans le deuxième cas.

545 Mot inconnu : deboggage => =====Essais et deboggage=====

549 Mot inconnu : inotify => Si vous êtes sur un noyau avec le support //inotify//, //udev// surveillera votre répertoire de règles et prendra en compte automatiquement les modifications faites dans vos règles.
549 Mot inconnu : udev => Si vous êtes sur un noyau avec le support //inotify//, //udev// surveillera votre répertoire de règles et prendra en compte automatiquement les modifications faites dans vos règles.

551 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => A l'encontre de ceci, **//udev// ne remontera pas automatiquement les périphériques, mais tentera d'appliquer les règles**. Par exemple, si vous écrivez une règle pour ajouter un lien symbolique pour votre appareil photo alors que celui-ci est déjà branché au PC, ne vous attendez pas à ce que le lien symbolique soit créé. 
551 Mot inconnu : udev => A l'encontre de ceci, **//udev// ne remontera pas automatiquement les périphériques, mais tentera d'appliquer les règles**. Par exemple, si vous écrivez une règle pour ajouter un lien symbolique pour votre appareil photo alors que celui-ci est déjà branché au PC, ne vous attendez pas à ce que le lien symbolique soit créé. 
551 Espace(s) en fin de ligne à supprimer. => A l'encontre de ceci, **//udev// ne remontera pas automatiquement les périphériques, mais tentera d'appliquer les règles**. Par exemple, si vous écrivez une règle pour ajouter un lien symbolique pour votre appareil photo alors que celui-ci est déjà branché au PC, ne vous attendez pas à ce que le lien symbolique soit créé. 

552 Guillemets typographiques ouvrants. => Pour créer le lien symbolique, vous pouvez simplement débrancher et rebrancher votre appareil photo. Si le périphérique ne peut pas être débranché, vous pouvez lancer dans une console la commande ''udevadm trigger''.
552 Mot inconnu : udevadm => Pour créer le lien symbolique, vous pouvez simplement débrancher et rebrancher votre appareil photo. Si le périphérique ne peut pas être débranché, vous pouvez lancer dans une console la commande ''udevadm trigger''.
552 Mot inconnu : trigger => Pour créer le lien symbolique, vous pouvez simplement débrancher et rebrancher votre appareil photo. Si le périphérique ne peut pas être débranché, vous pouvez lancer dans une console la commande ''udevadm trigger''.
552 Guillemets typographiques fermants. => Pour créer le lien symbolique, vous pouvez simplement débrancher et rebrancher votre appareil photo. Si le périphérique ne peut pas être débranché, vous pouvez lancer dans une console la commande ''udevadm trigger''.

554 Mot inconnu : inotify => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.
554 Guillemets typographiques ouvrants. => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.
554 Mot inconnu : sudo => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.
554 Mot inconnu : udevadm => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.
554 Mot inconnu : control => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.
554 Mot inconnu : reload => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.
554 Guillemets typographiques fermants. => Si votre noyau n'a pas le support //inotify//, les nouvelles règles ne seront pas détectées automatiquement. Dans ce cas, vous devrez demander la relecture de celles-ci en lançant dans une console la commande ''sudo udevadm control --reload'' après avoir créé ou modifié une règle pour que cela prenne effet.

555 Mot inconnu : udevtest => ====udevtest====

557 Mot inconnu : sysfs => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Mot inconnu : udevtest => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Mot inconnu : udev => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Mot inconnu : sys => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Mot inconnu : class => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Mot inconnu : sound => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Mot inconnu : dsp => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Guillemets typographiques fermants. => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :
557 Il manque un espace insécable. => Si vous connaissez la branche qui gère votre périphérique dans //sysfs//, vous pouvez utiliser //udevtest// pour voir les actions que //udev// va faire. Cela pourra vous aider pour corriger vos règles. Par exemple, vous voulez vérifier une règle qui agit sur ''/sys/class/sound/dsp'' :

559 Mot inconnu : udevtest => <code> udevtest /class/sound/dsp
559 Mot inconnu : class => <code> udevtest /class/sound/dsp
559 Mot inconnu : sound => <code> udevtest /class/sound/dsp
559 Mot inconnu : dsp => <code> udevtest /class/sound/dsp

560 Il manque un espace insécable. => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : looking => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : at => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : device => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : class => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : sound => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : dsp => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Guillemets typographiques fermants. => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : from => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : subsystem => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Guillemets typographiques ouvrants. => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Mot inconnu : sound => main: looking at device '/class/sound/dsp' from subsystem 'sound'
560 Guillemets typographiques fermants. => main: looking at device '/class/sound/dsp' from subsystem 'sound'

561 Mot inconnu : udev_rules_get_name => udev_rules_get_name: add symlink 'dsp'
561 Il manque un espace insécable. => udev_rules_get_name: add symlink 'dsp'
561 Mot inconnu : add => udev_rules_get_name: add symlink 'dsp'
561 Mot inconnu : symlink => udev_rules_get_name: add symlink 'dsp'
561 Guillemets typographiques ouvrants. => udev_rules_get_name: add symlink 'dsp'
561 Mot inconnu : dsp => udev_rules_get_name: add symlink 'dsp'
561 Guillemets typographiques fermants. => udev_rules_get_name: add symlink 'dsp'

562 Mot inconnu : udev_rules_get_name => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Il manque un espace insécable. => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Mot inconnu : rule => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Mot inconnu : applied => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Guillemets typographiques ouvrants. => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Mot inconnu : dsp => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Guillemets typographiques fermants. => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Mot inconnu : becomes => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Guillemets typographiques ouvrants. => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Mot inconnu : sound => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Mot inconnu : dsp => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'
562 Guillemets typographiques fermants. => udev_rules_get_name: rule applied, 'dsp' becomes 'sound/dsp'

563 Mot inconnu : udev_device_event => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Il manque un espace insécable. => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : device => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : class => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : sound => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : dsp => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Guillemets typographiques fermants. => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : already => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : known => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : remove => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks
563 Mot inconnu : symlinks => udev_device_event: device '/class/sound/dsp' already known, remove possible symlinks

564 Mot inconnu : udev_node_add => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Il manque un espace insécable. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Mot inconnu : creating => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Mot inconnu : device => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Mot inconnu : node => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Guillemets typographiques ouvrants. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Mot inconnu : minor => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Guillemets typographiques ouvrants. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Guillemets typographiques ouvrants. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Mot inconnu : uid => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Guillemets typographiques ouvrants. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Mot inconnu : gid => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Guillemets typographiques ouvrants. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'
564 Guillemets typographiques fermants. => udev_node_add: creating device node '/dev/sound/dsp', major = '14', minor = '3', mode = '0660', uid = '0', gid = '18'

565 Mot inconnu : udev_node_add => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Il manque un espace insécable. => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Mot inconnu : creating => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Mot inconnu : symlink => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Mot inconnu : to => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Guillemets typographiques ouvrants. => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Mot inconnu : sound => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Mot inconnu : dsp => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'
565 Guillemets typographiques fermants. => udev_node_add: creating symlink '/dev/dsp' to 'sound/dsp'

568 Mot inconnu : sys => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Guillemets typographiques fermants. => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Guillemets typographiques ouvrants. => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Mot inconnu : udevtest => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Guillemets typographiques fermants. => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Mot inconnu : udev => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Mot inconnu : udevtest => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Mot inconnu : debug => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Mot inconnu : udevtest => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Il manque un espace insécable. => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 
568 Espace(s) en fin de ligne à supprimer. => Notez que le préfixe ''/sys'' a été supprimé des arguments de la ligne de commande de ''udevtest'', la raison étant que //udev// opère sur le chemin du périphérique. Notez aussi que //udevtest// est juste un outil de test/debug, cela ne créera pas de périphérique, contrairement à ce que //udevtest// vous dit (c'est une simulation) ! 

570 Mot inconnu : udevtest => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) :
570 Mot inconnu : udevadm => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) :
570 Mot inconnu : sdb => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) :
570 Il manque un espace insécable. => Dans le cas où //udevtest// ne fonctionnerait pas, il est aussi possible d'utiliser //udevadm// comme dans l'exemple suivant (où le périphérique est un disque dur externe qui se nomme sdb) :

572 Mot inconnu : udevadm => udevadm test /sys/block/sdb
572 Mot inconnu : sys => udevadm test /sys/block/sdb
572 Mot inconnu : block => udevadm test /sys/block/sdb
572 Mot inconnu : sdb => udevadm test /sys/block/sdb

576 Il manque un espace. => [[http://www.reactivated.net/writing_udev_rules.html|Ce document a été rédigé originellement en anglais]] par Daniel Drake <dan@reactivated.net> et traduit par [[utilisateurs:Acp]]. Les retours en anglais sont appréciés par Daniel Drake :) et modifié par la suite.

578 Accord de genre erroné : « mailing » est masculin. => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>. 
578 Mot inconnu : linux => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>. 
578 Mot inconnu : hotplug => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>. 
578 Il manque un espace insécable. => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>. 
578 Espace(s) en fin de ligne à supprimer. => Pour le support, envoyez un mail (en anglais) à la mailing liste de linux hotplug : <linux-hotplug-devel@lists.sourceforge.net>. 

581 Mot inconnu : General => [[http://www.gnu.org/licenses/gpl.html|Ce document est sous licence GNU General Public License, Version 2]]
581 Mot inconnu : License => [[http://www.gnu.org/licenses/gpl.html|Ce document est sous licence GNU General Public License, Version 2]]

585 Il manque un espace insécable. => //Contributeurs : [[utilisateurs:Acp]], [[utilisateurs:Lobotomy]], [[utilisateurs:Ignace72]], [[utilisateurs:daeavelwyn]]//
585 Il manque un espace. => //Contributeurs : [[utilisateurs:Acp]], [[utilisateurs:Lobotomy]], [[utilisateurs:Ignace72]], [[utilisateurs:daeavelwyn]]//
585 Il manque un espace. => //Contributeurs : [[utilisateurs:Acp]], [[utilisateurs:Lobotomy]], [[utilisateurs:Ignace72]], [[utilisateurs:daeavelwyn]]//
585 Il manque un espace. => //Contributeurs : [[utilisateurs:Acp]], [[utilisateurs:Lobotomy]], [[utilisateurs:Ignace72]], [[utilisateurs:daeavelwyn]]//
585 Il manque un espace. => //Contributeurs : [[utilisateurs:Acp]], [[utilisateurs:Lobotomy]], [[utilisateurs:Ignace72]], [[utilisateurs:daeavelwyn]]//
