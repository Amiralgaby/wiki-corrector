5 Mot inconnu : Systemd => ====== Systemd ======

6 Mot inconnu : Systemd => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : upstart => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : script_sysV => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : system => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : xenial => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : LTS => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : Xenial => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Il manque un espace insécable. => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : system => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : daemon => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Il manque un espace insécable. => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Il manque un espace insécable. => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\
6 Mot inconnu : daemon => Systemd est le gestionnaire de système qui remplace [[:upstart]] et son prédécesseur ([[:script_sysV|les scripts system V]]) depuis [[:xenial|Ubuntu 16.04 LTS Xenial]]. Le nom de ce programme vient de « system daemon » : le daemon du système\\

7 Mot inconnu : PID => C'est une pièce maîtresse de l'architecture [[:GNU]]/[[:Linux]]. En effet, c'est le premier programme lancé par le noyau (il a donc le PID N°1) et il se charge de lancer tous les programmes suivants en ordre jusqu'à obtenir un système opérationnel pour l'utilisateur, selon le mode déterminé (single user, multi-user, graphique). C'est également à lui qu'incombe la tache de redémarrer ou arrêter votre ordinateur proprement.
7 Confusion. Tache signifie faire une salissure, une altération, une marque, une coloration… Pour parler de l’accomplissement d’un travail, écrivez “tâcher”. => C'est une pièce maîtresse de l'architecture [[:GNU]]/[[:Linux]]. En effet, c'est le premier programme lancé par le noyau (il a donc le PID N°1) et il se charge de lancer tous les programmes suivants en ordre jusqu'à obtenir un système opérationnel pour l'utilisateur, selon le mode déterminé (single user, multi-user, graphique). C'est également à lui qu'incombe la tache de redémarrer ou arrêter votre ordinateur proprement.

9 Confusion probable. Écrivez “là” si vous voulez dire “ici”. => <note warning>À la la lecture de l’introduction, il apparaît très clairement que toute modification malencontreuse de l'architecture des services lancés par Systemd peut avoir des conséquences dramatiques sur le fonctionnement de votre ordinateur. \\ Il faut être très prudent lorsque l'on touche à la configuration de systemd. \\ __Une mauvaise manipulation peut rendre votre système instable__, jusqu'à le rendre totalement inutilisable.</note>
9 Mot inconnu : Systemd => <note warning>À la la lecture de l’introduction, il apparaît très clairement que toute modification malencontreuse de l'architecture des services lancés par Systemd peut avoir des conséquences dramatiques sur le fonctionnement de votre ordinateur. \\ Il faut être très prudent lorsque l'on touche à la configuration de systemd. \\ __Une mauvaise manipulation peut rendre votre système instable__, jusqu'à le rendre totalement inutilisable.</note>
9 Mot inconnu : systemd => <note warning>À la la lecture de l’introduction, il apparaît très clairement que toute modification malencontreuse de l'architecture des services lancés par Systemd peut avoir des conséquences dramatiques sur le fonctionnement de votre ordinateur. \\ Il faut être très prudent lorsque l'on touche à la configuration de systemd. \\ __Une mauvaise manipulation peut rendre votre système instable__, jusqu'à le rendre totalement inutilisable.</note>
9 Mot inconnu : __Une => <note warning>À la la lecture de l’introduction, il apparaît très clairement que toute modification malencontreuse de l'architecture des services lancés par Systemd peut avoir des conséquences dramatiques sur le fonctionnement de votre ordinateur. \\ Il faut être très prudent lorsque l'on touche à la configuration de systemd. \\ __Une mauvaise manipulation peut rendre votre système instable__, jusqu'à le rendre totalement inutilisable.</note>
9 Mot inconnu : instable__ => <note warning>À la la lecture de l’introduction, il apparaît très clairement que toute modification malencontreuse de l'architecture des services lancés par Systemd peut avoir des conséquences dramatiques sur le fonctionnement de votre ordinateur. \\ Il faut être très prudent lorsque l'on touche à la configuration de systemd. \\ __Une mauvaise manipulation peut rendre votre système instable__, jusqu'à le rendre totalement inutilisable.</note>

10 Mot inconnu : systemd => <note warning>Des anciennes versions de Ubuntu propose dans les dépôts le paquet systemd et il est donc possible de l'installer en remplacement de Upstart. Néanmoins, cette manipulation est complexe et extrêmement risquée. Pour cette raison, cette procédure ne sera pas décrite ici.</note>
10 Mot inconnu : Upstart => <note warning>Des anciennes versions de Ubuntu propose dans les dépôts le paquet systemd et il est donc possible de l'installer en remplacement de Upstart. Néanmoins, cette manipulation est complexe et extrêmement risquée. Pour cette raison, cette procédure ne sera pas décrite ici.</note>

12 Mot inconnu : Upstart => Il a été développé dans le but de mieux appréhender la gestion d'un système multitâches, notamment en matière de dépendance entre les différents services lancés au démarrage avec pour objectif principal l'optimisation des performances système.\\ Son rôle est plus étendu que [[:Upstart]], il gère également le [[:montage]] des différents [[:systeme_de_fichiers|systèmes de fichier]] et introduit un nouveau système de log appelé "The Journal".\\
12 Mot inconnu : systeme_de_fichiers => Il a été développé dans le but de mieux appréhender la gestion d'un système multitâches, notamment en matière de dépendance entre les différents services lancés au démarrage avec pour objectif principal l'optimisation des performances système.\\ Son rôle est plus étendu que [[:Upstart]], il gère également le [[:montage]] des différents [[:systeme_de_fichiers|systèmes de fichier]] et introduit un nouveau système de log appelé "The Journal".\\
12 Guillemets typographiques ouvrants. => Il a été développé dans le but de mieux appréhender la gestion d'un système multitâches, notamment en matière de dépendance entre les différents services lancés au démarrage avec pour objectif principal l'optimisation des performances système.\\ Son rôle est plus étendu que [[:Upstart]], il gère également le [[:montage]] des différents [[:systeme_de_fichiers|systèmes de fichier]] et introduit un nouveau système de log appelé "The Journal".\\
12 Mot inconnu : The => Il a été développé dans le but de mieux appréhender la gestion d'un système multitâches, notamment en matière de dépendance entre les différents services lancés au démarrage avec pour objectif principal l'optimisation des performances système.\\ Son rôle est plus étendu que [[:Upstart]], il gère également le [[:montage]] des différents [[:systeme_de_fichiers|systèmes de fichier]] et introduit un nouveau système de log appelé "The Journal".\\
12 Guillemets typographiques fermants. => Il a été développé dans le but de mieux appréhender la gestion d'un système multitâches, notamment en matière de dépendance entre les différents services lancés au démarrage avec pour objectif principal l'optimisation des performances système.\\ Son rôle est plus étendu que [[:Upstart]], il gère également le [[:montage]] des différents [[:systeme_de_fichiers|systèmes de fichier]] et introduit un nouveau système de log appelé "The Journal".\\

14 Mot inconnu : target => Il introduit la notion d'unité. Une unité représente un fichier de configuration. Entre autres, une unité peut être un service (*.service), un target (*.target), un montage (*.mount), un socket (*.socket)… \\
14 Mot inconnu : target => Il introduit la notion d'unité. Une unité représente un fichier de configuration. Entre autres, une unité peut être un service (*.service), un target (*.target), un montage (*.mount), un socket (*.socket)… \\
14 Mot inconnu : mount => Il introduit la notion d'unité. Une unité représente un fichier de configuration. Entre autres, une unité peut être un service (*.service), un target (*.target), un montage (*.mount), un socket (*.socket)… \\

15 Mot inconnu : targets => C'est donc un sujet très vaste et nous allons donc nous concentrer dans ce wiki sur les aspects basiques des [[:services]], des targets et du journal.

18 Mot inconnu : daemon => Un [[:services|service]] ou daemon est un programme qui tourne en arrière plan et s'active sous certaine condition. Par exemple, le service hddtemp surveille la température de vos disques dur et déclanche une alerte si elle dépasse un certain seuil.\\
18 Mot inconnu : hddtemp => Un [[:services|service]] ou daemon est un programme qui tourne en arrière plan et s'active sous certaine condition. Par exemple, le service hddtemp surveille la température de vos disques dur et déclanche une alerte si elle dépasse un certain seuil.\\
18 Mot inconnu : déclanche => Un [[:services|service]] ou daemon est un programme qui tourne en arrière plan et s'active sous certaine condition. Par exemple, le service hddtemp surveille la température de vos disques dur et déclanche une alerte si elle dépasse un certain seuil.\\

20 Mot inconnu : systemd => L'outil de gestion des [[:services]] (et des autres unités d'ailleurs) dans systemd s'appelle **systemctl**.\\
20 Mot inconnu : systemctl => L'outil de gestion des [[:services]] (et des autres unités d'ailleurs) dans systemd s'appelle **systemctl**.\\

22 Mot inconnu : systemctl => <code>systemctl ACTION <Nom_du_service>.service</code>

23 Espace(s) en fin de ligne à supprimer. => Où  

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ACTION sera la commande que l'on souhaite appliquer à la dite unité:
24 Ce déterminant est soudé. =>   * ACTION sera la commande que l'on souhaite appliquer à la dite unité:
24 Il manque un espace insécable. =>   * ACTION sera la commande que l'on souhaite appliquer à la dite unité:

25 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * // start // : démarrer le service
25 Mot inconnu : start =>       * // start // : démarrer le service
25 Il manque un espace insécable. =>       * // start // : démarrer le service

26 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * // stop // : arrêter le service
26 Il manque un espace insécable. =>       * // stop // : arrêter le service

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * // restart // : relancer le service
27 Mot inconnu : restart =>       * // restart // : relancer le service
27 Il manque un espace insécable. =>       * // restart // : relancer le service

28 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * // reload // : recharger le service
28 Mot inconnu : reload =>       * // reload // : recharger le service
28 Il manque un espace insécable. =>       * // reload // : recharger le service

29 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       * // status // : connaitre l'état du service
29 Il manque un espace insécable. =>       * // status // : connaitre l'état du service

30 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * <Nom_du_service> est le nom du service visé.

31 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

32 Espace(s) en fin de ligne à supprimer. => Quelle que soit l'action menée sur un service, au prochain démarrage de la machine celui-ci devrait retrouver le status qui lui a été [[#Modifier l'exécution d'un service|défini par défaut]]. 

33 Mot inconnu : sudo => <note>Il n'est pas nécessaire d'utiliser sudo devant ces commandes. Systemctl vous demandera votre mot de passe root en cas de besoin (presque à chaque fois, donc)</note>
33 Mot inconnu : Systemctl => <note>Il n'est pas nécessaire d'utiliser sudo devant ces commandes. Systemctl vous demandera votre mot de passe root en cas de besoin (presque à chaque fois, donc)</note>
33 Mot inconnu : root => <note>Il n'est pas nécessaire d'utiliser sudo devant ces commandes. Systemctl vous demandera votre mot de passe root en cas de besoin (presque à chaque fois, donc)</note>

37 Mot inconnu : systemctl => <code>systemctl status ssh.service</code>donnera l'état du service [[:ssh]], son PID et les dernières lignes de son fichier de log. 
37 Mot inconnu : ssh => <code>systemctl status ssh.service</code>donnera l'état du service [[:ssh]], son PID et les dernières lignes de son fichier de log. 
37 Il manque un espace. => <code>systemctl status ssh.service</code>donnera l'état du service [[:ssh]], son PID et les dernières lignes de son fichier de log. 
37 Mot inconnu : ssh => <code>systemctl status ssh.service</code>donnera l'état du service [[:ssh]], son PID et les dernières lignes de son fichier de log. 
37 Mot inconnu : PID => <code>systemctl status ssh.service</code>donnera l'état du service [[:ssh]], son PID et les dernières lignes de son fichier de log. 
37 Espace(s) en fin de ligne à supprimer. => <code>systemctl status ssh.service</code>donnera l'état du service [[:ssh]], son PID et les dernières lignes de son fichier de log. 

38 Mot inconnu : systemctl => <code>systemctl stop ufw.service</code> arrêtera le service [[:ufw]], Uncomplicated Firewall,
38 Mot inconnu : ufw => <code>systemctl stop ufw.service</code> arrêtera le service [[:ufw]], Uncomplicated Firewall,
38 Il manque un espace. => <code>systemctl stop ufw.service</code> arrêtera le service [[:ufw]], Uncomplicated Firewall,
38 Mot inconnu : ufw => <code>systemctl stop ufw.service</code> arrêtera le service [[:ufw]], Uncomplicated Firewall,
38 Mot inconnu : Uncomplicated => <code>systemctl stop ufw.service</code> arrêtera le service [[:ufw]], Uncomplicated Firewall,
38 Mot inconnu : Firewall => <code>systemctl stop ufw.service</code> arrêtera le service [[:ufw]], Uncomplicated Firewall,

39 Mot inconnu : systemctl => <code>systemctl restart lightdm.service</code> relancera le serveur graphique.\\
39 Mot inconnu : restart => <code>systemctl restart lightdm.service</code> relancera le serveur graphique.\\
39 Mot inconnu : lightdm => <code>systemctl restart lightdm.service</code> relancera le serveur graphique.\\
39 Il manque un espace. => <code>systemctl restart lightdm.service</code> relancera le serveur graphique.\\

41 Mot inconnu : script_sysV => <note tip>Afin de conserver une compatibilité avec les anciens [[:script_sysV|scripts system V]], des liens vers les commandes principales de systemctl sont installés par défaut. Il s'agit de //start//,// stop//,// restart //et //status//.\\
41 Mot inconnu : system => <note tip>Afin de conserver une compatibilité avec les anciens [[:script_sysV|scripts system V]], des liens vers les commandes principales de systemctl sont installés par défaut. Il s'agit de //start//,// stop//,// restart //et //status//.\\
41 Mot inconnu : systemctl => <note tip>Afin de conserver une compatibilité avec les anciens [[:script_sysV|scripts system V]], des liens vers les commandes principales de systemctl sont installés par défaut. Il s'agit de //start//,// stop//,// restart //et //status//.\\
41 Mot inconnu : start => <note tip>Afin de conserver une compatibilité avec les anciens [[:script_sysV|scripts system V]], des liens vers les commandes principales de systemctl sont installés par défaut. Il s'agit de //start//,// stop//,// restart //et //status//.\\
41 Mot inconnu : restart => <note tip>Afin de conserver une compatibilité avec les anciens [[:script_sysV|scripts system V]], des liens vers les commandes principales de systemctl sont installés par défaut. Il s'agit de //start//,// stop//,// restart //et //status//.\\

42 Mot inconnu : sudo => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\
42 Mot inconnu : restart => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\
42 Mot inconnu : lightdm => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\
42 Mot inconnu : systelctl => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\
42 Mot inconnu : restart => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\
42 Mot inconnu : lightdm => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\
42 Il manque un espace. => Par exemple **sudo restart lightdm** est équivalent à **systelctl restart lightdm.service**.\\

43 Mot inconnu : systemctl => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>
43 Mot inconnu : automount => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>
43 Mot inconnu : restart => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>
43 Mot inconnu : systelctl => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>
43 Mot inconnu : restart => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>
43 Mot inconnu : automount => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>
43 Il manque un espace. => L'outil **service** est également branché sur systemctl. **service automount restart** est équivalent à **systelctl restart automount.service**</note>

48 Il manque un espace insécable. => Pour obtenir la liste triée des services accompagnés de leur état, saisissez dans un [[:terminal]] :

49 Mot inconnu : systemctl => <code>systemctl list-unit-files | grep service | sort </code>
49 Mot inconnu : list-unit-files => <code>systemctl list-unit-files | grep service | sort </code>
49 Mot inconnu : grep => <code>systemctl list-unit-files | grep service | sort </code>

51 Il manque un espace insécable. => Vous pouvez également obtenir la liste des services lancés au démarrage, triés selon leur temps d’exécution :

52 Mot inconnu : systemd-analyze => <code>systemd-analyze blame</code>
52 Mot inconnu : blame => <code>systemd-analyze blame</code>

53 Confusion probable : « peut-être » signifie « possiblement ». => Cela peut-être pratique pour trouver le service qui ralenti votre démarrage.
53 Confusion probable entre participe passé et forme verbale conjuguée. => Cela peut-être pratique pour trouver le service qui ralenti votre démarrage.

57 Mot inconnu : desactiver => Pour desactiver un service, il faut taper :
57 Il manque un espace insécable. => Pour desactiver un service, il faut taper :

58 Mot inconnu : systemctl => <code>systemctl disable <Nom_du_service>.service</code>
58 Mot inconnu : disable => <code>systemctl disable <Nom_du_service>.service</code>

59 Mot inconnu : redemarrage => Ainsi, au prochain redemarrage du système, le service correspondant ne sera plus lancé.\\

61 Confusion probable : “sont” est le verbe “être” à la 3ᵉ personne du pluriel. Pour le déterminant, écrivez “son”. => Pour activer un service ou relire sont fichier de configuration, il faut taper:
61 Accord avec la forme verbale “sont” : “fichier” devrait être au pluriel. => Pour activer un service ou relire sont fichier de configuration, il faut taper:
61 Il manque un espace insécable. => Pour activer un service ou relire sont fichier de configuration, il faut taper:

62 Mot inconnu : systemctl => <code>systemctl enable <Nom_du_service>.service</code>
62 Mot inconnu : enable => <code>systemctl enable <Nom_du_service>.service</code>

64 Il manque un espace. => Néanmoins si vous souhaitez modifier l'état d'un service selon certaines conditions, vous devrez [[:tutoriel:comment_modifier_un_fichier|modifier ou créer le fichier]] **/etc/systemd/system/<nom_du_service>.service**. Les fichiers de configuration par défaut se trouvent dans **/lib/systemd/system/**\\
64 Mot inconnu : comment_modifier_un_fichier => Néanmoins si vous souhaitez modifier l'état d'un service selon certaines conditions, vous devrez [[:tutoriel:comment_modifier_un_fichier|modifier ou créer le fichier]] **/etc/systemd/system/<nom_du_service>.service**. Les fichiers de configuration par défaut se trouvent dans **/lib/systemd/system/**\\

67 Mot inconnu : syncthing => Si vous souhaitez désactiver la [[:synchronisation]] des fichiers [[:syncthing]] de l'utilisateur toto, dans un [[:terminal]] saisissez:
67 Il manque un espace insécable. => Si vous souhaitez désactiver la [[:synchronisation]] des fichiers [[:syncthing]] de l'utilisateur toto, dans un [[:terminal]] saisissez:

68 Mot inconnu : systemctl => <code>systemctl disable syncthing@toto.service</code>
68 Mot inconnu : disable => <code>systemctl disable syncthing@toto.service</code>

69 Il manque un espace insécable. => Pour réactiver le service, il faudra faire la manipulation inverse:

70 Mot inconnu : systemctl => <code>systemctl enable syncthing@toto.service</code>
70 Mot inconnu : enable => <code>systemctl enable syncthing@toto.service</code>

74 Mot inconnu : systemadm => Il existe un utilitaire graphique qui se nomme **systemadm** pour gérer systemd.\\
74 Mot inconnu : systemd => Il existe un utilitaire graphique qui se nomme **systemadm** pour gérer systemd.\\

75 Il manque un espace. => [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>systemd-ui|systemd-ui]]**
75 Mot inconnu : comment_installer_un_paquet => [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>systemd-ui|systemd-ui]]**
75 Mot inconnu : apt => [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>systemd-ui|systemd-ui]]**
75 Mot inconnu : systemd-ui => [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>systemd-ui|systemd-ui]]**
75 Mot inconnu : systemd-ui => [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>systemd-ui|systemd-ui]]**

76 Mot inconnu : Systemd => ==== Personnaliser un fichier de configuration Systemd====

77 Mot inconnu : Upstart => Comme [[:Upstart]], systemd utilise des fichiers de configuration correspondant aux différents services à manipuler.\\
77 Mot inconnu : systemd => Comme [[:Upstart]], systemd utilise des fichiers de configuration correspondant aux différents services à manipuler.\\

81 Il manque un espace insécable. => Dans un [[:terminal]] saisissez:

82 Mot inconnu : sudo => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
82 Mot inconnu : cp => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
82 Il manque un espace à côté du tiret. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
82 Il manque un espace. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
82 Il manque un espace. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>
82 Il manque un espace. => <code>sudo cp -r /etc/systemd/system /etc/systemd/system.save$(date +%Y%m%d)</code></note>

84 Mot inconnu : Systemd => Systemd defini differents types de services :
84 Mot inconnu : defini => Systemd defini differents types de services :
84 Mot inconnu : differents => Systemd defini differents types de services :
84 Il manque un espace insécable. => Systemd defini differents types de services :

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autre processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".
85 Mot inconnu : systemd =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autre processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".
85 Guillemets typographiques ouvrants. =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autre processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".
85 Guillemets typographiques fermants. =>   *  Un service de type **simple** (type par défaut) lance un processus principal. Dans le cas où ce processus offre une fonctionnalité à d'autre processus sur le système, ses canaux de communication doivent être installés avant que le processus principal soit démarré. Ce qui est rendu possible par l'activation des sockets, et autres canaux de communication. Ainsi, systemd peut traiter les autres unités sans se préoccuper de la fin du lancement d'une unité de type "simple".

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **forking**, lance un processus père qui créera un processus fils dans le cadre de son démarrage. Le processus parent est prévu pour s’arrêter une fois le démarrage complet et que tous les canaux de communication sont mis en place. Le processus fils continue à fonctionner en tant que le processus principal du service. systemd poursuit le traitement des autres unités une fois que le processus père se termine. **Ce type de service correspond aux services UNIX traditionnels.**
86 Mot inconnu : forking =>   * Un service de type **forking**, lance un processus père qui créera un processus fils dans le cadre de son démarrage. Le processus parent est prévu pour s’arrêter une fois le démarrage complet et que tous les canaux de communication sont mis en place. Le processus fils continue à fonctionner en tant que le processus principal du service. systemd poursuit le traitement des autres unités une fois que le processus père se termine. **Ce type de service correspond aux services UNIX traditionnels.**
86 Mot inconnu : systemd =>   * Un service de type **forking**, lance un processus père qui créera un processus fils dans le cadre de son démarrage. Le processus parent est prévu pour s’arrêter une fois le démarrage complet et que tous les canaux de communication sont mis en place. Le processus fils continue à fonctionner en tant que le processus principal du service. systemd poursuit le traitement des autres unités une fois que le processus père se termine. **Ce type de service correspond aux services UNIX traditionnels.**

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : oneshot =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : systemd =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : init =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : system =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : systemd =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : systemd =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : init =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.
87 Mot inconnu : SysVinit =>   * Un service de type **oneshot** est similaire à un service de type **simple**. Cependant, systemd attend que le processus se termine avant de continuer ses traitements. **Ce type de service est typiquement utilisé comme équivalent aux commandes lancées au démarrage via les scripts d'init system V**. Cela permet à systemd de remplacer ce mécanisme. De ce fait, avec systemd des nouveaux services apparaissent, alors qu'ils auraient été simplement des scripts d'init avec SysVinit.

88 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **dbus** est similaire à un service de type **simple**. Cependant, le processus du service doit obtenir un nom via D-Bus. systemd pourra alors traiter les autres unités.
88 Mot inconnu : dbus =>   * Un service de type **dbus** est similaire à un service de type **simple**. Cependant, le processus du service doit obtenir un nom via D-Bus. systemd pourra alors traiter les autres unités.
88 Mot inconnu : systemd =>   * Un service de type **dbus** est similaire à un service de type **simple**. Cependant, le processus du service doit obtenir un nom via D-Bus. systemd pourra alors traiter les autres unités.

89 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.
89 Mot inconnu : notify =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.
89 Mot inconnu : systemd =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.
89 Mot inconnu : sd_notfy =>   * Un service de type **notify** est similaire à un service de type **simple**. Cependant, c'est le processus du service qui avertira systemd (via la fonction sd_notfy(3)) qu'il peut traiter les autres unités.

91 Guillemets typographiques ouvrants. => ===Exemple de service de type "oneshot"===
91 Mot inconnu : oneshot => ===Exemple de service de type "oneshot"===
91 Guillemets typographiques fermants. => ===Exemple de service de type "oneshot"===

92 Mot inconnu : iptables => Un exemple est le service iptables. Voici un extrait de son fichier de configuration :
92 Il manque un espace insécable. => Un exemple est le service iptables. Voici un extrait de son fichier de configuration :

96 Mot inconnu : oneshot => Type=oneshot

97 Mot inconnu : RemainAfterExit => RemainAfterExit=yes
97 Mot inconnu : yes => RemainAfterExit=yes

98 Mot inconnu : ExecStart => ExecStart=/usr/libexec/iptables.init start
98 Mot inconnu : start => ExecStart=/usr/libexec/iptables.init start

99 Mot inconnu : ExecStop => ExecStop=/usr/libexec/iptables.init stop 
99 Espace(s) en fin de ligne à supprimer. => ExecStop=/usr/libexec/iptables.init stop 

102 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
102 Guillemets typographiques ouvrants. =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
102 Mot inconnu : ExecStart =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
102 Guillemets typographiques fermants. =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.
102 Erreur d’accord probable avec « les types ». =>   * ''ExecStart'' permet d'indiquer la commande à exécuter au lancement du service. Ce paramètre est obligatoire pour tout les types de service.

103 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
103 Guillemets typographiques ouvrants. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
103 Mot inconnu : ExecStop =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
103 Guillemets typographiques fermants. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
103 Confusion probable : “a” est la conjugaison du verbe “avoir”. Utilisez la préposition “à”. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.
103 Incohérence probable avec “a” : “exécuter” n’est pas un participe passé. =>   * ''ExecStop'' permet d'indiquer une commande a exécuter pour arrêter le service. Ce paramètre est facultatif.

104 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Guillemets typographiques ouvrants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Mot inconnu : RemainAfterExit =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Guillemets typographiques fermants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Guillemets typographiques ouvrants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Mot inconnu : yes =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Guillemets typographiques fermants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Mot inconnu : ExecStart =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Guillemets typographiques ouvrants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Mot inconnu : oneshot =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Guillemets typographiques fermants. =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.
104 Mot inconnu : ExecStart =>   * ''RemainAfterExit'' à la valeur "yes" permet d'indiquer que quand la commande de lancement (ExecStart) est terminée, le service est considéré comme toujours lancé. Ce paramètre est très utile pour les services de type "oneshot" qui exécutent une commande à leur lancement (ExecStart) sans qu'il y ait un processus spécifique qui reste en exécution.

106 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 S’il s’agit de la préposition « à », il faut accentuer la majuscule. =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Mot inconnu : start =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Mot inconnu : iptables =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Mot inconnu : iptables =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Accord de nombre erroné : « modules » est au pluriel. =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Accord de nombre erroné : « modules » devrait être au singulier. =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Mot inconnu : netfilter =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.
106 Mot inconnu : linux =>   *  A son lancement, la commande /usr/libexec/iptables.init start est exécutée. Cette commande va permettre de charger des modules iptables et les règles iptables que le modules netfilter du noyau linux va prendre en compte.

107 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * A son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.
107 S’il s’agit de la préposition « à », il faut accentuer la majuscule. =>   * A son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.
107 Mot inconnu : iptables =>   * A son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.
107 Mot inconnu : iptables =>   * A son arrêt, la commande /usr/libexec/iptables.init stop est exécutée. Cette commande va permettre de remettre en place la politique de traitements iptables par défaut et de décharger les modules iptables.

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le service iptables continuera d'apparaitre comme actif après la fin de la commande /usr/libexec/iptables.init start et jusqu’à ce qu'il soit explicitement arrêté.
108 Mot inconnu : iptables =>   * Le service iptables continuera d'apparaitre comme actif après la fin de la commande /usr/libexec/iptables.init start et jusqu’à ce qu'il soit explicitement arrêté.
108 Mot inconnu : start =>   * Le service iptables continuera d'apparaitre comme actif après la fin de la commande /usr/libexec/iptables.init start et jusqu’à ce qu'il soit explicitement arrêté.

110 Guillemets typographiques ouvrants. => ===Exemple de service de type "simple"===
110 Guillemets typographiques fermants. => ===Exemple de service de type "simple"===

111 Mot inconnu : deluged => Un exemple est le service deluged qui permet de lancer le service correspondant à la version deamon du client bit-torrent [[:deluge]].
111 Mot inconnu : deamon => Un exemple est le service deluged qui permet de lancer le service correspondant à la version deamon du client bit-torrent [[:deluge]].
111 Mot inconnu : deluge => Un exemple est le service deluged qui permet de lancer le service correspondant à la version deamon du client bit-torrent [[:deluge]].

115 Mot inconnu : Deluge => Description=Deluge Bittorrent Client Daemon
115 Mot inconnu : Bittorrent => Description=Deluge Bittorrent Client Daemon
115 Mot inconnu : Daemon => Description=Deluge Bittorrent Client Daemon

116 Mot inconnu : network-online => After=network-online.target
116 Mot inconnu : target => After=network-online.target

121 Mot inconnu : deluge => User=deluge

122 Mot inconnu : Group => Group=deluge
122 Mot inconnu : deluge => Group=deluge

123 Mot inconnu : UMask => UMask=007

125 Mot inconnu : ExecStart => ExecStart=/usr/bin/deluged -d
125 Il manque un espace à côté du tiret. => ExecStart=/usr/bin/deluged -d

127 Mot inconnu : Restart => Restart=on-failure
127 Mot inconnu : on-failure => Restart=on-failure

129 S’il s’agit d’un impératif, pas de “s”. => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : the => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : time => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : to => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : wait => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : before => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : is => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : stopped => # Configures the time to wait before service is stopped forcefully.
129 Mot inconnu : forcefully => # Configures the time to wait before service is stopped forcefully.

130 Mot inconnu : TimeoutStopSec => TimeoutStopSec=300

132 Mot inconnu : Install => [Install]

133 Mot inconnu : WantedBy => WantedBy=multi-user.target
133 Mot inconnu : target => WantedBy=multi-user.target

134 Espace(s) en fin de ligne à supprimer. => </file> 

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
136 Guillemets typographiques ouvrants. =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
136 Guillemets typographiques fermants. =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
136 Guillemets typographiques ouvrants. =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''
136 Mot inconnu : systemctl =>   * ''Description'' permet de donner une description du service qui apparaîtra lors de l'utilisation de la commande ''systemctl status <nom_du_service>''

137 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. FIXME **à vérifier :** Si l'accès à Internet est perdu, le service est arrêté automatiquement.\\
137 Guillemets typographiques ouvrants. =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. FIXME **à vérifier :** Si l'accès à Internet est perdu, le service est arrêté automatiquement.\\
137 Guillemets typographiques fermants. =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. FIXME **à vérifier :** Si l'accès à Internet est perdu, le service est arrêté automatiquement.\\
137 Mot inconnu : daemon =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. FIXME **à vérifier :** Si l'accès à Internet est perdu, le service est arrêté automatiquement.\\
137 Mot inconnu : FIXME =>   * ''After'' permet d'indiquer quel pré-requis est nécessaire pour le fonctionnement du service. Ici, on indique qu'il faut attendre que l'ordinateur ait accès à Internet pour lancer le daemon. FIXME **à vérifier :** Si l'accès à Internet est perdu, le service est arrêté automatiquement.\\

138 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Type'' permet de specifier le type de service
138 Guillemets typographiques ouvrants. =>   * ''Type'' permet de specifier le type de service
138 Guillemets typographiques fermants. =>   * ''Type'' permet de specifier le type de service
138 Mot inconnu : specifier =>   * ''Type'' permet de specifier le type de service

139 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Mot inconnu : Group =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Mot inconnu : Umask =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Mot inconnu : propriaitaire =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Mot inconnu : Ecriture =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Mot inconnu : Deluge =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques ouvrants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Mot inconnu : Deluge =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.
139 Guillemets typographiques fermants. =>   * ''User'', ''Group'' et ''Umask'' permet d'identifier qui est le propriaitaire du processus et donc les attributs des fichiers téléchargés. Ici, les fichiers téléchargés seront accessibles en Lecture/Ecriture à l'utilisateur ''Deluge'' et aux membres du groupe ''Deluge'' et invisibles aux autres utilisateurs du système.

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.
140 Guillemets typographiques ouvrants. =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.
140 Mot inconnu : Restart =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.
140 Guillemets typographiques fermants. =>   * ''Restart'' permet de relancer le service automatiquement en cas de plantage.

141 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Guillemets typographiques ouvrants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Mot inconnu : WantedBy =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Guillemets typographiques fermants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Mot inconnu : Target =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Guillemets typographiques ouvrants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Mot inconnu : target =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Guillemets typographiques fermants. =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5
141 Mot inconnu : Runlevels =>   * ''WantedBy'' permet de spécifier dans quel Target doit être actif le service. Ici, en spécifiant ''multi-user.target'', le service est actif dans les Runlevels 2, 3, 4 et 5

145 Mot inconnu : creer => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Guillemets typographiques ouvrants. => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Mot inconnu : getty => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Guillemets typographiques fermants. => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Guillemets typographiques ouvrants. => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Guillemets typographiques ouvrants. => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Mot inconnu : tty => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Mot inconnu : syncthing => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Mot inconnu : syncthing => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Mot inconnu : Gerard => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Mot inconnu : Milou => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :
145 Il manque un espace insécable. => Il est possible de creer plusieurs services à partir d'un même modèle. Par exemple, la gestion des consoles est gérée par un seul modèle ''getty@.service'' qui est décliné en ''getty@tty1.service'', ''getty@tty2.service'', etc pour chacune des consoles tty de votre machine. On peut aussi imaginer des services où chaque instance correspond à un utilisateur de la machine. Par exemple, on peut lancer le service syncthing@.service pour synchroniser en parallèle avec [[:syncthing]] les fichiers de Toto, Gerard et Milou :

149 Mot inconnu : Syncthing => Description=Syncthing - Open Source Continuous File Synchronization for %I
149 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Description=Syncthing - Open Source Continuous File Synchronization for %I
149 Mot inconnu : Continuous => Description=Syncthing - Open Source Continuous File Synchronization for %I
149 Mot inconnu : Synchronization => Description=Syncthing - Open Source Continuous File Synchronization for %I
149 Il manque un espace. => Description=Syncthing - Open Source Continuous File Synchronization for %I

150 Il manque un espace. => Documentation=man:syncthing(1)
150 Mot inconnu : syncthing => Documentation=man:syncthing(1)

151 Mot inconnu : network => After=network.target
151 Mot inconnu : target => After=network.target

152 Mot inconnu : Wants => Wants=syncthing-inotify@.service
152 Mot inconnu : syncthing-inotify => Wants=syncthing-inotify@.service

155 Il manque un espace. => User=%i

156 Mot inconnu : ExecStart => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
156 Il manque un espace à côté du tiret. => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
156 Mot inconnu : no-browser => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
156 Mot inconnu : no-restart => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0
156 Mot inconnu : logflags => ExecStart=/usr/bin/syncthing -no-browser -no-restart -logflags=0

157 Mot inconnu : Restart => Restart=on-failure
157 Mot inconnu : on-failure => Restart=on-failure

158 Mot inconnu : SuccessExitStatus => SuccessExitStatus=3 4

159 Mot inconnu : RestartForceExitStatus => RestartForceExitStatus=3 4

160 Mot inconnu : UMask => UMask=0002

162 Mot inconnu : Install => [Install]

163 Mot inconnu : WantedBy => WantedBy=multi-user.target
163 Mot inconnu : target => WantedBy=multi-user.target

166 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:
166 Guillemets typographiques ouvrants. =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:
166 Mot inconnu : Wants =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:
166 Guillemets typographiques fermants. =>   * ''Wants'' permet de spécifier une dépendance. Pour connaître les dépendances d'une unité, tapez dans un [[:terminal]]:

167 Mot inconnu : systemctl => <code>systemctl list-dependencies [<unit>] </code>
167 Mot inconnu : list-dependencies => <code>systemctl list-dependencies [<unit>] </code>

168 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Guillemets typographiques ouvrants. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Guillemets typographiques fermants. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Il manque un espace. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Guillemets typographiques fermants. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Erreur d’accord probable avec “les”. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Mot inconnu : Gerard =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Mot inconnu : Milou =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :
168 Il manque un espace insécable. =>   * Ici, le ''User'' est ''%i'', soit l'argument qui est passé lors de l'activation du service. Pour créer toute les instances du service pour Toto, Gerard et Milou, il faudra avoir tapé une fois :

169 Mot inconnu : systemctl => <code>systemctl enable syncthing@Toto.service
169 Mot inconnu : enable => <code>systemctl enable syncthing@Toto.service

170 Mot inconnu : systemctl => systemctl enable syncthing@Gerard.service
170 Mot inconnu : enable => systemctl enable syncthing@Gerard.service

171 Mot inconnu : systemctl => systemctl enable syncthing@Milou.service
171 Mot inconnu : enable => systemctl enable syncthing@Milou.service

175 Mot inconnu : targets => ===== Les targets =====

176 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

177 Mot inconnu : Systemd => Systemd introduit la notion de target au sein de ses unités. Une target permet de regrouper dans un seul paquet plusieurs autres unités et de retrouver la notion de runlevel ([[:script_sysV|des scripts system V]]).\\
177 Mot inconnu : target => Systemd introduit la notion de target au sein de ses unités. Une target permet de regrouper dans un seul paquet plusieurs autres unités et de retrouver la notion de runlevel ([[:script_sysV|des scripts system V]]).\\
177 Mot inconnu : target => Systemd introduit la notion de target au sein de ses unités. Une target permet de regrouper dans un seul paquet plusieurs autres unités et de retrouver la notion de runlevel ([[:script_sysV|des scripts system V]]).\\
177 Mot inconnu : runlevel => Systemd introduit la notion de target au sein de ses unités. Une target permet de regrouper dans un seul paquet plusieurs autres unités et de retrouver la notion de runlevel ([[:script_sysV|des scripts system V]]).\\
177 Mot inconnu : script_sysV => Systemd introduit la notion de target au sein de ses unités. Une target permet de regrouper dans un seul paquet plusieurs autres unités et de retrouver la notion de runlevel ([[:script_sysV|des scripts system V]]).\\
177 Mot inconnu : system => Systemd introduit la notion de target au sein de ses unités. Une target permet de regrouper dans un seul paquet plusieurs autres unités et de retrouver la notion de runlevel ([[:script_sysV|des scripts system V]]).\\

181 Mot inconnu : Runlevel => ^ Runlevel 	^ Systemd Target 								^ Notes 										^
181 Incohérence : espace et tabulation. => ^ Runlevel 	^ Systemd Target 								^ Notes 										^
181 Mot inconnu : Systemd => ^ Runlevel 	^ Systemd Target 								^ Notes 										^
181 Mot inconnu : Target => ^ Runlevel 	^ Systemd Target 								^ Notes 										^
181 Incohérence : espace et tabulation. => ^ Runlevel 	^ Systemd Target 								^ Notes 										^
181 Incohérence : espace et tabulation. => ^ Runlevel 	^ Systemd Target 								^ Notes 										^

182 Mot inconnu : runlevel0 => ^       0		| runlevel0.target, poweroff.target 					| Arrête le système 								|
182 Mot inconnu : target => ^       0		| runlevel0.target, poweroff.target 					| Arrête le système 								|
182 Mot inconnu : poweroff => ^       0		| runlevel0.target, poweroff.target 					| Arrête le système 								|
182 Mot inconnu : target => ^       0		| runlevel0.target, poweroff.target 					| Arrête le système 								|
182 Incohérence : espace et tabulation. => ^       0		| runlevel0.target, poweroff.target 					| Arrête le système 								|
182 Incohérence : espace et tabulation. => ^       0		| runlevel0.target, poweroff.target 					| Arrête le système 								|

183 Incohérence : espace et tabulation. => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Incohérence : espace et tabulation. => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Mot inconnu : runlevel1 => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Mot inconnu : target => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Mot inconnu : rescue => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Mot inconnu : target => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Incohérence : espace et tabulation. => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|
183 Incohérence : espace et tabulation. => ^ 	1 		| runlevel1.target, rescue.target 					| Mode single user 								|

184 Incohérence : espace et tabulation. => ^ 	3 		| runlevel3.target, multi-user.target 					| Mode multi-utilisateur, non graphique				|
184 Incohérence : espace et tabulation. => ^ 	3 		| runlevel3.target, multi-user.target 					| Mode multi-utilisateur, non graphique				|
184 Mot inconnu : runlevel3 => ^ 	3 		| runlevel3.target, multi-user.target 					| Mode multi-utilisateur, non graphique				|
184 Mot inconnu : target => ^ 	3 		| runlevel3.target, multi-user.target 					| Mode multi-utilisateur, non graphique				|
184 Mot inconnu : target => ^ 	3 		| runlevel3.target, multi-user.target 					| Mode multi-utilisateur, non graphique				|
184 Incohérence : espace et tabulation. => ^ 	3 		| runlevel3.target, multi-user.target 					| Mode multi-utilisateur, non graphique				|

185 Incohérence : espace et tabulation. => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Incohérence : espace et tabulation. => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Mot inconnu : runlevel2 => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Mot inconnu : target => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Mot inconnu : runlevel4 => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Mot inconnu : target => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Mot inconnu : target => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|
185 Incohérence : espace et tabulation. => ^ 	2, 4 		| runlevel2.target, runlevel4.target, multi-user.target 	| Mode défini par l'utilisateur, identique au 3 par défaut.	|

186 Incohérence : espace et tabulation. => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Incohérence : espace et tabulation. => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Mot inconnu : runlevel5 => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Mot inconnu : target => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Mot inconnu : graphical => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Mot inconnu : target => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Incohérence : espace et tabulation. => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|
186 Incohérence : espace et tabulation. => ^ 	5 		| runlevel5.target, graphical.target 					| Mode graphique multi-utilisateur 					|

187 Incohérence : espace et tabulation. => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|
187 Incohérence : espace et tabulation. => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|
187 Mot inconnu : runlevel6 => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|
187 Mot inconnu : target => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|
187 Mot inconnu : reboot => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|
187 Mot inconnu : target => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|
187 Incohérence : espace et tabulation. => ^ 	6 		| runlevel6.target, reboot.target 					| Redémarre									|

188 Mot inconnu : emergency => ^  emergency 	| emergency.target 								| Shell d'urgence 								|
188 Incohérence : espace et tabulation. => ^  emergency 	| emergency.target 								| Shell d'urgence 								|
188 Mot inconnu : emergency => ^  emergency 	| emergency.target 								| Shell d'urgence 								|
188 Mot inconnu : target => ^  emergency 	| emergency.target 								| Shell d'urgence 								|
188 Incohérence : espace et tabulation. => ^  emergency 	| emergency.target 								| Shell d'urgence 								|
188 Incohérence : espace et tabulation. => ^  emergency 	| emergency.target 								| Shell d'urgence 								|

191 Mot inconnu : target => Pour changer de target, on utilise la commande **isolate** de **systemctl**. Par exemple, pour passer en mode multi-utilisateur non graphique, il faut taper dans un [[:terminal]]:
191 Mot inconnu : isolate => Pour changer de target, on utilise la commande **isolate** de **systemctl**. Par exemple, pour passer en mode multi-utilisateur non graphique, il faut taper dans un [[:terminal]]:
191 Mot inconnu : systemctl => Pour changer de target, on utilise la commande **isolate** de **systemctl**. Par exemple, pour passer en mode multi-utilisateur non graphique, il faut taper dans un [[:terminal]]:

192 Mot inconnu : systemctl => <code>systemctl isolate multi-user.target</code>
192 Mot inconnu : isolate => <code>systemctl isolate multi-user.target</code>
192 Mot inconnu : target => <code>systemctl isolate multi-user.target</code>

193 Il manque un espace insécable. => ou son équivalent selon le tableau ci-dessus :

194 Mot inconnu : systemctl => <code>systemctl isolate runlevel3.target</code>
194 Mot inconnu : isolate => <code>systemctl isolate runlevel3.target</code>
194 Mot inconnu : runlevel3 => <code>systemctl isolate runlevel3.target</code>
194 Mot inconnu : target => <code>systemctl isolate runlevel3.target</code>

195 Mot inconnu : equivalent => ou son equivalent dans le [[:script_sysV|system V]]
195 Mot inconnu : script_sysV => ou son equivalent dans le [[:script_sysV|system V]]
195 Mot inconnu : system => ou son equivalent dans le [[:script_sysV|system V]]

196 Mot inconnu : telinit => <code>telinit 3</code>

198 Mot inconnu : systemd => C'est donc systemd qui gère le démarrage, l’arrêt ou encore le redémarrage de l'ordinateur. En fait, lorsque vous tapez dans un [[:terminal]] :
198 Il manque un espace insécable. => C'est donc systemd qui gère le démarrage, l’arrêt ou encore le redémarrage de l'ordinateur. En fait, lorsque vous tapez dans un [[:terminal]] :

199 Mot inconnu : sudo => <code>sudo reboot</code>
199 Mot inconnu : reboot => <code>sudo reboot</code>

200 Il manque un espace insécable. => Vous appelez la commande:

201 Mot inconnu : sudo => <code>sudo systemctl reboot</code>
201 Mot inconnu : systemctl => <code>sudo systemctl reboot</code>
201 Mot inconnu : reboot => <code>sudo systemctl reboot</code>

203 S’il s’agit d’une action que le sujet peut accomplir, le verbe devrait être à l’infinitif. => Vous pouvez utilisez d'autre commande pour gérer l'état de votre ordinateur (dans l'ordre, éteindre / mettre en veille / hiberner) :
203 Il manque un espace insécable. => Vous pouvez utilisez d'autre commande pour gérer l'état de votre ordinateur (dans l'ordre, éteindre / mettre en veille / hiberner) :

205 Mot inconnu : systemctl => systemctl poweroff
205 Mot inconnu : poweroff => systemctl poweroff

206 Mot inconnu : systemctl => systemctl suspend

207 Mot inconnu : systemctl => systemctl hibernate
207 Mot inconnu : hibernate => systemctl hibernate

210 Mot inconnu : target => Enfin, vous pouvez définir le target par défaut au démarrage en tapant :
210 Il manque un espace insécable. => Enfin, vous pouvez définir le target par défaut au démarrage en tapant :

211 Mot inconnu : systemctl => <code>systemctl set-default -f multi-user.target</code>
211 Mot inconnu : set-default => <code>systemctl set-default -f multi-user.target</code>
211 Il manque un espace à côté du tiret. => <code>systemctl set-default -f multi-user.target</code>
211 Mot inconnu : target => <code>systemctl set-default -f multi-user.target</code>

214 Mot inconnu : targets => ====Infos sur les targets ====

215 Mot inconnu : targets => Pour connaitre la liste des targets configurés sur votre ordinateur, tapez dans un [[:terminal]] :
215 Il manque un espace insécable. => Pour connaitre la liste des targets configurés sur votre ordinateur, tapez dans un [[:terminal]] :

216 Mot inconnu : systemctl => <code>systemctl list-unit-files | grep target </code>
216 Mot inconnu : list-unit-files => <code>systemctl list-unit-files | grep target </code>
216 Mot inconnu : grep => <code>systemctl list-unit-files | grep target </code>
216 Mot inconnu : target => <code>systemctl list-unit-files | grep target </code>

218 Mot inconnu : target => Pour savoir quelles unités sont regroupés au sein d'une target, tapez :
218 Il manque un espace insécable. => Pour savoir quelles unités sont regroupés au sein d'une target, tapez :

219 Mot inconnu : systemctl => <code>systemctl show -p Wants -p Requires <target></code>
219 Il manque un espace à côté du tiret. => <code>systemctl show -p Wants -p Requires <target></code>
219 Mot inconnu : Wants => <code>systemctl show -p Wants -p Requires <target></code>
219 Il manque un espace à côté du tiret. => <code>systemctl show -p Wants -p Requires <target></code>
219 Mot inconnu : Requires => <code>systemctl show -p Wants -p Requires <target></code>

224 Mot inconnu : systemd => systemd possède son propre mécanisme de journalisation, appelé "The Journal".
224 Guillemets typographiques ouvrants. => systemd possède son propre mécanisme de journalisation, appelé "The Journal".
224 Mot inconnu : The => systemd possède son propre mécanisme de journalisation, appelé "The Journal".
224 Guillemets typographiques fermants. => systemd possède son propre mécanisme de journalisation, appelé "The Journal".

226 Il manque un espace insécable. => Pour accéder au log, tapez dans un [[:terminal]] :

227 Mot inconnu : journalctl => <code>journalctl</code>

229 Mot inconnu : PID => Pour une gestion plus fine, vous pouvez consulter les messages d'un seul service par son //nom//, son //PID// ou même son //exécutable// :
229 Il manque un espace insécable. => Pour une gestion plus fine, vous pouvez consulter les messages d'un seul service par son //nom//, son //PID// ou même son //exécutable// :

230 Mot inconnu : journalctl => <code>journalctl -u wicd
230 Il manque un espace à côté du tiret. => <code>journalctl -u wicd
230 Mot inconnu : wicd => <code>journalctl -u wicd

231 Mot inconnu : journalctl => journalctl _PID=1
231 Mot inconnu : _PID => journalctl _PID=1

232 Mot inconnu : journalctl => journalctl /usr/sbin/dhcpcd

235 Guillemets typographiques ouvrants. => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>
235 Guillemets typographiques fermants. => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>
235 Guillemets typographiques ouvrants. => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>
235 Mot inconnu : systemctl => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>
235 Mot inconnu : systemd => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>
235 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>
235 Mot inconnu : recents => <note tip>Lorsque vous consultez le ''status'' d'un service avec la commande ''systemctl status <nom_du_service>'', systemd vous affiches quelques lignes des logs les plus recents</note>

237 Mot inconnu : journalctl => journalctl permet aussi de filtrer par le niveau de log (tel que défini par syslog). Pour n'afficher que les erreurs :
237 Mot inconnu : syslog => journalctl permet aussi de filtrer par le niveau de log (tel que défini par syslog). Pour n'afficher que les erreurs :
237 Il manque un espace insécable. => journalctl permet aussi de filtrer par le niveau de log (tel que défini par syslog). Pour n'afficher que les erreurs :

239 Mot inconnu : journalctl => <code>journalctl -p err</code>
239 Il manque un espace à côté du tiret. => <code>journalctl -p err</code>
239 Mot inconnu : err => <code>journalctl -p err</code>

241 Mot inconnu : generés => Il existe un logiciel graphique nommé **Gnome-logs** pour lire les fichiers de log generés par systemd.
241 Mot inconnu : systemd => Il existe un logiciel graphique nommé **Gnome-logs** pour lire les fichiers de log generés par systemd.

242 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>gnome-logs|gnome-logs]]**
242 Il manque un espace. =>  [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>gnome-logs|gnome-logs]]**
242 Mot inconnu : comment_installer_un_paquet =>  [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>gnome-logs|gnome-logs]]**
242 Mot inconnu : apt =>  [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>gnome-logs|gnome-logs]]**

244 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[wpfr> https://fr.wikipedia.org/wiki/Systemd|systemd]] sur Wikipedia en français
244 Mot inconnu : wpfr =>   * [[wpfr> https://fr.wikipedia.org/wiki/Systemd|systemd]] sur Wikipedia en français
244 Mot inconnu : systemd =>   * [[wpfr> https://fr.wikipedia.org/wiki/Systemd|systemd]] sur Wikipedia en français
244 Mot inconnu : Wikipedia =>   * [[wpfr> https://fr.wikipedia.org/wiki/Systemd|systemd]] sur Wikipedia en français

245 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].
245 Mot inconnu : YAGIL =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].
245 Mot inconnu : Yet =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].
245 Mot inconnu : Another =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].
245 Il manque un espace insécable. =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].
245 Il manque un espace insécable. =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].
245 Mot inconnu : Casteyde =>   * [[http://casteyde.christian.free.fr/system/linux/guide/index.html|YAGIL]] Yet Another « Guide d'installation de Linux » de Christian Casteyde. Pour tout savoir sur le fonctionnement de [[:GNU]] / [[:Linux]].

246 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://wiki.archlinux.fr/Systemd]] Systemd sur le wiki de Archlinux
246 Mot inconnu : Systemd =>   * [[https://wiki.archlinux.fr/Systemd]] Systemd sur le wiki de Archlinux
246 Mot inconnu : Archlinux =>   * [[https://wiki.archlinux.fr/Systemd]] Systemd sur le wiki de Archlinux

247 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://doc.fedora-fr.org/wiki/Systemd]] Systemd sur le wiki de Fedora
247 Mot inconnu : Systemd =>   * [[http://doc.fedora-fr.org/wiki/Systemd]] Systemd sur le wiki de Fedora

248 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)
248 Mot inconnu : systemd =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)
248 Mot inconnu : Syncthing =>   * [[https://docs.syncthing.net/users/autostart.html#using-systemd]] Créer un service systemd pour lancer Syncthing au démarrage (en anglais)

249 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://dev.deluge-torrent.org/wiki/UserGuide/Service/systemd]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)
249 Mot inconnu : systemd =>   * [[http://dev.deluge-torrent.org/wiki/UserGuide/Service/systemd]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)
249 Mot inconnu : Deluge =>   * [[http://dev.deluge-torrent.org/wiki/UserGuide/Service/systemd]] Créer un service systemd pour lancer Deluge au démarrage (en anglais)

253 Il manque un espace insécable. => //Contributeurs: [[:utilisateurs:zarmu]],//
253 Il manque un espace. => //Contributeurs: [[:utilisateurs:zarmu]],//
253 Mot inconnu : zarmu => //Contributeurs: [[:utilisateurs:zarmu]],//
