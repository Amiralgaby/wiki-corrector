7 Mot inconnu : CVS => ====== CVS : utilisation en tant que client ======
7 Il manque un espace insécable. => ====== CVS : utilisation en tant que client ======

9 Mot inconnu : CVS => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique. 
9 Mot inconnu : System => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique. 
9 Mot inconnu : System => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique. 
9 Mot inconnu : Versioning => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique. 
9 Mot inconnu : System => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique. 
9 Espace(s) en fin de ligne à supprimer. => ****CVS****, acronyme de Concurrent Versions System ou de Concurrent Version System ou de Concurrent Versioning System, est un logiciel libre (licence GPL) de gestion de versions. Il est très utilisé dans le domaine du logiciel libre. Il peut aussi bien fonctionner en mode ligne de commande, qu'à travers une interface graphique. 

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer des [[:sudo|droits d'administration]].

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer d'une connexion à Internet configurée et activée.

18 Il manque un espace. => Il suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>cvs]]**.
18 Mot inconnu : cvs => Il suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>cvs]]**.

22 Mot inconnu : repository => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : CVS => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : repository => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : CVS => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : repository => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : repository => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : CVS => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : repository => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : CVS => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Mot inconnu : CVSROOT => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 
22 Espace(s) en fin de ligne à supprimer. => Ce logiciel peut fonctionner en local (repository CVS local) ou en mode client-serveur (repository CVS distant). Dans les deux cas, un repository de travail, toujours situé localement, contient un ou plusieurs modules qui est le reflet du repository CVS. Un module est constitué d'une hiérarchie de fichiers versionnés. La localisation du repository CVS est définie dans la variable d'environnement $CVSROOT. 

24 Mot inconnu : CVS => CVS offre principalement les opérations suivantes :\\
24 Il manque un espace insécable. => CVS offre principalement les opérations suivantes :\\

25 Il manque un espace insécable. => * admin : Administrer le repository (dans le cas d'une utilisation multi-utilisateurs)\\
25 Mot inconnu : repository => * admin : Administrer le repository (dans le cas d'une utilisation multi-utilisateurs)\\

26 Mot inconnu : checkout => * checkout : Obtenir une copie locale des fichiers\\
26 Il manque un espace insécable. => * checkout : Obtenir une copie locale des fichiers\\

27 Il manque un espace insécable. => * commit : Envoyer ses modifications\\

28 Mot inconnu : update => * update : Mettre à jour le repository de travail par rapport au repository CVS\\
28 Il manque un espace insécable. => * update : Mettre à jour le repository de travail par rapport au repository CVS\\
28 Mot inconnu : repository => * update : Mettre à jour le repository de travail par rapport au repository CVS\\
28 Mot inconnu : repository => * update : Mettre à jour le repository de travail par rapport au repository CVS\\
28 Mot inconnu : CVS => * update : Mettre à jour le repository de travail par rapport au repository CVS\\

29 Mot inconnu : diff => * diff : Voir les modifications entre les versions\\
29 Il manque un espace insécable. => * diff : Voir les modifications entre les versions\\

30 Il manque un espace insécable. => * log : Voir les commentaires sur les différentes versions\\

31 Il manque un espace insécable. => * import : Créer un nouveau module dans le repository CVS à partir d'un répertoire local\\
31 Mot inconnu : repository => * import : Créer un nouveau module dans le repository CVS à partir d'un répertoire local\\
31 Mot inconnu : CVS => * import : Créer un nouveau module dans le repository CVS à partir d'un répertoire local\\

32 Il manque un espace insécable. => * status : Voir le status d'un fichier ou d'un module\\

33 Il manque un espace insécable. => * tag : Poser une marque de révision ou de branche sur un fichier ou sur le module\\

34 Mot inconnu : add => * add/remove : Ajouter/Supprimer un fichier ou un module\\
34 Mot inconnu : remove => * add/remove : Ajouter/Supprimer un fichier ou un module\\
34 Il manque un espace insécable. => * add/remove : Ajouter/Supprimer un fichier ou un module\\

36 Il manque un espace insécable. => L'aide en ligne de chaque commande est accessible au moyen de la commande : $ cvs ---help <commande>
36 Mot inconnu : cvs => L'aide en ligne de chaque commande est accessible au moyen de la commande : $ cvs ---help <commande>
36 Mot inconnu : help => L'aide en ligne de chaque commande est accessible au moyen de la commande : $ cvs ---help <commande>

37 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cvs --help checkout
37 Mot inconnu : cvs =>   cvs --help checkout
37 Mot inconnu : help =>   cvs --help checkout
37 Mot inconnu : checkout =>   cvs --help checkout

39 Il manque un espace insécable. => Usage:

40 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cvs checkout [-ANPRcflnps] [-r rev] [-D date] [-d dir]
40 Mot inconnu : cvs =>   cvs checkout [-ANPRcflnps] [-r rev] [-D date] [-d dir]
40 Mot inconnu : checkout =>   cvs checkout [-ANPRcflnps] [-r rev] [-D date] [-d dir]
40 Mot inconnu : ANPRcflnps =>   cvs checkout [-ANPRcflnps] [-r rev] [-D date] [-d dir]
40 Mot inconnu : rev =>   cvs checkout [-ANPRcflnps] [-r rev] [-D date] [-d dir]
40 Mot inconnu : dir =>   cvs checkout [-ANPRcflnps] [-r rev] [-D date] [-d dir]

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     [-j rev1] [-j rev2] [-k kopt] modules...
41 Mot inconnu : rev1 =>     [-j rev1] [-j rev2] [-k kopt] modules...
41 Mot inconnu : rev2 =>     [-j rev1] [-j rev2] [-k kopt] modules...
41 Mot inconnu : kopt =>     [-j rev1] [-j rev2] [-k kopt] modules...
41 Typographie : points de suspension. Utilisez le caractère dédié. =>     [-j rev1] [-j rev2] [-k kopt] modules...

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -A      Reset any sticky tags/date/kopts.
42 Espace(s) surnuméraire(s) à supprimer. =>         -A      Reset any sticky tags/date/kopts.
42 Mot inconnu : Reset =>         -A      Reset any sticky tags/date/kopts.
42 Mot inconnu : any =>         -A      Reset any sticky tags/date/kopts.
42 Mot inconnu : sticky =>         -A      Reset any sticky tags/date/kopts.
42 Mot inconnu : kopts =>         -A      Reset any sticky tags/date/kopts.

43 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -N      Don't shorten module paths if -d specified.
43 Espace(s) surnuméraire(s) à supprimer. =>         -N      Don't shorten module paths if -d specified.
43 Mot inconnu : Don't =>         -N      Don't shorten module paths if -d specified.
43 Mot inconnu : shorten =>         -N      Don't shorten module paths if -d specified.
43 Mot inconnu : paths =>         -N      Don't shorten module paths if -d specified.
43 Il manque un espace à côté du tiret. =>         -N      Don't shorten module paths if -d specified.
43 Mot inconnu : specified =>         -N      Don't shorten module paths if -d specified.

44 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -P      Prune empty directories.
44 Espace(s) surnuméraire(s) à supprimer. =>         -P      Prune empty directories.
44 Mot inconnu : empty =>         -P      Prune empty directories.
44 Mot inconnu : directories =>         -P      Prune empty directories.

45 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -R      Process directories recursively.
45 Espace(s) surnuméraire(s) à supprimer. =>         -R      Process directories recursively.
45 Mot inconnu : directories =>         -R      Process directories recursively.
45 Mot inconnu : recursively =>         -R      Process directories recursively.

46 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -c      "cat" the module database.
46 Espace(s) surnuméraire(s) à supprimer. =>         -c      "cat" the module database.
46 Guillemets typographiques ouvrants. =>         -c      "cat" the module database.
46 Mot inconnu : cat =>         -c      "cat" the module database.
46 Guillemets typographiques fermants. =>         -c      "cat" the module database.
46 Mot inconnu : the =>         -c      "cat" the module database.
46 Mot inconnu : database =>         -c      "cat" the module database.

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -f      Force a head revision match if tag/date not found.
47 Espace(s) surnuméraire(s) à supprimer. =>         -f      Force a head revision match if tag/date not found.
47 Mot inconnu : head =>         -f      Force a head revision match if tag/date not found.
47 Mot inconnu : revision =>         -f      Force a head revision match if tag/date not found.
47 Mot inconnu : not =>         -f      Force a head revision match if tag/date not found.
47 Mot inconnu : found =>         -f      Force a head revision match if tag/date not found.

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -l      Local directory only, not recursive
48 Espace(s) surnuméraire(s) à supprimer. =>         -l      Local directory only, not recursive
48 Mot inconnu : directory =>         -l      Local directory only, not recursive
48 Mot inconnu : only =>         -l      Local directory only, not recursive
48 Mot inconnu : not =>         -l      Local directory only, not recursive
48 Mot inconnu : recursive =>         -l      Local directory only, not recursive

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -n      Do not run module program (if any).
49 Espace(s) surnuméraire(s) à supprimer. =>         -n      Do not run module program (if any).
49 Mot inconnu : not =>         -n      Do not run module program (if any).
49 Mot inconnu : run =>         -n      Do not run module program (if any).
49 Mot inconnu : program =>         -n      Do not run module program (if any).
49 Mot inconnu : any =>         -n      Do not run module program (if any).

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -p      Check out files to standard output (avoids stickiness).
50 Espace(s) surnuméraire(s) à supprimer. =>         -p      Check out files to standard output (avoids stickiness).
50 Mot inconnu : Check =>         -p      Check out files to standard output (avoids stickiness).
50 Mot inconnu : to =>         -p      Check out files to standard output (avoids stickiness).
50 Mot inconnu : avoids =>         -p      Check out files to standard output (avoids stickiness).
50 Mot inconnu : stickiness =>         -p      Check out files to standard output (avoids stickiness).

51 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -s      Like -c, but include module status.
51 Espace(s) surnuméraire(s) à supprimer. =>         -s      Like -c, but include module status.
51 Il manque un espace à côté du tiret. =>         -s      Like -c, but include module status.
51 Mot inconnu : include =>         -s      Like -c, but include module status.

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Mot inconnu : rev =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Espace(s) surnuméraire(s) à supprimer. =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Mot inconnu : Check =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Mot inconnu : revision =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Mot inconnu : implies =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Il manque un espace à côté du tiret. =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Mot inconnu : is =>         -r rev  Check out revision or tag. (implies -P) (is sticky)
52 Mot inconnu : sticky =>         -r rev  Check out revision or tag. (implies -P) (is sticky)

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Mot inconnu : Check =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Mot inconnu : revisions =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Mot inconnu : of =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Mot inconnu : implies =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Il manque un espace à côté du tiret. =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Mot inconnu : is =>         -D date Check out revisions as of date. (implies -P) (is sticky)
53 Mot inconnu : sticky =>         -D date Check out revisions as of date. (implies -P) (is sticky)

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : dir =>         -d dir  Check out into dir instead of module name.
54 Espace(s) surnuméraire(s) à supprimer. =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : Check =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : into =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : dir =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : instead =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : of =>         -d dir  Check out into dir instead of module name.
54 Mot inconnu : name =>         -d dir  Check out into dir instead of module name.

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Mot inconnu : kopt =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Mot inconnu : RCS =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Mot inconnu : kopt =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Il manque un espace à côté du tiret. =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Mot inconnu : checkout =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Mot inconnu : is =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)
55 Mot inconnu : sticky =>         -k kopt Use RCS kopt -k option on checkout. (is sticky)

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : rev =>         -j rev  Merge in changes made between current revision and rev.
56 Espace(s) surnuméraire(s) à supprimer. =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : Merge =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : between =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : current =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : revision =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : and =>         -j rev  Merge in changes made between current revision and rev.
56 Mot inconnu : rev =>         -j rev  Merge in changes made between current revision and rev.

57 Mot inconnu : Specify => (Specify the ---help global option for a list of other help options)
57 Mot inconnu : the => (Specify the ---help global option for a list of other help options)
57 Mot inconnu : help => (Specify the ---help global option for a list of other help options)
57 Mot inconnu : list => (Specify the ---help global option for a list of other help options)
57 Mot inconnu : of => (Specify the ---help global option for a list of other help options)
57 Mot inconnu : other => (Specify the ---help global option for a list of other help options)
57 Mot inconnu : help => (Specify the ---help global option for a list of other help options)

60 Mot inconnu : Checkout => ==== Checkout ====

62 Mot inconnu : checkout => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Mot inconnu : repository => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Mot inconnu : CVS => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Mot inconnu : repository => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Mot inconnu : CVS => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Guillemets typographiques ouvrants. => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Guillemets typographiques fermants. => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Guillemets typographiques ouvrants. => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Guillemets typographiques fermants. => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Mot inconnu : CVS => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).
62 Il manque un espace à côté du tiret. => Le checkout est l'opération qui consiste à extraire les fichiers à partir du repository CVS et à les recopier dans le repository de travail. CVS extrait par défaut la dernière version du fichier de la branche principale appelée encore "tronc". Si plusieurs branches de développement sont en cours ou que vous voulez une version plus ancienne du "tronc", vous devez le spécifier à CVS au moyen du nom du tag de branche ou de révision (option -r).

64 Il manque un espace insécable. => Vous devez spécifier en argument le ou les fichiers ou répertoire que vous voulez extraire. Par exemple :

67 Mot inconnu : checkout => Notez que l'utilisation de checkout est récursive.

69 Mot inconnu : CVS => Si tout se passe bien, CVS fournit une sortie qui ressemble à :
69 Il manque un espace insécable. => Si tout se passe bien, CVS fournit une sortie qui ressemble à :

71 Mot inconnu : htdocs => U htdocs/actions/ldd/index.wml
71 Mot inconnu : ldd => U htdocs/actions/ldd/index.wml
71 Mot inconnu : wml => U htdocs/actions/ldd/index.wml

73 Mot inconnu : htdocs => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml.
73 Mot inconnu : ldd => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml.
73 Mot inconnu : wml => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml.
73 Mot inconnu : CVS => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml.
73 Mot inconnu : wml => et crée un répertoire htdocs/actions/ldd contenant le fichier index.wml ainsi qu'un répertoire CVS qui contient des fichiers administratifs et qu'il convient d'ignorer (mais de ne pas effacer). Vous pouvez maintenant travailler sur le fichier index.wml.

78 Mot inconnu : repository => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple :
78 Mot inconnu : CVS => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple :
78 Mot inconnu : repository => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple :
78 Écriture invariable. Utilisez un point médian. => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple :
78 Si “le module…” est bien le COD du participe passé “modifiés”, celui-ci devrait être au masculin singulier. => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple :
78 Il manque un espace insécable. => Le commit est l'opération inverse. Le but du jeu est de mettre à jour dans le repository CVS et à partir du repository local le(s) fichier(s) ou le module complet que vous avez modifiés. Par exemple :

82 Mot inconnu : CVS => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs).
82 Mot inconnu : CVS => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs).
82 Mot inconnu : vi => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs).
82 Mot inconnu : EDITOR => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs).
82 Mot inconnu : emacs => CVS demande ensuite de rentrer des informations sur la nature des modifications effectuées (afin d'archiver leur trace dans un format facilement compréhensible par des humains). Par défaut, CVS exécute la commande vi, mais cette commande peut être modifiée au besoin en affectant le nom d'un éditeur de texte quelconque à la variable $EDITOR (par exemple emacs).

84 Mot inconnu : vi => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes).
84 Mot inconnu : ESC => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes).
84 Mot inconnu : CVS => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes).
84 Mot inconnu : repository => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes).
84 Mot inconnu : CVS => Enregistrez le texte de vos descriptions que vous venez de saisir (sous vi, ESC :x), et ensuite CVS mettra à jour vos modifications dans le repository. Notez que si vous mettez à jour plusieurs fichiers en même temps, CVS vous demandera certainement plusieurs descriptions pour vos modifications (vous pouvez mettre les mêmes).

86 Mot inconnu : emacs => Si votre description tient en quelques mots, vous pouvez vous passer de l'étape emacs/vi en mettant votre texte sur la ligne de commande, en utilisant l'option -m
86 Mot inconnu : vi => Si votre description tient en quelques mots, vous pouvez vous passer de l'étape emacs/vi en mettant votre texte sur la ligne de commande, en utilisant l'option -m
86 Il manque un espace à côté du tiret. => Si votre description tient en quelques mots, vous pouvez vous passer de l'étape emacs/vi en mettant votre texte sur la ligne de commande, en utilisant l'option -m
87 Il manque un espace à côté du tiret. => <code>cvs commit -m "Ajout du mois de mai" <nom_de_fichier></code>
87 Guillemets typographiques ouvrants. => <code>cvs commit -m "Ajout du mois de mai" <nom_de_fichier></code>
87 Guillemets typographiques fermants. => <code>cvs commit -m "Ajout du mois de mai" <nom_de_fichier></code>

89 Mot inconnu : Update => ==== Update ====

91 Mot inconnu : update => La commande update permet de récupérer sur sa copie locale les modifications effectuées par d'autres personnes. Par exemple, pour recevoir toutes les modifications :
91 Il manque un espace insécable. => La commande update permet de récupérer sur sa copie locale les modifications effectuées par d'autres personnes. Par exemple, pour recevoir toutes les modifications :

94 Mot inconnu : CVS => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits).
94 Guillemets typographiques ouvrants. => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits).
94 Mot inconnu : merger => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits).
94 Guillemets typographiques fermants. => Un conflit peut survenir si un fichier modifié localement a aussi été modifié par un autre utilisateur, qui en a fait un commit. Dans ce cas, CVS réunit les versions dans un fichier qu'il faut alors "merger" (résoudre les conflits).

96 Mot inconnu : Diff => ==== Diff ====

97 Mot inconnu : diff => La commande diff, liste les différences entre la version locale d'un fichier et celle qui se trouve actuellement sur le référentiel.

100 Il manque un espace insécable. => Il apparaît aussi utile de pouvoir comparer le fichier actuel avec une révision antérieure particulière :
101 Il manque un espace à côté du tiret. => <code>cvs diff -r 1.5 -r 1.6 <nom_de_fichier></code>

106 Il manque un espace à côté du tiret. => Log permet de lister un historique sommaire des révisions comprenant les dates et numéros respectifs, ainsi que les commentaires spécifiés lors du commit (option -m ou saisis depuis l'éditeur appelé par cvs), utiliser la commande :
106 Mot inconnu : cvs => Log permet de lister un historique sommaire des révisions comprenant les dates et numéros respectifs, ainsi que les commentaires spécifiés lors du commit (option -m ou saisis depuis l'éditeur appelé par cvs), utiliser la commande :
106 Il manque un espace insécable. => Log permet de lister un historique sommaire des révisions comprenant les dates et numéros respectifs, ainsi que les commentaires spécifiés lors du commit (option -m ou saisis depuis l'éditeur appelé par cvs), utiliser la commande :

108 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(en)** [[https://www.gnu.org/software/trans-coord/manual/cvs/|Manuel détaillé]]

114 Espace(s) en fin de ligne à supprimer. => ----- 

116 Il manque un espace insécable. => //Contributeurs : [[:utilisateurs:claudius01]]//
116 Il manque un espace. => //Contributeurs : [[:utilisateurs:claudius01]]//
