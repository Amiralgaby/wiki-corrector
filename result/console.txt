14 Guillemets typographiques ouvrants. => La console est une interface textuelle qui permet une "communication" entre l'homme et la machine avec uniquement un écran et un clavier. Le système peut utiliser différents interpréteurs de commande pour communiquer avec l'utilisateur (par défaut le shell).
14 Guillemets typographiques fermants. => La console est une interface textuelle qui permet une "communication" entre l'homme et la machine avec uniquement un écran et un clavier. Le système peut utiliser différents interpréteurs de commande pour communiquer avec l'utilisateur (par défaut le shell).

18 Il manque un espace insécable. => Exemple :

19 Mot inconnu : ls => //root@machine#// **ls -a**
19 Il manque un espace à côté du tiret. => //root@machine#// **ls -a**

21 Typographie : un ou trois points ? => . .. .bashrc text.txt dosser/ 
21 L’espace se place après le point, et non avant (ou bien sert de liant entre deux lettres). => . .. .bashrc text.txt dosser/ 
21 Mot inconnu : bashrc => . .. .bashrc text.txt dosser/ 
21 Mot inconnu : text => . .. .bashrc text.txt dosser/ 
21 Mot inconnu : txt => . .. .bashrc text.txt dosser/ 
21 Mot inconnu : dosser => . .. .bashrc text.txt dosser/ 
21 Espace(s) en fin de ligne à supprimer. => . .. .bashrc text.txt dosser/ 

23 Guillemets typographiques ouvrants. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés.
23 Mot inconnu : ls => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés.
23 Guillemets typographiques fermants. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés.
23 Il manque un espace à côté du tiret. => La commande "ls" donne l'instruction de donner des informations sur le contenu du répertoire courant et le -a est une option qui demande d'afficher en plus les fichiers cachés.

27 Il manque un espace insécable. => Note : Cliquez **[[:terminal|ici]]** pour savoir ce que sont des terminaux graphiques.

33 Mot inconnu : desktop => Pour un desktop Ubuntu, dite linux avec interface graphique, elle est accessible via le menu démarrer, sur Terminal ou via un raccourci clavier (voir note).
33 Mot inconnu : linux => Pour un desktop Ubuntu, dite linux avec interface graphique, elle est accessible via le menu démarrer, sur Terminal ou via un raccourci clavier (voir note).

34 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

35 Mot inconnu : tty1 => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher.
35 Mot inconnu : tty2 => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher.
35 Typographie : points de suspension. Utilisez le caractère dédié. => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher.
35 Mot inconnu : Fx => **Note :** Il y a sur Ubuntu, six consoles disponibles (tty1, tty2 ...), elles sont accessibles via Ctrl+Alt+Fx, où x est le numéro de la console à laquelle vous voulez vous rattacher.

39 Guillemets typographiques ouvrants. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Mot inconnu : F7 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Guillemets typographiques fermants. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Mot inconnu : Xorg => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Il manque les traits d’union. => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Mot inconnu : Xorg => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Mot inconnu : F9 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).
39 Mot inconnu : F8 => À partir de "F7" il ne s'agit plus de consoles à proprement parler, mais de sessions Xorg, c'est à dire de Linux en mode graphique. S'il y a plusieurs utilisateurs connectés, il y a plusieurs sessions Xorg auxquelles vous pouvez accéder via Ctrl+Alt+F9, etc. (à noter que Ctrl+Alt+F8 est en général une console spéciale où s'affichent des informations sur le démarrage de l'ordinateur).

45 Mot inconnu : GDM => === Versions avec GDM postérieures à 17.04 ===
47 Mot inconnu : Xorg => À partir de 17.04, sur les systèmes avec [[:GDM]] (les variantes avec [[:GNOME Shell]] donc), la session graphique ([[Xorg]] ou [[Wayland]]) se lance par dessus la 1ère console (et s'accède donc en faisant Ctrl+Alt+F1), et seules les consoles 2 à 6 restent accessibles, rien n'étant normalement présent à partir de Ctrl+Alt+F7.
47 Mot inconnu : Wayland => À partir de 17.04, sur les systèmes avec [[:GDM]] (les variantes avec [[:GNOME Shell]] donc), la session graphique ([[Xorg]] ou [[Wayland]]) se lance par dessus la 1ère console (et s'accède donc en faisant Ctrl+Alt+F1), et seules les consoles 2 à 6 restent accessibles, rien n'étant normalement présent à partir de Ctrl+Alt+F7.
47 Il manque un trait d’union. => À partir de 17.04, sur les systèmes avec [[:GDM]] (les variantes avec [[:GNOME Shell]] donc), la session graphique ([[Xorg]] ou [[Wayland]]) se lance par dessus la 1ère console (et s'accède donc en faisant Ctrl+Alt+F1), et seules les consoles 2 à 6 restent accessibles, rien n'étant normalement présent à partir de Ctrl+Alt+F7.
47 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. => À partir de 17.04, sur les systèmes avec [[:GDM]] (les variantes avec [[:GNOME Shell]] donc), la session graphique ([[Xorg]] ou [[Wayland]]) se lance par dessus la 1ère console (et s'accède donc en faisant Ctrl+Alt+F1), et seules les consoles 2 à 6 restent accessibles, rien n'étant normalement présent à partir de Ctrl+Alt+F7.
47 Mot inconnu : F7 => À partir de 17.04, sur les systèmes avec [[:GDM]] (les variantes avec [[:GNOME Shell]] donc), la session graphique ([[Xorg]] ou [[Wayland]]) se lance par dessus la 1ère console (et s'accède donc en faisant Ctrl+Alt+F1), et seules les consoles 2 à 6 restent accessibles, rien n'étant normalement présent à partir de Ctrl+Alt+F7.

49 Mot inconnu : F6 => Plusieurs sessions graphiques peuvent être lancées en parallèle, notamment si vous connectez 2 utilisateurs simultanément, donc n'hésitez pas à tester toutes les combinaisons jusqu'à Ctrl+Alt+F6 si besoin.

54 Accord erroné : “Ubuntu” et “orienté” ne sont pas accordés. Mettez au féminin pluriel. => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc.
54 Pas d’espace avant une virgule. => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc.
54 Mot inconnu : apt-get => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc.
54 Guillemets typographiques fermants. => Même si Ubuntu est clairement orienté interface graphique , il peut être intéressant d'utiliser malgré tout des applications console et comprendre celles qui se lancent dans un terminal. En effet, certaines applications sont beaucoup plus rapides à exécuter en lignes de commande, comme l'installation d'applications (''apt-get''), etc.

56 Mot inconnu : MacOS => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre. 
56 Il manque un espace insécable. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre. 
56 Guillemets typographiques ouvrants. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre. 
56 Mot inconnu : mon_fichier => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre. 
56 Guillemets typographiques fermants. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre. 
56 Espace(s) en fin de ligne à supprimer. => Que vous utilisiez Windows, MacOS ou une distribution GNU/Linux en mode graphique, vous devez être certainement habitués aux interfaces graphiques classiques qui consistent à cliquer sur telle ou telle partie d'une fenêtre, ce qui aura pour but d'effectuer une action. Prenons un exemple simple : vous souhaitez copier le fichier "mon_fichier" d'un répertoire à un autre. 

58 Il manque un espace insécable. => En mode graphique, vous devez :

60 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Naviguer jusqu'au dossier où se trouve le fichier

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Clic droit sur le fichier en question → //Copier//

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Vous rendre dans le dossier où vous souhaitez copier le fichier

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Clic droit → //Coller//

64 Mot inconnu : ctrl => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci.
64 Mot inconnu : maj => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci.
64 Mot inconnu : alt => Ou alternativement, glisser déposer le fichier d'un dossier ouvert à un autre en maintenant les touches ctrl, maj ou alt en fonction de si vous voulez le copier, déplacer ou créer un raccourci.

66 Confusion probable. => Et bien en console, vous pouvez (simplement!) taper ceci :
66 Il manque un espace insécable. => Et bien en console, vous pouvez (simplement!) taper ceci :
66 Il manque un espace insécable. => Et bien en console, vous pouvez (simplement!) taper ceci :

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cp <mon_fichier_à_copier> <destination>
68 Mot inconnu : cp =>   cp <mon_fichier_à_copier> <destination>

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   

70 Mot inconnu : ubuntu => Par exemple, pour copier le fichier **ubuntu.pdf** qui est dans un dossier1, dans un dossier2, il suffit de taper dans un [[:terminal]]:
70 Mot inconnu : dossier1 => Par exemple, pour copier le fichier **ubuntu.pdf** qui est dans un dossier1, dans un dossier2, il suffit de taper dans un [[:terminal]]:
70 Mot inconnu : dossier2 => Par exemple, pour copier le fichier **ubuntu.pdf** qui est dans un dossier1, dans un dossier2, il suffit de taper dans un [[:terminal]]:

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cp ~/Bureau/dossier1/ubuntu.pdf  ~/Bureau/dossier2
71 Mot inconnu : cp =>   cp ~/Bureau/dossier1/ubuntu.pdf  ~/Bureau/dossier2
71 Espace(s) surnuméraire(s) à supprimer. =>   cp ~/Bureau/dossier1/ubuntu.pdf  ~/Bureau/dossier2

73 Mot inconnu : __ligne => Il a ainsi exécuté une __ligne de commande__ qui sera interprétée en vue d'effectuer une ou plusieurs opérations.
73 Mot inconnu : commande__ => Il a ainsi exécuté une __ligne de commande__ qui sera interprétée en vue d'effectuer une ou plusieurs opérations.

75 Il manque un espace insécable. => Pour le déplacer dans un autre dossier, il faut connaitre son chemin :

76 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf.
76 Mot inconnu : cp =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf.
76 Mot inconnu : ubuntu =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf.
76 Mot inconnu : dossier_1 =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf.
76 Mot inconnu : dossier_2 =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf.
76 Mot inconnu : ubuntu =>   cp ubuntu.pdf dossier_1/dossier_2/ubuntu.pdf.

78 Il manque un espace insécable. => À noter que les consoles/terminaux ne sont pas limités à GNU/Linux : en effet, Windows possède un terminal qui émule MS-DOS. Pour y accéder, appuyez sur <toucheWindows>+R, puis tapez **cmd** puis entrée.
78 Mot inconnu : cmd => À noter que les consoles/terminaux ne sont pas limités à GNU/Linux : en effet, Windows possède un terminal qui émule MS-DOS. Pour y accéder, appuyez sur <toucheWindows>+R, puis tapez **cmd** puis entrée.

80 Il manque un espace insécable. => Une fenêtre noire s'ouvre, et vous pouvez également copier un fichier :

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   copy windows.pdf windows2.pdf
81 Mot inconnu : copy =>   copy windows.pdf windows2.pdf
81 Mot inconnu : windows2 =>   copy windows.pdf windows2.pdf

83 Mot inconnu : ergonomiquement => Cependant, aussi bien au niveau fonctionnalités que souplesse, la console sous Windows est bien pauvre (impossibilité de redimensionner la fenêtre, peu d'outils en ligne de commande, ergonomiquement inutilisable…). C'est pour cela qu'elle n'est que très peu utilisée.
84 Mot inconnu : Vista => Microsoft a alors décidé de développer une **vraie** console ([[http://fr.wikipedia.org/wiki/Windows_PowerShell|PowerShell]]) pour l'intégrer dans Windows Vista, mais à la suite de différents problèmes, elle n'a finalement pas été intégrée avant Windows 7.

88 Pas d’espace avant une virgule. => Malheureusement si un bug survient dans un programme, le mode graphique, par souci de simplicité, n'affiche aucune information pour trouver le problème. Dans ce cas, lancer un programme en mode console permet de récupérer ces informations. Sans oublier que si vous constatez des problèmes dans votre système , les commandes s'avèrent indispensables. 
88 Espace(s) en fin de ligne à supprimer. => Malheureusement si un bug survient dans un programme, le mode graphique, par souci de simplicité, n'affiche aucune information pour trouver le problème. Dans ce cas, lancer un programme en mode console permet de récupérer ces informations. Sans oublier que si vous constatez des problèmes dans votre système , les commandes s'avèrent indispensables. 

94 Espace(s) en fin de ligne à supprimer. => La communauté Ubuntu semble beaucoup plus présente que sur différents systèmes. Si vous avez une difficulté, vous pouvez poser votre problème sur un forum connu. En fonction de la difficulté, d'autres utilisateurs vous aideront pour résoudre votre souci. 

98 Il manque un espace insécable. => Si vous demandez de l'aide dans un forum, il est beaucoup plus facile de vous répondre :

102 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   ls -ad ~/.*
102 Mot inconnu : ls =>   ls -ad ~/.*
102 Il manque un espace à côté du tiret. =>   ls -ad ~/.*

104 Il manque un espace insécable. => Et vous n'aurez plus qu'à faire un copier-coller du forum vers un terminal, plutôt que :

106 Il manque un espace insécable. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Mot inconnu : Nautilus => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Typographie : points de suspension. Utilisez le caractère dédié. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques ouvrants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Guillemets typographiques fermants. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Typographie : points de suspension. Utilisez le caractère dédié. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Il manque un espace insécable. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 
106 Espace(s) en fin de ligne à supprimer. => //« Lance Nautilus dans ton répertoire personnel avec "Raccourcis" "Dossiers de ..." et ensuite menu "Affichage" "Fichiers cachés"... »// 

108 Il manque un espace insécable. => Bien entendu ce n'est qu'un simple exemple, il existe des cas bien plus complexes où l'utilisation d'un terminal vaut mieux que des heures d'explications !

114 Forme interrogative ? Mettez un trait d’union. => Intéressons nous d'abord à la nomenclature de la commande :
114 Il manque un espace insécable. => Intéressons nous d'abord à la nomenclature de la commande :

116 Il manque un espace insécable. => traduction :

119 Guillemets typographiques ouvrants. => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier).
119 Mot inconnu : cp => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier).
119 Guillemets typographiques fermants. => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier).
119 Mot inconnu : __commande__ => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier).
119 Mot inconnu : copy => ''cp'' est une __commande__ qui correspond, pour les non anglophones, à l'abréviation de //copy file// (copier le fichier).

121 Guillemets typographiques ouvrants. => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante :
121 Mot inconnu : cp => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante :
121 Guillemets typographiques fermants. => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante :
121 Il manque un espace insécable. => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante :
121 Il manque un espace insécable. => Une commande admet généralement des paramètres, c'est-à-dire des informations complémentaires lui permettant d'effectuer telle ou telle opération. Dans notre exemple, la commande ''cp'' nécessite deux paramètres : le fichier source, et le fichier cible. Pour résumer, la commande s'utilise de la façon suivante :

124 Mot inconnu : cp => $ cp <fichier_source> <fichier_cible>

127 Il manque un espace insécable. => > **Notations** : les éléments désignés entre les caractères "<" et ">" doivent être adaptés pour votre usage. Pour ce qui est du signe « $ », voir les [[#notes]].
127 Il manque un espace insécable. => > **Notations** : les éléments désignés entre les caractères "<" et ">" doivent être adaptés pour votre usage. Pour ce qui est du signe « $ », voir les [[#notes]].
127 Il manque un espace insécable. => > **Notations** : les éléments désignés entre les caractères "<" et ">" doivent être adaptés pour votre usage. Pour ce qui est du signe « $ », voir les [[#notes]].

133 Guillemets typographiques ouvrants. => Cependant une commande ne nécessite pas forcément de paramètres (la commande ''ls'' par exemple, qui affiche le contenu d'un dossier).
133 Mot inconnu : ls => Cependant une commande ne nécessite pas forcément de paramètres (la commande ''ls'' par exemple, qui affiche le contenu d'un dossier).
133 Guillemets typographiques fermants. => Cependant une commande ne nécessite pas forcément de paramètres (la commande ''ls'' par exemple, qui affiche le contenu d'un dossier).

137 Il manque un espace insécable. => Lorsque vous ne connaissez pas une commande ou que vous n'êtes pas sûr de la syntaxe à utiliser (la signification des //paramètres//), deux solutions s'offrent à vous :

139 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Entrer le nom de la commande, suivie du paramètre ''--help'' ou ''-h'', comme ceci :
139 Mot inconnu : help =>   * Entrer le nom de la commande, suivie du paramètre ''--help'' ou ''-h'', comme ceci :
139 Guillemets typographiques fermants. =>   * Entrer le nom de la commande, suivie du paramètre ''--help'' ou ''-h'', comme ceci :
139 Guillemets typographiques fermants. =>   * Entrer le nom de la commande, suivie du paramètre ''--help'' ou ''-h'', comme ceci :
139 Il manque un espace insécable. =>   * Entrer le nom de la commande, suivie du paramètre ''--help'' ou ''-h'', comme ceci :

141 Il manque un espace à côté du tiret. => <code>$ commande -h</code>

142 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La commande man ( ça marche à tous les coups )
142 Pas d’espace après ce signe. =>   * La commande man ( ça marche à tous les coups )
142 Pas d’espace avant ce signe. =>   * La commande man ( ça marche à tous les coups )

144 Guillemets typographiques ouvrants. => Notez que ''man'' est elle-même une commande, et permet d'afficher la documentation de la commande indiquée en paramètre. L'avantage de cette méthode est que le texte affiché est souvent plus complet, et la plupart du temps dans la langue du système (c'est-à-dire en français si votre système supporte cette langue).
144 Guillemets typographiques fermants. => Notez que ''man'' est elle-même une commande, et permet d'afficher la documentation de la commande indiquée en paramètre. L'avantage de cette méthode est que le texte affiché est souvent plus complet, et la plupart du temps dans la langue du système (c'est-à-dire en français si votre système supporte cette langue).

155 Guillemets typographiques ouvrants. => ''cd'' est LA commande basique que tout utilisateur doit connaître. Comme indiqué dans le premier chapitre de cette page, cette commande sert à naviguer d'un dossier à un autre.
155 Guillemets typographiques fermants. => ''cd'' est LA commande basique que tout utilisateur doit connaître. Comme indiqué dans le premier chapitre de cette page, cette commande sert à naviguer d'un dossier à un autre.

159 Mot inconnu : REPERTOIRE => $ cd REPERTOIRE

168 Mot inconnu : ls => ==== ls ====

171 Guillemets typographiques ouvrants. => ''ls'' permet d'afficher la liste des fichiers et dossiers présents dans le dossier indiqué en paramètre.
171 Mot inconnu : ls => ''ls'' permet d'afficher la liste des fichiers et dossiers présents dans le dossier indiqué en paramètre.
171 Guillemets typographiques fermants. => ''ls'' permet d'afficher la liste des fichiers et dossiers présents dans le dossier indiqué en paramètre.

175 Mot inconnu : ls => $ ls RÉPERTOIRE

181 Mot inconnu : ls => $ ls # Affiche la liste des fichiers du répertoire en cours

182 Mot inconnu : ls => $ ls ~ # Affiche les fichiers du dossier personnel, ~ représentant "/home/utilisateur-en-cours"
182 Guillemets typographiques fermants. => $ ls ~ # Affiche les fichiers du dossier personnel, ~ représentant "/home/utilisateur-en-cours"

183 Mot inconnu : ls => $ ls -l # Affiche la liste détaillée des fichiers du répertoire en cours
183 Il manque un espace à côté du tiret. => $ ls -l # Affiche la liste détaillée des fichiers du répertoire en cours

184 Mot inconnu : ls => $ ls -A # Affiche les fichiers cachés et non-cachés dans le répertoire en cours
184 Il manque un espace à côté du tiret. => $ ls -A # Affiche les fichiers cachés et non-cachés dans le répertoire en cours

189 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:tutoriel:console_commandes_de_base|Les commandes de base en console]] (très court et concis).
189 Il manque un espace. =>   * [[:tutoriel:console_commandes_de_base|Les commandes de base en console]] (très court et concis).

190 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:tutoriel:Learn unix in 10 minutes|Apprendre unix en 10 minutes]] - Un tutoriel expliquant les principales commandes utilisées par ubuntu.
190 Il manque un espace. =>   * [[:tutoriel:Learn unix in 10 minutes|Apprendre unix en 10 minutes]] - Un tutoriel expliquant les principales commandes utilisées par ubuntu.
190 Mot inconnu : unix =>   * [[:tutoriel:Learn unix in 10 minutes|Apprendre unix en 10 minutes]] - Un tutoriel expliquant les principales commandes utilisées par ubuntu.
190 Mot inconnu : unix =>   * [[:tutoriel:Learn unix in 10 minutes|Apprendre unix en 10 minutes]] - Un tutoriel expliquant les principales commandes utilisées par ubuntu.
190 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   * [[:tutoriel:Learn unix in 10 minutes|Apprendre unix en 10 minutes]] - Un tutoriel expliquant les principales commandes utilisées par ubuntu.
190 Mot inconnu : ubuntu =>   * [[:tutoriel:Learn unix in 10 minutes|Apprendre unix en 10 minutes]] - Un tutoriel expliquant les principales commandes utilisées par ubuntu.

191 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:tutoriel/console_commandes_de_base|Les commandes de base]] - Un tutoriel un peu long mais très complet.
191 Mot inconnu : console_commandes_de_base =>   * [[:tutoriel/console_commandes_de_base|Les commandes de base]] - Un tutoriel un peu long mais très complet.
191 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) =>   * [[:tutoriel/console_commandes_de_base|Les commandes de base]] - Un tutoriel un peu long mais très complet.

193 Il manque un espace insécable. => Pour aller encore plus loin :

195 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:Screen]] : Utilitaire agissant directement sur le terminal.
195 Il manque un espace insécable. =>   * [[:Screen]] : Utilitaire agissant directement sur le terminal.

196 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:liste_des_applications_console|Liste des applications console]] : Liste des applications pouvant être lancées en console.
196 Il manque un espace insécable. =>   * [[:liste_des_applications_console|Liste des applications console]] : Liste des applications pouvant être lancées en console.

197 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:apt|Apt]] : Gestion des paquets en mode texte.
197 Il manque un espace insécable. =>   * [[:apt|Apt]] : Gestion des paquets en mode texte.

198 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:tutoriel:script_shell|Script Shell]] : Comment créer des scripts shell.
198 Il manque un espace. =>   * [[:tutoriel:script_shell|Script Shell]] : Comment créer des scripts shell.
198 Il manque un espace insécable. =>   * [[:tutoriel:script_shell|Script Shell]] : Comment créer des scripts shell.

202 Il manque un espace insécable. => Il existe des raccourcis clavier spécifiques à la console, et permettant de nombreuses actions intéressantes (source : [[http://www.tux-planet.fr/raccourcis-clavier-sous-bash/|Tux-planet]]) : 
202 Il manque un espace insécable. => Il existe des raccourcis clavier spécifiques à la console, et permettant de nombreuses actions intéressantes (source : [[http://www.tux-planet.fr/raccourcis-clavier-sous-bash/|Tux-planet]]) : 
202 Espace(s) en fin de ligne à supprimer. => Il existe des raccourcis clavier spécifiques à la console, et permettant de nombreuses actions intéressantes (source : [[http://www.tux-planet.fr/raccourcis-clavier-sous-bash/|Tux-planet]]) : 

204 Il manque un trait d’union. => Vous pouvez lancer des programmes en tapant leur nom, bien utile quand il y a une erreur car celle ci sera indiquée dans la [[:console]]. La [[:console]] d'Ubuntu, comme sur la plupart des systèmes Unix, propose [[wpfr>complètement|le complètement ou complétion automatique]], c'est-à-dire qu'avec la touche TAB, vous pouvez compléter ce que vous tapez, très utile pour naviguer dans l'arborescence ou pour éviter les fautes typographiques !
204 Mot inconnu : TAB => Vous pouvez lancer des programmes en tapant leur nom, bien utile quand il y a une erreur car celle ci sera indiquée dans la [[:console]]. La [[:console]] d'Ubuntu, comme sur la plupart des systèmes Unix, propose [[wpfr>complètement|le complètement ou complétion automatique]], c'est-à-dire qu'avec la touche TAB, vous pouvez compléter ce que vous tapez, très utile pour naviguer dans l'arborescence ou pour éviter les fautes typographiques !
204 Il manque un espace insécable. => Vous pouvez lancer des programmes en tapant leur nom, bien utile quand il y a une erreur car celle ci sera indiquée dans la [[:console]]. La [[:console]] d'Ubuntu, comme sur la plupart des systèmes Unix, propose [[wpfr>complètement|le complètement ou complétion automatique]], c'est-à-dire qu'avec la touche TAB, vous pouvez compléter ce que vous tapez, très utile pour naviguer dans l'arborescence ou pour éviter les fautes typographiques !

205 Mot inconnu : comment_modifier_un_fichier => <note tip>Parfois la complétion automatique est désactivée par défaut pour le compte administrateur. Pour l'activer [[:tutoriel/comment_modifier_un_fichier|éditez le fichier]] **/etc/bash.bashrc** et décommentez ([[wpfr>Croisillon_(signe)#Programmation|retirez le croisillion devant]]) les lignes 32 à 34 pour obtenir:<file>
205 Mot inconnu : décommentez => <note tip>Parfois la complétion automatique est désactivée par défaut pour le compte administrateur. Pour l'activer [[:tutoriel/comment_modifier_un_fichier|éditez le fichier]] **/etc/bash.bashrc** et décommentez ([[wpfr>Croisillon_(signe)#Programmation|retirez le croisillion devant]]) les lignes 32 à 34 pour obtenir:<file>
205 Mot inconnu : Croisillon_ => <note tip>Parfois la complétion automatique est désactivée par défaut pour le compte administrateur. Pour l'activer [[:tutoriel/comment_modifier_un_fichier|éditez le fichier]] **/etc/bash.bashrc** et décommentez ([[wpfr>Croisillon_(signe)#Programmation|retirez le croisillion devant]]) les lignes 32 à 34 pour obtenir:<file>
205 Il manque un espace avant la parenthèse. => <note tip>Parfois la complétion automatique est désactivée par défaut pour le compte administrateur. Pour l'activer [[:tutoriel/comment_modifier_un_fichier|éditez le fichier]] **/etc/bash.bashrc** et décommentez ([[wpfr>Croisillon_(signe)#Programmation|retirez le croisillion devant]]) les lignes 32 à 34 pour obtenir:<file>
205 Mot inconnu : croisillion => <note tip>Parfois la complétion automatique est désactivée par défaut pour le compte administrateur. Pour l'activer [[:tutoriel/comment_modifier_un_fichier|éditez le fichier]] **/etc/bash.bashrc** et décommentez ([[wpfr>Croisillon_(signe)#Programmation|retirez le croisillion devant]]) les lignes 32 à 34 pour obtenir:<file>
205 Il manque un espace insécable. => <note tip>Parfois la complétion automatique est désactivée par défaut pour le compte administrateur. Pour l'activer [[:tutoriel/comment_modifier_un_fichier|éditez le fichier]] **/etc/bash.bashrc** et décommentez ([[wpfr>Croisillon_(signe)#Programmation|retirez le croisillion devant]]) les lignes 32 à 34 pour obtenir:<file>

206 Mot inconnu : enable => # enable programmable completion features (you don't need to enable
206 Mot inconnu : completion => # enable programmable completion features (you don't need to enable
206 Mot inconnu : features => # enable programmable completion features (you don't need to enable
206 Mot inconnu : you => # enable programmable completion features (you don't need to enable
206 Mot inconnu : don't => # enable programmable completion features (you don't need to enable
206 Mot inconnu : need => # enable programmable completion features (you don't need to enable
206 Mot inconnu : to => # enable programmable completion features (you don't need to enable
206 Mot inconnu : enable => # enable programmable completion features (you don't need to enable

207 Mot inconnu : this => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
207 Mot inconnu : it's => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
207 Mot inconnu : already => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
207 Mot inconnu : enabled => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
207 Mot inconnu : and => # this, if it's already enabled in /etc/bash.bashrc and /etc/profile

209 Pas d’espace après ce signe. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Pas d’espace avant ce signe. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Il manque un espace insécable. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Mot inconnu : shopt => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Il manque un espace à côté du tiret. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Mot inconnu : oq => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Mot inconnu : posix => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Il manque un espace insécable. => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
209 Mot inconnu : then => if [ -f /etc/bash_completion ] && ! shopt -oq posix; then

210 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   . /etc/bash_completion
210 Pas d’espace avant un point. =>   . /etc/bash_completion

217 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + a : aller au début de la ligne
217 Il manque un espace insécable. =>   * Ctrl + a : aller au début de la ligne

218 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + e : aller à la fin de la ligne
218 Il manque un espace insécable. =>   * Ctrl + e : aller à la fin de la ligne

219 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + b : se déplacer mot par mot dans la ligne de commande en arrière (b pour backward)
219 Il manque un espace insécable. =>   * Alt + b : se déplacer mot par mot dans la ligne de commande en arrière (b pour backward)
219 Mot inconnu : backward =>   * Alt + b : se déplacer mot par mot dans la ligne de commande en arrière (b pour backward)

220 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + f : se déplacer mot par mot dans la ligne de commande en avant (f pour forward)
220 Il manque un espace insécable. =>   * Alt + f : se déplacer mot par mot dans la ligne de commande en avant (f pour forward)
220 Mot inconnu : forward =>   * Alt + f : se déplacer mot par mot dans la ligne de commande en avant (f pour forward)

221 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + xx : positionner le curseur au début du mot ou à la fin
221 Mot inconnu : xx =>   * Ctrl + xx : positionner le curseur au début du mot ou à la fin
221 Il manque un espace insécable. =>   * Ctrl + xx : positionner le curseur au début du mot ou à la fin

225 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + k : couper la chaîne du curseur jusqu'à la fin de la ligne
225 Il manque un espace insécable. =>   * Ctrl + k : couper la chaîne du curseur jusqu'à la fin de la ligne

226 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + u : couper la chaîne du curseur jusqu'au début de la ligne
226 Il manque un espace insécable. =>   * Ctrl + u : couper la chaîne du curseur jusqu'au début de la ligne

227 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + w : couper le mot avant le curseur
227 Il manque un espace insécable. =>   * Ctrl + w : couper le mot avant le curseur

228 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + y : coller une chaîne
228 Il manque un espace insécable. =>   * Ctrl + y : coller une chaîne

232 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls)
232 Il manque un espace insécable. =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls)
232 Mot inconnu : sl =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls)
232 Mot inconnu : ls =>   * Ctrl + t : inverser la position des deux caractères avant le curseur (pratique quand on tape par exemple, sl au lieu de ls)

233 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + t : inverser la position des deux mots avant le curseur
233 Mot inconnu : shift =>   * Alt + shift + t : inverser la position des deux mots avant le curseur
233 Il manque un espace insécable. =>   * Alt + shift + t : inverser la position des deux mots avant le curseur

234 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize)
234 Mot inconnu : shift =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize)
234 Il manque un espace insécable. =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize)
234 Mot inconnu : capitalize =>   * Alt + shift + c : mettre une lettre en majuscule (c pour capitalize)

235 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase)
235 Mot inconnu : shift =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase)
235 Il manque un espace insécable. =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase)
235 Mot inconnu : lowercase =>   * Alt + shift + l : mettre un mot en minuscule (l pour lowercase)

236 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase)
236 Mot inconnu : shift =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase)
236 Il manque un espace insécable. =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase)
236 Mot inconnu : uppercase =>   * Alt + shift + u : mettre un mot en majuscule (u pour uppercase)

237 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Alt + shift + . : réécrire le paramètre de la dernière commande
237 Mot inconnu : shift =>   * Alt + shift + . : réécrire le paramètre de la dernière commande
237 Pas d’espace avant un point. =>   * Alt + shift + . : réécrire le paramètre de la dernière commande
237 Il manque un espace insécable. =>   * Alt + shift + . : réécrire le paramètre de la dernière commande

240 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + l : effacer le contenu de l'écran
240 Il manque un espace insécable. =>   * Ctrl + l : effacer le contenu de l'écran

241 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + _ : annuler la dernière modification
241 Il manque un espace insécable. =>   * Ctrl + _ : annuler la dernière modification

242 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + c : arrêter la commande en cours
242 Il manque un espace insécable. =>   * Ctrl + c : arrêter la commande en cours

243 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan)
243 Il manque un espace insécable. =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan)
243 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan)
243 Mot inconnu : bg =>   * Ctrl + z : interrompt temporairement un processus, qui peut être relancé avec la commande fg (au premier plan) ou bg (en arrière-plan)

244 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + d : quitter le shell en cours
244 Il manque un espace insécable. =>   * Ctrl + d : quitter le shell en cours

245 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Ctrl + r : permet de rechercher une commande dans l'historique de la console
245 Il manque un espace insécable. =>   * Ctrl + r : permet de rechercher une commande dans l'historique de la console

249 Guillemets typographiques ouvrants. => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\
249 Mot inconnu : Tab => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\
249 Guillemets typographiques fermants. => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\
249 Mot inconnu : apt-get => La touche ''Tab'' permet de compléter le nom des commandes. Elle permet aussi de compléter le chemin vers un fichier mais cela n'est pas toujours très pertinent. Par exemple, il serait préférable que l'argument après apt-get soit complété en fonction des paquets disponibles, et non des fichiers dans le répertoire courant. Cette fonction est présente dans Ubuntu. \\

250 Il manque un espace. => Si elle n'est pas ou plus activée, il suffit [[:tutoriel:comment_editer_un_fichier|d'éditer le fichier]] ///etc/bash.bashrc// avec les [[:sudo|droits d'administration]] et de décommenter (enlever les #) les lignes concernant l'auto-complétion, qui sont:
250 Mot inconnu : décommenter => Si elle n'est pas ou plus activée, il suffit [[:tutoriel:comment_editer_un_fichier|d'éditer le fichier]] ///etc/bash.bashrc// avec les [[:sudo|droits d'administration]] et de décommenter (enlever les #) les lignes concernant l'auto-complétion, qui sont:
250 Il manque un espace insécable. => Si elle n'est pas ou plus activée, il suffit [[:tutoriel:comment_editer_un_fichier|d'éditer le fichier]] ///etc/bash.bashrc// avec les [[:sudo|droits d'administration]] et de décommenter (enlever les #) les lignes concernant l'auto-complétion, qui sont:

251 Pas d’espace après ce signe. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Pas d’espace avant ce signe. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Il manque un espace insécable. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Mot inconnu : shopt => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Il manque un espace à côté du tiret. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Mot inconnu : oq => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Mot inconnu : posix => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Il manque un espace insécable. => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
251 Mot inconnu : then => <file># if [ -f /etc/bash_completion ] && ! shopt -oq posix; then

252 Pas d’espace avant un point. => #    . /etc/bash_completion

257 Il manque un espace insécable. => La ligne de commande est très efficace, mais taper au clavier prend du temps : vous pouvez raccourcir vos commandes grâce aux [[:alias]].

258 Mot inconnu : bashrc => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Guillemets typographiques fermants. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Guillemets typographiques ouvrants. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Mot inconnu : some => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Mot inconnu : ls => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Mot inconnu : aliases => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Guillemets typographiques fermants. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :
258 Il manque un espace insécable. => Il suffit d'ajouter dans votre fichier ''~/.bashrc'', juste après ''some more ls aliases'', une ligne du type :

260 Mot inconnu : monalias => alias monalias='macommandetreslongue'
260 Mot inconnu : macommandetreslongue => alias monalias='macommandetreslongue'
260 Guillemets typographiques fermants. => alias monalias='macommandetreslongue'

262 Guillemets typographiques ouvrants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''.
262 Mot inconnu : monalias => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''.
262 Guillemets typographiques fermants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''.
262 Guillemets typographiques ouvrants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''.
262 Mot inconnu : macommandetreslongue => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''.
262 Guillemets typographiques fermants. => Lorsque vous taperez ''monalias'' dans votre terminal, la commande réellement exécutée sera ''macommandetreslongue''.

264 Il manque un espace insécable. => À titre d'exemple, voici des alias pratiques :
268 Il manque un espace insécable. => Voici deux exemples concernant l'usage de [[:apt]] :

271 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias acs='apt-cache search'
271 Mot inconnu : acs =>     alias acs='apt-cache search'
271 Mot inconnu : apt-cache =>     alias acs='apt-cache search'
271 Mot inconnu : search =>     alias acs='apt-cache search'
271 Guillemets typographiques fermants. =>     alias acs='apt-cache search'

272 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agu='sudo apt-get update'
272 Mot inconnu : agu =>     alias agu='sudo apt-get update'
272 Mot inconnu : sudo =>     alias agu='sudo apt-get update'
272 Mot inconnu : apt-get =>     alias agu='sudo apt-get update'
272 Mot inconnu : update =>     alias agu='sudo apt-get update'
272 Guillemets typographiques fermants. =>     alias agu='sudo apt-get update'

273 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agg='sudo apt-get upgrade'
273 Mot inconnu : agg =>     alias agg='sudo apt-get upgrade'
273 Mot inconnu : sudo =>     alias agg='sudo apt-get upgrade'
273 Mot inconnu : apt-get =>     alias agg='sudo apt-get upgrade'
273 Guillemets typographiques fermants. =>     alias agg='sudo apt-get upgrade'

274 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agd='sudo apt-get dist-upgrade'
274 Mot inconnu : agd =>     alias agd='sudo apt-get dist-upgrade'
274 Mot inconnu : sudo =>     alias agd='sudo apt-get dist-upgrade'
274 Mot inconnu : apt-get =>     alias agd='sudo apt-get dist-upgrade'
274 Mot inconnu : dist-upgrade =>     alias agd='sudo apt-get dist-upgrade'
274 Guillemets typographiques fermants. =>     alias agd='sudo apt-get dist-upgrade'

275 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agi='sudo apt-get install'
275 Mot inconnu : sudo =>     alias agi='sudo apt-get install'
275 Mot inconnu : apt-get =>     alias agi='sudo apt-get install'
275 Mot inconnu : install =>     alias agi='sudo apt-get install'
275 Guillemets typographiques fermants. =>     alias agi='sudo apt-get install'

276 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     alias agr='sudo apt-get remove'
276 Mot inconnu : agr =>     alias agr='sudo apt-get remove'
276 Mot inconnu : sudo =>     alias agr='sudo apt-get remove'
276 Mot inconnu : apt-get =>     alias agr='sudo apt-get remove'
276 Mot inconnu : remove =>     alias agr='sudo apt-get remove'
276 Guillemets typographiques fermants. =>     alias agr='sudo apt-get remove'

280 Mot inconnu : search => alias search='apt-cache search'
280 Mot inconnu : apt-cache => alias search='apt-cache search'
280 Mot inconnu : search => alias search='apt-cache search'
280 Guillemets typographiques fermants. => alias search='apt-cache search'

281 Mot inconnu : apt-cache => alias show='apt-cache show'
281 Guillemets typographiques fermants. => alias show='apt-cache show'

282 Mot inconnu : install => alias install='sudo apt-get install'
282 Mot inconnu : sudo => alias install='sudo apt-get install'
282 Mot inconnu : apt-get => alias install='sudo apt-get install'
282 Mot inconnu : install => alias install='sudo apt-get install'
282 Guillemets typographiques fermants. => alias install='sudo apt-get install'

283 Mot inconnu : remove => alias remove='sudo apt-get remove'
283 Mot inconnu : sudo => alias remove='sudo apt-get remove'
283 Mot inconnu : apt-get => alias remove='sudo apt-get remove'
283 Mot inconnu : remove => alias remove='sudo apt-get remove'
283 Guillemets typographiques fermants. => alias remove='sudo apt-get remove'

284 Mot inconnu : update => alias update='sudo apt-get update'
284 Mot inconnu : sudo => alias update='sudo apt-get update'
284 Mot inconnu : apt-get => alias update='sudo apt-get update'
284 Mot inconnu : update => alias update='sudo apt-get update'
284 Guillemets typographiques fermants. => alias update='sudo apt-get update'

285 Mot inconnu : sudo => alias upgrade='sudo apt-get upgrade -uy'
285 Mot inconnu : apt-get => alias upgrade='sudo apt-get upgrade -uy'
285 Il manque un espace à côté du tiret. => alias upgrade='sudo apt-get upgrade -uy'
285 Mot inconnu : uy => alias upgrade='sudo apt-get upgrade -uy'
285 Guillemets typographiques fermants. => alias upgrade='sudo apt-get upgrade -uy'

288 Il manque un espace insécable. => À l'usage ça donne : <code>update && upgrade</code>

289 Il manque un espace insécable. => et on n'en parle plus ;-)

293 Typographie : points de suspension. Utilisez le caractère dédié. => Maintenant, lançons-nous dans la fabuleuse histoire de la ligne de commande...

295 Il manque un espace insécable. => === Le signe « $ » ===
295 Il manque un espace insécable. => === Le signe « $ » ===

297 Il manque un espace insécable. => Toutes les commandes de cette page seront précédées du signe ''$'' (dollar), pour deux raisons fondamentales :

299 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple :
299 Guillemets typographiques ouvrants. =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple :
299 Mot inconnu : ls =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple :
299 Guillemets typographiques fermants. =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple :
299 Il manque un espace insécable. =>   * La plupart des commandes affichent du texte lors de leur exécution, reprenons l'exemple de la commande ''ls'' qui vous affichera le contenu d'un dossier. C'est pourquoi il faut différencier ce que vous devez entrer, et ce que vous ne devez pas entrer. Exemple :

301 Il manque un espace insécable. => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant.
301 Guillemets typographiques ouvrants. => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant.
301 Mot inconnu : ls => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant.
301 Guillemets typographiques fermants. => > **Autre formulation** : (il faut récupérer le meilleur des deux). Un objectif du signe ''$'' est de distinguer la commande en elle-même du résultat que l'on obtient en sortie, c'est-à-dire après son exécution. -> Dans le cas de la commande ''ls'', la sortie (donc non précédée du signe "$") est la liste des fichiers (au sens large) du répertoire courant.

303 Mot inconnu : ls => $ ls

305 Mot inconnu : ati-driver-installer-8 => ati-driver-installer-8.20.8-x86_64.run
305 Mot inconnu : x86_64 => ati-driver-installer-8.20.8-x86_64.run
305 Mot inconnu : run => ati-driver-installer-8.20.8-x86_64.run

306 Mot inconnu : Desktop => Desktop

307 Mot inconnu : fglrx-installer_8 => fglrx-installer_8.20.8-1_amd64.changes
307 Mot inconnu : _amd64 => fglrx-installer_8.20.8-1_amd64.changes

309 Mot inconnu : libdri => libdri.a.gz
309 Mot inconnu : gz => libdri.a.gz

310 Mot inconnu : ls => ls.txt
310 Mot inconnu : txt => ls.txt

311 Mot inconnu : rt2570-cvs-2006010913 => rt2570-cvs-2006010913

312 Mot inconnu : rt2570-cvs-daily => rt2570-cvs-daily.tar.gz
312 Mot inconnu : tar => rt2570-cvs-daily.tar.gz
312 Mot inconnu : gz => rt2570-cvs-daily.tar.gz

315 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement.
315 Guillemets typographiques ouvrants. =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement.
315 Mot inconnu : ls =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement.
315 Guillemets typographiques fermants. =>   * Lors de vos péripéties dans le monde de Linux, vous serez sûrement amené à lire d'autres documentations que celle-ci. Or les commandes inscrites dans ces dernières pourront se révéler beaucoup plus fastidieuses qu'un simple ''ls'', et vous aurez tendance à recopier bêtement (sauf votre respect) le contenu de cette commande. Or ce n'est pas comme cela que vous apprendrez à être autonome dans le monde de Linux. Ainsi, le caractère ''$'' vous obligera à réécrire la commande en tentant de comprendre sa signification. Celui-ci est aussi utilisé pour spécifier explicitement que ce qui suit est une commande à lancer dans le terminal, même si sur ce wiki la mise en forme le montre explicitement.

317 Il manque un espace insécable. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Il manque un espace insécable. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Copier-coller pour la verbe ou l’action, copié-collé (et ses variantes) pour ce qui est copié-collé. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Mot inconnu : linux => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Il manque un espace insécable. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 S’il s’agit de la préposition « à », il faut accentuer la majuscule. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Guillemets typographiques ouvrants. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Guillemets typographiques fermants. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Mot inconnu : DADVSI => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).
317 Il manque un espace insécable. => > **Autre formulation** : Un deuxième avantage découle de la présence du signe "$" : celle-ci empêche un copier/coller pur et simple d'une série de commandes consécutives (ce que vous rencontrerez probablement en parcourant ce wiki). En effet, l'objectif de ce wiki n'est pas seulement de vous apporter des solutions mais aussi de vous permettre de les comprendre et ainsi d'accroître votre connaissance, donc votre maîtrise, dans les systèmes GNU/linux. C'est pourquoi les rédacteurs de ce wiki font l'effort de vous donner les explications des commandes à exécuter. Notez bien que, sans cette volonté d'expliquer, ce wiki ne serait pas ce qu'il est aujourd'hui : vous ne trouveriez sans doute pas autant de solutions, les contributeurs ayant aussi leurs vies à côté. A la place vous utiliseriez des "scripts" (à définir) préconfigurés qui vous rapprocheraient d'un certain manque de possibilités que l'on constate dans le monde capitaliste où les industriels tentent de brider les logiciels pour lesquels l'utilisateur ne paye pas de licence. (Mais ceci est un autre débat, d'ailleurs le projet DADVSI l'alimente beaucoup de nos jours !).

321 Il manque un espace insécable. => L'interpréteur de commandes est l'interface entre l'utilisateur et le système d'exploitation, d'où son nom anglais « shell », qui signifie « coquille ».
321 Il manque un espace insécable. => L'interpréteur de commandes est l'interface entre l'utilisateur et le système d'exploitation, d'où son nom anglais « shell », qui signifie « coquille ».
321 Il manque un espace insécable. => L'interpréteur de commandes est l'interface entre l'utilisateur et le système d'exploitation, d'où son nom anglais « shell », qui signifie « coquille ».
321 Il manque un espace insécable. => L'interpréteur de commandes est l'interface entre l'utilisateur et le système d'exploitation, d'où son nom anglais « shell », qui signifie « coquille ».

323 Il manque un espace avant la parenthèse. => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])).
323 Il manque un espace insécable. => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])).
323 Mot inconnu : Commentcamarche => Le shell est ainsi chargé de faire l'intermédiaire entre le système d'exploitation et l'utilisateur grâce aux lignes de commandes saisies par ce dernier. Son rôle consiste à lire la ligne de commande, interpréter sa signification, exécuter la commande, puis retourner le résultat sur les sorties((Source : [[http://www.commentcamarche.net/linux/linshell.php3|Commentcamarche.net]])).

325 Mot inconnu : bash => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent.
325 Mot inconnu : zsh => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent.
325 Mot inconnu : csh => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent.
325 Une de ces ponctuations est superflue. => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent.
325 Typographie : points de suspension. Utilisez le caractère dédié. => Notez que le shell par défaut d'Ubuntu s'appelle [[bash]], mais qu'il en existe d'autres, selon les usages (zsh, csh, ...), pour lesquels le fonctionnement est légèrement différent.
329 Mot inconnu : nano => Si vous désirez pouvoir utiliser la souris dans les consoles, vous pouvez utiliser le programme **[[apt>gpm|gpm]]**. La souris est alors utilisable pour le traditionnel copier-coller par sélection ou dans certains programmes comme [[nano]] ou [[lynx]].

333 Mot inconnu : topic => {{topic>console}}

343 Il manque un espace insécable. => Aide :

351 Mot inconnu : BARRALIS => [[http://jp.barralis.com/linux-man/|Les pages de manuel en français sur le site de Jean-Philippe BARRALIS]]

354 Il manque un espace. => //Contributeurs [[:utilisateurs:Ju]], [[:utilisateurs:kmeleon]], [[:utilisateurs:Id2ndR]], [[utilisateurs/roschan]]//
354 Il manque un espace. => //Contributeurs [[:utilisateurs:Ju]], [[:utilisateurs:kmeleon]], [[:utilisateurs:Id2ndR]], [[utilisateurs/roschan]]//
354 Il manque un espace. => //Contributeurs [[:utilisateurs:Ju]], [[:utilisateurs:kmeleon]], [[:utilisateurs:Id2ndR]], [[utilisateurs/roschan]]//
354 Mot inconnu : roschan => //Contributeurs [[:utilisateurs:Ju]], [[:utilisateurs:kmeleon]], [[:utilisateurs:Id2ndR]], [[utilisateurs/roschan]]//
