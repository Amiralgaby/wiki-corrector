4 Il manque un espace insécable. => Faites un copier-coller du code ci-dessous dans un terminal et vous obtiendrez le genre de votre processeur !

7 Mot inconnu : sudo => sudo cat > /usr/local/sbin/processeur << "FinDeFichier"
7 Mot inconnu : cat => sudo cat > /usr/local/sbin/processeur << "FinDeFichier"
7 Guillemets typographiques ouvrants. => sudo cat > /usr/local/sbin/processeur << "FinDeFichier"
7 Mot inconnu : FinDeFichier => sudo cat > /usr/local/sbin/processeur << "FinDeFichier"
7 Guillemets typographiques fermants. => sudo cat > /usr/local/sbin/processeur << "FinDeFichier"

8 Il manque un espace insécable. => #!/bin/bash

10 Mot inconnu : ModeProcesseur => ModeProcesseur=$(lscpu | grep bit)
10 Mot inconnu : lscpu => ModeProcesseur=$(lscpu | grep bit)
10 Mot inconnu : grep => ModeProcesseur=$(lscpu | grep bit)

11 Pas d’espace après ce signe. => if [ "$(uname -m)" = "x86_64" ]; then
11 Mot inconnu : uname => if [ "$(uname -m)" = "x86_64" ]; then
11 Il manque un espace à côté du tiret. => if [ "$(uname -m)" = "x86_64" ]; then
11 Guillemets typographiques ouvrants. => if [ "$(uname -m)" = "x86_64" ]; then
11 Mot inconnu : x86_64 => if [ "$(uname -m)" = "x86_64" ]; then
11 Guillemets typographiques fermants. => if [ "$(uname -m)" = "x86_64" ]; then
11 Pas d’espace avant ce signe. => if [ "$(uname -m)" = "x86_64" ]; then
11 Mot inconnu : then => if [ "$(uname -m)" = "x86_64" ]; then

12 Mot inconnu : ModeOS => ModeOS="Linux 64 bits"
12 Guillemets typographiques ouvrants. => ModeOS="Linux 64 bits"
12 Guillemets typographiques fermants. => ModeOS="Linux 64 bits"

13 Mot inconnu : elif => elif [ "$(uname -m)" = "i686" ]; then
13 Pas d’espace après ce signe. => elif [ "$(uname -m)" = "i686" ]; then
13 Mot inconnu : uname => elif [ "$(uname -m)" = "i686" ]; then
13 Il manque un espace à côté du tiret. => elif [ "$(uname -m)" = "i686" ]; then
13 Guillemets typographiques ouvrants. => elif [ "$(uname -m)" = "i686" ]; then
13 Mot inconnu : i686 => elif [ "$(uname -m)" = "i686" ]; then
13 Guillemets typographiques fermants. => elif [ "$(uname -m)" = "i686" ]; then
13 Pas d’espace avant ce signe. => elif [ "$(uname -m)" = "i686" ]; then
13 Mot inconnu : then => elif [ "$(uname -m)" = "i686" ]; then

14 Mot inconnu : ModeOS => ModeOS="Linux 32 bits"
14 Guillemets typographiques ouvrants. => ModeOS="Linux 32 bits"
14 Guillemets typographiques fermants. => ModeOS="Linux 32 bits"

16 Mot inconnu : rm => for a in ' rm ' ' pm ' ' lm '; do

17 Mot inconnu : grep => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Mot inconnu : flags => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Mot inconnu : proc => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Mot inconnu : cpuinfo => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Mot inconnu : grep => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Il manque un espace à côté du tiret. => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Il manque un espace à côté du tiret. => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Guillemets typographiques fermants. => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Mot inconnu : sed => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')
17 Guillemets typographiques ouvrants. => Processeur=$(grep flags /proc/cpuinfo|grep -m 1 -o "$a"|sed 's/ //g')

18 Pas d’espace après ce signe. => if [ "$Processeur" = "lm" ]; then
18 Guillemets typographiques fermants. => if [ "$Processeur" = "lm" ]; then
18 Guillemets typographiques ouvrants. => if [ "$Processeur" = "lm" ]; then
18 Guillemets typographiques fermants. => if [ "$Processeur" = "lm" ]; then
18 Pas d’espace avant ce signe. => if [ "$Processeur" = "lm" ]; then
18 Mot inconnu : then => if [ "$Processeur" = "lm" ]; then

19 Mot inconnu : echo => echo "Processeur 64 Bits"
19 Guillemets typographiques ouvrants. => echo "Processeur 64 Bits"
19 Guillemets typographiques fermants. => echo "Processeur 64 Bits"

20 Mot inconnu : echo => echo "$ModeProcesseur"
20 Mot inconnu : ModeProcesseur => echo "$ModeProcesseur"
20 Guillemets typographiques fermants. => echo "$ModeProcesseur"

21 Mot inconnu : echo => echo "Linux 32 ou 64 bits : $ModeOS"
21 Guillemets typographiques ouvrants. => echo "Linux 32 ou 64 bits : $ModeOS"
21 Il manque un espace insécable. => echo "Linux 32 ou 64 bits : $ModeOS"
21 Mot inconnu : ModeOS => echo "Linux 32 ou 64 bits : $ModeOS"
21 Guillemets typographiques fermants. => echo "Linux 32 ou 64 bits : $ModeOS"

23 Mot inconnu : elif => elif [ "$Processeur" = "pm" ]; then
23 Pas d’espace après ce signe. => elif [ "$Processeur" = "pm" ]; then
23 Guillemets typographiques fermants. => elif [ "$Processeur" = "pm" ]; then
23 Guillemets typographiques ouvrants. => elif [ "$Processeur" = "pm" ]; then
23 Guillemets typographiques fermants. => elif [ "$Processeur" = "pm" ]; then
23 Pas d’espace avant ce signe. => elif [ "$Processeur" = "pm" ]; then
23 Mot inconnu : then => elif [ "$Processeur" = "pm" ]; then

24 Mot inconnu : echo => echo "Processeur 32 Bits"
24 Guillemets typographiques ouvrants. => echo "Processeur 32 Bits"
24 Guillemets typographiques fermants. => echo "Processeur 32 Bits"

25 Mot inconnu : echo => echo "$ModeProcesseur"
25 Mot inconnu : ModeProcesseur => echo "$ModeProcesseur"
25 Guillemets typographiques fermants. => echo "$ModeProcesseur"

26 Mot inconnu : echo => echo "Linux 32 ou 64 bits : $ModeOS"
26 Guillemets typographiques ouvrants. => echo "Linux 32 ou 64 bits : $ModeOS"
26 Il manque un espace insécable. => echo "Linux 32 ou 64 bits : $ModeOS"
26 Mot inconnu : ModeOS => echo "Linux 32 ou 64 bits : $ModeOS"
26 Guillemets typographiques fermants. => echo "Linux 32 ou 64 bits : $ModeOS"

28 Mot inconnu : elif => elif [ "$Processeur" = "rm" ]; then
28 Pas d’espace après ce signe. => elif [ "$Processeur" = "rm" ]; then
28 Guillemets typographiques fermants. => elif [ "$Processeur" = "rm" ]; then
28 Guillemets typographiques ouvrants. => elif [ "$Processeur" = "rm" ]; then
28 Mot inconnu : rm => elif [ "$Processeur" = "rm" ]; then
28 Guillemets typographiques fermants. => elif [ "$Processeur" = "rm" ]; then
28 Pas d’espace avant ce signe. => elif [ "$Processeur" = "rm" ]; then
28 Mot inconnu : then => elif [ "$Processeur" = "rm" ]; then

29 Mot inconnu : echo => echo "Processeur 16 Bits"
29 Guillemets typographiques ouvrants. => echo "Processeur 16 Bits"
29 Guillemets typographiques fermants. => echo "Processeur 16 Bits"

30 Mot inconnu : echo => echo "$ModeProcesseur"
30 Mot inconnu : ModeProcesseur => echo "$ModeProcesseur"
30 Guillemets typographiques fermants. => echo "$ModeProcesseur"

33 Mot inconnu : done => done

34 Il manque un espace insécable. => exit 0;

35 Mot inconnu : FinDeFichier => FinDeFichier

36 Mot inconnu : sudo => sudo chmod +x /usr/local/sbin/processeur
36 Mot inconnu : chmod => sudo chmod +x /usr/local/sbin/processeur

37 Mot inconnu : reset => reset;processeur
37 Il manque un espace insécable. => reset;processeur
37 Il manque un espace. => reset;processeur
