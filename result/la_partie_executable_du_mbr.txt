3 Mot inconnu : mbr => {{tag> tutoriel mbr BROUILLON}}

6 Mot inconnu : mbr => ====== Que trouve-t-on comme programme dans le mbr ======

8 Pour la moitié de “tour”, écrivez “demi-tour”. => Si vous êtes arrivés sur cette page par erreur, faites demi tour sans tarder car ici se trouve l'antre de la bête :-( - où il ne faut pas connaître la peur car vous allez découvrir les entrailles de votre machine. 8-o
8 Pas d’espace après ce signe. => Si vous êtes arrivés sur cette page par erreur, faites demi tour sans tarder car ici se trouve l'antre de la bête :-( - où il ne faut pas connaître la peur car vous allez découvrir les entrailles de votre machine. 8-o
8 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Si vous êtes arrivés sur cette page par erreur, faites demi tour sans tarder car ici se trouve l'antre de la bête :-( - où il ne faut pas connaître la peur car vous allez découvrir les entrailles de votre machine. 8-o
8 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Si vous êtes arrivés sur cette page par erreur, faites demi tour sans tarder car ici se trouve l'antre de la bête :-( - où il ne faut pas connaître la peur car vous allez découvrir les entrailles de votre machine. 8-o

10 Mot inconnu : mbr => Le mbr est le premier secteur du disque chargé en mémoire lors du démarrage d'un ordinateur. Il a pour fonction principale de rechercher une partition où se trouve un système d'exploitation à lancer.

12 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => Avant tout il faudra vérifier que la table des partitions est conforme - à défaut un message d'erreur sera affiché.

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Disposer des [[:sudo|droits d'administration]]

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Connaitre la numération hexadécimale.

18 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Connaitre le langage assembleur

19 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Avoir installé un assembleur/désassembleur comme le paquet [[apt>nasm]]
19 Mot inconnu : désassembleur =>   * Avoir installé un assembleur/désassembleur comme le paquet [[apt>nasm]]
19 Mot inconnu : nasm =>   * Avoir installé un assembleur/désassembleur comme le paquet [[apt>nasm]]

20 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

21 Il manque un espace insécable. => ===== Que se passe-t-il au démarrage d'un PC ? =====

23 Il manque un espace insécable. => Lors de la mise sous tension, différentes routines se mettent en place ; la première consiste à attendre que la tension de l'alimentation soit stabilisée puis des tests processeur, carte mère, barrettes de mémoire sont effectués. Ceci correspond à la séquence POST.

25 Mot inconnu : boot => Vient ensuite la recherche de périphériques de démarrage selon l'ordre de boot.

27 Accord de nombre erroné : « bios » est au pluriel. => Le bios charge alors le premier secteur du disque (512 octets) en mémoire vive à l'adresse 0000:7C00
27 Accord de nombre erroné : « bios » devrait être au singulier. => Le bios charge alors le premier secteur du disque (512 octets) en mémoire vive à l'adresse 0000:7C00
27 Mot inconnu : C00 => Le bios charge alors le premier secteur du disque (512 octets) en mémoire vive à l'adresse 0000:7C00

31 Mot inconnu : C00 => Une fois le chargement terminé et sans erreur, l'exécution se poursuit à l'adresse 0000:7C00, et donc suit les instructions qui figurent dans le premier secteur du mbr
31 Mot inconnu : mbr => Une fois le chargement terminé et sans erreur, l'exécution se poursuit à l'adresse 0000:7C00, et donc suit les instructions qui figurent dans le premier secteur du mbr

33 Mot inconnu : UEFI => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>
33 Mot inconnu : GPT => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>
33 Mot inconnu : mbr => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>
33 Mot inconnu : protector => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>
33 Mot inconnu : GPT => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>
33 Mot inconnu : mbr => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>
33 Mot inconnu : protector => <note tip>Lors d'un démarrage en mode UEFI avec un disque GPT, le mbr (protector) ne semble quasiment pas utilisé et seul l'emplacement de l'en-tête GPT est nécessaire (unique entrée de la table des partitions du mbr protector)</note>

36 Mot inconnu : mbr => Nous avons vu comment afficher le contenu du mbr ; ici il faudra effectuer deux opérations :
36 Il manque un espace insécable. => Nous avons vu comment afficher le contenu du mbr ; ici il faudra effectuer deux opérations :
36 Il manque un espace insécable. => Nous avons vu comment afficher le contenu du mbr ; ici il faudra effectuer deux opérations :

39 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - effectuer une copie de la partie exécutable du mbr (les 440 premiers octets) sous la forme d'un fichier
39 Mot inconnu : mbr => - effectuer une copie de la partie exécutable du mbr (les 440 premiers octets) sous la forme d'un fichier

41 Dialogues et énumérations : un tiret cadratin [1] ou demi-cadratin [2], suivi d’un espace insécable, est requis. => - utiliser un désassembleur pour afficher les instructions sous une forme lisibles par un humain (c'est tout relatif - à moins que je ne sois pas humain) au lieu de valeurs hexadécimales (opcodes)
41 Mot inconnu : désassembleur => - utiliser un désassembleur pour afficher les instructions sous une forme lisibles par un humain (c'est tout relatif - à moins que je ne sois pas humain) au lieu de valeurs hexadécimales (opcodes)
41 Accord de nombre erroné avec « une forme » : « lisibles » devrait être au singulier. => - utiliser un désassembleur pour afficher les instructions sous une forme lisibles par un humain (c'est tout relatif - à moins que je ne sois pas humain) au lieu de valeurs hexadécimales (opcodes)
41 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => - utiliser un désassembleur pour afficher les instructions sous une forme lisibles par un humain (c'est tout relatif - à moins que je ne sois pas humain) au lieu de valeurs hexadécimales (opcodes)
41 Mot inconnu : opcodes => - utiliser un désassembleur pour afficher les instructions sous une forme lisibles par un humain (c'est tout relatif - à moins que je ne sois pas humain) au lieu de valeurs hexadécimales (opcodes)

47 Mot inconnu : opcodes => La deuxième opération transforme le fichier d'instruction hexadécimales en adresses, opcodes, instructions
49 Il manque un espace à côté du tiret. => <code>ndisasm -b16 ~/mbr_exec.bs > ~/mbr_exec.asm</code>

51 Mot inconnu : ndisasm => ndisasm est le désassembleur du paquet nasm, -b16 indique que le code doit être considéré comme de l'assembleur 16 bits.
51 Mot inconnu : désassembleur => ndisasm est le désassembleur du paquet nasm, -b16 indique que le code doit être considéré comme de l'assembleur 16 bits.
51 Mot inconnu : nasm => ndisasm est le désassembleur du paquet nasm, -b16 indique que le code doit être considéré comme de l'assembleur 16 bits.
51 Mot inconnu : b16 => ndisasm est le désassembleur du paquet nasm, -b16 indique que le code doit être considéré comme de l'assembleur 16 bits.

52 Mot inconnu : mbr_exec => Le résultat est écrit dans le fichier ~/mbr_exec.asm
52 Mot inconnu : asm => Le résultat est écrit dans le fichier ~/mbr_exec.asm

54 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => Le résultat brut pose problème car des chaines de texte ont été considérées comme des instructions et sont donc mal interprétées. Il faut alors procéder par tâtonnement pour les repérer (par exemple avec un éditeur hexa) et les exclure du traitement de désassemblage.
54 Mot inconnu : hexa => Le résultat brut pose problème car des chaines de texte ont été considérées comme des instructions et sont donc mal interprétées. Il faut alors procéder par tâtonnement pour les repérer (par exemple avec un éditeur hexa) et les exclure du traitement de désassemblage.

58 Mot inconnu : mbr => ===== Exemple de zone exécutable d'un mbr =====

60 Mot inconnu : mbr => L'exemple qui suit concerne un mbr obtenu lors de l'installation de Lucid. Lucid a été installé en mettant grub-pc dans le mbr.
60 Mot inconnu : Lucid => L'exemple qui suit concerne un mbr obtenu lors de l'installation de Lucid. Lucid a été installé en mettant grub-pc dans le mbr.
60 Mot inconnu : Lucid => L'exemple qui suit concerne un mbr obtenu lors de l'installation de Lucid. Lucid a été installé en mettant grub-pc dans le mbr.
60 Mot inconnu : grub-pc => L'exemple qui suit concerne un mbr obtenu lors de l'installation de Lucid. Lucid a été installé en mettant grub-pc dans le mbr.
60 Mot inconnu : mbr => L'exemple qui suit concerne un mbr obtenu lors de l'installation de Lucid. Lucid a été installé en mettant grub-pc dans le mbr.

64 Accord de nombre erroné : « bios » devrait être au singulier. => Le programme utilise des fonctions du bios (seules fonctions disponibles à ce stade du démarrage du PC) et je me suis servi de la liste des [[http://www.ctyme.com/intr/int.htm|interruptions]]

65 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  établies par Ralph Brown.

70 Il manque un espace insécable. => <code>; Programme 16 bits chargé en 0000:7C00
70 Mot inconnu : C00 => <code>; Programme 16 bits chargé en 0000:7C00

71 Espace(s) surnuméraire(s) à supprimer. => 00000000  EB63              jmp short 0x65
71 Mot inconnu : EB63 => 00000000  EB63              jmp short 0x65
71 Espace(s) surnuméraire(s) à supprimer. => 00000000  EB63              jmp short 0x65
71 Mot inconnu : jmp => 00000000  EB63              jmp short 0x65
71 Mot inconnu : x65 => 00000000  EB63              jmp short 0x65

72 Espace(s) surnuméraire(s) à supprimer. => 00000002  90                nop
72 Espace(s) surnuméraire(s) à supprimer. => 00000002  90                nop
72 Mot inconnu : nop => 00000002  90                nop

73 Espace(s) surnuméraire(s) à supprimer. => 00000003  D0
73 Mot inconnu : D0 => 00000003  D0

74 Mot inconnu : resb => 00000004		resb 1	; mode : 0x00 pour le mode CHS, 0x01 pour le mode LBA
74 Il manque un espace insécable. => 00000004		resb 1	; mode : 0x00 pour le mode CHS, 0x01 pour le mode LBA
74 Mot inconnu : x00 => 00000004		resb 1	; mode : 0x00 pour le mode CHS, 0x01 pour le mode LBA
74 Mot inconnu : CHS => 00000004		resb 1	; mode : 0x00 pour le mode CHS, 0x01 pour le mode LBA
74 Mot inconnu : x01 => 00000004		resb 1	; mode : 0x00 pour le mode CHS, 0x01 pour le mode LBA
74 Mot inconnu : LBA => 00000004		resb 1	; mode : 0x00 pour le mode CHS, 0x01 pour le mode LBA

76 Mot inconnu : Buffer => ; Buffer pour chargement en mode CHS
76 Mot inconnu : CHS => ; Buffer pour chargement en mode CHS

77 Mot inconnu : resd => 00000005		resd 1	; nombre de secteurs

78 Mot inconnu : resd => 00000009		resd 1	; nombre de têtes

79 Mot inconnu : resd => 0000000D		resd 1	; nombre de cylindres

81 Mot inconnu : Buffer => ; Buffer pour chargement en mode LBA
81 Mot inconnu : LBA => ; Buffer pour chargement en mode LBA

82 Espace(s) surnuméraire(s) à supprimer. => 00000005  	        resw 1	; 0x0010 - taille paquet
82 Incohérence : espace et tabulation. => 00000005  	        resw 1	; 0x0010 - taille paquet
82 Mot inconnu : resw => 00000005  	        resw 1	; 0x0010 - taille paquet
82 Mot inconnu : x0010 => 00000005  	        resw 1	; 0x0010 - taille paquet
82 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 00000005  	        resw 1	; 0x0010 - taille paquet

83 Mot inconnu : resw => 00000007		resw 1	; 0x0001 - nb blocs à transférer
83 Mot inconnu : x0001 => 00000007		resw 1	; 0x0001 - nb blocs à transférer
83 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 00000007		resw 1	; 0x0001 - nb blocs à transférer
83 Mot inconnu : nb => 00000007		resw 1	; 0x0001 - nb blocs à transférer

84 Mot inconnu : resw => 00000009		resw 1	; 0x0000
84 Mot inconnu : x0000 => 00000009		resw 1	; 0x0000

85 Mot inconnu : resw => 0000000B		resw 1	; 0x7000 - buffer en 0x70000000
85 Mot inconnu : x7000 => 0000000B		resw 1	; 0x7000 - buffer en 0x70000000
85 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 0000000B		resw 1	; 0x7000 - buffer en 0x70000000
85 Mot inconnu : buffer => 0000000B		resw 1	; 0x7000 - buffer en 0x70000000
85 Mot inconnu : x70000000 => 0000000B		resw 1	; 0x7000 - buffer en 0x70000000

86 Mot inconnu : resd => 0000000D		resd 1	; 0x00000001 - emplacement LBA du bloc à charger
86 Mot inconnu : x00000001 => 0000000D		resd 1	; 0x00000001 - emplacement LBA du bloc à charger
86 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 0000000D		resd 1	; 0x00000001 - emplacement LBA du bloc à charger
86 Mot inconnu : LBA => 0000000D		resd 1	; 0x00000001 - emplacement LBA du bloc à charger

87 Mot inconnu : resd => 00000011		resd 1	; 0x00000000 - démarrer au bloc 0x0000000000000001
87 Mot inconnu : x00000000 => 00000011		resd 1	; 0x00000000 - démarrer au bloc 0x0000000000000001
87 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 00000011		resd 1	; 0x00000000 - démarrer au bloc 0x0000000000000001
87 Mot inconnu : x0000000000000001 => 00000011		resd 1	; 0x00000000 - démarrer au bloc 0x0000000000000001

90 Espace(s) surnuméraire(s) à supprimer. => 0000005A  0080              dw 0x8000           ; Emplacement de l'offset où le contenu du tampon sera copié
90 Espace(s) surnuméraire(s) à supprimer. => 0000005A  0080              dw 0x8000           ; Emplacement de l'offset où le contenu du tampon sera copié
90 Mot inconnu : dw => 0000005A  0080              dw 0x8000           ; Emplacement de l'offset où le contenu du tampon sera copié
90 Mot inconnu : x8000 => 0000005A  0080              dw 0x8000           ; Emplacement de l'offset où le contenu du tampon sera copié
90 Espace(s) surnuméraire(s) à supprimer. => 0000005A  0080              dw 0x8000           ; Emplacement de l'offset où le contenu du tampon sera copié
90 Il manque un espace insécable. => 0000005A  0080              dw 0x8000           ; Emplacement de l'offset où le contenu du tampon sera copié

91 Espace(s) surnuméraire(s) à supprimer. => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Formatage des grands nombres. => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Espace(s) surnuméraire(s) à supprimer. => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Mot inconnu : dd => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Mot inconnu : x00000001 => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Mot inconnu : LBA => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Mot inconnu : core => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)
91 Mot inconnu : img => 0000005C  01000000          dd 0x00000001	; Adresse LBA (valeur basse) où se trouve le secteur suivant de chargement (core.img)

92 Espace(s) surnuméraire(s) à supprimer. => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA
92 Formatage des grands nombres. => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA
92 Espace(s) surnuméraire(s) à supprimer. => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA
92 Mot inconnu : dd => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA
92 Mot inconnu : x00000000 => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA
92 Mot inconnu : qword => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA
92 Mot inconnu : LBA => 00000060  00000000          dd 0x00000000	; Valeur haute du qword de l'adresse LBA

93 Espace(s) surnuméraire(s) à supprimer. => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : FF => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Espace(s) surnuméraire(s) à supprimer. => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : db => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : xff => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Espace(s) surnuméraire(s) à supprimer. => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Il manque un espace insécable. => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : xff => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : core => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : img => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : boot => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : x80 => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Mot inconnu : x81 => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...
93 Typographie : points de suspension. Utilisez le caractère dédié. => 00000064  FF                db 0xff             ; 0xff pour le chargement de core.img sur le disque de boot, si 0x80 premier disque dur, si 0x81 deuxième...

95 Espace(s) surnuméraire(s) à supprimer. => 00000065  FA                cli
95 Espace(s) surnuméraire(s) à supprimer. => 00000065  FA                cli
95 Mot inconnu : cli => 00000065  FA                cli

96 Espace(s) surnuméraire(s) à supprimer. => 00000066  90                nop
96 Espace(s) surnuméraire(s) à supprimer. => 00000066  90                nop
96 Mot inconnu : nop => 00000066  90                nop

97 Espace(s) surnuméraire(s) à supprimer. => 00000067  90                nop
97 Espace(s) surnuméraire(s) à supprimer. => 00000067  90                nop
97 Mot inconnu : nop => 00000067  90                nop

98 Espace(s) surnuméraire(s) à supprimer. => 00000068  F6C280            test dl,0x80	; teste le bit 7 de dl (si activé=disque dur)
98 Mot inconnu : F6C280 => 00000068  F6C280            test dl,0x80	; teste le bit 7 de dl (si activé=disque dur)
98 Espace(s) surnuméraire(s) à supprimer. => 00000068  F6C280            test dl,0x80	; teste le bit 7 de dl (si activé=disque dur)
98 Il manque un espace. => 00000068  F6C280            test dl,0x80	; teste le bit 7 de dl (si activé=disque dur)
98 Mot inconnu : x80 => 00000068  F6C280            test dl,0x80	; teste le bit 7 de dl (si activé=disque dur)

99 Espace(s) surnuméraire(s) à supprimer. => 0000006B  7502              jnz 0x6f		; si disque dur
99 Espace(s) surnuméraire(s) à supprimer. => 0000006B  7502              jnz 0x6f		; si disque dur
99 Mot inconnu : jnz => 0000006B  7502              jnz 0x6f		; si disque dur
99 Mot inconnu : x6f => 0000006B  7502              jnz 0x6f		; si disque dur

100 Espace(s) surnuméraire(s) à supprimer. => 0000006D  B280              mov dl,0x80		; marque le périphérique comme disque dur
100 Mot inconnu : B280 => 0000006D  B280              mov dl,0x80		; marque le périphérique comme disque dur
100 Espace(s) surnuméraire(s) à supprimer. => 0000006D  B280              mov dl,0x80		; marque le périphérique comme disque dur
100 Mot inconnu : mov => 0000006D  B280              mov dl,0x80		; marque le périphérique comme disque dur
100 Il manque un espace. => 0000006D  B280              mov dl,0x80		; marque le périphérique comme disque dur
100 Mot inconnu : x80 => 0000006D  B280              mov dl,0x80		; marque le périphérique comme disque dur

101 Espace(s) surnuméraire(s) à supprimer. => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : EA747C0000 => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Espace(s) surnuméraire(s) à supprimer. => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : jmp => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : word => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : x0 => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Il manque un espace. => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : x7c74 => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : mbr => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)
101 Mot inconnu : c00 => 0000006F  EA747C0000        jmp word 0x0:0x7c74	; saute à la ligne suivante (car mbr chargé en 0000:7c00)

102 Espace(s) surnuméraire(s) à supprimer. => 00000074  31C0              xor ax,ax
102 Mot inconnu : C0 => 00000074  31C0              xor ax,ax
102 Espace(s) surnuméraire(s) à supprimer. => 00000074  31C0              xor ax,ax
102 Mot inconnu : xor => 00000074  31C0              xor ax,ax
102 Mot inconnu : ax => 00000074  31C0              xor ax,ax
102 Il manque un espace. => 00000074  31C0              xor ax,ax
102 Mot inconnu : ax => 00000074  31C0              xor ax,ax

103 Espace(s) surnuméraire(s) à supprimer. => 00000076  8ED8              mov ds,ax
103 Mot inconnu : ED8 => 00000076  8ED8              mov ds,ax
103 Espace(s) surnuméraire(s) à supprimer. => 00000076  8ED8              mov ds,ax
103 Mot inconnu : mov => 00000076  8ED8              mov ds,ax
103 Il manque un espace. => 00000076  8ED8              mov ds,ax
103 Mot inconnu : ax => 00000076  8ED8              mov ds,ax

104 Espace(s) surnuméraire(s) à supprimer. => 00000078  8ED0              mov ss,ax
104 Mot inconnu : ED0 => 00000078  8ED0              mov ss,ax
104 Espace(s) surnuméraire(s) à supprimer. => 00000078  8ED0              mov ss,ax
104 Mot inconnu : mov => 00000078  8ED0              mov ss,ax
104 Mot inconnu : ss => 00000078  8ED0              mov ss,ax
104 Il manque un espace. => 00000078  8ED0              mov ss,ax
104 Mot inconnu : ax => 00000078  8ED0              mov ss,ax

105 Espace(s) surnuméraire(s) à supprimer. => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000
105 Mot inconnu : BC0020 => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000
105 Espace(s) surnuméraire(s) à supprimer. => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000
105 Mot inconnu : mov => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000
105 Mot inconnu : sp => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000
105 Il manque un espace. => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000
105 Mot inconnu : x2000 => 0000007A  BC0020            mov sp,0x2000	; la pile pointe sur 0000:2000

106 Espace(s) surnuméraire(s) à supprimer. => 0000007D  FB                sti
106 Mot inconnu : FB => 0000007D  FB                sti
106 Espace(s) surnuméraire(s) à supprimer. => 0000007D  FB                sti
106 Mot inconnu : sti => 0000007D  FB                sti

107 Espace(s) surnuméraire(s) à supprimer. => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)
107 Mot inconnu : A0647C => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)
107 Espace(s) surnuméraire(s) à supprimer. => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)
107 Mot inconnu : mov => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)
107 Mot inconnu : x7c64 => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)
107 Mot inconnu : C64 => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)
107 Mot inconnu : xff => 0000007E  A0647C            mov al,[0x7c64]	; examine le contenu de l'adresse 7C64 (ici 0xff)

108 Espace(s) surnuméraire(s) à supprimer. => 00000081  3CFF              cmp al,0xff
108 Mot inconnu : CFF => 00000081  3CFF              cmp al,0xff
108 Espace(s) surnuméraire(s) à supprimer. => 00000081  3CFF              cmp al,0xff
108 Mot inconnu : cmp => 00000081  3CFF              cmp al,0xff
108 Il manque un espace. => 00000081  3CFF              cmp al,0xff
108 Mot inconnu : xff => 00000081  3CFF              cmp al,0xff

109 Espace(s) surnuméraire(s) à supprimer. => 00000083  7402              jz 0x87
109 Espace(s) surnuméraire(s) à supprimer. => 00000083  7402              jz 0x87
109 Mot inconnu : jz => 00000083  7402              jz 0x87
109 Mot inconnu : x87 => 00000083  7402              jz 0x87

110 Espace(s) surnuméraire(s) à supprimer. => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Mot inconnu : C2 => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Espace(s) surnuméraire(s) à supprimer. => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Mot inconnu : mov => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Il manque un espace. => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Mot inconnu : xff => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Mot inconnu : core => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque
110 Mot inconnu : img => 00000085  88C2              mov dl,al		; si non égal à 0xff, sauvegardé dans dl - si core.img est sur un autre disque

111 Espace(s) surnuméraire(s) à supprimer. => 00000087  52                push dx
111 Espace(s) surnuméraire(s) à supprimer. => 00000087  52                push dx
111 Mot inconnu : push => 00000087  52                push dx
111 Mot inconnu : dx => 00000087  52                push dx

112 Espace(s) surnuméraire(s) à supprimer. => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Mot inconnu : BB1704 => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Espace(s) surnuméraire(s) à supprimer. => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Mot inconnu : mov => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Mot inconnu : bx => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Il manque un espace. => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Mot inconnu : x417 => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Espace(s) surnuméraire(s) à supprimer. => 00000088  BB1704            mov bx,0x417        ; adresse clavier
112 Il manque un espace insécable. => 00000088  BB1704            mov bx,0x417        ; adresse clavier

113 Espace(s) surnuméraire(s) à supprimer. => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Formatage des grands nombres. => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Espace(s) surnuméraire(s) à supprimer. => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Mot inconnu : and => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Mot inconnu : bx => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Mot inconnu : x3 => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Espace(s) surnuméraire(s) à supprimer. => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Il manque un espace insécable. => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée
113 Mot inconnu : shift => 0000008B  802703            and byte [bx],0x3   ; teste si une touche shift est activée

114 Espace(s) surnuméraire(s) à supprimer. => 0000008E  7406              jz 0x96
114 Espace(s) surnuméraire(s) à supprimer. => 0000008E  7406              jz 0x96
114 Mot inconnu : jz => 0000008E  7406              jz 0x96
114 Mot inconnu : x96 => 0000008E  7406              jz 0x96

115 Espace(s) surnuméraire(s) à supprimer. => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Mot inconnu : BE887D => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Espace(s) surnuméraire(s) à supprimer. => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Mot inconnu : mov => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Il manque un espace. => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Mot inconnu : x7d88 => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Guillemets typographiques ouvrants. => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Mot inconnu : GRUB => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"
115 Guillemets typographiques fermants. => 00000090  BE887D            mov si,0x7d88	; pointe sur la chaine "GRUB"

116 Espace(s) surnuméraire(s) à supprimer. => 00000093  E81C01            call word 0x1b2
116 Mot inconnu : E81C01 => 00000093  E81C01            call word 0x1b2
116 Espace(s) surnuméraire(s) à supprimer. => 00000093  E81C01            call word 0x1b2
116 Mot inconnu : call => 00000093  E81C01            call word 0x1b2
116 Mot inconnu : word => 00000093  E81C01            call word 0x1b2
116 Mot inconnu : x1b2 => 00000093  E81C01            call word 0x1b2

118 Espace(s) surnuméraire(s) à supprimer. => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement
118 Mot inconnu : BE057C => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement
118 Espace(s) surnuméraire(s) à supprimer. => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement
118 Mot inconnu : mov => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement
118 Il manque un espace. => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement
118 Mot inconnu : x7c05 => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement
118 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => 00000096  BE057C            mov si,0x7c05	; définit une zone tampon pour les paramètres de chargement

119 Espace(s) surnuméraire(s) à supprimer. => 00000099  F6C280            test dl,0x80	; teste si disque dur
119 Mot inconnu : F6C280 => 00000099  F6C280            test dl,0x80	; teste si disque dur
119 Espace(s) surnuméraire(s) à supprimer. => 00000099  F6C280            test dl,0x80	; teste si disque dur
119 Il manque un espace. => 00000099  F6C280            test dl,0x80	; teste si disque dur
119 Mot inconnu : x80 => 00000099  F6C280            test dl,0x80	; teste si disque dur

120 Espace(s) surnuméraire(s) à supprimer. => 0000009C  7448              jz 0xe6		; pas disque dur
120 Espace(s) surnuméraire(s) à supprimer. => 0000009C  7448              jz 0xe6		; pas disque dur
120 Mot inconnu : jz => 0000009C  7448              jz 0xe6		; pas disque dur
120 Mot inconnu : xe6 => 0000009C  7448              jz 0xe6		; pas disque dur

121 Espace(s) surnuméraire(s) à supprimer. => 0000009E  B441              mov ah,0x41
121 Mot inconnu : B441 => 0000009E  B441              mov ah,0x41
121 Espace(s) surnuméraire(s) à supprimer. => 0000009E  B441              mov ah,0x41
121 Mot inconnu : mov => 0000009E  B441              mov ah,0x41
121 Il manque un espace. => 0000009E  B441              mov ah,0x41
121 Mot inconnu : x41 => 0000009E  B441              mov ah,0x41

122 Mot inconnu : A0 => 000000A0  BBAA55            mov bx,0x55aa
122 Espace(s) surnuméraire(s) à supprimer. => 000000A0  BBAA55            mov bx,0x55aa
122 Mot inconnu : BBAA55 => 000000A0  BBAA55            mov bx,0x55aa
122 Espace(s) surnuméraire(s) à supprimer. => 000000A0  BBAA55            mov bx,0x55aa
122 Mot inconnu : mov => 000000A0  BBAA55            mov bx,0x55aa
122 Mot inconnu : bx => 000000A0  BBAA55            mov bx,0x55aa
122 Il manque un espace. => 000000A0  BBAA55            mov bx,0x55aa
122 Mot inconnu : x55aa => 000000A0  BBAA55            mov bx,0x55aa

123 Mot inconnu : A3 => 000000A3  CD13              int 0x13		; installation check
123 Espace(s) surnuméraire(s) à supprimer. => 000000A3  CD13              int 0x13		; installation check
123 Mot inconnu : CD13 => 000000A3  CD13              int 0x13		; installation check
123 Espace(s) surnuméraire(s) à supprimer. => 000000A3  CD13              int 0x13		; installation check
123 Mot inconnu : int => 000000A3  CD13              int 0x13		; installation check
123 Mot inconnu : x13 => 000000A3  CD13              int 0x13		; installation check
123 Mot inconnu : check => 000000A3  CD13              int 0x13		; installation check

124 Mot inconnu : A5 => 000000A5  5A                pop dx
124 Espace(s) surnuméraire(s) à supprimer. => 000000A5  5A                pop dx
124 Espace(s) surnuméraire(s) à supprimer. => 000000A5  5A                pop dx
124 Mot inconnu : dx => 000000A5  5A                pop dx

125 Mot inconnu : A6 => 000000A6  52                push dx
125 Espace(s) surnuméraire(s) à supprimer. => 000000A6  52                push dx
125 Espace(s) surnuméraire(s) à supprimer. => 000000A6  52                push dx
125 Mot inconnu : push => 000000A6  52                push dx
125 Mot inconnu : dx => 000000A6  52                push dx

126 Mot inconnu : A7 => 000000A7  723D              jc 0xe6		; extensions non supportées
126 Espace(s) surnuméraire(s) à supprimer. => 000000A7  723D              jc 0xe6		; extensions non supportées
126 Espace(s) surnuméraire(s) à supprimer. => 000000A7  723D              jc 0xe6		; extensions non supportées
126 Mot inconnu : jc => 000000A7  723D              jc 0xe6		; extensions non supportées
126 Mot inconnu : xe6 => 000000A7  723D              jc 0xe6		; extensions non supportées

127 Mot inconnu : A9 => 000000A9  81FB55AA          cmp bx,0xaa55
127 Espace(s) surnuméraire(s) à supprimer. => 000000A9  81FB55AA          cmp bx,0xaa55
127 Mot inconnu : FB55AA => 000000A9  81FB55AA          cmp bx,0xaa55
127 Espace(s) surnuméraire(s) à supprimer. => 000000A9  81FB55AA          cmp bx,0xaa55
127 Mot inconnu : cmp => 000000A9  81FB55AA          cmp bx,0xaa55
127 Mot inconnu : bx => 000000A9  81FB55AA          cmp bx,0xaa55
127 Il manque un espace. => 000000A9  81FB55AA          cmp bx,0xaa55
127 Mot inconnu : xaa55 => 000000A9  81FB55AA          cmp bx,0xaa55

128 Espace(s) surnuméraire(s) à supprimer. => 000000AD  7537              jnz 0xe6		; extension non installée
128 Espace(s) surnuméraire(s) à supprimer. => 000000AD  7537              jnz 0xe6		; extension non installée
128 Mot inconnu : jnz => 000000AD  7537              jnz 0xe6		; extension non installée
128 Mot inconnu : xe6 => 000000AD  7537              jnz 0xe6		; extension non installée

130 Mot inconnu : AF => 000000AF  83E101            and cx,byte +0x1
130 Espace(s) surnuméraire(s) à supprimer. => 000000AF  83E101            and cx,byte +0x1
130 Mot inconnu : E101 => 000000AF  83E101            and cx,byte +0x1
130 Espace(s) surnuméraire(s) à supprimer. => 000000AF  83E101            and cx,byte +0x1
130 Mot inconnu : and => 000000AF  83E101            and cx,byte +0x1
130 Mot inconnu : cx => 000000AF  83E101            and cx,byte +0x1
130 Il manque un espace. => 000000AF  83E101            and cx,byte +0x1
130 Mot inconnu : x1 => 000000AF  83E101            and cx,byte +0x1

131 Mot inconnu : B2 => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées
131 Espace(s) surnuméraire(s) à supprimer. => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées
131 Espace(s) surnuméraire(s) à supprimer. => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées
131 Mot inconnu : jz => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées
131 Mot inconnu : xe6 => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées
131 Avec une unité de mesure, mettez un espace insécable. => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées
131 Avec une unité de mesure, mettez un espace insécable. => 000000B2  7432              jz 0xe6		; fonctions 42h-44h, 47h et 48h non supportées

133 Mot inconnu : lba_mode => ; traitement extension lba_mode

134 Mot inconnu : B4 => 000000B4  31C0              xor ax,ax
134 Espace(s) surnuméraire(s) à supprimer. => 000000B4  31C0              xor ax,ax
134 Mot inconnu : C0 => 000000B4  31C0              xor ax,ax
134 Espace(s) surnuméraire(s) à supprimer. => 000000B4  31C0              xor ax,ax
134 Mot inconnu : xor => 000000B4  31C0              xor ax,ax
134 Mot inconnu : ax => 000000B4  31C0              xor ax,ax
134 Il manque un espace. => 000000B4  31C0              xor ax,ax
134 Mot inconnu : ax => 000000B4  31C0              xor ax,ax

135 Mot inconnu : B6 => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Espace(s) surnuméraire(s) à supprimer. => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Formatage des grands nombres. => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Espace(s) surnuméraire(s) à supprimer. => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Mot inconnu : mov => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Mot inconnu : x4 => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Mot inconnu : ax => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Mot inconnu : c09 => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a
135 Mot inconnu : c0a => 000000B6  894404            mov [si+0x4],ax	; met zéro en 7c09 et 7c0a

136 Mot inconnu : B9 => 000000B9  40                inc ax
136 Espace(s) surnuméraire(s) à supprimer. => 000000B9  40                inc ax
136 Espace(s) surnuméraire(s) à supprimer. => 000000B9  40                inc ax
136 Mot inconnu : inc => 000000B9  40                inc ax
136 Mot inconnu : ax => 000000B9  40                inc ax

137 Espace(s) surnuméraire(s) à supprimer. => 000000BA  8844FF            mov [si-0x1],al	; met 1 en 7c04 (1=lba_mode)
137 Mot inconnu : FF => 000000BA  8844FF            mov [si-0x1],al	; met 1 en 7c04 (1=lba_mode)
137 Espace(s) surnuméraire(s) à supprimer. => 000000BA  8844FF            mov [si-0x1],al	; met 1 en 7c04 (1=lba_mode)
137 Mot inconnu : mov => 000000BA  8844FF            mov [si-0x1],al	; met 1 en 7c04 (1=lba_mode)
137 Mot inconnu : c04 => 000000BA  8844FF            mov [si-0x1],al	; met 1 en 7c04 (1=lba_mode)
137 Mot inconnu : lba_mode => 000000BA  8844FF            mov [si-0x1],al	; met 1 en 7c04 (1=lba_mode)

138 Espace(s) surnuméraire(s) à supprimer. => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Formatage des grands nombres. => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Espace(s) surnuméraire(s) à supprimer. => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Mot inconnu : mov => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Mot inconnu : x2 => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Mot inconnu : ax => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Mot inconnu : x0001 => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07
138 Mot inconnu : c07 => 000000BD  894402            mov [si+0x2],ax	; met 0x0001 en 7c07

139 Mot inconnu : C0 => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Espace(s) surnuméraire(s) à supprimer. => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Mot inconnu : C7041000 => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Espace(s) surnuméraire(s) à supprimer. => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Mot inconnu : mov => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Mot inconnu : word => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Mot inconnu : x10 => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Mot inconnu : x0010 => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05
139 Mot inconnu : c05 => 000000C0  C7041000          mov word [si],0x10	; met 0x0010 en 7c05

140 Mot inconnu : C4 => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Espace(s) surnuméraire(s) à supprimer. => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : B1E5C7C => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Espace(s) surnuméraire(s) à supprimer. => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : mov => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : ebx => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : x7c5c => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Il manque un espace insécable. => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : qword => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : core => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img
140 Mot inconnu : img => 000000C4  668B1E5C7C        mov ebx,[0x7c5c]    ; récupère l'emplacement (partie basse du qword) de core.img

141 Mot inconnu : C9 => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Espace(s) surnuméraire(s) à supprimer. => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Mot inconnu : C08 => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Espace(s) surnuméraire(s) à supprimer. => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Mot inconnu : mov => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Mot inconnu : x8 => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Mot inconnu : ebx => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Espace(s) surnuméraire(s) à supprimer. => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger
141 Il manque un espace insécable. => 000000C9  66895C08          mov [si+0x8],ebx    ; sauvegarde cet emplacement pour le charger

142 Espace(s) surnuméraire(s) à supprimer. => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : B1E607C => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Espace(s) surnuméraire(s) à supprimer. => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : mov => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : ebx => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : x7c60 => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Il manque un espace insécable. => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : qword => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : core => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img
142 Mot inconnu : img => 000000CD  668B1E607C        mov ebx,[0x7c60]    ; récupère la partie haute du qword de core.img

143 Mot inconnu : D2 => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Espace(s) surnuméraire(s) à supprimer. => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Mot inconnu : C0C => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Espace(s) surnuméraire(s) à supprimer. => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Mot inconnu : mov => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Mot inconnu : xc => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Mot inconnu : ebx => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Espace(s) surnuméraire(s) à supprimer. => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde
143 Il manque un espace insécable. => 000000D2  66895C0C          mov [si+0xc],ebx    ; sauvegarde

144 Mot inconnu : D6 => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Espace(s) surnuméraire(s) à supprimer. => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Mot inconnu : C744060070 => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Espace(s) surnuméraire(s) à supprimer. => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Mot inconnu : mov => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Mot inconnu : word => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Mot inconnu : x6 => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Mot inconnu : x7000 => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Espace(s) surnuméraire(s) à supprimer. => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon
144 Il manque un espace insécable. => 000000D6  C744060070        mov word [si+0x6],0x7000  ; adresse de segment du tampon

145 Mot inconnu : DB => 000000DB  B442              mov ah,0x42
145 Espace(s) surnuméraire(s) à supprimer. => 000000DB  B442              mov ah,0x42
145 Mot inconnu : B442 => 000000DB  B442              mov ah,0x42
145 Espace(s) surnuméraire(s) à supprimer. => 000000DB  B442              mov ah,0x42
145 Mot inconnu : mov => 000000DB  B442              mov ah,0x42
145 Il manque un espace. => 000000DB  B442              mov ah,0x42
145 Mot inconnu : x42 => 000000DB  B442              mov ah,0x42

146 Mot inconnu : DD => 000000DD  CD13              int 0x13		; fonction extended read
146 Espace(s) surnuméraire(s) à supprimer. => 000000DD  CD13              int 0x13		; fonction extended read
146 Mot inconnu : CD13 => 000000DD  CD13              int 0x13		; fonction extended read
146 Espace(s) surnuméraire(s) à supprimer. => 000000DD  CD13              int 0x13		; fonction extended read
146 Mot inconnu : int => 000000DD  CD13              int 0x13		; fonction extended read
146 Mot inconnu : x13 => 000000DD  CD13              int 0x13		; fonction extended read
146 Mot inconnu : extended => 000000DD  CD13              int 0x13		; fonction extended read
146 Mot inconnu : read => 000000DD  CD13              int 0x13		; fonction extended read

147 Mot inconnu : DF => 000000DF  7205              jc 0xe6		; si erreur
147 Espace(s) surnuméraire(s) à supprimer. => 000000DF  7205              jc 0xe6		; si erreur
147 Espace(s) surnuméraire(s) à supprimer. => 000000DF  7205              jc 0xe6		; si erreur
147 Mot inconnu : jc => 000000DF  7205              jc 0xe6		; si erreur
147 Mot inconnu : xe6 => 000000DF  7205              jc 0xe6		; si erreur

148 Mot inconnu : E1 => 000000E1  BB0070            mov bx,0x7000
148 Espace(s) surnuméraire(s) à supprimer. => 000000E1  BB0070            mov bx,0x7000
148 Mot inconnu : BB0070 => 000000E1  BB0070            mov bx,0x7000
148 Espace(s) surnuméraire(s) à supprimer. => 000000E1  BB0070            mov bx,0x7000
148 Mot inconnu : mov => 000000E1  BB0070            mov bx,0x7000
148 Mot inconnu : bx => 000000E1  BB0070            mov bx,0x7000
148 Il manque un espace. => 000000E1  BB0070            mov bx,0x7000
148 Mot inconnu : x7000 => 000000E1  BB0070            mov bx,0x7000

149 Mot inconnu : E4 => 000000E4  EB76              jmp short 0x15c
149 Espace(s) surnuméraire(s) à supprimer. => 000000E4  EB76              jmp short 0x15c
149 Mot inconnu : EB76 => 000000E4  EB76              jmp short 0x15c
149 Espace(s) surnuméraire(s) à supprimer. => 000000E4  EB76              jmp short 0x15c
149 Mot inconnu : jmp => 000000E4  EB76              jmp short 0x15c
149 Mot inconnu : x15c => 000000E4  EB76              jmp short 0x15c

151 Mot inconnu : chs_mode => ; traitement sans extension chs_mode

152 Mot inconnu : E6 => 000000E6  B408              mov ah,0x8
152 Espace(s) surnuméraire(s) à supprimer. => 000000E6  B408              mov ah,0x8
152 Mot inconnu : B408 => 000000E6  B408              mov ah,0x8
152 Espace(s) surnuméraire(s) à supprimer. => 000000E6  B408              mov ah,0x8
152 Mot inconnu : mov => 000000E6  B408              mov ah,0x8
152 Il manque un espace. => 000000E6  B408              mov ah,0x8
152 Mot inconnu : x8 => 000000E6  B408              mov ah,0x8

153 Mot inconnu : E8 => 000000E8  CD13              int 0x13		; récupère les paramètres du disque (numéro maxi tête, numéro maxi secteur, numéro maxi cylindre)
153 Espace(s) surnuméraire(s) à supprimer. => 000000E8  CD13              int 0x13		; récupère les paramètres du disque (numéro maxi tête, numéro maxi secteur, numéro maxi cylindre)
153 Mot inconnu : CD13 => 000000E8  CD13              int 0x13		; récupère les paramètres du disque (numéro maxi tête, numéro maxi secteur, numéro maxi cylindre)
153 Espace(s) surnuméraire(s) à supprimer. => 000000E8  CD13              int 0x13		; récupère les paramètres du disque (numéro maxi tête, numéro maxi secteur, numéro maxi cylindre)
153 Mot inconnu : int => 000000E8  CD13              int 0x13		; récupère les paramètres du disque (numéro maxi tête, numéro maxi secteur, numéro maxi cylindre)
153 Mot inconnu : x13 => 000000E8  CD13              int 0x13		; récupère les paramètres du disque (numéro maxi tête, numéro maxi secteur, numéro maxi cylindre)

154 Espace(s) surnuméraire(s) à supprimer. => 000000EA  730D              jnc 0xf9		; si pas d'erreur
154 Espace(s) surnuméraire(s) à supprimer. => 000000EA  730D              jnc 0xf9		; si pas d'erreur
154 Mot inconnu : jnc => 000000EA  730D              jnc 0xf9		; si pas d'erreur
154 Mot inconnu : xf9 => 000000EA  730D              jnc 0xf9		; si pas d'erreur

155 Espace(s) surnuméraire(s) à supprimer. => 000000EC  F6C280            test dl,0x80
155 Mot inconnu : F6C280 => 000000EC  F6C280            test dl,0x80
155 Espace(s) surnuméraire(s) à supprimer. => 000000EC  F6C280            test dl,0x80
155 Il manque un espace. => 000000EC  F6C280            test dl,0x80
155 Mot inconnu : x80 => 000000EC  F6C280            test dl,0x80

156 Espace(s) surnuméraire(s) à supprimer. => 000000EF  0F84D000          jz word 0x1c3
156 Mot inconnu : F84D000 => 000000EF  0F84D000          jz word 0x1c3
156 Espace(s) surnuméraire(s) à supprimer. => 000000EF  0F84D000          jz word 0x1c3
156 Mot inconnu : jz => 000000EF  0F84D000          jz word 0x1c3
156 Mot inconnu : word => 000000EF  0F84D000          jz word 0x1c3
156 Mot inconnu : x1c3 => 000000EF  0F84D000          jz word 0x1c3

157 Mot inconnu : F3 => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Espace(s) surnuméraire(s) à supprimer. => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Mot inconnu : BE937D => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Espace(s) surnuméraire(s) à supprimer. => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Mot inconnu : mov => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Il manque un espace. => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Mot inconnu : x7d93 => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Guillemets typographiques ouvrants. => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Mot inconnu : Disk => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Guillemets typographiques fermants. => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 
157 Espace(s) en fin de ligne à supprimer. => 000000F3  BE937D            mov si,0x7d93	; pointe sur la chaine "Hard Disk" 

158 Mot inconnu : F6 => 000000F6  E98200            jmp word 0x17b
158 Espace(s) surnuméraire(s) à supprimer. => 000000F6  E98200            jmp word 0x17b
158 Mot inconnu : E98200 => 000000F6  E98200            jmp word 0x17b
158 Espace(s) surnuméraire(s) à supprimer. => 000000F6  E98200            jmp word 0x17b
158 Mot inconnu : jmp => 000000F6  E98200            jmp word 0x17b
158 Mot inconnu : word => 000000F6  E98200            jmp word 0x17b
158 Mot inconnu : x17b => 000000F6  E98200            jmp word 0x17b

160 Mot inconnu : F9 => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Espace(s) surnuméraire(s) à supprimer. => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Mot inconnu : FB6C6 => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Espace(s) surnuméraire(s) à supprimer. => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Mot inconnu : movzx => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Mot inconnu : eax => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Il manque un espace. => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes
160 Mot inconnu : dh => 000000F9  660FB6C6          movzx eax,dh	; numéro maxi de têtes

161 Mot inconnu : FD => 000000FD  8864FF            mov [si-0x1],ah	; met zéro en 7c04
161 Espace(s) surnuméraire(s) à supprimer. => 000000FD  8864FF            mov [si-0x1],ah	; met zéro en 7c04
161 Mot inconnu : FF => 000000FD  8864FF            mov [si-0x1],ah	; met zéro en 7c04
161 Espace(s) surnuméraire(s) à supprimer. => 000000FD  8864FF            mov [si-0x1],ah	; met zéro en 7c04
161 Mot inconnu : mov => 000000FD  8864FF            mov [si-0x1],ah	; met zéro en 7c04
161 Mot inconnu : c04 => 000000FD  8864FF            mov [si-0x1],ah	; met zéro en 7c04

162 Espace(s) surnuméraire(s) à supprimer. => 00000100  40                inc ax		; nombre de têtes
162 Espace(s) surnuméraire(s) à supprimer. => 00000100  40                inc ax		; nombre de têtes
162 Mot inconnu : inc => 00000100  40                inc ax		; nombre de têtes
162 Mot inconnu : ax => 00000100  40                inc ax		; nombre de têtes

163 Espace(s) surnuméraire(s) à supprimer. => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09
163 Formatage des grands nombres. => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09
163 Espace(s) surnuméraire(s) à supprimer. => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09
163 Mot inconnu : mov => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09
163 Mot inconnu : x4 => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09
163 Mot inconnu : eax => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09
163 Mot inconnu : c09 => 00000101  66894404          mov [si+0x4],eax	; sauvegardé en 7c09

164 Espace(s) surnuméraire(s) à supprimer. => 00000105  0FB6D1            movzx dx,cl		; 2bits pour cylindre+nombre max de secteurs
164 Mot inconnu : FB6D1 => 00000105  0FB6D1            movzx dx,cl		; 2bits pour cylindre+nombre max de secteurs
164 Espace(s) surnuméraire(s) à supprimer. => 00000105  0FB6D1            movzx dx,cl		; 2bits pour cylindre+nombre max de secteurs
164 Mot inconnu : movzx => 00000105  0FB6D1            movzx dx,cl		; 2bits pour cylindre+nombre max de secteurs
164 Mot inconnu : dx => 00000105  0FB6D1            movzx dx,cl		; 2bits pour cylindre+nombre max de secteurs
164 Il manque un espace. => 00000105  0FB6D1            movzx dx,cl		; 2bits pour cylindre+nombre max de secteurs

165 Espace(s) surnuméraire(s) à supprimer. => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche
165 Mot inconnu : C1E202 => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche
165 Espace(s) surnuméraire(s) à supprimer. => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche
165 Mot inconnu : shl => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche
165 Mot inconnu : dx => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche
165 Il manque un espace. => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche
165 Mot inconnu : x2 => 00000108  C1E202            shl dx,0x2		; décale de 2 bits vers la gauche

166 Espace(s) surnuméraire(s) à supprimer. => 0000010B  88E8              mov al,ch		; 8 bits de poids faible n° maxi cylindre
166 Mot inconnu : E8 => 0000010B  88E8              mov al,ch		; 8 bits de poids faible n° maxi cylindre
166 Espace(s) surnuméraire(s) à supprimer. => 0000010B  88E8              mov al,ch		; 8 bits de poids faible n° maxi cylindre
166 Mot inconnu : mov => 0000010B  88E8              mov al,ch		; 8 bits de poids faible n° maxi cylindre
166 Il manque un espace. => 0000010B  88E8              mov al,ch		; 8 bits de poids faible n° maxi cylindre

167 Espace(s) surnuméraire(s) à supprimer. => 0000010D  88F4              mov ah,dh		; 2 bits de poids fort cylindre
167 Mot inconnu : F4 => 0000010D  88F4              mov ah,dh		; 2 bits de poids fort cylindre
167 Espace(s) surnuméraire(s) à supprimer. => 0000010D  88F4              mov ah,dh		; 2 bits de poids fort cylindre
167 Mot inconnu : mov => 0000010D  88F4              mov ah,dh		; 2 bits de poids fort cylindre
167 Il manque un espace. => 0000010D  88F4              mov ah,dh		; 2 bits de poids fort cylindre
167 Mot inconnu : dh => 0000010D  88F4              mov ah,dh		; 2 bits de poids fort cylindre

168 Espace(s) surnuméraire(s) à supprimer. => 0000010F  40                inc ax		; nb de cylindres
168 Espace(s) surnuméraire(s) à supprimer. => 0000010F  40                inc ax		; nb de cylindres
168 Mot inconnu : inc => 0000010F  40                inc ax		; nb de cylindres
168 Mot inconnu : ax => 0000010F  40                inc ax		; nb de cylindres
168 Mot inconnu : nb => 0000010F  40                inc ax		; nb de cylindres

169 Espace(s) surnuméraire(s) à supprimer. => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d
169 Formatage des grands nombres. => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d
169 Espace(s) surnuméraire(s) à supprimer. => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d
169 Mot inconnu : mov => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d
169 Mot inconnu : x8 => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d
169 Mot inconnu : ax => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d
169 Mot inconnu : c0d => 00000110  894408            mov [si+0x8],ax	; sauvegardé en 7c0d

170 Espace(s) surnuméraire(s) à supprimer. => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)
170 Mot inconnu : FB6C2 => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)
170 Espace(s) surnuméraire(s) à supprimer. => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)
170 Mot inconnu : movzx => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)
170 Mot inconnu : ax => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)
170 Il manque un espace. => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)
170 Mot inconnu : x4 => 00000113  0FB6C2            movzx ax,dl		; copie le numéro maxi de secteurs (x4)

171 Espace(s) surnuméraire(s) à supprimer. => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs
171 Mot inconnu : C0E802 => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs
171 Espace(s) surnuméraire(s) à supprimer. => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs
171 Mot inconnu : shr => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs
171 Il manque un espace. => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs
171 Mot inconnu : x2 => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs
171 Mot inconnu : nb => 00000116  C0E802            shr al,0x2		; numéro maxi de secteurs=nb secteurs

172 Espace(s) surnuméraire(s) à supprimer. => 00000119  668904            mov [si],eax	; sauvegardé
172 Formatage des grands nombres. => 00000119  668904            mov [si],eax	; sauvegardé
172 Espace(s) surnuméraire(s) à supprimer. => 00000119  668904            mov [si],eax	; sauvegardé
172 Mot inconnu : mov => 00000119  668904            mov [si],eax	; sauvegardé
172 Mot inconnu : eax => 00000119  668904            mov [si],eax	; sauvegardé

173 Espace(s) surnuméraire(s) à supprimer. => 0000011C  66A1607C          mov eax,[0x7c60]
173 Mot inconnu : A1607C => 0000011C  66A1607C          mov eax,[0x7c60]
173 Espace(s) surnuméraire(s) à supprimer. => 0000011C  66A1607C          mov eax,[0x7c60]
173 Mot inconnu : mov => 0000011C  66A1607C          mov eax,[0x7c60]
173 Mot inconnu : eax => 0000011C  66A1607C          mov eax,[0x7c60]
173 Mot inconnu : x7c60 => 0000011C  66A1607C          mov eax,[0x7c60]

174 Espace(s) surnuméraire(s) à supprimer. => 00000120  6609C0            or eax,eax		; teste si zéro
174 Mot inconnu : C0 => 00000120  6609C0            or eax,eax		; teste si zéro
174 Espace(s) surnuméraire(s) à supprimer. => 00000120  6609C0            or eax,eax		; teste si zéro
174 Mot inconnu : eax => 00000120  6609C0            or eax,eax		; teste si zéro
174 Il manque un espace. => 00000120  6609C0            or eax,eax		; teste si zéro
174 Mot inconnu : eax => 00000120  6609C0            or eax,eax		; teste si zéro

175 Espace(s) surnuméraire(s) à supprimer. => 00000123  754E              jnz 0x173           ; erreur de géométrie
175 Espace(s) surnuméraire(s) à supprimer. => 00000123  754E              jnz 0x173           ; erreur de géométrie
175 Mot inconnu : jnz => 00000123  754E              jnz 0x173           ; erreur de géométrie
175 Mot inconnu : x173 => 00000123  754E              jnz 0x173           ; erreur de géométrie
175 Espace(s) surnuméraire(s) à supprimer. => 00000123  754E              jnz 0x173           ; erreur de géométrie
175 Il manque un espace insécable. => 00000123  754E              jnz 0x173           ; erreur de géométrie

177 S’il s’agit d’un impératif, la terminaison est “is”, non “it”. => ; Convertit adresse linéaire en tête, secteur et cylindre

178 Espace(s) surnuméraire(s) à supprimer. => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : A15C7C => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Espace(s) surnuméraire(s) à supprimer. => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : mov => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : eax => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : x7c5c => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Il manque un espace insécable. => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : LBA => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : core => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : img => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)
178 Mot inconnu : qword => 00000125  66A15C7C          mov eax,[0x7c5c]    ; charge l'adresse LBA de l'emplacement de core.img (valeur basse qword)

179 Espace(s) surnuméraire(s) à supprimer. => 00000129  6631D2            xor edx,edx		; met à zéro
179 Mot inconnu : D2 => 00000129  6631D2            xor edx,edx		; met à zéro
179 Espace(s) surnuméraire(s) à supprimer. => 00000129  6631D2            xor edx,edx		; met à zéro
179 Mot inconnu : xor => 00000129  6631D2            xor edx,edx		; met à zéro
179 Mot inconnu : edx => 00000129  6631D2            xor edx,edx		; met à zéro
179 Il manque un espace. => 00000129  6631D2            xor edx,edx		; met à zéro
179 Mot inconnu : edx => 00000129  6631D2            xor edx,edx		; met à zéro

180 Espace(s) surnuméraire(s) à supprimer. => 0000012C  66F734            div dword [si]	; divise l'adresse LBA par le nombre de secteurs par piste
180 Mot inconnu : F734 => 0000012C  66F734            div dword [si]	; divise l'adresse LBA par le nombre de secteurs par piste
180 Espace(s) surnuméraire(s) à supprimer. => 0000012C  66F734            div dword [si]	; divise l'adresse LBA par le nombre de secteurs par piste
180 Mot inconnu : dword => 0000012C  66F734            div dword [si]	; divise l'adresse LBA par le nombre de secteurs par piste
180 Mot inconnu : LBA => 0000012C  66F734            div dword [si]	; divise l'adresse LBA par le nombre de secteurs par piste

181 Espace(s) surnuméraire(s) à supprimer. => 0000012F  88D1              mov cl,dl		; reste de la division = numéro secteur (commencement à 0)
181 Mot inconnu : D1 => 0000012F  88D1              mov cl,dl		; reste de la division = numéro secteur (commencement à 0)
181 Espace(s) surnuméraire(s) à supprimer. => 0000012F  88D1              mov cl,dl		; reste de la division = numéro secteur (commencement à 0)
181 Mot inconnu : mov => 0000012F  88D1              mov cl,dl		; reste de la division = numéro secteur (commencement à 0)
181 Il manque un espace. => 0000012F  88D1              mov cl,dl		; reste de la division = numéro secteur (commencement à 0)

182 Espace(s) surnuméraire(s) à supprimer. => 00000131  31D2              xor dx,dx
182 Mot inconnu : D2 => 00000131  31D2              xor dx,dx
182 Espace(s) surnuméraire(s) à supprimer. => 00000131  31D2              xor dx,dx
182 Mot inconnu : xor => 00000131  31D2              xor dx,dx
182 Mot inconnu : dx => 00000131  31D2              xor dx,dx
182 Il manque un espace. => 00000131  31D2              xor dx,dx
182 Mot inconnu : dx => 00000131  31D2              xor dx,dx

183 Espace(s) surnuméraire(s) à supprimer. => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Mot inconnu : F77404 => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Espace(s) surnuméraire(s) à supprimer. => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Mot inconnu : dword => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Mot inconnu : x4 => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Mot inconnu : nb => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 
183 Espace(s) en fin de ligne à supprimer. => 00000133  66F77404          div dword [si+0x4]	; divise par le nombre de têtes - donne un nb de cylindres 

184 Espace(s) surnuméraire(s) à supprimer. => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque
184 Mot inconnu : B4408 => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque
184 Espace(s) surnuméraire(s) à supprimer. => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque
184 Mot inconnu : cmp => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque
184 Mot inconnu : ax => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque
184 Mot inconnu : x8 => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque
184 Il manque un espace insécable. => 00000137  3B4408            cmp ax,[si+0x8]  ; compare au nombre de cylindres du disque

185 Espace(s) surnuméraire(s) à supprimer. => 0000013A  7D37              jnl 0x173		; supérieur au nombre de cylindres du disque - erreur
185 Mot inconnu : D37 => 0000013A  7D37              jnl 0x173		; supérieur au nombre de cylindres du disque - erreur
185 Espace(s) surnuméraire(s) à supprimer. => 0000013A  7D37              jnl 0x173		; supérieur au nombre de cylindres du disque - erreur
185 Mot inconnu : jnl => 0000013A  7D37              jnl 0x173		; supérieur au nombre de cylindres du disque - erreur
185 Mot inconnu : x173 => 0000013A  7D37              jnl 0x173		; supérieur au nombre de cylindres du disque - erreur
185 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 0000013A  7D37              jnl 0x173		; supérieur au nombre de cylindres du disque - erreur

186 Espace(s) surnuméraire(s) à supprimer. => 0000013C  FEC1              inc cl		; rajoute 1 car les n°secteurs commencent à 1
186 Mot inconnu : FEC1 => 0000013C  FEC1              inc cl		; rajoute 1 car les n°secteurs commencent à 1
186 Espace(s) surnuméraire(s) à supprimer. => 0000013C  FEC1              inc cl		; rajoute 1 car les n°secteurs commencent à 1
186 Mot inconnu : inc => 0000013C  FEC1              inc cl		; rajoute 1 car les n°secteurs commencent à 1
186 Si « car » est la conjonction de coordination, une virgule est peut-être souhaitable. => 0000013C  FEC1              inc cl		; rajoute 1 car les n°secteurs commencent à 1

187 Espace(s) surnuméraire(s) à supprimer. => 0000013E  88C5              mov ch,al		; 8 bits de poids faible n°cylindre
187 Mot inconnu : C5 => 0000013E  88C5              mov ch,al		; 8 bits de poids faible n°cylindre
187 Espace(s) surnuméraire(s) à supprimer. => 0000013E  88C5              mov ch,al		; 8 bits de poids faible n°cylindre
187 Mot inconnu : mov => 0000013E  88C5              mov ch,al		; 8 bits de poids faible n°cylindre
187 Il manque un espace. => 0000013E  88C5              mov ch,al		; 8 bits de poids faible n°cylindre

188 Espace(s) surnuméraire(s) à supprimer. => 00000140  30C0              xor al,al
188 Mot inconnu : C0 => 00000140  30C0              xor al,al
188 Espace(s) surnuméraire(s) à supprimer. => 00000140  30C0              xor al,al
188 Mot inconnu : xor => 00000140  30C0              xor al,al
188 Il manque un espace. => 00000140  30C0              xor al,al

189 Espace(s) surnuméraire(s) à supprimer. => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)
189 Mot inconnu : C1E802 => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)
189 Espace(s) surnuméraire(s) à supprimer. => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)
189 Mot inconnu : shr => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)
189 Mot inconnu : ax => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)
189 Il manque un espace. => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)
189 Mot inconnu : x2 => 00000142  C1E802            shr ax,0x2		; décale de 2 bits à droite (les bits 6 et 7 pour poids fort cylindre)

190 Espace(s) surnuméraire(s) à supprimer. => 00000145  08C1              or cl,al		; modifie les bits 7 et 6 de cl en conséquence (poids fort cylindre)
190 Mot inconnu : C1 => 00000145  08C1              or cl,al		; modifie les bits 7 et 6 de cl en conséquence (poids fort cylindre)
190 Espace(s) surnuméraire(s) à supprimer. => 00000145  08C1              or cl,al		; modifie les bits 7 et 6 de cl en conséquence (poids fort cylindre)
190 Il manque un espace. => 00000145  08C1              or cl,al		; modifie les bits 7 et 6 de cl en conséquence (poids fort cylindre)

191 Espace(s) surnuméraire(s) à supprimer. => 00000147  88D0              mov al,dl		; numéro de tête = reste division
191 Mot inconnu : D0 => 00000147  88D0              mov al,dl		; numéro de tête = reste division
191 Espace(s) surnuméraire(s) à supprimer. => 00000147  88D0              mov al,dl		; numéro de tête = reste division
191 Mot inconnu : mov => 00000147  88D0              mov al,dl		; numéro de tête = reste division
191 Il manque un espace. => 00000147  88D0              mov al,dl		; numéro de tête = reste division

192 Espace(s) surnuméraire(s) à supprimer. => 00000149  5A                pop dx
192 Espace(s) surnuméraire(s) à supprimer. => 00000149  5A                pop dx
192 Mot inconnu : dx => 00000149  5A                pop dx

193 Espace(s) surnuméraire(s) à supprimer. => 0000014A  88C6              mov dh,al		; numéro de tête
193 Mot inconnu : C6 => 0000014A  88C6              mov dh,al		; numéro de tête
193 Espace(s) surnuméraire(s) à supprimer. => 0000014A  88C6              mov dh,al		; numéro de tête
193 Mot inconnu : mov => 0000014A  88C6              mov dh,al		; numéro de tête
193 Mot inconnu : dh => 0000014A  88C6              mov dh,al		; numéro de tête
193 Il manque un espace. => 0000014A  88C6              mov dh,al		; numéro de tête

194 Espace(s) surnuméraire(s) à supprimer. => 0000014C  BB0070            mov bx,0x7000
194 Mot inconnu : BB0070 => 0000014C  BB0070            mov bx,0x7000
194 Espace(s) surnuméraire(s) à supprimer. => 0000014C  BB0070            mov bx,0x7000
194 Mot inconnu : mov => 0000014C  BB0070            mov bx,0x7000
194 Mot inconnu : bx => 0000014C  BB0070            mov bx,0x7000
194 Il manque un espace. => 0000014C  BB0070            mov bx,0x7000
194 Mot inconnu : x7000 => 0000014C  BB0070            mov bx,0x7000

195 Espace(s) surnuméraire(s) à supprimer. => 0000014F  8EC3              mov es,bx
195 Mot inconnu : EC3 => 0000014F  8EC3              mov es,bx
195 Espace(s) surnuméraire(s) à supprimer. => 0000014F  8EC3              mov es,bx
195 Mot inconnu : mov => 0000014F  8EC3              mov es,bx
195 Il manque un espace. => 0000014F  8EC3              mov es,bx
195 Mot inconnu : bx => 0000014F  8EC3              mov es,bx

196 Espace(s) surnuméraire(s) à supprimer. => 00000151  31DB              xor bx,bx		; tampon en 7000:0000
196 Mot inconnu : DB => 00000151  31DB              xor bx,bx		; tampon en 7000:0000
196 Espace(s) surnuméraire(s) à supprimer. => 00000151  31DB              xor bx,bx		; tampon en 7000:0000
196 Mot inconnu : xor => 00000151  31DB              xor bx,bx		; tampon en 7000:0000
196 Mot inconnu : bx => 00000151  31DB              xor bx,bx		; tampon en 7000:0000
196 Il manque un espace. => 00000151  31DB              xor bx,bx		; tampon en 7000:0000
196 Mot inconnu : bx => 00000151  31DB              xor bx,bx		; tampon en 7000:0000

197 Espace(s) surnuméraire(s) à supprimer. => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Mot inconnu : B80102 => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Espace(s) surnuméraire(s) à supprimer. => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Mot inconnu : mov => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Mot inconnu : ax => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Il manque un espace. => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Mot inconnu : x201 => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur
197 Avec une unité de mesure, mettez un espace insécable. => 00000153  B80102            mov ax,0x201	; fonction ah=02h = lecture secteur, al=01 = 1 secteur

198 Espace(s) surnuméraire(s) à supprimer. => 00000156  CD13              int 0x13		; lit un secteur
198 Mot inconnu : CD13 => 00000156  CD13              int 0x13		; lit un secteur
198 Espace(s) surnuméraire(s) à supprimer. => 00000156  CD13              int 0x13		; lit un secteur
198 Mot inconnu : int => 00000156  CD13              int 0x13		; lit un secteur
198 Mot inconnu : x13 => 00000156  CD13              int 0x13		; lit un secteur

199 Espace(s) surnuméraire(s) à supprimer. => 00000158  721E              jc 0x178		; erreur de lecture
199 Espace(s) surnuméraire(s) à supprimer. => 00000158  721E              jc 0x178		; erreur de lecture
199 Mot inconnu : jc => 00000158  721E              jc 0x178		; erreur de lecture
199 Mot inconnu : x178 => 00000158  721E              jc 0x178		; erreur de lecture

200 Espace(s) surnuméraire(s) à supprimer. => 0000015A  8CC3              mov bx,es
200 Mot inconnu : CC3 => 0000015A  8CC3              mov bx,es
200 Espace(s) surnuméraire(s) à supprimer. => 0000015A  8CC3              mov bx,es
200 Mot inconnu : mov => 0000015A  8CC3              mov bx,es
200 Mot inconnu : bx => 0000015A  8CC3              mov bx,es
200 Il manque un espace. => 0000015A  8CC3              mov bx,es

202 Mot inconnu : CHS => ; Copie des données chargées (partie commune mode CHS ou LBA)
202 Mot inconnu : LBA => ; Copie des données chargées (partie commune mode CHS ou LBA)

203 Espace(s) surnuméraire(s) à supprimer. => 0000015C  60                pushaw
203 Espace(s) surnuméraire(s) à supprimer. => 0000015C  60                pushaw
203 Mot inconnu : pushaw => 0000015C  60                pushaw

204 Espace(s) surnuméraire(s) à supprimer. => 0000015D  1E                push ds
204 Espace(s) surnuméraire(s) à supprimer. => 0000015D  1E                push ds
204 Mot inconnu : push => 0000015D  1E                push ds

205 Espace(s) surnuméraire(s) à supprimer. => 0000015E  B90001            mov cx,0x100
205 Mot inconnu : B90001 => 0000015E  B90001            mov cx,0x100
205 Espace(s) surnuméraire(s) à supprimer. => 0000015E  B90001            mov cx,0x100
205 Mot inconnu : mov => 0000015E  B90001            mov cx,0x100
205 Mot inconnu : cx => 0000015E  B90001            mov cx,0x100
205 Il manque un espace. => 0000015E  B90001            mov cx,0x100
205 Mot inconnu : x100 => 0000015E  B90001            mov cx,0x100

206 Espace(s) surnuméraire(s) à supprimer. => 00000161  8EDB              mov ds,bx		; charge le segment du buffer
206 Mot inconnu : EDB => 00000161  8EDB              mov ds,bx		; charge le segment du buffer
206 Espace(s) surnuméraire(s) à supprimer. => 00000161  8EDB              mov ds,bx		; charge le segment du buffer
206 Mot inconnu : mov => 00000161  8EDB              mov ds,bx		; charge le segment du buffer
206 Il manque un espace. => 00000161  8EDB              mov ds,bx		; charge le segment du buffer
206 Mot inconnu : bx => 00000161  8EDB              mov ds,bx		; charge le segment du buffer
206 Mot inconnu : buffer => 00000161  8EDB              mov ds,bx		; charge le segment du buffer

207 Espace(s) surnuméraire(s) à supprimer. => 00000163  31F6              xor si,si		; ds:si pointe sur 7000:0000
207 Mot inconnu : F6 => 00000163  31F6              xor si,si		; ds:si pointe sur 7000:0000
207 Espace(s) surnuméraire(s) à supprimer. => 00000163  31F6              xor si,si		; ds:si pointe sur 7000:0000
207 Mot inconnu : xor => 00000163  31F6              xor si,si		; ds:si pointe sur 7000:0000
207 Il manque un espace. => 00000163  31F6              xor si,si		; ds:si pointe sur 7000:0000
207 Il manque un espace. => 00000163  31F6              xor si,si		; ds:si pointe sur 7000:0000

208 Espace(s) surnuméraire(s) à supprimer. => 00000165  BF0080            mov di,0x8000
208 Mot inconnu : BF0080 => 00000165  BF0080            mov di,0x8000
208 Espace(s) surnuméraire(s) à supprimer. => 00000165  BF0080            mov di,0x8000
208 Mot inconnu : mov => 00000165  BF0080            mov di,0x8000
208 Mot inconnu : di => 00000165  BF0080            mov di,0x8000
208 Il manque un espace. => 00000165  BF0080            mov di,0x8000
208 Mot inconnu : x8000 => 00000165  BF0080            mov di,0x8000

209 Espace(s) surnuméraire(s) à supprimer. => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000
209 Mot inconnu : EC6 => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000
209 Espace(s) surnuméraire(s) à supprimer. => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000
209 Mot inconnu : mov => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000
209 Il manque un espace. => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000
209 Il manque un espace. => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000
209 Mot inconnu : di => 00000168  8EC6              mov es,si		; es:di pointe sur 0000:8000

210 Espace(s) surnuméraire(s) à supprimer. => 0000016A  FC                cld
210 Mot inconnu : FC => 0000016A  FC                cld
210 Espace(s) surnuméraire(s) à supprimer. => 0000016A  FC                cld
210 Mot inconnu : cld => 0000016A  FC                cld

211 Espace(s) surnuméraire(s) à supprimer. => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Mot inconnu : F3A5 => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Espace(s) surnuméraire(s) à supprimer. => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Mot inconnu : rep => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Mot inconnu : movsw => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Mot inconnu : buffer => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Mot inconnu : FF => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF
211 Mot inconnu : FF => 0000016B  F3A5              rep movsw		; copie le contenu du buffer de 7000:0000-7000:01FF en 0000:8000-0000:81FF

212 Espace(s) surnuméraire(s) à supprimer. => 0000016D  1F                pop ds
212 Espace(s) surnuméraire(s) à supprimer. => 0000016D  1F                pop ds

213 Espace(s) surnuméraire(s) à supprimer. => 0000016E  61                popaw
213 Espace(s) surnuméraire(s) à supprimer. => 0000016E  61                popaw
213 Mot inconnu : popaw => 0000016E  61                popaw

214 Espace(s) surnuméraire(s) à supprimer. => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : FF265A7C => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Espace(s) surnuméraire(s) à supprimer. => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : jmp => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : word => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : near => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : x7c5a => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Il manque un espace insécable. => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : c5a => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : core => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img
214 Mot inconnu : img => 0000016F  FF265A7C          jmp word near [0x7c5a]; saute en 0000:8000 (car 7c5a contient 8000) - début de core.img

217 Espace(s) surnuméraire(s) à supprimer. => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Mot inconnu : BE8E7D => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Espace(s) surnuméraire(s) à supprimer. => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Mot inconnu : mov => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Il manque un espace. => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Mot inconnu : x7d8e => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Guillemets typographiques ouvrants. => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Mot inconnu : Geom => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"
217 Guillemets typographiques fermants. => 00000173  BE8E7D            mov si,0x7d8e	; pointe sur la chaine "Geom"

218 Espace(s) surnuméraire(s) à supprimer. => 00000176  EB03              jmp short 0x17b
218 Mot inconnu : EB03 => 00000176  EB03              jmp short 0x17b
218 Espace(s) surnuméraire(s) à supprimer. => 00000176  EB03              jmp short 0x17b
218 Mot inconnu : jmp => 00000176  EB03              jmp short 0x17b
218 Mot inconnu : x17b => 00000176  EB03              jmp short 0x17b

219 Espace(s) surnuméraire(s) à supprimer. => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Mot inconnu : BE9D7D => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Espace(s) surnuméraire(s) à supprimer. => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Mot inconnu : mov => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Il manque un espace. => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Mot inconnu : x7d9d => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Guillemets typographiques ouvrants. => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Mot inconnu : Read => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"
219 Guillemets typographiques fermants. => 00000178  BE9D7D            mov si,0x7d9d	; pointe sur la chaine "Read"

220 Espace(s) surnuméraire(s) à supprimer. => 0000017B  E83400            call word 0x1b2
220 Mot inconnu : E83400 => 0000017B  E83400            call word 0x1b2
220 Espace(s) surnuméraire(s) à supprimer. => 0000017B  E83400            call word 0x1b2
220 Mot inconnu : call => 0000017B  E83400            call word 0x1b2
220 Mot inconnu : word => 0000017B  E83400            call word 0x1b2
220 Mot inconnu : x1b2 => 0000017B  E83400            call word 0x1b2

221 Espace(s) surnuméraire(s) à supprimer. => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Mot inconnu : BEA27D => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Espace(s) surnuméraire(s) à supprimer. => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Mot inconnu : mov => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Il manque un espace. => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Mot inconnu : x7da2 => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Guillemets typographiques ouvrants. => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Mot inconnu : Error => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"
221 Guillemets typographiques fermants. => 0000017E  BEA27D            mov si,0x7da2	; pointe sur la chaine "Error"

222 Espace(s) surnuméraire(s) à supprimer. => 00000181  E82E00            call word 0x1b2
222 Mot inconnu : E82E00 => 00000181  E82E00            call word 0x1b2
222 Espace(s) surnuméraire(s) à supprimer. => 00000181  E82E00            call word 0x1b2
222 Mot inconnu : call => 00000181  E82E00            call word 0x1b2
222 Mot inconnu : word => 00000181  E82E00            call word 0x1b2
222 Mot inconnu : x1b2 => 00000181  E82E00            call word 0x1b2

223 Espace(s) surnuméraire(s) à supprimer. => 00000184  CD18              int 0x18
223 Mot inconnu : CD18 => 00000184  CD18              int 0x18
223 Espace(s) surnuméraire(s) à supprimer. => 00000184  CD18              int 0x18
223 Mot inconnu : int => 00000184  CD18              int 0x18
223 Mot inconnu : x18 => 00000184  CD18              int 0x18

224 Espace(s) surnuméraire(s) à supprimer. => 00000186  EBFE              jmp short 0x186	; boucle sans fin
224 Mot inconnu : EBFE => 00000186  EBFE              jmp short 0x186	; boucle sans fin
224 Espace(s) surnuméraire(s) à supprimer. => 00000186  EBFE              jmp short 0x186	; boucle sans fin
224 Mot inconnu : jmp => 00000186  EBFE              jmp short 0x186	; boucle sans fin
224 Mot inconnu : x186 => 00000186  EBFE              jmp short 0x186	; boucle sans fin

227 Espace(s) surnuméraire(s) à supprimer. => 00000188                db "GRUB ",0
227 Mot inconnu : db => 00000188                db "GRUB ",0
227 Guillemets typographiques ouvrants. => 00000188                db "GRUB ",0
227 Mot inconnu : GRUB => 00000188                db "GRUB ",0
227 Guillemets fermants. => 00000188                db "GRUB ",0

228 Espace(s) surnuméraire(s) à supprimer. => 0000018E  		db "Geom",0
228 Incohérence : espace et tabulation. => 0000018E  		db "Geom",0
228 Mot inconnu : db => 0000018E  		db "Geom",0
228 Guillemets typographiques ouvrants. => 0000018E  		db "Geom",0
228 Mot inconnu : Geom => 0000018E  		db "Geom",0
228 Guillemets typographiques fermants. => 0000018E  		db "Geom",0

229 Espace(s) surnuméraire(s) à supprimer. => 00000193  		db "Hard Disk",0
229 Incohérence : espace et tabulation. => 00000193  		db "Hard Disk",0
229 Mot inconnu : db => 00000193  		db "Hard Disk",0
229 Guillemets typographiques ouvrants. => 00000193  		db "Hard Disk",0
229 Mot inconnu : Disk => 00000193  		db "Hard Disk",0
229 Guillemets typographiques fermants. => 00000193  		db "Hard Disk",0

230 Espace(s) surnuméraire(s) à supprimer. => 0000019D  		db "Read",0
230 Incohérence : espace et tabulation. => 0000019D  		db "Read",0
230 Mot inconnu : db => 0000019D  		db "Read",0
230 Guillemets typographiques ouvrants. => 0000019D  		db "Read",0
230 Mot inconnu : Read => 0000019D  		db "Read",0
230 Guillemets typographiques fermants. => 0000019D  		db "Read",0

231 Mot inconnu : A2 => 000001A2		db " Error",13,10,0
231 Mot inconnu : db => 000001A2		db " Error",13,10,0
231 Guillemets isolés. => 000001A2		db " Error",13,10,0
231 Mot inconnu : Error => 000001A2		db " Error",13,10,0
231 Guillemets typographiques fermants. => 000001A2		db " Error",13,10,0

234 Espace(s) surnuméraire(s) à supprimer. => 000001AB  BB0100            mov bx,0x1
234 Mot inconnu : BB0100 => 000001AB  BB0100            mov bx,0x1
234 Espace(s) surnuméraire(s) à supprimer. => 000001AB  BB0100            mov bx,0x1
234 Mot inconnu : mov => 000001AB  BB0100            mov bx,0x1
234 Mot inconnu : bx => 000001AB  BB0100            mov bx,0x1
234 Il manque un espace. => 000001AB  BB0100            mov bx,0x1
234 Mot inconnu : x1 => 000001AB  BB0100            mov bx,0x1

235 Mot inconnu : AE => 000001AE  B40E              mov ah,0xe
235 Espace(s) surnuméraire(s) à supprimer. => 000001AE  B40E              mov ah,0xe
235 Mot inconnu : B40E => 000001AE  B40E              mov ah,0xe
235 Espace(s) surnuméraire(s) à supprimer. => 000001AE  B40E              mov ah,0xe
235 Mot inconnu : mov => 000001AE  B40E              mov ah,0xe
235 Il manque un espace. => 000001AE  B40E              mov ah,0xe
235 Mot inconnu : xe => 000001AE  B40E              mov ah,0xe

236 Mot inconnu : B0 => 000001B0  CD10              int 0x10		; affiche un caractère
236 Espace(s) surnuméraire(s) à supprimer. => 000001B0  CD10              int 0x10		; affiche un caractère
236 Mot inconnu : CD10 => 000001B0  CD10              int 0x10		; affiche un caractère
236 Espace(s) surnuméraire(s) à supprimer. => 000001B0  CD10              int 0x10		; affiche un caractère
236 Mot inconnu : int => 000001B0  CD10              int 0x10		; affiche un caractère
236 Mot inconnu : x10 => 000001B0  CD10              int 0x10		; affiche un caractère

239 Mot inconnu : B2 => 000001B2  AC                lodsb
239 Espace(s) surnuméraire(s) à supprimer. => 000001B2  AC                lodsb
239 Espace(s) surnuméraire(s) à supprimer. => 000001B2  AC                lodsb
239 Mot inconnu : lodsb => 000001B2  AC                lodsb

240 Mot inconnu : B3 => 000001B3  3C00              cmp al,0x0
240 Espace(s) surnuméraire(s) à supprimer. => 000001B3  3C00              cmp al,0x0
240 Mot inconnu : C00 => 000001B3  3C00              cmp al,0x0
240 Espace(s) surnuméraire(s) à supprimer. => 000001B3  3C00              cmp al,0x0
240 Mot inconnu : cmp => 000001B3  3C00              cmp al,0x0
240 Il manque un espace. => 000001B3  3C00              cmp al,0x0
240 Mot inconnu : x0 => 000001B3  3C00              cmp al,0x0

241 Mot inconnu : B5 => 000001B5  75F4              jnz 0x1ab		; teste la fin de la chaine
241 Espace(s) surnuméraire(s) à supprimer. => 000001B5  75F4              jnz 0x1ab		; teste la fin de la chaine
241 Mot inconnu : F4 => 000001B5  75F4              jnz 0x1ab		; teste la fin de la chaine
241 Espace(s) surnuméraire(s) à supprimer. => 000001B5  75F4              jnz 0x1ab		; teste la fin de la chaine
241 Mot inconnu : jnz => 000001B5  75F4              jnz 0x1ab		; teste la fin de la chaine
241 Mot inconnu : x1ab => 000001B5  75F4              jnz 0x1ab		; teste la fin de la chaine

242 Mot inconnu : B7 => 000001B7  C3                ret</code>
242 Espace(s) surnuméraire(s) à supprimer. => 000001B7  C3                ret</code>
242 Mot inconnu : C3 => 000001B7  C3                ret</code>
242 Espace(s) surnuméraire(s) à supprimer. => 000001B7  C3                ret</code>
242 Mot inconnu : ret => 000001B7  C3                ret</code>

244 Mot inconnu : LBA => <note tip>L'emplacement de la LBA où se trouve core.img est indiquée en 5c (8 octets).
244 Mot inconnu : core => <note tip>L'emplacement de la LBA où se trouve core.img est indiquée en 5c (8 octets).
244 Mot inconnu : img => <note tip>L'emplacement de la LBA où se trouve core.img est indiquée en 5c (8 octets).

246 Mot inconnu : LBA => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : mbr => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : GPT => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : GPT => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : core => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : img => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : LBA => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : bios_boot => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : boot => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Accord de nombre erroné avec « bios ». => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Accord de nombre erroné avec « mode ». => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>
246 Mot inconnu : GPT => Ici nous avons la LBA qui vaut 1, soit le secteur qui suit le mbr. Dans le cas d'un partitionnement GPT cet emplacement est occupé par l'en-tête GPT et n'est plus disponible pour core.img. Il faudra donc mettre l'adresse LBA de la partition bios_boot pour le boot en mode bios sur un disque GPT</note>

248 Mot inconnu : c00 => Le programme chargé en mémoire à l'adresse 0000:7c00 commence par l'instruction jmp short 0x65 qui saute directement à l'adresse 065
248 Mot inconnu : jmp => Le programme chargé en mémoire à l'adresse 0000:7c00 commence par l'instruction jmp short 0x65 qui saute directement à l'adresse 065
248 Mot inconnu : x65 => Le programme chargé en mémoire à l'adresse 0000:7c00 commence par l'instruction jmp short 0x65 qui saute directement à l'adresse 065

251 Il manque un espace insécable. => Différentes parties sont visibles :

254 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 065 à 095 - Routine vérifie que le boot s'effectue à partir du disque dur
254 Mot inconnu : boot => de 065 à 095 - Routine vérifie que le boot s'effectue à partir du disque dur

256 Mot inconnu : b3 => de 096 à 0b3 - Définit l'emplacement des paramètres de chargement du prochain secteur et le mode CHS ou LBA selon les capacités du bios
256 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 096 à 0b3 - Définit l'emplacement des paramètres de chargement du prochain secteur et le mode CHS ou LBA selon les capacités du bios
256 Mot inconnu : CHS => de 096 à 0b3 - Définit l'emplacement des paramètres de chargement du prochain secteur et le mode CHS ou LBA selon les capacités du bios
256 Mot inconnu : LBA => de 096 à 0b3 - Définit l'emplacement des paramètres de chargement du prochain secteur et le mode CHS ou LBA selon les capacités du bios
256 Accord de nombre erroné : « bios » devrait être au singulier. => de 096 à 0b3 - Définit l'emplacement des paramètres de chargement du prochain secteur et le mode CHS ou LBA selon les capacités du bios

258 Mot inconnu : b4 => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Mot inconnu : e5 => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Mot inconnu : core => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Mot inconnu : img => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Mot inconnu : LBA => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Mot inconnu : int13 => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)
258 Avec une unité de mesure, mettez un espace insécable. => de 0b4 à 0e5 - Charge le premier secteur de core.img en mode LBA (interruption bios int13/ah=42h)

260 Mot inconnu : e6 => de 0e6 à 0f8 - Récupère les paramètres du disque et gère les erreurs
260 Mot inconnu : f8 => de 0e6 à 0f8 - Récupère les paramètres du disque et gère les erreurs
260 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 0e6 à 0f8 - Récupère les paramètres du disque et gère les erreurs

262 Mot inconnu : f9 => de 0f9 à 124 - Sauvegarde ces paramètres dans la zone des paramètres de chargement
262 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 0f9 à 124 - Sauvegarde ces paramètres dans la zone des paramètres de chargement

264 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)
264 Mot inconnu : LBA => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)
264 Mot inconnu : core => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)
264 Mot inconnu : img => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)
264 Mot inconnu : CHS => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)
264 Mot inconnu : int13 => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)
264 Avec une unité de mesure, mettez un espace insécable. => de 125 à 15b - Convertit l'adresse LBA de core.img dans le mode CHS et charge ce secteur dans le tampon (interruption bios int13/ah=02h)

266 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 15c à 172 - Recopie le secteur chargé à son nouvel emplacement et saute à cet emplacement (première partie de core.img, soit diskboot.img)
266 Mot inconnu : core => de 15c à 172 - Recopie le secteur chargé à son nouvel emplacement et saute à cet emplacement (première partie de core.img, soit diskboot.img)
266 Mot inconnu : img => de 15c à 172 - Recopie le secteur chargé à son nouvel emplacement et saute à cet emplacement (première partie de core.img, soit diskboot.img)
266 Mot inconnu : diskboot => de 15c à 172 - Recopie le secteur chargé à son nouvel emplacement et saute à cet emplacement (première partie de core.img, soit diskboot.img)
266 Mot inconnu : img => de 15c à 172 - Recopie le secteur chargé à son nouvel emplacement et saute à cet emplacement (première partie de core.img, soit diskboot.img)

268 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 173 à 187 - Affichage des messages d'erreur

270 Mot inconnu : b0 => de 1ab à 1b0 - Affichage de caractères
270 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 1ab à 1b0 - Affichage de caractères

272 Mot inconnu : b2 => de 1b2 à 1b7 - Affichage des chaînes des messages d'erreurs
272 Mot inconnu : b7 => de 1b2 à 1b7 - Affichage des chaînes des messages d'erreurs
272 Tiret d’incise : un tiret demi-cadratin [1] ou cadratin [2] est requis. (Ou éventuellement le signe “moins” [3], s’il s’agit d’une soustraction.) => de 1b2 à 1b7 - Affichage des chaînes des messages d'erreurs

276 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

277 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)** [[http://fr.wikipedia.org/wiki/Master_boot_record]]

278 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)**[[http://fr.wikipedia.org/wiki/Partition_de_disque_dur]]

279 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://forum.ubuntu-fr.org/viewtopic.php?id=390336]] sur le forum ubuntu-fr
279 Mot inconnu : ubuntu-fr =>   * [[http://forum.ubuntu-fr.org/viewtopic.php?id=390336]] sur le forum ubuntu-fr

280 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **(fr)**[[http://fr.wikipedia.org/wiki/Logical_block_addressing]]

284 Il manque un espace insécable. => //Contributeurs principaux : [[:utilisateurs:Nasman]].//
284 Il manque un espace. => //Contributeurs principaux : [[:utilisateurs:Nasman]].//
