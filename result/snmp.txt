6 Mot inconnu : SNMP => ====== SNMP (Simple Network Management Protocol) ou la supervision d'équipements réseaux ======
6 Mot inconnu : Network => ====== SNMP (Simple Network Management Protocol) ou la supervision d'équipements réseaux ======
6 Mot inconnu : Protocol => ====== SNMP (Simple Network Management Protocol) ou la supervision d'équipements réseaux ======

10 S’il s’agit d’une interrogation, il manque un trait d’union. => ==== Qu'est ce que le SNMP ? ====
10 Mot inconnu : SNMP => ==== Qu'est ce que le SNMP ? ====
10 Il manque un espace insécable. => ==== Qu'est ce que le SNMP ? ====

12 Mot inconnu : SNMP => Le **SNMP** est un protocole qui permet aux administrateurs réseaux de gérer les équipements et de diagnostiquer les problèmes. Le sigle SNMP signifie //Simple Network Management Protocol// et la plupart des switchs, UPS, pare-feux matériels, routeurs, etc. comprennent ce protocole pour les diagnostics.
12 Mot inconnu : SNMP => Le **SNMP** est un protocole qui permet aux administrateurs réseaux de gérer les équipements et de diagnostiquer les problèmes. Le sigle SNMP signifie //Simple Network Management Protocol// et la plupart des switchs, UPS, pare-feux matériels, routeurs, etc. comprennent ce protocole pour les diagnostics.
12 Mot inconnu : Network => Le **SNMP** est un protocole qui permet aux administrateurs réseaux de gérer les équipements et de diagnostiquer les problèmes. Le sigle SNMP signifie //Simple Network Management Protocol// et la plupart des switchs, UPS, pare-feux matériels, routeurs, etc. comprennent ce protocole pour les diagnostics.
12 Mot inconnu : Protocol => Le **SNMP** est un protocole qui permet aux administrateurs réseaux de gérer les équipements et de diagnostiquer les problèmes. Le sigle SNMP signifie //Simple Network Management Protocol// et la plupart des switchs, UPS, pare-feux matériels, routeurs, etc. comprennent ce protocole pour les diagnostics.
12 Mot inconnu : switchs => Le **SNMP** est un protocole qui permet aux administrateurs réseaux de gérer les équipements et de diagnostiquer les problèmes. Le sigle SNMP signifie //Simple Network Management Protocol// et la plupart des switchs, UPS, pare-feux matériels, routeurs, etc. comprennent ce protocole pour les diagnostics.
12 Mot inconnu : UPS => Le **SNMP** est un protocole qui permet aux administrateurs réseaux de gérer les équipements et de diagnostiquer les problèmes. Le sigle SNMP signifie //Simple Network Management Protocol// et la plupart des switchs, UPS, pare-feux matériels, routeurs, etc. comprennent ce protocole pour les diagnostics.

14 Il manque un espace insécable. => <note tip>Quand on dit « la plupart », on parle du matériel que l'on retrouve en entreprise ; pas forcément le routeur fourni par votre fournisseur d'accès Internet. Pour savoir si votre matériel est compatible avec le SNMP, veuillez consulter les spécifications techniques livrées avec l'appareil.</note>
14 Il manque un espace insécable. => <note tip>Quand on dit « la plupart », on parle du matériel que l'on retrouve en entreprise ; pas forcément le routeur fourni par votre fournisseur d'accès Internet. Pour savoir si votre matériel est compatible avec le SNMP, veuillez consulter les spécifications techniques livrées avec l'appareil.</note>
14 Il manque un espace insécable. => <note tip>Quand on dit « la plupart », on parle du matériel que l'on retrouve en entreprise ; pas forcément le routeur fourni par votre fournisseur d'accès Internet. Pour savoir si votre matériel est compatible avec le SNMP, veuillez consulter les spécifications techniques livrées avec l'appareil.</note>
14 Mot inconnu : SNMP => <note tip>Quand on dit « la plupart », on parle du matériel que l'on retrouve en entreprise ; pas forcément le routeur fourni par votre fournisseur d'accès Internet. Pour savoir si votre matériel est compatible avec le SNMP, veuillez consulter les spécifications techniques livrées avec l'appareil.</note>

16 Mot inconnu : SNMP => Le protocole SNMP est un standard défini par l'IETF dans la [[http://www.ietf.org/rfc/rfc1157.txt|RFC 1157]] (mai 1990). Le SNMP est souvent vu comme quelque chose de compliqué et d'assez confus. Les API permettant d'interagir avec le protocole englobent tellement de choses qu'au final, on ne s'y retrouve plus. Les livres et la documentation disponibles sur le sujet ont tendance à compliquer les choses et à ne pas les démystifier. C'est ce que je vais essayer de faire dans cet article.
16 Mot inconnu : SNMP => Le protocole SNMP est un standard défini par l'IETF dans la [[http://www.ietf.org/rfc/rfc1157.txt|RFC 1157]] (mai 1990). Le SNMP est souvent vu comme quelque chose de compliqué et d'assez confus. Les API permettant d'interagir avec le protocole englobent tellement de choses qu'au final, on ne s'y retrouve plus. Les livres et la documentation disponibles sur le sujet ont tendance à compliquer les choses et à ne pas les démystifier. C'est ce que je vais essayer de faire dans cet article.

20 Mot inconnu : SNMP => Le protocole SNMP(Simple Network Management Protocol) est relativement simple… une fois qu'on a compris. Voyons comment se compose un ensemble d'éléments communiquant //via// SNMP.
20 Il manque un espace avant la parenthèse. => Le protocole SNMP(Simple Network Management Protocol) est relativement simple… une fois qu'on a compris. Voyons comment se compose un ensemble d'éléments communiquant //via// SNMP.
20 Mot inconnu : Network => Le protocole SNMP(Simple Network Management Protocol) est relativement simple… une fois qu'on a compris. Voyons comment se compose un ensemble d'éléments communiquant //via// SNMP.
20 Mot inconnu : Protocol => Le protocole SNMP(Simple Network Management Protocol) est relativement simple… une fois qu'on a compris. Voyons comment se compose un ensemble d'éléments communiquant //via// SNMP.
20 Mot inconnu : SNMP => Le protocole SNMP(Simple Network Management Protocol) est relativement simple… une fois qu'on a compris. Voyons comment se compose un ensemble d'éléments communiquant //via// SNMP.

22 Mot inconnu : switch => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Typographie : pas de virgule avant les points de suspension. => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : SNMP => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : dæmon => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : SNMP => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : Object => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : Identifiers => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : OID => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : OID => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : SNMP => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : SNMP => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : SNMP => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : OID => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.
22 Mot inconnu : SNMP => Un périphérique réseau (routeur, switch, pare-feu, …) fait tourner un //agent SNMP// qui est en fait un processus //dæmon// qui répond aux requêtes du réseau. L'**agent SNMP** fournit un grand nombre d'**identifiant d'objets** (//Object Identifiers// ou **OID**). Un **OID** est une paire clé-valeur unique. L'**agent SNMP** remplit ces valeurs et fait en sorte qu'elles soient disponibles. Un **manager SNMP** (ou **Serveur SNMP**) peut effectuer des requêtes aux agents avec ces paires clé-valeur à propos d'informations spécifiques. Les **OID SNMP** peuvent être lus ou écrits.

24 Mot inconnu : SNMP => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : SNMP => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : switches => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : SNMP => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Il manque un espace insécable. => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : community => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : name => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : OID => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : community => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : name => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Il manque un espace insécable. => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Il manque un espace insécable. => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : SNMP => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.
24 Mot inconnu : UDP => Notons qu'il est rare d'écrire des informations sur un périphérique SNMP. Le SNMP est surtout utilisé par de nombreuses applications de management pour contrôler l'état des périphériques réseaux (comme une interface graphique administrative pour les switches). Un système d'authentification basique existe dans le SNMP ; il permet au manager d'envoyer un //community name// (qui est en fait un mot de passe en clair) pour autoriser la lecture ou l'écriture des OID. La plupart des périphériques utilisent le //community name// non sécurisé « public ». Les communications SNMP se font //via// les ports UDP 161 et 162.

28 Mot inconnu : MIB => ==== MIB ====

30 Mot inconnu : SNMP => Si vous avez déjà effectué quelques recherches sur le SNMP, vous avez sûrement été confronté aux **MIB** (//Management Information Base//). L'importance des MIB est très surfaite et vous allez comprendre pourquoi. Au premier coup d'œil, une MIB peut paraître très complexe ; en réalité, c'est très simple.
30 Mot inconnu : MIB => Si vous avez déjà effectué quelques recherches sur le SNMP, vous avez sûrement été confronté aux **MIB** (//Management Information Base//). L'importance des MIB est très surfaite et vous allez comprendre pourquoi. Au premier coup d'œil, une MIB peut paraître très complexe ; en réalité, c'est très simple.
30 Mot inconnu : MIB => Si vous avez déjà effectué quelques recherches sur le SNMP, vous avez sûrement été confronté aux **MIB** (//Management Information Base//). L'importance des MIB est très surfaite et vous allez comprendre pourquoi. Au premier coup d'œil, une MIB peut paraître très complexe ; en réalité, c'est très simple.
30 Mot inconnu : MIB => Si vous avez déjà effectué quelques recherches sur le SNMP, vous avez sûrement été confronté aux **MIB** (//Management Information Base//). L'importance des MIB est très surfaite et vous allez comprendre pourquoi. Au premier coup d'œil, une MIB peut paraître très complexe ; en réalité, c'est très simple.
30 Il manque un espace insécable. => Si vous avez déjà effectué quelques recherches sur le SNMP, vous avez sûrement été confronté aux **MIB** (//Management Information Base//). L'importance des MIB est très surfaite et vous allez comprendre pourquoi. Au premier coup d'œil, une MIB peut paraître très complexe ; en réalité, c'est très simple.

32 Mot inconnu : OID => Les **OID** sont numériques et globaux. Un **OID** est très similaire à une adresse IPv6 et les différents fabricants ont différents préfixes, chaque fabricant a sa gamme de produit (un autre préfixe) et ainsi de suite. Les OID peuvent très vite être longs et c'est compliqué pour un humain de se rappeler la signification de cet ensemble de nombres. C'est pour cela qu'une méthode a été mise au point pour traduire un OID numérique dans une forme lisible pour un humain. Cette carte de traduction est stockée dans un fichier texte appelé //Management Information Base// ou **MIB**.
32 Mot inconnu : OID => Les **OID** sont numériques et globaux. Un **OID** est très similaire à une adresse IPv6 et les différents fabricants ont différents préfixes, chaque fabricant a sa gamme de produit (un autre préfixe) et ainsi de suite. Les OID peuvent très vite être longs et c'est compliqué pour un humain de se rappeler la signification de cet ensemble de nombres. C'est pour cela qu'une méthode a été mise au point pour traduire un OID numérique dans une forme lisible pour un humain. Cette carte de traduction est stockée dans un fichier texte appelé //Management Information Base// ou **MIB**.
32 Mot inconnu : IPv6 => Les **OID** sont numériques et globaux. Un **OID** est très similaire à une adresse IPv6 et les différents fabricants ont différents préfixes, chaque fabricant a sa gamme de produit (un autre préfixe) et ainsi de suite. Les OID peuvent très vite être longs et c'est compliqué pour un humain de se rappeler la signification de cet ensemble de nombres. C'est pour cela qu'une méthode a été mise au point pour traduire un OID numérique dans une forme lisible pour un humain. Cette carte de traduction est stockée dans un fichier texte appelé //Management Information Base// ou **MIB**.
32 Mot inconnu : OID => Les **OID** sont numériques et globaux. Un **OID** est très similaire à une adresse IPv6 et les différents fabricants ont différents préfixes, chaque fabricant a sa gamme de produit (un autre préfixe) et ainsi de suite. Les OID peuvent très vite être longs et c'est compliqué pour un humain de se rappeler la signification de cet ensemble de nombres. C'est pour cela qu'une méthode a été mise au point pour traduire un OID numérique dans une forme lisible pour un humain. Cette carte de traduction est stockée dans un fichier texte appelé //Management Information Base// ou **MIB**.
32 Mot inconnu : OID => Les **OID** sont numériques et globaux. Un **OID** est très similaire à une adresse IPv6 et les différents fabricants ont différents préfixes, chaque fabricant a sa gamme de produit (un autre préfixe) et ainsi de suite. Les OID peuvent très vite être longs et c'est compliqué pour un humain de se rappeler la signification de cet ensemble de nombres. C'est pour cela qu'une méthode a été mise au point pour traduire un OID numérique dans une forme lisible pour un humain. Cette carte de traduction est stockée dans un fichier texte appelé //Management Information Base// ou **MIB**.
32 Mot inconnu : MIB => Les **OID** sont numériques et globaux. Un **OID** est très similaire à une adresse IPv6 et les différents fabricants ont différents préfixes, chaque fabricant a sa gamme de produit (un autre préfixe) et ainsi de suite. Les OID peuvent très vite être longs et c'est compliqué pour un humain de se rappeler la signification de cet ensemble de nombres. C'est pour cela qu'une méthode a été mise au point pour traduire un OID numérique dans une forme lisible pour un humain. Cette carte de traduction est stockée dans un fichier texte appelé //Management Information Base// ou **MIB**.

34 Mot inconnu : MIB => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : SNMP => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : SNMP => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : MIB => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : MIB => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Il manque un espace insécable. => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : MIB => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : MIB => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.
34 Mot inconnu : SNMP => Vous n'avez pas besoin d'un MIB pour utiliser SNMP ou effectuer des requêtes sur des périphériques SNMP mais sans la MIB, vous n'allez pas savoir facilement ce que signifient les données retournées par le périphérique. Dans certains cas, c'est facile comme le nom de l'hôte, l'usage des disques ou les informations d'état des ports. Dans d'autres cas, cela peut être plus difficile et une MIB peut être d'une grande aide. Notez qu'il est assez inhabituel pour la plupart des applications d'écrire des requêtes uniquement numériques ; la plupart des applications permettent l'installation de MIB complémentaires. Cette installation consiste en fait à placer les MIB à un endroit où l'application cliente SNMP peut les trouver pour effectuer la traduction.

36 Mot inconnu : SNMP => ==== Techniques de supervision avec SNMP ====

38 Mot inconnu : SNMP => SNMP peut être utilisé de deux manières distinctes : le //polling// et les //traps//.
38 Il manque un espace insécable. => SNMP peut être utilisé de deux manières distinctes : le //polling// et les //traps//.
38 Mot inconnu : polling => SNMP peut être utilisé de deux manières distinctes : le //polling// et les //traps//.
38 Mot inconnu : traps => SNMP peut être utilisé de deux manières distinctes : le //polling// et les //traps//.

40 Mot inconnu : polling => Le **polling** consiste simplement à envoyer une requête à intervalles réguliers pour obtenir une valeur particulière. Cette technique est appelée « vérification active ». Vous pouvez, par programme ou script, vérifier si les valeurs sont correctes. Si la requête échoue, il est possible qu'il y ait un problème avec le périphérique. Cependant, vu que le SNMP s'appuie sur UDP, il est conseillé de réitérer la requête pour confirmer le problème (surtout dans le cas d'une vérification au travers d'Internet).
40 Il manque un espace insécable. => Le **polling** consiste simplement à envoyer une requête à intervalles réguliers pour obtenir une valeur particulière. Cette technique est appelée « vérification active ». Vous pouvez, par programme ou script, vérifier si les valeurs sont correctes. Si la requête échoue, il est possible qu'il y ait un problème avec le périphérique. Cependant, vu que le SNMP s'appuie sur UDP, il est conseillé de réitérer la requête pour confirmer le problème (surtout dans le cas d'une vérification au travers d'Internet).
40 Il manque un espace insécable. => Le **polling** consiste simplement à envoyer une requête à intervalles réguliers pour obtenir une valeur particulière. Cette technique est appelée « vérification active ». Vous pouvez, par programme ou script, vérifier si les valeurs sont correctes. Si la requête échoue, il est possible qu'il y ait un problème avec le périphérique. Cependant, vu que le SNMP s'appuie sur UDP, il est conseillé de réitérer la requête pour confirmer le problème (surtout dans le cas d'une vérification au travers d'Internet).
40 Mot inconnu : SNMP => Le **polling** consiste simplement à envoyer une requête à intervalles réguliers pour obtenir une valeur particulière. Cette technique est appelée « vérification active ». Vous pouvez, par programme ou script, vérifier si les valeurs sont correctes. Si la requête échoue, il est possible qu'il y ait un problème avec le périphérique. Cependant, vu que le SNMP s'appuie sur UDP, il est conseillé de réitérer la requête pour confirmer le problème (surtout dans le cas d'une vérification au travers d'Internet).
40 Mot inconnu : UDP => Le **polling** consiste simplement à envoyer une requête à intervalles réguliers pour obtenir une valeur particulière. Cette technique est appelée « vérification active ». Vous pouvez, par programme ou script, vérifier si les valeurs sont correctes. Si la requête échoue, il est possible qu'il y ait un problème avec le périphérique. Cependant, vu que le SNMP s'appuie sur UDP, il est conseillé de réitérer la requête pour confirmer le problème (surtout dans le cas d'une vérification au travers d'Internet).

42 Mot inconnu : traps => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Il manque un espace insécable. => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : SNMP => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : SNMP => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : SNMP => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : down => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : host => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : host => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : SNMP => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : traps => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : traps => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : handlers => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : handler => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.
42 Mot inconnu : trap => Les **traps** consistent à faire de la vérification passive ; en gros, on configure l'agent SNMP pour qu'il contacte un autre agent SNMP en cas de problème. C'est-à-dire que l'on peut configurer un périphérique réseau (comme un routeur) pour qu'il envoie un **trap SNMP** lors de certains événements. Par exemple, le routeur peut envoyer un **trap** lorsqu'il détecte que la ligne est coupée (//down//). Quand un **événement trap** apparait, l'agent sur le périphérique va envoyer le **trap** vers une destination pré-configurée communément appelé **trap host**. Le //trap host// possède son propre agent SNMP qui va accepter et traiter les //traps// lorsqu'ils arrivent. Le traitement des //traps// est effectué par des **trap handlers**. Le **handler** peut faire ce qui est approprié pour répondre au //trap//, comme envoyer un courriel d'alerte ou faire ce qu'on veut.

44 Mot inconnu : SNMP => ==== Les différentes versions de SNMP ====

46 Mot inconnu : SNMP => Il existe actuellement 3 versions différentes du protocole SNMP :
46 Il manque un espace insécable. => Il existe actuellement 3 versions différentes du protocole SNMP :

47 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * SNMP v1 (RFC 1155, 1157 et 1212).
47 Mot inconnu : SNMP =>   * SNMP v1 (RFC 1155, 1157 et 1212).
47 Mot inconnu : v1 =>   * SNMP v1 (RFC 1155, 1157 et 1212).

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * SNMP v2c (RFC 1901 à 1908).
48 Mot inconnu : SNMP =>   * SNMP v2c (RFC 1901 à 1908).
48 Mot inconnu : v2c =>   * SNMP v2c (RFC 1901 à 1908).

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * SNMP v3 (RFC 3411 à 3418).
49 Mot inconnu : SNMP =>   * SNMP v3 (RFC 3411 à 3418).
49 Mot inconnu : v3 =>   * SNMP v3 (RFC 3411 à 3418).

51 Mot inconnu : co-existence => La co-existence des trois versions est détaillée dans la RFC 3584. 
51 Espace(s) en fin de ligne à supprimer. => La co-existence des trois versions est détaillée dans la RFC 3584. 

56 Mot inconnu : SNMP => Pour installer un manager SNMP, vous pouvez utiliser //Net-SNMP//. L'application Net-SNMP est un ensemble de programmes console permettant de tout faire avec le protocole SNMP. L'avantage d'utiliser des programmes console est que vous pouvez facilement écrire des petits scripts de vérification que vous pourrez intégrer dans [[:Nagios]], par exemple.
56 Mot inconnu : Net-SNMP => Pour installer un manager SNMP, vous pouvez utiliser //Net-SNMP//. L'application Net-SNMP est un ensemble de programmes console permettant de tout faire avec le protocole SNMP. L'avantage d'utiliser des programmes console est que vous pouvez facilement écrire des petits scripts de vérification que vous pourrez intégrer dans [[:Nagios]], par exemple.
56 Mot inconnu : Net-SNMP => Pour installer un manager SNMP, vous pouvez utiliser //Net-SNMP//. L'application Net-SNMP est un ensemble de programmes console permettant de tout faire avec le protocole SNMP. L'avantage d'utiliser des programmes console est que vous pouvez facilement écrire des petits scripts de vérification que vous pourrez intégrer dans [[:Nagios]], par exemple.
56 Mot inconnu : SNMP => Pour installer un manager SNMP, vous pouvez utiliser //Net-SNMP//. L'application Net-SNMP est un ensemble de programmes console permettant de tout faire avec le protocole SNMP. L'avantage d'utiliser des programmes console est que vous pouvez facilement écrire des petits scripts de vérification que vous pourrez intégrer dans [[:Nagios]], par exemple.

58 Mot inconnu : SNMP => Pour installer le paquet client SNMP, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] [[apt>snmpd]].
58 Il manque un espace. => Pour installer le paquet client SNMP, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] [[apt>snmpd]].
58 Mot inconnu : snmpd => Pour installer le paquet client SNMP, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] [[apt>snmpd]].

62 Il manque un espace insécable. => Attention : certains paramètres sont à modifier dans le fichier ** /etc/default/snmpd **

66 Il manque un espace insécable. => Sauvegardez le fichier de configuration :

68 Mot inconnu : sudo => sudo cp /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.bak
68 Mot inconnu : cp => sudo cp /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.bak

71 Il manque un espace. => [[:tutoriel:comment_modifier_un_fichier|Editez le fichier]] de configuration du service SNMP :
71 Mot inconnu : Editez => [[:tutoriel:comment_modifier_un_fichier|Editez le fichier]] de configuration du service SNMP :
71 Mot inconnu : SNMP => [[:tutoriel:comment_modifier_un_fichier|Editez le fichier]] de configuration du service SNMP :
71 Il manque un espace insécable. => [[:tutoriel:comment_modifier_un_fichier|Editez le fichier]] de configuration du service SNMP :

74 Mot inconnu : sudo => sudo nano /etc/snmp/snmpd.conf
74 Mot inconnu : nano => sudo nano /etc/snmp/snmpd.conf

77 Il manque un espace insécable. => Afin qu'il contienne ceci (à adapter selon vos besoins) :

80 Mot inconnu : This => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : controls => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : the => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : activity => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : of => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : snmpd => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : and => # This file controls the activity of snmpd and snmptrapd
80 Mot inconnu : snmptrapd => # This file controls the activity of snmpd and snmptrapd

82 Mot inconnu : MIB => # MIB directories.  /usr/share/snmp/mibs is the default, but
82 Mot inconnu : directories => # MIB directories.  /usr/share/snmp/mibs is the default, but
82 Espace(s) surnuméraire(s) à supprimer. => # MIB directories.  /usr/share/snmp/mibs is the default, but
82 Mot inconnu : is => # MIB directories.  /usr/share/snmp/mibs is the default, but
82 Mot inconnu : the => # MIB directories.  /usr/share/snmp/mibs is the default, but
82 Mot inconnu : default => # MIB directories.  /usr/share/snmp/mibs is the default, but

83 Mot inconnu : including => # including it here avoids some strange problems.
83 Mot inconnu : it => # including it here avoids some strange problems.
83 Mot inconnu : here => # including it here avoids some strange problems.
83 Mot inconnu : avoids => # including it here avoids some strange problems.
83 Mot inconnu : some => # including it here avoids some strange problems.
83 Mot inconnu : strange => # including it here avoids some strange problems.
83 Mot inconnu : problems => # including it here avoids some strange problems.

84 Mot inconnu : MIBDIRS => export MIBDIRS=/usr/share/snmp/mibs

86 Mot inconnu : snmpd => # snmpd control (yes means start daemon).
86 Mot inconnu : control => # snmpd control (yes means start daemon).
86 Mot inconnu : yes => # snmpd control (yes means start daemon).
86 Mot inconnu : means => # snmpd control (yes means start daemon).
86 Mot inconnu : start => # snmpd control (yes means start daemon).
86 Mot inconnu : daemon => # snmpd control (yes means start daemon).

87 Mot inconnu : SNMPDRUN => SNMPDRUN=yes
87 Mot inconnu : yes => SNMPDRUN=yes

89 Mot inconnu : snmpd => # snmpd options (use syslog, close stdin/out/err).
89 Mot inconnu : syslog => # snmpd options (use syslog, close stdin/out/err).
89 Mot inconnu : stdin => # snmpd options (use syslog, close stdin/out/err).
89 Mot inconnu : err => # snmpd options (use syslog, close stdin/out/err).

90 Mot inconnu : SNMPDOPTS => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Mot inconnu : Lsd => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Mot inconnu : Lf => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Il manque un espace à côté du tiret. => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Mot inconnu : snmp => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Il manque un espace à côté du tiret. => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Mot inconnu : snmp => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Il manque un espace à côté du tiret. => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '
90 Mot inconnu : smux => SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -g snmp -I -smux -p /var/run/snmpd.pid '

92 Mot inconnu : snmptrapd => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : control => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : yes => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : means => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : start => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : daemon => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Espace(s) surnuméraire(s) à supprimer. => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : of => # snmptrapd control (yes means start daemon).  As of net-snmp version
92 Mot inconnu : net-snmp => # snmptrapd control (yes means start daemon).  As of net-snmp version

93 Mot inconnu : agentx => # 5.0, master agentx support must be enabled in snmpd before snmptrapd
93 Mot inconnu : enabled => # 5.0, master agentx support must be enabled in snmpd before snmptrapd
93 Mot inconnu : snmpd => # 5.0, master agentx support must be enabled in snmpd before snmptrapd
93 Mot inconnu : before => # 5.0, master agentx support must be enabled in snmpd before snmptrapd
93 Mot inconnu : snmptrapd => # 5.0, master agentx support must be enabled in snmpd before snmptrapd

94 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : can => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : run => # can be run.  See snmpd.conf(5) for how to do this.
94 Espace(s) surnuméraire(s) à supprimer. => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : See => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : snmpd => # can be run.  See snmpd.conf(5) for how to do this.
94 Il manque un espace. => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : how => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : to => # can be run.  See snmpd.conf(5) for how to do this.
94 Mot inconnu : this => # can be run.  See snmpd.conf(5) for how to do this.

95 Mot inconnu : TRAPDRUN => TRAPDRUN=no

97 Mot inconnu : snmptrapd => # snmptrapd options (use syslog).
97 Mot inconnu : syslog => # snmptrapd options (use syslog).

98 Mot inconnu : TRAPDOPTS => TRAPDOPTS='-Lsd -p /var/run/snmptrapd.pid'
98 Mot inconnu : Lsd => TRAPDOPTS='-Lsd -p /var/run/snmptrapd.pid'

100 Mot inconnu : create => # create symlink on Debian legacy location to official RFC path
100 Mot inconnu : symlink => # create symlink on Debian legacy location to official RFC path
100 Incohérence avec “on” : “Debian” devrait être un verbe, un pronom objet, un adverbe de négation, etc. => # create symlink on Debian legacy location to official RFC path
100 Mot inconnu : legacy => # create symlink on Debian legacy location to official RFC path
100 Mot inconnu : to => # create symlink on Debian legacy location to official RFC path
100 Mot inconnu : path => # create symlink on Debian legacy location to official RFC path

101 Mot inconnu : SNMPDCOMPAT => SNMPDCOMPAT=yes
101 Mot inconnu : yes => SNMPDCOMPAT=yes

103 Il manque un espace insécable. => # Alerte pour le disque dur :

104 Mot inconnu : disk => disk / 100000
104 Formatage des grands nombres. => disk / 100000

106 Mot inconnu : rocommunity => rocommunity  public # public à remplacer par sa communauté
106 Espace(s) surnuméraire(s) à supprimer. => rocommunity  public # public à remplacer par sa communauté

107 Mot inconnu : syslocation => syslocation  Mon_Ordinateur
107 Espace(s) surnuméraire(s) à supprimer. => syslocation  Mon_Ordinateur
107 Mot inconnu : Mon_Ordinateur => syslocation  Mon_Ordinateur

108 Mot inconnu : syscontact => syscontact  mon_courriel@fai.fr
108 Espace(s) surnuméraire(s) à supprimer. => syscontact  mon_courriel@fai.fr

111 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **export MIBDIRS=** définit le répertoire où sont stocké les MIBs
111 Mot inconnu : MIBDIRS =>   * **export MIBDIRS=** définit le répertoire où sont stocké les MIBs
111 Mot inconnu : MIBs =>   * **export MIBDIRS=** définit le répertoire où sont stocké les MIBs

113 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **SNMPDRUN=** active ou désactive le service SNMP
113 Mot inconnu : SNMPDRUN =>   * **SNMPDRUN=** active ou désactive le service SNMP
113 Mot inconnu : SNMP =>   * **SNMPDRUN=** active ou désactive le service SNMP

115 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **SNMPDOPTS=** options de démarrage du daemon SNMPD
115 Mot inconnu : SNMPDOPTS =>   * **SNMPDOPTS=** options de démarrage du daemon SNMPD
115 Mot inconnu : daemon =>   * **SNMPDOPTS=** options de démarrage du daemon SNMPD
115 Mot inconnu : SNMPD =>   * **SNMPDOPTS=** options de démarrage du daemon SNMPD

117 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **TRAPDRUN=** active ou désactive le service de capture des traps SNMP
117 Mot inconnu : TRAPDRUN =>   * **TRAPDRUN=** active ou désactive le service de capture des traps SNMP
117 Mot inconnu : traps =>   * **TRAPDRUN=** active ou désactive le service de capture des traps SNMP
117 Mot inconnu : SNMP =>   * **TRAPDRUN=** active ou désactive le service de capture des traps SNMP

119 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * **TRAPDOPTS=** options de démarrage de daemon SNMPTRAPD
119 Mot inconnu : TRAPDOPTS =>   * **TRAPDOPTS=** options de démarrage de daemon SNMPTRAPD
119 Mot inconnu : daemon =>   * **TRAPDOPTS=** options de démarrage de daemon SNMPTRAPD
119 Mot inconnu : SNMPTRAPD =>   * **TRAPDOPTS=** options de démarrage de daemon SNMPTRAPD

121 Mot inconnu : SNMP => Valider les changements, et redémarrer le service SNMP

123 Mot inconnu : sudo => sudo /etc/init.d/snmpd restart
123 Mot inconnu : restart => sudo /etc/init.d/snmpd restart

126 Mot inconnu : MIBs => ==== Gestion des MIBs avec tkmib ====
126 Mot inconnu : tkmib => ==== Gestion des MIBs avec tkmib ====

127 Mot inconnu : MIBs => Pour visualiser les MIBs nous allons installer [[apt://tkmib]]. Pour le lancement il vous suffit de taper la [[:commande_shell|commande]] :
127 Mot inconnu : tkmib => Pour visualiser les MIBs nous allons installer [[apt://tkmib]]. Pour le lancement il vous suffit de taper la [[:commande_shell|commande]] :
127 Il manque un espace insécable. => Pour visualiser les MIBs nous allons installer [[apt://tkmib]]. Pour le lancement il vous suffit de taper la [[:commande_shell|commande]] :

128 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   tkmib
128 Mot inconnu : tkmib =>   tkmib

130 Mot inconnu : snmp => {{:snmp:tkmib_5421_01.png?492x600|}}
130 Il manque un espace. => {{:snmp:tkmib_5421_01.png?492x600|}}
130 Mot inconnu : tkmib_5421_01 => {{:snmp:tkmib_5421_01.png?492x600|}}
130 Il manque un espace insécable. => {{:snmp:tkmib_5421_01.png?492x600|}}
130 Il manque un espace. => {{:snmp:tkmib_5421_01.png?492x600|}}
130 Mot inconnu : x600 => {{:snmp:tkmib_5421_01.png?492x600|}}

132 Mot inconnu : MIB => L'étape suivante consiste à vous procurer les MIB concernant votre matériel (en général, sur le site web du constructeur) et à les copier dans le répertoire « /usr/share/snmp/mibs/ », répertoire par défaut sous Debian/Ubuntu.
132 Il manque un espace insécable. => L'étape suivante consiste à vous procurer les MIB concernant votre matériel (en général, sur le site web du constructeur) et à les copier dans le répertoire « /usr/share/snmp/mibs/ », répertoire par défaut sous Debian/Ubuntu.
132 Il manque un espace insécable. => L'étape suivante consiste à vous procurer les MIB concernant votre matériel (en général, sur le site web du constructeur) et à les copier dans le répertoire « /usr/share/snmp/mibs/ », répertoire par défaut sous Debian/Ubuntu.

134 Il manque un espace insécable. => Il est toujours possible de les installer dans un autre répertoire de votre choix mais ce faisant, il devient nécessaire de renseigner ce dernier en assignant la variable d'environnement « ''$MIBDIRS'' » de la manière suivante (à introduire dans une console) :
134 Mot inconnu : MIBDIRS => Il est toujours possible de les installer dans un autre répertoire de votre choix mais ce faisant, il devient nécessaire de renseigner ce dernier en assignant la variable d'environnement « ''$MIBDIRS'' » de la manière suivante (à introduire dans une console) :
134 Guillemets typographiques fermants. => Il est toujours possible de les installer dans un autre répertoire de votre choix mais ce faisant, il devient nécessaire de renseigner ce dernier en assignant la variable d'environnement « ''$MIBDIRS'' » de la manière suivante (à introduire dans une console) :
134 Il manque un espace insécable. => Il est toujours possible de les installer dans un autre répertoire de votre choix mais ce faisant, il devient nécessaire de renseigner ce dernier en assignant la variable d'environnement « ''$MIBDIRS'' » de la manière suivante (à introduire dans une console) :
134 Il manque un espace insécable. => Il est toujours possible de les installer dans un autre répertoire de votre choix mais ce faisant, il devient nécessaire de renseigner ce dernier en assignant la variable d'environnement « ''$MIBDIRS'' » de la manière suivante (à introduire dans une console) :

136 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   MIBDIRS=+/chemin/complet/de/votre/répertoire/
136 Mot inconnu : MIBDIRS =>   MIBDIRS=+/chemin/complet/de/votre/répertoire/

138 Il manque un espace. => Ensuite, il est possible de renseigner ce nouveau répertoire pour tous en ajoutant la ligne ci-dessus [[:tutoriel:comment_editer_un_fichier|dans le fichier]] **/etc/snmp/snmp.conf** : 
138 Il manque un espace insécable. => Ensuite, il est possible de renseigner ce nouveau répertoire pour tous en ajoutant la ligne ci-dessus [[:tutoriel:comment_editer_un_fichier|dans le fichier]] **/etc/snmp/snmp.conf** : 
138 Espace(s) en fin de ligne à supprimer. => Ensuite, il est possible de renseigner ce nouveau répertoire pour tous en ajoutant la ligne ci-dessus [[:tutoriel:comment_editer_un_fichier|dans le fichier]] **/etc/snmp/snmp.conf** : 

140 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mibdirs +/chemin/complet/de/votre/répertoire/
140 Mot inconnu : mibdirs =>   mibdirs +/chemin/complet/de/votre/répertoire/

142 Mot inconnu : Net-SNMP => La bibliothèque Net-SNMP supporte une liste finie bien qu'extensible de MIB, définie lors de la compilation.
142 Mot inconnu : MIB => La bibliothèque Net-SNMP supporte une liste finie bien qu'extensible de MIB, définie lors de la compilation.

143 Mot inconnu : MIB => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Il manque un espace insécable. => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Mot inconnu : MIBS => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Guillemets typographiques fermants. => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Il manque un espace insécable. => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Mot inconnu : DISMAN-EVENT-MIB => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Il manque un espace insécable. => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 
143 Espace(s) en fin de ligne à supprimer. => Il est alors nécessaire d'ajouter les noms de MIB supplémentaires pour pouvoir les traduire correctement. Pour ce faire, il faut ajouter chaque nom (spécifié dans le fichier, à ne pas confondre avec le nom du fichier) peut être ajouté dans la variable d'environnement « ''$MIBS'' » de la manière suivante (dans cet exemple, la nouvelle se nomme DISMAN-EVENT-MIB) : 

145 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   MIBS=+DISMAN-EVENT-MIB
145 Mot inconnu : MIBS =>   MIBS=+DISMAN-EVENT-MIB
145 Mot inconnu : DISMAN-EVENT-MIB =>   MIBS=+DISMAN-EVENT-MIB

147 Il manque un espace. => De même, cette information peut également profiter à tous en ajoutant la ligne ci-dessus [[:tutoriel:comment_editer_un_fichier|dans le fichier]] **/etc/snmp/snmp.conf** : 
147 Il manque un espace insécable. => De même, cette information peut également profiter à tous en ajoutant la ligne ci-dessus [[:tutoriel:comment_editer_un_fichier|dans le fichier]] **/etc/snmp/snmp.conf** : 
147 Espace(s) en fin de ligne à supprimer. => De même, cette information peut également profiter à tous en ajoutant la ligne ci-dessus [[:tutoriel:comment_editer_un_fichier|dans le fichier]] **/etc/snmp/snmp.conf** : 

149 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mibs +DISMAN-EVENT-MIB
149 Mot inconnu : mibs =>   mibs +DISMAN-EVENT-MIB
149 Mot inconnu : DISMAN-EVENT-MIB =>   mibs +DISMAN-EVENT-MIB

151 Mot inconnu : MIBs => ==== Gestion des MIBs avec SNMPb ====
151 Mot inconnu : SNMPb => ==== Gestion des MIBs avec SNMPb ====

156 Mot inconnu : SNMP => Pour une utilisation de base du SNMP, vous avez besoin de 2 commandes principales : 
156 Il manque un espace insécable. => Pour une utilisation de base du SNMP, vous avez besoin de 2 commandes principales : 
156 Espace(s) en fin de ligne à supprimer. => Pour une utilisation de base du SNMP, vous avez besoin de 2 commandes principales : 

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''snmpwalk'' : pour sortir des informations par lots.
157 Guillemets typographiques ouvrants. =>   * ''snmpwalk'' : pour sortir des informations par lots.
157 Mot inconnu : snmpwalk =>   * ''snmpwalk'' : pour sortir des informations par lots.
157 Guillemets typographiques fermants. =>   * ''snmpwalk'' : pour sortir des informations par lots.
157 Il manque un espace insécable. =>   * ''snmpwalk'' : pour sortir des informations par lots.

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''snmpget'' : pour obtenir une information sur un OID précis.
158 Guillemets typographiques ouvrants. =>   * ''snmpget'' : pour obtenir une information sur un OID précis.
158 Mot inconnu : snmpget =>   * ''snmpget'' : pour obtenir une information sur un OID précis.
158 Guillemets typographiques fermants. =>   * ''snmpget'' : pour obtenir une information sur un OID précis.
158 Il manque un espace insécable. =>   * ''snmpget'' : pour obtenir une information sur un OID précis.
158 Mot inconnu : OID =>   * ''snmpget'' : pour obtenir une information sur un OID précis.

160 Mot inconnu : SNMP => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.
160 Mot inconnu : Net-SNMP => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.
160 Mot inconnu : manpage => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.
160 Il manque un espace insécable. => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.
160 Guillemets typographiques ouvrants. => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.
160 Mot inconnu : snmpcmd => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.
160 Guillemets typographiques fermants. => Il existe bien d'autres commandes SNMP disponibles dans le paquet //Net-SNMP//. Je vous encourage à lire la manpage principale : ''man snmpcmd''.

162 Mot inconnu : snmpwalk => ==== snmpwalk ====

164 Il manque un espace insécable. => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Guillemets typographiques ouvrants. => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Mot inconnu : snmpwalk => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Guillemets typographiques fermants. => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Il manque un espace insécable. => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Mot inconnu : switch => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Mot inconnu : SuperStack3 => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :
164 Il manque un espace insécable. => Lorsqu'on décide de superviser un périphérique, il est important de connaître ce qui est disponible. Pour ce faire, il existe la commande « ''snmpwalk'' ». Cette commande permet de sortir sur la console toutes les informations accessibles sur le périphérique. Voici un exemple avec un switch 3com SuperStack3 :

166 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   snmpwalk -v1 -c private 192.168.0.232
166 Mot inconnu : snmpwalk =>   snmpwalk -v1 -c private 192.168.0.232
166 Il manque un espace à côté du tiret. =>   snmpwalk -v1 -c private 192.168.0.232
166 Mot inconnu : v1 =>   snmpwalk -v1 -c private 192.168.0.232
166 Mot inconnu : private =>   snmpwalk -v1 -c private 192.168.0.232

168 Il manque un espace insécable. => Voyons brièvement les différentes options :

169 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''-v1'' : indique que l'on utilise le protocole SNMP version 1 (la version du protocole à utiliser dépend du périphérique supervisé).
169 Mot inconnu : v1 =>   * ''-v1'' : indique que l'on utilise le protocole SNMP version 1 (la version du protocole à utiliser dépend du périphérique supervisé).
169 Guillemets typographiques fermants. =>   * ''-v1'' : indique que l'on utilise le protocole SNMP version 1 (la version du protocole à utiliser dépend du périphérique supervisé).
169 Il manque un espace insécable. =>   * ''-v1'' : indique que l'on utilise le protocole SNMP version 1 (la version du protocole à utiliser dépend du périphérique supervisé).
169 Mot inconnu : SNMP =>   * ''-v1'' : indique que l'on utilise le protocole SNMP version 1 (la version du protocole à utiliser dépend du périphérique supervisé).

170 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : private =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Guillemets typographiques fermants. =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Il manque un espace insécable. =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 S’il s’agit d’un impératif, mettez un trait d’union. =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : community =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : name =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : community =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : name =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Guillemets typographiques ouvrants. =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : private =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Guillemets typographiques fermants. =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : community =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Mot inconnu : name =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Erreur de numérisation ? Virgules au lieu de points ? =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).
170 Typographie : points de suspension. Utilisez le caractère dédié. =>   * ''-c private'' : indique le //community name// pour accéder aux informations. Dans cet exemple, on utilise le //community name// ''private''. Ce //community name// est dépendant du périphérique et se modifie dans les paramètres de ce dernier (interface web, console,...).

171 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''192.168.0.232'' : indique l'adresse IP du périphérique.
171 Il manque un espace insécable. =>   * ''192.168.0.232'' : indique l'adresse IP du périphérique.

173 Il manque un espace insécable. => Une telle commande retourne quelque chose de similaire à ce qui suit : 
173 Espace(s) en fin de ligne à supprimer. => Une telle commande retourne quelque chose de similaire à ce qui suit : 

175 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysDescr.0 = STRING: 3Com SuperStack 3
175 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysDescr.0 = STRING: 3Com SuperStack 3
175 Mot inconnu : sysDescr => SNMPv2-MIB::sysDescr.0 = STRING: 3Com SuperStack 3
175 Il manque un espace insécable. => SNMPv2-MIB::sysDescr.0 = STRING: 3Com SuperStack 3
175 Mot inconnu : SuperStack => SNMPv2-MIB::sysDescr.0 = STRING: 3Com SuperStack 3

176 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11
176 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11
176 Mot inconnu : sysObjectID => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11
176 Mot inconnu : OID => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11
176 Il manque un espace insécable. => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11
176 Mot inconnu : SNMPv2-SMI => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11
176 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.43.10.27.4.1.2.11

177 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysUpTime.0 = Timeticks: (6550243) 18:11:42.43
177 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysUpTime.0 = Timeticks: (6550243) 18:11:42.43
177 Mot inconnu : sysUpTime => SNMPv2-MIB::sysUpTime.0 = Timeticks: (6550243) 18:11:42.43
177 Mot inconnu : Timeticks => SNMPv2-MIB::sysUpTime.0 = Timeticks: (6550243) 18:11:42.43
177 Il manque un espace insécable. => SNMPv2-MIB::sysUpTime.0 = Timeticks: (6550243) 18:11:42.43
177 Formatage des grands nombres. => SNMPv2-MIB::sysUpTime.0 = Timeticks: (6550243) 18:11:42.43

178 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysContact.0 = STRING: root@ubu.tu.fr
178 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysContact.0 = STRING: root@ubu.tu.fr
178 Mot inconnu : sysContact => SNMPv2-MIB::sysContact.0 = STRING: root@ubu.tu.fr
178 Il manque un espace insécable. => SNMPv2-MIB::sysContact.0 = STRING: root@ubu.tu.fr

179 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysName.0 = STRING: switch
179 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysName.0 = STRING: switch
179 Mot inconnu : sysName => SNMPv2-MIB::sysName.0 = STRING: switch
179 Il manque un espace insécable. => SNMPv2-MIB::sysName.0 = STRING: switch
179 Mot inconnu : switch => SNMPv2-MIB::sysName.0 = STRING: switch

180 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysLocation.0 = STRING: Ubuntu-fr
180 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysLocation.0 = STRING: Ubuntu-fr
180 Mot inconnu : sysLocation => SNMPv2-MIB::sysLocation.0 = STRING: Ubuntu-fr
180 Il manque un espace insécable. => SNMPv2-MIB::sysLocation.0 = STRING: Ubuntu-fr

181 Mot inconnu : SNMPv2-MIB => SNMPv2-MIB::sysServices.0 = INTEGER: 2
181 Une de ces ponctuations est superflue. => SNMPv2-MIB::sysServices.0 = INTEGER: 2
181 Mot inconnu : sysServices => SNMPv2-MIB::sysServices.0 = INTEGER: 2
181 Mot inconnu : INTEGER => SNMPv2-MIB::sysServices.0 = INTEGER: 2
181 Il manque un espace insécable. => SNMPv2-MIB::sysServices.0 = INTEGER: 2

182 Mot inconnu : IF-MIB => IF-MIB::ifNumber.0 = INTEGER: 34
182 Une de ces ponctuations est superflue. => IF-MIB::ifNumber.0 = INTEGER: 34
182 Mot inconnu : ifNumber => IF-MIB::ifNumber.0 = INTEGER: 34
182 Mot inconnu : INTEGER => IF-MIB::ifNumber.0 = INTEGER: 34
182 Il manque un espace insécable. => IF-MIB::ifNumber.0 = INTEGER: 34

183 Typographie : points de suspension. Utilisez le caractère dédié. => [...]

184 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.112 = INTEGER: up(1)
184 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.112 = INTEGER: up(1)
184 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.112 = INTEGER: up(1)
184 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.112 = INTEGER: up(1)
184 Il manque un espace insécable. => IF-MIB::ifOperStatus.112 = INTEGER: up(1)
184 Mot inconnu : up => IF-MIB::ifOperStatus.112 = INTEGER: up(1)

185 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.113 = INTEGER: up(1)
185 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.113 = INTEGER: up(1)
185 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.113 = INTEGER: up(1)
185 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.113 = INTEGER: up(1)
185 Il manque un espace insécable. => IF-MIB::ifOperStatus.113 = INTEGER: up(1)
185 Mot inconnu : up => IF-MIB::ifOperStatus.113 = INTEGER: up(1)

186 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.114 = INTEGER: down(2)
186 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.114 = INTEGER: down(2)
186 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.114 = INTEGER: down(2)
186 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.114 = INTEGER: down(2)
186 Il manque un espace insécable. => IF-MIB::ifOperStatus.114 = INTEGER: down(2)
186 Mot inconnu : down => IF-MIB::ifOperStatus.114 = INTEGER: down(2)

187 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.115 = INTEGER: up(1)
187 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.115 = INTEGER: up(1)
187 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.115 = INTEGER: up(1)
187 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.115 = INTEGER: up(1)
187 Il manque un espace insécable. => IF-MIB::ifOperStatus.115 = INTEGER: up(1)
187 Mot inconnu : up => IF-MIB::ifOperStatus.115 = INTEGER: up(1)

188 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.116 = INTEGER: up(1)
188 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.116 = INTEGER: up(1)
188 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.116 = INTEGER: up(1)
188 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.116 = INTEGER: up(1)
188 Il manque un espace insécable. => IF-MIB::ifOperStatus.116 = INTEGER: up(1)
188 Mot inconnu : up => IF-MIB::ifOperStatus.116 = INTEGER: up(1)

189 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.117 = INTEGER: down(2)
189 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.117 = INTEGER: down(2)
189 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.117 = INTEGER: down(2)
189 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.117 = INTEGER: down(2)
189 Il manque un espace insécable. => IF-MIB::ifOperStatus.117 = INTEGER: down(2)
189 Mot inconnu : down => IF-MIB::ifOperStatus.117 = INTEGER: down(2)

190 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.118 = INTEGER: up(1)
190 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.118 = INTEGER: up(1)
190 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.118 = INTEGER: up(1)
190 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.118 = INTEGER: up(1)
190 Il manque un espace insécable. => IF-MIB::ifOperStatus.118 = INTEGER: up(1)
190 Mot inconnu : up => IF-MIB::ifOperStatus.118 = INTEGER: up(1)

191 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.119 = INTEGER: down(2)
191 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.119 = INTEGER: down(2)
191 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.119 = INTEGER: down(2)
191 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.119 = INTEGER: down(2)
191 Il manque un espace insécable. => IF-MIB::ifOperStatus.119 = INTEGER: down(2)
191 Mot inconnu : down => IF-MIB::ifOperStatus.119 = INTEGER: down(2)

192 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.120 = INTEGER: down(2)
192 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.120 = INTEGER: down(2)
192 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.120 = INTEGER: down(2)
192 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.120 = INTEGER: down(2)
192 Il manque un espace insécable. => IF-MIB::ifOperStatus.120 = INTEGER: down(2)
192 Mot inconnu : down => IF-MIB::ifOperStatus.120 = INTEGER: down(2)

193 Typographie : points de suspension. Utilisez le caractère dédié. => [...]

196 Mot inconnu : MIB => Cette liste peut être très longue et dépend du périphérique supervisé. Vous constatez que les informations sont classées par MIB suivi du OID. 
196 Mot inconnu : OID => Cette liste peut être très longue et dépend du périphérique supervisé. Vous constatez que les informations sont classées par MIB suivi du OID. 
196 Espace(s) en fin de ligne à supprimer. => Cette liste peut être très longue et dépend du périphérique supervisé. Vous constatez que les informations sont classées par MIB suivi du OID. 

198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques ouvrants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : IF-MIB => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Une de ces ponctuations est superflue. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : ifOperStatus => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : INTEGER => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : down => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : OID => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques ouvrants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : ifOperStatus => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques fermants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : switch => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : MIB => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques ouvrants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : IF-MIB => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques fermants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Il manque un espace insécable. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : MIB => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : OID => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques ouvrants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : INTEGER => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques fermants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques ouvrants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Mot inconnu : down => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').
198 Guillemets typographiques fermants. => Dans l'exemple ci-dessus, nous avons « ''IF-MIB::ifOperStatus.117 = INTEGER: down(2)'' ». Ce qui signifie que l'OID « ''ifOperStatus.117'' » (qui correspond à l'état du port 17 du switch) est repris dans la MIB « ''IF-MIB'' » (qui est une MIB standard). Cet OID (clé) est associé à une valeur entière (type ''INTEGER'') qui vaut 2 (qui indique que l'état est ''down'').

200 Il manque un espace insécable. => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :
200 Guillemets typographiques ouvrants. => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :
200 Mot inconnu : snmpwalk => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :
200 Guillemets typographiques fermants. => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :
200 Il manque un espace insécable. => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :
200 Mot inconnu : OID => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :
200 Il manque un espace insécable. => L'application « ''snmpwalk'' » peut également sortir les enfants d'un OID. Par exemple :

202 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Mot inconnu : snmpwalk =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Il manque un espace à côté du tiret. =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Mot inconnu : v1 =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Mot inconnu : private =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Mot inconnu : IF-MIB =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Une de ces ponctuations est superflue. =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus
202 Mot inconnu : ifOperStatus =>   snmpwalk -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus

204 Mot inconnu : switch => Nous fournira l'état de toutes les interfaces du switch.

206 Mot inconnu : snmpget => ==== snmpget ====

208 Espace(s) surnuméraire(s) à supprimer. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Guillemets typographiques ouvrants. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Mot inconnu : snmpwalk => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Guillemets typographiques fermants. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Guillemets typographiques ouvrants. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Mot inconnu : snmpget => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Guillemets typographiques fermants. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Guillemets typographiques ouvrants. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Mot inconnu : snmpget => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Guillemets typographiques fermants. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Mot inconnu : OID => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Mot inconnu : switch => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :
208 Il manque un espace insécable. => Si vous avez compris  ''snmpwalk'', vous comprendrez très rapidement comment fonctionne le ''snmpget''. L'application ''snmpget'' permet d'obtenir l'information concernant un OID précis. Reprenons notre exemple, imaginons que nous voulons connaître uniquement l'état du port 22 du switch, il nous suffit d'entrer la commande suivante :

210 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Mot inconnu : snmpget =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Il manque un espace à côté du tiret. =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Mot inconnu : v1 =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Mot inconnu : private =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Mot inconnu : IF-MIB =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Une de ces ponctuations est superflue. =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122
210 Mot inconnu : ifOperStatus =>   snmpget -v1 -c private 192.168.0.232 IF-MIB::ifOperStatus.122

212 Il manque un espace insécable. => Nous obtenons l'information précise :

215 Mot inconnu : IF-MIB => IF-MIB::ifOperStatus.122 = INTEGER: up(1)
215 Une de ces ponctuations est superflue. => IF-MIB::ifOperStatus.122 = INTEGER: up(1)
215 Mot inconnu : ifOperStatus => IF-MIB::ifOperStatus.122 = INTEGER: up(1)
215 Mot inconnu : INTEGER => IF-MIB::ifOperStatus.122 = INTEGER: up(1)
215 Il manque un espace insécable. => IF-MIB::ifOperStatus.122 = INTEGER: up(1)
215 Mot inconnu : up => IF-MIB::ifOperStatus.122 = INTEGER: up(1)

221 Écriture invariable. Utilisez un point médian. => ===== Note(s) =====

223 Mot inconnu : traps => La gestion des //traps// se fait avec le serveur SNMP et fera l'objet d'un autre article.
223 Mot inconnu : SNMP => La gestion des //traps// se fait avec le serveur SNMP et fera l'objet d'un autre article.

225 Il manque un espace. => [[:tutoriel:configurer_snmp_pour_utiliser_cacti_depuis_une_machine_distante|Configurer SNMP sur un serveur pour le rendre accessible à distance par Cacti]]
225 Mot inconnu : SNMP => [[:tutoriel:configurer_snmp_pour_utiliser_cacti_depuis_une_machine_distante|Configurer SNMP sur un serveur pour le rendre accessible à distance par Cacti]]
225 Mot inconnu : Cacti => [[:tutoriel:configurer_snmp_pour_utiliser_cacti_depuis_une_machine_distante|Configurer SNMP sur un serveur pour le rendre accessible à distance par Cacti]]

229 Il manque un espace insécable. => //Contributeurs : [[utilisateurs:ostaquet|ostaquet]], [[utilisateurs:sefran|Franc SERRES]], [[utilisateurs:Yannis.B|Yannis BRISOT]], [[utilisateurs:HacKurx|HacKurx]].//
229 Il manque un espace. => //Contributeurs : [[utilisateurs:ostaquet|ostaquet]], [[utilisateurs:sefran|Franc SERRES]], [[utilisateurs:Yannis.B|Yannis BRISOT]], [[utilisateurs:HacKurx|HacKurx]].//
229 Il manque un espace. => //Contributeurs : [[utilisateurs:ostaquet|ostaquet]], [[utilisateurs:sefran|Franc SERRES]], [[utilisateurs:Yannis.B|Yannis BRISOT]], [[utilisateurs:HacKurx|HacKurx]].//
229 Il manque un espace. => //Contributeurs : [[utilisateurs:ostaquet|ostaquet]], [[utilisateurs:sefran|Franc SERRES]], [[utilisateurs:Yannis.B|Yannis BRISOT]], [[utilisateurs:HacKurx|HacKurx]].//
229 Mot inconnu : BRISOT => //Contributeurs : [[utilisateurs:ostaquet|ostaquet]], [[utilisateurs:sefran|Franc SERRES]], [[utilisateurs:Yannis.B|Yannis BRISOT]], [[utilisateurs:HacKurx|HacKurx]].//
229 Il manque un espace. => //Contributeurs : [[utilisateurs:ostaquet|ostaquet]], [[utilisateurs:sefran|Franc SERRES]], [[utilisateurs:Yannis.B|Yannis BRISOT]], [[utilisateurs:HacKurx|HacKurx]].//
