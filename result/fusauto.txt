6 Mot inconnu : FUSAUTO => ====== FUSAUTO ======

8 Mot inconnu : FUSAUTO => **FUSAUTO** est un script python pour faciliter l'usage de [[fuse | FUSE]]. Il a besoin d'un répertoire en paramètre, ce répertoire doit contenir un fichier de configuration utilisé par **FUSAUTO** et permet de monter / démonter ce répertoire avec [[fuse | FUSE]] automatiquement.
8 Mot inconnu : FUSAUTO => **FUSAUTO** est un script python pour faciliter l'usage de [[fuse | FUSE]]. Il a besoin d'un répertoire en paramètre, ce répertoire doit contenir un fichier de configuration utilisé par **FUSAUTO** et permet de monter / démonter ce répertoire avec [[fuse | FUSE]] automatiquement.

12 Guillemets typographiques ouvrants. => ===== Script python 'fusauto' =====
12 Mot inconnu : fusauto => ===== Script python 'fusauto' =====
12 Guillemets typographiques fermants. => ===== Script python 'fusauto' =====

14 Mot inconnu : FUSAUTO => Pour profiter de **FUSAUTO**, il faut créer le fichier contenant le script.

15 Il manque un espace insécable. => Deux options :

16 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * soit vous l'incluez pour votre utilisateur seulement : [[:tutoriel:comment_editer_un_fichier|~/.local/bin/fusauto]]
16 Il manque un espace insécable. =>   * soit vous l'incluez pour votre utilisateur seulement : [[:tutoriel:comment_editer_un_fichier|~/.local/bin/fusauto]]
16 Il manque un espace. =>   * soit vous l'incluez pour votre utilisateur seulement : [[:tutoriel:comment_editer_un_fichier|~/.local/bin/fusauto]]

17 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * soit vous l'incluez pour tous les utilisateurs (nécessite [[sudo]]): [[:tutoriel:comment_editer_un_fichier|/usr/local/bin/fusauto]]
17 Mot inconnu : sudo =>   * soit vous l'incluez pour tous les utilisateurs (nécessite [[sudo]]): [[:tutoriel:comment_editer_un_fichier|/usr/local/bin/fusauto]]
17 Il manque un espace. =>   * soit vous l'incluez pour tous les utilisateurs (nécessite [[sudo]]): [[:tutoriel:comment_editer_un_fichier|/usr/local/bin/fusauto]]

22 Mot inconnu : coding => # coding: utf-8
22 Il manque un espace insécable. => # coding: utf-8
22 Mot inconnu : utf-8 => # coding: utf-8

24 Mot inconnu : fusauto => # fusauto

25 Mot inconnu : mount => # auto mount directory with fuse by reading a config file
25 Mot inconnu : directory => # auto mount directory with fuse by reading a config file
25 Mot inconnu : with => # auto mount directory with fuse by reading a config file
25 Mot inconnu : by => # auto mount directory with fuse by reading a config file
25 Mot inconnu : reading => # auto mount directory with fuse by reading a config file

31 Mot inconnu : This => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : program => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : is => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : free => # This program is free software; you can redistribute it and/or modify
31 Il manque un espace insécable. => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : you => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : can => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : redistribute => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : it => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : and => # This program is free software; you can redistribute it and/or modify
31 Mot inconnu : modify => # This program is free software; you can redistribute it and/or modify

32 Mot inconnu : it => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : under => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : the => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : terms => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : of => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : the => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : General => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : License => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : published => # it under the terms of the GNU General Public License as published by
32 Mot inconnu : by => # it under the terms of the GNU General Public License as published by

33 Mot inconnu : the => # the Free Software Foundation; either version 3 of the License, or
33 Mot inconnu : Foundation => # the Free Software Foundation; either version 3 of the License, or
33 Il manque un espace insécable. => # the Free Software Foundation; either version 3 of the License, or
33 Mot inconnu : either => # the Free Software Foundation; either version 3 of the License, or
33 Mot inconnu : of => # the Free Software Foundation; either version 3 of the License, or
33 Mot inconnu : the => # the Free Software Foundation; either version 3 of the License, or
33 Mot inconnu : License => # the Free Software Foundation; either version 3 of the License, or

34 Mot inconnu : any => # any later version.
34 Mot inconnu : later => # any later version.

36 Mot inconnu : This => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : program => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : is => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : distributed => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : the => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : hope => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : that => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : it => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : will => # This program is distributed in the hope that it will be useful,
36 Mot inconnu : useful => # This program is distributed in the hope that it will be useful,

37 Mot inconnu : WITHOUT => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : ANY => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : WARRANTY => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Il manque un espace insécable. => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : without => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : even => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : the => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : implied => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : warranty => # but WITHOUT ANY WARRANTY; without even the implied warranty of
37 Mot inconnu : of => # but WITHOUT ANY WARRANTY; without even the implied warranty of

38 Mot inconnu : MERCHANTABILITY => # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
38 Mot inconnu : PARTICULAR => # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
38 Mot inconnu : PURPOSE => # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
38 Mot inconnu : See => # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
38 Mot inconnu : the => # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the

39 Mot inconnu : General => # GNU General Public License for more details.
39 Mot inconnu : License => # GNU General Public License for more details.
39 Mot inconnu : details => # GNU General Public License for more details.

41 Mot inconnu : You => # You should have received a copy of the GNU General Public License
41 Mot inconnu : should => # You should have received a copy of the GNU General Public License
41 Mot inconnu : received => # You should have received a copy of the GNU General Public License
41 Mot inconnu : copy => # You should have received a copy of the GNU General Public License
41 Mot inconnu : of => # You should have received a copy of the GNU General Public License
41 Mot inconnu : the => # You should have received a copy of the GNU General Public License
41 Mot inconnu : General => # You should have received a copy of the GNU General Public License
41 Mot inconnu : License => # You should have received a copy of the GNU General Public License

42 Mot inconnu : along => # along with this program; if not, write to the Free Software
42 Mot inconnu : with => # along with this program; if not, write to the Free Software
42 Mot inconnu : this => # along with this program; if not, write to the Free Software
42 Mot inconnu : program => # along with this program; if not, write to the Free Software
42 Il manque un espace insécable. => # along with this program; if not, write to the Free Software
42 Mot inconnu : not => # along with this program; if not, write to the Free Software
42 Mot inconnu : write => # along with this program; if not, write to the Free Software
42 Mot inconnu : to => # along with this program; if not, write to the Free Software
42 Mot inconnu : the => # along with this program; if not, write to the Free Software

43 Mot inconnu : Foundation => # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
43 Mot inconnu : Inc => # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
43 Pas de virgule après un point (sauf éventuellement après une abréviation). => # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
43 Accord de nombre erroné avec « 59 » : « Temple » devrait être au pluriel. => # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

45 Mot inconnu : sys => import sys, os

47 Mot inconnu : def => def runconf(conf, path):
47 Mot inconnu : runconf => def runconf(conf, path):
47 Il manque un espace avant la parenthèse. => def runconf(conf, path):
47 Mot inconnu : path => def runconf(conf, path):

48 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   file = open(conf, "r")
48 Il manque un espace avant la parenthèse. =>   file = open(conf, "r")
48 Guillemets typographiques ouvrants. =>   file = open(conf, "r")
48 Guillemets typographiques fermants. =>   file = open(conf, "r")

49 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   act = {}
49 Mot inconnu : act =>   act = {}

50 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for line in file.readlines():
50 Mot inconnu : line =>   for line in file.readlines():
50 Mot inconnu : readlines =>   for line in file.readlines():

51 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if not line.startswith('#'):
51 Mot inconnu : not =>     if not line.startswith('#'):
51 Mot inconnu : line =>     if not line.startswith('#'):
51 Mot inconnu : startswith =>     if not line.startswith('#'):
51 Il manque un espace avant la parenthèse. =>     if not line.startswith('#'):

52 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       part = line[:-1].partition('=')
52 Mot inconnu : line =>       part = line[:-1].partition('=')
52 S’il s’agit de représenter un nombre négatif, utilisez le signe typographique “moins” [1]. S’il s’agit d’une incise, utilisez un tiret demi-cadratin [2] ou un tiret cadratin [3]. =>       part = line[:-1].partition('=')
52 Il manque un espace avant la parenthèse. =>       part = line[:-1].partition('=')

53 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       act[part[0]] = part[2]
53 Mot inconnu : act =>       act[part[0]] = part[2]

54 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   file.close()
54 Il manque un espace. =>   file.close()

55 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   if 'bin' in act:
55 Guillemets typographiques ouvrants. =>   if 'bin' in act:
55 Mot inconnu : bin =>   if 'bin' in act:
55 Guillemets typographiques fermants. =>   if 'bin' in act:
55 Mot inconnu : act =>   if 'bin' in act:
55 Il manque un espace insécable. =>   if 'bin' in act:

56 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if not 'from' in act: act['from']='none'
56 Mot inconnu : not =>     if not 'from' in act: act['from']='none'
56 Guillemets typographiques ouvrants. =>     if not 'from' in act: act['from']='none'
56 Mot inconnu : from =>     if not 'from' in act: act['from']='none'
56 Guillemets typographiques fermants. =>     if not 'from' in act: act['from']='none'
56 Mot inconnu : act =>     if not 'from' in act: act['from']='none'
56 Il manque un espace insécable. =>     if not 'from' in act: act['from']='none'
56 Mot inconnu : act =>     if not 'from' in act: act['from']='none'
56 Mot inconnu : from =>     if not 'from' in act: act['from']='none'
56 Guillemets typographiques fermants. =>     if not 'from' in act: act['from']='none'

57 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if not 'opt' in act: act['opt']=''
57 Mot inconnu : not =>     if not 'opt' in act: act['opt']=''
57 Guillemets typographiques ouvrants. =>     if not 'opt' in act: act['opt']=''
57 Mot inconnu : opt =>     if not 'opt' in act: act['opt']=''
57 Guillemets typographiques fermants. =>     if not 'opt' in act: act['opt']=''
57 Mot inconnu : act =>     if not 'opt' in act: act['opt']=''
57 Il manque un espace insécable. =>     if not 'opt' in act: act['opt']=''
57 Mot inconnu : act =>     if not 'opt' in act: act['opt']=''
57 Mot inconnu : opt =>     if not 'opt' in act: act['opt']=''

58 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : system =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace avant la parenthèse. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace à côté du tiret. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : nonempty =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Guillemets typographiques fermants. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Il manque un espace. =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : act =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : bin =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : act =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : from =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : path =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : act =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))
58 Mot inconnu : opt =>     os.system("%s %s %s -o nonempty %s"%(act['bin'], act['from'], path, act['opt']))

60 Mot inconnu : def => def getfuses():
60 Mot inconnu : getfuses => def getfuses():

61 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mtab = open("/etc/mtab", "r")
61 Mot inconnu : mtab =>   mtab = open("/etc/mtab", "r")
61 Il manque un espace avant la parenthèse. =>   mtab = open("/etc/mtab", "r")
61 Guillemets typographiques ouvrants. =>   mtab = open("/etc/mtab", "r")
61 Guillemets typographiques fermants. =>   mtab = open("/etc/mtab", "r")

62 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 S’il s’agit d’un impératif, pas de “s”. =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Pas d’espace après ce signe. =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Mot inconnu : line =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Mot inconnu : line =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Mot inconnu : mtab =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Mot inconnu : readlines =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Mot inconnu : line =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Mot inconnu : split =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Guillemets typographiques ouvrants. =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Guillemets typographiques fermants. =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]
62 Pas d’espace avant ce signe. =>   fuses =[ line for line in mtab.readlines() if line.split()[2][0:4] == "fuse" ]

63 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   mtab.close()
63 Mot inconnu : mtab =>   mtab.close()
63 Il manque un espace. =>   mtab.close()

64 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   return fuses
64 Mot inconnu : return =>   return fuses
64 Incohérence. Ceci est un verbe à la 2ᵉ personne du singulier. Sujet (“tu” ou “toi qui”) introuvable. =>   return fuses

66 Mot inconnu : def => def alreadymount(path):
66 Mot inconnu : alreadymount => def alreadymount(path):
66 Il manque un espace avant la parenthèse. => def alreadymount(path):
66 Mot inconnu : path => def alreadymount(path):

67 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   for fuse in getfuses():
67 Mot inconnu : getfuses =>   for fuse in getfuses():

68 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     fd = fuse.split()[1]
68 Mot inconnu : fd =>     fd = fuse.split()[1]
68 Mot inconnu : split =>     fd = fuse.split()[1]

69 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if fd == path or fd == os.getcwd()+'/'+path:
69 Mot inconnu : fd =>     if fd == path or fd == os.getcwd()+'/'+path:
69 Mot inconnu : path =>     if fd == path or fd == os.getcwd()+'/'+path:
69 Mot inconnu : fd =>     if fd == path or fd == os.getcwd()+'/'+path:
69 Mot inconnu : getcwd =>     if fd == path or fd == os.getcwd()+'/'+path:
69 Mot inconnu : path =>     if fd == path or fd == os.getcwd()+'/'+path:
69 Il manque un espace insécable. =>     if fd == path or fd == os.getcwd()+'/'+path:

70 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       return True
70 Mot inconnu : return =>       return True
70 Mot inconnu : True =>       return True

71 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   return False
71 Mot inconnu : return =>   return False
71 Mot inconnu : False =>   return False

73 Mot inconnu : def => def umount(path):
73 Mot inconnu : umount => def umount(path):
73 Il manque un espace avant la parenthèse. => def umount(path):
73 Mot inconnu : path => def umount(path):

74 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   os.system("/bin/fusermount -u "+path)
74 Mot inconnu : system =>   os.system("/bin/fusermount -u "+path)
74 Il manque un espace avant la parenthèse. =>   os.system("/bin/fusermount -u "+path)
74 Il manque un espace à côté du tiret. =>   os.system("/bin/fusermount -u "+path)
74 Mot inconnu : path =>   os.system("/bin/fusermount -u "+path)

76 Mot inconnu : __name__ => if __name__ == "__main__":
76 Guillemets typographiques ouvrants. => if __name__ == "__main__":
76 Mot inconnu : __main__ => if __name__ == "__main__":
76 Guillemets typographiques fermants. => if __name__ == "__main__":

77 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Mot inconnu : len =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Il manque un espace avant la parenthèse. =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Mot inconnu : sys =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Mot inconnu : argv =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Mot inconnu : and =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Il manque un espace avant la parenthèse. =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Mot inconnu : sys =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Mot inconnu : argv =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  
77 Espace(s) en fin de ligne à supprimer. =>   if len(sys.argv) == 2 and os.path.isdir(sys.argv[1]):  

78 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     if alreadymount(sys.argv[1]):
78 Mot inconnu : alreadymount =>     if alreadymount(sys.argv[1]):
78 Il manque un espace avant la parenthèse. =>     if alreadymount(sys.argv[1]):
78 Mot inconnu : sys =>     if alreadymount(sys.argv[1]):
78 Mot inconnu : argv =>     if alreadymount(sys.argv[1]):

79 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       umount(sys.argv[1])
79 Mot inconnu : umount =>       umount(sys.argv[1])
79 Il manque un espace avant la parenthèse. =>       umount(sys.argv[1])
79 Mot inconnu : sys =>       umount(sys.argv[1])
79 Mot inconnu : argv =>       umount(sys.argv[1])

80 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     else:
80 Mot inconnu : else =>     else:
80 Il manque un espace insécable. =>     else:

81 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       conf = sys.argv[1]+'/fusauto.conf'
81 Mot inconnu : sys =>       conf = sys.argv[1]+'/fusauto.conf'
81 Mot inconnu : argv =>       conf = sys.argv[1]+'/fusauto.conf'
81 Mot inconnu : fusauto =>       conf = sys.argv[1]+'/fusauto.conf'
81 Il manque un espace. =>       conf = sys.argv[1]+'/fusauto.conf'
81 Guillemets typographiques fermants. =>       conf = sys.argv[1]+'/fusauto.conf'

82 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       if os.path.isfile(conf):
82 Il manque un espace avant la parenthèse. =>       if os.path.isfile(conf):

83 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         runconf(conf, sys.argv[1])
83 Mot inconnu : runconf =>         runconf(conf, sys.argv[1])
83 Il manque un espace avant la parenthèse. =>         runconf(conf, sys.argv[1])
83 Mot inconnu : sys =>         runconf(conf, sys.argv[1])
83 Mot inconnu : argv =>         runconf(conf, sys.argv[1])

84 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>       else:
84 Mot inconnu : else =>       else:
84 Il manque un espace insécable. =>       else:

85 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>         print conf,"is required"
85 Mot inconnu : print =>         print conf,"is required"
85 Guillemets typographiques ouvrants. =>         print conf,"is required"
85 Mot inconnu : is =>         print conf,"is required"
85 Mot inconnu : required =>         print conf,"is required"
85 Guillemets typographiques fermants. =>         print conf,"is required"

86 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   else:
86 Mot inconnu : else =>   else:
86 Il manque un espace insécable. =>   else:

87 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>     print "One directory is required"''
87 Mot inconnu : print =>     print "One directory is required"''
87 Guillemets typographiques ouvrants. =>     print "One directory is required"''
87 Mot inconnu : One =>     print "One directory is required"''
87 Mot inconnu : directory =>     print "One directory is required"''
87 Mot inconnu : is =>     print "One directory is required"''
87 Mot inconnu : required =>     print "One directory is required"''
87 Guillemets typographiques fermants. =>     print "One directory is required"''

90 Il manque un espace insécable. => Il faut rendre le script exécutable :

91 Guillemets typographiques ouvrants. => ''chmod u+x ~/.local/bin/fusauto''
91 Mot inconnu : chmod => ''chmod u+x ~/.local/bin/fusauto''
91 Guillemets typographiques fermants. => ''chmod u+x ~/.local/bin/fusauto''

93 Guillemets typographiques ouvrants. => ''sudo chmod a+rx /usr/local/bin/fusauto''
93 Mot inconnu : sudo => ''sudo chmod a+rx /usr/local/bin/fusauto''
93 Mot inconnu : chmod => ''sudo chmod a+rx /usr/local/bin/fusauto''
93 Mot inconnu : rx => ''sudo chmod a+rx /usr/local/bin/fusauto''

96 Guillemets typographiques ouvrants. => ===== Fichier de configuration 'fusauto.conf' =====
96 Mot inconnu : fusauto => ===== Fichier de configuration 'fusauto.conf' =====
96 Il manque un espace. => ===== Fichier de configuration 'fusauto.conf' =====
96 Guillemets typographiques fermants. => ===== Fichier de configuration 'fusauto.conf' =====

97 Mot inconnu : FUSAUTO => Pour fonctionner, **FUSAUTO** a besoin d'un répertoire contenant un fichier de configuration du nom de **fusauto.conf**
97 Mot inconnu : fusauto => Pour fonctionner, **FUSAUTO** a besoin d'un répertoire contenant un fichier de configuration du nom de **fusauto.conf**
97 Il manque un espace. => Pour fonctionner, **FUSAUTO** a besoin d'un répertoire contenant un fichier de configuration du nom de **fusauto.conf**

99 Il manque un espace insécable. => Rien de mieux qu'un exemple !

101 Mot inconnu : siniath-tirith => Je veux monter un répertoire distant d'une machine (siniath-tirith) dans le répertoire __~/Network/Siniath-Tirith__ à l'aide d'sshfs (créer le répertoire au besoin).
101 Mot inconnu : __ => Je veux monter un répertoire distant d'une machine (siniath-tirith) dans le répertoire __~/Network/Siniath-Tirith__ à l'aide d'sshfs (créer le répertoire au besoin).
101 Mot inconnu : Network => Je veux monter un répertoire distant d'une machine (siniath-tirith) dans le répertoire __~/Network/Siniath-Tirith__ à l'aide d'sshfs (créer le répertoire au besoin).
101 Mot inconnu : Siniath-Tirith__ => Je veux monter un répertoire distant d'une machine (siniath-tirith) dans le répertoire __~/Network/Siniath-Tirith__ à l'aide d'sshfs (créer le répertoire au besoin).
101 Mot inconnu : sshfs => Je veux monter un répertoire distant d'une machine (siniath-tirith) dans le répertoire __~/Network/Siniath-Tirith__ à l'aide d'sshfs (créer le répertoire au besoin).

103 Mot inconnu : __ => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :
103 Mot inconnu : Network => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :
103 Mot inconnu : Siniath-Tirith => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :
103 Mot inconnu : fusauto => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :
103 Il manque un espace. => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :
103 Mot inconnu : conf__ => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :
103 Il manque un espace insécable. => Je crée un nouveau fichier __~/Network/Siniath-Tirith/fusauto.conf__ dont le contenu est :

106 Nombre ordinal. Premier : 1ᵉʳ. Première : 1ʳᵉ. Premiers : 1ᵉʳˢ. Premières : 1ʳᵉˢ. => Il est important de ne mettre aucun espace avant le 1er signe égal sur les lignes qui ne sont pas des commentaires, sans quoi le script ne marchera pas correctement.</note>

108 Mot inconnu : fusauto => <code># fusauto config file

109 Mot inconnu : lines => # lines start with # are commentaries
109 Mot inconnu : start => # lines start with # are commentaries
109 Mot inconnu : with => # lines start with # are commentaries
109 Mot inconnu : commentaries => # lines start with # are commentaries

111 Mot inconnu : run => # process must be run (must exist)
111 Mot inconnu : exist => # process must be run (must exist)

112 Mot inconnu : bin => bin=/usr/bin/sshfs

114 Mot inconnu : remote => # remote folder (default : none)
114 Mot inconnu : folder => # remote folder (default : none)
114 Mot inconnu : default => # remote folder (default : none)
114 Il manque un espace insécable. => # remote folder (default : none)

115 Mot inconnu : from => from=siniath-tirith:/mnt/big1/data
115 Mot inconnu : siniath-tirith => from=siniath-tirith:/mnt/big1/data
115 Il manque un espace insécable. => from=siniath-tirith:/mnt/big1/data

117 Mot inconnu : default => # fuse options (default : )
117 Il manque un espace insécable. => # fuse options (default : )
117 Pas d’espace avant ce signe. => # fuse options (default : )

118 Mot inconnu : opt => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Mot inconnu : follow_symlinks => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Il manque un espace. => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Mot inconnu : transform_symlinks => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Mot inconnu : workaround => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Mot inconnu : rename => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Il manque un espace. => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>
118 Mot inconnu : idmap => opt=-o follow_symlinks,transform_symlinks,workaround=rename,idmap=user</code>

124 Mot inconnu : FUSAUTO => Il suffit d'appeler **FUSAUTO** avec en paramètre, un répertoire contenant un fichier de configuration.

126 Mot inconnu : FUSAUTO => **FUSAUTO** monte le répertoire s'il ne l'est pas déjà, sinon il le démonte.

129 Guillemets typographiques ouvrants. => ''fusauto ~/Network/Siniath-Tirith''
129 Mot inconnu : fusauto => ''fusauto ~/Network/Siniath-Tirith''
129 Mot inconnu : Network => ''fusauto ~/Network/Siniath-Tirith''
129 Mot inconnu : Siniath-Tirith => ''fusauto ~/Network/Siniath-Tirith''
129 Guillemets typographiques fermants. => ''fusauto ~/Network/Siniath-Tirith''

131 Mot inconnu : Nautilus => === Nautilus ===

132 Mot inconnu : nautilus_scripts => On va utiliser la possibilité de [[nautilus_scripts|script pour Nautilus]] pour pouvoir monter/démonter directement.
132 Mot inconnu : Nautilus => On va utiliser la possibilité de [[nautilus_scripts|script pour Nautilus]] pour pouvoir monter/démonter directement.

134 Mot inconnu : __ => Pour cela, on va lier le script dans le répertoire __~/.gnome2/nautilus-scripts__ :
134 Mot inconnu : gnome2 => Pour cela, on va lier le script dans le répertoire __~/.gnome2/nautilus-scripts__ :
134 Mot inconnu : nautilus-scripts__ => Pour cela, on va lier le script dans le répertoire __~/.gnome2/nautilus-scripts__ :
134 Il manque un espace insécable. => Pour cela, on va lier le script dans le répertoire __~/.gnome2/nautilus-scripts__ :

136 Il manque un espace à côté du tiret. => <code>ln -s `which fusauto` ~/.gnome2/nautilus-scripts/</code>

138 Guillemets typographiques ouvrants. => Désormais, un clic-droit sur un répertoire propose 'Scripts>fusauto'.
138 Mot inconnu : fusauto => Désormais, un clic-droit sur un répertoire propose 'Scripts>fusauto'.

140 Mot inconnu : Rox-Filer => === Rox-Filer ===

141 Mot inconnu : rox-filer => On va utiliser la possibilité de script pour rox-filer pour pouvoir monter/démonter directement.

143 Mot inconnu : __ => Pour cela, on va lier le script dans les répertoires __~/.config/rox.sourceforge.net/SendTo/.inode_directory__ et __~/.config/rox.sourceforge.net/SendTo/.inode_mount-point__ :
143 Mot inconnu : __ => Pour cela, on va lier le script dans les répertoires __~/.config/rox.sourceforge.net/SendTo/.inode_directory__ et __~/.config/rox.sourceforge.net/SendTo/.inode_mount-point__ :
143 Il manque un espace insécable. => Pour cela, on va lier le script dans les répertoires __~/.config/rox.sourceforge.net/SendTo/.inode_directory__ et __~/.config/rox.sourceforge.net/SendTo/.inode_mount-point__ :

145 Il manque un espace à côté du tiret. => <code>ln -s `which fusauto` ~/.config/rox.sourceforge.net/SendTo/.inode_directory/
145 Mot inconnu : which => <code>ln -s `which fusauto` ~/.config/rox.sourceforge.net/SendTo/.inode_directory/
145 Mot inconnu : fusauto => <code>ln -s `which fusauto` ~/.config/rox.sourceforge.net/SendTo/.inode_directory/

146 Il manque un espace à côté du tiret. => ln -s `which fusauto` ~/.config/rox.sourceforge.net/SendTo/.inode_mount-point/''</code>
146 Mot inconnu : which => ln -s `which fusauto` ~/.config/rox.sourceforge.net/SendTo/.inode_mount-point/''</code>
146 Mot inconnu : fusauto => ln -s `which fusauto` ~/.config/rox.sourceforge.net/SendTo/.inode_mount-point/''</code>

148 Guillemets typographiques ouvrants. => Désormais, un clic-droit sur un répertoire propose 'Rép. > fusauto'.
148 Mot inconnu : Rép => Désormais, un clic-droit sur un répertoire propose 'Rép. > fusauto'.
148 Mot inconnu : fusauto => Désormais, un clic-droit sur un répertoire propose 'Rép. > fusauto'.

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://forum.ubuntu-fr.org/viewtopic.php?id=178262|Commentaires et discussion ici]].

159 Il manque un espace insécable. => //Contributeurs : NicoA380 [[http://forum.ubuntu-fr.org/profile.php?id=2745|+]].//
159 Mot inconnu : NicoA380 => //Contributeurs : NicoA380 [[http://forum.ubuntu-fr.org/profile.php?id=2745|+]].//
