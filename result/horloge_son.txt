2 Il manque un espace insécable. => ======Un Big Ben sur votre PC !======

4 Mot inconnu : Yannick_LM => Ce tutoriel va vous permettre de transformer votre ordinateur en [[http://fr.wikipedia.org/wiki/Big_Ben|Big Ben]], ou plus modestement en pendule, qui sonne à chaque changement d'heure (sur une idée de Yannick_LM, cf. [[http://forum.ubuntu-fr.org/viewtopic.php?id=99763|le sujet sur le forum]] pour en discuter).

11 Il manque un espace insécable. => Il nous faut tout d'abord un son pour le carillon et pour la cloche. On pourra pour ce tutoriel se contenter de ceux-là :

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://upload.wikimedia.org/wikipedia/commons/1/1d/Westminster_sound.ogg|un carillon]],

14 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://www.randonneur.net/sons/divers/coucou_01.wav|une cloche, un coucou]] ou [[http://upload.wikimedia.org/wikipedia/commons/6/68/Fr-coucou.ogg|cette personne qui dit coucou (licence creative commons)]].
14 Mot inconnu : creative =>   * [[http://www.randonneur.net/sons/divers/coucou_01.wav|une cloche, un coucou]] ou [[http://upload.wikimedia.org/wikipedia/commons/6/68/Fr-coucou.ogg|cette personne qui dit coucou (licence creative commons)]].
14 Mot inconnu : commons =>   * [[http://www.randonneur.net/sons/divers/coucou_01.wav|une cloche, un coucou]] ou [[http://upload.wikimedia.org/wikipedia/commons/6/68/Fr-coucou.ogg|cette personne qui dit coucou (licence creative commons)]].

16 Accord avec le COD « les » : Le participe passé « enregistré » devrait être au pluriel (et accordé en genre). => On supposera que vous les avez enregistré dans le dossier **home** (/home/votrenom) sous les noms **.carillon** et **.coucou** (le point précédent le nom indique qu'il apparaîtra comme un fichier caché).

23 Mot inconnu : cron => Nous allons utiliser [[cron]] pour nous assurer que les cloches sonneront bien toutes les heures. Ouvrez un [[terminal#ou_est-il|terminal]] et tapez-y la commande suivante :
23 Il manque un espace insécable. => Nous allons utiliser [[cron]] pour nous assurer que les cloches sonneront bien toutes les heures. Ouvrez un [[terminal#ou_est-il|terminal]] et tapez-y la commande suivante :

24 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   crontab -e
24 Mot inconnu : crontab =>   crontab -e
24 Il manque un espace à côté du tiret. =>   crontab -e

26 Il manque un espace insécable. => Copiez dans le fichier ainsi ouvert la ligne suivante :

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Espace(s) surnuméraire(s) à supprimer. =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Mot inconnu : aplay =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Il manque un espace. =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Mot inconnu : seq =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Mot inconnu : aplay =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Il manque un espace insécable. =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done
27 Mot inconnu : done =>   0     *      *      *      *      aplay $HOME/.carillon && HEURE=`date +%l` && for i in `seq $HEURE`; do aplay $HOME/.coucou; done

30 Mot inconnu : aplay => <note tip>Si **aplay** ne lit pas correctement votre fichier son, vous pouvez le remplacer par [[mplayer]], ou en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **mpg321** si votre fichier son est un mp3
30 Mot inconnu : mplayer => <note tip>Si **aplay** ne lit pas correctement votre fichier son, vous pouvez le remplacer par [[mplayer]], ou en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **mpg321** si votre fichier son est un mp3
30 Il manque un espace. => <note tip>Si **aplay** ne lit pas correctement votre fichier son, vous pouvez le remplacer par [[mplayer]], ou en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **mpg321** si votre fichier son est un mp3
30 Mot inconnu : comment_installer_un_paquet => <note tip>Si **aplay** ne lit pas correctement votre fichier son, vous pouvez le remplacer par [[mplayer]], ou en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **mpg321** si votre fichier son est un mp3
30 Mot inconnu : mpg321 => <note tip>Si **aplay** ne lit pas correctement votre fichier son, vous pouvez le remplacer par [[mplayer]], ou en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **mpg321** si votre fichier son est un mp3
30 Mot inconnu : mp3 => <note tip>Si **aplay** ne lit pas correctement votre fichier son, vous pouvez le remplacer par [[mplayer]], ou en [[:tutoriel:comment_installer_un_paquet|installant le paquet]] **mpg321** si votre fichier son est un mp3

32 Mot inconnu : aplay => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>
32 Il manque un espace. => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>
32 Mot inconnu : comment_installer_un_paquet => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>
32 Mot inconnu : alsa-utils => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>
32 Mot inconnu : artsplay => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>
32 Mot inconnu : libarts1c2a => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>
32 Il manque un espace insécable. => <note tip>**aplay** est fourni avec [[:tutoriel:comment_installer_un_paquet|le paquet]] **alsa-utils**. Vous pouvez également le remplacer par **artsplay** (paquet **libarts1c2a**, installé d'office ?).</note>

34 Il manque un espace insécable. => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).
34 Mot inconnu : syntax => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).
34 Mot inconnu : cron => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).
34 Mot inconnu : aplay => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).
34 Typographie : points de suspension. Utilisez le caractère dédié. => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).
34 Mot inconnu : done => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).
34 Mot inconnu : anacron => Petite explication de texte : cette ligne indique que toutes les heures de tous les jours de tous les mois de tous les ans (cf la syntax de [[cron]]), la commande **aplay [...] done** doit être effectuée (sous réserve que l'ordinateur soit allumé, contrairement à [[anacron]]).

36 Mot inconnu : aplay => La commande elle-même joue (**aplay**) le fichier $HOME/.carillon, puis enregistre le nombre de coups à jouer (1 à 12) dans la variable **HEURE**, et enfin joue le fichier $HOME/.coucou le nombre de fois voulues (boucle "for"). Si l'une de ces trois étapes échoue (fichier son qui n'existe pas, par exemple), on arrête tout (grâce aux **&&**).
36 Guillemets typographiques ouvrants. => La commande elle-même joue (**aplay**) le fichier $HOME/.carillon, puis enregistre le nombre de coups à jouer (1 à 12) dans la variable **HEURE**, et enfin joue le fichier $HOME/.coucou le nombre de fois voulues (boucle "for"). Si l'une de ces trois étapes échoue (fichier son qui n'existe pas, par exemple), on arrête tout (grâce aux **&&**).
36 Guillemets typographiques fermants. => La commande elle-même joue (**aplay**) le fichier $HOME/.carillon, puis enregistre le nombre de coups à jouer (1 à 12) dans la variable **HEURE**, et enfin joue le fichier $HOME/.coucou le nombre de fois voulues (boucle "for"). Si l'une de ces trois étapes échoue (fichier son qui n'existe pas, par exemple), on arrête tout (grâce aux **&&**).
