2 Mot inconnu : calcul_numérique => {{tag>programmation calcul_numérique compilation IDE}}

6 Mot inconnu : coarrays => Fortran est un langage de programmation normalisé destiné au calcul scientifique. Il intègre la programmation orientée objet et l'interfaçage avec le langage C depuis Fortran 2003 et la programmation parallèle //(coarrays)// depuis Fortran 2008. La norme actuelle est Fortran 2018 : elle améliore en particulier l'interfaçage entre C et Fortran et ajoute de nouveaux concepts pour la programmation parallèle //(teams, events, collective subroutines).// La prochaine norme est prévue pour 2023 (nommée Fortran 202X pour l'instant).
6 Il manque un espace insécable. => Fortran est un langage de programmation normalisé destiné au calcul scientifique. Il intègre la programmation orientée objet et l'interfaçage avec le langage C depuis Fortran 2003 et la programmation parallèle //(coarrays)// depuis Fortran 2008. La norme actuelle est Fortran 2018 : elle améliore en particulier l'interfaçage entre C et Fortran et ajoute de nouveaux concepts pour la programmation parallèle //(teams, events, collective subroutines).// La prochaine norme est prévue pour 2023 (nommée Fortran 202X pour l'instant).
6 Mot inconnu : teams => Fortran est un langage de programmation normalisé destiné au calcul scientifique. Il intègre la programmation orientée objet et l'interfaçage avec le langage C depuis Fortran 2003 et la programmation parallèle //(coarrays)// depuis Fortran 2008. La norme actuelle est Fortran 2018 : elle améliore en particulier l'interfaçage entre C et Fortran et ajoute de nouveaux concepts pour la programmation parallèle //(teams, events, collective subroutines).// La prochaine norme est prévue pour 2023 (nommée Fortran 202X pour l'instant).
6 Mot inconnu : events => Fortran est un langage de programmation normalisé destiné au calcul scientifique. Il intègre la programmation orientée objet et l'interfaçage avec le langage C depuis Fortran 2003 et la programmation parallèle //(coarrays)// depuis Fortran 2008. La norme actuelle est Fortran 2018 : elle améliore en particulier l'interfaçage entre C et Fortran et ajoute de nouveaux concepts pour la programmation parallèle //(teams, events, collective subroutines).// La prochaine norme est prévue pour 2023 (nommée Fortran 202X pour l'instant).
6 Mot inconnu : subroutines => Fortran est un langage de programmation normalisé destiné au calcul scientifique. Il intègre la programmation orientée objet et l'interfaçage avec le langage C depuis Fortran 2003 et la programmation parallèle //(coarrays)// depuis Fortran 2008. La norme actuelle est Fortran 2018 : elle améliore en particulier l'interfaçage entre C et Fortran et ajoute de nouveaux concepts pour la programmation parallèle //(teams, events, collective subroutines).// La prochaine norme est prévue pour 2023 (nommée Fortran 202X pour l'instant).

10 Il manque un espace insécable. => Le langage Fortran dispose de [[https://fortran-lang.org/compilers/|nombreux compilateurs]], en particulier :

11 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le compilateur libre GNU Fortran (GFortran).
11 Mot inconnu : GFortran =>   * Le compilateur libre GNU Fortran (GFortran).

12 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le propriétaire Intel Fortran Compiler (ifort), et son successeur ifx basé sur LLVM (actuellement en version beta), téléchargeables gratuitement pour tous les développeurs depuis début 2021.
12 Mot inconnu : ifort =>   * Le propriétaire Intel Fortran Compiler (ifort), et son successeur ifx basé sur LLVM (actuellement en version beta), téléchargeables gratuitement pour tous les développeurs depuis début 2021.
12 Mot inconnu : ifx =>   * Le propriétaire Intel Fortran Compiler (ifort), et son successeur ifx basé sur LLVM (actuellement en version beta), téléchargeables gratuitement pour tous les développeurs depuis début 2021.
12 Mot inconnu : LLVM =>   * Le propriétaire Intel Fortran Compiler (ifort), et son successeur ifx basé sur LLVM (actuellement en version beta), téléchargeables gratuitement pour tous les développeurs depuis début 2021.
12 Mot inconnu : beta =>   * Le propriétaire Intel Fortran Compiler (ifort), et son successeur ifx basé sur LLVM (actuellement en version beta), téléchargeables gratuitement pour tous les développeurs depuis début 2021.

13 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * Le compilateur commercial [[http://www.pgroup.com/resources/docs.htm| PGI]] édité par [[wp>The_Portland_Group]], qui devrait être remplacé prochainement par le compilateur [[https://github.com/flang-compiler/flang|Flang]] intégré à LLVM.
13 Mot inconnu : PGI =>   * Le compilateur commercial [[http://www.pgroup.com/resources/docs.htm| PGI]] édité par [[wp>The_Portland_Group]], qui devrait être remplacé prochainement par le compilateur [[https://github.com/flang-compiler/flang|Flang]] intégré à LLVM.
13 Mot inconnu : The_Portland_Group =>   * Le compilateur commercial [[http://www.pgroup.com/resources/docs.htm| PGI]] édité par [[wp>The_Portland_Group]], qui devrait être remplacé prochainement par le compilateur [[https://github.com/flang-compiler/flang|Flang]] intégré à LLVM.
13 Mot inconnu : LLVM =>   * Le compilateur commercial [[http://www.pgroup.com/resources/docs.htm| PGI]] édité par [[wp>The_Portland_Group]], qui devrait être remplacé prochainement par le compilateur [[https://github.com/flang-compiler/flang|Flang]] intégré à LLVM.

15 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => gfortran est très utilisé par les scientifiques, bien que le compilateur Intel ifort puisse être plus performant sur certains problèmes ([[https://polyhedron.com/?page_id=175|voir une comparaison des différents compilateurs ici)]]. Mais plutôt que de se fier aux benchmarks, qui se concentrent sur des problèmes spécifiques, il vaut mieux faire le test sur vos programmes. Il est de toute façon toujours conseillé de compiler ses programmes avec plusieurs compilateurs afin d'obtenir un code plus robuste : un compilateur peut afficher des messages de diagnostique différents, et à l'exécution certains bogues subtiles peuvent se révéler avec un compilateur mais pas un autre.
15 Mot inconnu : gfortran => gfortran est très utilisé par les scientifiques, bien que le compilateur Intel ifort puisse être plus performant sur certains problèmes ([[https://polyhedron.com/?page_id=175|voir une comparaison des différents compilateurs ici)]]. Mais plutôt que de se fier aux benchmarks, qui se concentrent sur des problèmes spécifiques, il vaut mieux faire le test sur vos programmes. Il est de toute façon toujours conseillé de compiler ses programmes avec plusieurs compilateurs afin d'obtenir un code plus robuste : un compilateur peut afficher des messages de diagnostique différents, et à l'exécution certains bogues subtiles peuvent se révéler avec un compilateur mais pas un autre.
15 Mot inconnu : ifort => gfortran est très utilisé par les scientifiques, bien que le compilateur Intel ifort puisse être plus performant sur certains problèmes ([[https://polyhedron.com/?page_id=175|voir une comparaison des différents compilateurs ici)]]. Mais plutôt que de se fier aux benchmarks, qui se concentrent sur des problèmes spécifiques, il vaut mieux faire le test sur vos programmes. Il est de toute façon toujours conseillé de compiler ses programmes avec plusieurs compilateurs afin d'obtenir un code plus robuste : un compilateur peut afficher des messages de diagnostique différents, et à l'exécution certains bogues subtiles peuvent se révéler avec un compilateur mais pas un autre.
15 Il manque un espace insécable. => gfortran est très utilisé par les scientifiques, bien que le compilateur Intel ifort puisse être plus performant sur certains problèmes ([[https://polyhedron.com/?page_id=175|voir une comparaison des différents compilateurs ici)]]. Mais plutôt que de se fier aux benchmarks, qui se concentrent sur des problèmes spécifiques, il vaut mieux faire le test sur vos programmes. Il est de toute façon toujours conseillé de compiler ses programmes avec plusieurs compilateurs afin d'obtenir un code plus robuste : un compilateur peut afficher des messages de diagnostique différents, et à l'exécution certains bogues subtiles peuvent se révéler avec un compilateur mais pas un autre.
15 Accord de genre erroné : « bogues » est masculin, « subtiles » est féminin. => gfortran est très utilisé par les scientifiques, bien que le compilateur Intel ifort puisse être plus performant sur certains problèmes ([[https://polyhedron.com/?page_id=175|voir une comparaison des différents compilateurs ici)]]. Mais plutôt que de se fier aux benchmarks, qui se concentrent sur des problèmes spécifiques, il vaut mieux faire le test sur vos programmes. Il est de toute façon toujours conseillé de compiler ses programmes avec plusieurs compilateurs afin d'obtenir un code plus robuste : un compilateur peut afficher des messages de diagnostique différents, et à l'exécution certains bogues subtiles peuvent se révéler avec un compilateur mais pas un autre.

17 Il manque un espace insécable. => Un autre compilateur prometteur est actuellement en développement : [[https://lfortran.org/|LFortran]], qui permettra de travailler en Fortran de façon interactive, à l'aide par exemple de Jupyter.
17 Mot inconnu : Jupyter => Un autre compilateur prometteur est actuellement en développement : [[https://lfortran.org/|LFortran]], qui permettra de travailler en Fortran de façon interactive, à l'aide par exemple de Jupyter.

19 Mot inconnu : GFortran => ==== GFortran ====

21 Mot inconnu : GFortran => [[https://gcc.gnu.org/wiki/GFortran|GNU Fortran (GFortran)]], qui fait partie de la collection de compilateurs GCC, intègre à peu près intégralement la norme Fortran 2008 et commence à intégrer les nouveautés apportées par la norme Fortran 2018. L'installer dans Ubuntu ne présente pas de difficulté : [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>gfortran|gfortran]]** de la dernière version majeure disponible dans le dépôt ''main''.
21 Mot inconnu : GCC => [[https://gcc.gnu.org/wiki/GFortran|GNU Fortran (GFortran)]], qui fait partie de la collection de compilateurs GCC, intègre à peu près intégralement la norme Fortran 2008 et commence à intégrer les nouveautés apportées par la norme Fortran 2018. L'installer dans Ubuntu ne présente pas de difficulté : [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>gfortran|gfortran]]** de la dernière version majeure disponible dans le dépôt ''main''.
21 Il manque un espace insécable. => [[https://gcc.gnu.org/wiki/GFortran|GNU Fortran (GFortran)]], qui fait partie de la collection de compilateurs GCC, intègre à peu près intégralement la norme Fortran 2008 et commence à intégrer les nouveautés apportées par la norme Fortran 2018. L'installer dans Ubuntu ne présente pas de difficulté : [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>gfortran|gfortran]]** de la dernière version majeure disponible dans le dépôt ''main''.
21 Il manque un espace. => [[https://gcc.gnu.org/wiki/GFortran|GNU Fortran (GFortran)]], qui fait partie de la collection de compilateurs GCC, intègre à peu près intégralement la norme Fortran 2008 et commence à intégrer les nouveautés apportées par la norme Fortran 2018. L'installer dans Ubuntu ne présente pas de difficulté : [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>gfortran|gfortran]]** de la dernière version majeure disponible dans le dépôt ''main''.
21 Guillemets typographiques ouvrants. => [[https://gcc.gnu.org/wiki/GFortran|GNU Fortran (GFortran)]], qui fait partie de la collection de compilateurs GCC, intègre à peu près intégralement la norme Fortran 2008 et commence à intégrer les nouveautés apportées par la norme Fortran 2018. L'installer dans Ubuntu ne présente pas de difficulté : [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>gfortran|gfortran]]** de la dernière version majeure disponible dans le dépôt ''main''.
21 Guillemets typographiques fermants. => [[https://gcc.gnu.org/wiki/GFortran|GNU Fortran (GFortran)]], qui fait partie de la collection de compilateurs GCC, intègre à peu près intégralement la norme Fortran 2008 et commence à intégrer les nouveautés apportées par la norme Fortran 2018. L'installer dans Ubuntu ne présente pas de difficulté : [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>gfortran|gfortran]]** de la dernière version majeure disponible dans le dépôt ''main''.

23 Guillemets typographiques ouvrants. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Mot inconnu : universe => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Guillemets typographiques fermants. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Il manque un espace insécable. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Guillemets typographiques ouvrants. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Guillemets typographiques fermants. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Mot inconnu : gfortran => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Guillemets typographiques ouvrants. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Mot inconnu : universe => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Guillemets typographiques fermants. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 
23 Espace(s) en fin de ligne à supprimer. => Mais le dépôt ''universe'' propose plusieurs autres versions : par exemple, dans Ubuntu 20.10 le dépôt ''main'' propose gfortran 10.2 et le dépôt ''universe'' les versions 9.3, 8.4 et 7.5. Or les versions avec un numéro de version mineure plus élevé sont déboguées depuis plus longtemps. En particulier, pour des calculs très longs, la dernière version n'est pas toujours la plus rapide. Il est donc intéressant d'installer plusieurs versions et de les tester sur votre problème. 

27 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Mot inconnu : std =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Guillemets typographiques fermants. =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Mot inconnu : std =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Mot inconnu : f2008 =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Guillemets typographiques fermants. =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Mot inconnu : pedantic =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.
27 Guillemets typographiques fermants. =>   * ''-std'' permet de spécifier la norme à respecter, par exemple ''-std=f2008'' pour Fortran 2008. On peut lui associer l'option ''-pedantic'' pour être encore plus strict.

28 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''-Wall -Wextra'' permettront d'obtenir un maximum d'avertissements lors de la compilation.
28 Mot inconnu : Wextra =>   * ''-Wall -Wextra'' permettront d'obtenir un maximum d'avertissements lors de la compilation.
28 Guillemets typographiques fermants. =>   * ''-Wall -Wextra'' permettront d'obtenir un maximum d'avertissements lors de la compilation.

32 Typographie des composés chimiques. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
32 Mot inconnu : O3 => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
32 Guillemets typographiques fermants. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
32 Guillemets typographiques ouvrants. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
32 Il manque un espace. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
32 Guillemets typographiques fermants. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
32 Il manque un espace insécable. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :

35 Mot inconnu : gfortran => gfortran -O3 test.f90
35 Il manque un espace à côté du tiret. => gfortran -O3 test.f90
35 Typographie des composés chimiques. => gfortran -O3 test.f90
35 Mot inconnu : O3 => gfortran -O3 test.f90
35 Mot inconnu : f90 => gfortran -O3 test.f90

36 Il manque un espace. => ./a.out

39 Mot inconnu : gfortran => Parmi les [[https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html|options d'optimisation]] de gfortran, citons :
39 Il manque un espace insécable. => Parmi les [[https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html|options d'optimisation]] de gfortran, citons :

41 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.
41 Mot inconnu : Ofast =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.
41 Guillemets typographiques fermants. =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.
41 Il manque un espace insécable. =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.
41 Typographie des composés chimiques. =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.
41 Mot inconnu : O3 =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.
41 Guillemets typographiques fermants. =>   * ''-Ofast'' : permet d'aller au-delà de ''-O3'', mais ne respecte pas la norme Fortran de façon stricte.

42 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * ''-Os'' : permet de minimiser la taille de l'exécutable. Cela peut en particulier être intéressant si l'exécutable occupe en mémoire une place similaire à celle des caches du processeur, afin de réduire les allers-retours coûteux entre cache et mémoire vive.
42 Guillemets typographiques fermants. =>   * ''-Os'' : permet de minimiser la taille de l'exécutable. Cela peut en particulier être intéressant si l'exécutable occupe en mémoire une place similaire à celle des caches du processeur, afin de réduire les allers-retours coûteux entre cache et mémoire vive.
42 Il manque un espace insécable. =>   * ''-Os'' : permet de minimiser la taille de l'exécutable. Cela peut en particulier être intéressant si l'exécutable occupe en mémoire une place similaire à celle des caches du processeur, afin de réduire les allers-retours coûteux entre cache et mémoire vive.

44 Mot inconnu : static-libgfortran => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Guillemets typographiques fermants. => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Mot inconnu : gfortran => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Il manque un espace insécable. => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Mot inconnu : OpenMP => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Mot inconnu : coarrays => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Mot inconnu : static => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.
44 Guillemets typographiques fermants. => L'option ''-static-libgfortran'' permet d'utiliser [[https://gcc.gnu.org/onlinedocs/gfortran/Link-Options.html|la version statique de la librairie gfortran]], plutôt que la version partagée : cela peut permettre dans certains cas (à tester) de gagner un peu en vitesse (quelques pourcents) au détriment de la taille de l'exécutable, qui va embarquer les fonctions de la librairie que vous utilisez. Cette option est compatible avec OpenMP et les coarrays, contrairement à l'option ''-static''.

46 Mot inconnu : OpenMP => Pour faire du calcul parallèle avec OpenMP, l'option de compilation est ''-fopenmp''. Parmi les méthodes utilisables pour régler le nombre de //threads,// on peut alors utiliser la variable d'environnement (exemple avec ici 4 threads) :
46 Mot inconnu : fopenmp => Pour faire du calcul parallèle avec OpenMP, l'option de compilation est ''-fopenmp''. Parmi les méthodes utilisables pour régler le nombre de //threads,// on peut alors utiliser la variable d'environnement (exemple avec ici 4 threads) :
46 Guillemets typographiques fermants. => Pour faire du calcul parallèle avec OpenMP, l'option de compilation est ''-fopenmp''. Parmi les méthodes utilisables pour régler le nombre de //threads,// on peut alors utiliser la variable d'environnement (exemple avec ici 4 threads) :
46 Il manque un espace insécable. => Pour faire du calcul parallèle avec OpenMP, l'option de compilation est ''-fopenmp''. Parmi les méthodes utilisables pour régler le nombre de //threads,// on peut alors utiliser la variable d'environnement (exemple avec ici 4 threads) :

48 Mot inconnu : OMP_NUM_THREADS => export OMP_NUM_THREADS=4

51 Mot inconnu : OpenCoarrays => === OpenCoarrays ===

53 Mot inconnu : ifort => Contrairement à ifort, gfortran ne gère pas encore les cotableaux de façon native. Si vous voulez les utiliser vous aurez besoin d'installer [[http://www.opencoarrays.org/|OpenCoarrays]] :
53 Mot inconnu : gfortran => Contrairement à ifort, gfortran ne gère pas encore les cotableaux de façon native. Si vous voulez les utiliser vous aurez besoin d'installer [[http://www.opencoarrays.org/|OpenCoarrays]] :
53 Mot inconnu : cotableaux => Contrairement à ifort, gfortran ne gère pas encore les cotableaux de façon native. Si vous voulez les utiliser vous aurez besoin d'installer [[http://www.opencoarrays.org/|OpenCoarrays]] :
53 Il manque un espace insécable. => Contrairement à ifort, gfortran ne gère pas encore les cotableaux de façon native. Si vous voulez les utiliser vous aurez besoin d'installer [[http://www.opencoarrays.org/|OpenCoarrays]] :

55 Mot inconnu : sudo => sudo apt install libcoarrays-dev libcoarrays-mpich-dev
55 Mot inconnu : install => sudo apt install libcoarrays-dev libcoarrays-mpich-dev
55 Mot inconnu : libcoarrays-dev => sudo apt install libcoarrays-dev libcoarrays-mpich-dev
55 Mot inconnu : libcoarrays-mpich-dev => sudo apt install libcoarrays-dev libcoarrays-mpich-dev

58 Accord de nombre erroné avec « répertoire » : « Logiciels » devrait être au singulier. => Vous pouvez également l'installer depuis les sources, par exemple dans un répertoire Logiciels de votre compte :
58 Il manque un espace insécable. => Vous pouvez également l'installer depuis les sources, par exemple dans un répertoire Logiciels de votre compte :

60 Accord de genre erroné avec « cd ». => cd Logiciels

62 Mot inconnu : OpenCoarrays => cd OpenCoarrays

63 Mot inconnu : install => ./install.sh
63 Mot inconnu : sh => ./install.sh
65 Mot inconnu : OpenCoarrays => S'il vous propose d'installer la librairie [[https://www.mpich.org/|MPICH]], acceptez. Sinon, OpenCoarrays peut également fonctionner avec [[https://www.open-mpi.org/|OpenMPI]].

67 Il manque un espace insécable. => Définissez ensuite les variables d'environnement :

69 Mot inconnu : opencoarrays => source /home/mon_login/Logiciels/OpenCoarrays/prerequisites/installations//opencoarrays/2.9.2/setup.sh
69 Mot inconnu : setup => source /home/mon_login/Logiciels/OpenCoarrays/prerequisites/installations//opencoarrays/2.9.2/setup.sh
69 Mot inconnu : sh => source /home/mon_login/Logiciels/OpenCoarrays/prerequisites/installations//opencoarrays/2.9.2/setup.sh

72 Il manque un espace. => [[:tutoriel:comment_modifier_un_fichier|Ajoutez à la fin de votre fichier]] **~/.bash_profile** la dernière commande afin de ne pas avoir à la taper à chaque fois que vous ouvrez votre terminal.
72 Mot inconnu : bash_profile => [[:tutoriel:comment_modifier_un_fichier|Ajoutez à la fin de votre fichier]] **~/.bash_profile** la dernière commande afin de ne pas avoir à la taper à chaque fois que vous ouvrez votre terminal.

74 Mot inconnu : gfortran => Au lieu d'utiliser directement gfortran, vous compilerez et exécuterez ainsi votre programme :
74 Il manque un espace insécable. => Au lieu d'utiliser directement gfortran, vous compilerez et exécuterez ainsi votre programme :

76 Mot inconnu : caf => caf test.f90
76 Mot inconnu : f90 => caf test.f90

77 Mot inconnu : cafrun => cafrun -n 4 ./a.out 
77 Il manque un espace à côté du tiret. => cafrun -n 4 ./a.out 
77 Il manque un espace. => cafrun -n 4 ./a.out 
77 Espace(s) en fin de ligne à supprimer. => cafrun -n 4 ./a.out 

78 Espace(s) en fin de ligne à supprimer. => </code> 

79 Guillemets typographiques fermants. => où l'option ''-n'' permet de choisir le nombre d'images à exécuter en parallèle (ici 4 pour tourner sur un processeur à 2 coeurs / 4 threads). 
79 Mot inconnu : coeurs => où l'option ''-n'' permet de choisir le nombre d'images à exécuter en parallèle (ici 4 pour tourner sur un processeur à 2 coeurs / 4 threads). 
79 Espace(s) en fin de ligne à supprimer. => où l'option ''-n'' permet de choisir le nombre d'images à exécuter en parallèle (ici 4 pour tourner sur un processeur à 2 coeurs / 4 threads). 

85 Mot inconnu : oneAPI => Intel® oneAPI Toolkits est désormais disponible gratuitement pour tous les développeurs.
85 Mot inconnu : Toolkits => Intel® oneAPI Toolkits est désormais disponible gratuitement pour tous les développeurs.

89 Mot inconnu : Installing => //Basé sur [[https://software.intel.com/content/www/us/en/develop/articles/installing-intel-oneapi-toolkits-via-apt.html|Installing Intel® oneAPI Toolkits via APT]].//
89 Mot inconnu : oneAPI => //Basé sur [[https://software.intel.com/content/www/us/en/develop/articles/installing-intel-oneapi-toolkits-via-apt.html|Installing Intel® oneAPI Toolkits via APT]].//
89 Mot inconnu : Toolkits => //Basé sur [[https://software.intel.com/content/www/us/en/develop/articles/installing-intel-oneapi-toolkits-via-apt.html|Installing Intel® oneAPI Toolkits via APT]].//

91 Guillemets typographiques ouvrants. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Mot inconnu : intel-basekit => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Guillemets typographiques fermants. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Si “Go” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Il manque un espace insécable. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Il manque un espace insécable. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Si “Mo” est une unité de mesure, il manque un espace insécable. Si le nombre se rapporte au mot suivant, c’est aussi valable. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Il manque un espace insécable. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :
91 Il manque un espace insécable. => Vous pouvez installer le paquet ''intel-basekit'' mais il utilise 16 Go sur votre disque dur ! Nous détaillons donc ci-dessous les instructions nécessaires pour installer juste les compilateurs Fortran (téléchargement : 560 Mo, sur disque : ~1.5 Go) :

93 Mot inconnu : wget => wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB

94 Mot inconnu : sudo => sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
94 Mot inconnu : apt-key => sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
94 Mot inconnu : add => sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
94 Il manque un espace. => sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB

95 Mot inconnu : rm => rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
95 Il manque un espace. => rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB

96 Mot inconnu : sudo => sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
96 Mot inconnu : add-apt-repository => sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
96 Guillemets typographiques ouvrants. => sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
96 Mot inconnu : deb => sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
96 Mot inconnu : all => sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
96 Guillemets typographiques fermants. => sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"

97 Mot inconnu : sudo => sudo apt update
97 Mot inconnu : update => sudo apt update

98 Mot inconnu : sudo => sudo apt install intel-oneapi-compiler-fortran
98 Mot inconnu : install => sudo apt install intel-oneapi-compiler-fortran
98 Mot inconnu : intel-oneapi-compiler-fortran => sudo apt install intel-oneapi-compiler-fortran

102 Il manque un espace. => La dernière commande sert à définir les variables d'environnement. [[:tutoriel:comment_modifier_un_fichier|Ajoutez-là à votre fichier]] **~/.bash_profile**, sinon vous devrez la taper à chaque ouverture d'un terminal.
102 Confusion. Pour un COD, utilisez “la”. Ou, si ce “là” signifie “ici”, ne mettez pas de trait d’union. => La dernière commande sert à définir les variables d'environnement. [[:tutoriel:comment_modifier_un_fichier|Ajoutez-là à votre fichier]] **~/.bash_profile**, sinon vous devrez la taper à chaque ouverture d'un terminal.
102 Mot inconnu : bash_profile => La dernière commande sert à définir les variables d'environnement. [[:tutoriel:comment_modifier_un_fichier|Ajoutez-là à votre fichier]] **~/.bash_profile**, sinon vous devrez la taper à chaque ouverture d'un terminal.

104 Il manque un espace insécable. => Vérifiez que les deux compilateurs Intel sont bien accessibles :

106 Mot inconnu : ifort => ifort --version

107 Mot inconnu : ifort => ifort (IFORT) 2021.2.0 20210228
107 Mot inconnu : IFORT => ifort (IFORT) 2021.2.0 20210228
107 Formatage des grands nombres. => ifort (IFORT) 2021.2.0 20210228

108 Espace(s) surnuméraire(s) à supprimer. => Copyright (C) 1985-2021 Intel Corporation.  All rights reserved.
108 Mot inconnu : All => Copyright (C) 1985-2021 Intel Corporation.  All rights reserved.
108 Mot inconnu : rights => Copyright (C) 1985-2021 Intel Corporation.  All rights reserved.
108 Mot inconnu : reserved => Copyright (C) 1985-2021 Intel Corporation.  All rights reserved.

109 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>  

110 Mot inconnu : ifx => ifx --version

111 Mot inconnu : ifx => ifx (IFORT) 2021.2.0 Beta 20210317
111 Mot inconnu : IFORT => ifx (IFORT) 2021.2.0 Beta 20210317
111 Mot inconnu : Beta => ifx (IFORT) 2021.2.0 Beta 20210317
111 Formatage des grands nombres. => ifx (IFORT) 2021.2.0 Beta 20210317

112 Mot inconnu : All => Copyright (C) 1985-2021 Intel Corporation. All rights reserved.
112 Mot inconnu : rights => Copyright (C) 1985-2021 Intel Corporation. All rights reserved.
112 Mot inconnu : reserved => Copyright (C) 1985-2021 Intel Corporation. All rights reserved.

115 Mot inconnu : ifx => Le nouveau compilateur ifx, encore en version Beta, est basé sur LLVM mais ne permet pas encore d'utiliser les cotableaux (coarrays) pour le calcul parallèle, même si l'option apparaît dans son aide. 
115 Mot inconnu : Beta => Le nouveau compilateur ifx, encore en version Beta, est basé sur LLVM mais ne permet pas encore d'utiliser les cotableaux (coarrays) pour le calcul parallèle, même si l'option apparaît dans son aide. 
115 Mot inconnu : LLVM => Le nouveau compilateur ifx, encore en version Beta, est basé sur LLVM mais ne permet pas encore d'utiliser les cotableaux (coarrays) pour le calcul parallèle, même si l'option apparaît dans son aide. 
115 Mot inconnu : cotableaux => Le nouveau compilateur ifx, encore en version Beta, est basé sur LLVM mais ne permet pas encore d'utiliser les cotableaux (coarrays) pour le calcul parallèle, même si l'option apparaît dans son aide. 
115 Mot inconnu : coarrays => Le nouveau compilateur ifx, encore en version Beta, est basé sur LLVM mais ne permet pas encore d'utiliser les cotableaux (coarrays) pour le calcul parallèle, même si l'option apparaît dans son aide. 
115 Espace(s) en fin de ligne à supprimer. => Le nouveau compilateur ifx, encore en version Beta, est basé sur LLVM mais ne permet pas encore d'utiliser les cotableaux (coarrays) pour le calcul parallèle, même si l'option apparaît dans son aide. 

119 Il manque un espace insécable. => Voir le manuel pour plus d'informations :

123 Guillemets typographiques fermants. => L'ajout d'informations de débogage se fait avec l'option ''-g''.

125 Typographie des composés chimiques. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
125 Mot inconnu : O3 => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
125 Guillemets typographiques fermants. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
125 Guillemets typographiques ouvrants. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
125 Il manque un espace. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
125 Guillemets typographiques fermants. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :
125 Il manque un espace insécable. => Exemple de commande avec optimisation poussée ''-O3'' (l'exécutable est nommé par défaut ''a.out'') :

128 Mot inconnu : ifort => ifort -O3 test.f90
128 Il manque un espace à côté du tiret. => ifort -O3 test.f90
128 Typographie des composés chimiques. => ifort -O3 test.f90
128 Mot inconnu : O3 => ifort -O3 test.f90
128 Mot inconnu : f90 => ifort -O3 test.f90

129 Il manque un espace. => ./a.out

133 Mot inconnu : ifx => ifx -O3 test.f90
133 Il manque un espace à côté du tiret. => ifx -O3 test.f90
133 Typographie des composés chimiques. => ifx -O3 test.f90
133 Mot inconnu : O3 => ifx -O3 test.f90
133 Mot inconnu : f90 => ifx -O3 test.f90

134 Il manque un espace. => ./a.out

137 Mot inconnu : Ofast => Parmi les options d'optimisation, on citera également ''-Ofast'', ainsi que ''-xHost'' pour choisir le jeu d'instructions le plus élevé disponible sur le processeur de la machine.
137 Guillemets typographiques fermants. => Parmi les options d'optimisation, on citera également ''-Ofast'', ainsi que ''-xHost'' pour choisir le jeu d'instructions le plus élevé disponible sur le processeur de la machine.
137 Mot inconnu : xHost => Parmi les options d'optimisation, on citera également ''-Ofast'', ainsi que ''-xHost'' pour choisir le jeu d'instructions le plus élevé disponible sur le processeur de la machine.
137 Guillemets typographiques fermants. => Parmi les options d'optimisation, on citera également ''-Ofast'', ainsi que ''-xHost'' pour choisir le jeu d'instructions le plus élevé disponible sur le processeur de la machine.

139 Mot inconnu : OpenMP => Pour utiliser OpenMP, l'option de compilation est ''-qopenmp''.
139 Mot inconnu : qopenmp => Pour utiliser OpenMP, l'option de compilation est ''-qopenmp''.
139 Guillemets typographiques fermants. => Pour utiliser OpenMP, l'option de compilation est ''-qopenmp''.

141 Mot inconnu : ifort => ifort supporte nativement la programmation parallèle à l'aide des cotableaux : il suffit d'utiliser l'option de compilation ''-coarray''.
141 Mot inconnu : cotableaux => ifort supporte nativement la programmation parallèle à l'aide des cotableaux : il suffit d'utiliser l'option de compilation ''-coarray''.
141 Il manque un espace insécable. => ifort supporte nativement la programmation parallèle à l'aide des cotableaux : il suffit d'utiliser l'option de compilation ''-coarray''.
141 Mot inconnu : coarray => ifort supporte nativement la programmation parallèle à l'aide des cotableaux : il suffit d'utiliser l'option de compilation ''-coarray''.
141 Guillemets typographiques fermants. => ifort supporte nativement la programmation parallèle à l'aide des cotableaux : il suffit d'utiliser l'option de compilation ''-coarray''.

143 Il manque un espace insécable. => Parmi les méthodes utilisables pour régler le nombre de //threads///images, on peut alors utiliser ces variables d'environnement (exemple avec ici 4 //threads//) :

145 Mot inconnu : OMP_NUM_THREADS => export OMP_NUM_THREADS=4

146 Mot inconnu : FOR_COARRAY_NUM_IMAGES => export FOR_COARRAY_NUM_IMAGES=4

148 Mot inconnu : coarray-num-images => ou utiliser l'option de compilation ''-coarray-num-images=4'' pour les cotableaux.
148 Guillemets typographiques fermants. => ou utiliser l'option de compilation ''-coarray-num-images=4'' pour les cotableaux.
148 Mot inconnu : cotableaux => ou utiliser l'option de compilation ''-coarray-num-images=4'' pour les cotableaux.

149 Mot inconnu : Editeurs => ===== Editeurs et Environnement de Développement Intégré =====

151 Il manque un espace insécable. => La plupart des éditeurs de texte disposent d'une coloration syntaxique pour le Fortran : [[:Kate]], [[apt>gedit|gedit]], [[:Geany]], [[:vim]], [[:emacs]], etc.

153 Il manque un espace insécable. => Les grands IDE gèrent également le Fortran :

155 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:code_blocks|Code::Blocks]] : il en existe une version [[https://cbfortran.sourceforge.io/|CBFortran]] dédiée au Fortran. 
155 Une de ces ponctuations est superflue. =>   * [[:code_blocks|Code::Blocks]] : il en existe une version [[https://cbfortran.sourceforge.io/|CBFortran]] dédiée au Fortran. 
155 Il manque un espace insécable. =>   * [[:code_blocks|Code::Blocks]] : il en existe une version [[https://cbfortran.sourceforge.io/|CBFortran]] dédiée au Fortran. 
155 Espace(s) en fin de ligne à supprimer. =>   * [[:code_blocks|Code::Blocks]] : il en existe une version [[https://cbfortran.sourceforge.io/|CBFortran]] dédiée au Fortran. 

156 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:Eclipse]] avec le [[http://www.eclipse.org/photran/|plugin Photran]] 
156 Mot inconnu : Photran =>   * [[:Eclipse]] avec le [[http://www.eclipse.org/photran/|plugin Photran]] 
156 Espace(s) en fin de ligne à supprimer. =>   * [[:Eclipse]] avec le [[http://www.eclipse.org/photran/|plugin Photran]] 

157 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:KDevelop]] 
157 Espace(s) en fin de ligne à supprimer. =>   * [[:KDevelop]] 

158 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:Anjuta]] 
158 Espace(s) en fin de ligne à supprimer. =>   * [[:Anjuta]] 

159 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[:netbeans]] (cf [[http://netbeans.org/community/releases/67/cpp-setup-instructions.html]])
165 Mot inconnu : Debugger => On peut utiliser [[:gdb]], le débogueur GNU ou [[http://en.wikipedia.org/wiki/Intel_Debugger|idb]] //(Intel Debugger).//

167 Mot inconnu : gfortran => Avec gfortran, lors de la compilation on utilisera l'option ''-g'' (mode debug) :
167 Guillemets typographiques fermants. => Avec gfortran, lors de la compilation on utilisera l'option ''-g'' (mode debug) :
167 Mot inconnu : debug => Avec gfortran, lors de la compilation on utilisera l'option ''-g'' (mode debug) :
167 Il manque un espace insécable. => Avec gfortran, lors de la compilation on utilisera l'option ''-g'' (mode debug) :

169 Mot inconnu : gfortran => gfortran -g test.f90
169 Il manque un espace à côté du tiret. => gfortran -g test.f90
169 Mot inconnu : f90 => gfortran -g test.f90

170 Mot inconnu : gdb => gdb ./a.out
170 Il manque un espace. => gdb ./a.out

172 Mot inconnu : gdb => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Il manque un espace insécable. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : start => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : next => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : until => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Il manque un espace insécable. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : display => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : watch => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : print => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques ouvrants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Mot inconnu : help => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.
172 Guillemets typographiques fermants. => Une fois dans gdb, on pourra exécuter le programme pas à pas avec les instructions suivantes : ''start'', ''next'' (ne rentre pas dans les fonctions), ''step'' (rentre dans les fonctions), ''finish'' (pour continuer jusqu'à la fin d'une fonction), ''until n'' (continue jusqu'à la ligne n). Et afficher le contenu des variables avec : ''display i'', ''watch i'', ''print i''. L'instruction ''help'' permettra d'afficher l'aide de ces instructions.

174 Typographie : points de suspension. Utilisez le caractère dédié. => On peut activer toutes les vérifications (limites de tableau, dépassement de capacité...) pendant l'exécution avec l'option ''-fcheck=all'' de gfortran.
174 Mot inconnu : fcheck => On peut activer toutes les vérifications (limites de tableau, dépassement de capacité...) pendant l'exécution avec l'option ''-fcheck=all'' de gfortran.
174 Mot inconnu : all => On peut activer toutes les vérifications (limites de tableau, dépassement de capacité...) pendant l'exécution avec l'option ''-fcheck=all'' de gfortran.
174 Guillemets typographiques fermants. => On peut activer toutes les vérifications (limites de tableau, dépassement de capacité...) pendant l'exécution avec l'option ''-fcheck=all'' de gfortran.
174 Mot inconnu : gfortran => On peut activer toutes les vérifications (limites de tableau, dépassement de capacité...) pendant l'exécution avec l'option ''-fcheck=all'' de gfortran.
176 Mot inconnu : strace => Pour visualiser les appels système lors de l'exécution, on peut utiliser [[apt>strace]] : 
176 Il manque un espace insécable. => Pour visualiser les appels système lors de l'exécution, on peut utiliser [[apt>strace]] : 
176 Espace(s) en fin de ligne à supprimer. => Pour visualiser les appels système lors de l'exécution, on peut utiliser [[apt>strace]] : 

178 Mot inconnu : strace => strace ./a.out
178 Il manque un espace. => strace ./a.out

181 Mot inconnu : gprof => Pour repérer les portions de code consommant le plus de temps processeur, on peut utiliser le profileur gprof du paquet [[apt>binutils]]. Il faut compiler le programme avec l'option ''-pg'' et ne pas activer d'optimisation :
181 Mot inconnu : binutils => Pour repérer les portions de code consommant le plus de temps processeur, on peut utiliser le profileur gprof du paquet [[apt>binutils]]. Il faut compiler le programme avec l'option ''-pg'' et ne pas activer d'optimisation :
181 Guillemets typographiques fermants. => Pour repérer les portions de code consommant le plus de temps processeur, on peut utiliser le profileur gprof du paquet [[apt>binutils]]. Il faut compiler le programme avec l'option ''-pg'' et ne pas activer d'optimisation :
181 Il manque un espace insécable. => Pour repérer les portions de code consommant le plus de temps processeur, on peut utiliser le profileur gprof du paquet [[apt>binutils]]. Il faut compiler le programme avec l'option ''-pg'' et ne pas activer d'optimisation :

183 Mot inconnu : gfortran => gfortran -pg test.f90
183 Il manque un espace à côté du tiret. => gfortran -pg test.f90
183 Mot inconnu : f90 => gfortran -pg test.f90

184 Mot inconnu : gprof => gprof ./a.out
184 Il manque un espace. => gprof ./a.out

187 Mot inconnu : fpm => ===== Gestionnaire de paquets Fortran fpm =====

189 Mot inconnu : fpm => Depuis 2020, [[https://github.com/fortran-lang/fpm|fpm (Fortran Package Manager)]] est en développement. Bien que disponible en version 0.4.0 alpha au 30 août 2021, il est déjà pleinement utilisable pour des projets simples. Vous pouvez l'installer en ligne de commandes à l'aide de git :
189 Incohérence avec “de” : “git” est une forme verbale conjuguée. => Depuis 2020, [[https://github.com/fortran-lang/fpm|fpm (Fortran Package Manager)]] est en développement. Bien que disponible en version 0.4.0 alpha au 30 août 2021, il est déjà pleinement utilisable pour des projets simples. Vous pouvez l'installer en ligne de commandes à l'aide de git :
189 Il manque un espace insécable. => Depuis 2020, [[https://github.com/fortran-lang/fpm|fpm (Fortran Package Manager)]] est en développement. Bien que disponible en version 0.4.0 alpha au 30 août 2021, il est déjà pleinement utilisable pour des projets simples. Vous pouvez l'installer en ligne de commandes à l'aide de git :

192 Mot inconnu : fpm => cd fpm

193 Mot inconnu : install => ./install.sh
193 Mot inconnu : sh => ./install.sh

194 Mot inconnu : PATH => export PATH=/home/mon_login/.local/bin/:$PATH
194 Mot inconnu : PATH => export PATH=/home/mon_login/.local/bin/:$PATH

196 Guillemets typographiques ouvrants. => en remplaçant ''mon_login'' par votre identifiant de session.
196 Mot inconnu : mon_login => en remplaçant ''mon_login'' par votre identifiant de session.
196 Guillemets typographiques fermants. => en remplaçant ''mon_login'' par votre identifiant de session.

198 Il manque un espace. => [[:tutoriel:comment_modifier_un_fichier|Ajoutez à la fin de votre fichier]] **~/.bashrc** la commande d'export afin de ne pas avoir à la taper à chaque fois que vous ouvrez votre terminal.
198 Mot inconnu : bashrc => [[:tutoriel:comment_modifier_un_fichier|Ajoutez à la fin de votre fichier]] **~/.bashrc** la commande d'export afin de ne pas avoir à la taper à chaque fois que vous ouvrez votre terminal.

200 Majuscule en début de phrase, sauf éventuellement lors d’une énumération. => fpm est inspiré de Cargo, le couteau suisse du langage Rust. Créer, compiler et tester un nouveau projet de type Hello World devient aussi simple que de taper les commandes :
200 Mot inconnu : fpm => fpm est inspiré de Cargo, le couteau suisse du langage Rust. Créer, compiler et tester un nouveau projet de type Hello World devient aussi simple que de taper les commandes :
200 Mot inconnu : World => fpm est inspiré de Cargo, le couteau suisse du langage Rust. Créer, compiler et tester un nouveau projet de type Hello World devient aussi simple que de taper les commandes :
200 Il manque un espace insécable. => fpm est inspiré de Cargo, le couteau suisse du langage Rust. Créer, compiler et tester un nouveau projet de type Hello World devient aussi simple que de taper les commandes :

202 Mot inconnu : fpm => fpm new mon_projet
202 Mot inconnu : mon_projet => fpm new mon_projet

203 Mot inconnu : mon_projet => cd mon_projet

204 Mot inconnu : fpm => fpm run
204 Mot inconnu : run => fpm run

207 Mot inconnu : fpm => fpm gère les dépendances, qu'il peut télécharger automatiquement depuis GitHub.
207 Mot inconnu : GitHub => fpm gère les dépendances, qu'il peut télécharger automatiquement depuis GitHub.

211 Mot inconnu : gnuplot => Fortran ne dispose pas d'instructions graphiques. La visualisation des résultats peut se faire avec des programmes externes comme [[gnuplot]] ou [[apt>paraview|ParaView]], ou des bibliothèques graphiques, comme par exemple :
211 Pléonasme. => Fortran ne dispose pas d'instructions graphiques. La visualisation des résultats peut se faire avec des programmes externes comme [[gnuplot]] ou [[apt>paraview|ParaView]], ou des bibliothèques graphiques, comme par exemple :
211 Il manque un espace insécable. => Fortran ne dispose pas d'instructions graphiques. La visualisation des résultats peut se faire avec des programmes externes comme [[gnuplot]] ou [[apt>paraview|ParaView]], ou des bibliothèques graphiques, comme par exemple :

212 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[apt>libplot-dev libplplotfortran0|PLplot]],
212 Mot inconnu : libplot-dev =>   * [[apt>libplot-dev libplplotfortran0|PLplot]],
212 Mot inconnu : libplplotfortran0 =>   * [[apt>libplot-dev libplplotfortran0|PLplot]],

213 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://github.com/vmagnin/gtk-fortran/wiki|gtk-fortran]] qui permet de créer des interfaces GTK en Fortran,

214 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://github.com/kookma/ogpf|ogpf]] qui permet d'appeler simplement gnuplot depuis un programme en Fortran, grâce à son interface orientée objet. Il peut être installé en tant que paquet fpm.
214 Mot inconnu : gnuplot =>   * [[https://github.com/kookma/ogpf|ogpf]] qui permet d'appeler simplement gnuplot depuis un programme en Fortran, grâce à son interface orientée objet. Il peut être installé en tant que paquet fpm.
214 Mot inconnu : fpm =>   * [[https://github.com/kookma/ogpf|ogpf]] qui permet d'appeler simplement gnuplot depuis un programme en Fortran, grâce à son interface orientée objet. Il peut être installé en tant que paquet fpm.

216 Mot inconnu : pixmap => Un programme Fortran peut également générer facilement des fichiers graphiques au format [[https://fr.wikipedia.org/wiki/Portable_pixmap|Portable pixmap (PPM)]] (voir cet [[https://github.com/certik/fortran-utils/blob/master/src/ppm.f90|exemple]]).

218 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * La page française [[wpfr>Fortran|Fortran]] fournit de nombreuses informations, liens et références bibliographiques concernant le Fortran.

219 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].
219 Mot inconnu : Fortran-lang =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].
219 Mot inconnu : fpm =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].
219 Mot inconnu : stdlib =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].
219 Mot inconnu : LFortran =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].
219 Conjugaison erronée. Accord avec “Les utilisateurs…”. Le verbe devrait être à la 3ᵉ personne du pluriel. =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].
219 Mot inconnu : Discourse =>   * [[https://fortran-lang.org/|Fortran-lang.org]] se veut depuis 2020 la page d'accueil du langage Fortran. La communauté développe en particulier le gestionnaire de paquets Fortran fpm, une bibliothèque standard stdlib et le compilateur interactif LFortran. Les utilisateurs de Fortran se retrouve dans le [[https://fortran-lang.discourse.group/|Discourse Fortran]].

220 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[https://groups.google.com/g/comp.lang.fortran|comp.lang.fortran]] est un groupe de discussion Usenet actif depuis 1983. 
220 Mot inconnu : Usenet =>   * [[https://groups.google.com/g/comp.lang.fortran|comp.lang.fortran]] est un groupe de discussion Usenet actif depuis 1983. 
220 Espace(s) en fin de ligne à supprimer. =>   * [[https://groups.google.com/g/comp.lang.fortran|comp.lang.fortran]] est un groupe de discussion Usenet actif depuis 1983. 

221 Espace(s) en début de ligne à supprimer : utilisez les retraits de paragraphe (ou les tabulations à la rigueur). =>   * [[http://fortranwiki.org/fortran/show/HomePage|Fortran Wiki]] offre en anglais de nombreuses ressources proposées par les développeurs Fortran.
