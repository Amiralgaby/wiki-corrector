
{{tag>Xenial réseau internet partage p2p}}

----
{{ :logo:transmission-logo.png?80nolink|}}
====== Transmission ======

**Transmission** est le client [[wpfr>BitTorrent]] installé par défaut sur Ubuntu. Il se veut intuitif, fonctionnel et très léger. Il dispose de fonctionnalités comme le chiffrement des échanges de données, l'échange de pairs, le support des blocklists, la limitation des débits en émission et en réception, etc. Il possède une interface graphique très épurée en GTK et d'une seconde en QT. Il est disponible sous licence [[wpfr>Licence_publique_générale_GNU|GPL]]v2 ou [[wpfr>Licence_X11|X11]].

{{:transmission.png?500|L'interface de Transmission sous Ubuntu 15.10}}

===== Pré-requis =====
 
  * Disposer des [[:sudo|droits d'administration]].
  * Disposer d'une connexion à Internet configurée et activée.

===== Installation =====

Transmission est le client BitTorrent par défaut d'Ubuntu. Si vous souhaitez l'utiliser sur d'autres [[:variantes]], il suffit d'[[:tutoriel:comment_installer_un_paquet|installer le paquet]] **[[apt>transmission]]**.

===== Configuration =====

Veillez à ce que le port TCP sélectionné dans //Édition → Préférences → Réseaux// soit ouvert (le port de base est le 51413). Vous pouvez vous servir de [[:gufw]] pour configurer vos ports.

==== Intégration de Transmission au launcher Unity ====

Il est possible d'ajouter une fonctionnalité à Transmission afin d'afficher une petite barre de progression et le nombre de téléchargements en cours sur sa tuile du launcher [[:Unity]], comme sur l'image ci-dessous.

{{ :tuile_transmission_progress.png }}

Pour obtenir ce résultat, voici comment procéder :
  - [[:tutoriel:comment_installer_un_paquet|Installez les paquets]] **[[apt>python-transmissionrpc,git-core|python-transmissionrpc et git-core]]**,
  - Ouvrez un [[terminal]] et clonez le dépôt [[Git]] du projet avec la commande : <code bash>git clone https://github.com/kriomant/transmission-unity-launcher.git</code>
  - Copiez le script Python cloné, dans le dossier **/urs/local/bin**, puis donnez-lui les droits d'exécution :<code bash>sudo cp transmission-unity-launcher/transmission-unity-launcher.py /usr/local/bin/
sudo chmod +x /usr/local/bin/transmission-unity-launcher.py</code>
  - Créez les dossiers manquants dans votre HOME :<code bash>mkdir -p ~/.local/share/applications</code>
  - Copiez le fichier icône de Transmission dans ce nouveau dossier :<code bash>cp /usr/share/applications/transmission-gtk.desktop ~/.local/share/applications/</code>
  - Modifiez le contenu de ce fichier pour qu'il exécute automatiquement le script Python précédemment installé :<code bash>sed -i 's/^Exec=transmission-gtk/Exec=\/usr\/local\/bin\/transmission-unity-launcher.py transmission-gtk/' ~/.local/share/applications/transmission-gtk.desktop</code>
  - Donnez-lui les droits d'exécution :<code bash>chmod +x ~/.local/share/applications/transmission-gtk.desktop</code>

Il ne reste plus qu'à activer le plugin que vous venez d'installer. Pour cela, rendez-vous dans les préférences de Transmission (//Édition -> Préférences//), onglet //Accès à distance//, et cochez la case //Autoriser l'accès à distance//.\\ Vérifiez que l'authentification est désactivée, et que l'adresse IP 127.0.0.1 est bien indiquée dans la zone //Autoriser uniquement ces adresses IP :// (la case correspondante doit être cochée) :

{{  :transmission_preferences_remote_tuileprogress.png?600 }}

===== Utilisation =====

Transmission est une application complète comprenant service de téléchargement + interface de téléchargement + web UI depuis la version 1.30. Cela signifie que si vous installez aussi transmission-daemon, alors vous aurez 2 services de téléchargement et 2 web UI sur le même port ce qui cause des problèmes. Les deux applications ne se parlent pas ; donc, si vous ne comprenez pas un mot de ce charabia, installez uniquement Transmission.

==== transmission-gtk ====
Lancez l'application comme indiqué [[:tutoriel:comment_lancer_application|ici]] ou via le [[:terminal]] (toutes [[:versions]] ou [[:variantes]] d'Ubuntu) avec la [[:commande_shell|commande]] suivante : <code bash>transmission-gtk</code>

==== Transmission-cli ====

''Transmission-cli'' est une version ligne de commande. 
Pour l'utiliser, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] (si besoin) **[[apt>transmission-cli]]**. Puis, tapez dans un [[:terminal]] utilisez la commande : <code bash>transmission-cli /le/chemin/de/votre/fichier.torrent</code>

Plusieurs options sont disponibles, afin de les connaître, tapez : <code bash>man transmission-cli</code>
À noter que transmission-cli sauvegarde ses téléchargements dans le dossier où il a été lancé, par défaut votre **Dossier personnel**.


====Transmission-create ====

''Transmission-create'' est fourni avec [[#transmission-cli]] et s'utilise en ligne de commande, il permet de **créer** un torrent. 

Pour créer un torrent, tapez dans un [[:terminal]]  : <code bash>transmission-create -o ~/le_torrent_cree.torrent -t http://le-tracker.fr/ -p -c "Mon commentaire" ~/Le_contenu_du_torrent</code>

Voici les options que vous devez changer :
<code bash>  -o "destination" — Mettez le fichier .torrent désiré
  -t "tracker" — L'adresse du tracker
  -p — Défini si le torrent est privé (enlever dans la majorité des cas)
  -c "commentaire" — Un commentaire associé (entièrement facultatif)</code>

La destination peut-être un dossier ou un fichier, comme désiré.

==== Transmission-daemon ====

''Transmission-daemon'' est un service en fond pour gérer les téléchargements. [[:tutoriel:comment_installer_un_paquet|Installez le paquet]] **[[apt>transmission-daemon]]** (si besoin), et pour le lancer, tapez dans un [[:terminal]] (ou en appuyant sur les touches Alt+F2) : <code bash>transmission-daemon</code>

Transmission-daemon permet aussi d'avoir une [[#web-ui_clutch|interface Web]] pour gérer ses téléchargements lorsque transmission-gtk n'est pas installé comme sur une machine sans serveur graphique.
Notez que Transmission-daemon a sa propre instance indépendante de toute autre installation de Transmission.

Pour connaître les différentes options, tapez : <code bash>transmission-daemon --help</code>

Pour lancer((Option start.)) ou arrêter((Option stop.)) le daemon, tapez : <code bash>sudo systemctl start|stop transmission-daemon.service</code>

Le fichier de conf se trouve dans « /var/lib/transmission-daemon/info/settings.json », ne pas oublier de couper le daemon pendant son édition si vous ne voulez pas que les modifications soient écrasées !

=== transmission-daemon et le fichier settings.json ===

<note warning>Veuillez stopper votre transmission-daemon avant d'éditer votre settings.json, sinon au prochain redémarrage du daemon l'ancienne configuration sera restaurée ! ;-).</note>

Si vous n'avez jamais lancé transmission-daemon, veuillez utiliser la commande suivante : <code bash>sudo systemctl start transmission-daemon.service</code>cette commande va permettre de lancer transmission-daemon et par ce fait, créer votre **~/.config/transmission-daemon/**

Ici nous aborderons une configuration dite <<minimale>>, car comme vous avez pu le constater le settings.json a énormément d'options, si vous voulez en savoir plus je vous invite sur [[https://trac.transmissionbt.com/wiki/EditConfigFiles|EditConfigFiles]].

Pour que transmission-daemon fonctionne correctement il vous faudra éditer votre fichier **~/.config/transmission-daemon/settings.json** avec les options suivantes:

^ Les options((Fichier **~/.config/transmission-daemon/settings.json**))^ Les explications ^

|<code bash>"rpc-username":</code>|Le nom de l'utilisateur.|
|<code bash>"rpc-password":</code>|Le mot de passe.|
|<code bash>"rpc-whitelist-enabled":</code>|Active ou non la limitation d’accès aux IPS spécifiées dans rpc-whitelist.|*
|<code bash>"rpc-enabled":</code>| Activer le Web-UI.|
|<code bash>"rpc-authentication-required":</code>| Activer l'authentification du Web-UI.|
|<code bash>"download-dir":</code>|Dossier où seront stockés les données téléchargées.|
|<code bash>"rpc-whitelist":</code>|Liste d’adresses IP autorisés à accéder à l’interface web, séparées par des virgules, le caractère * permet de définir une plage d’adresse (192.168.*.*).|
|<code bash>"incomplete-dir":</code>|Dossier où seront stockés temporairement les données en cours de téléchargement.|
|<code bash>"dht-enabled":</code>|Vous devez mettre cette valeur à false pour désactiver le [[wpfr>Table_de_hachage_distribu%C3%A9e|DHT]] de votre daemon.|
|<code bash>"pex-enabled":</code>|Vous devez mettre cette valeur à false pour désactiver le [[wpfr>Peer_exchange|PEX]] de votre daemon.|

Quand toutes les options seront configurées, il vous restera plus qu'à faire : 
<code bash>sudo systemctl start transmission-daemon.service</code>

Votre Seedbox sera alors accessible via:

<code bash>http://votreip:9091/transmission/web/</code>

<note tip>Si votre [[wpfr>Seedbox|Seedbox]] n'est pas accessible, ceci voudra sûrement dire que vous avez un [[wpfr>Pare-feu_%28informatique%29|firewall]], il vous faudra donc ouvrir le port 9091/TCP en entrée, vous devez également ouvrir le port du peer-port en TCP/UDP.</note>

=== Explication du fichier settings.json (avancé) ===

^ Les options ^ Les explications ^
|<code bash>"blocklist-enabled": "true"</code>| Activer la blocklist (optionnel).|
|<code bash>"blocklist-url":</code>| L'URL de la blocklist (si active).|
|<code bash>"dht-enabled": "false"</code> | Désactiver le [[http://fr.wikipedia.org/wiki/Table_de_hachage_distribu%C3%A9e|DHT]].|
|<code bash>"download-dir:"</code>| Le dossier de téléchargement.|
|<code bash>"download-queue-enabled:"</code> | Activer la file d'attente.|
|<code bash>"download-queue-size:"</code> | À modifier en fonction de votre ratio.|
|<code bash>"idle-seeding-limit-enabled": "true/false"</code> | Mettre en pause ou non, les torrents qui ne seed pas en continue.|
|<code bash>"incomplete-dir":</code>| Dossier des torrents incomplets.|
|<code bash>"incomplete-dir-enabled": "true/false"</code>| Activer ou désactive le dossier incomplet.|
|<code bash> "lpd-enabled": "true/false"</code>|Active/désactive le LPD.|
|<code bash>"peer-port": "51413"</code> | Le port pour les échanges (à modifier à votre convenance et ne pas oublier de l'ouvrir dans le firewall).|
|<code bash>"peer-port-random-on-start": "true/false"</code>|Activer/désactiver le port aléatoire au démarrage.|
|<code bash>"pex-enabled": "true/false"</code>|Activer/désactiver le  [[http://fr.wikipedia.org/wiki/Peer_exchange|PEX]].|
|<code bash>"ratio-limit-enabled": "true/false"</code>|Activer/désactiver la limite du ratio.|
|<code bash>"rpc-authentication-required":"true/false"</code>|Activer/désactiver l'authentification du Web-UI.|
|<code bash>"rpc-bind-address": "0.0.0.0"</code>|Adresse sur lesquels activer le Web-UI (0.0.0.0 pour toutes les adresses)|
|<code bash>"rpc-enabled": "true/false"</code>| Activer le Web-UI.|
|<code bash>"rpc-password": "votre_mot_de_passe"</code>|Le mot de passe (à votre guise, il sera chiffré au prochain redémarrage du service).|
|<code bash>"rpc-port": "9091"</code>|Le port pour accéder au Web-UI (à modifier à votre convenance et ne pas oublier de l'ouvrir dans le firewall).|
|<code bash>"rpc-username": "beaver"</code>|Votre identifiant (à votre guise).|
|<code bash>"rpc-whitelist": "ip list"</code>|Liste d’adresses IP autorisées à accéder à l’interface web, séparées par des virgules, le caractère "*" permet de définir une plage d’adresse (192.168.*.*).|
|<code bash>"speed-limit-down": "6000"</code>|Limite de débit en download (ici 6Mo/s, à adapter).|
|<code bash>"speed-limit-down-enabled": "true/false"</code>|Activer/désactiver la limite.|
|<code bash>"speed-limit-up": "6000"</code>| Limite de débit en upload (ici 6Mo/s, à adapter).|
|<code bash>"speed-limit-up-enabled": "true/fase"</code>|Activer/désactiver la limite.|
|<code bash>"start-added-torrents": "true/false"</code>|Démarrer ou non les torrents à l'ajout.|

==== transmission-daemon et SSL via Apache ====

Pour utiliser SSL avec votre daemon, vous devez créer votre certificat SSL (auto signé dans cet exemple), et modifier 3/4 lignes de votre VirtualHost.

==== Générer mon certificat SSL via OpenSSL ====

Pour créer son certificat SSL auto signé nous allons utiliser l'outil [[wpfr>OpenSSL|OpenSSL]], il est aussi possible d'installer le paquet ca-certificates en complément de OpenSSL, mais ça ne semble pas utile dans le cas d'un certificat auto-signé.

Trêve de blabla voici les instructions :-D :

<code bash>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out /etc/apache2/server.crt -keyout /etc/apache2/server.key</code>

**Les explications :**

  * -x509 -nodes est le type de certificat voulu((http://security.stackexchange.com/questions/36932/what-is-the-difference-between-ssl-and-x-509-certificates)).
  * -days 365 est la durée de validité (en jours) de notre certificat.
  * -newkey rsa:2048 génère une clé RSA de 2048 bits.
  * -out /etc/apache2/server.crt est le chemin absolu de notre certificat.
  * -keyout /etc/apache2/server.key est le chemin absolu de notre clé privée.

Voici pour les explications de la commande, maintenant nous devons ajouter/modifier notre VirtualHost.

<code bash>sudo nano /etc/apache2/sites-available/transmission.conf</code>

Et on y insère ceci:
<file - transmission.conf>

<VirtualHost *:443>
ServerName votredomaine.org

    SSLEngine on
    SSLProxyEngine On
    SSLCertificateFile /etc/apache2/server.crt
    SSLCertificateKeyFile /etc/apache2/server.key
    
<IfModule mod_proxy.c>
  #turning ProxyRequests on and allowing proxying from all may allow
  #spammers to use your proxy to send email. 
  
  ProxyRequests Off
  
  <Proxy *>    
    AddDefaultCharset off
    Order Allow,Deny
    Allow from all
  </Proxy>

   ProxyPass /transmission http://localhost:votreportrpc/transmission
   ProxyPassReverse /transmission http://localhost:votreportrpc/transmission
  # Line below is optional
   Redirect permanent /transmission https://votrendd.tld/transmission/web/

</IfModule>
</VirtualHost>
</file>

Si la précédente configuration ne fonctionne pas pour vous, vous pouvez tester la suivante :
<file - transmission.conf>
SSLProxyEngine On

SSLCertificateFile /etc/apache2/server.crt
SSLCertificateKeyFile /etc/apache2/server.key

ProxyPass /transmission http://localhost:9091/transmission
ProxyPassReverse /transmission http://localhost:9091/transmission
</file>

Nous chargeons ensuite le module SSL de Apache, ainsi que les modules pour le Reverse Proxy :

<code bash>sudo a2enmod ssl proxy proxy_http</code> 

On charge notre VirtualHost:

<code bash>sudo a2ensite transmission</code>

On relance Apache:

<code bash>sudo systemctl restart apache2.service</code>

On ouvre notre navigateur web et on y insère ceci:

<code bash>https://votrendd.tld/transmission/web/</code>

**Magie**, votre daemon transmission est accessible en HTTPS 8-).

===== Customiser transmission-daemon (Web-UI)=====

==== Web-UI Clutch ====

{{beaverrr.png?770nolink}}  

Une interface Web permet de contrôler Transmission. Depuis la version 1.30, elle est intégrée ainsi qu'un mini serveur web dans l'application transmission. Cela signifie qu'il vous suffit de l'activer dans les préférences et de vous rendre à l'adresse :

<code bash>http://localhost:9091/transmission/web/</code>

==== Kettu ====

Vous souhaitez personnaliser votre [[http://acronyms.thefreedictionary.com/WebUI|Web-UI]] de votre transmission-daemon ?, mais vous savez pas comment faire ?, vous allez voir c'est simple très simple à faire :-D.

  git clone https://github.com/endor/kettu.git web

On se retrouve donc avec un dossier web, nous devons déplacer ce dossier dans **/usr/local/share/transmission**

Mais avant nous allons faire un backup du dossier web actuel pour se faire on ferra: 

<code bash>mkdir backupwebui && sudo mv /usr/local/share/transmission/web backupwebui/</code>

Ensuite il suffit de déplacer notre dossier web qu'on a git:

<code bash>sudo mv web/ /usr/local/share/transmission/</code>

On recharge notre page de notre navigateur internet, et vous aurez quelque chose de semblable à ceci:

{{kettu.png?700nolink}}

==== Transmission Web Control ====

{{web_control_transmission.png?nolink}}

Vous souhaitez customiser votre [[http://acronyms.thefreedictionary.com/WebUI|Web-UI]] de votre transmission-daemon ?, mais vous savez pas comment faire ?, vous allez voir c'est simple très simple à faire :-D.

On récupère la dernière version de Transmission Web Control:

<code bash>wget https://github.com/ronggang/transmission-web-control/raw/master/release/transmission-control-full.tar.gz</code>

On décompresse l'archive :

<code bash>tar xvzf transmission-control-full.tar.gz</code>

On se retrouve donc avec un dossier web, nous devons déplacer ce dossier dans:

<code bash>/usr/share/transmission/</code>

Mais avant nous allons faire un backup du dossier web actuel pour se faire on ferra: 

<code bash>mkdir backupwebui && sudo mv /usr/share/transmission/web backupwebui/</code>

Ensuite il suffit de déplacer notre dossier web qu'on a wget:

<code bash>sudo mv web/ /usr/share/transmission/</code>

On refresh notre page de notre navigateur internet, et vous aurez quelque chose de semblable à ceci:

{{transmission-control.png?650nolink}}

<note>Si vous avez déjà accédé à l'interface web de base auparavant sur la même machine, pensez à nettoyer le cache de votre navigateur si l'ancienne interface s'affiche.</note>

==== Shift ====

Vous souhaitez customiser votre [[http://acronyms.thefreedictionary.com/WebUI|Web-UI]] de votre transmission-daemon ?, mais vous savez pas comment faire ?, vous allez voir c'est simple très simple à faire :-D.

On récupère la dernière version de Transmission Web Control:

<code bash>git clone https://github.com/killemov/Shift.git web</code>

On se retrouve donc avec un dossier web, nous devons déplacer ce dossier dans:

<code bash>/usr/local/share/transmission</code>

Mais avant nous allons faire un backup du dossier web actuel pour se faire on ferra: 

<code bash>mkdir backupwebui && sudo mv /usr/local/share/transmission/web backupwebui/</code>

Ensuite il suffit de déplacer notre dossier web qu'on a git:

<code bash>sudo mv web/ /usr/local/share/transmission/</code>

On refresh notre page de notre navigateur internet, et vous aurez quelque chose de semblable à ceci:
{{shiftnone.png?650nolink}}

==== Owncloud Transmission Web-UI ====

{{owncloudlogo.png?100nolink}}

Le projet se trouve [[https://forum.transmissionbt.com/viewtopic.php?f=8&t=16848|ici]].

Vous souhaitez customiser votre [[http://acronyms.thefreedictionary.com/WebUI|Web-UI]] de votre transmission-daemon ?, mais vous savez pas comment faire ?, vous allez voir c'est simple très simple à faire :-D.

On récupère la dernière version de Owncloud Transmission Web-UI :

<del>http://mspot.tk/oc/index.php/s/QW9uDVVt1IToPEa/download</del>((Lien mort.)).

Ensuite nous [[:tutoriel:comment_installer_un_paquet|installons]] le package p7zip:

<code bash>sudo apt install p7zip</code>

Ensuite nous décompressons le fichier **OwnCloud_Trans_Web_UI_1.0.0.7z** :

<code bash>7z x OwnCloud_Trans_Web_UI_1.0.0.7z</code>

On se retrouve donc avec un dossier web, nous devons déplacer ce dossier dans:

<code bash>/usr/local/share/transmission</code>

Mais avant nous allons faire un backup du dossier web actuel pour se faire on ferra: 

<code bash>mkdir backupwebui && sudo mv /usr/local/share/transmission/web backupwebui/</code>

Ensuite il suffit de déplacer notre dossier web qu'on a téléchargé :

<code bash>sudo mv web/ /usr/local/share/transmission/</code>

On refresh notre page de notre navigateur internet, et vous aurez quelque chose de semblable à ceci:

{{owncloud_trans_web_ui_1.0.0.png?860nolink}}

==== Restaurer le Web-UI original de transmission-daemon ====

Nous supprimons le Web-UI customisé :

<code bash>sudo rm -r /usr/local/share/transmission/web</code>

Nous utilisons notre backup "web" pour restaurer le Web-UI orginal :

<code bash>sudo mv backupwebui/web /usr/local/share/transmission/</code>

===== transmission-remote =====

transmission-remote permet de gérer transmission-daemon. 
Vous pouvez voir un exemple de son utilisation [[:seedbox#transmisson-remote|là]]

Pour connaître les différentes options, tapez :<code bash>transmission-remote --help</code>
  * Pour avoir le listing des torrents, tapez :<code bash>transmission-remote -l </code>
  * Pour avoir les infos d'un torrent plus les peers connectés, tapez :<code bash>transmission-remote -t (ID) -i -pi </code> 
<note tip>**(ID)** = numéro du torrent (1ere colonne du listing) 

"-t (ID)" peut être écrit de plusieurs manière: 
  * un seul torrent: -t 1  
  * une liste: -t 1,3,5 
  * une plage: -t 5-10 
Le tout peut être mélangé exemple: -t 1,3,5-10.</note> 

Voici un petit script pour faciliter l'utilisation des deux dernières commandes :

<code bash>
#!/bin/bash

## "ctrl + c" pour quitter le script 

while true
do 
# affichage du listing
clear && transmission-remote -l
read -p N° choi
if [[ "$choi" = "" ]]
then
# retour en debut de boucle 
continue
else
# affichage des infos et peers
transmission-remote -t $choi -i -pi | less
## tapez "q" pour sortir de la commande "less"
fi
done
</code>


<note>Si vous obtenez une erreur "**Unauthorized User**", transmission est peut-être configuré pour demander un login. Il faudra, par exemple pour lister les torrent utiliser la syntaxe suivante :
<code bash>transmission-remote -n nom:motdepasse -l</code>Où nom et username sont à mettre dans les variables rpc-username et rpc-password dans le settings.json de transmission ou transmission-daemon selon le cas.</note>

  * Pour supprimer un ou plusieurs torrent, tapez :<code bash>transmission-remote -t (ID) -r</code>
  * Pour stopper un ou plusieurs torrent, tapez :<code bash>transmission-remote -t (ID) -S</code>
  * Pour relancer un ou plusieurs torrent, tapez :<code bash>transmission-remote -t (ID) -s</code>
  * Pour ajouter un fichier torrent, tapez :<code bash>transmission-remote -a /le/chemin/fichier.torrent</code>

==== transmission-remote-gtk  ====

Il existe un logiciel qui permet de contrôler transmission-daemon, il se nomme Transmission Remote Gtk, pour l'installer nous utiliserons le [[https://doc.ubuntu-fr.org/ppa|PPA]] du [[https://launchpad.net/~ajf/+archive/ubuntu/trg|projet]].

{{transmission-remote-gtk.png?770nolink}}

  * Ouvrir un [[:terminal]] et saisir la [[:commande_shell|commande]] suivante : <code bash>sudo add-apt-repository ppa:ajf/trg</code>
  * Recharger la liste des paquets avec la [[:commande_shell|commande]] suivante : <code bash>sudo apt update</code>
  * Installation du package transmission-remote-gtk :<code bash>sudo apt install transmission-remote-gtk</code>

==== Transmission Remote GUI ====

Il existe un logiciel qui permet de contrôler transmission-daemon, il se nomme Transmission Remote GUI.

Le projet sur LaunchPad se trouve [[https://launchpad.net/transgui/|ici]].

Pour l'installer, [[:tutoriel:comment_installer_un_paquet|installez le paquet]] **[[apt>transgui]]**.

Aperçu de l'interface :

{{transmission-remote-gui.jpg?900nolink}}

----

Méthode alternative d'utilisation sans installation : récupérer le .zip, l'extraire sur votre bureau (par exemple), et lancer le binaire.

Le projet sur SourceForge se trouve [[http://sourceforge.net/projects/transgui/|ici]]. Nous téléchargeons la dernière version en date :

<code bash>wget http://downloads.sourceforge.net/project/transgui/5.0.1/transgui-5.0.1-x86_64-linux.zip</code>

On extrait ensuite l'archive :

<code bash>unzip transgui-5.0.1-x86_64-linux.zip</code>

Il ne reste plus qu'à lancer l’exécutable **transgui** :

<code bash>./transgui</code>

----

===== Purge =====

Il est possible, si vous êtes un grand téléchargeur, que transmission stocke plusieurs Go de fichiers pour rien sur votre disque dur !.
En effet, certains téléchargements se passent mal et des fichiers viennent encrasser le répertoire où sont stockés les téléchargements incomplets.

Il peut être intéressant de soulager votre disque dur en vidant ce dossier de temps en temps.

<note important>N'exécutez cette commande que si vous êtes certains de n'avoir **aucun** téléchargement en cours ! Sinon ils serons tous remis à zéro !</note>

Commencez par aller dans le répertoire local de Transmission avant de purger le dossier des téléchargements incomplets :
<code bash>
cd $HOME/.config/transmission/
rm -r Incomplete/*</code>

===== Désinstallation =====

Il suffit de [[:tutoriel:comment_supprimer_un_paquet|supprimer]] le paquet **transmission**, **transmission-cli** ou **transmission-gtk** selon la version que vous avez installée. Selon la méthode choisie, la configuration globale de l'application est conservée ou supprimée. Les journaux du système, et les fichiers de préférence des utilisateurs dans leurs dossiers personnels sont toujours conservés.

===== Voir aussi =====

  * [[http://www.transmissionbt.com|Site Officiel]]
  * [[http://sorrodje.alter-it.org/index.php?article29/seedbox-sur-micro-vks-avec-transmission|Un autre tuto pour monter une seedbox avec transmission sur un serveur dédié virtual (VPS)]]
  * [[http://www.legeektechno.fr/serveurs/installation-dune-seedbox.html|Tutoriel d'installation d'une SeedBox par LeGeekTechno]] 
  * [[http://www.iblocklist.com/lists.php|Liste d'exclusion]]

----

//Contributeurs : Sallé, M4TR4X, [[:utilisateurs:zedtux]], [[:utilisateurs:Mr_Djez]], Heuzef, OpenSourceWay, [[:utilisateurs:BeAvEr|BeAvEr]] (refonte de l'intégralité de la documentation).//