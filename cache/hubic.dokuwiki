
{{tag>Trusty Xenial Bionic cloud synchronisation sauvegarde}}
----
 
====== hubiC ======
 
hubiC ([[https://hubic.com/fr/]]) est le service de stockage Cloud de OVH.

<note warning>**OVH a gelé le service hubiC depuis mai 2018**. Les clients déjà inscrits continuent de bénéficier du service aux mêmes conditions mais il  n'y aura pas d'évolutions et les nouvelles inscriptions ne sont plus possibles. Leurs motivations sont expliquées sur [[https://www.ovh.com/fr/fin-inscription-hubic/|leur site]].

Le client **ne semble plus marcher sous Ubuntu 18.10 Cosmic**

Pour une alternative, consulter la page [[https://doc.ubuntu-fr.org/cloud |cloud]] de ce site.</note>

HubiC propose des logiciels clients pour différents OS, dont un pour Linux. Il permet :
  * la **synchronisation** de différents ordinateurs avec le stockage 'cloud' hubiC
  * une fonction d'**archivage** (BACKUP) à partir de la version 2.0.2
  * une fonction de **partage des fichiers** du cloud hubiC avec un maximum de 30 jours et dans Icedove/Thunderbird, la possibilité d'envoyer des fichiers lourds également avec un maximum de 30 jours.

<note>OVH mettait à disposition un client Linux en ligne de commande depuis le 07 novembre 2013 avec une fonction Backup depuis octobre 2014. Jusqu'à 25 Go, le stockage est gratuit, payant au delà avec un tarif particulièrement bon marché.
\\ [[https://forums.hubic.com/showthread.php?230-hubic-Linux-sortie-de-la-version-b%EAta|Annonce sur le forum officiel Hubic ]]</note>

** Juillet 2017 : Des évolutions du service obligent à des précautions lors de l'installation. ** Ainsi, suivant votre version système des mises à jour de [[mono|Mono]] ou l'installation de certificats peut être nécessaire. Voir le paragraphe Installation.
<note warning>Il est d'autant plus nécessaire de vérifier le bon fonctionnement d'hubiC, comme décrit plus bas dans la section "Contrôle"</note>


===== Installation du client hubiC fourni par OVH ====
==== Pré-requis ====
 
  * Disposer des [[:sudo|droits d'administration]].
  * Disposer d'une connexion à Internet configurée et activée.
  * Nécessite le runtime **Mono** 4+ et les certificats correspondants (voir ci-dessous).
   
==== Installation ====
Récupérez la dernière version d'Hubic au format Debian (.deb) à l'[[http://mir7.ovh.net/ovh-applications/hubic/hubiC-Linux/|adresse suivante]].
[[:tutoriel:comment_installer_un_paquet|Installez le paquet]] debian téléchargé.

====Installation complémentaire====
  * Trusty (14.04 LTS) : la version de Mono est trop ancienne. Il faut donc ajouter un [[ppa|PPA]] pour installer la dernière version disponible en suivant les indications du [[http://www.mono-project.com/download/#download-lin-ubuntu|site de Mono]]. Ensuite, il faut aussi installer des certificats avec les [[sudo|droits de super utilisateur]]: <code>apt install ca-certificates-mono</code> 
<note important>L'ajout d'un PPA peut comporter un certain risque pour la stabilité de votre système.</note>
  * Xenial (16.04 LTS) : a priori, les différentes mises à jour système fournissent une version de Mono 4.2.1.102 et ont installé les certificats. Hubic marche sans installation complémentaire.
  * Bionic(18.04) : fonctionnel. Éventuellement, installer les ca-certificates-mono comme indiqué pour Trusty.
  * Sur le poste officiel du client Linux, il est fait mention d'un problème de configuration avec DBUS. Entrez la commande suivante : <code>export DBUS_SESSION_BUS_ADDRESS=`dbus-daemon --session --fork --print-address`</code>


==== Préparation au 1er lancement ====

 
__1) pré-requis : s'être inscrit sur le site de [[https://hubic.com/fr/|Hubic]]__


__2) Créer un dossier hubiC sur votre ordinateur__
\\ ex d'emplacement :
\\ /home/votre-nom-de-login-linux/Téléchargements/hubiC
\\ Si vous ne souhaitez pas de synchronisation mais utiliser seulement la fonction de sauvegarde, vous pouvez omettre cette étape.


__3) Dans ce dossier, placer les liens des dossiers que vous voulez synchroniser .__
\\ ex sous Nautilus (navigateur de fichiers gnome) :
\\ En appuyant sur les touches "Ctrl" + "Maj" (anciennes versions : touche "alt" seule), faire un glisser-déposer du dossier "Images" dans le dossier "hubiC".


===== Connexion et Synchronisation =====
La synchronisation permet de tenir à jour avec la même version tous les fichiers qui sont dans le répertoire créé hubiC sur votre ordinateur, dans le cloud hubiC et sur tous les autres ordinateurs où vous installerez la même procédure avec le même nom d'utilisateur, qu'ils soient sous Linux, osX ou Windows. Si vous modifiez un fichier sur une machine, la modification sera copiée automatiquement dans le cloud et sur les autres. <note>Mais ce n'est pas une sauvegarde ! Si vous supprimez un fichier sur une machine, il est supprimé dans le cloud et AUSSI sur tous les autres ordinateurs ! Il est cependant désormais possible d'accéder à de nombreuses options (V.2.02) permettant de configurer une sauvegarde et même une sauvegarde avec conservation des versions successives des fichiers. Pour en savoir plus : <code>man hubic</code> </note>

__ 1) Lancer la synchronisation, depuis le terminal__
\\ via le [[:terminal]] (toutes versions d'Ubuntu) avec la [[:commande_shell|commande]] suivante :
<code>hubic login votre-mail-hubic /home/votre-nom-de-login-linux/Téléchargements/hubiC</code>
où vous remplacez //votre-mail-hubic// et //votre-nom-de-login-linux// par vos informations personnelles.
\\ Cette commande va synchroniser tous les dossiers (réels ou liés) présents dans le dossier hubiC de votre ordinateur, en les téléchargeant tout d'abord à la racine de votre dossier hubiC en ligne.
\\ Dans cet exemple, c'est le dossier Images qui va être mis sur hubiC en ligne.
\\ Si vous ne voulez pas utiliser la synchronisation, lancer la même commande //login// sans mentionner le chemin vers le dossier de synchronisation.


__2) Renseigner le mot de passe demandé dans le terminal, puis Valider.__
\\ La synchronisation commence. Vous pouvez fermer le Terminal.
\\ (la tache de synchronisation continuera en arrière-plan).


__3) Exclure des dossiers.__
\\ Vous pouvez exclure certains sous-dossiers parmi les dossiers que vous avez liés dans le 1.3 ci dessus.

Ex.: exclure le sous-dossier "Travail" du dossier "Images" ; dans le terminal, taper la commande :

<code>hubic exclude add /home/votre-nom-de-login-linux/Téléchargements/hubiC/Lien_vers_Images/Travail</code>

Une méthode plus simple pour écrire cette ligne consiste à écrire seulement
<code>hubic exclude add </code>
puis à ouvrir Nautilus pour atteindre le dossier hubiC, puis ouvrir le lien vers le dossier "Images" pour enfin 'tirer' le dossier "Travail" sur la fenêtre de terminal au bout de la phrase que l'on a commencé à taper : le chemin s'écrit tout seul !

Vous pouvez répéter cette manœuvre autant de fois que vous avez de sous-dossiers à exclure.

Pour voir la liste des sous dossiers exclus :
<code>hubic exclude list</code>

Pour enlever une exclusion :
<code>hubic exclude remove 'chemin_vers_le_dossier_à_remettre'</code>

<note important>Il faut bien mettre le chemin vers ce dossier à exclure en passant par le lien créé pour Hubic ! Dans cet exemple, il ne faudrait pas mettre /home/votre-nom-de-login-linux/Images/Travail ce qui ne marcherait pas !</note>

__4) Agir sur le déroulement de la synchronisation.__

Pour faire une pause de la synchronisation et de la sauvegarde:
<code>hubic pause</code>

Pour reprendre la synchronisation ou la sauvegarde:
<code>hubic resume</code>

Pour stopper la synchronisation ou la sauvegarde:
<code>hubic stop</code>

Pour démarrer une synchronisation, seulement si ce n'est pas déjà le cas:
<code>hubic start</code>

Quand vous avez utilisé la commande //login// une première fois, ses paramètres sont enregistrés dans l'application et la connexion sera désormais automatique. Il faut éviter d'utiliser la commande //logout// qui va déconnecter des serveurs d'hubiC mais surtout vider le cache. Vous devrez alors ré-entrer la commande //login// et tout le catalogue devra être reconstruit ce qui va mobiliser inutilement la machine et sera long.
==== À savoir ====

<note tip>
La synchronisation, une fois lancée une première fois, continue en tâche de fond.
\\ **Elle reprendra et continuera automatiquement au redémarrage de votre ordinateur**.
\\ Il n'y a donc plus rien de particulier à configurer.
</note>

ATTENTION : HUBIC ne conserve par d'historique de la synchronisation et vous ne pouvez donc pas retrouver un fichier que vous auriez supprimé par erreur. Par prudence, TOUJOURS avoir une copie locale indépendante, et surtout passez par un dossier TAMPON dans lequel vous aurez collé le lien vers le dossier à synchroniser : il sera plus facile de suspendre la synchro (qui se lance toute seule). 

NOTE :  pour arrêter toutes les synchros, 
<code>hubic syncdir --none</code>
__Pour limiter ce risque__, voir plus bas : "Gestion des conflits"

====Contrôle du service====
En l'absence de notifications et d'indicateur graphique, il est important de __vérifier régulièrement le fonctionnement d'hubiC :__
\\ Taper dans le terminal :
<code>watch -n 10 hubic status</code>
Avec cette commande, le statut de la synchronisation sera rafraîchi toutes les 10 secondes.
\\ {{ :application:hubic_zesty.png?direct&500 |}}
\\ Vérifiez qu'en face de 'State :' vous avez 'Idle' (en attente) ou 'Busy' (occupé) qui témoigne d'une synchronisation fonctionnelle. Vérifiez aussi que le chemin du dossier de synchronisation soit bien indiqué ; sinon, la synchronisation ne se fait pas !  Dans ce cas, vous pouvez indiquer à nouveau à hubiC le dossier de synchronisation par la commande :
\\ <code>hubic syncdir /chemin_vers_le_dossier_de_synchronisation</code>
Vous pouvez alors être confronté au problème des conflits décrit plus bas si ce dossier de synchronisation a été perdu depuis un certain temps.
\\ Si vous souhaitez fermer ce terminal, faire "Ctrl C" puis fermer la fenêtre.


==== Interface graphique non officielle avec indicator ====
Des  petites interfaces graphiques commencent à voir le jour
  * **LubiX** en [[:fpc|Free Pascal]] et [[http://wiki.lazarus.freepascal.org/fpGUI|fpGUI]] : https://forums.hubic.com/showthread.php?1070-LubiX-GUI-client-for-Linux
<note>Depuis la version 0.9.6 Beta, le développeur de LubiX a annoncé l'abandon de la bibliothèque Qt pour obtenir une compatibilité multiple avec les environnements de bureau KDE, Xfce et Gnome.
\\ Techniquement, il précise que l'interface est désormais composée directement sur X11.</note>
  * **Hubic Indicator** : une extension GNOME shell utilisable avec [[ubuntu_gnome|Ubuntu GNOME]] et avec la version 17.10 et les suivantes : voir la logithèque Ubuntu ou à [[https://extensions.gnome.org/extension/793/hubic-indicator/]]

=====Sauvegarde (BACKUP)=====
La sauvegarde fait une copie de vos dossiers sur le cloud d'hubiC. Cette copie est propre à l'ordinateur sur laquelle vous la mettez en place (voir 'man hubic' dans un terminal) ; ce n'est pas une synchronisation. Vous pouvez préciser un paramètre qui conservera un exemplaire de vos fichiers dans le cloud même si vous les supprimez de votre ordinateur. Quand vous modifiez / ajoutez un fichier dans le dossier sauvegardé, ceci est automatiquement enregistré dans le cloud.

==== Créer une sauvegarde, depuis le terminal====
\\ N'importe quel dossier de votre 'Dossier personnel' peut être sauvegardé. Il n'y a pas besoin de créer un dossier hubiC pour cette procédure.
\\ Nota : pour pouvoir lancer la commande de sauvegarde, il faut être connecté à hubiC par la commande //hubic login// vue plus haut dans la section 'Synchronisation" (vous pouvez omettre d'indiquer le dossier de synchronisation si vous voulez seulement une sauvegarde).
\\ Si vous sauvegardez un lien vers un disque dur externe, assurez vous qu'il soit bien en fonction (voir icône du disque dur).

Pour sauver le dossier //Images// tous les jours en gardant la sauvegarde si je supprime un fichier :


<code>hubic backup create --frequency=daily --keep_deleted --kept_versions=0 '/home/nom_utilisateur/Images'</code>

**Explications**
\\ hubic backup create : commande qui crée la sauvegarde
\\ --name= : non utilisé dans cet exemple. Si on ajoute cette option, elle permet de donner un nom spécifique à cette sauvegarde ; par défaut, nom du dossier, 'Images' ici. **Attention !** Si le dossier a un nom avec plusieurs mots, il est probablement prudent de donner ici un nom en un seul mot. Plusieurs fils citent des erreurs avec la commande attach (voir plus bas) avec des noms à plusieurs mots.
\\ --frequency= : option qui permet de définir la périodicité de la sauvegarde. Au choix : **never** (seulement quand vous la lancez dans le terminal), **hourly** (toutes les heures), **daily** (tous les jours), **weekly** (toutes les semaines). Par défaut, never.
Nota: Pour sauver un disque dur externe, mettez toujours "never" ou pas de fréquence de sauvegarde pour pouvoir activer votre disque dur avant de lancer manuellement la sauvegarde. 
\\ --keep_deleted ou --drop_deleted au choix : avec la première, quand vous supprimez un fichier sur votre ordinateur, il est conservé sur le cloud ; avec la 2e, il est supprimé. Par défaut, --keep_deleted. Si vous choisissez --drop_deleted et que l'option suivante n'est pas à 0 (versions antérieures conservées), les fichiers ne sont pas supprimés mais seulement masqués !
<note warning> Cette notion est importante à connaître et peut expliquer que votre espace hubiC soit saturé alors que, sur votre ordinateur, le volume des données sauvegardées est bien inférieur. Ces fichiers masqués sont effectivement invisibles et ceci peut-être trompeur. </note>
\\ --kept_versions = : (cette option ne fonctionne pas dans la version 2.0.2 ; mettez à jour !) On indique le nombre de versions (quand vous sauverez un texte plusieurs fois au cours de sa rédaction par exemple) d'un même fichier à conserver avec '-1' qui signifie 'tout garder', '0' pour 'ne pas garder de versions précédentes' et ensuite de '1' à '10'. Ceci interfère avec l'option précédente comme décrit ci-dessus. Par défaut, -1. 

Vous pouvez ajouter d'autres dossiers à sauvegarder en suivant la même procédure ou vous pourriez simplement sauver tout votre dossier personnel, dossiers cachés compris, en lançant simplement la commande :<code>hubic backup create --frequency=daily '/home/nom_utilisateur'</code>
====Lancer la sauvegarde====
Pour les sauvegardes automatiques, elles se lancent dès que votre PC est branché.
Pour lancer manuellement la sauvegarde dans le terminal (cas de l'option --frequency=never ou non indiquée; cas où la sauvegarde a été stoppée).
<code>hubic backup update nom_sauvegarde</code>

====Autres commandes====
\\ Il y a d'autres commandes concernant ce backup, bien expliquées : dans un terminal, taper 'man hubic'. Notamment  :
<code>hubic help <commande></code>
donne les infos sur les commandes; si on ne met pas de commande, liste toutes les commandes.
<code>hubic backup info</code>
donne des informations sur les sauvegardes mises en place. Comme pour la synchronisation, il est recommandé de __vérifier__ de temps en temps par cette commande que la sauvegarde de vos dossiers est à jour.
<code>hubic backup download nom_ou_chemin_vers_sauvegarde chemin_vers_cible</code>
permet de télécharger la sauvegarde entière vers un dossier cible sur son ordinateur
<code>hubic backup config <options>  nom_de_la_sauvegarde ou chemin_vers_dossier_sauvegardé</code>
permet de modifier les options que l'on a indiqué en lançant la sauvegarde. Il suffit de mettre les nouvelles options comme lors de la création de la sauvegarde avec l'option supplémentaire "path='chemin_vers_dossier_sauvegardé' pour changer le chemin de la sauvegarde.
<code>hubic backup delete chemin_vers_dossier_sauvegardé</code>
supprime la sauvegarde désignée
\\
\\
====Cas du lien rompu entre votre sauvegarde et votre machine, cas d'une machine ré-initialisée ou cas d'une nouvelle machine:====
\\ Si vous avez lancé la sauvegarde de votre disque dur externe sans l'activer avant de lancer manuellement la sauvegarde, vous rompez le lien.
\\ Si vous ré-initialisez votre système, vous perdez le lien.
\\ Si vous changez d'ordinateur et que vous avez téléchargé votre sauvegarde sur celui-ci, le lien n'existe pas encore.
\\ Comme nous l'avons vu, la sauvegarde est attachée à un seul ordinateur, ou un disque dur externe activé attaché toujours au même ordinateur. Dans le cas d'un lien absent, les sauvegardes automatiques ne se font plus. Il est donc nécessaire de reconstituer le lien entre la sauvegarde et la machine. Pour cela, utiliser la commande:
<code>hubic backup attach nom_sauvegarde chemin_vers_dossier_sauvegardé</code>
Une fois attachée au dossier local, la sauvegarde se poursuit normalement.
\\ Un message d'erreur "Backup unknown" peut apparaître pour des dossiers avec un nom à plusieurs mots avec impossibilité de rattacher cette sauvegarde et de la poursuivre !
\\ Nota: Voir aussi le message d'erreur "Command failed: The backup is not attached to this computer.."

=====Partage de fichiers=====
Vos fichiers peuvent être partagés via le cloud hubiC mais vous avez aussi la possibilité de le faire directement depuis Icedove/Thunderbird.
====Partager un fichier====
Cette commande vous donne l'URL à communiquer aux personnes avec lesquelles vous voulez partager votre dossier/fichier.
<code>hubic publish --days=5 '/home/nom_utilisateur/Images/Photo.jpg'</code>

**Explications**
\\ hubic publish : commande qui crée le partage
\\ --days= : durée du partage en jours. valeurs possibles: 1, 5, 10, 15, 20, 25, 30. (par défaut: 30).
\\ chemin vers le fichier ou le dossier à partager, ici le fichier "Photo.jpg".

Autres possibilités: 
  * __Dans le cloud hubiC__, cliquer sur le symbole grisé à droite des fichiers ou dossiers. Choisir la durée (5, 10, 30 jours), lien vers mail, facebook, twitter, google+. Créer le message d'accompagnement, éventuellement l'adresse, puis partager. On retrouve ces liens dans la liste avec l'URL correspondante. Si l'on clique seulement sur "obtenir le lien", on peut aussi copier le lien qui apparaît dans la boite grise là où on le désire.

  * __Dans Lubix__, faire un clic-droit sur le dossier ou le fichier à partager. Sélectionner "Publish". Le lien à copier-coller est publié pour 30 jours.

====Lister les dossiers et fichiers partagés====
Cette commande donne la liste des dossiers/fichiers partagés avec l'URL correspondante.
<code>hubic publish list</code>

__Dans Lubix__, la liste est sous l'onglet "Published".

====Stopper le partage de dossier/fichier====

Cette commande permet de stopper le partage d'un fichier ou d'un dossier.
<code>hubic unpublish '/home/nom_utilisateur/Images/Photo.jpg'</code>

Autres possibilités: 
  * __Dans le cloud hubiC__, cliquer sur le symbole partage du fichier partagé puis "Annuler la publication" > OK
  * __Dans Lubix__, onglet "published", faire un clic-droit sur le fichier ou dossier puis sélectionner "Unpublish".

====Partager un dossier/fichier directement dans un courrier====

Bien pratique pour envoyer facilement des fichiers joints volumineux dans un mail. 

Au début: Installer au préalable le module "hubiC for FileLink" dans Icedove/Thunderbird. Aller dans "Préférences" de Icedove/Thunderbird. choisir l'onglet "pièces jointes", puis l'onglet sortant. Apuyer sur le bouton "Ajouter" > "Selectionner un service de stockage en ligne, choisir "hubiC by OVH" > paramétrer le compte. Entrer vos identifiant et mot de passe hubiC, puis accept. 
Dans ce même onglet, vous pouvez spécifier la taille où l'on vous proposera le partage et dans "Préférences" le nombre de jours (par défaut 30) et le nom du dossier où seront stockés les pièces jointes, que vous retrouvez dans votre dossier synchronisé "hubiC" (par défaut: thunderbird-attachments)

Lorsque vous voulez envoyer une pièce jointe (par exemple fichier lourd), cliquez sur la flèche "Joindre" > Espace de Fichiers > hubiC by OVH et sélectionner le fichier ou dossier à partager. Le lien se crée dans le corps de texte pour la durée déterminée.

Ces fichiers se retrouvent dans le dossier "thunderbird-attachments", ils se traitent comme tous les autres liens.
===== Problèmes pouvant être rencontrés ====

=== message "Consider using MONO_EXTERNAL_ENCODINGS" ===

Cela est dû à des dossiers ou des fichiers avec des noms qui ne correspondent pas à l'encodage par défaut, en général UTF-8. Cela peut déjà être retrouvé via Nautilus.
\\ Exemple : un fichier qui a le nom "r�forme.zip" au lieu de "réforme.zip".
\\ 
\\ __Solution :__ renommer les fichiers concernés afin d'avoir un encodage cohérent dans tous les répertoires. 
//\\ (voir le thread : https://forums.hubic.com/showthread.php?270-beta-Linux-ligne-de-commande)//
=== message "Command failed: The backup is not attached to this computer.."  ===
Le lien est rompu ou n'existe pas encore entre votre PC et votre sauvegarde. Il suffit de l'attacher avec 
<code>hubic backup attach nom_sauvegarde chemin_vers_dossier_sauvegardé</code>
=== message "Cannot contact daemon, are you sure it is running?" ===

Si vous tentez de lancer hubiC sur un serveur ou via une connexion SSH, il est probable que le bus de session DBus ne soit pas correctement configuré.
\\ Vous obtiendrez alors des messages comme "Cannot contact daemon, are you sure it is running?".

Il vous faut alors lancer le bus manuellement avec 'dbus-launch':
<code>
$ dbus-launch --sh-syntax
  DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-XXXX,guid=XXXXXXX
  DBUS_SESSION_BUS_PID=1234
  $ export DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-XXXX,guid=XXXXXXX
  $ hubic login foo@bar.com ~/hubiC
</code>

Ou avec 'dbus-daemon':
<code>
  $ export DBUS_SESSION_BUS_ADDRESS=`dbus-daemon --session --fork --print-address`
  $ hubic login me@foo.com ~/hubiC
</code>        .

=== Message "Can not synchronise <votre repertoire de synchro>: Path doesn't exist!. Will retry later. "===
C'est parcque vous avez des liens symboliques cassés, pour les repérer
<code>
find -L <votre repertoire de synchro> -type l
</code>
=== Message "Skip synchronisation for Ovh.Hubic.Sync.FrozenFile: the file or folder cannot be accessed."===
C'est que votre utilisateur ( celui qui a lance la commande hubic login), n'a pas le droit de lire des fichiers dans votre répertoire, pour les repérer  : 
<code>
find -L <votre repertoire de synchro> -not -readable
</code>

===== Debuggage   =====
pour savoir un peu plus ce qui se passe : 
<code>
hubic stop
hubic main-loop --verbose
</code>
===== Quota et espace de stockage  =====
en faisant un 
<code>hubic status</code>
vous connaitrez votre espace de stockage
\\ Vous pouvez avoir le détails localement en utilisant la commande
<code>du -hscL  *</code> dans votre répertoire hubic
===== Gestion des conflits  =====
message '' "[05/11/2013 23:54:00|Warning] Conflict detected on mon_fichier"''
\\ Pour trouver tous les conflits
<code>
find -L /chemin/locale/du/répertoire/hubic -name "*conflict from*"
</code>
Pour renommer rapidement tous les fichiers "copy of <filename> ( conflict from ...).ext"  en <filename>.ext
d'un répertoire et sous répertoires voici une ligne de commande fort utile :
\\ **pour voir ce que ça va faire :** 
<code>find -L . -name "*conflict from*" -exec  bash -c 'new_file=`echo "$0"| sed -r "s#Copy of (.*) \([^\.]*#\1#g"`; echo "mv \"$0\" \"$new_file\" "' {} \;
</code>
**Explication** : 
\\ ''find -L . -name "*conflict from*"'' -> Rechercher en suivant les liens symboliques (''-L'') dans le répertoire en cours (.) les fichiers qui dans leur nom on "conflit from",
\\ puis pour ces fichiers executer  ''bash -c 'new_file=`echo "$0"| sed -r "s#Copy of (.*) \([^\.]*#\1#g"`; echo "mv \"$0\" \"$new_file\" "' {}''
\\  c'est à dire éxecuter le bash avec comme argument le nom du fichier (''{}'') 
\\ le script affiche le nom du fichier (''echo "$0"'' ) puis le passe à sed qui enlève tout sauf le nom du fichier c'est le ''(.*)'' et le tout est mis dans la variable new_file grâce aux ` `, 
\\ puis on fait ensuite un echo de la commande mv <nom trouvé> (''$0'') <nouveau nom> (''$new_file'')
\\ 
\\ **pour faire vraiment le renommage**
<code>find -L . -name "*conflict from*" -exec  bash -c 'new_file=`echo "$0"| sed -r "s#Copy of (.*) \([^\.]*#\1#g"`; mv "$0" "$new_file" ' {} \;</code>


\\ **Et pour éviter ces problèmes :**
\\ Hubic tient à jour l'état de la synchronisation dans un dossier dont le chemin est .config/hubic dans votre dossier personnel (.config est un dossier caché que l'on affiche en faisant ctrl+H). Il est important de conserver ce dossier notamment lors d'une réinstallation. Si ce dossier est supprimé, quand vous allez remettre Hubic en place / en route, tous les fichiers qui ont été modifiés entre temps vont créer un conflit. Ainsi un fichier actualisé plus récemment sur votre ordinateur va être renommé "Copy of... (conflict from date et heure).xyz" et le fichier sauvegardé chez Hubic va être téléchargé pour prendre sa place. Quand vous ouvrirez votre fichier, vous aurez l'ancienne version !
\\ Solution : Renommer le fichier "Copy..." pour lui redonner son nom original. Ceci est assez laborieux s'il s'agit de fichiers cachés (configuration de Shotwell pour vos photos par exemple).
\\ Si vous avez perdu le dossier .config/hubic, soit vous laissez Hubic rapatrier tous vos documents synchronisés dans vos dossiers vides (cas où vous partez avec un disque vierge), soit vous évitez de modifier les fichiers (ne lancer aucun logiciel concerné par la sauvegarde) tant qu'Hubic n'a pas été mis en place et terminé la mise à jour de son journal de sauvegarde.

===== Voir aussi =====
 
  * **(fr)** [[https://hubic.com/fr/]]
  * **(en)** [[http://www.619.io/swift-explorer|Swift Explorer]]((Requiert JRE 8, voir la documentation [[Java]])) : Un client Hubic approuvé par OVH.
 Sur le forum hubiC :
   * [[https://forums.hubic.com/showthread.php?230-hubic-Linux-sortie-de-la-version-b%EAta|hubic Linux: sortie de la version bêta]]
   * Discussions autour de l'utilisation de ce client : [[https://forums.hubic.com/showthread.php?270-beta-Linux-ligne-de-commande|beta Linux ligne de commande]]
Projets annexes :
   * [[https://github.com/leizh/hubic-init-script|hubic-init-script]] : Un script init.d pour lancer le client de synchronisation hubiC comme un service dans un environnement non graphique.
   * [[https://github.com/Schnouki/git-annex-remote-hubic]] : Une extension de Git-annex utilisant HubiC