{{tag>Trusty Xenial accessibilité BROUILLON}}
----

{{ :applications:icone_de_l'application.png?80}}
====== Opengazer ======

<note important>
FIXME Page en cours de rédaction

Vous trouverez ci-dessous la seule traduction du principe de reconnaissance faciale appliqué à l'écriture oculaire pour les personnes atteintes [[wpfr>Infirmité motrice cérébrale|d'infirmité motrice cérébrale]]. \\
Il n'existe hélas pas d'autre documentation en Français sur le sujet à l'heure de la rédaction de cet article (décembre 2017).
</note>

Opengazer est une application [[wpfr>open source]] qui utilise une simple webcam pour estimer la direction du regard. Cette information est ensuite transmise à des applications tierces chargées de traiter les signaux afin de permettre à une personne dans l'incapacité d’utiliser un pointeur physique (souris, trackball,…) de tout de même profiter d'un ordinateur.

Par exemple, lorsqu'utilisé en conjonction avec [[http://www.inference.org.uk/dasher/|Dasher]], Opengazer permet l'écriture oculaire.

<note>
{{ https://eyecomtec.com/img/EyeComTec.Com_LAZgroup_Paralys_tech-img25.jpg?400 |Test de capture des mouvements oculaires avec une webcam et le logiciel MPlayer}}

Test de capture des mouvements oculaires avec une webcam et le logiciel MPlayer
</note>

===== Historique du projet =====

Opengazer se donne pour objectif de devenir une alternative bon marché aux solutions commerciales sur le segment des dispositifs de détection des mouvements oculaires.

PiotrZieliński est le créateur de [[http://www.inference.org.uk/opengazer/|la version initiale d'Opengazer]], projet soutenu par Samsung et la « Gatsby Charitable Foundation ».

Le flambeau de la recherche et développement d'Opengazer a été repris par Emli-Mari Nel, dorénavant soutenu par [[http://www.aegis-project.eu/|la Commission Européenne dans le cadre du projet AEGIS]] et la « Gatsby Charitable Foundation » (2008-2012).

La version précédente d'Opengazer s'est révélée très sensible aux variations d'orientation de la tête du sujet. Afin de corriger ce défaut, les efforts de développement se concentrent sur la correction des algorithmes de suivi des variations du port de tête avant la prise en compte des mouvements oculaires.

Le logiciel est écrit en [[wpfr>C++]] et en [[wpfr>Python (langage)|Python]]. Une vidéo démontrant les capacités de l'algorithme de suivi des mouvements de tête est disponible.

La première version de l'algorithme de suivi des mouvements de tête est très rudimentaire. Il est fondé sur [[wpfr>Méthode de Viola et Jones|la reconnaissance faciale Viola-Jones]], chargée de détecter les traits du visage à partir d'un flux vidéo (provenant d'une caméra ou d'un fichier vidéo) le plus rapidement possible sur le principe de l'image par image. \\ Les données brutes en abscisse et ordonnée peuvent être traitées par le logiciel Dasher. Le traitement consiste à récupérer les ordonnées (axe des Y) en mode "plan" capturées lors de la détection ou bien utiliser la 2-D en abscisse et ordonnée. \\ Bien que le logiciel de suivi du port de tête promette de biens meilleurs résultats, cette première mouture s'avère assez performante sur le plan de la reconnaissance faciale. L'algorithme applique un simple [[wpfr>Processus autorégressif|filtre de processus autorégressif]] de traitement des données de suivi 2-D puis adapte les résultats de l'algorithme de reconnaissance faciale Viola-Jones et recentre la zone de détection image par image

Les paramètres de détection ont été déterminés en fonction des spécificités du champ d'application (à savoir un utilisateur unique travaillant sur son ordinateur de bureau ou son ordinateur portable). L'algorithme obtient de meilleurs résultats sur les images en 320×240 avec un taux de rafraîchissement de 30 images par seconde, dans des conditions optimales d'éclairage.

<note>
{{ https://eyecomtec.com/img/EyeComTec.Com_LAZgroup_Paralys_tech-img26.jpg?400 |Test de reconnaissance faciale}}

Test de reconnaissance faciale.
</note>

===== Installation =====

Le logiciel ne semble pas ironiquement pas très accessible : il est seulement disponible à la compilation pour le moment (décembre 2017).

==== Pré-requis ====

  * [[http://vxl.sourceforge.net/|vxl]] >= 1.5.1 
  * [[https://sourceforge.net/projects/opencvlibrary|opencv]] >= 0.9.7
  * [[http://www.gtkmm.org/|gtkmm-2.4]] >= 2.8.0 
  * [[http://cairographics.org/cairomm/|cairomm-1.0]] >= 0.6.0
  * [[https://www.boost.org/|boost]] >= 1.32.0

Pour installer ces dépendances, la commande à lancer en tant qu'administrateur serait :
<code>apt install libcv-dev libhighgui-dev libcvaux-dev  libgtkmm-2.4-dev libcairomm-1.0-dev libboost-dev</code>

<note important>Sauf pour ''vxl'' qui doit apparemment être installé depuis son code source, avec l'option ''BUILD_SHARED_LIBS'' réglée sur ''ON'' dans le fichier ''ccmake''.</note>

==== Téléchargement ====

Pour se procurer le code de ce logiciel

  * rendez vous sur la page [[https://sourceforge.net/p/opengazer/code/HEAD/tree/|Opengazer: a webcam-based eye tracker]] de Sourceforge.
  * Cliquez sur **Download snapshot**. 
    * Le téléchargement de l'archive-source commence… 
    * Le gestionnaire d'archives s'ouvre sur le fichier ''opengazer-code-5''
  * [[archivage|Extraire l'archive]] dans votre dossier favori. Par exemple : ''~/Documents/Compilation''. Le dossier ''opengazer-code-5'' sera créé automatiquement.

==== Compilation ====

FIXME à faire peut-être ?

===== Voir aussi =====

  * **(en)** [[https://eyecomtec.com/3105-Open-Gazer|Site officiel de Opengazer]]
  * Traduction et adaptation du document [[https://eyecomtec.com/3105-Open-Gazer|« Analyse critique d'Open Gazer »]] **(en)**

----

//Contributeurs principaux :
[[utilisateurs:eagle08|René Stoecklin]],
...//