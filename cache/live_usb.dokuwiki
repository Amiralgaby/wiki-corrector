{{tag>portail installation usb}}
----

====== Créer / flasher une clef USB bootable (Live USB) ======

Un live-USB permet, comme un [[Live CD]], de démarrer un système Ubuntu qui n'est pas installé sur le PC.

Ce démarrage permet soit de tester Ubuntu, soit de l'installer sur le disque du PC, soit de réparer le système, soit même (live "persistant") d'utiliser Ubuntu comme bureau mobile complet (portable sur n'importe quel PC compatible).

Il existe 3 types de live-USB, chacun lié à un ou des outils de créations spécifiques :
  * live-USB non persistant : la clé USB ne peut être modifiée. On ne peut donc pas installer de nouveaux logiciels, on ne peut pas faire de mises à jour, on ne peut pas sauvegarder les fichiers sur la clé (il existe des contournements à cette 3e limitation). Utilisations : test du système, réparation du système et installation du système sur PC.
  * Live-USB persistant : la clé fonctionne comme un système normal : on peut installer de nouveaux logiciels, on peut faire les mises à jour, on peut sauvegarder les fichiers créés. Utilisation : test du système, réparation du système, installation du système sur PC __et__ bureau mobile complet.
  * Live-USB persistant multi-systèmes : permet d'installer plusieurs OS en parallèle (multi-boot).

Si vous êtes à la recherche d'une clé USB déjà créée, l'association Ubuntu-fr en propose en vente par correspondance sur sa [[https://enventelibre.org/41-ubuntu-fr|boutique en ligne]].

=====Principaux outils=====

__Live-USB **non** persistants__
   * [[Usb-creator]] :  c'est l'outil installé par défaut sur Ubuntu. Interface très simple.
   * [[Gnome-Disk-Utility]] : installé par défaut sur Ubuntu, avec une fonction dédiée (parmi d'autres). 
   * [[Etcher|Balena etcher]] : interface très simple, assez esthétique, mais pas dans les dépôts Ubuntu (donc à télécharger).

__Live-USB persistants__
   * [[Unetbootin]] : compatible avec de nombreuses distributions. N'est plus dans les dépôts à partir de la 18.04 (donc à télécharger). Peut créer des live-USB persistants ou non-persistants.
   * [[mkusb]] : interface graphique à la commande [[:dd]]. N'est pas dans les dépôts. Peut créer des live-USB persistants ou non-persistants.

__Live-USB persistants multisystèmes__
  * [[Ventoy]] : fonctionne sur linux ou windows, permet d'installer plusieurs OS persistants. Très simple si on n'active pas la persistance, plus complexe avec celle-ci.

__Autres logiciels__
   * [[https://github.com/slacka/WinUSB/|Fork de WinUSB]] [[http://www.rootandadmin.com/index.php/2016/06/15/english-make-a-bootable-windows-10-usb-install-stick-on-linux-with-winusb-fork|Tutoriel d'installation et d'utilisation]] pour Windows 10.
   * [[https://www.raspberrypi.com/software/|rpi-imager]]. C'est une application** .snap**. Le dernier menu permet de sélectionner son fichier iso. Compatible EFI. 
   * [[rufus|Rufus]]. Logiciel à utiliser sous Windows pour créer un live-USB, y compris un live-USB linux.

===== Live-USB et transferts de fichiers =====

Les logiciels créant des [[live_usb|live-USB]] non persistants ([[USB-creator]], [[gnome-disk-utility]], [[etcher|Etcher]], ...),  passent votre clé USB au format de fichier spécial pour fichiers ISO, dit [[wpfr>ISO 9660]]. Ce format est par conception en __lecture seule__. On ne peut plus rien copier sur la clé (plus d'utilisation possible pour des transferts de fichiers).

Il existe cependant trois façon d'utiliser quand même la clé USB pour les transferts de fichiers :

1. Utiliser un live-USB persistant (à créer avec [[unetbootin|Unetbootin]]).

2. Supprimer le live-USB. Pour cela il faut reformater la clé (avec [[gparted]] ou [[gnome-disk-utility]]) en FAT32 ou en [[exfat|EXFAT]].

3. L'espace de la clé dépassant la taille de l'ISO installée est verrouillé dans un 2e partition spéciale (en ext4 avec des droits root). Cette partition peut-être reformatée en FAT32 (ou en [[exfat|EXFAT]]) pour une double utilisation live-USB / clé d'échange de fichiers (utilisez [[gparted]] ou [[gnome-disk-utility]]). Vous avez alors 2 partitions indépendantes, une pour le live-USB, l'autre pour le stockage.

===== Options =====
==== Mode non persistant ou persistant ? ====

Il existe deux modes :
  * **mode live simple, non persistant** : même en USB, il se comporte comme un live CD/DVD, vous aurez accès à *Ubuntu mais, à la fermeture, il ne sauvegardera ni les logiciels installés pendant la session ni vos données ni vos paramétrages particuliers.
  * **mode live persistant avant la version 19.10** : c'est un mode qui n'existe pas avec un live CD/DVD. À l'inverse du mode live simple, le mode persistant va sauvegarder sur le support USB, //dans la mesure de l'espace disponible//, vos logiciels nouvellement installés, vos réglages et vos données enregistrées durant la session.\\ Cependant, il ne s'agit pas d'une installation classique : d'une part, l'image compressée (.iso) de départ ne changera pas et donc le noyau non plus; d'autre part, vos documents enregistrés dans la session live seront difficilement accessibles si vous ne démarrez pas sur votre live USB *Ubuntu.

<note importante>
En session live persistante, ne **jamais** faire de "full-upgrade" ni de "dist-upgrade", sous peine de casser définitivement le live USB.\\ (Sauf si vous avez le réflexe de copier le noyau dans la racine du disque et de remplacer casper/vmlinuz.efi et casper/initrd.lz.)

Il est en revanche conseillé, avant d'installer un paquet, de faire un "update", simple actualisation de la liste des paquets disponibles.
</note>
  * **mode live persistant de la version 19.10 EFI** :  À l'inverse du mode live simple qui stocke dans la RAM, le mode persistant va  créer dans le support d'installation une partition formatée en EXT3 en utilisant l'espace non utilsé par la partition de boot  et y installer le logiciel et les données. //dans la mesure de l'espace disponible//
Cette partition  peut être consultée par d'autres O.S. (y compris windows équipé du logiciel
[[tutoriel:comment_acceder_a_ses_partitions_d_ubuntu_sous_windows|EXT2FSD]]). La structure est la suivante:
<code bash> ls 
crash  format  log  lost+found	upper  work
ls upper
boot  cdrom  etc  home	media  mnt  rofs  root	snap  tmp  usr	var
ls upper/var/log
apt	  boot-repair  dmesg	   dmesg.2.gz  dpkg.log  gpu-manager.log  lastlog	       wtmp
auth.log  casper.log   dmesg.0	   dmesg.3.gz  faillog	 journal	  syslog	       Xorg.0.log
boot.log  cups	       dmesg.1.gz  dmesg.4.gz  gdm3	 kern.log	  unattended-upgrades  Xorg.0.log.old
</code>


==== Avantages et inconvénients d'une session live ou d'une installation ====

Avantages par rapport à une installation classique :
  * Un live-USB non-persistant ou persistant peut être utilisé sur n'importe quel PC ;
  * Pas de complications avec [[Grub]] ;
  * Pas d'installation, ni de configuration.

Inconvénients par rapport à une installation classique :
  * Démarrage du système moins rapide car commençant par la décompression du système entier. Par contre, une fois démarré, le système est rapide ;
  * Impossible de créer de nouveaux utilisateurs en mode non-persistant alors que c'est possible en mode persistant ;
  * Impossible de restreindre les actions (usage de //[[:sudo]]// ouvert à tous, sans mot de passe) ;
  * Très sensible à certaines mises à jour (noyau ou bibliothèques).


==== Fonctionnement théorique ====

  * Fonctionnement d'un Live CD ou Live USB : les données du système d'exploitation qui sont sur le CD sont compressées et ne sont accessibles qu'en lecture. Or, le système d'exploitation a besoin d'écrire. Pour cela, au démarrage, un //ramdrive// (disque virtuel dans la RAM) est monté. Et, avec le système de [[wpfr>Union File System|Union File System : Système de Fichiers Unifiés]], on assemble les 2 systèmes de fichiers : les lectures se feront sur le CD et les écritures dans le //ramdrive//. \\ Côté utilisation, tout est transparent.
  * Avec le mode persistant, plutôt que d'utiliser un //ramdrive//, on utilise un système de fichiers sur un disque dur ou une clé USB. Par conséquent, ces données pourront être consultées et gérées après le redémarrage de la machine.

Pour plus d'information sur les Live USB, vous pouvez consulter [[wpfr>Live_USB|Les live USB sur Wikipedia]].
==== Principaux cas d'utilisation ====
  * Installation du logiciel sur disque.
  * Réparation du logiciel lorsque celui ne veut plus mettre en route.
  * Réinstallation du logiciel lorsque la réparation est impossible.
  * Gestion de la taille de la partition racine.
  * Sauvegarde des données utilisateurs stockées dans la partition racine si le logiciel ne se met plus en route.

Il est donc conseillé d'avoir toujours un support d'installation de disponible.
===== Pré-requis =====

  * La clé USB doit avoir une partition [[wpfr>FAT32]] (une partition [[wpfr>New_Technology_File_System|NTFS]] ne convient pas),
  * Vous devez disposer d'un espace libre d'au moins 4 Go minimum en mode non-persistant et davantage pour le mode persistant ((destinée à contenir, une ou plusieurs images iso installables (On trouve couramment de clés de 16, voire 32 Go  [[https://forum.ubuntu-fr.org/viewtopic.php?id=2072135]])).
  * Vous devrez également disposer d'une image CD valide((soit une image standard que vous pourrez récupérer sur la [[http://www.ubuntu-fr.org/telechargement|page de téléchargement]], soit une image modifiée en suivant les instructions sur la page de [[personnaliser_livecd|personnalisation de Live CD]] ou à l'aide de logiciels comme [[remastersys]])) (au format ISO, ou IMG).

<note important>
Les anciens BIOS (années 2000 ou début des années 2010) sont incapables de démarrer avec une clé de plus 2 Go formatée en FAT32. Vous obtiendrez l'erreur suivante :

<code>No configuration file found. No DEFAULT or UI configuration directive found</code>

Dans ce cas utiliser [[:Gparted]] afin d’obtenir une partition de 2 Go (maximum) en FAT16.
</note>

===== Création d'un live-USB depuis Windows =====

Nous vous conseillons d'utiliser [[:Rufus]] pour créer une clé USB live Ubuntu à partir de Windows. Rufus est un logiciel libre (GPL) et gratuit pour Windows, très facile à utiliser et fiable, permet aussi de formater et vérifier la clé, supporte EFI, crée un log de ses actions.\\
\\
Un tutoriel plus en détail est [[:rufus|disponible ici]]:
    * Insérez votre clé USB puis lancez Rufus. Lorsque la fenêtre s'ouvre, **cliquez sur l'icône en forme de CD** situé à droite de « Créer un disque de démarrage » et **sélectionnez le fichier Ubuntu-...iso** à l'emplacement où vous venez de le télécharger. Sélectionnez le schéma de partition MBR et cliquez sur Démarrer.
<note tip>Rufus  propose la création de la structure de persistance à partir de la version   [[https://www.linuxuprising.com/2019/08/rufus-creating-persistent-storage-live.html|Eoan Ermine]]</note>\\
 
  * [[https://www.balena.io/etcher/|balena-etcher]] compatible EFI.

Autres applications que nous conseillons moins:
  * [[unetbootin#depuis_windows|Unetbootin]]. :!: Attention: crée un menu de boot non-standard mais fonctionne en EFI :!:
  * [[Etcher]] : demande des manipulations pour retrouver sa clef d'origine
  * [[http://www.linuxliveusb.com/|Linux Live USB Creator "LiLi USB"]]. Cependant, Lili Usb Creator n'est plus développé depuis 2015, bien que fonctionnel pour d'autres versions plus récentes de Linux.

Un nouveau venu à classer  aux fonctionnalités proches de rufus  [[ventoy|Ventoy Multiboot USB]]


===== Création d'un live-USB depuis MacOS =====
  * [[https://www.balena.io/etcher/|balena-etcher]] compatible EFI.
  * [[:unetbootin#depuis_windows_ou_macos|Unetbootin]]
  * En ligne de commande :
Sur le [[:terminal]], pour identifier votre clé, utilisez la commande :
<code>diskutil list</code>
Vous devriez voir apparaitre les périphériques présents.
<code>
  /dev/disk0 (internal, physical):
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *2.0 TB     disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:                  Apple_HFS Macintosh HD            2.0 TB     disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
  /dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *4.0 GB     disk1
   1:                 DOS_FAT_32 CLE USB                 4.0 GB     disk1s1
</code>
Vous devez retrouver votre clé parmi les différents périphériques.

Dans l'exemple ci-dessus la clé se nomme CLE USB. Notez les informations suivantes :
  * l'identifiant du support : disk1
  * l'identifiant de sa partition : disk1s1

Tapez la commande suivante pour démonter votre clé :
<code>sudo diskutil unmount /dev/disk1s1</code>
Si votre clé a plusieurs partitions : disk1s1, disk1s2, répétez la commande précédente pour chaque partitions.

Tapez la commande suivante en adaptant à votre situation le nom du .iso et le dossier où il se trouve.
Il peut être utile d'utiliser par exemple TextEdit en mode texte pour préparer ses lignes de commande par copier-coller puis modification des instructions ci-dessous. Le chemin de l'archive iso peut se récupérer en glissant déposant celle-ci dans la fenêtre de texte de TexEdit.
<code>sudo dd bs=4M status=progress if=Downloads/ubuntu-16.04-desktop-amd64.iso of=/dev/disk1</code>
    
Remplacez ''bs=4M'' par ''bs=32130b'' qui est beaucoup plus rapide en duplication (dd data dupe).

Attention, vous devrez peut-être enlever ''status=progress'' si vous obtenez l'erreur ''dd:unknown operand status''.

Terminez par :
<code>sudo diskutil eject /dev/disk1s1</code>

Voila votre clé est prête à être utilisée.

Vous pouvez également utiliser [[Etcher]].
===== Création d'un live-USB depuis Ubuntu =====

Il existe deux types d'installation : la méthode graphique est recommandée dans la plupart des cas, mais si vous avez un système plus ancien ou vous voulez utiliser un système plus personnalisable choisissez l'installation en ligne de commandes.

==== Avec des outils graphiques ====
===Création d'une clef USB monoboot (1 seul OS peut etre installé sur la clef)===
   * [[Usb-creator|Créateur de disque de démarrage]] :  C'est l'outil par défaut dans Ubuntu. Propose de dupliquer l'un des fichiers ISO téléchargés sur une clé USB en la transformant au format [[wpfr>ISO 9660]] (pour réutiliser la clé, il faudra donc la reformater en FAT32). Le live-USB est non-persistant.
   * [[Gnome-Disk-Utility]] est installé par défaut sur Ubuntu, et a une fonction dédiée. Voir la documentation du logiciel, mais en résumé : branchez votre clé USB, lancez Gnome-disk-utility, sélectionnez votre clé USB, cliquez sur la roue dentée à droite, choisissez "restaurer l'image disque", choisissez votre fichier **.iso**, et lancez la "restauration" (en fait l'installation). La clé est mise au format [[wpfr>ISO 9660]] (pour réutiliser la clé, il faudra donc la reformater en FAT32). Le live-USB est non-persistant.
   * [[unetbootin#depuis_ubuntu|Unetbootin]] : compatible avec de nombreuses distributions. Attention : crée un menu de boot non-standard. Plus dans les dépôts à partir de la 18.04. Peut créer des live-USB persistants ou non-persistants.
   * [[Etcher|Balena etcher]], sans doute le logiciel avec l'interface la plus simple. La clé est mise au format [[wpfr>ISO 9660]] (pour réutiliser la clé, il faudra donc la reformater en FAT32). Le live-USB est non-persistant.
   * [[:mkusb]] : interface graphique à [[:dd]].
   * [[http://en.congelli.eu/prog_info_winusb.html|WinUSB]] : permet de créer une clé USB bootable Windows **7 & 8** depuis Ubuntu (attention, lors de l'installation de Windows 7 & 8 sur la clé, le logiciel la formate sans vous demander). WinUSB n'est plus maintenu depuis 2012.
   * [[https://github.com/slacka/WinUSB/|Fork de WinUSB]] [[http://www.rootandadmin.com/index.php/2016/06/15/english-make-a-bootable-windows-10-usb-install-stick-on-linux-with-winusb-fork|Tutoriel d'installation et d'utilisation]] pour Windows 10.
   * [[https://www.balena.io/etcher/|balena-etcher]] compatible EFI. C'est une application **.image**. Mais la table de partition est détruite.
   * [[https://www.raspberrypi.com/software/|rpi-imager]]. C'est une application** .snap**. Le dernier menu permet de sélectionner son fichier iso. Compatible EFI. Mais la table de partition est détruite.


===Création d'une clef USB multiboot (plusieurs OS peut être installés à la fois sur la clef, un menu permet de choisir quel OS lancer)===

Tous les outils suivant sont open source.

|Logiciel|Multiboot|Multi OS|Commentaires|
|[[Ventoy]]|Oui|Linux, Windows|open source depuis mars 2020. Ventoy utilisant une partition exFat, certains linux ne marcheront pas (assez rare). Très simple d'utilisation. Le plus populaire des outils multiboot|
|SARDU MultiBoot|Oui|Linux, Windows||
|[[https://github.com/mbusb/multibootusb/releases|MultiBootUSB]]|Oui|Linux, Windows|Open source|


==== Avec une partition utilisateur totalement indépendante. ====

Voir cette documentation  https://doc.ubuntu-fr.org/mkusb#mise_du_mode_persistant


===== Mettre le menu de persistance =====

Si lors de l'utilisation de unetbootin **ou de LiLi USB Creator**, vous avez choisi de fabriquer le fichier de persistance (d'une taille maximale de 4 GO), il est nécessaire d'ajouter le menu proposant un essai avec utilisation de la persistance.

=== Pour utilisation avec boot EFI ===

Lorsque la fabrication propose de booter ou de quitter, il faut choisir de quitter afin de modifier le fichier **/boot/grub/grub.cfg** pour ajouter les lignes suivantes :

<file>
menuentry "Essayer Ubuntu en conservant les résultats  " {
	set gfxpayload=keep
	linux	/casper/vmlinuz.efi  file=/cdrom/preseed/ubuntu.seed  debian-installer/language=fr keyboard-configuration/layoutcode=fr keyboard-configuration/variantcode=oss iso-scan/filename=/ubuntu-16.04-desktop-amd64.iso boot=casper quiet splash persistent ---
	initrd	/casper/initrd.lz }
</file>

Ne pas oublier de sauvegarder et de demander le démontage de la clé USB.

===  Pour utilisation avec boot LEGACY 64 bits ===

Lorsque la fabrication propose de booter ou de quitter, il faut choisir de quitter afin de modifier le fichier **/syslinux.cfg** pour ajouter les lignes suivantes :

<file>
label persistant
menu label ^Essayer Ubuntu avec persistance
kernel /casper/vmlinuz.efi
append initrd=/casper/initrd.lz  debian-installer/language=fr keyboard-configuration/layoutcode=fr keyboard-configuration/variantcode=oss iso-scan/filename=/ubuntu-16.04-desktop-amd64.iso   file=/cdrom/preseed/ubuntu.seed boot=casper  quiet splash  persistent ---
</file>

Ne pas oublier de sauvegarder et de demander le démontage de la clé USB.

===== En ligne de commandes =====

==== Live USB entièrement dédiée à Ubuntu ====

Insérez votre clé USB.

Pour savoir quel "device" (dans le dossier /dev) est associé à la clé USB, utilisez la commande :

<code>lsblk</code>

**Ne vous trompez pas de device ou vous risqueriez d'effacer et rendre inaccessible votre disque système ou tout autre média actuellement inséré !**

Dans le terminal, placez-vous **dans le dossier qui contient l'image iso à utiliser**  (celle-ci a un nom du style //ubuntu-16.04.3-desktop-amd64.iso//) puis écrivez :

<code>sudo dd bs=4M status=progress if="nom.iso" of=/dev/"device"</code>

Bien sûr, il est nécessaire de remplacer "device" par les trois lettres identifiées à la commande précédente et de remplacer "nom.iso" par le nom de fichier de l'image iso à utiliser.
  
Exemple :

<code>sudo dd bs=4M status=progress if=ubuntu-16.04.3-desktop-amd64.iso of=/dev/sdc</code>

Une fois la commande terminée, forcez les buffers à finir de se vider sur la clé avec la commande :

<code>sync</code>

puis en validant.

L'opération terminée, vous bénéficiez d'une clé Live USB non __persistante__.

===== Installer Ubuntu depuis un support USB =====

  * [[:tutoriel:installation_sur_disque_usb|Installer Ubuntu sur un support USB]]
  * [[:tutoriel:installer_ubuntu_par_internet|Démarrer Ubuntu Netboot depuis un support USB]]

===== Vérifier qu'un live-USB ne contient pas d'erreurs =====

Voir le tutoriel « [[:tutoriel:verifier_un_disque_ubuntu|Vérifier un disque Ubuntu]] ».

===== Si votre ordinateur ne démarre pas sur le live-USB =====

Si votre ordinateur ne démarre pas sur le live-USB :
  - Commencez par [[:tutoriel:modifier_ordre_amorcage_du_bios|modifier l'ordre d’amorçage de votre BIOS]] afin de mettre le démarrage sur USB en premier (s'il n'y a pas d'option "USB" il faut sélectionner "Harddisk" pour voir apparaître l'option "USB")
  - Si cela ne fonctionne toujours pas, vous pouvez essayer une de la solution de la [[:disquette_boot_usb|création d'une disquette ou d'un CD-ROM d'amorçage pour démarrer sur un support USB]]

==== Cas des UEFI en 32 bits ====

Sur certains ordinateurs (cas rares, principalement des netbooks ou des PC convertibles bas de gamme avec des processeurs "Atom BayTrail"), le [[:tutoriel:modifier_ordre_amorcage_du_bios|bios]] uefi a besoin d'un exécutable en 32 bits sur la clé pour démarrer, or par défaut Ubuntu le propose en 64 bits. Pour résoudre ce problème :
  * Téléchargez le fichier [[https://github.com/jfwells/linux-asus-t100ta/blob/master/boot/bootia32.efi|suivant]],
  * Créez votre clé USB grâce à [[:Unetbootin]] ou **Rufus** si vous êtes sous Windows,
  * Copiez le fichier téléchargé **bootia32.efi** dans le dossier **/EFI/BOOT** de la clé,
  * Démarrez normalement sur la clé, ou bien naviguez jusqu'au fichier **bootia32.efi**

Il est également possible d'utiliser [[:multisystem]] pour cette opération, dans ce cas il vous suffit de mettre le fichier **bootia32.efi** dans le dossier EFI/BOOT de la clé.

Noter que les bios EFI en 32 bits sont souvent installés sur des notebooks récents (postérieurs à 2010) et quasiment jamais sur des ordinateurs anciens.
Il existe une distribution Ubuntu remastérisé expressément pour ce genre de matériel [[https://linuxiumcomau.blogspot.com/2016/10/running-ubuntu-on-intel-bay-trail-and.html|Linuxium]]. Toutes les [[variantes]] sont disponibles.


Si votre ordinateur est encore équipé de Windows, demandez-lui d'installer le [[:refind#avec_windows|refind 32 bits]]. Celui-ci se chargera de tout y compris de faire démarrer votre clé USB si elle a bien une table de partition FAT32.

===== Cas particulier de l'installation Ubuntu Server =====

Comme c'est souvent le cas sur un serveur, il n'y a pas de lecteur CD pour procéder à l’installation. Il est possible que vous rencontriez un souci en démarrant sur un live USB Ubuntu Server (vérifié avec la LTS 10.04.4), réclamant la présence d'un CD contenant les sources pour l'installation. Vous devez alors préciser à l'installateur Ubuntu Server que les fichiers se trouvent sur votre clé USB, en personnalisant la commande de démarrage de GRUB (touche TAB), en ajoutant :

<file>cdrom-detect/try-usb=true</file>

Par exemple avec unetbootin cela donne :

<file>unetbootindefault cdrom-detect/try-usb=true</file>


[[https://help.ubuntu.com/community/Installation/FromUSBStick|Source]]<sup>(en)</sup>


===== Voir aussi =====

  * [[:tutoriel:installer_windows_boot_usb|Créer une clé usb avec Windows]]
  * Wiki anglais :
    * [[https://wiki.ubuntu.com/LiveUsbPendrivePersistent|LiveUSBpersistent]]
    * [[https://help.ubuntu.com/community/Installation/FromUSBStick|LiveUSB]]
    * [[https://help.ubuntu.com/community/Installation/FromCForUSBStick|LiveUSB avec GRUB]]
    * [[https://help.ubuntu.com/community/BootFromUSB|Boot from USB]]
  * Discussion sur le forum ubuntu-fr :
    * [[https://forum.ubuntu-fr.org/viewtopic.php?id=427605|MultiSystem, Créez votre LiveUSB MultiBoot simplement!]] (post de 2012) 
    * [[http://forum.ubuntu-fr.org/viewtopic.php?pid=2821215#p2821215|Jaunty sur clé USB : conserver la personnalisation]] (échange de 2009)
    * [[http://forum.ubuntu-fr.org/viewtopic.php?pid=2981054#p2981054|Autre discussion]] (échange de 2009)
  * [[http://www.pendrivelinux.com | Pendrivelinux : Tutoriels en anglais pour démarrer et lancer Linux sur support USB]]

----

//Contributeurs : [[utilisateurs:sylvainvh]], [[utilisateurs:thedamocles|Damocles]], Guyms; kcdtv//