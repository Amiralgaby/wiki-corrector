{{tag>portail}}
----
====== Programmation ======
<note>Cette page n'a pas la vocation de recenser la totalité des langages ni des outils disponibles. Il y en a tellement, et chaque programmeur a sa façon de faire. Une partie [[#liens_externes|"liens externes"]] vous donnera quelques sites de qualité sur la programmation.</note>

===== Outils généraux =====
==== Documentation hors ligne ====
  * [[:Devhelp]] : Consultation hors ligne de documentation principalement sur le développement GTK+ et GNOME.
  * **[[apt>zeal]]** : Consultation hors ligne de documentation sur plus de 190 langages de programmation. [[https://zealdocs.org/|Site de zeal]]\\

==== Outils de gestion de version (Versionning) ====
Les outils de gestion de version permettent la synchronisation facile des équipes de développement, ils sont même quasiment indispensables quand il s'agit de travailler en équipes dispersées à travers le monde.
 
**Système centralisé** : Basé sur le modèle client serveur, le gestionnaire doit posséder une connexion au serveur pour effectuer des modifications sur la branche principale (commit). Il est possible d'avoir une copie locale qui permet de travailler en mode déconnecté, mais qui devra être synchronisée avec le serveur.
  * [[:CVS]] : Gestionnaire de versions plus ancien (ancêtre de SVN)
  * [[:CVS_Server]] : Tutoriel sur la création d'un serveur CVS
  * [[:Subversion]] - Gestionnaire de versions (aussi appelé SVN)
  * [[:Trac]] - Environnement de suivi de projet technique basé sur [[:Subversion]]

**Système distribué** : Basé sur le modèle d'égal à égal, chaque machine est responsable de sa partie. Tant que l'on travaille sur sa partie, il n'est pas nécessaire d'avoir une connexion. Par contre pour se synchroniser avec une branche extérieure, il est nécessaire d'avoir un accès à cette branche.
  * [[:git]] - Gestionnaire de versions créé par Linus Torvalds et très répandu.
  * [[:bzr|Bazaar]] - Gestionnaire de versions distribuées, développé par [[:Canonical]]
  * [[:hg_mercurial]] - Gestionnaire de versions distribuées
  
==== Outils de comparaison de fichiers ====

  * [[:diff]] - outil de comparaison de fichiers et de création de patchs.
  * [[:sdiff]] - outil de comparaison de fichiers côte à côte.
  * [[:meld]] - outil graphique qui compare vos fichiers et dossiers.
  * [[http://diffuse.sourceforge.net/|diffuse]] - outil graphique de comparaison de fichiers. **(Paquet non disponible sur [[focal|Ubuntu 20.04]]**((https://packages.ubuntu.com/search?suite=default&section=all&arch=any&searchon=names&keywords=diffuse)).)
  * [[https://sourceforge.net/projects/tkdiff/|tkdiff]] - outil graphique (interface X11) de comparaison de fichiers.
  * [[http://furius.ca/xxdiff/|xxdiff]] - outil graphique (interface X11) de comparaison de fichiers et de dossiers. **(Paquet non disponible sur [[focal|Ubuntu 20.04]]**((https://packages.ubuntu.com/search?suite=default&section=all&arch=any&searchon=names&keywords=xxdiff)).)
  * [[https://apps.kde.org/kompare/|kompare]] - outil graphique de comparaison de fichiers et dossiers.
  * [[:vimdiff]] - outil de comparaison de fichiers.
  * [[:gvimdiff]] - outil graphique de comparaison de fichiers.
  * [[https://apps.kde.org/kdiff3/|kdiff3]] - outil graphique de comparaison et de merge (fusionnement) de fichiers et dossiers.
  * [[https://sourcegear.com/diffmerge/#|diffmerge]] - outil graphique de comparaison et de merge (fusionnement).

==== UML ====
//Voir la page [[:uml|page sur UML]]//

==== XML ====
//Voir la page [[:Xslt]] - Les processeurs XSLT.//

===== IDE (Environnement de Développement Intégré) =====
//Les IDE sont les principaux outils des développeurs. Ils bénéficient d'une [[:IDE|page de documentation dédiée]].//

==== Éditeur de texte====
Une alternative à l'utilisation d'un [[:IDE]] est l'emploi d'un éditeur de texte et d'outils complémentaires individuels.

//Voir la page [[:editeur_de_texte#editeurs_orientes_developpement|éditeurs orientés pour la programmation]].//

===== Système =====
   * [[:Terminal]]
   * [[:console]]
   * [[:liste des applications console]]
   * [[:tutoriel:script_shell|Script shell]] - Introduction au script shell

===== Langages généralistes ====
====Python====
   * [[:kiki]] : un outil pour tester et apprendre les expressions rationnelles de Python.
   * [[:idle]] : un éditeur facile à prendre en main.
   * [[https://sourceforge.net/projects/rur-ple/|RUR-PLE]] : un environnement d'apprentissage de la programmation Python de manière amusante, en programmant un robot.
   * [[https://inforef.be/swi/python.htm|Livres]] : Livres "Apprendre à programmer avec Python" de Gérard Swinnen sous licence Creative Commons
   * [[:IPython]] - Shell pour Python amélioré.
   * [[:Eric]] - Environnement de développement intégré adapté à la programmation Python et Ruby.
   * [[:SPE]] - Comment installer l'[[http://pythonide.stani.be/|éditeur Python SPE]].
   * [[:wingware|WingIDE]] - Environnement de développement professionnel dédié au développement de projets en Python.
   *[[:gEcrit]] [[http://gecrit.sourceforge.net/]] - Nouvel IDE pour Python. (n'est plus en développement)
   *[[:spyder|Spyder]] - **__S__cientific __PY__thon __D__evelopment __E__nvi__R__onment**
   *[[:PyCharm]] est un [[wpfr>Environnement de développement intégré]] (IDE) [[:python|Python]] développé et édité par JetBrains basé sur la plateforme [[:intellij|IntelliJ]].

//[[:python|Voir la page dédiée à python]]//

====Java====
   * [[:Java]] - Comment installer le support Sun Java //(JRE)// (installation, exécution des « .jar » et plugin de Mozilla Firefox) ?
   * [[:jbuilder2005|JBuilder 2005]] - Comment installer l'environnement de développement intégré Borland JBuilder 2005 ?
   * Tutoriel sur les bases de Java : [[http://openclassrooms.com/courses/apprenez-a-programmer-en-java| Apprenez à programmer en Java]] sur OpenClassrooms.
   * [[:eclipse]] - Comment installer l'IDE Eclipse pour java
   * [[:intellij_idea|IntelliJ IDEA]] - énormément complet, gestion [[:git|Git]] intégré, et terminal inclus

//[[:java|Voir la page dédiée à java]]//

==== Ruby ====
  * [[https://arcadia-ide.org/|Arcadia IDE]]  - IDE en TCL/TK et dedié à ruby, possède un debogueur. Accessible depuis gem ou sur rubyforge
  * [[:rubyonrails|Ruby on Rails]] : Rails est un framework open-source d'une grande qualité destiné aux développements d'applications et services web en Ruby. 

//[[:ruby|Voir la page dédiée au Ruby]]//

==== C et C++ ====
Cours **(fr)**:
  * [[https://www.youtube.com/channel/UCS2e0hEJMhwd6bNscS60xTg/videos|Formation en vidéo sur le langage C]] (par [[:utilisateurs/naoki|Naoki]])
  * [[http://fr.openclassrooms.com/informatique/cours/apprenez-a-programmer-en-c|Apprenez à programmer en C]]
  * [[http://fr.openclassrooms.com/informatique/cours/programmez-avec-le-langage-c|Le C++ facile]] (sur OpenClassrooms)

Nous vous invitons à consulter le [[:support programmation C]] mis à votre disposition :
  * [[:Qt-Creator]] - l'IDE par excellence pour développer en Qt : débogueur, auto-complétion, facilité de prise en main...

//[[:support_programmation_c|Voir la page dédié à la programmation C/C++]]//

==== Pascal ====
  * [[:Lazarus]] - IDE basé sur Free Pascal et semblable à Delphi
  * [[:fpc]] - Compilateur Free Pascal

==== Microsoft .NET / C# / VB .NET ====
Comment installer Mono? (implémentation libre de la plate-forme de développement Microsoft .NET)

//[[:mono|voir la page dédiée à Mono]]//

===== Web =====
Le développement web, création de pages internet et de script PHP, etc.

Voir aussi la [[:entreprise#creation_de_sites_web|sélection du portail "entreprise"]].

==== Maquettage de site avec un logiciel de mockup ====
Un logiciel de mockup est un outil bien pratique qu’il faut compter dans sa toolbox au moment de se lancer dans un projet de création de site web. C’est ce type de logiciel qui va vous permettre de concevoir les maquettes fonctionnelles ou wireframes des pages de votre site.
  * Balsamiq : outil payant mais vraiment facile à prendre en main ([[https://support.balsamiq.com/installation/linux/|Page en anglais]] expliquant comment l'installer avec Wine)
  * [[:pencilevolus|Pencil Evolution]] : outil gratuit

==== Création d'animations pour le web====
  * [[:SVG]] : création d'animations SVG
  * HTML5 - JavaScript (AJAX-JQuery)

==== Mise en ligne du site ====
//Voir le portail [[:FTP]].//

==== Vérification du rendu des sites créés====
//Voir le portail [[:navigateur]].//

==== Systèmes de gestion de contenu (CMS) ====
//Voir le portail [[:CMS]]//

==== Serveurs de développement web====
  * [[:XAMPP]] : un serveur web de développement facile
  * [[:RubyOnRails]]: Rails est un framework de développement d'applications web basé sur le concept Modèle-Vue-Controleur (MVC).
  * voir aussi le portail sur les [[:serveur|applications réseaux et serveurs]].

====Transformation C/C++ (ou autres ) vers javascript / html ====

Description du processus :
   - compiler code (c++ par exemple ) vers LLVM. Des compilateurs : llvm-gcc, clang, ...
   - Compiler le code LLVM vers javascript 
     -  [[https://emscripten.org/|Emscripten]]
     -  [[https://github.com/dmlap/llvm-js-backend|llvm js backend]] (à vérifier)

[[wpfr>HTML5]] implémente les websockets, et une plage mémoire pour des applications web.

[[wpfr>Google_Native_Client]] est un logiciel de sandbox qui permet l'exécution de code natif x86 dans un environnement confiné et contrôlé par un navigateur web. (source : Wikipédia)

Le compilateur [[https://ocsigen.org/js_of_ocaml/|Js_of_ocaml]] propose une compilation presque complète depuis l'OCaml vers le JavaScript. Tous les navigateurs récents sont compatibles.

==== HTML / XHTML / CSS ====

Le [[wpfr>WYSIWYG]] est le fait de voir directement ce que l'on édite au format final, c'est-à-dire que ce que vous éditez ressemble fortement au résultat final publié.

  * [[:Seamonkey]], éditeur HTML (Composer) et navigateur web ensemble;
  * [[:BlueGriffon]], éditeur HTML supportant les plus récentes technologies Web (HTML5, CSS3), avec des add-ons pour des fonctions de base payants ;
  * **[[wpfr>Dreamweaver]]**, éditeur HTML payant, s'installe parfaitement avec [[:Wine]].
  * [[:LibreOffice]] Writer, permet de créer des pages html simples et rapidement ;
  * [[:w3c-markup-validator]], validateur HTML ;
  * [[:Komodo Edit]], éditeur (HTML, CSS, RUBY, PYTHON…) simple et performant ;
  * [[:Sublime-Text]] éditeur léger reconnaissant  44 langages de programmation et permet l'ajout de fonctionnalités avec des plugins

==== PHP ====
===Serveur===
  * [[:apache]]
  * [[:lamp]] : installer un serveur LAMP (Linux, Apache, Mysql, Php)

===Éditeur===
  * [[:Bluefish]] : éditeur syntaxique orienté PHP. (interface GTK+) 

===Framework===
  * [[:symfony]] : framework PHP très en vogue
  * [[https://www.laravel.com/|Laravel]] : framework PHP riche et très populaire
  * Jelix : framework PHP français assez léger et assez simple d'utilisation
  * [[:zend-framework|Zend Framework]] : Zend Framework est un framework open-source d'une grande qualité destiné aux développements d'applications web et de services web avec PHP.
  * [[https://www.codeigniter.com/|CodeIgniter]] : un framework très léger et plus facile à prendre en main que Symphony et ZenFramework.
  * [[:FuelPHP]] : un successeur pour CodeIgniter ? (voir [[http://www.novius-labs.com/quel-framework-choisir-nous-votons-fuelphp,29.html|l'article de Novius labs]])
  * [[wpfr>Atomik_Framework]]: le petit dernier, super léger ... peut-être trop. le projet n'est plus en développement depuis 2014.

=== Packages ===
  * [[https://getcomposer.org|Composer]] : Gestionnaire de package.
  * [[https://packagist.org|Packagist]] : regroupe des packages utilisable avec composer

==== NodeJs ====
Basé sur JavaScript [[:nodejs]] est un environnement d'exécution exécuté coté serveur.

===== Le développement d'applications =====
Cette partie concerne aussi bien la simple compilation, la programmation de petits programmes que la création de programmes ambitieux !

==== Compiler un programme ====
  * [[:compilation|Compilation]] - Indique comment installer les compilateurs C, C++, Java, Fortran, Pascal et Ocaml.
  * [[:tutoriel:compilation|Compilation de logiciels]]

==== Création de paquets .deb ====
Les [[:deb|paquets .deb]] sont les "installeurs" de programmes d'Ubuntu, ces pages vous expliquent comment les créer.

  * [[:projets:ecole:paquets|Comment créer un paquet .deb ?]]
  * [[:tutoriel:creer_un_paquet|Comment créer un paquet à partir de sources compilables ?]]
  * [[:tutoriel:creer_un_meta_paquet|Comment créer un méta-paquet DEB ?]]

====Internationaliser un programme====

Voir le tutoriel [[:tutoriel:internationaliser_un_logiciel_libre|Comment internationaliser un logiciel libre ?]].

====Développement Android====
  * [[https://github.com/ubuntu/ubuntu-make/|Ubuntu-make]] : Projet pour rendre plus simple la configuration d'un environnement de développement pour Android.

**Android Studio**
  * [[https://developer.android.com/studio|Android Studio]]: Atelier logiciel d'applications natives Android proposé par Google
 **Voir aussi **
  * [[android_sdk|Développer des applications pour Android]]
  * [[android |Page « Android » de cette Documentation]]
  * [[https://developer.android.com/ |documentation officielle Android]]

===== Développement de jeux vidéo =====
//Voir la page [[:developpement de jeux video|Développement de jeux vidéo]]//

===== Logiciels et utilitaires (par langages) =====
==== Les outils de base de données ====
  * [[:DbVisualizer]] - Outil générique de connexion aux bases de données

==== Cross compilation Linux - Windows ====
//[[:/tutoriel/comment_utiliser_mingw32_pour_faire_des_executables_windows | MingW32]] - Cross Compilateur permettant le développement sous Linux d'applications **C** à exécuter sous Windows//

==== Calcul formel ====
   *[[:Maxima]]
   *[[:GIAC-Xcas]]
   *[[:Yacas]]
   *[[:Pari]]
   *[[:Euler]]
   *[[:SageMath]]

==== Virtualisation ====

Les outils présentés ici sont utilisés pour virtualiser un environnement tel qui peut l'être dans les applications client/serveur.

  * [[:docker]] - utilise le noyau de l’hôte pour virtualiser des services ou des applications dans des conteneurs.
  * [[:vagrant]] - utilise [[:virtualbox]] ou [[vmware|VMware]] pour émuler une "box" (l'image d'une machine pré-paramétré) [[wpfr>Vagrant]]

==== Autres ====
  * [[:sdl]] - une bibliothèque permettant de réaliser des fenêtres, elle possède d'autres modules tel que l'image, le son, les polices d'écriture via freetype2.
  * [[:fmod]] - Comment utiliser la fmod en C/C++ ?
  * [[:programmation_sur_livecd|programmation_sur_livecd]] - Comment programmer sur un live CD ?

===== Les outils d'analyse et d'optimisation du code =====
//Voir la page [[:analyseur_de_code_static|analyseurs de code static]]//

===== Reverse engineering =====
==== Si vous pratiquez le reverse engineering ====

  *[[android_sdk#java_decompileur_project]], Observer du code JAVA par décompilation.

=====Ressources=====
====Liens externes====

  * [[wpfr>Liste des algorithmes]] / [[https://en.wikipedia.org/wiki/List_of_algorithms|List of algorithm]]
  * [[https://www.developpez.com/|www.developpez.com]] : le site propose de nombreux tutoriels de programmation à la fois sur les langages Web et les langages applicatifs.
  * [[http://devdocs.io|devdocs.io]] : propose les documentations en anglais de nombreux languages tel que HTML, PHP, C, C++...

===== Pages concernant la programmation =====
{{backlinks>programmation}}
----
> NE PAS SUPPRIMER -- YoBoY

{{topic>programmation}}
----
===== liens à corriger =====
FIXME les [[:developpement?do=backlink|pages pointant vers l'ancienne page "developpement"]] doivent être corrigées pour pointer vers la page "programmation".

----

//Contributeurs : [[utilisateurs:Fabien26]].// [[utilisateurs:Phossele]], [[utilisateurs:darkjam]], [[utilisateurs:Tinato]],