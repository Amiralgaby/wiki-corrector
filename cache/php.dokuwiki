{{tag>Bionic Focal php serveur}}

====== PHP ======

PHP (acronyme récursif pour "**P**HP: **H**ypertext **P**reprocessor", PHP étant au départ l'acronyme de **P**ersonal **H**ome **P**age) est un langage de programmation principalement utilisé pour produire des pages web de manière dynamique. Il est donc, dans la très grande majorité des cas, couplé à un serveur HTTP (comme [[:apache2|Apache]]) pour la communication avec le client web.

La production de [[:cms|pages web dynamiques]] pouvant nécessiter une interaction avec une base de données, PHP est souvent utilisé en association avec un système de gestion de base de données (SGBD) comme [[:MySQL]]..

===== Installation =====

<note tip>Pour installer PHP avec Apache et MySQL ou MariaDB, reportez-vous de préférence à la [[:LAMP|page LAMP]].</note>

Il existe 4 manières d'installer et utiliser PHP sur Ubuntu :
  * en ligne de commande (ou donc dans un [[:tutoriel:script_shell|script shell]]) via [[:tutoriel:comment_installer_un_paquet|l'installation du paquet]] **[[apt>php-cli]]** (//cli// pour //command-line interface//)
  * avec un serveur HTTP en [[wpfr>FastCGI|script FastCGI]] via [[:tutoriel:comment_installer_un_paquet|l'installation du paquet]] **[[apt>php-fpm]]** (//fpm// pour //FastCGI Process Manager//)
  * avec un serveur HTTP en script CGI via [[:tutoriel:comment_installer_un_paquet|l'installation du paquet]] **[[apt>php-cgi]]** (c'est une méthode historique qui n'a plus trop d'intérêt)
  * en [[:apache2#mod_php|module d'Apache]] via [[:tutoriel:comment_installer_un_paquet|l'installation du paquet]] **[[apt>libapache2-mod-php]]**

Pour un [[:web#serveurs|serveur web]] on utilisera principalement PHP soit en //FastCGI//, soit en //module d'Apache//.

Si on utilise [[:apache2|Apache]] et pour un site à trafic ordinaire, on utilisera de préférence le module d'Apache parce qu'il est beaucoup plus simple à mettre en place et à administrer.

Pour un trafic à plusieurs milliers de visites par heure, mieux vaut utiliser PHP en FastCGI (parce qu'il est capable de traiter plusieurs processus simultanément).
Avec un serveur HTTP autre que Apache, on utilise aussi PHP en FastCGI : il n'existe pas de module PHP pour [[:Nginx]] ou [[:Lighttpd]].

Chacun de ces paquets installera toutes les dépendances nécessaires au fonctionnement de PHP sur votre machine.

PHP est alors installé. Cependant la plupart des scripts PHP ([[:CMS]], forums, applications web en tout genre) utilisent des modules de PHP pour bénéficier de certaines fonctionnalités.

==== Ajout d'une autre version de PHP ====
Il peut être utile de disposer de plusieurs version de PHP sur une machine de développement (sur un serveur aussi… mais on aura plutôt recours à [[:docker]]), par exemple pour travailler tantôt avec une application ancienne avec un framework ou un CMS nécessitant un php7.2 par exemple, et tantôt avec la dernière version (php8.1 par exemple) pour démarrer ou mettre à niveau un développement.

La bonne pratique pour faire cela est d'utiliser [[:PHPBrew]]

===== Modules =====

Les modules de PHP lui permettent d'étendre ses fonctionnalités. De très nombreux modules PHP sont disponibles sur les dépôts officiels d'Ubuntu.

Vous pouvez installer rapidement les modules les plus courants : **[[apt>php-curl,php-gd,php-intl,php-json,php-mbstring,php-xml,php-zip|php-curl php-gd php-intl php-json php-mbstring php-xml php-zip]]**

==== Modules installés par défaut ====

[[https://packages.ubuntu.com/focal/amd64/php7.4-common/filelist|Certains modules]] sont installés par défaut avec PHP via le paquet **[[apt>php-common]]**.

  * [[http://php.net/manual/fr/book.calendar.php|Calendar]]
  * [[http://php.net/manual/fr/book.ctype.php|ctype]]
  * [[http://php.net/manual/fr/book.exif.php|Exif]]
  * [[http://php.net/manual/fr/book.fileinfo.php|FileInfo]]
  * [[http://php.net/manual/fr/book.ftp.php|FTP]]
  * [[http://php.net/manual/fr/book.gettext.php|Gettext]]
  * [[http://php.net/manual/fr/book.iconv.php|iconv]]
  * [[http://php.net/manual/fr/book.pdo.php|PHP Data Objects]]
  * [[http://php.net/manual/fr/book.phar.php|Phar]]
  * [[http://php.net/manual/fr/book.shmop.php|Mémoire partagée]]
  * [[http://php.net/manual/fr/book.sockets.php|Sockets]]
  * [[http://php.net/manual/fr/book.tokenizer.php|Tokenizer]]

D'autres modules peuvent être installés individuellement via [[:APT]].

==== Modules courants ====

Voici une liste des modules les plus couramment utilisés :

^ Nom ^ Paquet ^ Description ^
| [[http://php.net/manual/fr/book.curl.php|cURL]] | [[apt>php-curl]] | Support de [[wpfr>cURL]], qui permet de se connecter et de communiquer avec d'autres serveurs en HTTP, HTTPS, FTP, gopher, telnet, DICT, file ou LDAP. |
| [[http://php.net/manual/fr/book.image.php|GD]] | [[apt>php-gd]] | Outil de traitement d'images. |
| [[http://php.net/manual/fr/book.intl.php|intl]] | [[apt>php-intl]] | Fonctions d'internationalisation. |
| [[http://php.net/manual/fr/book.json.php|JSON]] | [[apt>php-json]] | Implémente le format d'échange de données [[wpfr>JavaScript Object Notation]]. |
| [[http://php.net/manual/fr/book.mcrypt.php|Mcrypt]] | [[apt>php-mcrypt]] | Implémente des algorithmes de chiffrement. Ce module **n'existe plus depuis PHP 7.2** ([[:Bionic]]). Il faut maintenant utiliser [[http://php.net/manual/fr/book.sodium.php|Sodium]] ou [[http://php.net/manual/fr/book.openssl.php|OpenSSL]]. |
| [[http://php.net/manual/fr/book.mbstring.php|mbstring]] | [[apt>php-mbstring]] | Implémente des jeux de  caractères très grands pour certaines langues. |
| [[http://php.net/manual/fr/book.xml.php|XML]] | [[apt>php-xml]] | Analyseur syntaxique XML (permet à PHP de "comprendre" du XML ou du HTML). |
| [[http://php.net/manual/fr/book.zip.php|Zip]] | [[apt>php-zip]] | Offre la possibilité de lire et d'écrire des archives compressées ZIP, et d'accéder aux fichiers et dossiers s'y trouvant. |
| [[http://php.net/manual/fr/book.imagick.php|ImageMagick]] | [[apt>php-imagick]] | Outil de traitement d'images. |
| [[http://php.net/manual/fr/book.imap.php|IMAP]] | [[apt>php-imap]] | Implémentations des protocoles IMAP, NNTP, et POP3 pour les [[:courriel|courriels]]. |
| [[http://php.net/manual/fr/book.apcu.php|APCu]] | [[apt>php-apcu]] | Fournit des fonctionnalités supplémentaires au système de cache implémenté nativement dans PHP ([[#OPcache]]). |

==== Association avec un serveur de base de données ====

PHP permet de se connecter à différents types de serveurs de base de données. Pour cela il est également nécessaire d'installer des modules complémentaires.
<note important>Il est important de souligner que l'installation d'un de ces modules PHP est indépendante de l'installation du serveur de base de données correspondant (hormis SQLite), ces serveurs n'étant pas nécessairement déployés localement.</note>

^ Nom ^ Paquet ^ Description ^
| [[http://php.net/manual/fr/ref.pdo-mysql.php|MySQL (PDO)]] et [[http://php.net/manual/fr/book.mysqli.php|MySQLi]] | [[apt>php-mysql]] | support de [[:mysql|MySQL]] ou [[:mariadb|MariaDB]] |
| [[http://php.net/manual/fr/book.pgsql.php|PostgreSQL]] | [[apt>php-pgsql]] | support de [[:postgresql|PostgreSQL]] |
| [[http://php.net/manual/fr/book.sqlite.php|SQLite]] | [[apt>php-sqlite3]] | support de [[:sqlite|SQLite]] |
| [[http://php.net/manual/fr/set.mongodb.php|MongoDB]] | [[apt>php-mongodb]] | support de [[:MongoDB]] |

==== Lister les modules ====

Vous pouvez lister la plupart des modules PHP disponibles dans les dépôts officiels avec la commande
<code>apt list php-\*</code>

Vous pouvez lister les modules installés sur votre système grâce à la commande
<code>php -m</code>

Attention cependant au fait que les modules PHP activés en ligne de commande et via votre serveur HTTP ne sont pas nécessairement les mêmes. La fonction PHP //[[#phpinfo|phpinfo()]]// vous montrera les modules activés sur votre serveur web.


==== Activer / désactiver les modules ====

Les modules sont en principe activés automatiquement lors de l'installation des paquets correspondants. Cependant au fur et à mesure des changements de configuration on peut se retrouver avec des modules installés mais pas activés.

On peut activer / désactiver un module respectivement avec les commandes ''phpenmod'' et ''phpdismod''.\\ 
Par exemple :
<code>sudo phpenmod mbstring</code>
Par défaut la modification s'applique pour toutes les versions de PHP installées et toutes les SAPI utilisées (CLI, Apache, FPM, etc.)
===== Configuration =====

La configuration de PHP se fait via un fichier ''php.ini''.

Pour le [[:apache2#mod_php|module PHP d'Apache]], le chemin d'accès au fichier ''php.ini'' sera généralement :
  * sous [[:Xenial]] (Ubuntu 16.04) : **/etc/php/7.0/apache2/php.ini**
  * sous [[:Bionic]] (Ubuntu 18.04) : **/etc/php/7.2/apache2/php.ini**
  * sous [[:Focal]] (Ubuntu 20.04) : **/etc/php/7.4/apache2/php.ini**

Les fichiers de configuration ne sont pas les mêmes pour utiliser PHP en ligne de commande : **/etc/php/7.0/cli/php.ini**\\
ou en script [[http://php.net/manual/fr/install.fpm.php|FastCGI]] : **/etc/php/7.0/fpm/php.ini**\\

Ceci explique parfois des différences de comportement entre PHP exécuté par Apache, et manuellement en ligne de commande.

==== Activer le rapport d'erreur =====

Si vous développez une application en local, il est souvent utile de visualiser les messages d'erreurs directement sur votre page web. Ces erreurs sont cependant généralement aussi accessibles dans le journal d'erreur du serveur HTTP (//[[:apache2#problemes_courants|/var/log/apache2/error.log]]// pour [[:apache2|Apache]]).

Pour afficher les erreurs, avec Apache vous pouvez par exemple définir des règles dans un fichier //[[:apache2#.htaccess]]// à la racine de votre [[:apache2#hotes_virtuels|hôte virtuel]] :

<file - .htaccess>php_flag display_errors on
php_value error_reporting "E_ALL"</file>

//[[http://php.net/manual/fr/function.error-reporting.php|error_reporting]]// définit le niveau d'erreur que vous souhaitez afficher.

Le niveau d'erreur E_ALL affiche **toutes** les erreurs, y compris celles concernant des fonctionnalités dépréciées (qui seront désactivées dans des versions futures de PHP) ou des erreurs strictes, qu'on n'a pas forcément envie de corriger.\\
On peut désactiver l'affichage de ces messages pas toujours très importants en remplaçant cette ligne par celle-ci :
<file>php_value error_reporting "E_ALL & ~E_NOTICE & ~E_STRICT"</file>


Les directives ''display_errors'' et ''error_reporting'' sont aussi accessibles pour définir l'affichage des erreurs globalement, directement dans votre fichier ''php.ini''.\\
Pour PHP 7.0 :
<file - /etc/php/7.0/apache2/php.ini>...
display_errors=on
error_reporting=E_ALL & ~E_NOTICE & ~E_STRICT
...</file>

==== Désactiver le rapport d'erreur =====

Pour un site en production, mieux vaut désactiver l'affichage des erreurs et se référer uniquement au log d'erreur du serveur HTTP :
<file - .htaccess>php_flag display_errors off</file>

==== phpinfo() ====

La fonction //[[http://php.net/manual/fr/function.phpinfo.php|phpinfo()]]// permet d'obtenir des informations sur sa configuration de PHP en situation. C'est utile en particulier parce que les configurations de PHP peuvent être différentes entre son utilisation en ligne de commande, en module d'apache ou en fastCGI.

La méthode est de créer un fichier ''phpinfo.php'' à la racine de l'hôte virtuel, donc par ex. ''/var/www/example/phpinfo.php'' contenant ceci :

<file phpinfo.php>
<?php phpinfo(); ?>
</file>

On appelle ensuite ce script depuis un navigateur web : [[http://example/phpinfo.php]]

==== OPcache ====

[[http://php.net/manual/fr/book.opcache.php|OPcache]] était à la base un module permettant d'implémenter des fonctionnalités de cache à PHP, ce qui permet d'accélérer l'execution des scripts et d'alléger leur charge côté serveur.
Il est désormais intégré nativement à PHP depuis la version 5.5.

OPcache est activé par défaut sur Ubuntu.

===== Problèmes courants =====

<note tip>
Si vous utilisez Apache, consultez également les [[:apache2#problemes_courants|problèmes courants liés à ce serveur HTTP]] afin d'obtenir des solutions pour les erreurs 403, 404, 500, 503, etc.
</note>

==== Page blanche ====

Une page blanche inattendue affichée immédiatement indique très certainement que l'affichage des retours d'erreur sur la page n'est pas activé.

Vous pouvez [[#activer_le_rapport_d_erreur|activer le rapport d'erreur]], ou consulter le log d'erreur de votre serveur HTTP pour en savoir plus sur le problème rencontré.

==== Code source visible dans le navigateur ====

Ce problème survient lorsque PHP n'est pas interprété par le serveur web. Le serveur envoie dans ce cas au navigateur directement le code PHP comme s'il s'agissait de texte, et le navigateur cherche généralement à l'interpréter comme du HTML, puisque c'est ce qu'il attend par défaut.
En plus de rendre l'application ou le site non fonctionnel, cela peut poser des problèmes de sécurité (fuite d'informations éventuellement sensibles).

Il faut dans ce cas revoir votre installation de PHP et sa configuration avec votre serveur Web.

Si vous utilisez [[:apache2#mod_php|PHP en tant que module d'Apache]] :
  * vérifiez l'installation du paquet [[apt>libapache2-mod-php]]
  * s'il est bien installé, activez le module :

sur [[:focal|Jammy 22.04]] :
<code>sudo a2enmod php8.1</code>
sur [[:focal|Focal 20.04]] :
<code>sudo a2enmod php7.4</code>
sur [[:bionic|Bionic 18.04]] :
<code>sudo a2enmod php7.2</code>

Puis relancez Apache :
<code>sudo systemctl restart apache2</code>

==== Conflits potentiels entre plusieurs versions de PHP ====

Il est possible que plusieurs versions de PHP soient installées simultanément, par ex. après une mise à jour majeure d'ubuntu si vous avez spécifié le numéro de version de PHP lors de l'installation des paquets, ou si vous avez ajouté un PPA exotique pour installer une version spécifique de PHP (le PPA d'//Ondřej Surý// pour ne pas le nommer, mauvaise idée, il vaut mieux dans ce cas utiliser [[:docker_lamp|docker]], ou éventuellement [[:PHPBrew]]).\\
Cela peut par ex. rendre des modules de PHP inaccessibles alors qu'ils semblent bien installés.

Vous pouvez vérifier cela avec cette commande :
<code>apt list \*php\* --installed</code>
Si vous voyez apparaître plusieurs versions de PHP, par ex. ''php7.2'' et ''php7.0'' ou ''php5.6'', vous pouvez avoir des problèmes((https://forum.ubuntu-fr.org/viewtopic.php?id=2029875)). Dans ce cas supprimez les versions de PHP qui ne correspondent pas à la version proposée par les dépôts officiels d'ubuntu (''php7.4'' sur [[:focal|Focal 20.04]], ''php7.2'' sur [[:bionic|Bionic 18.04]], ''php7.0'' sur [[:xenial|Xenial 16.04]]), [[:ppa#la_methode_propre_les_paquets_de_gestion_automatiqueppa-purge_launchpad-getkeys|désinstallez le PPA exotique]] si il existe, puis réinstallez les paquets absents si nécessaire sans spécifier de numéro de version ([[apt>libapache2-mod-php]], etc). Reportez-vous à [[#ajout_d_une_autre_version_de_php]] pour disposer de plusieurs version de PHP.

La commande, ici sous [[:bionic]], doit retourner un message similaire, sauf si vous avez volontairement installé plusieurs versions :
<code>
sudo update-alternatives --config php
Il n'existe qu'une « alternative » dans le groupe de liens php (qui fournit /usr/bin/php) : /usr/bin/php7.2
Rien à configurer.
</code>

===== Voir aussi =====

  * **(en)** [[https://www.php.net/|site officiel]]
  * [[http://php.net/manual/fr/|documentation officielle]]
  * [[https://www.youtube.com/watch?v=US9JCsnAVTU|vidéo expliquant en quoi PHP est différent des autres langages de programmation]]

//Contributeurs : [[utilisateurs:krodelabestiole]], [[utilisateurs:bcag2]]//